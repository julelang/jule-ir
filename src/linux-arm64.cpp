// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 12/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1ab1e9538_comptimeRangeKind{};
struct _1ab23eb88_Importer{};
struct _1ab2e606e_Kind{};
struct _1ab31605b_Lookup{};
struct _1ac9a397d_CommonFlag{};
struct _1a7aea888_Range16;
struct _1a7aeadb6_Range32;
struct _1a7aeb36c_RangeTable;
struct _1a7be5eb1_acceptRange;
struct _1a7c4c7ed_StrBuilder;
struct _1a7c59255_lazyBuff;
struct _1d779b97c_DirEntry;
struct _1d779bbe1_Directory;
struct _1d779d7c5_File;
struct _1d77a08b5_Status;
struct _1a7e12e9c_cmdAttrs;
struct _1a7d05a93_Log;
struct _1a8ccb9be_floatInfo;
struct _1a8ccc4d6_decimalSlice;
struct _1a8cde73a_leftCheat;
struct _1a8ce0263_decimal;
struct _1a8d04e26_Const;
struct _1ab182e72_Token;
struct _1ab18873b_File;
struct _1ab18a85e_kindPair;
struct _1ab191975_lex;
struct _1ab1965b2_Ast;
struct _1ab19756e_Node;
struct _1ab19798c_Directive;
struct _1ab198570_TypeDecl;
struct _1ab198b7a_IdentTypeDecl;
struct _1ab198e77_SubIdentTypeDecl;
struct _1ab19931d_NamespaceTypeDecl;
struct _1ab19961a_SptrTypeDecl;
struct _1ab1999a0_SlcTypeDecl;
struct _1ab199c9c_TupleTypeDecl;
struct _1ab19a099_PtrTypeDecl;
struct _1ab19a83b_ArrTypeDecl;
struct _1ab19b089_MapTypeDecl;
struct _1ab19b463_RetTypeDecl;
struct _1ab19c8a4_Expr;
struct _1ab19cba1_RangeExpr;
struct _1ab19d278_UseExpr;
struct _1ab19d575_TupleExpr;
struct _1ab19d94e_LitExpr;
struct _1ab19dd28_UnsafeExpr;
struct _1ab19e2ce_IdentExpr;
struct _1ab19e961_UnaryExpr;
struct _1ab19ed3a_VariadicExpr;
struct _1ab1a0214_CastExpr;
struct _1ab1a05dd_NsSelectionExpr;
struct _1ab1a09b7_SubIdentExpr;
struct _1ab1a0e6d_BinaryExpr;
struct _1ab1a15cd_FnCallExpr;
struct _1ab1a20c3_FieldExprPair;
struct _1ab1a28ed_StructLit;
struct _1ab1a2da4_BraceLit;
struct _1ab1a36ce_KeyValPair;
struct _1ab1a3dc7_SliceExpr;
struct _1ab1a4867_IndexingExpr;
struct _1ab1a4ec7_SlicingExpr;
struct _1ab1a52c4_Constraint;
struct _1ab1a577a_GenericDecl;
struct _1ab1a5b54_LabelSt;
struct _1ab1a602d_GotoSt;
struct _1ab1a632a_FallSt;
struct _1ab1a698a_AssignLeft;
struct _1ab1a701d_AssignSt;
struct _1ab1a7e31_Stmt;
struct _1ab1a8591_ScopeTree;
struct _1ab1a8ccd_ParamDecl;
struct _1ab1aa230_FnDecl;
struct _1ab1ab3da_VarDecl;
struct _1ab1ab7b4_RetSt;
struct _1ab1ac034_Iter;
struct _1ab1ac85e_WhileKind;
struct _1ab1ad266_RangeKind;
struct _1ab1ad640_BreakSt;
struct _1ab1ada19_ContSt;
struct _1ab1adec0_If;
struct _1ab1ae399_Else;
struct _1ab1ae850_Conditional;
struct _1ab1b008c_TypeAliasDecl;
struct _1ab1b0543_Case;
struct _1ab1b0d5c_MatchCase;
struct _1ab1b1676_UseDecl;
struct _1ab1b1b2c_EnumItemDecl;
struct _1ab1b26dd_EnumDecl;
struct _1ab1b3018_TypeEnumItemDecl;
struct _1ab1b3678_TypeEnumDecl;
struct _1ab1b3942_FieldDecl;
struct _1ab1b4338_StructDecl;
struct _1ab1b4a75_TraitDecl;
struct _1ab1b51d5_Impl;
struct _1ab1b657c_Field;
struct _1ab1b855c_Operators;
struct _1ab1b9470_Struct;
struct _1ab1bb64d_FieldIns;
struct _1ab1c119c_OperandExprModel;
struct _1ab1c1697_BinaryExprModel;
struct _1ab1c1a71_UnaryExprModel;
struct _1ab1c209e_StructArgExprModel;
struct _1ab1c2445_StructLitExprModel;
struct _1ab1c2742_AllocStructLitExprModel;
struct _1ab1c2cc5_CastingExprModel;
struct _1ab1c3677_FnCallExprModel;
struct _1ab1c3a51_SliceExprModel;
struct _1ab1c4007_IndexingExprModel;
struct _1ab1c43d1_AnonFnExprModel;
struct _1ab1c47aa_KeyValPairExprModel;
struct _1ab1c4c61_MapExprModel;
struct _1ab1c52e4_SlicingExprModel;
struct _1ab1c5877_TraitSubIdentExprModel;
struct _1ab1c6218_StructSubIdentExprModel;
struct _1ab1c66be_StructStaticIdentExprModel;
struct _1ab1c6a98_ArrayExprModel;
struct _1ab1c6d95_TupleExprModel;
struct _1ab1c726e_BuiltinOutCallExprModel;
struct _1ab1c7648_BuiltinOutlnCallExprModel;
struct _1ab1c7a22_BuiltinNewCallExprModel;
struct _1ab1c7deb_BuiltinPanicCallExprModel;
struct _1ab1c83a2_BuiltinAssertCallExprModel;
struct _1ab1c8858_BuiltinMakeCallExprModel;
struct _1ab1c8c32_BuiltinAppendCallExprModel;
struct _1ab1c902e_BuiltinLenCallExprModel;
struct _1ab1c932b_BuiltinCapCallExprModel;
struct _1ab1c9705_BuiltinDeleteCallExprModel;
struct _1ab1c9ace_BuiltinCopyCallExprModel;
struct _1ab1c9ea8_BuiltinErrorCallExprModel;
struct _1ab1c5a64_SizeofExprModel;
struct _1ab1ca6d4_AlignofExprModel;
struct _1ab1ca9d1_RuneExprModel;
struct _1ab1caccd_IntegratedToStrExprModel;
struct _1ab1cb1a7_BackendEmitExprModel;
struct _1ab1cb4a4_FreeExprModel;
struct _1ab1cc1a8_RetType;
struct _1ab1cc939_Param;
struct _1ab1ce40d_Fn;
struct _1ab1d1366_ParamIns;
struct _1ab1d2312_FnIns;
struct _1ab1d54d0_ReferenceStack;
struct _1ab1d69ed_Pass;
struct _1ab1db5b3_symbolBuilder;
struct _1ab1e26da_Trait;
struct _1ab1e4379_EnumItem;
struct _1ab1e4de6_Enum;
struct _1ab1e6029_TypeEnumItem;
struct _1ab1e6601_TypeEnum;
struct _1ab1e9758_comptimeRange;
struct _1ab1ea22b_comptimeStructField;
struct _1ab1ebddc_comptimeStructFields;
struct _1ab1ed4d7_comptimeStatic;
struct _1ab200198_comptimeStatics;
struct _1ab201793_comptimeEnumField;
struct _1ab202b3a_comptimeEnumFields;
struct _1ab204235_comptimeParam;
struct _1ab20649b_comptimeParams;
struct _1ab207a96_comptimeTypeInfos;
struct _1ab209191_comptimeTypeInfo;
struct _1ab2106a3_comptimeValue;
struct _1ab213002_comptimeFiles;
struct _1ab2145ec_comptimeFile;
struct _1ab218a0d_constraintChecker;
struct _1ab21ad62_Impl;
struct _1ab2212b8_Scope;
struct _1ab2216d6_If;
struct _1ab2219d3_Else;
struct _1ab221e01_Conditional;
struct _1ab2221ed_InfIter;
struct _1ab2226a4_WhileIter;
struct _1ab223100_RangeIter;
struct _1ab223485_ContSt;
struct _1ab22385e_BreakSt;
struct _1ab223b5b_Label;
struct _1ab224035_GotoSt;
struct _1ab22440e_Postfix;
struct _1ab2248b5_Assign;
struct _1ab224c8e_MultiAssign;
struct _1ab2253ee_Match;
struct _1ab226037_Case;
struct _1ab226631_FallSt;
struct _1ab2269b6_RetSt;
struct _1ab227126_scopeLabel;
struct _1ab2276a9_scopeGoto;
struct _1ab2285bc_scopeChecker;
struct _1ab23b602_directiveChecker;
struct _1ab242a9d_ImportInfo;
struct _1ab2459c4_Package;
struct _1ab262370_commonSemaMeta;
struct _1ab262e97_Sema;
struct _1ab281cda_missingRetChecker;
struct _1ab2841e9_IterRelation;
struct _1ab2853a4_Var;
struct _1ab2861b8_FuncPattern;
struct _1ab29c7ea_typeCompatibilityChecker;
struct _1ab29e599_assignTypeChecker;
struct _1ab2a1216_dynamicTypeAnnotation;
struct _1ab2a6073_fnCallArgChecker;
struct _1ab2a8eaa_structLitChecker;
struct _1ab2aac8c_rangeChecker;
struct _1ab2ad4ed_retTypeChecker;
struct _1ab2b0863_SymbolTable;
struct _1ab2b5c0e_Data;
struct _1ab2b6d53_Value;
struct _1ab2b7903_Eval;
struct _1ab2d612a_unaryEval;
struct _1ab2d80b6_binaryEval;
struct _1ab2e4b3e_InsGeneric;
struct _1ab2e5733_TypeAlias;
struct _1ab2e6525_TypeKind;
struct _1ab2ed6e7_TypeSymbol;
struct _1ab2ee0ee_Prim;
struct _1ab302b2a_Sptr;
struct _1ab3035ed_Slc;
struct _1ab3041e2_Tuple;
struct _1ab304c92_Map;
struct _1ab30591e_Arr;
struct _1ab3063e2_Ptr;
struct _1ab3073e3_referencer;
struct _1ab3083d3_typeChecker;
struct _1ab311067_identTypeLookup;
struct _1abca8503_FileInfo;
struct _1abcee208_stmt;
struct _1abceea99_scopeParser;
struct _1abd0c4be_exprBuilder;
struct _1abd19960_assignInfo;
struct _1abd1cd5e_parser;
struct _1abd3003b_typeBuilder;
struct _1ab4e75c2_CompileInfo;
struct _1ab4e8a9b_directiveEval;
struct _1abd34172_JuleImporter;
struct _1abd39386_OrderedDefines;
struct _1abd395ea_defineOrderer;
struct _1abe631c4_liveTable;
struct _1abe978bd_scopeDeadCode;
struct _1abe9bb25_exprDeadCode;
struct _1ab3d9e32_SwapExprModel;
struct _1ab3da350_EmptyCompareExprModel;
struct _1ab3da64c_RefExprModel;
struct _1ab3dab7a_StrCompExprModel;
struct _1ab3db20d_MutSlicingExprModel;
struct _1ab3db50a_UnsafeBinaryExprModel;
struct _1ab3db807_UnsafeIndexingExprModel;
struct _1ab3dbc36_PushToSliceExprModel;
struct _1ab3dc110_AppendToSliceExprModel;
struct _1ab3dd2ba_scopeOptimizer;
struct _1ab3e4458_exprOptimizer;
struct _1abea3bd7_Optimizer;
struct _1abecb9bd_AnsiEscape;
struct _1abecd0eb_Logger;
struct _1ac916704_AbsTime;
struct _1ac916dca_Time;
struct _1ac83cd34_scopeCoder;
struct _1ac846eb4_exprCoder;
struct _1ac85c606_TestCoder;
struct _1ac8603c8_identCoder;
struct _1ac91e861_SerializationInfo;
struct _1ac91ee38_traitHash;
struct _1ac920312_traitCast;
struct _1ac9309e8_customType;
struct _1ac9315dc_typeCoder;
struct _1ac9399ad_resultCoder;
struct _1bcc10669_Flag;
struct _1bcc13eca_Flag;
struct _1bcc176c6_Flag;
struct _1bcc1ae16_Flag;
struct _1bcc1e612_Flag;
struct _1ac9a552e_FlagSet;
struct _1ac9a7eb0_argParser;
struct _1ac921379_ObjectCoder;
struct _1abe635ae_ObjectDeadCode;
struct _1abd36b36_IR;
struct _1ab1bc1ed_StructIns;
struct _1a7dad4db_Cmd;
struct _1a7aea888_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1a7aea888_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a7aea888_Range16 _other) { return !this->operator==(_other); }


};
struct _1a7aeadb6_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1a7aeadb6_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a7aeadb6_Range32 _other) { return !this->operator==(_other); }


};
struct _1a7aeb36c_RangeTable {
	jule::Slice<_1a7aea888_Range16> _field_R16;
	jule::Slice<_1a7aeadb6_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1a7be5eb1_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1a7be5eb1_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1a7be5eb1_acceptRange _other) { return !this->operator==(_other); }


};
struct _1a7c4c7ed_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1a7c59255_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _1d779b97c_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1d77a08b5_Status> _field_Stat;
	

	inline bool operator==(_1d779b97c_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1d779b97c_DirEntry _other) { return !this->operator==(_other); }


};
struct _1d779bbe1_Directory {
	

	inline bool operator==(_1d779bbe1_Directory _other) { return true; }

	inline bool operator!=(_1d779bbe1_Directory _other) { return !this->operator==(_other); }


};
struct _1d779d7c5_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_1d779d7c5_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1d779d7c5_File _other) { return !this->operator==(_other); }


};
struct _1d77a08b5_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_1d77a08b5_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d77a08b5_Status _other) { return !this->operator==(_other); }


};
struct _1a7e12e9c_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_1a7e12e9c_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1a7e12e9c_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1a7d05a93_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1a7d05a93_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1a7d05a93_Log _other) { return !this->operator==(_other); }


};
struct _1a8ccb9be_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1a8ccb9be_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a8ccb9be_floatInfo _other) { return !this->operator==(_other); }


};
struct _1a8ccc4d6_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1a8cde73a_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1a8cde73a_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a8cde73a_leftCheat _other) { return !this->operator==(_other); }


};
struct _1a8ce0263_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1a8ce0263_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a8ce0263_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a8d0a9cb_Eq(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0ad1c_Lt(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0b15d_LtEq(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0b49e_Gt(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0b7e0_GtEq(_1a8d04e26_Const*, _1a8d04e26_Const);
struct _1a8d04e26_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1a8d04e26_Const _other) { return _1a8d0a9cb_Eq(this, _other); }

	inline bool operator!=(_1a8d04e26_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a8d04e26_Const _other) { return _1a8d0b49e_Gt(this, _other); }

	inline jule::Bool operator>=(_1a8d04e26_Const _other) { return _1a8d0b7e0_GtEq(this, _other); }

	inline jule::Bool operator<(_1a8d04e26_Const _other) { return _1a8d0ad1c_Lt(this, _other); }

	inline jule::Bool operator<=(_1a8d04e26_Const _other) { return _1a8d0b15d_LtEq(this, _other); }


};
struct _1ab182e72_Token {
	jule::Ptr<_1ab18873b_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1ab182e72_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1ab182e72_Token _other) { return !this->operator==(_other); }


};
struct _1ab18873b_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Tokens;
	


};
struct _1ab18a85e_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1ab18a85e_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ab18a85e_kindPair _other) { return !this->operator==(_other); }


};
struct _1ab191975_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_tokens;
	jule::Ptr<_1ab18873b_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1a7d05a93_Log> _field_errors;
	


};
struct _1ab1965b2_Ast {
	jule::Ptr<_1ab18873b_File> _field_File;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ab1b1676_UseDecl>> _field_UseDecls;
	jule::Slice<_1ab19756e_Node> _field_Nodes;
	


};
struct _1ab19756e_Node {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1ab19756e_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab19756e_Node _other) { return !this->operator==(_other); }


};
struct _1ab19798c_Directive {
	jule::Ptr<_1ab182e72_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Args;
	


};
struct _1ab198570_TypeDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1ab198570_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab198570_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab198b7a_IdentTypeDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _field_Generics;
	


};
struct _1ab198e77_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ab198b7a_IdentTypeDecl>> _field_Idents;
	


};
struct _1ab19931d_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Idents;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	


};
struct _1ab19961a_SptrTypeDecl {
	jule::Ptr<_1ab198570_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ab19961a_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab19961a_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab1999a0_SlcTypeDecl {
	jule::Ptr<_1ab198570_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ab1999a0_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab1999a0_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab199c9c_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _field_Types;
	


};
struct _1ab19a099_PtrTypeDecl {
	jule::Ptr<_1ab198570_TypeDecl> _field_Elem;
	

	inline bool operator==(_1ab19a099_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab19a099_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab19a83b_ArrTypeDecl {
	jule::Ptr<_1ab198570_TypeDecl> _field_Elem;
	jule::Ptr<_1ab19c8a4_Expr> _field_Size;
	

	inline bool operator==(_1ab19a83b_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1ab19a83b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab19b089_MapTypeDecl {
	jule::Ptr<_1ab198570_TypeDecl> _field_Key;
	jule::Ptr<_1ab198570_TypeDecl> _field_Val;
	

	inline bool operator==(_1ab19b089_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ab19b089_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab19b463_RetTypeDecl {
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Idents;
	


};
struct _1ab19c8a4_Expr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1ab19c8a4_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab19c8a4_Expr _other) { return !this->operator==(_other); }


};
struct _1ab19cba1_RangeExpr {
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab19cba1_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab19cba1_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1ab19d278_UseExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab19d278_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab19d278_UseExpr _other) { return !this->operator==(_other); }


};
struct _1ab19d575_TupleExpr {
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_Expr;
	


};
struct _1ab19d94e_LitExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1ab19d94e_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ab19d94e_LitExpr _other) { return !this->operator==(_other); }


};
struct _1ab19dd28_UnsafeExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab19dd28_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab19dd28_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1ab19e2ce_IdentExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1ab19e2ce_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1ab19e2ce_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1ab19e961_UnaryExpr {
	jule::Ptr<_1ab182e72_Token> _field_Op;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab19e961_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab19e961_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1ab19ed3a_VariadicExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab19ed3a_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab19ed3a_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1ab1a0214_CastExpr {
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab1a0214_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1a0214_CastExpr _other) { return !this->operator==(_other); }


};
struct _1ab1a05dd_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Ns;
	jule::Ptr<_1ab182e72_Token> _field_Ident;
	


};
struct _1ab1a09b7_SubIdentExpr {
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Ptr<_1ab182e72_Token> _field_Ident;
	

	inline bool operator==(_1ab1a09b7_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab1a09b7_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1ab1a0e6d_BinaryExpr {
	jule::Ptr<_1ab19c8a4_Expr> _field_Left;
	jule::Ptr<_1ab19c8a4_Expr> _field_Right;
	jule::Ptr<_1ab182e72_Token> _field_Op;
	

	inline bool operator==(_1ab1a0e6d_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab1a0e6d_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1ab1a15cd_FnCallExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_Args;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1ab1a20c3_FieldExprPair {
	jule::Ptr<_1ab182e72_Token> _field_Field;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab1a20c3_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1a20c3_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1ab1a28ed_StructLit {
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_Exprs;
	


};
struct _1ab1a2da4_BraceLit {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_Exprs;
	


};
struct _1ab1a36ce_KeyValPair {
	jule::Ptr<_1ab19c8a4_Expr> _field_Key;
	jule::Ptr<_1ab19c8a4_Expr> _field_Val;
	jule::Ptr<_1ab182e72_Token> _field_Colon;
	

	inline bool operator==(_1ab1a36ce_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1ab1a36ce_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1ab1a3dc7_SliceExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_Exprs;
	


};
struct _1ab1a4867_IndexingExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Ptr<_1ab19c8a4_Expr> _field_Index;
	

	inline bool operator==(_1ab1a4867_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ab1a4867_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1ab1a4ec7_SlicingExpr {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Ptr<_1ab19c8a4_Expr> _field_Start;
	jule::Ptr<_1ab19c8a4_Expr> _field_To;
	

	inline bool operator==(_1ab1a4ec7_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1ab1a4ec7_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ab1a52c4_Constraint {
	jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _field_Mask;
	


};
struct _1ab1a577a_GenericDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab1a52c4_Constraint> _field_Constraint;
	

	inline bool operator==(_1ab1a577a_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1ab1a577a_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1ab1a5b54_LabelSt {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab1a5b54_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab1a5b54_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ab1a602d_GotoSt {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_Label;
	

	inline bool operator==(_1ab1a602d_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab1a602d_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab1a632a_FallSt {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	

	inline bool operator==(_1ab1a632a_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1ab1a632a_FallSt _other) { return !this->operator==(_other); }


};
struct _1ab1a698a_AssignLeft {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab1a698a_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1a698a_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1ab1a701d_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1ab182e72_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ab1a698a_AssignLeft>> _field_Left;
	jule::Ptr<_1ab19c8a4_Expr> _field_Right;
	


};
struct _1ab1a7e31_Stmt {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1ab1a7e31_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab1a7e31_Stmt _other) { return !this->operator==(_other); }


};
struct _1ab1a8591_ScopeTree {
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1ab1a7e31_Stmt> _field_Stmts;
	jule::Ptr<_1ab182e72_Token> _field_End;
	


};
struct _1ab1a8ccd_ParamDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab1a8ccd_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab1a8ccd_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1ab1aa230_FnDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_Directives;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _field_Generics;
	jule::Ptr<_1ab19b463_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>> _field_Params;
	


};
struct _1ab1ab3da_VarDecl {
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_Directives;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	


};
struct _1ab1ab7b4_RetSt {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab1ab7b4_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1ab7b4_RetSt _other) { return !this->operator==(_other); }


};
struct _1ab1ac034_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ab1ac034_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab1ac034_Iter _other) { return !this->operator==(_other); }


};
struct _1ab1ac85e_WhileKind {
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ab182e72_Token> _field_NextToken;
	

	inline bool operator==(_1ab1ac85e_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1ab1ac85e_WhileKind _other) { return !this->operator==(_other); }


};
struct _1ab1ad266_RangeKind {
	jule::Ptr<_1ab182e72_Token> _field_InToken;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Ptr<_1ab1ab3da_VarDecl> _field_KeyA;
	jule::Ptr<_1ab1ab3da_VarDecl> _field_KeyB;
	

	inline bool operator==(_1ab1ad266_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ab1ad266_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ab1ad640_BreakSt {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_Label;
	

	inline bool operator==(_1ab1ad640_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab1ad640_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ab1ada19_ContSt {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_Label;
	

	inline bool operator==(_1ab1ada19_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab1ada19_ContSt _other) { return !this->operator==(_other); }


};
struct _1ab1adec0_If {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ab1adec0_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab1adec0_If _other) { return !this->operator==(_other); }


};
struct _1ab1ae399_Else {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	

	inline bool operator==(_1ab1ae399_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab1ae399_Else _other) { return !this->operator==(_other); }


};
struct _1ab1ae850_Conditional {
	jule::Ptr<_1ab1adec0_If> _field_Head;
	jule::Slice<jule::Ptr<_1ab1adec0_If>> _field_Tail;
	jule::Ptr<_1ab1ae399_Else> _field_Default;
	


};
struct _1ab1b008c_TypeAliasDecl {
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	

	inline bool operator==(_1ab1b008c_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab1b008c_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1ab1b0543_Case {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_Exprs;
	


};
struct _1ab1b0d5c_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ab1b0543_Case>> _field_Cases;
	jule::Ptr<_1ab1ae399_Else> _field_Default;
	


};
struct _1ab1b1676_UseDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1ab1b1b2c_EnumItemDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	

	inline bool operator==(_1ab1b1b2c_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1b1b2c_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ab1b26dd_EnumDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ab182e72_Token> _field_End;
	


};
struct _1ab1b3018_TypeEnumItemDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	

	inline bool operator==(_1ab1b3018_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab1b3018_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ab1b3678_TypeEnumDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ab182e72_Token> _field_End;
	


};
struct _1ab1b3942_FieldDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab198570_TypeDecl> _field_Kind;
	jule::Ptr<_1ab19c8a4_Expr> _field_Default;
	

	inline bool operator==(_1ab1b3942_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab1b3942_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1ab1b4338_StructDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab1b3942_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _field_Generics;
	


};
struct _1ab1b4a75_TraitDecl {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ab1aa230_FnDecl>> _field_Methods;
	


};
struct _1ab1b51d5_Impl {
	jule::Ptr<_1ab182e72_Token> _field_End;
	jule::Ptr<_1ab198570_TypeDecl> _field_Base;
	jule::Ptr<_1ab198570_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ab1aa230_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> _field_Statics;
	


};
struct _1ab1b657c_Field {
	jule::Ptr<_1ab1b9470_Struct> _field_Owner;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _field_Kind;
	jule::Ptr<_1ab19c8a4_Expr> _field_Default;
	

	inline bool operator==(_1ab1b657c_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab1b657c_Field _other) { return !this->operator==(_other); }


};
struct _1ab1b855c_Operators {
	jule::Ptr<_1ab1d2312_FnIns> _field_Eq;
	jule::Ptr<_1ab1d2312_FnIns> _field_Gt;
	jule::Ptr<_1ab1d2312_FnIns> _field_GtEq;
	jule::Ptr<_1ab1d2312_FnIns> _field_Lt;
	jule::Ptr<_1ab1d2312_FnIns> _field_LtEq;
	jule::Ptr<_1ab1d2312_FnIns> _field_Shl;
	jule::Ptr<_1ab1d2312_FnIns> _field_Shr;
	jule::Ptr<_1ab1d2312_FnIns> _field_Add;
	jule::Ptr<_1ab1d2312_FnIns> _field_Sub;
	jule::Ptr<_1ab1d2312_FnIns> _field_Div;
	jule::Ptr<_1ab1d2312_FnIns> _field_Mul;
	jule::Ptr<_1ab1d2312_FnIns> _field_Mod;
	jule::Ptr<_1ab1d2312_FnIns> _field_BitAnd;
	jule::Ptr<_1ab1d2312_FnIns> _field_BitOr;
	jule::Ptr<_1ab1d2312_FnIns> _field_BitXor;
	jule::Ptr<_1ab1d2312_FnIns> _field_Neg;
	jule::Ptr<_1ab1d2312_FnIns> _field_Pos;
	jule::Ptr<_1ab1d2312_FnIns> _field_BitNot;
	jule::Ptr<_1ab1d2312_FnIns> _field_AddAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_SubAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_DivAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_MulAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_ModAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_ShlAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_ShrAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ab1d2312_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1ab1b855c_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1ab1b855c_Operators _other) { return !this->operator==(_other); }


};
struct _1ab1b9470_Struct {
	jule::Ptr<_1ab262e97_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _field_Uses;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab1b657c_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab1e26da_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ab1bc1ed_StructIns>> _field_Instances;
	


};
struct _1ab1bb64d_FieldIns {
	jule::Ptr<_1ab1b657c_Field> _field_Decl;
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	jule::Ptr<_1ab2b5c0e_Data> _field_Default;
	

	inline bool operator==(_1ab1bb64d_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ab1bb64d_FieldIns _other) { return !this->operator==(_other); }


};
struct _1ab1c119c_OperandExprModel {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c119c_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1ab1c119c_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c1697_BinaryExprModel {
	jule::Ptr<_1ab1c119c_OperandExprModel> _field_Left;
	jule::Ptr<_1ab1c119c_OperandExprModel> _field_Right;
	jule::Ptr<_1ab182e72_Token> _field_Op;
	

	inline bool operator==(_1ab1c1697_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab1c1697_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c1a71_UnaryExprModel {
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	jule::Ptr<_1ab182e72_Token> _field_Op;
	

	inline bool operator==(_1ab1c1a71_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab1c1a71_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c209e_StructArgExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab1bb64d_FieldIns> _field_Field;
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	

	inline bool operator==(_1ab1c209e_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1c209e_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c2445_StructLitExprModel {
	jule::Ptr<_1ab1bc1ed_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1ab1c209e_StructArgExprModel>> _field_Args;
	


};
struct _1ab1c2742_AllocStructLitExprModel {
	jule::Ptr<_1ab1c2445_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1ab1c2742_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1ab1c2742_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c2cc5_CastingExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	jule::Ptr<_1ab2e6525_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1ab1c2cc5_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1ab1c2cc5_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c3677_FnCallExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab1d2312_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ab2212b8_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1ab1c3a51_SliceExprModel {
	jule::Ptr<_1ab2e6525_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ab1c4007_IndexingExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	jule::Ptr<_1ab2b5c0e_Data> _field_Index;
	

	inline bool operator==(_1ab1c4007_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ab1c4007_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c43d1_AnonFnExprModel {
	jule::Ptr<_1ab1d2312_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1ab1c43d1_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1ab1c43d1_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c47aa_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c47aa_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ab1c47aa_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c4c61_MapExprModel {
	jule::Ptr<_1ab2e6525_TypeKind> _field_KeyKind;
	jule::Ptr<_1ab2e6525_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1ab1c47aa_KeyValPairExprModel>> _field_Entries;
	


};
struct _1ab1c52e4_SlicingExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c52e4_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ab1c52e4_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c5877_TraitSubIdentExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab1ce40d_Fn> _field_Method;
	jule::Ptr<_1ab1e26da_Trait> _field_Trt;
	

	inline bool operator==(_1ab1c5877_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1ab1c5877_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c6218_StructSubIdentExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	jule::Ptr<_1ab1d2312_FnIns> _field_Method;
	jule::Ptr<_1ab1bb64d_FieldIns> _field_Field;
	jule::Ptr<_1ab1bc1ed_StructIns> _field_Owner;
	

	inline bool operator==(_1ab1c6218_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1ab1c6218_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c66be_StructStaticIdentExprModel {
	jule::Ptr<_1ab1bc1ed_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab1d2312_FnIns> _field_Method;
	

	inline bool operator==(_1ab1c66be_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1ab1c66be_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c6a98_ArrayExprModel {
	jule::Ptr<_1ab30591e_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ab1c6d95_TupleExprModel {
	jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _field_Datas;
	


};
struct _1ab1c726e_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ab1c726e_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ab1c726e_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c7648_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ab1c7648_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ab1c7648_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c7a22_BuiltinNewCallExprModel {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c7a22_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1ab1c7a22_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c7deb_BuiltinPanicCallExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c7deb_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1c7deb_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c83a2_BuiltinAssertCallExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1ab1c83a2_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1ab1c83a2_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c8858_BuiltinMakeCallExprModel {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c8858_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1ab1c8858_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c8c32_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c8c32_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1ab1c8c32_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c902e_BuiltinLenCallExprModel {
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	

	inline bool operator==(_1ab1c902e_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1c902e_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c932b_BuiltinCapCallExprModel {
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	

	inline bool operator==(_1ab1c932b_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1c932b_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c9705_BuiltinDeleteCallExprModel {
	jule::Ptr<_1ab2b5c0e_Data> _field_Dest;
	jule::Ptr<_1ab2b5c0e_Data> _field_Key;
	

	inline bool operator==(_1ab1c9705_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1ab1c9705_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c9ace_BuiltinCopyCallExprModel {
	jule::Ptr<_1ab2b5c0e_Data> _field_Dest;
	jule::Ptr<_1ab2b5c0e_Data> _field_Src;
	

	inline bool operator==(_1ab1c9ace_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1ab1c9ace_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c9ea8_BuiltinErrorCallExprModel {
	jule::Ptr<_1ab1d2312_FnIns> _field_Func;
	jule::Ptr<_1ab2b5c0e_Data> _field_Err;
	

	inline bool operator==(_1ab1c9ea8_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1ab1c9ea8_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1c5a64_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab1c5a64_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1c5a64_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1ca6d4_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab1ca6d4_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1ca6d4_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1ca9d1_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1ab1ca9d1_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1ab1ca9d1_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1caccd_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab1caccd_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1caccd_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1cb1a7_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1ab1cb4a4_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab1cb4a4_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab1cb4a4_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ab1cc1a8_RetType {
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Idents;
	


};
struct _1ab1cc939_Param {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab1cc939_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab1cc939_Param _other) { return !this->operator==(_other); }


};
struct _1ab1ce40d_Fn {
	jule::Ptr<_1ab262e97_Sema> _field_sema;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_Directives;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _field_Generics;
	jule::Ptr<_1ab1cc1a8_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ab1cc939_Param>> _field_Params;
	jule::Ptr<_1ab1b9470_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> _field_Instances;
	


};
struct _1ab1d1366_ParamIns {
	jule::Ptr<_1ab1cc939_Param> _field_Decl;
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	

	inline bool operator==(_1ab1d1366_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab1d1366_ParamIns _other) { return !this->operator==(_other); }


};
struct _1ab1d2312_FnIns {
	jule::Ptr<_1ab1bc1ed_StructIns> _field_Owner;
	jule::Ptr<_1ab1ce40d_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>> _field_Params;
	jule::Ptr<_1ab2e6525_TypeKind> _field_Result;
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	jule::Ptr<_1ab1d54d0_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1ab1d54d0_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1ab1d69ed_Pass {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1ab1d69ed_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1ab1d69ed_Pass _other) { return !this->operator==(_other); }


};
struct _1ab1db5b3_symbolBuilder {
	jule::Ptr<_1ab1db5b3_symbolBuilder> _field_owner;
	jule::Trait<_1ab23eb88_Importer> _field_importer;
	jule::Slice<_1a7d05a93_Log> _field_errors;
	jule::Ptr<_1ab1965b2_Ast> _field_ast;
	jule::Ptr<_1ab2b0863_SymbolTable> _field_table;
	


};
struct _1ab1e26da_Trait {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ab2ed6e7_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _field_Implemented;
	


};
struct _1ab1e4379_EnumItem {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab2b6d53_Value> _field_Value;
	

	inline bool operator==(_1ab1e4379_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ab1e4379_EnumItem _other) { return !this->operator==(_other); }


};
struct _1ab1e4de6_Enum {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>> _field_Items;
	


};
struct _1ab1e6029_TypeEnumItem {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1ab1e6029_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab1e6029_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1ab1e6601_TypeEnum {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>> _field_Items;
	


};
struct _1ab1e9758_comptimeRange {
	jule::Trait<_1ab1e9538_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1ab1e9758_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ab1e9758_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1ab1ea22b_comptimeStructField {
	jule::Ptr<_1ab1bb64d_FieldIns> _field_field;
	

	inline bool operator==(_1ab1ea22b_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ab1ea22b_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1ab1ebddc_comptimeStructFields {
	jule::Slice<jule::Ptr<_1ab1bb64d_FieldIns>> _field_fields;
	


};
struct _1ab1ed4d7_comptimeStatic {
	jule::Ptr<_1ab2853a4_Var> _field_field;
	

	inline bool operator==(_1ab1ed4d7_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ab1ed4d7_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1ab200198_comptimeStatics {
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_fields;
	


};
struct _1ab201793_comptimeEnumField {
	jule::Ptr<_1ab1e4379_EnumItem> _field_field;
	

	inline bool operator==(_1ab201793_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ab201793_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1ab202b3a_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>> _field_fields;
	


};
struct _1ab204235_comptimeParam {
	jule::Ptr<_1ab1d1366_ParamIns> _field_param;
	

	inline bool operator==(_1ab204235_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1ab204235_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1ab20649b_comptimeParams {
	jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>> _field_params;
	


};
struct _1ab207a96_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ab209191_comptimeTypeInfo>> _field_types;
	


};
struct _1ab209191_comptimeTypeInfo {
	jule::Ptr<_1ab2e6525_TypeKind> _field_base;
	

	inline bool operator==(_1ab209191_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1ab209191_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1ab2106a3_comptimeValue {
	jule::Ptr<_1ab2b5c0e_Data> _field_data;
	

	inline bool operator==(_1ab2106a3_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ab2106a3_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1ab213002_comptimeFiles {
	jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>> _field_files;
	


};
struct _1ab2145ec_comptimeFile {
	jule::Ptr<_1ab2b0863_SymbolTable> _field_file;
	

	inline bool operator==(_1ab2145ec_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1ab2145ec_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1ab218a0d_constraintChecker {
	jule::Ptr<_1ab262e97_Sema> _field_s;
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ab1d2312_FnIns> _field_fi;
	jule::Ptr<_1ab1bc1ed_StructIns> _field_si;
	jule::Ptr<_1ab182e72_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1ab21ad62_Impl {
	jule::Ptr<_1ab198570_TypeDecl> _field_Base;
	jule::Ptr<_1ab198570_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_Statics;
	


};
struct _1ab2212b8_Scope {
	jule::Ptr<_1ab2212b8_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1ab2216d6_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	

	inline bool operator==(_1ab2216d6_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab2216d6_If _other) { return !this->operator==(_other); }


};
struct _1ab2219d3_Else {
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	

	inline bool operator==(_1ab2219d3_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab2219d3_Else _other) { return !this->operator==(_other); }


};
struct _1ab221e01_Conditional {
	jule::Slice<jule::Ptr<_1ab2216d6_If>> _field_Elifs;
	jule::Ptr<_1ab2219d3_Else> _field_Default;
	


};
struct _1ab2221ed_InfIter {
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	

	inline bool operator==(_1ab2221ed_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab2221ed_InfIter _other) { return !this->operator==(_other); }


};
struct _1ab2226a4_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	

	inline bool operator==(_1ab2226a4_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab2226a4_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ab223100_RangeIter {
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	jule::Ptr<_1ab2853a4_Var> _field_KeyA;
	jule::Ptr<_1ab2853a4_Var> _field_KeyB;
	

	inline bool operator==(_1ab223100_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ab223100_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ab223485_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1ab223485_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1ab223485_ContSt _other) { return !this->operator==(_other); }


};
struct _1ab22385e_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1ab22385e_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1ab22385e_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ab223b5b_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab223b5b_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab223b5b_Label _other) { return !this->operator==(_other); }


};
struct _1ab224035_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ab223b5b_Label> _field_Label;
	

	inline bool operator==(_1ab224035_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab224035_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab22440e_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1ab22440e_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab22440e_Postfix _other) { return !this->operator==(_other); }


};
struct _1ab2248b5_Assign {
	jule::Ptr<_1ab1c119c_OperandExprModel> _field_L;
	jule::Ptr<_1ab1c119c_OperandExprModel> _field_R;
	jule::Ptr<_1ab182e72_Token> _field_Op;
	

	inline bool operator==(_1ab2248b5_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab2248b5_Assign _other) { return !this->operator==(_other); }


};
struct _1ab224c8e_MultiAssign {
	jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1ab2253ee_Match {
	jule::Ptr<_1ab2b5c0e_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1ab226037_Case>> _field_Cases;
	jule::Ptr<_1ab226037_Case> _field_Default;
	


};
struct _1ab226037_Case {
	jule::Ptr<_1ab2253ee_Match> _field_Owner;
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _field_Exprs;
	jule::Ptr<_1ab226037_Case> _field_Next;
	


};
struct _1ab226631_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1ab226631_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1ab226631_FallSt _other) { return !this->operator==(_other); }


};
struct _1ab2269b6_RetSt {
	jule::Ptr<_1ab1d2312_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab2269b6_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab2269b6_RetSt _other) { return !this->operator==(_other); }


};
struct _1ab227126_scopeLabel {
	jule::Ptr<_1ab182e72_Token> _field_token;
	jule::Ptr<_1ab223b5b_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1ab2285bc_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1ab227126_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ab227126_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1ab2276a9_scopeGoto {
	jule::Ptr<_1ab224035_GotoSt> _field_st;
	jule::Ptr<_1ab1a602d_GotoSt> _field_gt;
	jule::Ptr<_1ab2285bc_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1ab2276a9_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ab2276a9_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1ab2285bc_scopeChecker {
	jule::Ptr<_1ab182e72_Token> _field_calledFrom;
	jule::Ptr<_1ab262e97_Sema> _field_s;
	jule::Ptr<_1ab1d2312_FnIns> _field_owner;
	jule::Ptr<_1ab2285bc_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1ab2b0863_SymbolTable> _field_table;
	jule::Ptr<_1ab2212b8_Scope> _field_scope;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_tree;
	jule::Ptr<_1ab1d2312_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab227126_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab2276a9_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1ab2285bc_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ab2285bc_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1ab23b602_directiveChecker {
	jule::Ptr<_1ab262e97_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab19798c_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1ab23b602_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ab23b602_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1ab242a9d_ImportInfo {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_Selected;
	jule::Ptr<_1ab2459c4_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1ab2459c4_Package {
	jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>> _field_Files;
	


};
struct _1ab262370_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ab209191_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1ab262e97_Sema {
	jule::Slice<_1a7d05a93_Log> _field_errors;
	jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>> _field_files;
	jule::Ptr<_1ab2b0863_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1ab262370_commonSemaMeta> _field_meta;
	


};
struct _1ab281cda_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1ab2841e9_IterRelation {
	jule::Ptr<_1ab2853a4_Var> _field_Range;
	

	inline bool operator==(_1ab2841e9_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1ab2841e9_IterRelation _other) { return !this->operator==(_other); }


};
struct _1ab2853a4_Var {
	jule::Ptr<_1ab2212b8_Scope> _field_Scope;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _field_Kind;
	jule::Ptr<_1ab2b6d53_Value> _field_Value;
	jule::Ptr<_1ab1d54d0_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_Directives;
	jule::Ptr<_1ab2841e9_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_Depends;
	


};
struct _1ab2861b8_FuncPattern {
	


};
struct _1ab29c7ea_typeCompatibilityChecker {
	jule::Ptr<_1ab262e97_Sema> _field_s;
	jule::Ptr<_1ab2e6525_TypeKind> _field_dest;
	jule::Ptr<_1ab2e6525_TypeKind> _field_src;
	jule::Ptr<_1ab182e72_Token> _field_errorToken;
	

	inline bool operator==(_1ab29c7ea_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ab29c7ea_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1ab29e599_assignTypeChecker {
	jule::Ptr<_1ab262e97_Sema> _field_s;
	jule::Ptr<_1ab2e6525_TypeKind> _field_dest;
	jule::Ptr<_1ab2b5c0e_Data> _field_d;
	jule::Ptr<_1ab182e72_Token> _field_errorToken;
	

	inline bool operator==(_1ab29e599_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ab29e599_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1ab2a1216_dynamicTypeAnnotation {
	jule::Ptr<_1ab2b7903_Eval> _field_e;
	jule::Ptr<_1ab1d2312_FnIns> _field_f;
	jule::Ptr<_1ab1d1366_ParamIns> _field_p;
	jule::Ptr<_1ab2b5c0e_Data> _field_a;
	jule::Ptr<_1ab182e72_Token> _field_errorToken;
	jule::Ptr<_1ab2e6525_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1ab198570_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _field_ignored;
	


};
struct _1ab2a6073_fnCallArgChecker {
	jule::Ptr<_1ab2b7903_Eval> _field_e;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_args;
	jule::Ptr<_1ab182e72_Token> _field_errorToken;
	jule::Ptr<_1ab1d2312_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _field_ignored;
	


};
struct _1ab2a8eaa_structLitChecker {
	jule::Ptr<_1ab2b7903_Eval> _field_e;
	jule::Ptr<_1ab182e72_Token> _field_errorToken;
	jule::Ptr<_1ab1bc1ed_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1ab1c209e_StructArgExprModel>> _field_args;
	


};
struct _1ab2aac8c_rangeChecker {
	jule::Ptr<_1ab2285bc_scopeChecker> _field_sc;
	jule::Ptr<_1ab1ad266_RangeKind> _field_rang;
	jule::Ptr<_1ab223100_RangeIter> _field_Kind;
	jule::Ptr<_1ab2b5c0e_Data> _field_d;
	

	inline bool operator==(_1ab2aac8c_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1ab2aac8c_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1ab2ad4ed_retTypeChecker {
	jule::Ptr<_1ab2285bc_scopeChecker> _field_sc;
	jule::Ptr<_1ab1d2312_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _field_exprs;
	jule::Ptr<_1ab182e72_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1ab2b0863_SymbolTable {
	jule::Ptr<_1ab18873b_File> _field_File;
	jule::Slice<_1ab1d69ed_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1ab1e26da_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1ab1e4de6_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1ab1e6601_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ab21ad62_Impl>> _field_Impls;
	


};
struct _1ab2b5c0e_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1a8d04e26_Const> _field_Constant;
	

	inline bool operator==(_1ab2b5c0e_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1ab2b5c0e_Data _other) { return !this->operator==(_other); }


};
struct _1ab2b6d53_Value {
	jule::Ptr<_1ab19c8a4_Expr> _field_Expr;
	jule::Ptr<_1ab2b5c0e_Data> _field_Data;
	

	inline bool operator==(_1ab2b6d53_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ab2b6d53_Value _other) { return !this->operator==(_other); }


};
struct _1ab2b7903_Eval {
	jule::Ptr<_1ab262e97_Sema> _field_s;
	jule::Trait<_1ab31605b_Lookup> _field_lookup;
	jule::Ptr<_1ab2e6525_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1ab2853a4_Var> _field_owner;
	jule::Ptr<_1ab1bb64d_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1ab2b7903_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1ab2b7903_Eval _other) { return !this->operator==(_other); }


};
struct _1ab2d612a_unaryEval {
	jule::Ptr<_1ab2b7903_Eval> _field_e;
	jule::Ptr<_1ab2b5c0e_Data> _field_d;
	jule::Ptr<_1ab19e961_UnaryExpr> _field_u;
	

	inline bool operator==(_1ab2d612a_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1ab2d612a_unaryEval _other) { return !this->operator==(_other); }


};
struct _1ab2d80b6_binaryEval {
	jule::Ptr<_1ab2b7903_Eval> _field_e;
	jule::Ptr<_1ab2b5c0e_Data> _field_l;
	jule::Ptr<_1ab2b5c0e_Data> _field_r;
	jule::Ptr<_1ab182e72_Token> _field_op;
	

	inline bool operator==(_1ab2d80b6_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ab2d80b6_binaryEval _other) { return !this->operator==(_other); }


};
struct _1ab2e4b3e_InsGeneric {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _field_Constraint;
	


};
struct _1ab2e5733_TypeAlias {
	jule::Ptr<_1ab1a8591_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _field_Generics;
	


};
struct _1ab2e6525_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1ab2e606e_Kind> _field_Kind;
	

	inline bool operator==(_1ab2e6525_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab2e6525_TypeKind _other) { return !this->operator==(_other); }


};
struct _1ab2ed6e7_TypeSymbol {
	jule::Ptr<_1ab198570_TypeDecl> _field_Decl;
	jule::Ptr<_1ab2e6525_TypeKind> _field_Kind;
	

	inline bool operator==(_1ab2ed6e7_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab2ed6e7_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1ab2ee0ee_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1ab2ee0ee_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ab2ee0ee_Prim _other) { return !this->operator==(_other); }


};
struct _1ab302b2a_Sptr {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab302b2a_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab302b2a_Sptr _other) { return !this->operator==(_other); }


};
struct _1ab3035ed_Slc {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab3035ed_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab3035ed_Slc _other) { return !this->operator==(_other); }


};
struct _1ab3041e2_Tuple {
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _field_Types;
	


};
struct _1ab304c92_Map {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Key;
	jule::Ptr<_1ab2e6525_TypeKind> _field_Val;
	

	inline bool operator==(_1ab304c92_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ab304c92_Map _other) { return !this->operator==(_other); }


};
struct _1ab30591e_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1ab2e6525_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab30591e_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab30591e_Arr _other) { return !this->operator==(_other); }


};
struct _1ab3063e2_Ptr {
	jule::Ptr<_1ab2e6525_TypeKind> _field_Elem;
	

	inline bool operator==(_1ab3063e2_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ab3063e2_Ptr _other) { return !this->operator==(_other); }


};
struct _1ab3073e3_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1ab3073e3_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ab3073e3_referencer _other) { return !this->operator==(_other); }


};
struct _1ab3083d3_typeChecker {
	jule::Ptr<_1ab262e97_Sema> _field_s;
	jule::Trait<_1ab31605b_Lookup> _field_rootLookup;
	jule::Trait<_1ab31605b_Lookup> _field_lookup;
	jule::Ptr<_1ab3073e3_referencer> _field_referencer;
	jule::Ptr<_1ab1d54d0_ReferenceStack> _field_refers;
	jule::Ptr<_1ab182e72_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1ab2e5733_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1ab311067_identTypeLookup {
	

	inline bool operator==(_1ab311067_identTypeLookup _other) { return true; }

	inline bool operator!=(_1ab311067_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1abca8503_FileInfo {
	jule::Ptr<_1ab1965b2_Ast> _field_Ast;
	jule::Slice<_1a7d05a93_Log> _field_Errors;
	


};
struct _1abcee208_stmt {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1abceea99_scopeParser {
	jule::Ptr<_1abd1cd5e_parser> _field_p;
	jule::Ptr<_1ab1a8591_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1abcee208_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1abd0c4be_exprBuilder {
	jule::Ptr<_1abd1cd5e_parser> _field_p;
	

	inline bool operator==(_1abd0c4be_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1abd0c4be_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1abd19960_assignInfo {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_r;
	jule::Ptr<_1ab182e72_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1abd1cd5e_parser {
	jule::Ptr<_1ab1965b2_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1ab19798c_Directive>> _field_directives;
	jule::Slice<_1a7d05a93_Log> _field_errors;
	jule::Ptr<_1abd0c4be_exprBuilder> _field_ep;
	


};
struct _1abd3003b_typeBuilder {
	jule::Ptr<_1abd1cd5e_parser> _field_p;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1ab4e75c2_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1ab4e75c2_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ab4e75c2_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1ab4e8a9b_directiveEval {
	jule::Slice<_1a7d05a93_Log> _field_logs;
	jule::Ptr<_1ab19798c_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1abd34172_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1abd39386_OrderedDefines {
	jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_Globals;
	


};
struct _1abd395ea_defineOrderer {
	

	inline bool operator==(_1abd395ea_defineOrderer _other) { return true; }

	inline bool operator!=(_1abd395ea_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1abe631c4_liveTable {
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ab1bc1ed_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1ab1e26da_Trait>> _field_traits;
	


};
struct _1abe978bd_scopeDeadCode {
	jule::Ptr<_1abe978bd_scopeDeadCode> _field_parent;
	jule::Ptr<_1ab2212b8_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab223b5b_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab224035_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1abe978bd_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1abe978bd_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1abe9bb25_exprDeadCode {
	jule::Ptr<_1abe978bd_scopeDeadCode> _field_s;
	

	inline bool operator==(_1abe9bb25_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1abe9bb25_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1ab3d9e32_SwapExprModel {
	jule::Ptr<_1ab2b5c0e_Data> _field_Left;
	jule::Ptr<_1ab2b5c0e_Data> _field_Right;
	

	inline bool operator==(_1ab3d9e32_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ab3d9e32_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3da350_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1ab3da350_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1ab3da350_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3da64c_RefExprModel {
	jule::Ptr<_1ab2853a4_Var> _field_Var;
	

	inline bool operator==(_1ab3da64c_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1ab3da64c_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3dab7a_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1a8d04e26_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1ab3dab7a_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1ab3dab7a_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3db20d_MutSlicingExprModel {
	jule::Ptr<_1ab182e72_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ab3db20d_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ab3db20d_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3db50a_UnsafeBinaryExprModel {
	jule::Ptr<_1ab1c1697_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1ab3db50a_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ab3db50a_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3db807_UnsafeIndexingExprModel {
	jule::Ptr<_1ab1c4007_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1ab3db807_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ab3db807_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3dbc36_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1ab1c3a51_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1ab3dbc36_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ab3dbc36_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3dc110_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1ab3dc110_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1ab3dc110_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ab3dd2ba_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1ab2212b8_Scope> _field_scope;
	

	inline bool operator==(_1ab3dd2ba_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ab3dd2ba_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1ab3e4458_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1ab3e4458_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ab3e4458_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1abea3bd7_Optimizer {
	jule::Ptr<_1abd36b36_IR> _field_ir;
	

	inline bool operator==(_1abea3bd7_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1abea3bd7_Optimizer _other) { return !this->operator==(_other); }


};
struct _1abecb9bd_AnsiEscape {
	

	inline bool operator==(_1abecb9bd_AnsiEscape _other) { return true; }

	inline bool operator!=(_1abecb9bd_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1abecd0eb_Logger {
	

	inline bool operator==(_1abecd0eb_Logger _other) { return true; }

	inline bool operator!=(_1abecd0eb_Logger _other) { return !this->operator==(_other); }


};
struct _1ac916704_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1ac916704_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ac916704_AbsTime _other) { return !this->operator==(_other); }


};
struct _1ac916dca_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1ac916dca_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ac916dca_Time _other) { return !this->operator==(_other); }


};
struct _1ac83cd34_scopeCoder {
	jule::Ptr<_1ac921379_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ac83cd34_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ac83cd34_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1ac846eb4_exprCoder {
	jule::Ptr<_1ac921379_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ac846eb4_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ac846eb4_exprCoder _other) { return !this->operator==(_other); }


};
struct _1ac85c606_TestCoder {
	jule::Ptr<_1ab1bc1ed_StructIns> _field_t;
	jule::Ptr<_1ab1ce40d_Fn> _field_tmReset;
	jule::Ptr<_1ab1ce40d_Fn> _field_tmFailed;
	jule::Ptr<_1ab1ce40d_Fn> _field_tmSkipped;
	jule::Ptr<_1ac921379_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ac85c606_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ac85c606_TestCoder _other) { return !this->operator==(_other); }


};
struct _1ac8603c8_identCoder {
	

	inline bool operator==(_1ac8603c8_identCoder _other) { return true; }

	inline bool operator!=(_1ac8603c8_identCoder _other) { return !this->operator==(_other); }


};
struct _1ac91e861_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1ac91e861_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1ac91e861_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ac91ee38_traitHash {
	jule::Ptr<_1ab1e26da_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1ab1bc1ed_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1ac91ee38_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ac91ee38_traitHash _other) { return !this->operator==(_other); }


};
struct _1ac920312_traitCast {
	jule::Ptr<_1ab1e26da_Trait> _field_t1;
	jule::Ptr<_1ab1e26da_Trait> _field_t2;
	

	inline bool operator==(_1ac920312_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1ac920312_traitCast _other) { return !this->operator==(_other); }


};
struct _1ac9309e8_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1ac9309e8_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ac9309e8_customType _other) { return !this->operator==(_other); }


};
struct _1ac9315dc_typeCoder {
	jule::Ptr<_1ac921379_ObjectCoder> _field_oc;
	jule::Ptr<_1ac9399ad_resultCoder> _field_rc;
	

	inline bool operator==(_1ac9315dc_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1ac9315dc_typeCoder _other) { return !this->operator==(_other); }


};
struct _1ac9399ad_resultCoder {
	jule::Ptr<_1ac9315dc_typeCoder> _field_tc;
	

	inline bool operator==(_1ac9399ad_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1ac9399ad_resultCoder _other) { return !this->operator==(_other); }


};
struct _1bcc10669_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1bcc10669_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bcc10669_Flag _other) { return !this->operator==(_other); }


};struct _1bcc13eca_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1bcc13eca_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bcc13eca_Flag _other) { return !this->operator==(_other); }


};struct _1bcc176c6_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1bcc176c6_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bcc176c6_Flag _other) { return !this->operator==(_other); }


};struct _1bcc1ae16_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1bcc1ae16_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bcc1ae16_Flag _other) { return !this->operator==(_other); }


};struct _1bcc1e612_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1bcc1e612_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bcc1e612_Flag _other) { return !this->operator==(_other); }


};
struct _1ac9a552e_FlagSet {
	jule::Slice<jule::Trait<_1ac9a397d_CommonFlag>> _field_flags;
	


};
struct _1ac9a7eb0_argParser {
	_1ac9a552e_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1ac921379_ObjectCoder {
	_1a7c4c7ed_StrBuilder _field_Buf;
	_1a7c4c7ed_StrBuilder _field_resultDecls;
	_1a7c4c7ed_StrBuilder _field_anyObj;
	jule::Ptr<_1abd36b36_IR> _field_ir;
	_1ac91e861_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ac91ee38_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1ac920312_traitCast> _field_traitCastMap;
	jule::Ptr<_1ac846eb4_exprCoder> _field_ec;
	jule::Ptr<_1ac83cd34_scopeCoder> _field_sc;
	jule::Ptr<_1ac9315dc_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1abe635ae_ObjectDeadCode {
	_1abe631c4_liveTable _field_live;
	jule::Ptr<_1abd36b36_IR> _field_ir;
	


};
struct _1abd36b36_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ab2459c4_Package> _field_Main;
	jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> _field_Used;
	_1abd39386_OrderedDefines _field_Ordered;
	


};
struct _1ab1bc1ed_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1ab1b9470_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ab1bb64d_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1ab1d54d0_ReferenceStack> _field_Refers;
	_1ab1b855c_Operators _field_Operators;
	


};
struct _1a7dad4db_Cmd {
	_1a7e12e9c_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab2b5c0e_Data__jule_tuple_x_1ab2b5c0e_Data {
	jule::Ptr<_1ab2b5c0e_Data> __jule_result_arg0;
	jule::Ptr<_1ab2b5c0e_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ab2b5c0e_Data__jule_tuple_bool {
	jule::Ptr<_1ab2b5c0e_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab19c8a4_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab1b0543_Case__jule_tuple_bool {
	jule::Ptr<_1ab1b0543_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab1b0543_Case__jule_tuple_x_1ab1ae399_Else {
	jule::Slice<jule::Ptr<_1ab1b0543_Case>> __jule_result_arg0;
	jule::Ptr<_1ab1ae399_Else> __jule_result_arg1;
};
struct __jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab1a701d_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ab1a701d_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab198570_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ab19b463_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log {
	jule::Slice<jule::Ptr<_1ab1965b2_Ast>> __jule_result_arg0;
	jule::Slice<_1a7d05a93_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1a7d05a93_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1a7d05a93_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd36b36_IR__jule_tuple_s_1a7d05a93_Log {
	jule::Ptr<_1abd36b36_IR> __jule_result_arg0;
	jule::Slice<_1a7d05a93_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a8862456_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a8862456_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8862456_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab2b0863_SymbolTable__jule_tuple_s_1a7d05a93_Log {
	jule::Ptr<_1ab2b0863_SymbolTable> __jule_result_arg0;
	jule::Slice<_1a7d05a93_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log {
	jule::Ptr<_1ab2459c4_Package> __jule_result_arg0;
	jule::Slice<_1a7d05a93_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log {
	jule::Ptr<_1ab1965b2_Ast> __jule_result_arg0;
	jule::Slice<_1a7d05a93_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab182e72_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ab182e72_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> __jule_result_arg0;
	jule::Slice<_1a7d05a93_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1a7c4c7ed_StrBuilder static__1a7c4cb1c_New(jule::I64);
inline void _1a7c57121_Write(_1a7c4c7ed_StrBuilder*, jule::Slice<jule::U8>);
inline void _1a7c573c9_WriteStr(_1a7c4c7ed_StrBuilder*, jule::Str);
inline void _1a7c57682_WriteByte(_1a7c4c7ed_StrBuilder*, jule::U8);
inline jule::Str _1a7c57bc1_Str(_1a7c4c7ed_StrBuilder*);
inline void _1a7c57dbe_Clear(_1a7c4c7ed_StrBuilder*);
inline jule::I64 _1a7c58155_Len(_1a7c4c7ed_StrBuilder*);
inline jule::Slice<jule::U8> _1a7c58672_Buf(_1a7c4c7ed_StrBuilder*);
inline void _1a7c5892a_SetBuf(_1a7c4c7ed_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1a7c596d9_index(_1a7c59255_lazyBuff*, jule::I64);
inline void _1a7c59992_append(_1a7c59255_lazyBuff*, jule::U8);
inline jule::Str _1a7c59c28_string(_1a7c59255_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>> static__1a7c5dac8_Read(jule::Str);
inline jule::VoidExceptional static__1a7c5dd09_Create(jule::Str);
inline jule::VoidExceptional static__1a7c5e03a_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_1d779d7c5_File>> static__1d7b52261_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1d7b52492_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1d7b52926_Write(_1d779d7c5_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1d7b52c67_Read(_1d779d7c5_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_1d779d7c5_File> static__1d779dbe3_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1d779d7c5_File>> static__1d779deac_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d779e276_Read(jule::Str);
inline jule::VoidExceptional static__1d779e61c_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _1d779ed59_Close(_1d779d7c5_File*);
inline jule::Exceptional<jule::Ptr<_1d77a08b5_Status>> static__1d779c54e_Of(jule::Str);
inline jule::Bool _1d77a0c8e_IsDir(_1d77a08b5_Status*);
inline jule::Bool _1d77a1025_IsReg(_1d77a08b5_Status*);
inline jule::U64 _1d77a12ab_Size(_1d77a08b5_Status*);
inline jule::Bool _1a8cd6b2d_set(_1a8ce0263_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1a8cd6e6e_floatBits(_1a8ce0263_decimal*, _1a8ccb9be_floatInfo*);
inline void _1a8ce061a_assign(_1a8ce0263_decimal*, jule::U64);
inline void _1a8ce08c3_shift(_1a8ce0263_decimal*, jule::I64);
inline void _1a8ce0b7b_roundDown(_1a8ce0263_decimal*, jule::I64);
inline void _1a8ce0e34_roundUp(_1a8ce0263_decimal*, jule::I64);
inline void _1a8ce11dc_round(_1a8ce0263_decimal*, jule::I64);
inline jule::U64 _1a8ce1473_roundedInteger(_1a8ce0263_decimal*);
inline jule::Ptr<_1a8d04e26_Const> static__1a8d05366_NewI64(jule::I64);
inline jule::Ptr<_1a8d04e26_Const> static__1a8d05630_NewU64(jule::U64);
inline jule::Ptr<_1a8d04e26_Const> static__1a8d058e9_NewBool(jule::Bool);
inline jule::Ptr<_1a8d04e26_Const> static__1a8d05bb3_NewStr(jule::Str);
inline jule::Ptr<_1a8d04e26_Const> static__1a8d05e7c_NewF64(jule::F64);
inline jule::Ptr<_1a8d04e26_Const> static__1a8d0618b_NewNil(void);
inline jule::I64 _1a8d067eb_ReadI64(_1a8d04e26_Const*);
inline jule::U64 _1a8d06a82_ReadU64(_1a8d04e26_Const*);
inline jule::Bool _1a8d06d18_ReadBool(_1a8d04e26_Const*);
inline jule::Str _1a8d0709e_ReadStr(_1a8d04e26_Const*);
inline jule::F64 _1a8d07335_ReadF64(_1a8d04e26_Const*);
inline jule::I64 _1a8d075bb_AsI64(_1a8d04e26_Const*);
inline jule::U64 _1a8d07852_AsU64(_1a8d04e26_Const*);
inline jule::F64 _1a8d07ad8_AsF64(_1a8d04e26_Const*);
inline void _1a8d07d91_SetI64(_1a8d04e26_Const*, jule::I64);
inline void _1a8d08149_SetU64(_1a8d04e26_Const*, jule::U64);
inline void _1a8d08402_SetBool(_1a8d04e26_Const*, jule::Bool);
inline void _1a8d086aa_SetStr(_1a8d04e26_Const*, jule::Str);
inline void _1a8d08963_SetF64(_1a8d04e26_Const*, jule::F64);
inline jule::Bool _1a8d08de7_IsI64(_1a8d04e26_Const*);
inline jule::Bool _1a8d0917d_IsU64(_1a8d04e26_Const*);
inline jule::Bool _1a8d09414_IsBool(_1a8d04e26_Const*);
inline jule::Bool _1a8d0969a_IsStr(_1a8d04e26_Const*);
inline jule::Bool _1a8d09931_IsF64(_1a8d04e26_Const*);
inline jule::Bool _1a8d09bb7_IsNil(_1a8d04e26_Const*);
inline jule::Bool _1a8d0a349_And(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0a68a_Or(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0bb31_Add(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0be72_Sub(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0c2b3_Mul(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0c604_Div(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0c945_Mod(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0cc86_BitwiseAnd(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0d0c7_BitwiseOr(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0d418_Xor(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0d759_Lshift(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::Bool _1a8d0da9a_Rshift(_1a8d04e26_Const*, _1a8d04e26_Const);
inline jule::U8 _1ab1832e6_Prec(_1ab182e72_Token*);
inline void _1ab188b26_Fill(_1ab18873b_File*, jule::Slice<jule::U8>);
inline jule::Str _1ab188dac_Dir(_1ab18873b_File*);
inline jule::Str _1ab189143_Name(_1ab18873b_File*);
inline jule::Str _1ab18971a_GetRow(_1ab18873b_File*, jule::I64);
inline void _1ab192008_pushErr(_1ab191975_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab192569_lex(_1ab191975_lex*);
inline jule::Str _1ab1928aa_id(_1ab191975_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1ab192b41_resume(_1ab191975_lex*);
inline void _1ab192de9_lexLineComment(_1ab191975_lex*, jule::Ptr<_1ab182e72_Token>*);
inline void _1ab1931a2_lexRangeComment(_1ab191975_lex*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Str _1ab1934e3_num(_1ab191975_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ab193834_escapeSeq(_1ab191975_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ab193c30_getRune(_1ab191975_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1ab194071_lexRune(_1ab191975_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ab194307_lexStr(_1ab191975_lex*);
inline void _1ab19478b_newLine(_1ab191975_lex*);
inline jule::Bool _1ab194cec_isOp(_1ab191975_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab1951e8_lexBasicOps(_1ab191975_lex*, jule::Slice<jule::U8>, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab1955e4_lexId(_1ab191975_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab1959e0_lexNum(_1ab191975_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Ptr<_1ab182e72_Token> _1ab195c76_token(_1ab191975_lex*);
inline jule::Bool _1ab19a40c_IsUnsafe(_1ab19a099_PtrTypeDecl*);
inline jule::Bool _1ab19ab9e_AutoSized(_1ab19a83b_ArrTypeDecl*);
inline jule::Bool _1ab1a1952_Unhandled(_1ab1a15cd_FnCallExpr*);
inline jule::Bool _1ab1a1bd8_Ignored(_1ab1a15cd_FnCallExpr*);
inline jule::Bool _1ab1a9152_IsSelf(_1ab1a8ccd_ParamDecl*);
inline jule::Bool _1ab1aa593_IsAnon(_1ab1aa230_FnDecl*);
inline jule::Bool _1ab1ac397_IsInf(_1ab1ac034_Iter*);
inline jule::Bool _1ab1acbc2_IsWhileNext(_1ab1ac85e_WhileKind*);
inline jule::Ptr<_1ab1bb64d_FieldIns> _1ab1b6901_instance(jule::Ptr<_1ab1b657c_Field>);
inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab1b98d2_instance(jule::Ptr<_1ab1b9470_Struct>);
inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab1b9be0_appendInstance(_1ab1b9470_Struct*, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab1ba0db_FindMethod(_1ab1b9470_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab2853a4_Var> _1ab1ba42c_FindStatic(_1ab1b9470_Struct*, jule::Str);
inline jule::Ptr<_1ab1b657c_Field> _1ab1ba76d_FindField(_1ab1b9470_Struct*, jule::Str);
inline jule::Bool _1ab1baaae_IsImplements(_1ab1b9470_Struct*, jule::Ptr<_1ab1e26da_Trait>);
inline jule::Bool _1ab1bae00_IsUses(_1ab1b9470_Struct*, jule::Ptr<_1ab1b9470_Struct>);
inline jule::Ptr<_1ab1d1366_ParamIns> _1ab1cccbe_instance(jule::Ptr<_1ab1cc939_Param>);
inline jule::Bool _1ab1cd055_IsSelf(_1ab1cc939_Param*);
inline jule::Bool _1ab1cd2db_IsRef(_1ab1cc939_Param*);
inline jule::Bool _1ab1ce881_IsVoid(_1ab1ce40d_Fn*);
inline jule::Bool _1ab1ceb17_IsMethod(_1ab1ce40d_Fn*);
inline jule::Bool _1ab1ced9d_IsEntryPoint(_1ab1ce40d_Fn*);
inline jule::Bool _1ab1d0134_IsInit(_1ab1ce40d_Fn*);
inline jule::Bool _1ab1d03ba_IsAnon(_1ab1ce40d_Fn*);
inline jule::Bool _1ab1d0651_AnyVar(_1ab1ce40d_Fn*);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab1d08d7_instanceForce(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab1d0b6d_instance(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab1d0e7b_appendInstance(_1ab1ce40d_Fn*, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Str _1ab1d16c9_Str(_1ab1d1366_ParamIns*);
inline jule::Str _1ab1d2653_Str(_1ab1d2312_FnIns*);
inline jule::Bool _1ab1d2994_Equal(jule::Ptr<_1ab1d2312_FnIns>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Bool _1ab1d2e39_EqualFn(jule::Ptr<_1ab1d2312_FnIns>, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Bool _1ab1d327a_equalTrait(jule::Ptr<_1ab1d2312_FnIns>, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _1ab1d3511_Types(_1ab1d2312_FnIns*);
inline jule::Bool _1ab1d3797_IsBuiltin(_1ab1d2312_FnIns*);
inline jule::Bool _1ab1d3a2d_IsAnon(_1ab1d2312_FnIns*);
inline jule::Bool _1ab1d3d6e_Same(_1ab1d2312_FnIns*, jule::Ptr<_1ab1d2312_FnIns>);
inline jule::Str _1ab1d41b0_GetKindStr(_1ab1d2312_FnIns*, jule::Bool);
inline jule::Ptr<_1ab1d54d0_ReferenceStack> static__1ab1d57cc_new(void);
inline jule::I64 _1ab1d5bc8_Len(_1ab1d54d0_ReferenceStack*);
inline jule::Any _1ab1d6019_At(_1ab1d54d0_ReferenceStack*, jule::I64);
inline void _1ab1d62c2_Push(_1ab1d54d0_ReferenceStack*, jule::Any);
inline jule::Bool _1bb79ab84_Exist(_1ab1d54d0_ReferenceStack*, jule::Ptr<_1ab1d2312_FnIns>);
inline jule::Bool _1bab063a8_Exist(_1ab1d54d0_ReferenceStack*, jule::Ptr<_1ab2853a4_Var>);
inline jule::Bool _1babb749c_Exist(_1ab1d54d0_ReferenceStack*, jule::Ptr<_1ab1bc1ed_StructIns>);
inline jule::Bool _1bbb9e5d7_Exist(_1ab1d54d0_ReferenceStack*, jule::Ptr<_1ab1e26da_Trait>);
inline void _1ab1dbe54_pushErr(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab182e72_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab1dc6d5_pushSuggestion(_1ab1db5b3_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab1dcad1_checkCppUseDeclPath(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab1b1676_UseDecl>*, jule::Str*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dcdde_buildCppHeaderImport(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab1b1676_UseDecl>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dd230_buildStdImport(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab1b1676_UseDecl>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dd571_buildIdentImport(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Ptr<_1ab1b1676_UseDecl>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dd8b2_buildImport(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Ptr<_1ab1b1676_UseDecl>*);
inline jule::Bool _1ab1ddc03_checkDuplicateUseDecl(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab242a9d_ImportInfo>*);
inline void _1ab1de066_implImportSelections(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab242a9d_ImportInfo>*, jule::Ptr<_1ab1b1676_UseDecl>*);
inline jule::Str _1ab1de3a7_getAsLinkPath(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Str);
inline void _1ab1de7c5_pushCycleError(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Ptr<_1ab1db5b3_symbolBuilder>*, jule::Str, _1a7c4c7ed_StrBuilder*);
inline void _1ab1debe3_pushCrossCycleError(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Ptr<_1ab1db5b3_symbolBuilder>*, jule::Ptr<_1ab242a9d_ImportInfo>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab1e00de_checkImportCycles(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Ptr<_1ab242a9d_ImportInfo>, jule::Ptr<_1ab1b1676_UseDecl>*);
inline void _1ab1e050c_checkPackageAccessibility(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab1b1676_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1ab1e0908_importPackage(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Ptr<_1ab242a9d_ImportInfo>*, jule::Ptr<_1ab1b1676_UseDecl>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1e0c49_importUseDecl(jule::Ptr<_1ab1db5b3_symbolBuilder>, jule::Ptr<_1ab1b1676_UseDecl>*);
inline void _1ab1e0e47_importUseDecls(jule::Ptr<_1ab1db5b3_symbolBuilder>);
inline void _1ab1e1200_appendNode(_1ab1db5b3_symbolBuilder*, _1ab19756e_Node*);
inline void _1ab1e13ed_appendNodes(_1ab1db5b3_symbolBuilder*);
inline void _1ab1e16a6_pushDirectivePass(_1ab1db5b3_symbolBuilder*, jule::Ptr<_1ab19798c_Directive>*);
inline void _1ab1e18a4_appendTopDirectives(_1ab1db5b3_symbolBuilder*);
inline void _1ab1e1aa2_build(jule::Ptr<_1ab1db5b3_symbolBuilder>);
inline jule::Str _1ab1e2aa3_Str(_1ab1e26da_Trait*);
inline jule::Bool _1ab1e2de4_Equal(jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab1e3389_FindMethod(_1ab1e26da_Trait*, jule::Str);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab1e3a1b_findMethodInherit(_1ab1e26da_Trait*, jule::Str*);
inline jule::Bool _1ab1e4731_AutoExpr(_1ab1e4379_EnumItem*);
inline jule::Str _1ab1e526a_Str(_1ab1e4de6_Enum*);
inline jule::Bool _1ab1e55ab_Equal(jule::Ptr<_1ab1e4de6_Enum>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab1e4379_EnumItem> _1ab1e59da_FindItem(_1ab1e4de6_Enum*, jule::Str);
inline jule::Str _1ab1e6942_Str(_1ab1e6601_TypeEnum*);
inline jule::Bool _1ab1e6c83_Equal(jule::Ptr<_1ab1e6601_TypeEnum>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab1e6029_TypeEnumItem> _1ab1e71b2_FindItem(_1ab1e6601_TypeEnum*, jule::Str);
inline jule::Str _1ab1e9acc_Str(_1ab1e9758_comptimeRange*);
inline jule::Bool _1ab1e9e1d_Equal(jule::Ptr<_1ab1e9758_comptimeRange>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Str _1ab1ea5e4_Str(_1ab1ea22b_comptimeStructField*);
inline jule::Bool _1ab1ea935_Equal(jule::Ptr<_1ab1ea22b_comptimeStructField>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eaec9__Name(jule::Ptr<_1ab1ea22b_comptimeStructField>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eb3c5__Type(jule::Ptr<_1ab1ea22b_comptimeStructField>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eb7c1__Public(jule::Ptr<_1ab1ea22b_comptimeStructField>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1ebace_subIdent(jule::Ptr<_1ab1ea22b_comptimeStructField>, jule::Str*);
inline jule::Str _1ab1ec261_Str(_1ab1ebddc_comptimeStructFields*);
inline jule::Bool _1ab1ec5a2_Equal(jule::Ptr<_1ab1ebddc_comptimeStructFields>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ab1eca25_ready(_1ab1ebddc_comptimeStructFields*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1ab1ece43_step(_1ab1ebddc_comptimeStructFields*, jule::I64, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::I64 _1ab1ed1c9_len(_1ab1ebddc_comptimeStructFields*);
inline jule::Str _1ab1ed85b_Str(_1ab1ed4d7_comptimeStatic*);
inline jule::Bool _1ab1edb9c_Equal(jule::Ptr<_1ab1ed4d7_comptimeStatic>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1ee2c9__Name(jule::Ptr<_1ab1ed4d7_comptimeStatic>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1ee6c5__Type(jule::Ptr<_1ab1ed4d7_comptimeStatic>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eeac1__Public(jule::Ptr<_1ab1ed4d7_comptimeStatic>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eee12_subIdent(jule::Ptr<_1ab1ed4d7_comptimeStatic>, jule::Str*);
inline jule::Str _1ab20051c_Str(_1ab200198_comptimeStatics*);
inline jule::Bool _1ab20085d_Equal(jule::Ptr<_1ab200198_comptimeStatics>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ab200cd1_ready(_1ab200198_comptimeStatics*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1ab2011ee_step(_1ab200198_comptimeStatics*, jule::I64, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::I64 _1ab201485_len(_1ab200198_comptimeStatics*);
inline jule::Str _1ab201c27_Str(_1ab201793_comptimeEnumField*);
inline jule::Bool _1ab202068_Equal(jule::Ptr<_1ab201793_comptimeEnumField>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2024db__Name(jule::Ptr<_1ab201793_comptimeEnumField>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20282c_subIdent(jule::Ptr<_1ab201793_comptimeEnumField>, jule::Str*);
inline jule::Str _1ab202eae_Str(_1ab202b3a_comptimeEnumFields*);
inline jule::Bool _1ab203300_Equal(jule::Ptr<_1ab202b3a_comptimeEnumFields>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ab203773_ready(_1ab202b3a_comptimeEnumFields*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1ab203b91_step(_1ab202b3a_comptimeEnumFields*, jule::I64, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::I64 _1ab203e27_len(_1ab202b3a_comptimeEnumFields*);
inline jule::Str _1ab2045a9_Str(_1ab204235_comptimeParam*);
inline jule::Bool _1ab2048ea_Equal(jule::Ptr<_1ab204235_comptimeParam>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab205159__Name(jule::Ptr<_1ab204235_comptimeParam>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab205555__Type(jule::Ptr<_1ab204235_comptimeParam>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab205951__Variadic(jule::Ptr<_1ab204235_comptimeParam>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab205d4c__Reference(jule::Ptr<_1ab204235_comptimeParam>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20618d_subIdent(jule::Ptr<_1ab204235_comptimeParam>, jule::Str*);
inline jule::Str _1ab206820_Str(_1ab20649b_comptimeParams*);
inline jule::Bool _1ab206b61_Equal(jule::Ptr<_1ab20649b_comptimeParams>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ab2070d4_ready(_1ab20649b_comptimeParams*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1ab207502_step(_1ab20649b_comptimeParams*, jule::I64, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::I64 _1ab207788_len(_1ab20649b_comptimeParams*);
inline jule::Str _1ab207e1a_Str(_1ab207a96_comptimeTypeInfos*);
inline jule::Bool _1ab20825b_Equal(jule::Ptr<_1ab207a96_comptimeTypeInfos>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ab2086ce_ready(_1ab207a96_comptimeTypeInfos*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1ab208aec_step(_1ab207a96_comptimeTypeInfos*, jule::I64, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::I64 _1ab208d83_len(_1ab207a96_comptimeTypeInfos*);
inline jule::Str _1ab209515_Str(_1ab209191_comptimeTypeInfo*);
inline jule::Bool _1ab209856_Equal(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab209ea5__Str(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20a3a1__Kind(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20a79c__Bits(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20ab98__Elem(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20b094__Size(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20b490__Key(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20b88b__Value(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20bc87__Fields(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20c183__Statics(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20c57e__Public(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20c97a__Binded(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20cd76__Ordered(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20d272__Comparable(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20d66d__Mutable(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20da69__Types(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20de65__Exceptional(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20e361__CanNil(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20e75c__RC(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab20eb58__Result(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab210054__Params(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab210395_subIdent(jule::Ptr<_1ab209191_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1ab210a27_Str(_1ab2106a3_comptimeValue*);
inline jule::Bool _1ab210d68_Equal(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2113b8__Unwrap(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2117b4__Type(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab211bb0__Lvalue(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2120ab__Mutable(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2124a7__Const(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2128a3__Field(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab212be4_subIdent(jule::Ptr<_1ab2106a3_comptimeValue>, jule::Str*);
inline jule::Str _1ab213376_Str(_1ab213002_comptimeFiles*);
inline jule::Bool _1ab2136b7_Equal(jule::Ptr<_1ab213002_comptimeFiles>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ab213b3a_ready(_1ab213002_comptimeFiles*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1ab214058_step(_1ab213002_comptimeFiles*, jule::I64, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::I64 _1ab2142de_len(_1ab213002_comptimeFiles*);
inline jule::Str _1ab214a92_Str(_1ab2145ec_comptimeFile*);
inline jule::Bool _1ab214dd3_Equal(jule::Ptr<_1ab2145ec_comptimeFile>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab215400__Path(jule::Ptr<_1ab2145ec_comptimeFile>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2157eb__Name(jule::Ptr<_1ab2145ec_comptimeFile>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab215be7__Dir(jule::Ptr<_1ab2145ec_comptimeFile>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab216038_subIdent(jule::Ptr<_1ab2145ec_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1ab262e97_Sema>*,jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*)> _1ab218e09_readyFn(jule::Ptr<_1ab218a0d_constraintChecker>);
inline jule::Bool _1ab219190_readyFi(jule::Ptr<_1ab218a0d_constraintChecker>);
inline jule::Bool _1ab219426_readySi(jule::Ptr<_1ab218a0d_constraintChecker>);
inline jule::Bool _1ab2196ac_ready(jule::Ptr<_1ab218a0d_constraintChecker>);
inline jule::Bool _1ab219943_check(jule::Ptr<_1ab218a0d_constraintChecker>);
inline jule::Bool _1ab21b22a_IsTraitImpl(_1ab21ad62_Impl*);
inline jule::Bool _1ab21b4b1_IsStructImpl(_1ab21ad62_Impl*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab228a62_SelectPackage(_1ab2285bc_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>);
inline jule::Ptr<_1ab2853a4_Var> _1ab228e5d_FindVar(_1ab2285bc_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab229359_FindTypeAlias(_1ab2285bc_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1b9470_Struct> _1ab229755_FindStruct(_1ab2285bc_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab229b51_FindFn(_1ab2285bc_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1e26da_Trait> _1ab229e92_FindTrait(_1ab2285bc_scopeChecker*, jule::Str);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab22a2d3_FindEnum(_1ab2285bc_scopeChecker*, jule::Str);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab22a624_FindTypeEnum(_1ab2285bc_scopeChecker*, jule::Str);
inline jule::Bool _1ab22a976_isUnsafe(jule::Ptr<_1ab2285bc_scopeChecker>);
inline jule::Bool _1ab22ac0c_isRoot(_1ab2285bc_scopeChecker*);
inline void _1ab22ae0a_stop(_1ab2285bc_scopeChecker*);
inline jule::Bool _1ab22b191_stopped(_1ab2285bc_scopeChecker*);
inline jule::Bool _1ab22b427_isDeferred(jule::Ptr<_1ab2285bc_scopeChecker>);
inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab22b6ad_getRoot(jule::Ptr<_1ab2285bc_scopeChecker>);
inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab22b944_getHardRoot(jule::Ptr<_1ab2285bc_scopeChecker>);
inline jule::Ptr<_1ab223b5b_Label> _1ab22bc85_findLabel(_1ab2285bc_scopeChecker*, jule::Str*);
inline jule::Ptr<_1ab227126_scopeLabel> _1ab22c0c6_findLabelScope(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Str*);
inline jule::Ptr<_1ab227126_scopeLabel> _1ab22c417_findLabelAll(_1ab2285bc_scopeChecker*, jule::Str*);
inline jule::Bool _1ab22c813_isDuplicatedIdent(_1ab2285bc_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1ab22cabb_checkVarDecl(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ab3da_VarDecl>);
inline void _1ab22cd74_checkTypeAlias(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab2e5733_TypeAlias>*);
inline void _1ab22d12c_checkTypeAliasDecl(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1b008c_TypeAliasDecl>);
inline jule::Ptr<_1ab2212b8_Scope> _1ab22d3b3_getChild(_1ab2285bc_scopeChecker*);
inline void _1ab22d7d1_checkChildSsc(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a8591_ScopeTree>*, jule::Ptr<_1ab2212b8_Scope>*, jule::Ptr<_1ab2285bc_scopeChecker>*);
inline jule::Ptr<_1ab2212b8_Scope> _1ab22dbcc_checkChildSc(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a8591_ScopeTree>*, jule::Ptr<_1ab2285bc_scopeChecker>*);
inline jule::Ptr<_1ab2212b8_Scope> _1ab22e01d_checkChild(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a8591_ScopeTree>*);
inline void _1ab22e2c6_checkAnonScope(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a8591_ScopeTree>);
inline void _1ab22e639_processErrorCall(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>*, jule::Ptr<_1ab182e72_Token>);
inline void _1ab22e8e2_checkExpr(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab19c8a4_Expr>);
inline jule::Ptr<_1ab2216d6_If> _1ab22ec33_checkIf(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1adec0_If>);
inline jule::Ptr<_1ab2219d3_Else> _1ab230074_checkElse(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ae399_Else>);
inline void _1ab23032c_checkConditional(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ae850_Conditional>);
inline void _1ab230805_checkIterScopeSsc(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab1a8591_ScopeTree>, jule::Ptr<_1ab2212b8_Scope>*, jule::Ptr<_1ab2285bc_scopeChecker>);
inline jule::Ptr<_1ab2212b8_Scope> _1ab230cab_checkIterScopeSc(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab1a8591_ScopeTree>, jule::Ptr<_1ab2285bc_scopeChecker>);
inline jule::Ptr<_1ab2212b8_Scope> _1ab2311a7_checkIterScope(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Uintptr, jule::Ptr<_1ab1a8591_ScopeTree>*);
inline void _1ab231460_checkInfIter(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ac034_Iter>*);
inline void _1ab231718_checkWhileIter(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ac034_Iter>*);
inline void _1ab231b36_checkComptimeRangeIter(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ac034_Iter>*, jule::Ptr<_1ab223100_RangeIter>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab231dde_checkRangeIter(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ac034_Iter>*);
inline void _1ab232197_checkIter(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ac034_Iter>);
inline jule::Bool _1ab2324d8_checkValidContLabel(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Uintptr);
inline jule::Bool _1ab232829_checkValidBreakLabel(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1ab223485_ContSt> _1ab232b6a_checkContValidScope(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ada19_ContSt>);
inline void _1ab232e23_checkCont(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ada19_ContSt>);
inline void _1ab2331cb_checkLabel(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a5b54_LabelSt>);
inline void _1ab233484_pushGoto(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a602d_GotoSt>);
inline void _1ab23373c_checkPostfix(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a701d_AssignSt>);
inline jule::Bool _1ab233a7d_isNewAssignIdent(_1ab2285bc_scopeChecker*, jule::Str);
inline void _1ab233d36_removeInteriorMutRisk(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab2342dc_checkStructureAssignOp(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab1a701d_AssignSt>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab234595_checkSingleAssign(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a701d_AssignSt>*);
inline void _1ab234b28_processEndPartOfMultiAssign(_1ab2285bc_scopeChecker*, jule::Ptr<_1ab224c8e_MultiAssign>*, jule::Ptr<_1ab1a701d_AssignSt>*, jule::Ptr<_1ab1a698a_AssignLeft>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab234dd1_checkMultiAssign(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a701d_AssignSt>*);
inline void _1ab235189_checkAssignSt(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a701d_AssignSt>);
inline jule::Ptr<_1ab2212b8_Scope> _1ab235585_checkCaseScope(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab226037_Case>*, jule::Ptr<_1ab1a8591_ScopeTree>*);
inline jule::Ptr<_1ab226037_Case> _1ab235ae6_checkCase(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab2253ee_Match>, jule::I64, jule::Ptr<_1ab1b0543_Case>, jule::Ptr<_1ab2b5c0e_Data>);
inline void _1ab236014_checkCases(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1b0d5c_MatchCase>*, jule::Ptr<_1ab2253ee_Match>, jule::Ptr<_1ab2b5c0e_Data>);
inline jule::Ptr<_1ab226037_Case> _1ab236410_checkDefault(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab2253ee_Match>, jule::Ptr<_1ab1ae399_Else>);
inline void _1ab236773_checkComptimePanic(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab182e72_Token>, jule::Ptr<_1ab2212b8_Scope>*);
inline void _1ab236ad6_processConstMatch(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab2253ee_Match>*, jule::Ptr<_1ab1b0d5c_MatchCase>*);
inline void _1ab236d8e_checkTypeMatch(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1b0d5c_MatchCase>*);
inline void _1ab237147_checkCommonMatch(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1b0d5c_MatchCase>*);
inline void _1ab237400_checkMatch(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1b0d5c_MatchCase>);
inline void _1ab2376a8_checkFall(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a632a_FallSt>);
inline jule::Ptr<_1ab22385e_BreakSt> _1ab2379e9_checkBreakWithLabel(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ad640_BreakSt>);
inline jule::Ptr<_1ab22385e_BreakSt> _1ab237d3a_checkPlainBreak(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ad640_BreakSt>);
inline void _1ab2380e3_checkBreak(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ad640_BreakSt>);
inline void _1ab23839b_checkRet(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1ab7b4_RetSt>);
inline void _1ab238654_checkUseExpr(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab19d278_UseExpr>);
inline void _1ab23890c_checkNode(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Any*);
inline void _1ab238b0a_checkResult(jule::Ptr<_1ab2285bc_scopeChecker>);
inline void _1ab238d08_checkTree(jule::Ptr<_1ab2285bc_scopeChecker>);
inline void _1ab23916b_checkGoto(_1ab2285bc_scopeChecker*, jule::Ptr<_1ab2276a9_scopeGoto>*, jule::Ptr<_1ab227126_scopeLabel>*);
inline void _1ab239369_checkGotos(_1ab2285bc_scopeChecker*);
inline void _1ab239567_checkLabels(_1ab2285bc_scopeChecker*);
inline void _1ab239765_checkVars(_1ab2285bc_scopeChecker*);
inline void _1ab239963_checkAliases(_1ab2285bc_scopeChecker*);
inline void _1ab239cc6_check(jule::Ptr<_1ab2285bc_scopeChecker>, jule::Ptr<_1ab1a8591_ScopeTree>*, jule::Ptr<_1ab2212b8_Scope>*);
inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab23a05c_newChildChecker(jule::Ptr<_1ab2285bc_scopeChecker>);
inline void _1ab23ba0e_checkCdef(_1ab23b602_directiveChecker*, jule::Ptr<_1ab19798c_Directive>*);
inline void _1ab23bcb7_checkTypedef(_1ab23b602_directiveChecker*, jule::Ptr<_1ab19798c_Directive>*);
inline void _1ab23c070_checkNamespace(_1ab23b602_directiveChecker*, jule::Ptr<_1ab19798c_Directive>*);
inline void _1ab23c328_checkDeprecated(_1ab23b602_directiveChecker*, jule::Ptr<_1ab19798c_Directive>*);
inline void _1ab23c5d1_checkTest(_1ab23b602_directiveChecker*, jule::Ptr<_1ab19798c_Directive>*);
inline void _1ab23c889_checkDirective(_1ab23b602_directiveChecker*, jule::Ptr<_1ab19798c_Directive>*);
inline void _1ab23ca87_check(_1ab23b602_directiveChecker*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab243087_SelectPackage(_1ab242a9d_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>);
inline jule::Ptr<_1ab2853a4_Var> _1ab243483_FindVar(_1ab242a9d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab24387e_FindTypeAlias(_1ab242a9d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1b9470_Struct> _1ab243c7a_FindStruct(_1ab242a9d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab244176_FindFn(_1ab242a9d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1e26da_Trait> _1ab2444b7_FindTrait(_1ab242a9d_ImportInfo*, jule::Str);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab244808_FindEnum(_1ab242a9d_ImportInfo*, jule::Str);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab244b49_FindTypeEnum(_1ab242a9d_ImportInfo*, jule::Str);
inline jule::Bool _1ab2450de_isLookupable(_1ab242a9d_ImportInfo*, jule::Str*);
inline jule::Bool _1ab245430_existIdent(_1ab242a9d_ImportInfo*, jule::Str);
inline jule::Bool _1ab2456b6_isAccessibleViaSelection(_1ab242a9d_ImportInfo*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab245e69_SelectPackage(_1ab2459c4_Package*, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>);
inline jule::Ptr<_1ab2853a4_Var> _1ab246365_FindVar(_1ab2459c4_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab246761_FindTypeAlias(_1ab2459c4_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1b9470_Struct> _1ab246b5c_FindStruct(_1ab2459c4_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab247058_FindFn(_1ab2459c4_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1e26da_Trait> _1ab247399_FindTrait(_1ab2459c4_Package*, jule::Str);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab2476da_FindEnum(_1ab2459c4_Package*, jule::Str);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab247a2b_FindTypeEnum(_1ab2459c4_Package*, jule::Str);
inline jule::Ptr<_1ab209191_comptimeTypeInfo> _1ab2627d2_pushComptimeTypeInfo(_1ab262370_commonSemaMeta*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab26343c_SelectPackage(_1ab262e97_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>);
inline jule::Ptr<_1ab2853a4_Var> _1ab263838_FindVar(_1ab262e97_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab263c34_FindTypeAlias(_1ab262e97_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1b9470_Struct> _1ab264130_FindStruct(_1ab262e97_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab26452b_FindFn(_1ab262e97_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1e26da_Trait> _1ab26486c_FindTrait(_1ab262e97_Sema*, jule::Str);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab264bad_FindEnum(_1ab262e97_Sema*, jule::Str);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab264eee_FindTypeEnum(_1ab262e97_Sema*, jule::Str);
inline jule::Bool _1ab26540b_isFlag(_1ab262e97_Sema*, jule::I64);
inline void _1ab2656b4_setCurrentFile(_1ab262e97_Sema*, jule::Ptr<_1ab2b0863_SymbolTable>);
inline void _1ab265ad2_pushErr(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab265e45_pushSuggestion(_1ab262e97_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab266341_isAccessibleDefine(_1ab262e97_Sema*, jule::Bool, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1ab2667e7_isDuplicatedIdent(_1ab262e97_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1ab266b5a_checkDirectives(jule::Ptr<_1ab262e97_Sema>, jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Any);
inline jule::Bool _1ab267111_checkGenericQuantity(_1ab262e97_Sema*, jule::I64, jule::I64, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1ab26750c_isDuplicatedImportSelection(_1ab262e97_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1ab267908_getImportDef(_1ab262e97_Sema*, jule::Str*, jule::Ptr<_1ab242a9d_ImportInfo>*);
inline jule::Bool _1bb3473ce_checkImportSelection(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::Bool _1bb34b526_checkImportSelection(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab2e5733_TypeAlias>*);
inline jule::Bool _1bb350629_checkImportSelection(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1b9470_Struct>*);
inline jule::Bool _1bb354a18_checkImportSelection(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1e26da_Trait>*);
inline jule::Bool _1bb358b3d_checkImportSelection(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1e4de6_Enum>*);
inline jule::Bool _1bb35cc63_checkImportSelection(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1e6601_TypeEnum>*);
inline jule::Bool _1bb361d66_checkImportSelection(_1ab262e97_Sema*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Bool _1ab268145_checkImportSelectedSelections(_1ab262e97_Sema*, jule::Ptr<_1ab242a9d_ImportInfo>*);
inline jule::Bool _1bb366541_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab2853a4_Var>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1bb367685_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1bb369e3a_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1b9470_Struct>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1bb36c68a_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1bb36de50_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1e26da_Trait>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1bb37265c_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1e4de6_Enum>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1bb374d68_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1e6601_TypeEnum>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab268882_checkImportAllSelections(_1ab262e97_Sema*, jule::Ptr<_1ab242a9d_ImportInfo>*);
inline jule::Bool _1ab268bc3_checkImportSelections(_1ab262e97_Sema*, jule::Ptr<_1ab242a9d_ImportInfo>*);
inline jule::Bool _1ab269014_isUseAliasDuplication(_1ab262e97_Sema*, jule::Ptr<_1ab242a9d_ImportInfo>*);
inline jule::Bool _1ab269355_checkImport(_1ab262e97_Sema*, jule::Ptr<_1ab242a9d_ImportInfo>*);
inline void _1ab269553_checkImports(_1ab262e97_Sema*);
inline void _1ab269751_implFileImpls(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab26994e_implImpls(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab269b4c_checkEnums(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab269d4a_checkFileInherits(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab26a048_checkInherits(jule::Ptr<_1ab262e97_Sema>);
inline _1ab3083d3_typeChecker _1ab26a4ee_typeChecker(jule::Ptr<_1ab262e97_Sema>, jule::Trait<_1ab31605b_Lookup>, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>, jule::Ptr<_1ab3073e3_referencer>);
inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26aa60_buildTypeWithRefers(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab198570_TypeDecl>*, jule::Trait<_1ab31605b_Lookup>, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>, jule::Ptr<_1ab3073e3_referencer>);
inline jule::Bool _1ab26b0c1_checkTypeWithRefers(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2ed6e7_TypeSymbol>*, jule::Trait<_1ab31605b_Lookup>, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>, jule::Ptr<_1ab3073e3_referencer>);
inline jule::Ptr<_1ab218a0d_constraintChecker> _1ab26b357_constraintChecker(jule::Ptr<_1ab262e97_Sema>);
inline jule::Bool _1ab26b753_checkType(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2ed6e7_TypeSymbol>*, jule::Trait<_1ab31605b_Lookup>);
inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26bc09_buildTypeWithGenerics(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab198570_TypeDecl>*, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>, jule::Ptr<_1ab1d54d0_ReferenceStack>);
inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26c38b_selectType(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab198570_TypeDecl>*);
inline jule::Ptr<_1ab2b7903_Eval> _1ab26c842_evalpd(jule::Ptr<_1ab262e97_Sema>, jule::Trait<_1ab31605b_Lookup>, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2853a4_Var>);
inline jule::Ptr<_1ab2b7903_Eval> _1ab26cc3d_evalp(jule::Ptr<_1ab262e97_Sema>, jule::Trait<_1ab31605b_Lookup>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ab2b7903_Eval> _1ab26d07e_eval(jule::Ptr<_1ab262e97_Sema>, jule::Trait<_1ab31605b_Lookup>);
inline jule::Bool _1ab26d5e0_checkAssignType(jule::Ptr<_1ab262e97_Sema>, jule::Bool, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1ab26da96_checkTypeCompatibility(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26e04c_buildNonGenericTypeKind(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab198570_TypeDecl>*, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>*, jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>*);
inline jule::Bool _1ab26e448_buildFnNonGenericTypeKinds(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>*);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab26e789_getTraitCheckFnKind(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Bool _1ab26ec40_checkConstraintsFn(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1d2312_FnIns>);
inline jule::Bool _1ab2701e6_checkConstraintsStruct(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1bc1ed_StructIns>);
inline jule::Bool _1ab2705e2_fnEnvironment(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1ab262e97_Sema>*,jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*)>);
inline void _1ab27089a_checkFnParamKind(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1d1366_ParamIns>*);
inline jule::Bool _1ab270bdb_reloadFnInsTypes(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1d2312_FnIns>);
inline jule::Bool _1ab271192_checkRefValidityForInitExpr(jule::Ptr<_1ab262e97_Sema>, jule::Bool, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab2714d3_isMutRiskyStruct(_1ab262e97_Sema*, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline jule::Bool _1ab271aee_checkValidityForInitExpr(jule::Ptr<_1ab262e97_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab271eea_checkTypeAliasDeclKind(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2e5733_TypeAlias>*, jule::Trait<_1ab31605b_Lookup>);
inline void _1ab27235d_checkTypeAliasDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2e5733_TypeAlias>*, jule::Trait<_1ab31605b_Lookup>);
inline void _1ab272616_checkTypeAliasDeclDup(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2e5733_TypeAlias>*);
inline jule::Bool _1ab27289c_checkTypeAliasDecls(jule::Ptr<_1ab262e97_Sema>);
inline void _1bb427305_checkEnumItemsDup(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>>);
inline void _1bb434400_checkEnumItemsDup(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>>);
inline void _1ab272e0d_checkEnumItemsStr(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e4de6_Enum>*);
inline void _1bb402d6e_checkEnumItemInt(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1e4de6_Enum>*, jule::Ptr<_1ab2ee0ee_Prim>*, jule::Ptr<_1ab1e4379_EnumItem>*, jule::U64*);
inline void _1bb412ed3_checkEnumItemInt(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1e4de6_Enum>*, jule::Ptr<_1ab2ee0ee_Prim>*, jule::Ptr<_1ab1e4379_EnumItem>*, jule::I64*);
inline void _1bb3ee024_checkEnumItemsInt1(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2ee0ee_Prim>*, jule::Ptr<_1ab1e4de6_Enum>*);
inline void _1bb40c6c5_checkEnumItemsInt1(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2ee0ee_Prim>*, jule::Ptr<_1ab1e4de6_Enum>*);
inline void _1ab273aac_checkEnumItemsInt(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e4de6_Enum>*);
inline void _1ab273d65_checkEnumDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e4de6_Enum>*);
inline void _1ab27411d_checkTypeEnumDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e6601_TypeEnum>*);
inline jule::Bool _1ab2743a4_checkEnumDecls(jule::Ptr<_1ab262e97_Sema>);
inline jule::Bool _1ab27463a_checkTypeEnumDecls(jule::Ptr<_1ab262e97_Sema>);
inline jule::Bool _1ab27497b_checkDeclGenerics(_1ab262e97_Sema*, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>*);
inline jule::Bool _1ab274cbc_checkFnDeclParamsDup(_1ab262e97_Sema*, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Bool _1ab27510d_checkFnDeclResultDup(_1ab262e97_Sema*, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Bool _1ab27544e_checkFnVariadicParam(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ab275707_checkFnDeclPrototype(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Bool _1ab275bad_catchTraitInheritCycle(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab1e26da_Trait>, _1a7c4c7ed_StrBuilder*);
inline jule::Bool _1ab275eee__checkTraitDeclInherits(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e26da_Trait>*);
inline void _1ab2762a7_checkTraitDeclInherits(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e26da_Trait>*);
inline void _1ab276560_checkTraitDeclMethod(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ab276818_checkTraitDeclMethods(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e26da_Trait>*);
inline void _1ab276ac1_checkTraitDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1e26da_Trait>*);
inline jule::Bool _1ab276d57_checkTraitDecls(jule::Ptr<_1ab262e97_Sema>);
inline jule::Bool _1ab277253_checkTraitImplMethods(_1ab262e97_Sema*, jule::Ptr<_1ab1e26da_Trait>*, jule::Ptr<_1ab21ad62_Impl>*);
inline jule::Bool _1ab27764e_implToStruct(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1b9470_Struct>*, jule::Ptr<_1ab21ad62_Impl>*);
inline void _1ab277907_implTrait(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab21ad62_Impl>*);
inline void _1ab277bb0_implStruct(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab21ad62_Impl>*);
inline void _1ab277e68_implImpl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab21ad62_Impl>*);
inline void _1ab2782cb_checkVarDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2853a4_Var>*, jule::Trait<_1ab31605b_Lookup>);
inline void _1ab278584_checkGlobalVarDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2853a4_Var>*);
inline jule::Bool _1ab27881a_checkGlobalDecls(jule::Ptr<_1ab262e97_Sema>);
inline jule::Bool _1ab278c16_checkStructTraitImpl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1b9470_Struct>*, jule::Ptr<_1ab1e26da_Trait>*);
inline jule::Bool _1ab279057_checkStructImpls(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1b9470_Struct>*);
inline jule::Bool _1ab279398_checkStructFields(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ab279651_checkStructDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1b9470_Struct>*);
inline jule::Bool _1ab2798d7_checkStructDecls(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab279b90_checkAnonFuncDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ab279e48_checkFuncDecl(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Bool _1ab27a289_checkFuncDeclsBy(jule::Ptr<_1ab262e97_Sema>, jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>*);
inline jule::Bool _1ab27a520_checkFuncDecls(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab27a93d_pushCycleError(_1ab262e97_Sema*, jule::Str*, jule::Str*, _1a7c4c7ed_StrBuilder*);
inline void _1ab27b0e2_checkPackageDecls(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab27b455_checkDataForTypeInference(_1ab262e97_Sema*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>*);
inline void _1ab27b70d_checkVarValue(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2853a4_Var>*);
inline void _1ab27ba71_evalVarValue(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2853a4_Var>*, jule::Trait<_1ab31605b_Lookup>);
inline void _1ab27bdd4_checkVar(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab2853a4_Var>*, jule::Trait<_1ab31605b_Lookup>);
inline void _1ab27c0d2_checkGlobals(jule::Ptr<_1ab262e97_Sema>);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab27c4cd_readyToCheckFn(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ab27c841_checkTypeMethod(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab27cce7_checkStructInsOp(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab1ce40d_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1ab1ce40d_Fn>)>);
inline jule::Bool _1ab27d1e3_checkStructEnv(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1ab27d5de_precheckStructIns(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab182e72_Token>);
inline void _1ab27d897_checkStructIns(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ab27db50_checkTypeStruct(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ab27dd4d_checkStructTypes(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab27e106_checkStructInsOperators(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1bc1ed_StructIns>);
inline void _1ab27e3ae_precheckStructType(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ab27e5ac_precheckStructTypes(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab27e865_checkRets(_1ab262e97_Sema*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ab27ebc8_checkFnInsSc(_1ab262e97_Sema*, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab2285bc_scopeChecker>*);
inline void _1ab28003b_checkFnInsCaller(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2802e4_checkFnIns(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ab28059c_checkFunc(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ab280855_checkTestFn(_1ab262e97_Sema*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ab280b0d_precheckFunc(jule::Ptr<_1ab262e97_Sema>, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ab280d0b_precheckFuncs(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab281009_checkFuncs(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab281207_checkPackageTypes(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab281405_setFileSemaFields(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab281603_setSemaFields(jule::Ptr<_1ab262e97_Sema>);
inline void _1ab2818ab_check(jule::Ptr<_1ab262e97_Sema>, jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*);
inline _1ab281cda_missingRetChecker static__1ab2821a3_new(void);
inline jule::Bool _1ab2824b1_checkConditional(_1ab281cda_missingRetChecker*, jule::Ptr<_1ab221e01_Conditional>);
inline jule::Bool _1ab282802_checkMatch(_1ab281cda_missingRetChecker*, jule::Ptr<_1ab2253ee_Match>);
inline jule::Bool _1ab282b43_checkInfIter(_1ab281cda_missingRetChecker*, jule::Ptr<_1ab2221ed_InfIter>);
inline jule::Bool _1ab282e84_checkScope(_1ab281cda_missingRetChecker*, jule::Ptr<_1ab2212b8_Scope>);
inline jule::Bool _1ab2832c5_check(_1ab281cda_missingRetChecker*, jule::Ptr<_1ab2212b8_Scope>);
inline jule::Bool _1ab285739_IsInitialized(_1ab2853a4_Var*);
inline jule::Bool _1ab2859c0_IsTypeInferred(_1ab2853a4_Var*);
inline jule::Bool _1ab285c56_untypedConstant(_1ab2853a4_Var*);
inline jule::Bool static__1ab286806_Dispose(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab286ac0_Str(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab286e44_logical(jule::Ptr<_1ab1ce40d_Fn>*, jule::Str);
inline jule::Bool static__1ab28720d_Eq(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab2874c7_Gt(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab287791_GtEq(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab287a5a_Lt(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab287d24_LtEq(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab288198_result(jule::Ptr<_1ab1ce40d_Fn>*, jule::Str);
inline jule::Bool static__1ab288462_Shl(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28872b_Shr(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab2889e5_Add(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab288cae_Sub(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab289078_Div(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab289342_Mul(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28960b_Mod(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab2898c5_BitAnd(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab289b8e_BitOr(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab289e58_BitXor(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28a2cc_unary(jule::Ptr<_1ab1ce40d_Fn>*, jule::Str);
inline jule::Bool static__1ab28a596_Neg(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28a860_Pos(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28ab29_BitNot(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28ae9d_assign(jule::Ptr<_1ab1ce40d_Fn>*, jule::Str);
inline jule::Bool static__1ab28b267_AddAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28b531_SubAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28b7ea_DivAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28bab4_MulAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28bd7d_ModAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28c147_ShlAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28c411_ShrAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28c6ca_BitOrAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28c994_BitAndAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline jule::Bool static__1ab28cc5d_BitXorAssign(jule::Ptr<_1ab1ce40d_Fn>);
inline void _1ab29cce5_pushErr(_1ab29c7ea_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab29d07b_checkTrait(_1ab29c7ea_typeCompatibilityChecker*);
inline jule::Bool _1ab29d312_checkPtr(_1ab29c7ea_typeCompatibilityChecker*);
inline jule::Bool _1ab29d598_checkPrim(_1ab29c7ea_typeCompatibilityChecker*);
inline jule::Bool _1ab29d994_typeEnum(_1ab29c7ea_typeCompatibilityChecker*, jule::Ptr<_1ab1e6601_TypeEnum>*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab29dc2a_checkTypeEnum(_1ab29c7ea_typeCompatibilityChecker*);
inline jule::Bool _1ab29deb1_check(_1ab29c7ea_typeCompatibilityChecker*);
inline void _1ab29ea3e_pushErr(_1ab29e599_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab29ecc5_checkValidity(_1ab29e599_assignTypeChecker*);
inline jule::Bool _1ab2a005b_checkConst(_1ab29e599_assignTypeChecker*);
inline jule::Bool _1ab2a02e2_isPrim(_1ab29e599_assignTypeChecker*);
inline jule::Bool _1ab2a0578_checkCompatibility(_1ab29e599_assignTypeChecker*);
inline jule::Bool _1ab2a080e_check(_1ab29e599_assignTypeChecker*);
inline jule::Bool _1bb60cd48_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1bb60c6a5_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1bb60e861_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1bb615647_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a1b0c_annotateConstraintMap(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a1e4d_annotateConstraintTup(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a228e_annotateConstraintFn(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a25d0_annotateConstraintIdent(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a2921_annotateConstraint(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1ab2a2c84_pushGeneric(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*, jule::I64);
inline jule::Bool _1ab2a30c5_annotatePrim(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a3416_annotateArr(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a3757_annotateSlc(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a3b53_checkMapKey(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a3e94_annotateMap(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a42d5_annotateFn(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a4626_annotatePtr(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a4967_annotateSptr(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a4ca8_annotateStruct(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a50e9_annotateAny(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a543a_annotateKind(_1ab2a1216_dynamicTypeAnnotation*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab2a56c1_annotate(_1ab2a1216_dynamicTypeAnnotation*);
inline void _1ab2a6617_pushErrToken(_1ab2a6073_fnCallArgChecker*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab2a697a_pushErr(_1ab2a6073_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>> _1ab2a6c11_getParams(_1ab2a6073_fnCallArgChecker*);
inline jule::Bool _1ab2a701e_checkCounts(_1ab2a6073_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>*);
inline jule::Bool _1ab2a74c5_checkArg(_1ab2a6073_fnCallArgChecker*, jule::Ptr<_1ab1d1366_ParamIns>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Bool _1ab2a78c1_push(_1ab2a6073_fnCallArgChecker*, jule::Ptr<_1ab1d1366_ParamIns>*, jule::Ptr<_1ab19c8a4_Expr>);
inline jule::Bool _1ab2a7cbc_pushVariadic(_1ab2a6073_fnCallArgChecker*, jule::Ptr<_1ab1d1366_ParamIns>*, jule::I64);
inline jule::Bool _1ab2a810d_checkArgs(_1ab2a6073_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>*);
inline jule::Bool _1ab2a8394_checkDynamicTypeAnnotation(_1ab2a6073_fnCallArgChecker*);
inline jule::Bool _1ab2a862a_check(_1ab2a6073_fnCallArgChecker*);
inline void _1ab2a950a_pushErr(_1ab2a8eaa_structLitChecker*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab2a986d_pushSuggestion(_1ab2a8eaa_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab2a9c8b_pushMatch(_1ab2a8eaa_structLitChecker*, jule::Ptr<_1ab1bb64d_FieldIns>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>*);
inline void _1ab2aa0ee_checkPair(_1ab2a8eaa_structLitChecker*, jule::Ptr<_1ab1a20c3_FieldExprPair>*, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>*);
inline jule::Bool _1ab2aa440_readyExprs(_1ab2a8eaa_structLitChecker*, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>*);
inline void _1ab2aa6e8_check(_1ab2a8eaa_structLitChecker*, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>*);
inline jule::Ptr<_1ab2853a4_Var> _1ab2ab276_buildVar(_1ab2aac8c_rangeChecker*, jule::Ptr<_1ab1ab3da_VarDecl>*);
inline void _1ab2ab474_setSizeKey(_1ab2aac8c_rangeChecker*);
inline void _1ab2ab892_checkRangeExprValidity(_1ab2aac8c_rangeChecker*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1ab2aba90_checkSlice(_1ab2aac8c_rangeChecker*);
inline void _1ab2abc8d_checkArray(_1ab2aac8c_rangeChecker*);
inline void _1ab2abe8b_checkMapKeyA(_1ab2aac8c_rangeChecker*);
inline void _1ab2ac189_checkMapKeyB(_1ab2aac8c_rangeChecker*);
inline void _1ab2ac387_checkMap(_1ab2aac8c_rangeChecker*);
inline void _1ab2ac585_checkStr(_1ab2aac8c_rangeChecker*);
inline void _1ab2ac783_checkComptime(_1ab2aac8c_rangeChecker*);
inline jule::Bool _1ab2aca19_checkComptimeRange(_1ab2aac8c_rangeChecker*);
inline jule::Bool _1ab2acca0_check(_1ab2aac8c_rangeChecker*);
inline void _1ab2ad91b_prepareTypes(_1ab2ad4ed_retTypeChecker*);
inline void _1ab2adbc4_prepareExprs(_1ab2ad4ed_retTypeChecker*, jule::Ptr<_1ab19c8a4_Expr>*);
inline void _1ab2addc2_checkExprs(_1ab2ad4ed_retTypeChecker*);
inline jule::Bool _1ab2ae213_check(_1ab2ad4ed_retTypeChecker*, jule::Ptr<_1ab19c8a4_Expr>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab2b0d4c_SelectPackage(_1ab2b0863_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>);
inline jule::Ptr<_1ab2853a4_Var> _1ab2b1248_FindVar(_1ab2b0863_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab2b1644_FindTypeAlias(_1ab2b0863_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1b9470_Struct> _1ab2b1a40_FindStruct(_1ab2b0863_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab2b1e3b_FindFn(_1ab2b0863_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1e26da_Trait> _1ab2b227c_FindTrait(_1ab2b0863_SymbolTable*, jule::Str);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab2b25bd_FindEnum(_1ab2b0863_SymbolTable*, jule::Str);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab2b290e_FindTypeEnum(_1ab2b0863_SymbolTable*, jule::Str);
inline jule::Ptr<_1ab2853a4_Var> _1ab2b302a_findVar(_1ab2b0863_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab2b34d1_findTypeAlias(_1ab2b0863_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1ab2b38cc_defByIdent(_1ab2b0863_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1ab2b3d83_isDuplicatedIdent(_1ab2b0863_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1ab2b60b6_IsNil(_1ab2b5c0e_Data*);
inline jule::Bool _1ab2b634c_IsVoid(_1ab2b5c0e_Data*);
inline jule::Bool _1ab2b65d3_IsConst(_1ab2b5c0e_Data*);
inline jule::Bool _1ab2b6924_GoodOperand(_1ab2b5c0e_Data*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2b7e53_pushErr(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab2b82b6_pushSuggestion(_1ab2b7903_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab2b84b4_allowBuiltin(_1ab2b7903_Eval*);
inline void _1ab2b86b2_disallowBuiltin(_1ab2b7903_Eval*);
inline jule::Bool _1ab2b8948_isUnsafe(_1ab2b7903_Eval*);
inline jule::Bool _1ab2b8bce_isGlobal(_1ab2b7903_Eval*);
inline jule::Bool _1ab2b8edc_applyNumericPrefix(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b932d_litStr(_1ab2b7903_Eval*, jule::Ptr<_1ab19d94e_LitExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b966e_litRune(_1ab2b7903_Eval*, jule::Ptr<_1ab19d94e_LitExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b99b0_litFloat(_1ab2b7903_Eval*, jule::Ptr<_1ab19d94e_LitExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b9d01_litInt(_1ab2b7903_Eval*, jule::Ptr<_1ab19d94e_LitExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ba142_litNum(_1ab2b7903_Eval*, jule::Ptr<_1ab19d94e_LitExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ba483_evalLit(_1ab2b7903_Eval*, jule::Ptr<_1ab19d94e_LitExpr>);
inline jule::Any _1ab2ba7c4_findBuiltins(_1ab2b7903_Eval*, jule::Str*);
inline jule::Any _1ab2babc0_getDef(_1ab2b7903_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab1d54d0_ReferenceStack> _1ab2bae56_getOwnerRefers(_1ab2b7903_Eval*);
inline void _1bb798896_pushReference(_1ab2b7903_Eval*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1bb7ad13b_pushReference(_1ab2b7903_Eval*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1babb516a_pushReference(_1ab2b7903_Eval*, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bb550__evalEnum(_1ab2b7903_Eval*, jule::Ptr<_1ab1e4de6_Enum>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bb94b_evalEnum(_1ab2b7903_Eval*, jule::Ptr<_1ab1e4de6_Enum>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bbc8c__evalTypeEnum(_1ab2b7903_Eval*, jule::Ptr<_1ab1e6601_TypeEnum>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bc188_evalTypeEnum(_1ab2b7903_Eval*, jule::Ptr<_1ab1e6601_TypeEnum>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bc4c9__evalStruct(_1ab2b7903_Eval*, jule::Ptr<_1ab1bc1ed_StructIns>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bc8c5_evalStruct(_1ab2b7903_Eval*, jule::Ptr<_1ab1bc1ed_StructIns>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bcc16_evalFnIns(_1ab2b7903_Eval*, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1ab2bd079_checkDeprecated(_1ab2b7903_Eval*, jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bd475_evalFn(_1ab2b7903_Eval*, jule::Ptr<_1ab1ce40d_Fn>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2bd893_pushIllegalCycleError(_1ab2b7903_Eval*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*, _1a7c4c7ed_StrBuilder*);
inline jule::Bool _1ab2bdc8e_checkCrossCycle(_1ab2b7903_Eval*, jule::Ptr<_1ab2853a4_Var>*, _1a7c4c7ed_StrBuilder*);
inline jule::Bool _1ab2be18a_checkIllegalCycles(_1ab2b7903_Eval*, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2be586_evalVar(_1ab2b7903_Eval*, jule::Ptr<_1ab2853a4_Var>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2be982_evalTypeAlias(_1ab2b7903_Eval*, jule::Ptr<_1ab2e5733_TypeAlias>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bed7d_evalDef(_1ab2b7903_Eval*, jule::Any*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c01be_evalIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab19e2ce_IdentExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0510_evalUnary(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19e961_UnaryExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0851_evalVariadic(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19ed3a_VariadicExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0b92_evalUnsafe(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19dd28_UnsafeExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0ed3_evalArr(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a3dc7_SliceExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c1489_evalExpSlc(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a3dc7_SliceExpr>, jule::Ptr<_1ab2e6525_TypeKind>, jule::Any);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c17ca_evalSliceExpr(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a3dc7_SliceExpr>);
inline void _1ab2c1b3d_checkIntegerIndexingByData(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c205b_indexingPtr(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline void _1ab2c2479_indexingArr(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline void _1ab2c2897_indexingSlc(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline void _1ab2c2cb5_indexingMap(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline void _1ab2c31d3_indexingStr(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline void _1ab2c3601_toIndexing(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline jule::Bool _1ab2c3aa7_pushGenericsFromExprSubIdent(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a09b7_SubIdentExpr>*, jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>*, jule::Ptr<_1ab19c8a4_Expr>*);
inline jule::Bool _1ab2c3ea3_pushGenericsFromData(jule::Ptr<_1ab2b7903_Eval>, jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>*, jule::Ptr<_1ab19c8a4_Expr>*);
inline void _1ab2c4316_evalIdentDeclFromIndexing(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline jule::Bool _1ab2c47bc_checkGenericFn(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab182e72_Token>*, jule::Any*);
inline void _1ab2c4b30_evalFnGenericFromIndexing(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4867_IndexingExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c4e71_evalIndexing(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a4867_IndexingExpr>);
inline __jule_tuple_x_1ab2b5c0e_Data__jule_tuple_x_1ab2b5c0e_Data _1ab2c52b2_evalSlicingExprs(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a4ec7_SlicingExpr>*);
inline void _1ab2c556a_slicingArr(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2c5988_slicingStr(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2c5e61_checkSlicing(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a4ec7_SlicingExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c62a2_evalSlicing(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a4ec7_SlicingExpr>);
inline void _1ab2c66c0_castPtr(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c6add_castStruct(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c700b_castRef(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c7429_castSlc(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c778c_castStr(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c7baa_castInt(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c80c8_castNum(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c84e6_castPrim(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2c8859_castConstant(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2c8c77_castTypeEnum(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>*);
inline void _1ab2c9195_castTypeEnumT(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c964b_evalCastByTypeNData(_1ab2b7903_Eval*, jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c9b02_evalCastT(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab19c8a4_Expr>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c9e43_evalCast(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a0214_CastExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ca284_evalNsSelection(_1ab2b7903_Eval*, jule::Ptr<_1ab1a05dd_NsSelectionExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ca73a_evalStructLitExplicit(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1bc1ed_StructIns>, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2caa7b_evalStructLit(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a28ed_StructLit>);
inline _1ab3083d3_typeChecker _1ab2cad12_typeChecker(_1ab2b7903_Eval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cb153_evalType(_1ab2b7903_Eval*, jule::Ptr<_1ab198570_TypeDecl>);
inline void _1ab2cb4b6_callTypeFn(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2cb829_callBuiltinFn(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2cbb8c_checkFnOfConcurrentCall(_1ab2b7903_Eval*, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab182e72_Token>);
inline void _1ab2cc0aa_processExceptionalHandler(_1ab2b7903_Eval*, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2cc41d_callFn(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cc75e_evalFnCall(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a15cd_FnCallExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ccb5a_evalEnumStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab1e4de6_Enum>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cd056_evalTypeEnumStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab1e6601_TypeEnum>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cd452_evalStructStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab1bc1ed_StructIns>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cd908_evalTraitSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cde69_evalStructSubIdentField(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1bb64d_FieldIns>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ce4ca_evalStructSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab1bc1ed_StructIns>, jule::Ptr<_1ab1a09b7_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ce81b_evalIntTypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ceb5c_evalUintTypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cee9d_evalI8TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d02de_evalI16TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d0630_evalI32TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d0971_evalI64TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d0cb2_evalU8TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1103_evalU16TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1444_evalU32TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1785_evalU64TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1ac6_evalF32TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1e17_evalF64TypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d2313_evalPrimStatic(_1ab2b7903_Eval*, jule::Str, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d270e_evalTypeStatic(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab1a09b7_SubIdentExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1bb8e57a1_comptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab209191_comptimeTypeInfo>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1bb8e9d5a_comptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab1ea22b_comptimeStructField>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1bb8ee3c0_comptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab201793_comptimeEnumField>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1bb903979_comptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab204235_comptimeParam>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1bb908264_comptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab1ed4d7_comptimeStatic>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1bb90c7c9_comptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab2106a3_comptimeValue>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1bb911d3e_comptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab2145ec_comptimeFile>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>*);
inline __jule_tuple_x_1ab2b5c0e_Data__jule_tuple_bool _1ab2d30b1_tryComptimeObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1a09b7_SubIdentExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d34ac_evalObjSubIdent(_1ab2b7903_Eval*, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab1a09b7_SubIdentExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d37ed_evalSubIdent(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a09b7_SubIdentExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d3b3e_evalTuple(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19d575_TupleExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d403a_evalMap(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab304c92_Map>, jule::Ptr<_1ab1a2da4_BraceLit>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d437b_evalBraceLit(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a2da4_BraceLit>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d46bc_evalAnonFunc(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1aa230_FnDecl>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d4a0d_evalBinary(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab1a0e6d_BinaryExpr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d4d4e_evalExprKind(jule::Ptr<_1ab2b7903_Eval>, jule::Any);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d5190_eval1(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19c8a4_Expr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d54d1_eval(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19c8a4_Expr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d5822_evalExpr1(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19c8a4_Expr>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d5b63_evalExpr(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab19c8a4_Expr>);
inline _1ab2d612a_unaryEval static__1ab2d656a_new(jule::Ptr<_1ab2b7903_Eval>);
inline void _1ab2d6768_minus(_1ab2d612a_unaryEval*);
inline void _1ab2d6966_plus(_1ab2d612a_unaryEval*);
inline void _1ab2d6b64_caret(_1ab2d612a_unaryEval*);
inline void _1ab2d6d62_excl(_1ab2d612a_unaryEval*);
inline void _1ab2d7060_star(_1ab2d612a_unaryEval*);
inline void _1ab2d725d_amper(_1ab2d612a_unaryEval*);
inline void _1ab2d745b_typeDecl(_1ab2d612a_unaryEval*);
inline void _1ab2d7659_evalData(_1ab2d612a_unaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d799a_eval(_1ab2d612a_unaryEval*, jule::Ptr<_1ab19e961_UnaryExpr>);
inline _1ab2d80b6_binaryEval static__1ab2d869e_newPlain(jule::Ptr<_1ab2b7903_Eval>);
inline _1ab2d80b6_binaryEval static__1ab2d89e0_new(jule::Ptr<_1ab2b7903_Eval>, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1ab2d8c76_checkTypeCompatibility(_1ab2d80b6_binaryEval*);
inline jule::Bool _1ab2d900c_checkStructCommonOperatorCompatibility(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9293_evalComptimeTypeInfo(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9529_evalNil(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d97b0_evalEnum(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9a46_evalTypeEnum(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9ccc_evalSptr(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da063_evalPtr(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da2e9_evalArr(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da580_evalSlc(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da816_evalStruct(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2daa9c_evalTrait(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dad33_evalAny(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2db0b9_evalBool(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2db350_evalStr(_1ab2d80b6_binaryEval*);
inline void _1ab2db54d_setTypeToGreater(_1ab2d80b6_binaryEval*);
inline void _1ab2db806_checkModData(_1ab2d80b6_binaryEval*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2dba04_mod(_1ab2d80b6_binaryEval*);
inline jule::Bool _1ab2dbe00_numbersAreCompatibile(_1ab2d80b6_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dc186_evalFloat(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dc41c_evalInt(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dc6a3_evalPrim(_1ab2d80b6_binaryEval*);
inline void _1ab2dc8a1_checkSpecialCases(_1ab2d80b6_binaryEval*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dcb37_evalOp(_1ab2d80b6_binaryEval*);
inline void _1ab2dcde0_evalConst(_1ab2d80b6_binaryEval*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2dd198_checkData(_1ab2d80b6_binaryEval*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2dd396_checkDatas(_1ab2d80b6_binaryEval*);
inline void _1ab2dd64e_setModel(_1ab2d80b6_binaryEval*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2dd907_postEval(_1ab2d80b6_binaryEval*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ddd03_solveExplicit(_1ab2d80b6_binaryEval*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2de144_eval(_1ab2d80b6_binaryEval*, jule::Ptr<_1ab1a0e6d_BinaryExpr>*);
inline jule::Str _1ab2e68dd_Str(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e6c2e_Equal(jule::Ptr<_1ab2e6525_TypeKind>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Bool _1ab2e736c_Binded(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e7603_IsNil(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e7889_Void(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e7b20_Comparable(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e7da6_Mutable(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e813c_Ordered(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e83c3_NilCompatible(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e8659_PerformsRC(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2e88e0_Variadicable(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab2ee0ee_Prim> _1ab2e8b76_Prim(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab302b2a_Sptr> _1ab2e8e0c_Sptr(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab3063e2_Ptr> _1ab2e9193_Ptr(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab2e9429_Enum(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab2e96b0_TypeEnum(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab30591e_Arr> _1ab2e9946_Arr(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab3035ed_Slc> _1ab2e9bcc_Slc(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab2e9e63_Fn(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab2ea1e9_Struct(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1e26da_Trait> _1ab2ea480_Trait(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab304c92_Map> _1ab2ea716_Map(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab3041e2_Tuple> _1ab2ea99c_Tup(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2eac33_comptime(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1ebddc_comptimeStructFields> _1ab2eaeb9_comptimeStructFields(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1ea22b_comptimeStructField> _1ab2eb250_comptimeStructField(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab202b3a_comptimeEnumFields> _1ab2eb4d6_comptimeEnumFields(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab201793_comptimeEnumField> _1ab2eb76c_comptimeEnumField(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab20649b_comptimeParams> _1ab2eba03_comptimeParams(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab204235_comptimeParam> _1ab2ebc89_comptimeParam(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1e9758_comptimeRange> _1ab2ec020_comptimeRange(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab207a96_comptimeTypeInfos> _1ab2ec2a6_comptimeTypeInfos(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab209191_comptimeTypeInfo> _1ab2ec53c_comptimeTypeInfo(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab200198_comptimeStatics> _1ab2ec7c3_comptimeStatics(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab1ed4d7_comptimeStatic> _1ab2eca59_comptimeStatic(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab2106a3_comptimeValue> _1ab2ecce0_comptimeValue(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab2145ec_comptimeFile> _1ab2ed076_comptimeFile(_1ab2e6525_TypeKind*);
inline jule::Ptr<_1ab213002_comptimeFiles> _1ab2ed30c_comptimeFiles(_1ab2e6525_TypeKind*);
inline jule::Bool _1ab2eda6b_checked(_1ab2ed6e7_TypeSymbol*);
inline jule::Str _1ab2ee440_Str(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab2ee781_Equal(jule::Ptr<_1ab2ee0ee_Prim>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Bool _1ab2eec26_IsConstraint(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab2eeeac_IsI8(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab300243_IsI16(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab3004c9_IsI32(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab300760_IsI64(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab3009e6_IsU8(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab300c7c_IsU16(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab301013_IsU32(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab301299_IsU64(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab301530_IsF32(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab3017b6_IsF64(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab301a4c_IsInt(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab301cd3_IsUint(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab302069_IsUintptr(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab302300_IsBool(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab302586_IsStr(_1ab2ee0ee_Prim*);
inline jule::Bool _1ab30281c_IsAny(_1ab2ee0ee_Prim*);
inline jule::Str _1ab302e9e_Str(_1ab302b2a_Sptr*);
inline jule::Bool _1ab3032e0_Equal(jule::Ptr<_1ab302b2a_Sptr>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Str _1ab303a82_Str(_1ab3035ed_Slc*);
inline jule::Bool _1ab303dc3_Equal(jule::Ptr<_1ab3035ed_Slc>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Str _1ab304566_Str(_1ab3041e2_Tuple*);
inline jule::Bool _1ab3048a7_Equal(jule::Ptr<_1ab3041e2_Tuple>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Str _1ab305116_Str(_1ab304c92_Map*);
inline jule::Bool _1ab305457_Equal(jule::Ptr<_1ab304c92_Map>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Str _1ab305c93_Str(_1ab30591e_Arr*);
inline jule::Bool _1ab3060d4_Equal(jule::Ptr<_1ab30591e_Arr>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Str _1ab306766_Str(_1ab3063e2_Ptr*);
inline jule::Bool _1ab306aa7_Equal(jule::Ptr<_1ab3063e2_Ptr>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Bool _1ab306e2b_IsUnsafe(_1ab3063e2_Ptr*);
inline void _1ab308b20_pushErr(_1ab3083d3_typeChecker*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab308d1d_allowBuiltin(_1ab3083d3_typeChecker*);
inline void _1ab30901b_disallowBuiltin(_1ab3083d3_typeChecker*);
inline void _1bbb99ea6_pushReference(_1ab3083d3_typeChecker*, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1bbb9c88d_pushReference(_1ab3083d3_typeChecker*, jule::Ptr<_1ab1e26da_Trait>*);
inline void _1ab30957c_pushReferenceByKind(_1ab3083d3_typeChecker*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1ab30999a_pushCycleError(_1ab3083d3_typeChecker*, jule::Any, jule::Any, _1a7c4c7ed_StrBuilder*);
inline jule::Bool _1ab309d96_checkCrossCycle(_1ab3083d3_typeChecker*, jule::Any, _1a7c4c7ed_StrBuilder*);
inline jule::Bool _1ab30a292_checkIllegalCycles(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1ab2e606e_Kind> _1ab30a68d_fromTypeAlias(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*, jule::Ptr<_1ab2e5733_TypeAlias>*);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab30aa89_fromEnum(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*, jule::Ptr<_1ab1e4de6_Enum>*);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab30ae85_fromTypeEnum(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*, jule::Ptr<_1ab1e6601_TypeEnum>*);
inline jule::Ptr<_1ab1e26da_Trait> _1ab30b381_fromTrait(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*, jule::Ptr<_1ab1e26da_Trait>*);
inline jule::Bool _1ab30b77c_checkStructIns(_1ab3083d3_typeChecker*, jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab182e72_Token>*);
inline void _1ab30ba35_appendUsedStructReference(_1ab3083d3_typeChecker*, jule::Ptr<_1ab1b9470_Struct>*);
inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab30be31_buildStructInstance(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*, jule::Ptr<_1ab1b9470_Struct>*);
inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab30c32c_fromStruct(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*, jule::Ptr<_1ab1b9470_Struct>*);
inline jule::Trait<_1ab2e606e_Kind> _1ab30c66d_getDef(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>*);
inline jule::Trait<_1ab2e606e_Kind> _1ab30c9ae_buildIdent(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198b7a_IdentTypeDecl>);
inline jule::Trait<_1ab2e606e_Kind> _1ab30cd00_buildSubIdent(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198e77_SubIdentTypeDecl>);
inline jule::Ptr<_1ab302b2a_Sptr> _1ab30d141_buildSptrFromType(_1ab3083d3_typeChecker*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Ptr<_1ab302b2a_Sptr> _1ab30d482_buildSptr(_1ab3083d3_typeChecker*, jule::Ptr<_1ab19961a_SptrTypeDecl>);
inline jule::Ptr<_1ab3063e2_Ptr> _1ab30d7c3_buildPtrFromType(_1ab3083d3_typeChecker*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Ptr<_1ab3063e2_Ptr> _1ab30db14_buildPtr(_1ab3083d3_typeChecker*, jule::Ptr<_1ab19a099_PtrTypeDecl>);
inline jule::Ptr<_1ab3035ed_Slc> _1ab30de55_buildSlc(_1ab3083d3_typeChecker*, jule::Ptr<_1ab1999a0_SlcTypeDecl>);
inline jule::Ptr<_1ab30591e_Arr> _1ab30e296_buildArr(_1ab3083d3_typeChecker*, jule::Ptr<_1ab19a83b_ArrTypeDecl>);
inline jule::Ptr<_1ab304c92_Map> _1ab30e5d7_buildMap(_1ab3083d3_typeChecker*, jule::Ptr<_1ab19b089_MapTypeDecl>);
inline jule::Ptr<_1ab3041e2_Tuple> _1ab30e928_buildTuple(_1ab3083d3_typeChecker*, jule::Ptr<_1ab199c9c_TupleTypeDecl>);
inline jule::Bool _1ab30ec69_checkFuncTypes(_1ab3083d3_typeChecker*, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab3100aa_buildFunc(_1ab3083d3_typeChecker*, jule::Ptr<_1ab1aa230_FnDecl>);
inline jule::Trait<_1ab2e606e_Kind> _1ab3103eb_buildByNamespace(_1ab3083d3_typeChecker*, jule::Ptr<_1ab19931d_NamespaceTypeDecl>);
inline jule::Ptr<_1ab2e6525_TypeKind> _1ab31073c_build(_1ab3083d3_typeChecker*, jule::Any*);
inline jule::Ptr<_1ab2e6525_TypeKind> _1ab310a7d_checkDecl(_1ab3083d3_typeChecker*, jule::Ptr<_1ab198570_TypeDecl>*);
inline jule::Bool static__1ab3114c9_prim(jule::Str*, jule::Ptr<_1ab2ee0ee_Prim>);
inline jule::Bool static__1ab31184d_exist(jule::Str*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1abd0021a_stop(_1abceea99_scopeParser*);
inline jule::Bool _1abd004a1_stopped(_1abceea99_scopeParser*);
inline jule::Bool _1abd00737_finished(_1abceea99_scopeParser*);
inline jule::Bool _1abd009bd_isLastSt(_1abceea99_scopeParser*);
inline void _1abd00d31_pushErr(_1abceea99_scopeParser*, jule::Ptr<_1ab182e72_Token>, jule::Str);
inline void _1abd01194_pushSuggestion(_1abceea99_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1abd0144c_insertAsNext(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1abcee208_stmt> _1abd016d3_next(_1abceea99_scopeParser*);
inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd01ace_buildScope(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd01e20_buildVarSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1ab7b4_RetSt> _1abd02261_buildRetSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1ac034_Iter> _1abd025a2_buildWhileNextIter(_1abceea99_scopeParser*, jule::Ptr<_1abcee208_stmt>*);
inline jule::Ptr<_1ab1ac85e_WhileKind> _1abd028e3_buildWhileIterKind(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd02c34_getRangeKindKeysTokens(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd03075_buildRangeKindKey(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> _1abd033b6_buildRangeKindKeys(_1abceea99_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>*);
inline void _1abd03729_setupRangeKindKeysPlain(_1abceea99_scopeParser*, jule::Ptr<_1ab1ad266_RangeKind>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd03a8c_setupRangeKindKeysExplicit(_1abceea99_scopeParser*, jule::Ptr<_1ab1ad266_RangeKind>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd03e00_setupRangeKindKeys(_1abceea99_scopeParser*, jule::Ptr<_1ab1ad266_RangeKind>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1ad266_RangeKind> _1abd043a6_buildRangeIterKind(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Any _1abd047a2_buildCommonIterKind(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Ptr<_1ab1ac034_Iter> _1abd04ae3_buildCommonIter(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1ac034_Iter> _1abd04e34_buildIterSt(_1abceea99_scopeParser*, jule::Ptr<_1abcee208_stmt>*);
inline jule::Ptr<_1ab1ad640_BreakSt> _1abd05275_buildBreakSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1ada19_ContSt> _1abd055b6_buildContSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1adec0_If> _1abd05907_buildIf(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1ae399_Else> _1abd05c48_buildElse(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1ae850_Conditional> _1abd06089_buildIfElseChain(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab19c8a4_Expr> _1abd063ca_buildCoCallSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a602d_GotoSt> _1abd0671b_buildGotoSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1a632a_FallSt> _1abd06a5c_buildFallSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1b008c_TypeAliasDecl> _1abd06d9d_buildTypeAliasSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd07376_pushCaseExpr(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>, jule::Ptr<_1ab182e72_Token>, jule::Bool, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>*);
inline __jule_tuple_sx_1ab19c8a4_Expr__jule_tuple_bool _1abd0782c_buildCaseExprs(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab182e72_Token>*, jule::Bool);
inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd07b6d_buildCaseScope(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline __jule_tuple_x_1ab1b0543_Case__jule_tuple_bool _1abd08069_buildCase(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Bool);
inline __jule_tuple_sx_1ab1b0543_Case__jule_tuple_x_1ab1ae399_Else _1abd08465_buildCases(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>, jule::Bool);
inline jule::Ptr<_1ab1b0d5c_MatchCase> _1abd087a6_buildMatchCase(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd08ae7_buildScopeSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a5b54_LabelSt> _1abd08e38_buildLabelSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline __jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool _1abd09279_buildIdSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1abd19960_assignInfo> _1abd095ba_buildAssignInfo(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1a698a_AssignLeft> _1abd0990b_buildAssignL(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Ptr<_1ab1a698a_AssignLeft>> _1abd09c4c_buildAssignLs(_1abceea99_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>*);
inline __jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool _1abd0a08d_buildPlainAssign(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Bool _1abd0a489_buildDeclAssign1(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab1a701d_AssignSt>*);
inline __jule_tuple_x_1ab1a701d_AssignSt__jule_tuple_bool _1abd0a7ca_buildDeclAssign(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline __jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool _1abd0ab1b_buildAssignSt(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19d278_UseExpr> _1abd0ae5c_buildUseExpr(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd0b29d_buildConstSt(_1abceea99_scopeParser*, jule::Ptr<_1abcee208_stmt>*);
inline jule::Any _1abd0b5de_buildSt(_1abceea99_scopeParser*, jule::Ptr<_1abcee208_stmt>*);
inline void _1abd0b952_build(_1abceea99_scopeParser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab1a8591_ScopeTree>*);
inline void _1abd0cca5_pushErr(_1abd0c4be_exprBuilder*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abd0d118_pushSuggestion(_1abd0c4be_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab19d575_TupleExpr> _1abd0d459_buildTuple(_1abd0c4be_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>*);
inline jule::Ptr<_1ab19d94e_LitExpr> _1abd0d79a_buildLit(_1abd0c4be_exprBuilder*, jule::Ptr<_1ab182e72_Token>);
inline jule::Any _1abd0de2c_buildSingle(_1abd0c4be_exprBuilder*, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab19e2ce_IdentExpr> _1abd0e26d_buildBindIdent(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19e961_UnaryExpr> _1abd0e5ae_buildUnary(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a09b7_SubIdentExpr> _1abd0e900_buildObjSubIdent(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a05dd_NsSelectionExpr> _1abd0ec41_buildNsSubIdent(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd10082_buildType(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd103c3_buildSubIdent(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19ed3a_VariadicExpr> _1abd10714_buildVariadic(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab19cba1_RangeExpr> _1abd10a55_buildBetweenParentheses(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a0214_CastExpr> _1abd10d96_tryBuildCast(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd112b4_pushArg(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>, jule::Ptr<_1ab182e72_Token>);
inline jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _1abd11605_buildArgs(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a15cd_FnCallExpr> _1abd11dec_buildFnCall(_1abd0c4be_exprBuilder*, jule::Ptr<_1ab182e72_Token>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd1223d_buildParenthesesRange(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19dd28_UnsafeExpr> _1abd1257e_buildUnsafeExpr(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1aa230_FnDecl> _1abd128c0_buildAnonFn(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd12c11_buildUnsafe(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd1312e_pushRangeLitPart(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>, jule::Ptr<_1ab182e72_Token>, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd13470_getBraceRangeLitExprParts(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a20c3_FieldExprPair> _1abd137b1_buildFieldExprPair(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab19c8a4_Expr> _1abd13b02_buildStructLitExpr(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _1abd13e43_buildStructLitExprs(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1a28ed_StructLit> _1abd14284_buildTypedStructLiteral(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab19c8a4_Expr> _1abd145c5_buildBraceLitPart(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1a2da4_BraceLit> _1abd14916_buildBraceLit(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd14c57_buildBraceRange(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd15098_getEnumerableParts(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a3dc7_SliceExpr> _1abd153d9_buildSlice(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a4867_IndexingExpr> _1abd15890_buildIndexing(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>, jule::Slice<jule::Ptr<_1ab182e72_Token>>, jule::Ptr<_1ab182e72_Token>);
inline jule::Ptr<_1ab1a4ec7_SlicingExpr> _1abd15eab_buildSlicing(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab182e72_Token>);
inline jule::Any _1abd162ec_buildBracketRange(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Any _1abd1663d_buildExclRight(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd1697e_buildData(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd16d7a_buildBinary(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64);
inline jule::Any _1abd171bb_build(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd1750c_buildKind(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19c8a4_Expr> _1abd1784d_buildFromTokens(_1abd0c4be_exprBuilder*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd1d15b_stop(_1abd1cd5e_parser*);
inline jule::Bool _1abd1d3e2_stopped(_1abd1cd5e_parser*);
inline void _1abd1d810_pushErr(_1abd1cd5e_parser*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1abd1db73_pushSuggestion(_1abd1cd5e_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab19c8a4_Expr> _1abd1deb4_buildExpr(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19798c_Directive> _1abd1e305_buildDirective(_1abd1cd5e_parser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd1e5ad_pushDirective(_1abd1cd5e_parser*, jule::Ptr<_1ab19798c_Directive>);
inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd1e9a9_buildScope(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab182e72_Token>);
inline __jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool _1abd1ee60__buildType(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool _1abd20416_buildType(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1ab1b008c_TypeAliasDecl> _1abd20757_buildTypeAliasDecl(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd20aba_buildVarTypeAndExpr(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab1ab3da_VarDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd20e2d_buildVarCommon(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab1ab3da_VarDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd2134b_buildVarBegin(_1abd1cd5e_parser*, jule::Ptr<_1ab1ab3da_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd2168c_buildVar(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a577a_GenericDecl> _1abd219cd_buildGeneric(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _1abd21dc9_buildGenerics(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Ptr<_1ab182e72_Token>*);
inline jule::Ptr<_1ab1a8ccd_ParamDecl> _1abd2221a_buildSelfParam(_1abd1cd5e_parser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd22638_paramTypeBegin(_1abd1cd5e_parser*, jule::Ptr<_1ab1a8ccd_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd2299b_buildParamType(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab1a8ccd_ParamDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd22d0e_buildParamBody(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab1a8ccd_ParamDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1a8ccd_ParamDecl> _1abd23150_buildParam(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd23408_checkParams(_1abd1cd5e_parser*, jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>> _1abd23804_buildParams(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Bool);
inline __jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool _1abd23c00_buildMultiRetType(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64*);
inline __jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool _1abd240eb_buildRetType(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64*);
inline jule::Ptr<_1ab1aa230_FnDecl> _1abd245a2_buildFnPrototype(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1ab1aa230_FnDecl> _1abd24a58_buildFn(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1ab182e72_Token>> _1abd24d99_getUseDeclSelectors(_1abd1cd5e_parser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd2520c_buildBindUseDecl(_1abd1cd5e_parser*, jule::Ptr<_1ab1b1676_UseDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Str _1abd2554d_useDeclTokstoa(_1abd1cd5e_parser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd258b1_buildStdUseDecl(_1abd1cd5e_parser*, jule::Ptr<_1ab1b1676_UseDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd25c24_buildIdentUseDecl(_1abd1cd5e_parser*, jule::Ptr<_1ab1b1676_UseDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline void _1abd26087_parseUseDecl(_1abd1cd5e_parser*, jule::Ptr<_1ab1b1676_UseDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1b1676_UseDecl> _1abd26483_buildUseDecl(_1abd1cd5e_parser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>, jule::Bool);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd2687e_buildTypeEnumItemKind(jule::Ptr<_1abd1cd5e_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>> _1abd26bc0_buildTypeEnumItems(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1b3678_TypeEnumDecl> _1abd27011_buildTypeEnumDecl(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19c8a4_Expr> _1abd2740c_buildEnumItemExpr(jule::Ptr<_1abd1cd5e_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>> _1abd2774d_buildEnumItems(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1b26dd_EnumDecl> _1abd27a8e_buildEnumDecl(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Any _1abd27dd0_buildNodeEnumDecl(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1b3942_FieldDecl> _1abd28221_buildField(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Slice<jule::Ptr<_1ab1b3942_FieldDecl>> _1abd28562_buildStructDeclFields(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1b4338_StructDecl> _1abd288a3_buildStructDecl(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd28b5b_checkMethodReceiver(_1abd1cd5e_parser*, jule::Ptr<_1ab1aa230_FnDecl>*);
inline void _1abd28ebe_buildTraitBody(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab1b4a75_TraitDecl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1b4a75_TraitDecl> _1abd29310_buildTraitDecl(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1aa230_FnDecl> _1abd29651_buildBindFn(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd29992_buildBindVar(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1b4338_StructDecl> _1abd29cd3_buildBindStruct(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1b008c_TypeAliasDecl> _1abd2a124_buildBindTypeAlias(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Ptr<_1ab1b1676_UseDecl> _1abd2a465_buildBindUse(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Any _1abd2a7a6_buildBind(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1aa230_FnDecl> _1abd2aae7_getMethod(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd2ae5a_parseImplBody(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab1b51d5_Impl>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab1b51d5_Impl> _1abd2b29b_buildImpl(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Any _1abd2b5dc_buildNodeData(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd2b895_applyFnMeta(_1abd1cd5e_parser*, jule::Ptr<_1ab1aa230_FnDecl>*);
inline void _1abd2bb4d_applyMeta(_1abd1cd5e_parser*, _1ab19756e_Node*);
inline void _1abd2be06_pushUseDecl(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab1b1676_UseDecl>*);
inline jule::Bool _1abd2c247_pushMetaNodes(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline _1ab19756e_Node _1abd2c588_parseNode(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd2c841_appendNode(jule::Ptr<_1abd1cd5e_parser>, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd2cd19_removeRange(_1abd1cd5e_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Slice<jule::I64>*);
inline void _1abd2d237_pushWrongOrderCloseErr(_1abd1cd5e_parser*, jule::Ptr<_1ab182e72_Token>*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Slice<jule::I64>*);
inline void _1abd2d710_pushRangeClose(_1abd1cd5e_parser*, jule::Ptr<_1ab182e72_Token>, jule::U64, jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::Slice<jule::I64>*);
inline void _1abd2d9b8_checkRanges(_1abd1cd5e_parser*, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline void _1abd2dc71_parse(jule::Ptr<_1abd1cd5e_parser>, jule::Ptr<_1ab18873b_File>*);
inline void _1abd305d0_pushErr(_1abd3003b_typeBuilder*, jule::Ptr<_1ab182e72_Token>, jule::Str);
inline void _1abd30943_pushSuggestion(_1abd3003b_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd30bc9_buildNamespace(_1abd3003b_typeBuilder*);
inline jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _1abd30e60_buildGenerics(_1abd3003b_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd311e6_identGenerics(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd3147c_buildIdent(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd31713_buildCppLink(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd31999_buildFn(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd31c30_buildPtr(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd31eb6_buildSptr(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd3224c_buildSlc(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd324d3_buildArr(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd32769_buildMap(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd32a00_buildEnumerable(_1abd3003b_typeBuilder*);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd32c86_step(_1abd3003b_typeBuilder*);
inline __jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool _1abd3301c_build(_1abd3003b_typeBuilder*);
inline void _1ab4e90eb_pushErr(_1ab4e8a9b_directiveEval*, jule::Ptr<_1ab182e72_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1ab4e94e7_splitOperans(_1ab4e8a9b_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Bool _1ab4e9838_evalDirectiveIdent(_1ab4e8a9b_directiveEval*, jule::Str);
inline jule::Bool _1ab4e9b79_evalDirectivePart(_1ab4e8a9b_directiveEval*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Bool _1ab4e9e10_eval(_1ab4e8a9b_directiveEval*);
inline jule::Ptr<_1abd34172_JuleImporter> static__1abd3456d_New(_1ab4e75c2_CompileInfo);
inline jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> _1abd34804_AllPackages(_1abd34172_JuleImporter*);
inline void _1abd34c44_SetModPath(_1abd34172_JuleImporter*, jule::Str);
inline jule::Str _1abd34eca_GetModPath(_1abd34172_JuleImporter*);
inline jule::Str _1abd3531b_ModById(_1abd34172_JuleImporter*, jule::I64);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1abd3565c_GetImport(_1abd34172_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log _1abd35a58_ImportPackage(_1abd34172_JuleImporter*, jule::Str, jule::Bool);
inline void _1abd35d11_Imported(_1abd34172_JuleImporter*, jule::Ptr<_1ab242a9d_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1a7d05a93_Log _1abd36240_isPassBuildDirectives(_1abd34172_JuleImporter*, jule::Ptr<_1ab1965b2_Ast>*);
inline jule::Bool _1bbcc7215_isCommonOrdered(jule::Slice<jule::Ptr<_1ab1b9470_Struct>>, jule::Ptr<_1ab1b9470_Struct>);
inline jule::Bool _1bbccc1a4_isCommonOrdered(jule::Slice<jule::Ptr<_1ab2853a4_Var>>, jule::Ptr<_1ab2853a4_Var>);
inline void _1bbcc38a4_orderCommon(jule::Slice<jule::Ptr<_1ab1b9470_Struct>>*);
inline void _1bbcc7aa6_orderCommon(jule::Slice<jule::Ptr<_1ab2853a4_Var>>*);
inline void static__1abd39ee1_orderStructures(jule::Slice<jule::Ptr<_1ab1b9470_Struct>>*);
inline void static__1abd3a222_orderVars(jule::Slice<jule::Ptr<_1ab2853a4_Var>>*);
inline void _1abe97d74_optimizeChild(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab2212b8_Scope>*);
inline void _1abe9812c_optimizeBodyChildExceptional(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab2212b8_Scope>*);
inline void _1abe983d5_optimizeBodyChild(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab2212b8_Scope>*);
inline void _1abe9868d_optimizeExprModel(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Any*);
inline void _1abe9888b_eliminateFollowed(_1abe978bd_scopeDeadCode*);
inline void _1abe98b44_pushGoto(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab224035_GotoSt>);
inline void _1abe98dec_pushLabel(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab223b5b_Label>);
inline void _1abe991a5_optimizeRangeIter(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab223100_RangeIter>);
inline void _1abe9945d_optimizeWhileIter(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab2226a4_WhileIter>);
inline void _1abe99716_optimizeInfIter(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab2221ed_InfIter>);
inline void _1abe999be_optimizeConditional(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab221e01_Conditional>);
inline void _1abe99c77_optimizeMatch(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab2253ee_Match>);
inline void _1abe9a030_optimizeAssign(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab2248b5_Assign>);
inline void _1abe9a2d8_optimizeMultiAssign(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Ptr<_1ab224c8e_MultiAssign>);
inline void _1abe9a591_optimizeStmt(jule::Ptr<_1abe978bd_scopeDeadCode>, jule::Any);
inline void _1abe9a78e_optimizeStmts(jule::Ptr<_1abe978bd_scopeDeadCode>);
inline _1abe9bb25_exprDeadCode static__1abe9c263_new(jule::Ptr<_1abe978bd_scopeDeadCode>*);
inline void _1abe9c51b_binary(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c1697_BinaryExprModel>);
inline void _1abe9c7c4_unary(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c1a71_UnaryExprModel>);
inline void _1abe9ca7c_structureLit(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c2445_StructLitExprModel>);
inline void _1abe9cd35_allocStructure(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c2742_AllocStructLitExprModel>);
inline void _1abe9d0dd_casting(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c2cc5_CastingExprModel>);
inline void _1abe9d396_args(_1abe9bb25_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1abe9d64e_funcCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c3677_FnCallExprModel>);
inline void _1abe9d907_slice(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c3a51_SliceExprModel>);
inline void _1abe9dbb0_array(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c6a98_ArrayExprModel>);
inline void _1abe9de68_indexing(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c4007_IndexingExprModel>);
inline void _1abe9e221_anonFunc(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c43d1_AnonFnExprModel>);
inline void _1abe9e4c9_mapExpr(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c4c61_MapExprModel>);
inline void _1abe9e782_slicing(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c52e4_SlicingExprModel>);
inline void _1abe9ea3a_traitSub(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c5877_TraitSubIdentExprModel>);
inline void _1abe9ece3_structureSub(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c6218_StructSubIdentExprModel>);
inline void _1abea009b_tuple(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c6d95_TupleExprModel>);
inline void _1abea0354_newCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c7a22_BuiltinNewCallExprModel>);
inline void _1abea060c_outCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c726e_BuiltinOutCallExprModel>);
inline void _1abea08b5_outlnCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c7648_BuiltinOutlnCallExprModel>);
inline void _1abea0b6d_panicCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel>);
inline void _1abea0e26_assertCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel>);
inline void _1abea11ce_errorCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>);
inline void _1abea1487_makeCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel>);
inline void _1abea1740_appendCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel>);
inline void _1abea19e8_lenCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c902e_BuiltinLenCallExprModel>);
inline void _1abea1ca1_capCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c932b_BuiltinCapCallExprModel>);
inline void _1abea2059_deleteCall(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel>);
inline void _1abea2312_sizeof(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1c5a64_SizeofExprModel>);
inline void _1abea25ba_alignof(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1ca6d4_AlignofExprModel>);
inline void _1abea2873_integratedToStr(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1caccd_IntegratedToStrExprModel>);
inline void _1abea2b2b_free(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1cb4a4_FreeExprModel>);
inline void _1abea2dd4_backendEmit(_1abe9bb25_exprDeadCode*, jule::Ptr<_1ab1cb1a7_BackendEmitExprModel>);
inline void _1abea318c_optimize(_1abe9bb25_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1ab3dd2ba_scopeOptimizer> static__1ab3dd809_new(jule::Ptr<_1ab2212b8_Scope>);
inline void _1ab3ddab2_setCurrentStmt(_1ab3dd2ba_scopeOptimizer*, jule::Any);
inline void _1ab3ddcb0_removeCurrent(_1ab3dd2ba_scopeOptimizer*);
inline void _1ab3de068_optimizeData(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2b5c0e_Data>);
inline void _1ab3de321_optimizeVar(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2853a4_Var>);
inline void _1ab3de5c9_optimizeConditional(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab221e01_Conditional>);
inline void _1ab3de9e7_buildDefaultConstantTrueCase(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab226037_Case>, jule::I64*, jule::Ptr<_1ab2253ee_Match>*);
inline void _1ab3deca0_optimizeMatch(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2253ee_Match>);
inline void _1ab3e0058_optimizeRangeIter(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab223100_RangeIter>);
inline void _1ab3e0311_optimizeWhileIter(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2226a4_WhileIter>);
inline jule::Bool _1ab3e0652_substr(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2248b5_Assign>);
inline jule::Bool _1ab3e0993_strAssign(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2248b5_Assign>);
inline jule::Bool _1ab3e0cd4_sliceAssign(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2248b5_Assign>);
inline void _1ab3e108c_optimizeAssign(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2248b5_Assign>);
inline jule::Bool _1ab3e13cd_tryOptimizeSwap(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab224c8e_MultiAssign>*);
inline void _1ab3e1686_optimizeMultiAssign(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab224c8e_MultiAssign>);
inline void _1ab3e193e_optimizeRet(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2269b6_RetSt>);
inline void _1ab3e1be7_optimizeStmt(_1ab3dd2ba_scopeOptimizer*, jule::Any);
inline void _1ab3e1ea0_optimizeChild(_1ab3dd2ba_scopeOptimizer*, jule::Ptr<_1ab2212b8_Scope>);
inline void _1ab3e219d_optimize(_1ab3dd2ba_scopeOptimizer*);
inline void static__1ab3e4a1e_optimize(jule::Any*);
inline jule::Bool _1ab3e4d60_strCond(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c1697_BinaryExprModel>);
inline jule::Bool _1ab3e5316_tryNeutralElement1(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c1697_BinaryExprModel>*, jule::Ptr<_1a8d04e26_Const>, jule::Ptr<_1ab1c119c_OperandExprModel>*);
inline jule::Bool _1ab3e5657_tryNeutralElement(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c1697_BinaryExprModel>*);
inline void _1ab3e5910_binary(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c1697_BinaryExprModel>);
inline void _1ab3e5bb8_unary(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c1a71_UnaryExprModel>);
inline void _1ab3e5e71_structureLit(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c2445_StructLitExprModel>);
inline void _1ab3e6229_allocStructure(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c2742_AllocStructLitExprModel>);
inline void _1ab3e64d2_casting(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c2cc5_CastingExprModel>);
inline void _1ab3e678a_args(_1ab3e4458_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1ab3e6a43_scope(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab2212b8_Scope>*);
inline void _1ab3e6ceb_funcCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c3677_FnCallExprModel>);
inline void _1ab3e70a4_slice(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c3a51_SliceExprModel>);
inline void _1ab3e735c_array(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c6a98_ArrayExprModel>);
inline void _1ab3e7615_indexing(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c4007_IndexingExprModel>);
inline void _1ab3e78bd_anonFunc(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c43d1_AnonFnExprModel>);
inline void _1ab3e7b76_mapExpr(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c4c61_MapExprModel>);
inline void _1ab3e7e2e_slicing(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c52e4_SlicingExprModel>);
inline void _1ab3e81d7_traitSub(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c5877_TraitSubIdentExprModel>);
inline void _1ab3e8490_structureSub(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c6218_StructSubIdentExprModel>);
inline void _1ab3e8748_tuple(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c6d95_TupleExprModel>);
inline void _1ab3e8a01_newCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c7a22_BuiltinNewCallExprModel>);
inline void _1ab3e8ca9_outCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c726e_BuiltinOutCallExprModel>);
inline void _1ab3e9062_outlnCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c7648_BuiltinOutlnCallExprModel>);
inline void _1ab3e931a_panicCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel>);
inline void _1ab3e95c3_assertCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel>);
inline void _1ab3e987b_errorCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>);
inline void _1ab3e9b34_makeCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel>);
inline void _1ab3e9ddc_appendCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel>);
inline void _1ab3ea195_lenCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c902e_BuiltinLenCallExprModel>);
inline void _1ab3ea44d_capCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c932b_BuiltinCapCallExprModel>);
inline void _1ab3ea706_deleteCall(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel>);
inline void _1ab3ea9ae_sizeof(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1c5a64_SizeofExprModel>);
inline void _1ab3eac67_alignof(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1ca6d4_AlignofExprModel>);
inline void _1ab3eb020_integratedToStr(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1caccd_IntegratedToStrExprModel>);
inline void _1ab3eb2c8_free(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1cb4a4_FreeExprModel>);
inline void _1ab3eb581_backendEmit(_1ab3e4458_exprOptimizer*, jule::Ptr<_1ab1cb1a7_BackendEmitExprModel>);
inline void _1ab3eb77e_do(_1ab3e4458_exprOptimizer*);
inline jule::Ptr<_1abea3bd7_Optimizer> static__1abea415a_New(jule::Ptr<_1abd36b36_IR>*);
inline void _1abea4413_optimizeGlobal(_1abea3bd7_Optimizer*, jule::Ptr<_1ab2853a4_Var>*);
inline void _1abea46bb_optimizeFunction(_1abea3bd7_Optimizer*, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1abea4974_optimizeStruct(_1abea3bd7_Optimizer*, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1abea4c2c_optimizeGlobals(_1abea3bd7_Optimizer*, jule::Ptr<_1ab2459c4_Package>*);
inline void _1abea4ed5_optimizeFunctions(_1abea3bd7_Optimizer*, jule::Ptr<_1ab2459c4_Package>*);
inline void _1abea528d_optimizeStructs(_1abea3bd7_Optimizer*, jule::Ptr<_1ab2459c4_Package>*);
inline void _1abea5546_optimizePackage(_1abea3bd7_Optimizer*, jule::Ptr<_1ab2459c4_Package>*);
inline void _1abea5744_Optimize(_1abea3bd7_Optimizer*);
inline void static__1abeca88a_Reset(void);
inline void static__1abecbbaa_Print(jule::Str, jule::Str);
inline void static__1abecd3b5_LogFlat(_1a7d05a93_Log*);
inline void static__1abecd5e6_LogError(_1a7d05a93_Log*);
inline void static__1abecd827_Log(_1a7d05a93_Log*);
inline void static__1abecda58_PrintLogs(jule::Slice<_1a7d05a93_Log>*);
inline _1ac916dca_Time static__1ac917282_Unix(jule::U64);
inline _1ac916dca_Time static__1ac917491_Now(void);
inline _1ac916704_AbsTime _1ac918b79_Abs(_1ac916dca_Time*);
inline jule::Ptr<_1ac83cd34_scopeCoder> static__1ac83d450_new(jule::Ptr<_1ac921379_ObjectCoder>*);
inline void _1bc3bb320_iterHead(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab223100_RangeIter>*, jule::Bool*, jule::Str);
inline void _1ac83db26_rangeIndexIter(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab223100_RangeIter>*);
inline void _1ac83ddce_rangeHashmapIter(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab223100_RangeIter>*);
inline void _1ac83e187_ifCase(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2216d6_If>);
inline void _1ac83e440_conditional(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab221e01_Conditional>);
inline void _1ac83e6e8_infIter(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2221ed_InfIter>);
inline void _1ac83e9a1_whileIter(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2226a4_WhileIter>);
inline void _1ac83ec59_rangeIter(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab223100_RangeIter>);
inline void _1ac840012_cont(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab223485_ContSt>);
inline void _1ac8402ba_label(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab223b5b_Label>);
inline void _1ac840573_gotoSt(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab224035_GotoSt>);
inline void _1ac84082b_postfix(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab22440e_Postfix>);
inline void _1ac840ad4_assign(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2248b5_Assign>);
inline void _1ac840d8c_mapLookupAssign(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab224c8e_MultiAssign>*);
inline void _1ac841145_multiAssignTup(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab224c8e_MultiAssign>*);
inline void _1ac8413ed_multiAssignFn(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab224c8e_MultiAssign>*);
inline void _1ac8416a6_multiAssign(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab224c8e_MultiAssign>);
inline jule::Fn<void(void)> _1ac8419e7_matchExpr(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2253ee_Match>);
inline void _1ac841d5a_case(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2253ee_Match>, jule::Ptr<_1ab226037_Case>);
inline void _1ac842113_matchSt(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2253ee_Match>);
inline void _1ac8423bb_fallSt(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab226631_FallSt>);
inline void _1ac842674_breakSt(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab22385e_BreakSt>);
inline void _1ac84292c_setResult(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2269b6_RetSt>);
inline void _1ac842bd5_retSt(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2269b6_RetSt>);
inline void _1ac842e8d_var(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2853a4_Var>);
inline void _1ac843246_mutSlicing(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab3db20d_MutSlicingExprModel>);
inline void _1ac8434ee_swap(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab3d9e32_SwapExprModel>);
inline void _1ac8437a7_st(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Any);
inline void _1ac843a60_scopeStmts(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2212b8_Scope>*);
inline void _1ac843d18_scope(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab2212b8_Scope>);
inline void _1ac8440c1_funcScope(jule::Ptr<_1ac83cd34_scopeCoder>, jule::Ptr<_1ab1d2312_FnIns>);
inline jule::Ptr<_1ac846eb4_exprCoder> static__1ac84737c_new(jule::Ptr<_1ac921379_ObjectCoder>*);
inline void _1ac847635_string(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1a8d04e26_Const>*);
inline void _1ac8478dd_boolean(jule::Ptr<_1ac846eb4_exprCoder>, jule::Bool);
inline void _1ac847adb_nilLit(jule::Ptr<_1ac846eb4_exprCoder>);
inline jule::Bool _1ac847e2c_ftoaSpecialCases(jule::Ptr<_1ac846eb4_exprCoder>, jule::F64*);
inline void _1ac8481d5_float32(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1a8d04e26_Const>*);
inline void _1ac84848d_float64(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1a8d04e26_Const>*);
inline void _1ac848746_constant(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1a8d04e26_Const>);
inline void _1ac848b64_divByZeroBinary(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab182e72_Token>*, jule::Ptr<_1ab1c119c_OperandExprModel>*, jule::Ptr<_1ab1c119c_OperandExprModel>*);
inline void _1ac848e1c_unsafeBinary(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c1697_BinaryExprModel>);
inline void _1ac8491c5_binary(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c1697_BinaryExprModel>);
inline void _1ac84947d_var(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab2853a4_Var>);
inline void _1ac849736_structureIns(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1bc1ed_StructIns>);
inline void _1ac8499de_unary(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c1a71_UnaryExprModel>);
inline void _1ac849c97_structureLit(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c2445_StructLitExprModel>);
inline void _1ac84a050_allocStructure(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c2742_AllocStructLitExprModel>);
inline void _1ac84a308_possibleRefExpr(jule::Ptr<_1ac846eb4_exprCoder>, jule::Any);
inline void _1ac84a726_castTraitFromTrait(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c2cc5_CastingExprModel>*, jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab1e26da_Trait>);
inline void _1ac84a9ce_casting(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c2cc5_CastingExprModel>);
inline void _1ac84ac87_models(jule::Ptr<_1ac846eb4_exprCoder>, jule::Slice<jule::Any>);
inline void _1ac84b040_args(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c3677_FnCallExprModel>*);
inline void _1ac84b2e8_modelForCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Any);
inline void _1ac84b5a1_pushCallInf(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c3677_FnCallExprModel>*);
inline jule::Bool _1ac84b8e2_isWrapped(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c3677_FnCallExprModel>*);
inline void _1ac84bb9a_pureFuncCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c3677_FnCallExprModel>*);
inline void _1ac84be53_coFuncCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c3677_FnCallExprModel>*);
inline void _1ac84c2b6_writeUseExpr(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab2b5c0e_Data>);
inline void _1ac84c56e_funcCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c3677_FnCallExprModel>);
inline void _1ac84c827_slice(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c3a51_SliceExprModel>);
inline void _1ac84cad0_indexing(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c4007_IndexingExprModel>);
inline void _1ac84cd88_unsafeIndexing(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab3db807_UnsafeIndexingExprModel>);
inline void _1ac84d141_anonFunc(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c43d1_AnonFnExprModel>);
inline void _1ac84d3e9_mapExpr(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c4c61_MapExprModel>);
inline void _1ac84d6a2_slicing(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c52e4_SlicingExprModel>);
inline void _1ac84d95a_traitSub(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c5877_TraitSubIdentExprModel>);
inline void _1ac84dc13_structureSub(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c6218_StructSubIdentExprModel>);
inline void _1ac84debb_array(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c6a98_ArrayExprModel>);
inline void _1ac84e274_funcInsCommon(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1ac84e52c_funcIns(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1ac84e7d5_tuple(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c6d95_TupleExprModel>);
inline void _1ac84ea8d_newCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c7a22_BuiltinNewCallExprModel>);
inline void _1ac84ed46_outCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c726e_BuiltinOutCallExprModel>);
inline void _1ac8500ee_outlnCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c7648_BuiltinOutlnCallExprModel>);
inline void _1ac8503a7_panicCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel>);
inline void _1ac850660_assertCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel>);
inline void _1ac850918_errorCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>);
inline void _1ac850bc1_copyCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c9ace_BuiltinCopyCallExprModel>);
inline void _1ac850e79_lenCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c902e_BuiltinLenCallExprModel>);
inline void _1ac851232_capCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c932b_BuiltinCapCallExprModel>);
inline void _1ac8514da_deleteCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel>);
inline void _1ac856600_makeCallSlice(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel>*);
inline void _1ac8568a8_makeCallStr(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel>*);
inline void _1ac856b61_makeCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel>);
inline void _1ac856e19_pushToSlice(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab3dbc36_PushToSliceExprModel>);
inline void _1ac8571c2_appendToSlice(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab3dc110_AppendToSliceExprModel>);
inline void _1ac85747a_appendCall(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel>);
inline void _1ac857733_sizeof(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c5a64_SizeofExprModel>);
inline void _1ac8579db_alignof(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1ca6d4_AlignofExprModel>);
inline void _1ac857c94_runeLit(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1ca9d1_RuneExprModel>);
inline void _1ac85804c_structureStatic(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1c66be_StructStaticIdentExprModel>);
inline void _1ac858305_integratedToStr(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1caccd_IntegratedToStrExprModel>);
inline void _1ac8585ad_backendEmit(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1cb1a7_BackendEmitExprModel>);
inline void _1ac858866_free(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab1cb4a4_FreeExprModel>);
inline void _1ac858b1e_strComp(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab3dab7a_StrCompExprModel>);
inline void _1ac858dc7_emptyCompare(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab3da350_EmptyCompareExprModel>);
inline void _1ac859180_model(jule::Ptr<_1ac846eb4_exprCoder>, jule::Any);
inline void _1ac859438_initExpr(jule::Ptr<_1ac846eb4_exprCoder>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ac85c606_TestCoder> static__1ac85ca46_New(jule::Ptr<_1ac921379_ObjectCoder>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ac85cccc_findTestingPackage(jule::Ptr<_1ac85c606_TestCoder>);
inline void _1ac85d085_appendTest(jule::Ptr<_1ac85c606_TestCoder>, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1ac85d33d_appendPackageTests(jule::Ptr<_1ac85c606_TestCoder>, jule::Ptr<_1ab2459c4_Package>*);
inline jule::Bool _1ac85d5c4_readyTestingPackage(jule::Ptr<_1ac85c606_TestCoder>);
inline void _1ac85d7c2_callTmReset(jule::Ptr<_1ac85c606_TestCoder>);
inline void _1ac85d9c0_callTmFailed(jule::Ptr<_1ac85c606_TestCoder>);
inline void _1ac85dbbd_callTmSkipped(jule::Ptr<_1ac85c606_TestCoder>);
inline void _1ac85ddbb_Serialize(jule::Ptr<_1ac85c606_TestCoder>);
inline void static__1ac860906_writeIdentTo(_1a7c4c7ed_StrBuilder*, jule::Str*);
inline void static__1ac860c9c_toOut(_1a7c4c7ed_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__1ac8611ed_toLocal(_1a7c4c7ed_StrBuilder*, jule::I64, jule::I64, jule::Str*);
inline void static__1ac8614d9_func(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1ce40d_Fn>*);
inline void static__1ac8617c5_funcIns(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void static__1ac861ab1_traitDecl(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1e26da_Trait>);
inline void static__1ac861d9c_param(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1cc939_Param>*);
inline void static__1ac862188_structure(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1b9470_Struct>*);
inline void static__1ac862474_structureIns(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void static__1ac862760_field(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1b657c_Field>*);
inline void static__1ac862a4b_var(_1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab2853a4_Var>);
inline void static__1ac862d37_iterBegin(_1a7c4c7ed_StrBuilder*, jule::Uintptr);
inline void static__1ac863123_iterEnd(_1a7c4c7ed_StrBuilder*, jule::Uintptr);
inline void static__1ac86340e_iterNext(_1a7c4c7ed_StrBuilder*, jule::Uintptr);
inline void static__1ac8636ea_label(_1a7c4c7ed_StrBuilder*, jule::Uintptr);
inline void static__1ac8639d6_matchEnd(_1a7c4c7ed_StrBuilder*, jule::Uintptr);
inline void static__1ac863cc2_caseBegin(_1a7c4c7ed_StrBuilder*, jule::Uintptr);
inline jule::Str _1ac930d6c_Str(_1ac9309e8_customType*);
inline jule::Bool _1ac9311ad_Equal(jule::Ptr<_1ac9309e8_customType>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ac9315dc_typeCoder> static__1ac931b2b_new(jule::Ptr<_1ac921379_ObjectCoder>*);
inline void _1ac931e8e_toType(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Str);
inline void _1ac932302_prim(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab2ee0ee_Prim>);
inline void _1ac932665_tuple(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab3041e2_Tuple>);
inline void _1ac9329c8_asSptr(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Slice<jule::U8>);
inline void _1ac932d3b_sptr(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab302b2a_Sptr>);
inline void _1ac93319e_ptr(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab3063e2_Ptr>);
inline void _1ac933512_enumDecl(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1e4de6_Enum>);
inline void _1ac933875_typeEnumDecl(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1e6601_TypeEnum>);
inline void _1ac933bd8_asSlice(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ac93404b_slice(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab3035ed_Slc>);
inline void _1ac9343ae_mapType(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab304c92_Map>);
inline void _1ac934a85_traitDecl(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1e26da_Trait>);
inline void _1ac934de8_structure(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1b9470_Struct>);
inline void _1ac93525b_structureIns(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1bc1ed_StructIns>);
inline void _1ac9355be_array(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab30591e_Arr>);
inline void _1ac935c95_paramIns(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1d1366_ParamIns>*);
inline void _1ac93646b_funcInsResult(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ac9367ce_anonFunc(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1ac936b42_func(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1ac936ea5_kind(_1ac9315dc_typeCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Ptr<_1ac9399ad_resultCoder> static__1ac939e86_new(jule::Ptr<_1ac9315dc_typeCoder>*);
inline void _1ac93a2e9_ptr(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab3063e2_Ptr>);
inline void _1ac93a65c_sptr(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab302b2a_Sptr>);
inline void _1ac93a9c0_mapType(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab304c92_Map>);
inline void _1ac93ad33_slice(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab3035ed_Slc>);
inline void _1ac93b196_arr(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab30591e_Arr>);
inline void _1ac93b509_func(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1ac93b86c_tup(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab3041e2_Tuple>);
inline void _1ac93bbd0_codeMut(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1ac93c043_codeMut1(_1ac9399ad_resultCoder*, _1a7c4c7ed_StrBuilder*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Slice<jule::U8> _1ac93c351_code(_1ac9399ad_resultCoder*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Str _1bcc104b0_Name(_1bcc10669_Flag*);
inline jule::Str _1bcc10955_What(_1bcc10669_Flag*);
inline void _1bcc10a98_Reset(_1bcc10669_Flag*);
inline jule::I32 _1bcc10bdb_Short(_1bcc10669_Flag*);
inline jule::Str _1bcc13b12_Name(_1bcc13eca_Flag*);
inline jule::Str _1bcc13c55_What(_1bcc13eca_Flag*);
inline void _1bcc142b6_Reset(_1bcc13eca_Flag*);
inline jule::I32 _1bcc14409_Short(_1bcc13eca_Flag*);
inline jule::Str _1bcc1730d_Name(_1bcc176c6_Flag*);
inline jule::Str _1bcc17451_What(_1bcc176c6_Flag*);
inline void _1bcc179b2_Reset(_1bcc176c6_Flag*);
inline jule::I32 _1bcc17b05_Short(_1bcc176c6_Flag*);
inline jule::Str _1bcc1aa4d_Name(_1bcc1ae16_Flag*);
inline jule::Str _1bcc1ab91_What(_1bcc1ae16_Flag*);
inline void _1bcc1b202_Reset(_1bcc1ae16_Flag*);
inline jule::I32 _1bcc1b345_Short(_1bcc1ae16_Flag*);
inline jule::Str _1bcc1e249_Name(_1bcc1e612_Flag*);
inline jule::Str _1bcc1e38c_What(_1bcc1e612_Flag*);
inline void _1bcc1e8ed_Reset(_1bcc1e612_Flag*);
inline jule::I32 _1bcc1ea41_Short(_1bcc1e612_Flag*);
inline jule::Ptr<_1ac9a552e_FlagSet> static__1ac9a581a_New(void);
inline jule::Trait<_1ac9a397d_CommonFlag> _1ac9a5c8d_FindFlag(_1ac9a552e_FlagSet*, jule::Str);
inline jule::Trait<_1ac9a397d_CommonFlag> _1ac9a60ce_FindFlagShort(_1ac9a552e_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ac9a66a6_Parse(_1ac9a552e_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1bcc1e612_Flag> _1bcc8e682_addFlagCommon(_1ac9a552e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1bcc1ae16_Flag> _1bcc96678_addFlagCommon(_1ac9a552e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1bcc8c361_AddVar(_1ac9a552e_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1bcc9439b_AddVar(_1ac9a552e_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1bcc325ae_parseInteger(_1ac9a7eb0_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1bcc39e68_parseInteger(_1ac9a7eb0_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1ac9a87c9_getData(_1ac9a7eb0_argParser*);
inline jule::VoidExceptional _1ac9a8a4e_processFlag(_1ac9a7eb0_argParser*, jule::Trait<_1ac9a397d_CommonFlag>*);
inline jule::VoidExceptional _1ac9a8d07_singleDash(_1ac9a7eb0_argParser*, jule::Str*);
inline jule::VoidExceptional _1ac9a90b0_doubleDash(_1ac9a7eb0_argParser*, jule::Str*);
inline jule::VoidExceptional _1ac9a92ad_tryArg(_1ac9a7eb0_argParser*);
inline jule::VoidExceptional _1ac9a94ab_parse(_1ac9a7eb0_argParser*);
inline jule::Ptr<_1ac921379_ObjectCoder> static__1ac921775_New(jule::Ptr<_1abd36b36_IR>*, _1ac91e861_SerializationInfo);
inline void _1ac921a2d_write(jule::Ptr<_1ac921379_ObjectCoder>, jule::Str);
inline void _1ac921cd6_writeBytes(jule::Ptr<_1ac921379_ObjectCoder>, jule::Slice<jule::U8>);
inline void _1ac921ed4_addIndent(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac9221d2_doneIndent(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac9223d0_indent(jule::Ptr<_1ac921379_ObjectCoder>);
inline jule::I64 _1ac922721_findAnyType(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::I64 _1ac922a62_pushAnyType(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ac922d1a_pushResultIns(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ac9230c3_pushResult(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::I64 _1ac9234be_findTypeOffsetS(_1ac921379_ObjectCoder*, jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab1bc1ed_StructIns>);
inline jule::I64 _1ac9238ba_findTypeOffset(_1ac921379_ObjectCoder*, jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab2e6525_TypeKind>);
inline void _1ac923c2d_pushAndWriteMaskMapper(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab1e26da_Trait>);
inline void _1ac923ed6_locInfo(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab182e72_Token>*);
inline void _1ac9241d4_head(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac9243d2_links(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92468a_prepareStructure(_1ac921379_ObjectCoder*, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ac924888_prepareStructures(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac924b41_iterPackages(jule::Ptr<_1ac921379_ObjectCoder>, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)>);
inline void _1ac924d3e_buildTraitMap(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92503c_traitDecls(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac9252e5_structurePlainDecl(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ac9254e3_structurePlainDecls(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92579b_fieldDecl(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1bb64d_FieldIns>*);
inline void _1ac925a54_structureDestructor(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac925db7_structureOperatorEq(jule::Ptr<_1ac921379_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac92622a_structureOperatorNotEq(jule::Ptr<_1ac921379_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac926648_structureOperator(jule::Ptr<_1ac921379_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Str);
inline void _1ac926901_structureOperators(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac926ba9_structureInsDecl(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac926e62_structureDecl(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ac927160_structureDecls(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92735d_structureMethodDecls(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac927616_paramsDecls(jule::Ptr<_1ac921379_ObjectCoder>, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>*);
inline void _1ac927979_funcHead(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Bool);
inline void _1ac927cdc_funcDeclIns(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Bool);
inline void _1ac928150_funcDecl(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1ce40d_Fn>*, jule::Bool);
inline void _1ac92856d_funcDeclTrait(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1e26da_Trait>*, jule::Ptr<_1ab1ce40d_Fn>*, jule::Bool);
inline void _1ac92876b_funcDecls(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac928ace_traitDataTypeMethods(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1e26da_Trait>*, jule::Ptr<_1ab1e26da_Trait>*);
inline void _1ac928ccc_traitDataTypes(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac929085_paramIns(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1d1366_ParamIns>*);
inline void _1ac92933d_paramsIns(jule::Ptr<_1ac921379_ObjectCoder>, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>*);
inline void _1ac9296a1_varInitExpr(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab2853a4_Var>*, jule::Fn<void(void)>);
inline void _1ac929959_var(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab2853a4_Var>);
inline void _1ac929c12_funcIns(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ac929eba_func(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ac92a32d_funcTrait(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ac91ee38_traitHash>*, jule::Ptr<_1ab1ce40d_Fn>*);
inline void _1ac92a691_traitWrapper(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1ce40d_Fn>*, jule::Ptr<_1ac91ee38_traitHash>*);
inline void _1ac92a88e_traitWrappers(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92ac02_traitDataMethods(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1e26da_Trait>*, jule::Ptr<_1ac91ee38_traitHash>*);
inline void _1ac92b065_traitData(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ac91ee38_traitHash>*, jule::Ptr<_1ab1e26da_Trait>*);
inline void _1ac92b263_traitDatas(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92b461_globals(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92b65e_decls(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92b917_structureMethods(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac92bbc0_structureOstream(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac92be78_structureIns(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline void _1ac92c231_structure(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ac92c42e_structures(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92c62c_funcs(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92c8d5_pushInit(jule::Ptr<_1ac921379_ObjectCoder>, jule::Ptr<_1ab2459c4_Package>*);
inline void _1ac92cad3_initCaller(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92ccd1_end(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92cece_serializeHead(jule::Ptr<_1ac921379_ObjectCoder>);
inline void _1ac92d1cc_Serialize(jule::Ptr<_1ac921379_ObjectCoder>);
inline jule::Ptr<_1abe635ae_ObjectDeadCode> static__1abe63a54_new(jule::Ptr<_1abd36b36_IR>*);
inline jule::Bool _1bbd05474_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab1e26da_Trait>*);
inline jule::Bool _1bbd0aec4_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Bool _1bbd11c88_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab1bc1ed_StructIns>*);
inline jule::Bool _1bbd19158_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab2853a4_Var>*);
inline void _1bbd0583c_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab1e26da_Trait>);
inline void _1bbd0b359_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab1d2312_FnIns>);
inline void _1bbd12393_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab1bc1ed_StructIns>);
inline void _1bbd19521_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab2853a4_Var>);
inline void _1abe93de7_setReferencesAsLive(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab1d54d0_ReferenceStack>*);
inline void _1abe941a0_inits(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab2459c4_Package>*);
inline void _1abe94458_collectLivePackage(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab2459c4_Package>*);
inline void _1abe94656_collectLive(jule::Ptr<_1abe635ae_ObjectDeadCode>);
inline void _1abe9490e_removeDeadGlobals(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab2853a4_Var>>*);
inline void _1abe94bb7_removeDeadFns(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>*);
inline void _1abe94e70_removeDeadStructs(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab1b9470_Struct>>*);
inline void _1abe95228_removeDeadTraits(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ab1e26da_Trait>>*);
inline void _1abe954d1_removeDeadsFile(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab2b0863_SymbolTable>*);
inline void _1abe95789_removeDeadsPackage(jule::Ptr<_1abe635ae_ObjectDeadCode>, jule::Ptr<_1ab2459c4_Package>*);
inline void _1abe95987_removeDeads(jule::Ptr<_1abe635ae_ObjectDeadCode>);
inline void _1abe95b85_elimanate(jule::Ptr<_1abe635ae_ObjectDeadCode>);
inline __jule_tuple_x_1abd36b36_IR__jule_tuple_s_1a7d05a93_Log static__1abd37098_Build(jule::Str, jule::I64);
inline void _1abd37582_appendStructs(_1abd36b36_IR*, jule::Ptr<_1ab2459c4_Package>*, jule::Slice<jule::Ptr<_1ab1b9470_Struct>>*);
inline jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _1abd37818_GetAllStructures(_1abd36b36_IR*);
inline void _1abd37b7b_appendGlobals(_1abd36b36_IR*, jule::Ptr<_1ab2459c4_Package>*, jule::Slice<jule::Ptr<_1ab2853a4_Var>>*);
inline jule::Slice<jule::Ptr<_1ab2853a4_Var>> _1abd37e12_GetAllGlobals(_1abd36b36_IR*);
inline void _1abd38110_Order(_1abd36b36_IR*);
inline jule::Str _1ab1bc572_Str(_1ab1bc1ed_StructIns*);
inline jule::Bool _1ab1bc8b3_Equal(jule::Ptr<_1ab1bc1ed_StructIns>, jule::Ptr<_1ab2e6525_TypeKind>);
inline jule::Bool _1ab1bcd69_Same(_1ab1bc1ed_StructIns*, jule::Ptr<_1ab1bc1ed_StructIns>);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab1bd265_FindMethod(_1ab1bc1ed_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1ab1bb64d_FieldIns> _1ab1bd5a6_FindField(_1ab1bc1ed_StructIns*, jule::Str);
inline jule::Ptr<_1ab2853a4_Var> _1ab1bd8e7_FindStatic(_1ab1bc1ed_StructIns*, jule::Str);
inline jule::Ptr<_1a7dad4db_Cmd> static__1a7dad909_New(jule::Str);
inline jule::VoidExceptional _1a7dadb07_Spawn(_1a7dad4db_Cmd*);
inline jule::Exceptional<jule::I64> _1a7dae08b_Wait(_1a7dad4db_Cmd*);
inline jule::VoidExceptional _1a7e13b5c_spawn(_1a7dad4db_Cmd*);
inline jule::Exceptional<jule::I64> _1a7e140e1_wait(_1a7dad4db_Cmd*);
inline void _1d7acd000_Free(void*);
inline jule::Str _1d7b0d87c_BytePtrToStr(jule::U8*);
inline jule::I64 _1d7a78c7b_GetLastErrno(void);
inline jule::I64 _1d7b1d194_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1d7b1d518_Stat(jule::U8*, struct stat*);
inline jule::I64 _1d7b1d947_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _1d7b1dcbb_Getcwd(jule::U8*, jule::U64);
inline DIR* _1d7b1e2b6_Opendir(jule::U8*);
inline struct dirent* _1d7b1e580_Readdir(DIR*);
inline jule::I64 _1d7b1e849_Closedir(DIR*);
inline jule::I64 _1d7b20251_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _1d7b2051a_Rmdir(jule::U8*);
inline jule::I64 _1d7b207d4_Unlink(jule::U8*);
inline jule::I64 _1d7b25e7c_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1d7b26323_Close(jule::I64);
inline jule::I64 _1d7b26752_Write(jule::I64, void*, jule::U64);
inline void _1d7b26983_Exit(jule::I64);
inline jule::Str _1d784e49c_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1aca3bc14_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1d785a255_StrBytes(jule::Str);
inline jule::Str _1d785a51e_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _1d785a7d8_StrFromBytes(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1d785aaa2_BytesFromStr(jule::Str);
inline jule::I64 _1d785b520_getLastOsError(void);
inline jule::Slice<jule::Str> _1d7884988_Args(void);
inline jule::Exceptional<jule::Str> _1d7884e2d_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1d7885879_getwd(void);
inline jule::Bool _1a7a84a64_IsLetter(jule::I32);
inline jule::Bool _1a7aec626_is16(jule::Slice<_1a7aea888_Range16>, jule::U16);
inline jule::Bool _1a7aec99a_is32(jule::Slice<_1a7aeadb6_Range32>, jule::U32);
inline jule::Bool _1a7aed2a3_isExcludingLatin(jule::Ptr<_1a7aeb36c_RangeTable>, jule::I32);
inline jule::Bool _1a7aed56c_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1a7be6ac7_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1a7be6e18_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1a7be71d2_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1a7be803a_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1a7be83ae_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1a7be8942_RuneCountStr(jule::Str);
inline jule::Bool _1a7be8c0b_RuneStart(jule::U8);
inline jule::I64 _1a7c23b26_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1a7c361cc_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1a7c36573_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _1a7c368e7_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _1a7c36ba0_Repeat(jule::Str, jule::I64);
inline jule::Bool _1a7c37123_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1a7c37497_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1a7c3794d_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1a7c37c8e_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1a7c381bd_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a7c38542_Find(jule::Str, jule::Str);
inline jule::I64 _1a7c38a81_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a7c38e05_FindLast(jule::Str, jule::Str);
inline jule::I64 _1a7c3a654_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1a7c3ab82_FindRune(jule::Str, jule::I32);
inline jule::I64 _1a7c3b37a_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1a7c3bb2d_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1a7c3bea2_Contains(jule::Str, jule::Str);
inline jule::Bool _1a7c3ca1e_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1a7c3cd93_Count(jule::Str, jule::Str);
inline jule::Str _1a7c3d37c_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1a7c3e070_trimLeft(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1a7c3e3e4_TrimLeft(jule::Str, jule::Str);
inline void _1a7c3a81e_trimRight(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1a7c4000a_Trim(jule::Str, jule::Str);
inline jule::Str _1a7c4037e_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1a7c5a0e1_Clean(jule::Str);
inline jule::Str _1a7c5a6b8_FromSlash(jule::Str);
inline jule::Str _1a7c5a971_Join(jule::Slice<jule::Str>);
inline jule::Str _1a7c5ac3a_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1a7c5b004_Abs(jule::Str);
inline jule::Str _1a7c5b2bd_Base(jule::Str);
inline jule::Str _1a7c5b664_Dir(jule::Str);
inline jule::Str _1a7c5b92d_VolumeName(jule::Str);
inline jule::Bool _1a7c5c81e_IsPathSep(jule::U8);
inline jule::Bool _1a7c5cb2c_IsAbs(jule::Str);
inline jule::I64 _1a7c5cde6_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1a7c5d237_abs(jule::Str);
inline jule::Str _1a7c5d501_join(jule::Slice<jule::Str>);
inline jule::I64 _1d7b518ae_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1a7e05962_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _1a7e0e76d_Itoa(jule::I64);
inline jule::Str _1a7e0ea7b_Utoa(jule::U64);
inline void _1a7e0ecac_rev(jule::Slice<jule::U8>*);
inline jule::Slice<char*> _1a7e13354_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _1a7e136c8_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _1a7e13909_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _1a7e14883_processErrorFromCode(jule::I64);
inline jule::I64 _1a7e14ad6_getLastProcessError(void);
inline void _1a7e15400_Exit(jule::I64);
inline jule::Str _1a7e1560e_Executable(void);
inline jule::Bool _1a7ce8514_IsStdHeaderPath(jule::Str);
inline jule::Bool _1a7ce87de_IsValidHeaderExt(jule::Str);
inline jule::Bool _1a7ce8aa8_IsValidCppExt(jule::Str);
inline jule::Str _1a7d06005_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a7d06313_argToStr(jule::Any);
inline jule::I64 _1a7d065cc_findNextFmt(jule::Str);
inline jule::Str _1a7d06995_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a7d0780e_IsTopDirective(jule::Str);
inline jule::Bool _1a7d08c61_IsWindows(jule::Str);
inline jule::Bool _1a7d0903b_IsDarwin(jule::Str);
inline jule::Bool _1a7d09305_IsLinux(jule::Str);
inline jule::Bool _1a7d09646_IsI386(jule::Str);
inline jule::Bool _1a7d09910_IsAmd64(jule::Str);
inline jule::Bool _1a7d09bc9_IsArm64(jule::Str);
inline jule::Bool _1a7d09e93_IsUnix(jule::Str);
inline jule::Bool _1a7d0a339_Is32Bit(jule::Str);
inline jule::Bool _1a7d0a603_Is64Bit(jule::Str);
inline void _1a7e168da_init(void);
inline jule::I64 _1a8c859cd_LeadingZeros64(jule::U64);
inline jule::I64 _1a8c86935_TrailingZeros(jule::U64);
inline jule::I64 _1a8c87392_TrailingZeros32(jule::U32);
inline jule::I64 _1a8c8765b_TrailingZeros64(jule::U64);
inline jule::I64 _1a8c8d112_Len32(jule::U32);
inline jule::I64 _1a8c8d3cb_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1a8c8e168_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1a8c90972_Mul64(jule::U64, jule::U64);
inline jule::U32 _1a875b1b8_F32Bits(jule::F32);
inline jule::F32 _1a875b4c6_F32FromBits(jule::U32);
inline jule::U64 _1a875b790_F64Bits(jule::F64);
inline jule::F64 _1a875bad1_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1a875e188_Frexp(jule::F64);
inline jule::F64 _1a8c97d86_NaN(void);
inline jule::Bool _1a8c98194_IsNaN(jule::F64);
inline jule::F64 _1a8c9845d_Inf(jule::I64);
inline jule::Bool _1a8c9879e_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1a8c98a68_normalize(jule::F64);
inline jule::F64 _1a8c9a54d_Log(jule::F64);
inline jule::F64 _1a8c9b043_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1a8ca2c3c_Modf(jule::F64);
inline jule::F64 _1a8ca3545_Log2(jule::F64);
inline jule::Str _1a8ccca69_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a8ccd152_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a8ccd85b_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a8ccb9be_floatInfo*);
inline jule::Slice<jule::U8> _1a8cce032_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1a8ccc4d6_decimalSlice, jule::I64, jule::U8);
inline void _1a8cce483_roundShortest(_1a8ce0263_decimal*, jule::U64, jule::I64, _1a8ccb9be_floatInfo*);
inline jule::Slice<jule::U8> _1a8ccea27_fmtE(jule::Slice<jule::U8>, jule::Bool, _1a8ccc4d6_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1a8cd0011_fmtF(jule::Slice<jule::U8>, jule::Bool, _1a8ccc4d6_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1a8cd0682_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1a8ccb9be_floatInfo*);
inline jule::Slice<jule::U8> _1a8cd0d8b_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a8ccb9be_floatInfo*);
inline jule::I64 _1a8cd1210_min(jule::I64, jule::I64);
inline jule::I64 _1a8cd1584_max(jule::I64, jule::I64);
inline jule::U8 _1a8cd20ce_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1a8862456_ConvError _1a8cd2552_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1a8cd2981_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1a8cd2e37_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1a8cd3b2a_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1a8cd406a_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1a8cd5db3_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a8cd61c1_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a8cd648a_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1a8cd8019_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1a8cd8448_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1a8862456_ConvError _1a8cd89dc_atofHex(_1a8ccb9be_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8862456_ConvError _1a8cd8db6_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError _1a8cd9180_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError _1a8cd9504_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1a8cd9878_ParseFloat(jule::Str, jule::I64);
inline void _1a8cda181_ryuFtoaFixed32(_1a8ccc4d6_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1a8cda626_ryuFtoaFixed64(_1a8ccc4d6_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1a8cdae73_formatDecimal(_1a8ccc4d6_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1a8cdb44b_ryuFtoaShortest(_1a8ccc4d6_decimalSlice*, jule::U64, jule::I64, _1a8ccb9be_floatInfo*);
inline jule::I64 _1a8cdb715_mulByLog2Log10(jule::I64);
inline jule::I64 _1a8cdb9ce_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a8cdbe0d_computeBounds(jule::U64, jule::I64, _1a8ccb9be_floatInfo*);
inline void _1a8cdc529_ryuDigits(_1a8ccc4d6_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1a8cdcb9a_ryuDigits32(_1a8ccc4d6_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a8cdd0c9_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a8cdd508_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1a8cdd87c_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1a8cddb46_divmod1e9(jule::U64);
inline void _1a8ce1ab1_trim(_1a8ce0263_decimal*);
inline void _1a8ce1d9c_rightShift(_1a8ce0263_decimal*, jule::U64);
inline jule::Bool _1a8ce2353_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1a8ce260b_leftShift(_1a8ce0263_decimal*, jule::U64);
inline jule::Bool _1a8ce2980_shouldRoundUp(_1a8ce0263_decimal*, jule::I64);
inline jule::Str _1a8ce4267_FmtUint(jule::U64, jule::I64);
inline jule::Str _1a8ce4630_FmtInt(jule::I64, jule::I64);
inline jule::Str _1a8ce48e9_Itoa(jule::I64);
inline jule::Str _1a8ce4c3a_small(jule::I64);
inline jule::Bool _1a8ce5004_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1a8ce5598_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1a8ce6a94_RealKindOf(jule::Str);
inline jule::I64 _1a8ce6d5d_BitsizeOf(jule::Str);
inline jule::Str _1a8ce719e_IntFromBits(jule::I64);
inline jule::Str _1a8ce7468_UintFromBits(jule::I64);
inline jule::Str _1a8ce7732_FloatFromBits(jule::I64);
inline jule::Bool _1a8ce837b_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1a8ce8645_BitsizeOfFloat(jule::F64);
inline jule::I64 _1a8ce890e_BitsizeOfInt(jule::I64);
inline jule::I64 _1a8ce8bc8_BitsizeOfUint(jule::U64);
inline void _1a8ce8d4e_UpdateTarget(void);
inline void _1a8ce8ec5_init(void);
inline jule::I64 _1a8cecd31_MinI(jule::Str);
inline jule::I64 _1a8ced13e_MaxI(jule::Str);
inline jule::U64 _1a8ced408_MaxU(jule::Str);
inline jule::F64 _1a8ced639_Min(jule::Str);
inline jule::F64 _1a8ced903_Max(jule::Str);
inline jule::Bool _1a8cedd76_IsI8Compatible(jule::Str);
inline jule::Bool _1a8cee184_IsI16Compatible(jule::Str);
inline jule::Bool _1a8cee44d_IsI32Compatible(jule::Str);
inline jule::Bool _1a8cee78e_IsI64Compatible(jule::Str);
inline jule::Bool _1a8ceea58_IsU8Compatible(jule::Str);
inline jule::Bool _1a8ceed22_IsU16Compatible(jule::Str);
inline jule::Bool _1a8d000db_IsU32Compatible(jule::Str);
inline jule::Bool _1a8d00482_IsU64Compatible(jule::Str);
inline jule::Bool _1a8d0074b_IsF32Compatible(jule::Str);
inline jule::Bool _1a8d00a15_IsF64Compatible(jule::Str);
inline jule::Bool _1a8d00d89_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1a8d01153_IsI16Greater(jule::Str);
inline jule::Bool _1a8d0141c_IsI32Greater(jule::Str);
inline jule::Bool _1a8d016d6_IsI64Greater(jule::Str);
inline jule::Bool _1a8d019a0_IsU16Greater(jule::Str);
inline jule::Bool _1a8d01e23_IsU32Greater(jule::Str);
inline jule::Bool _1a8d021dc_IsU64Greater(jule::Str);
inline jule::Bool _1a8d024a6_IsF32Greater(jule::Str);
inline jule::Bool _1a8d02770_IsF64Greater(jule::Str);
inline jule::Bool _1a8d02ae4_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1a8d03b4a_IsSigInt(jule::Str);
inline jule::Bool _1a8d03e58_IsUnsigInt(jule::Str);
inline jule::Bool _1a8d04222_IsInt(jule::Str);
inline jule::Bool _1a8d04563_IsFloat(jule::Str);
inline jule::Bool _1a8d0482c_IsNum(jule::Str);
inline jule::Bool _1a8d04ae6_IsSigNum(jule::Str);
inline void _1a8d0de41_lshiftUnsig(_1a8d04e26_Const*, _1a8d04e26_Const*);
inline void _1a8d0e271_rshiftUnsig(_1a8d04e26_Const*, _1a8d04e26_Const*);
inline jule::Bool _1ab1836ae_IsUnaryOp(jule::U64);
inline jule::Bool _1ab1839bc_IsBinOp(jule::U64);
inline jule::Bool _1ab1840c7_IsStr(jule::Str);
inline jule::Bool _1ab184391_IsRawStr(jule::Str);
inline jule::Bool _1ab18465a_IsRune(jule::Str);
inline jule::Bool _1ab185084_IsFloat(jule::Str);
inline jule::Bool _1ab18534d_IsNum(jule::Str);
inline jule::Bool _1ab1858d1_IsIgnoreIdent(jule::Str);
inline jule::Bool _1ab185b9a_IsAnonIdent(jule::Str);
inline jule::Bool _1ab18622d_IsSpace(jule::I32);
inline jule::Bool _1ab1866a1_IsLetter(jule::I32);
inline jule::Bool _1ab186c34_IsDecimal(jule::U8);
inline jule::Bool _1ab186eed_IsBinary(jule::U8);
inline jule::Bool _1ab1872b7_IsOctal(jule::U8);
inline jule::Bool _1ab187581_IsHex(jule::U8);
inline jule::Bool _1ab18784a_IsAssign(jule::U64);
inline jule::Bool _1ab187b14_IsPostfixOp(jule::U64);
inline jule::Bool _1ab187dcd_IsAssignOp(jule::U64);
inline jule::Ptr<_1ab18873b_File> _1ab189ad3_NewFileSet(jule::Str);
inline _1a7d05a93_Log _1ab18b62e_makeErr(jule::I64, jule::I64, jule::Ptr<_1ab18873b_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab18b9e7_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1ab18bd6b_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab18c234_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab18c5a8_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab18c92c_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab18cca1_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab18d235_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab18d4ee_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1ab18d7b8_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1ab18db3c_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1ab18deb1_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1ab18e335_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1ab18e6a9_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1ab18ea2d_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab18eea1_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1ab19026a_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1ab1905de_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1ab1908a8_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ab190b72_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ab190e3b_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ab191205_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1a7d05a93_Log> _1ab1961e9_Lex(jule::Ptr<_1ab18873b_File>, jule::I64);
inline jule::Bool _1ab25e191_FindModuleFile(jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>*);
inline jule::Str _1ab25e449_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1a7d05a93_Log> _1ab25e713_CheckModuleFile(jule::Str*);
inline jule::Bool _1ab260093_IsPub(jule::Str);
inline jule::Bool _1aa266ee1_IsAscii(jule::I32);
inline jule::I32 _1aa267277_ToRune(jule::Str);
inline jule::Str _1aa267541_ToRawStr(jule::Str);
inline jule::Str _1aa267882_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1aa267b4b_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1aa267e8c_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1aa268311_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1ab3c401a_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1ab3c438e_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1ab3c467a_FmtByDefault(_1a7c4c7ed_StrBuilder*, jule::Any*);
inline void _1ab3c4a98_applyFmtByDefault(_1a7c4c7ed_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1ab3c4ee9_applyFmt(jule::Slice<jule::U8>*, _1a7c4c7ed_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1ab3c533a_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ab3c735e_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab1d45de_parameterUsesGenerics(jule::Ptr<_1ab1d1366_ParamIns>*, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>*);
inline jule::Ptr<_1ab2ed6e7_TypeSymbol> _1ab1d6d61_buildType(jule::Ptr<_1ab198570_TypeDecl>);
inline jule::Ptr<_1ab2b6d53_Value> _1ab1d716e_buildExpr(jule::Ptr<_1ab19c8a4_Expr>);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab1d7438_buildTypeAlias(jule::Ptr<_1ab1b008c_TypeAliasDecl>);
inline jule::Ptr<_1ab1b657c_Field> _1ab1d7779_buildField(jule::Ptr<_1ab1b3942_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ab1b657c_Field>> _1ab1d7a43_buildFields(jule::Slice<jule::Ptr<_1ab1b3942_FieldDecl>>*);
inline jule::Ptr<_1ab1b9470_Struct> _1ab1d7d0c_buildStruct(jule::Ptr<_1ab1b4338_StructDecl>);
inline jule::Ptr<_1ab1cc939_Param> _1ab1d80c6_buildParam(jule::Ptr<_1ab1a8ccd_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ab1cc939_Param>> _1ab1d846c_buildParams(jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>>*);
inline jule::Ptr<_1ab1cc1a8_RetType> _1ab1d8736_buildRetType(jule::Ptr<_1ab19b463_RetTypeDecl>);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab1d8a00_buildFunc(jule::Ptr<_1ab1aa230_FnDecl>);
inline jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _1ab1d8cb9_buildMethods(jule::Slice<jule::Ptr<_1ab1aa230_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1ab2ed6e7_TypeSymbol>> _1ab1d9083_buildTraitInherits(jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>*);
inline jule::Ptr<_1ab1e26da_Trait> _1ab1d934c_buildTrait(jule::Ptr<_1ab1b4a75_TraitDecl>);
inline jule::Ptr<_1ab1e4379_EnumItem> _1ab1d9616_buildEnumItem(jule::Ptr<_1ab1b1b2c_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>> _1ab1d98d0_buildEnumItems(jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>>*);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab1d9d53_buildEnum(jule::Ptr<_1ab1b26dd_EnumDecl>);
inline jule::Ptr<_1ab1e6029_TypeEnumItem> _1ab1da11c_buildTypeEnumItem(jule::Ptr<_1ab1b3018_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>> _1ab1da3d6_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>>*);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab1da6a0_buildTypeEnum(jule::Ptr<_1ab1b3678_TypeEnumDecl>);
inline jule::Ptr<_1ab2853a4_Var> _1ab1da969_buildVar(jule::Ptr<_1ab1ab3da_VarDecl>);
inline jule::Slice<jule::Ptr<_1ab2853a4_Var>> _1ab1dac33_buildVars(jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>>);
inline jule::Ptr<_1ab21ad62_Impl> _1ab1daeec_buildImpl(jule::Ptr<_1ab1b51d5_Impl>);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2163ac_buildAsComptimeMethodData(jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab2166ba_findComptimePackage(jule::Ptr<_1ab262e97_Sema>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab216a3e_buildComptimeTypeInfoData(jule::Ptr<_1ab262e97_Sema>*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab216c70_buildComptimeValue(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Str _1ab219d0b_toStrConstraints(jule::Ptr<_1ab2e4b3e_InsGeneric>);
inline jule::Bool _1ab21a1c4_matchConstraint(jule::Str*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab21a48d_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab21d095_newScopeCheckerBase(jule::Ptr<_1ab262e97_Sema>*, jule::Ptr<_1ab1d2312_FnIns>);
inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab21d45d_newScopeChecker(jule::Ptr<_1ab262e97_Sema>*, jule::Ptr<_1ab1d2312_FnIns>);
inline jule::Ptr<_1ab227126_scopeLabel> _1ab21d7d2_findLabelParent(jule::Str*, jule::Ptr<_1ab2285bc_scopeChecker>);
inline jule::Bool _1ab21db9a_modelIsGotoScope(jule::Any, jule::Ptr<_1ab2212b8_Scope>*);
inline jule::Bool _1ab21e01e_stmtIsGotoScope(jule::Any*, jule::Ptr<_1ab2212b8_Scope>*);
inline jule::I64 _1ab21e393_countMatchType(jule::Ptr<_1ab2253ee_Match>*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _1ab21e65c_getDatasFromTupleData(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab220020_checkMut(jule::Ptr<_1ab262e97_Sema>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1ab220509_checkAssign(jule::Ptr<_1ab262e97_Sema>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1ab2207c3_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1ab220a8c_isValidStForNextSt(jule::Any*);
inline jule::Bool _1ab220d56_stmtIsDef(jule::Any*);
inline jule::U64 _1ab23a3d1_removeEqFromOp(jule::U64);
inline void _1ab23a612_makeComptimeRange(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab23ab0c_canComptimeMatch(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2853a4_Var> _1ab240084_findVarInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab240507_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab1b9470_Struct> _1ab240936_findStructInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab1ce40d_Fn> _1ab240ddc_findFnInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ab1e26da_Trait> _1ab24122d_findTraitInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ab1e4de6_Enum> _1ab2415a2_findEnumInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab241926_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*);
inline jule::Any _1ab241e65_defByIdentPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1ab247e9e_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ab260637_isValidModelForRef(jule::Any*);
inline _1a7d05a93_Log _1ab260b65_compilerErr(jule::Ptr<_1ab182e72_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ab260ed9_impIsLookupable(jule::Ptr<_1ab242a9d_ImportInfo>*, jule::Str*);
inline void _1ab261292_appendRetVars(jule::Slice<jule::Ptr<_1ab2853a4_Var>>*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ab26157d_appendParamVars(jule::Slice<jule::Ptr<_1ab2853a4_Var>>*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1ab261869_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Ptr<_1ab2b0863_SymbolTable> _1ab261bdd_findFile(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>*, jule::Ptr<_1ab18873b_File>*);
inline void _1ab262194_pushSuggestion(_1a7d05a93_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab28366b_pushImplemented(jule::Ptr<_1ab1e26da_Trait>, jule::Ptr<_1ab1b9470_Struct>*);
inline void _1ab283957_pushImplements(jule::Ptr<_1ab1b9470_Struct>*, jule::Ptr<_1ab1e26da_Trait>);
inline jule::Bool _1ab29b3ba_traitHasReferenceReceiver(jule::Ptr<_1ab1e26da_Trait>*);
inline jule::Bool _1ab29b750_floatAssignable(jule::Str*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab29bac4_sigAssignable(jule::Str, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab29be8c_unsigAssignable(jule::Str, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab29c311_intAssignable(jule::Str, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2a89c1_checkMutRiskOfStructLit(jule::Ptr<_1ab262e97_Sema>*, jule::Ptr<_1ab1c2445_StructLitExprModel>*);
inline jule::Ptr<_1ab2e6525_TypeKind> _1ab2ae565_lenKind(void);
inline jule::Bool _1ab2ae8b7_isGoodValueToInfer(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab19798c_Directive> _1ab2de573_findDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Str);
inline jule::Any _1ab2de93b_findBuiltinsImport(jule::Str*, jule::Ptr<_1ab242a9d_ImportInfo>);
inline void _1ab2deb6c_fitBitsize(jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2dee9c_makeStructLitAlloc(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1c2445_StructLitExprModel>*);
inline jule::Ptr<_1ab2853a4_Var> _1ab2e0321_buildErrorVar(jule::Ptr<_1ab2212b8_Scope>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Any _1ab2e0695_findBuiltinsSema(jule::Str*, jule::Ptr<_1ab262e97_Sema>);
inline jule::Bool _1ab2e095e_isOkForShifting(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab2e0d38_isInstancedStruct(jule::Ptr<_1ab1bc1ed_StructIns>);
inline jule::Bool _1ab2e11ac_isPtrArithmeticCompatible(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2e1498_applyCastKindModel(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1ab2e1784_applyCastKind(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2e1993_buildVoidData(void);
inline jule::Str _1ab2e1c5c_checkDataForIntegerIndexing(jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2e2048_applyCastModelByEnum(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab1e4de6_Enum>);
inline void _1ab2e2334_castConstByType(jule::Str*, jule::Ptr<_1ab2b5c0e_Data>*);
inline void _1ab2e27c9_updateModelToGenericIns(jule::Any*, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Bool _1ab2e2b4d_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1ab198e77_SubIdentTypeDecl>*);
inline jule::Str _1ab2e2e17_constoa(jule::Ptr<_1a8d04e26_Const>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab2e328b_evalEnumStatic(jule::Ptr<_1ab1e4de6_Enum>*, jule::Ptr<_1ab1e4379_EnumItem>*);
inline jule::Ptr<_1ab1c2445_StructLitExprModel> _1ab2e3555_isLitBased(jule::Any*);
inline void _1ab2e3841_makeImplicitDeref(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab182e72_Token>);
inline void _1bab8071d_updateRefer(jule::Ptr<_1ab1d54d0_ReferenceStack>, jule::Ptr<_1ab1d2312_FnIns>*, jule::Ptr<_1ab1d2312_FnIns>*);
inline jule::Bool _1ab311c7c_kindUsesGenerics(jule::Ptr<_1ab2e6525_TypeKind>*, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>*);
inline jule::Bool _1ab312145_hasDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Str);
inline jule::Bool _1ab31240e_canGetPtr(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab312750_isValidForSptrType(jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab312a19_isValidForRef(jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Bool _1ab312cd3_isBuiltinStrConvertable(jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Str _1ab31309c_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab2ee0ee_Prim> _1ab313443_buildPrimType(jule::Str);
inline void _1ab3139e8_applyImplicitCast(jule::Ptr<_1ab2e6525_TypeKind>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ab313cb2_validTypeForXof(jule::Ptr<_1ab2e6525_TypeKind>*);
inline __jule_tuple_x_1ab2b0863_SymbolTable__jule_tuple_s_1a7d05a93_Log _1ab316d4d_buildSymbols(jule::Ptr<_1ab1965b2_Ast>*, jule::Trait<_1ab23eb88_Importer>*, jule::Ptr<_1ab1db5b3_symbolBuilder>);
inline __jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log _1ab3172c1_analyzePackage(jule::Slice<jule::Ptr<_1ab1965b2_Ast>>*, jule::Trait<_1ab23eb88_Importer>*, jule::I64*);
inline __jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log _1ab317700_AnalyzePackage(jule::Slice<jule::Ptr<_1ab1965b2_Ast>>, jule::Trait<_1ab23eb88_Importer>, jule::I64);
inline jule::Ptr<_1ab1d2312_FnIns> _1ab3c7cee_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab3c810c_primTypeAlias(jule::Ptr<_1ab2e6525_TypeKind>*);
inline jule::Ptr<_1ab2853a4_Var> _1ab3cbc15_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab3cbe46_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1ab3cc210_findBuiltinDef(jule::Str*);
inline jule::Any _1ab3cc4c9_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1ab3cc793_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1ab3ccb39_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1ab3cce03_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1ab3cd277_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3cd6a6_builtinCallerCommonPlain(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3cda2a_builtinCallerError(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3cde59_builtinCallerOut(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3ce388_builtinCallerOutln(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3ce7b7_builtinCallerNew(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3ceda0_builtinCallerPanic(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d02ce_builtinCallerMake(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d070d_builtinCallerAppend(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d0be7_callerCopySlice(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d1126_builtinCallerCopy(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d149a_callerLenSlice(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d181e_callerLenMap(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d1b93_callerLenArr(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d2017_callerLenStr(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d238b_callerLenComptime(jule::Ptr<_1ab2b5c0e_Data>*, jule::I64);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d27ba_builtinCallerLen(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d2b3e_callerCapSlice(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d306d_builtinCallerCap(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d3557_callerDeleteMap(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d3986_builtinCallerDelete(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d3db5_builtinCallerAssert(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d448c_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d4855_builtinCallerStdComptimeValueOf(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d4c84_builtinCallerStdComptimeLine(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d51b3_builtinCallerStdComptimeFile(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d55e2_builtinCallerStdComptimeFiles(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d5a21_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d5e50_builtinCallerStdMemSizeOf(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d637e_builtinCallerStdMemAlignOf(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d67ad_builtinCallerStdMemFree(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d6bdc_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d711b_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d754a_builtinCallerStdDebugOut(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d7979_builtinCallerStdDebugOutln(jule::Ptr<_1ab2b7903_Eval>*, jule::Ptr<_1ab1a15cd_FnCallExpr>*, jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Ptr<_1abca8503_FileInfo> _1abcebe1a_ParseFile(jule::Ptr<_1ab18873b_File>);
inline __jule_tuple_x_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log _1abcec4e2_parseFileset(jule::Ptr<_1ab18873b_File>);
inline jule::Ptr<_1ab1a8591_ScopeTree> _1abcece82_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1abced317_isSt(jule::Ptr<_1ab182e72_Token>, jule::Ptr<_1ab182e72_Token>);
inline jule::Bool _1abced68b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1abceda54_nextStPos(jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::I64);
inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_bool _1abceddc8_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Slice<jule::Ptr<_1abcee208_stmt>> _1abcee5b0_splitStmts(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Bool _1abd17c16_isTypeOp(jule::U64*);
inline jule::Bool _1abd18024_isTypeRange(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Slice<jule::Ptr<_1ab182e72_Token>> _1abd182dd_getBlockExpr(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token _1abd186a6_splitDelim(jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::U64);
inline jule::I64 _1abd18970_findLowestPrecOp(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Ptr<_1ab19e2ce_IdentExpr> _1abd18c39_buildIdentExpr(jule::Ptr<_1ab182e72_Token>*);
inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_int _1abd19003_getRangeExprTokens(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline jule::Bool _1abd19d17_checkAssignTokens(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline _1a7d05a93_Log _1abd1b016_makeErr(jule::I64, jule::I64, jule::Ptr<_1ab18873b_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ab182e72_Token>> _1abd1b511_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token _1abd1b7ca_rangeLast(jule::Slice<jule::Ptr<_1ab182e72_Token>>*);
inline __jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log _1abd1bc81_parts(jule::Slice<jule::Ptr<_1ab182e72_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1abd1c04a_getCloseOfBrace(jule::U64);
inline _1a7d05a93_Log _1abd1c479_compilerErr(jule::Ptr<_1ab182e72_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1abd1c820_pushSuggestion(_1a7d05a93_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ab198570_TypeDecl> _1abd2e777_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1ab4cbb8e_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ab4cbcd2_checkArch(jule::Str);
inline jule::Bool _1ab4e6769_isPassFileAnnotation(jule::Str);
inline void _1ab4e78e1_setOsVars(jule::Slice<jule::Str>*);
inline void _1ab4e7b66_setArchVars(jule::Slice<jule::Str>*);
inline void _1ab4e7e52_initVars(jule::Slice<jule::Str>*, _1ab4e75c2_CompileInfo*);
inline jule::Slice<jule::U8> _1abd338ad_readBuff(jule::Str);
inline _1a7d05a93_Log _1abd33b88_flatCompilerErr(jule::Str);
inline void _1abd384a6_pushPasses(jule::Ptr<_1ab2459c4_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1abd3886e_getAllUniquePasses(jule::Ptr<_1ab2459c4_Package>*, jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>>);
inline _1ab4e75c2_CompileInfo _1abd38a7d_buildCompileInfo(void);
inline void _1abe95eb5_EliminateDefines(jule::Ptr<_1abd36b36_IR>*);
inline jule::Ptr<_1ab19798c_Directive> _1abe9637d_findDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Str);
inline jule::Bool _1abe96702_hasDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Str);
inline jule::Bool _1abe96aba_isTraitMethod(jule::Ptr<_1ab1bc1ed_StructIns>*, jule::Ptr<_1ab1d2312_FnIns>*);
inline void _1abe9aabe_eliminateDeadCodeOfScope(jule::Ptr<_1ab2212b8_Scope>);
inline void _1abe9ad44_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>*);
inline void _1abe9b075_eliminateFunctionsScopePackage(jule::Ptr<_1ab2459c4_Package>*);
inline void _1abe9b32d_eliminateScopePackage(jule::Ptr<_1ab2459c4_Package>*);
inline void _1abe9b55e_EliminateScopes(jule::Ptr<_1abd36b36_IR>*);
inline jule::Uintptr _1ab3d7c21_typeData(jule::Any*);
inline jule::Bool _1ab3d80a6_equalConst(jule::Ptr<_1a8d04e26_Const>, jule::Ptr<_1a8d04e26_Const>);
inline jule::Bool _1ab3d842a_equalCasting(jule::Ptr<_1ab1c2cc5_CastingExprModel>, jule::Ptr<_1ab1c2cc5_CastingExprModel>);
inline jule::Bool _1ab3d87e3_equalUnary(jule::Ptr<_1ab1c1a71_UnaryExprModel>, jule::Ptr<_1ab1c1a71_UnaryExprModel>);
inline jule::Bool _1ab3d8b67_equalIndexing(jule::Ptr<_1ab1c4007_IndexingExprModel>, jule::Ptr<_1ab1c4007_IndexingExprModel>);
inline jule::Bool _1ab3d8edb_equalBinary(jule::Ptr<_1ab1c1697_BinaryExprModel>, jule::Ptr<_1ab1c1697_BinaryExprModel>);
inline jule::Bool _1ab3d9360_equalModels(jule::Any, jule::Any);
inline jule::Bool _1ab3e2621_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ab3e292e_isConstantValidConditionalCase(jule::Ptr<_1ab2216d6_If>*);
inline jule::Bool _1ab3e2be8_isUnreachableExpr(jule::Any*);
inline jule::Bool _1ab3e3039_isConstantValidMatchCase(jule::Ptr<_1ab226037_Case>*);
inline jule::Bool _1ab3e3303_isUnreachableConditionalCase(jule::Ptr<_1ab2216d6_If>*);
inline jule::Bool _1ab3e35bc_isUnreachableMatchCase(jule::Ptr<_1ab226037_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1ab3ebc02_checkForBitShiftOpt(jule::Ptr<_1ab1c119c_OperandExprModel>*, jule::Ptr<_1ab1c119c_OperandExprModel>*);
inline jule::Bool _1ab3ec0ba_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1ab3ee8d6_PushOptLevel(jule::I64);
inline void _1abea59b9_detectEnabled(void);
inline void _1abece52b_Throw(jule::Str);
inline jule::U64 _1ac918eba_unix(void);
inline jule::Bool _1ac844489_isCopyOptimizable(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ac844852_isIterCopyOptimizable(jule::Ptr<_1ab2b5c0e_Data>*, jule::Ptr<_1ab2853a4_Var>*);
inline jule::Str _1ac859801_decomposeCommonEsq(jule::U8);
inline jule::Str _1ac859b0e_sbtoa(jule::U8);
inline void _1ac859dea_cstrBytes(_1a7c4c7ed_StrBuilder*, jule::Str);
inline void _1ac85a22a_cstrLit(_1a7c4c7ed_StrBuilder*, jule::Str);
inline void _1ac85a5c1_ftoa(_1a7c4c7ed_StrBuilder*, jule::F64, jule::I64);
inline void _1ac85a8ac_itoa(_1a7c4c7ed_StrBuilder*, jule::I64);
inline void _1ac85ab98_utoa(_1a7c4c7ed_StrBuilder*, jule::U64);
inline jule::Bool _1ac85b072_isForwarded(jule::Ptr<_1ab2212b8_Scope>*);
inline jule::Bool _1ac85b33b_isExprComesFromBind(jule::Ptr<_1ab2b5c0e_Data>*);
inline jule::Bool _1ac85b605_isAny(jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1ac92d5b7_iterFiles(jule::Ptr<_1ab2459c4_Package>*, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)>);
inline jule::Slice<jule::U8> _1ac92d8c5_concatAllParts(jule::Slice<jule::Ptr<_1ab182e72_Token>>);
inline jule::Bool _1ac92dc49_containsTraitMethod(jule::Ptr<_1ab1e26da_Trait>*, jule::Str*);
inline void _1ac92e079_pushMethodsFromInherit(jule::Ptr<_1ab1e26da_Trait>*, jule::Ptr<_1ab1e26da_Trait>*);
inline void _1ac92e365_pushMethodsFromInherits(jule::Ptr<_1ab1e26da_Trait>*, jule::Ptr<_1ab1e26da_Trait>*);
inline jule::Bool _1ac92e62e_isOpMethod(jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Bool _1ac92e8e8_isHeadDecl(jule::Ptr<_1ab1ce40d_Fn>*);
inline jule::Ptr<_1ab19798c_Directive> _1ac93dcae_findDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Str);
inline jule::Bool _1ac93e177_hasDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>*, jule::Str);
inline jule::Bool _1ac93e441_shouldInitialized(jule::Ptr<_1ab2e6525_TypeKind>*);
inline void _1a7e198ee_printErrorMessage(jule::Str);
inline void _1a7e19b74_help(jule::Slice<jule::Str>*);
inline void _1a7e19da5_version(jule::Slice<jule::Str>*);
inline void _1a7e1a0a3_toolDistos(void);
inline void _1a7e1a229_toolDistarch(void);
inline void _1a7e1a45a_tool(jule::Slice<jule::Str>*);
inline void _1a7e1a68b_julenv(jule::Slice<jule::Str>*);
inline void _1a7e1a999_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1a7e1ac63_processCommand(jule::Slice<jule::Str>*);
inline void _1a7e1add9_showInfo(void);
void entry_point(void);
inline void _1ac9aabe9_init(void);
inline jule::Ptr<_1d779d7c5_File> _1ac9aaec4_openOutput(jule::Str*);
inline void _1ac9ab14a_clearObjects(void);
inline void _1ac9ab47a_compileIr(jule::Str, jule::Str);
inline jule::Bool _1ac9ab744_isCppSourceFile(jule::Str);
inline void _1ac9ab975_pushCompCmdClang(_1a7c4c7ed_StrBuilder*);
inline void _1ac9abba6_pushCompCmdGcc(_1a7c4c7ed_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1ac9b20b8_genCompileCmd(jule::Str, jule::Ptr<_1abd36b36_IR>*);
inline jule::Str _1ac9b220b_getCompilePath(void);
inline void _1ac9b23d7_applyTargetIndependentOptimizations(jule::Ptr<_1abd36b36_IR>*);
inline void _1ac9b255d_checkCompilerFlag(void);
inline void _1ac9b278e_checkTargetArch(jule::Str);
inline void _1ac9b29c0_checkTargetOs(jule::Str);
inline void _1ac9b2c01_checkTargetFlag(jule::Str*);
inline void _1ac9b2e32_checkOptFlag(jule::Str*);
inline void _1ac9b32b7_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ac9b352b_checkFlags(jule::Slice<jule::Str>*);
inline void _1ac9b375c_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1abd36b36_IR> _1ac9b3a26_buildIr(jule::Slice<jule::Str>*);
inline void _1ac9b3c57_compileCommand(jule::Slice<jule::Str>*);


struct _1ab1e9538_comptimeRangeKindMptrData {
	void(*_1ab1e8c30_ready)(jule::Trait<_1ab1e9538_comptimeRangeKind>, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
	void(*_1ab1e914d_step)(jule::Trait<_1ab1e9538_comptimeRangeKind>, jule::I64, jule::Ptr<_1ab2853a4_Var>*, jule::Ptr<_1ab2853a4_Var>*);
	jule::I64(*_1ab1e93d4_len)(jule::Trait<_1ab1e9538_comptimeRangeKind>);
};

struct _1ab23eb88_ImporterMptrData {
	void(*_1ab23d967_SetModPath)(jule::Trait<_1ab23eb88_Importer>, jule::Str);
	jule::Str(*_1ab23dbed_GetModPath)(jule::Trait<_1ab23eb88_Importer>);
	jule::Str(*_1ab23e03e_ModById)(jule::Trait<_1ab23eb88_Importer>, jule::I64);
	jule::Ptr<_1ab242a9d_ImportInfo>(*_1ab23e380_GetImport)(jule::Trait<_1ab23eb88_Importer>, jule::Str);
	__jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log(*_1ab23e77b_ImportPackage)(jule::Trait<_1ab23eb88_Importer>, jule::Str, jule::Bool);
	void(*_1ab23ea34_Imported)(jule::Trait<_1ab23eb88_Importer>, jule::Ptr<_1ab242a9d_ImportInfo>);
};

struct _1ab2e606e_KindMptrData {
	jule::Str(*_1ab2e5ac9_Str)(jule::Trait<_1ab2e606e_Kind>);
	jule::Bool(*_1ab2e5e1a_Equal)(jule::Trait<_1ab2e606e_Kind>, jule::Ptr<_1ab2e6525_TypeKind>);
};

struct _1ab31605b_LookupMptrData {
	jule::Ptr<_1ab242a9d_ImportInfo>(*_1ab314345_SelectPackage)(jule::Trait<_1ab31605b_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>);
	jule::Ptr<_1ab2853a4_Var>(*_1ab314741_FindVar)(jule::Trait<_1ab31605b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab2e5733_TypeAlias>(*_1ab314b3c_FindTypeAlias)(jule::Trait<_1ab31605b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab1b9470_Struct>(*_1ab315038_FindStruct)(jule::Trait<_1ab31605b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab1ce40d_Fn>(*_1ab315434_FindFn)(jule::Trait<_1ab31605b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ab1e26da_Trait>(*_1ab315775_FindTrait)(jule::Trait<_1ab31605b_Lookup>, jule::Str);
	jule::Ptr<_1ab1e4de6_Enum>(*_1ab315ab6_FindEnum)(jule::Trait<_1ab31605b_Lookup>, jule::Str);
	jule::Ptr<_1ab1e6601_TypeEnum>(*_1ab315e07_FindTypeEnum)(jule::Trait<_1ab31605b_Lookup>, jule::Str);
};

struct _1ac9a397d_CommonFlagMptrData {
	jule::Str(*_1ac972a18_Name)(jule::Trait<_1ac9a397d_CommonFlag>);
	jule::I32(*_1ac972bb1_Short)(jule::Trait<_1ac9a397d_CommonFlag>);
	jule::Str(*_1ac9a36e7_What)(jule::Trait<_1ac9a397d_CommonFlag>);
	void(*_1ac9a383a_Reset)(jule::Trait<_1ac9a397d_CommonFlag>);
};



inline void _1ab1e8c30_ready_comptimeRangeKind_0(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::Ptr<_1ab2853a4_Var>* _2429_keyA, jule::Ptr<_1ab2853a4_Var>* _2446_keyB) {
	_1ab1eca25_ready(_self_.safe_ptr<_1ab1ebddc_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _1ab1e914d_step_comptimeRangeKind_0(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ab2853a4_Var>* _2536_keyA, jule::Ptr<_1ab2853a4_Var>* _2553_keyB) {
	_1ab1ece43_step(_self_.safe_ptr<_1ab1ebddc_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ab1e93d4_len_comptimeRangeKind_0(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_) {
	return _1ab1ed1c9_len(_self_.safe_ptr<_1ab1ebddc_comptimeStructFields>());
}
inline void _1ab1e8c30_ready_comptimeRangeKind_1(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::Ptr<_1ab2853a4_Var>* _2429_keyA, jule::Ptr<_1ab2853a4_Var>* _2446_keyB) {
	_1ab200cd1_ready(_self_.safe_ptr<_1ab200198_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _1ab1e914d_step_comptimeRangeKind_1(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ab2853a4_Var>* _2536_keyA, jule::Ptr<_1ab2853a4_Var>* _2553_keyB) {
	_1ab2011ee_step(_self_.safe_ptr<_1ab200198_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ab1e93d4_len_comptimeRangeKind_1(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_) {
	return _1ab201485_len(_self_.safe_ptr<_1ab200198_comptimeStatics>());
}
inline void _1ab1e8c30_ready_comptimeRangeKind_2(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::Ptr<_1ab2853a4_Var>* _2429_keyA, jule::Ptr<_1ab2853a4_Var>* _2446_keyB) {
	_1ab203773_ready(_self_.safe_ptr<_1ab202b3a_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _1ab1e914d_step_comptimeRangeKind_2(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ab2853a4_Var>* _2536_keyA, jule::Ptr<_1ab2853a4_Var>* _2553_keyB) {
	_1ab203b91_step(_self_.safe_ptr<_1ab202b3a_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ab1e93d4_len_comptimeRangeKind_2(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_) {
	return _1ab203e27_len(_self_.safe_ptr<_1ab202b3a_comptimeEnumFields>());
}
inline void _1ab1e8c30_ready_comptimeRangeKind_3(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::Ptr<_1ab2853a4_Var>* _2429_keyA, jule::Ptr<_1ab2853a4_Var>* _2446_keyB) {
	_1ab2070d4_ready(_self_.safe_ptr<_1ab20649b_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _1ab1e914d_step_comptimeRangeKind_3(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ab2853a4_Var>* _2536_keyA, jule::Ptr<_1ab2853a4_Var>* _2553_keyB) {
	_1ab207502_step(_self_.safe_ptr<_1ab20649b_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ab1e93d4_len_comptimeRangeKind_3(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_) {
	return _1ab207788_len(_self_.safe_ptr<_1ab20649b_comptimeParams>());
}
inline void _1ab1e8c30_ready_comptimeRangeKind_4(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::Ptr<_1ab2853a4_Var>* _2429_keyA, jule::Ptr<_1ab2853a4_Var>* _2446_keyB) {
	_1ab2086ce_ready(_self_.safe_ptr<_1ab207a96_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _1ab1e914d_step_comptimeRangeKind_4(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ab2853a4_Var>* _2536_keyA, jule::Ptr<_1ab2853a4_Var>* _2553_keyB) {
	_1ab208aec_step(_self_.safe_ptr<_1ab207a96_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ab1e93d4_len_comptimeRangeKind_4(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_) {
	return _1ab208d83_len(_self_.safe_ptr<_1ab207a96_comptimeTypeInfos>());
}
inline void _1ab1e8c30_ready_comptimeRangeKind_5(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::Ptr<_1ab2853a4_Var>* _2429_keyA, jule::Ptr<_1ab2853a4_Var>* _2446_keyB) {
	_1ab213b3a_ready(_self_.safe_ptr<_1ab213002_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _1ab1e914d_step_comptimeRangeKind_5(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1ab2853a4_Var>* _2536_keyA, jule::Ptr<_1ab2853a4_Var>* _2553_keyB) {
	_1ab214058_step(_self_.safe_ptr<_1ab213002_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1ab1e93d4_len_comptimeRangeKind_5(jule::Trait<_1ab1e9538_comptimeRangeKind> _self_) {
	return _1ab2142de_len(_self_.safe_ptr<_1ab213002_comptimeFiles>());
}
inline void _1ab23d967_SetModPath_Importer_0(jule::Trait<_1ab23eb88_Importer> _self_, jule::Str _1729_path) {
	_1abd34c44_SetModPath(_self_.safe_ptr<_1abd34172_JuleImporter>(), _1729_path);
}
inline jule::Str _1ab23dbed_GetModPath_Importer_0(jule::Trait<_1ab23eb88_Importer> _self_) {
	return _1abd34eca_GetModPath(_self_.safe_ptr<_1abd34172_JuleImporter>());
}
inline jule::Str _1ab23e03e_ModById_Importer_0(jule::Trait<_1ab23eb88_Importer> _self_, jule::I64 _2522_id) {
	return _1abd3531b_ModById(_self_.safe_ptr<_1abd34172_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab23e380_GetImport_Importer_0(jule::Trait<_1ab23eb88_Importer> _self_, jule::Str _3128_path) {
	return _1abd3565c_GetImport(_self_.safe_ptr<_1abd34172_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log _1ab23e77b_ImportPackage_Importer_0(jule::Trait<_1ab23eb88_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1abd35a58_ImportPackage(_self_.safe_ptr<_1abd34172_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1ab23ea34_Imported_Importer_0(jule::Trait<_1ab23eb88_Importer> _self_, jule::Ptr<_1ab242a9d_ImportInfo> _4131__0) {
	_1abd35d11_Imported(_self_.safe_ptr<_1abd34172_JuleImporter>(), _4131__0);
}
inline jule::Str _1ab2e5ac9_Str_Kind_0(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1bc572_Str(_self_.safe_ptr<_1ab1bc1ed_StructIns>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_0(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1bc8b3_Equal(_self_.data.as<_1ab1bc1ed_StructIns>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_1(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1d2653_Str(_self_.safe_ptr<_1ab1d2312_FnIns>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_1(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1d2994_Equal(_self_.data.as<_1ab1d2312_FnIns>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_2(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1e2aa3_Str(_self_.safe_ptr<_1ab1e26da_Trait>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_2(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1e2de4_Equal(_self_.data.as<_1ab1e26da_Trait>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_3(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1e526a_Str(_self_.safe_ptr<_1ab1e4de6_Enum>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_3(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1e55ab_Equal(_self_.data.as<_1ab1e4de6_Enum>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_4(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1e6942_Str(_self_.safe_ptr<_1ab1e6601_TypeEnum>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_4(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1e6c83_Equal(_self_.data.as<_1ab1e6601_TypeEnum>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_5(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1e9acc_Str(_self_.safe_ptr<_1ab1e9758_comptimeRange>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_5(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1e9e1d_Equal(_self_.data.as<_1ab1e9758_comptimeRange>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_6(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1ea5e4_Str(_self_.safe_ptr<_1ab1ea22b_comptimeStructField>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_6(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1ea935_Equal(_self_.data.as<_1ab1ea22b_comptimeStructField>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_7(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1ec261_Str(_self_.safe_ptr<_1ab1ebddc_comptimeStructFields>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_7(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1ec5a2_Equal(_self_.data.as<_1ab1ebddc_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_8(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab1ed85b_Str(_self_.safe_ptr<_1ab1ed4d7_comptimeStatic>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_8(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab1edb9c_Equal(_self_.data.as<_1ab1ed4d7_comptimeStatic>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_9(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab20051c_Str(_self_.safe_ptr<_1ab200198_comptimeStatics>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_9(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab20085d_Equal(_self_.data.as<_1ab200198_comptimeStatics>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_10(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab201c27_Str(_self_.safe_ptr<_1ab201793_comptimeEnumField>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_10(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab202068_Equal(_self_.data.as<_1ab201793_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_11(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab202eae_Str(_self_.safe_ptr<_1ab202b3a_comptimeEnumFields>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_11(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab203300_Equal(_self_.data.as<_1ab202b3a_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_12(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab2045a9_Str(_self_.safe_ptr<_1ab204235_comptimeParam>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_12(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab2048ea_Equal(_self_.data.as<_1ab204235_comptimeParam>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_13(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab206820_Str(_self_.safe_ptr<_1ab20649b_comptimeParams>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_13(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab206b61_Equal(_self_.data.as<_1ab20649b_comptimeParams>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_14(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab207e1a_Str(_self_.safe_ptr<_1ab207a96_comptimeTypeInfos>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_14(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab20825b_Equal(_self_.data.as<_1ab207a96_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_15(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab209515_Str(_self_.safe_ptr<_1ab209191_comptimeTypeInfo>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_15(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab209856_Equal(_self_.data.as<_1ab209191_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_16(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab210a27_Str(_self_.safe_ptr<_1ab2106a3_comptimeValue>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_16(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab210d68_Equal(_self_.data.as<_1ab2106a3_comptimeValue>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_17(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab213376_Str(_self_.safe_ptr<_1ab213002_comptimeFiles>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_17(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab2136b7_Equal(_self_.data.as<_1ab213002_comptimeFiles>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_18(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab214a92_Str(_self_.safe_ptr<_1ab2145ec_comptimeFile>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_18(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab214dd3_Equal(_self_.data.as<_1ab2145ec_comptimeFile>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_19(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab2e68dd_Str(_self_.safe_ptr<_1ab2e6525_TypeKind>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_19(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab2e6c2e_Equal(_self_.data.as<_1ab2e6525_TypeKind>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_20(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab2ee440_Str(_self_.safe_ptr<_1ab2ee0ee_Prim>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_20(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab2ee781_Equal(_self_.data.as<_1ab2ee0ee_Prim>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_21(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab302e9e_Str(_self_.safe_ptr<_1ab302b2a_Sptr>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_21(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab3032e0_Equal(_self_.data.as<_1ab302b2a_Sptr>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_22(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab303a82_Str(_self_.safe_ptr<_1ab3035ed_Slc>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_22(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab303dc3_Equal(_self_.data.as<_1ab3035ed_Slc>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_23(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab304566_Str(_self_.safe_ptr<_1ab3041e2_Tuple>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_23(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab3048a7_Equal(_self_.data.as<_1ab3041e2_Tuple>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_24(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab305116_Str(_self_.safe_ptr<_1ab304c92_Map>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_24(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab305457_Equal(_self_.data.as<_1ab304c92_Map>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_25(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab305c93_Str(_self_.safe_ptr<_1ab30591e_Arr>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_25(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab3060d4_Equal(_self_.data.as<_1ab30591e_Arr>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_26(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ab306766_Str(_self_.safe_ptr<_1ab3063e2_Ptr>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_26(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ab306aa7_Equal(_self_.data.as<_1ab3063e2_Ptr>(), _5621_other);
}
inline jule::Str _1ab2e5ac9_Str_Kind_27(jule::Trait<_1ab2e606e_Kind> _self_) {
	return _1ac930d6c_Str(_self_.safe_ptr<_1ac9309e8_customType>());
}
inline jule::Bool _1ab2e5e1a_Equal_Kind_27(jule::Trait<_1ab2e606e_Kind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _5621_other) {
	return _1ac9311ad_Equal(_self_.data.as<_1ac9309e8_customType>(), _5621_other);
}
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab314345_SelectPackage_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _932_selector) {
	return _1ab228a62_SelectPackage(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1ab2853a4_Var> _1ab314741_FindVar_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab228e5d_FindVar(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab314b3c_FindTypeAlias_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab229359_FindTypeAlias(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab1b9470_Struct> _1ab315038_FindStruct_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab229755_FindStruct(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab1ce40d_Fn> _1ab315434_FindFn_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab229b51_FindFn(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab1e26da_Trait> _1ab315775_FindTrait_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab229e92_FindTrait(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1ab1e4de6_Enum> _1ab315ab6_FindEnum_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab22a2d3_FindEnum(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab315e07_FindTypeEnum_Lookup_0(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab22a624_FindTypeEnum(_self_.safe_ptr<_1ab2285bc_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab314345_SelectPackage_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _932_selector) {
	return _1ab243087_SelectPackage(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1ab2853a4_Var> _1ab314741_FindVar_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab243483_FindVar(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab314b3c_FindTypeAlias_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab24387e_FindTypeAlias(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab1b9470_Struct> _1ab315038_FindStruct_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab243c7a_FindStruct(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab1ce40d_Fn> _1ab315434_FindFn_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab244176_FindFn(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab1e26da_Trait> _1ab315775_FindTrait_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab2444b7_FindTrait(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1ab1e4de6_Enum> _1ab315ab6_FindEnum_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab244808_FindEnum(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab315e07_FindTypeEnum_Lookup_1(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab244b49_FindTypeEnum(_self_.safe_ptr<_1ab242a9d_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab314345_SelectPackage_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _932_selector) {
	return _1ab245e69_SelectPackage(_self_.safe_ptr<_1ab2459c4_Package>(), _932_selector);
}
inline jule::Ptr<_1ab2853a4_Var> _1ab314741_FindVar_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab246365_FindVar(_self_.safe_ptr<_1ab2459c4_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab314b3c_FindTypeAlias_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab246761_FindTypeAlias(_self_.safe_ptr<_1ab2459c4_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab1b9470_Struct> _1ab315038_FindStruct_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab246b5c_FindStruct(_self_.safe_ptr<_1ab2459c4_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab1ce40d_Fn> _1ab315434_FindFn_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab247058_FindFn(_self_.safe_ptr<_1ab2459c4_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab1e26da_Trait> _1ab315775_FindTrait_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab247399_FindTrait(_self_.safe_ptr<_1ab2459c4_Package>(), _2928_ident);
}
inline jule::Ptr<_1ab1e4de6_Enum> _1ab315ab6_FindEnum_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab2476da_FindEnum(_self_.safe_ptr<_1ab2459c4_Package>(), _3327_ident);
}
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab315e07_FindTypeEnum_Lookup_2(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab247a2b_FindTypeEnum(_self_.safe_ptr<_1ab2459c4_Package>(), _3731_ident);
}
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab314345_SelectPackage_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _932_selector) {
	return _1ab26343c_SelectPackage(_self_.safe_ptr<_1ab262e97_Sema>(), _932_selector);
}
inline jule::Ptr<_1ab2853a4_Var> _1ab314741_FindVar_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab263838_FindVar(_self_.safe_ptr<_1ab262e97_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab314b3c_FindTypeAlias_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab263c34_FindTypeAlias(_self_.safe_ptr<_1ab262e97_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab1b9470_Struct> _1ab315038_FindStruct_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab264130_FindStruct(_self_.safe_ptr<_1ab262e97_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab1ce40d_Fn> _1ab315434_FindFn_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab26452b_FindFn(_self_.safe_ptr<_1ab262e97_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab1e26da_Trait> _1ab315775_FindTrait_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab26486c_FindTrait(_self_.safe_ptr<_1ab262e97_Sema>(), _2928_ident);
}
inline jule::Ptr<_1ab1e4de6_Enum> _1ab315ab6_FindEnum_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab264bad_FindEnum(_self_.safe_ptr<_1ab262e97_Sema>(), _3327_ident);
}
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab315e07_FindTypeEnum_Lookup_3(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab264eee_FindTypeEnum(_self_.safe_ptr<_1ab262e97_Sema>(), _3731_ident);
}
inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab314345_SelectPackage_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _932_selector) {
	return _1ab2b0d4c_SelectPackage(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1ab2853a4_Var> _1ab314741_FindVar_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab2b1248_FindVar(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab314b3c_FindTypeAlias_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab2b1644_FindTypeAlias(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1ab1b9470_Struct> _1ab315038_FindStruct_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab2b1a40_FindStruct(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ab1ce40d_Fn> _1ab315434_FindFn_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab2b1e3b_FindFn(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ab1e26da_Trait> _1ab315775_FindTrait_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _2928_ident) {
	return _1ab2b227c_FindTrait(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1ab1e4de6_Enum> _1ab315ab6_FindEnum_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3327_ident) {
	return _1ab2b25bd_FindEnum(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab315e07_FindTypeEnum_Lookup_4(jule::Trait<_1ab31605b_Lookup> _self_, jule::Str _3731_ident) {
	return _1ab2b290e_FindTypeEnum(_self_.safe_ptr<_1ab2b0863_SymbolTable>(), _3731_ident);
}
inline jule::Str _1ac972a18_Name_CommonFlag_0(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc104b0_Name(_self_.safe_ptr<_1bcc10669_Flag>());
}
inline jule::I32 _1ac972bb1_Short_CommonFlag_0(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc10bdb_Short(_self_.safe_ptr<_1bcc10669_Flag>());
}
inline jule::Str _1ac9a36e7_What_CommonFlag_0(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc10955_What(_self_.safe_ptr<_1bcc10669_Flag>());
}
inline void _1ac9a383a_Reset_CommonFlag_0(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	_1bcc10a98_Reset(_self_.safe_ptr<_1bcc10669_Flag>());
}
inline jule::Str _1ac972a18_Name_CommonFlag_1(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc13b12_Name(_self_.safe_ptr<_1bcc13eca_Flag>());
}
inline jule::I32 _1ac972bb1_Short_CommonFlag_1(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc14409_Short(_self_.safe_ptr<_1bcc13eca_Flag>());
}
inline jule::Str _1ac9a36e7_What_CommonFlag_1(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc13c55_What(_self_.safe_ptr<_1bcc13eca_Flag>());
}
inline void _1ac9a383a_Reset_CommonFlag_1(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	_1bcc142b6_Reset(_self_.safe_ptr<_1bcc13eca_Flag>());
}
inline jule::Str _1ac972a18_Name_CommonFlag_2(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc1730d_Name(_self_.safe_ptr<_1bcc176c6_Flag>());
}
inline jule::I32 _1ac972bb1_Short_CommonFlag_2(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc17b05_Short(_self_.safe_ptr<_1bcc176c6_Flag>());
}
inline jule::Str _1ac9a36e7_What_CommonFlag_2(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc17451_What(_self_.safe_ptr<_1bcc176c6_Flag>());
}
inline void _1ac9a383a_Reset_CommonFlag_2(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	_1bcc179b2_Reset(_self_.safe_ptr<_1bcc176c6_Flag>());
}
inline jule::Str _1ac972a18_Name_CommonFlag_3(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc1aa4d_Name(_self_.safe_ptr<_1bcc1ae16_Flag>());
}
inline jule::I32 _1ac972bb1_Short_CommonFlag_3(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc1b345_Short(_self_.safe_ptr<_1bcc1ae16_Flag>());
}
inline jule::Str _1ac9a36e7_What_CommonFlag_3(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc1ab91_What(_self_.safe_ptr<_1bcc1ae16_Flag>());
}
inline void _1ac9a383a_Reset_CommonFlag_3(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	_1bcc1b202_Reset(_self_.safe_ptr<_1bcc1ae16_Flag>());
}
inline jule::Str _1ac972a18_Name_CommonFlag_4(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc1e249_Name(_self_.safe_ptr<_1bcc1e612_Flag>());
}
inline jule::I32 _1ac972bb1_Short_CommonFlag_4(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc1ea41_Short(_self_.safe_ptr<_1bcc1e612_Flag>());
}
inline jule::Str _1ac9a36e7_What_CommonFlag_4(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	return _1bcc1e38c_What(_self_.safe_ptr<_1bcc1e612_Flag>());
}
inline void _1ac9a383a_Reset_CommonFlag_4(jule::Trait<_1ac9a397d_CommonFlag> _self_) {
	_1bcc1e8ed_Reset(_self_.safe_ptr<_1bcc1e612_Flag>());
}


static _1ab1e9538_comptimeRangeKindMptrData _1ab1e9538_comptimeRangeKind_mptr_data[] = {
	{
		._1ab1e8c30_ready=_1ab1e8c30_ready_comptimeRangeKind_0,
		._1ab1e914d_step=_1ab1e914d_step_comptimeRangeKind_0,
		._1ab1e93d4_len=_1ab1e93d4_len_comptimeRangeKind_0,
	},
	{
		._1ab1e8c30_ready=_1ab1e8c30_ready_comptimeRangeKind_1,
		._1ab1e914d_step=_1ab1e914d_step_comptimeRangeKind_1,
		._1ab1e93d4_len=_1ab1e93d4_len_comptimeRangeKind_1,
	},
	{
		._1ab1e8c30_ready=_1ab1e8c30_ready_comptimeRangeKind_2,
		._1ab1e914d_step=_1ab1e914d_step_comptimeRangeKind_2,
		._1ab1e93d4_len=_1ab1e93d4_len_comptimeRangeKind_2,
	},
	{
		._1ab1e8c30_ready=_1ab1e8c30_ready_comptimeRangeKind_3,
		._1ab1e914d_step=_1ab1e914d_step_comptimeRangeKind_3,
		._1ab1e93d4_len=_1ab1e93d4_len_comptimeRangeKind_3,
	},
	{
		._1ab1e8c30_ready=_1ab1e8c30_ready_comptimeRangeKind_4,
		._1ab1e914d_step=_1ab1e914d_step_comptimeRangeKind_4,
		._1ab1e93d4_len=_1ab1e93d4_len_comptimeRangeKind_4,
	},
	{
		._1ab1e8c30_ready=_1ab1e8c30_ready_comptimeRangeKind_5,
		._1ab1e914d_step=_1ab1e914d_step_comptimeRangeKind_5,
		._1ab1e93d4_len=_1ab1e93d4_len_comptimeRangeKind_5,
	},
};
static _1ab23eb88_ImporterMptrData _1ab23eb88_Importer_mptr_data[] = {
	{
		._1ab23d967_SetModPath=_1ab23d967_SetModPath_Importer_0,
		._1ab23dbed_GetModPath=_1ab23dbed_GetModPath_Importer_0,
		._1ab23e03e_ModById=_1ab23e03e_ModById_Importer_0,
		._1ab23e380_GetImport=_1ab23e380_GetImport_Importer_0,
		._1ab23e77b_ImportPackage=_1ab23e77b_ImportPackage_Importer_0,
		._1ab23ea34_Imported=_1ab23ea34_Imported_Importer_0,
	},
};
static _1ab2e606e_KindMptrData _1ab2e606e_Kind_mptr_data[] = {
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_0,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_0,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_1,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_1,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_2,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_2,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_3,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_3,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_4,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_4,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_5,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_5,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_6,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_6,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_7,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_7,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_8,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_8,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_9,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_9,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_10,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_10,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_11,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_11,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_12,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_12,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_13,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_13,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_14,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_14,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_15,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_15,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_16,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_16,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_17,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_17,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_18,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_18,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_19,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_19,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_20,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_20,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_21,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_21,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_22,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_22,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_23,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_23,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_24,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_24,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_25,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_25,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_26,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_26,
	},
	{
		._1ab2e5ac9_Str=_1ab2e5ac9_Str_Kind_27,
		._1ab2e5e1a_Equal=_1ab2e5e1a_Equal_Kind_27,
	},
};
static _1ab31605b_LookupMptrData _1ab31605b_Lookup_mptr_data[] = {
	{
		._1ab314345_SelectPackage=_1ab314345_SelectPackage_Lookup_0,
		._1ab314741_FindVar=_1ab314741_FindVar_Lookup_0,
		._1ab314b3c_FindTypeAlias=_1ab314b3c_FindTypeAlias_Lookup_0,
		._1ab315038_FindStruct=_1ab315038_FindStruct_Lookup_0,
		._1ab315434_FindFn=_1ab315434_FindFn_Lookup_0,
		._1ab315775_FindTrait=_1ab315775_FindTrait_Lookup_0,
		._1ab315ab6_FindEnum=_1ab315ab6_FindEnum_Lookup_0,
		._1ab315e07_FindTypeEnum=_1ab315e07_FindTypeEnum_Lookup_0,
	},
	{
		._1ab314345_SelectPackage=_1ab314345_SelectPackage_Lookup_1,
		._1ab314741_FindVar=_1ab314741_FindVar_Lookup_1,
		._1ab314b3c_FindTypeAlias=_1ab314b3c_FindTypeAlias_Lookup_1,
		._1ab315038_FindStruct=_1ab315038_FindStruct_Lookup_1,
		._1ab315434_FindFn=_1ab315434_FindFn_Lookup_1,
		._1ab315775_FindTrait=_1ab315775_FindTrait_Lookup_1,
		._1ab315ab6_FindEnum=_1ab315ab6_FindEnum_Lookup_1,
		._1ab315e07_FindTypeEnum=_1ab315e07_FindTypeEnum_Lookup_1,
	},
	{
		._1ab314345_SelectPackage=_1ab314345_SelectPackage_Lookup_2,
		._1ab314741_FindVar=_1ab314741_FindVar_Lookup_2,
		._1ab314b3c_FindTypeAlias=_1ab314b3c_FindTypeAlias_Lookup_2,
		._1ab315038_FindStruct=_1ab315038_FindStruct_Lookup_2,
		._1ab315434_FindFn=_1ab315434_FindFn_Lookup_2,
		._1ab315775_FindTrait=_1ab315775_FindTrait_Lookup_2,
		._1ab315ab6_FindEnum=_1ab315ab6_FindEnum_Lookup_2,
		._1ab315e07_FindTypeEnum=_1ab315e07_FindTypeEnum_Lookup_2,
	},
	{
		._1ab314345_SelectPackage=_1ab314345_SelectPackage_Lookup_3,
		._1ab314741_FindVar=_1ab314741_FindVar_Lookup_3,
		._1ab314b3c_FindTypeAlias=_1ab314b3c_FindTypeAlias_Lookup_3,
		._1ab315038_FindStruct=_1ab315038_FindStruct_Lookup_3,
		._1ab315434_FindFn=_1ab315434_FindFn_Lookup_3,
		._1ab315775_FindTrait=_1ab315775_FindTrait_Lookup_3,
		._1ab315ab6_FindEnum=_1ab315ab6_FindEnum_Lookup_3,
		._1ab315e07_FindTypeEnum=_1ab315e07_FindTypeEnum_Lookup_3,
	},
	{
		._1ab314345_SelectPackage=_1ab314345_SelectPackage_Lookup_4,
		._1ab314741_FindVar=_1ab314741_FindVar_Lookup_4,
		._1ab314b3c_FindTypeAlias=_1ab314b3c_FindTypeAlias_Lookup_4,
		._1ab315038_FindStruct=_1ab315038_FindStruct_Lookup_4,
		._1ab315434_FindFn=_1ab315434_FindFn_Lookup_4,
		._1ab315775_FindTrait=_1ab315775_FindTrait_Lookup_4,
		._1ab315ab6_FindEnum=_1ab315ab6_FindEnum_Lookup_4,
		._1ab315e07_FindTypeEnum=_1ab315e07_FindTypeEnum_Lookup_4,
	},
};
static _1ac9a397d_CommonFlagMptrData _1ac9a397d_CommonFlag_mptr_data[] = {
	{
		._1ac972a18_Name=_1ac972a18_Name_CommonFlag_0,
		._1ac972bb1_Short=_1ac972bb1_Short_CommonFlag_0,
		._1ac9a36e7_What=_1ac9a36e7_What_CommonFlag_0,
		._1ac9a383a_Reset=_1ac9a383a_Reset_CommonFlag_0,
	},
	{
		._1ac972a18_Name=_1ac972a18_Name_CommonFlag_1,
		._1ac972bb1_Short=_1ac972bb1_Short_CommonFlag_1,
		._1ac9a36e7_What=_1ac9a36e7_What_CommonFlag_1,
		._1ac9a383a_Reset=_1ac9a383a_Reset_CommonFlag_1,
	},
	{
		._1ac972a18_Name=_1ac972a18_Name_CommonFlag_2,
		._1ac972bb1_Short=_1ac972bb1_Short_CommonFlag_2,
		._1ac9a36e7_What=_1ac9a36e7_What_CommonFlag_2,
		._1ac9a383a_Reset=_1ac9a383a_Reset_CommonFlag_2,
	},
	{
		._1ac972a18_Name=_1ac972a18_Name_CommonFlag_3,
		._1ac972bb1_Short=_1ac972bb1_Short_CommonFlag_3,
		._1ac9a36e7_What=_1ac9a36e7_What_CommonFlag_3,
		._1ac9a383a_Reset=_1ac9a383a_Reset_CommonFlag_3,
	},
	{
		._1ac972a18_Name=_1ac972a18_Name_CommonFlag_4,
		._1ac972bb1_Short=_1ac972bb1_Short_CommonFlag_4,
		._1ac9a36e7_What=_1ac9a36e7_What_CommonFlag_4,
		._1ac9a383a_Reset=_1ac9a383a_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1d2312_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ab1d2312_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2853a4_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1ab2853a4_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1bc1ed_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1ab1bc1ed_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1e26da_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1ab1e26da_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b51d5_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ab1b51d5_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b008c_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1ab1b008c_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b4338_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ab1b4338_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1aa230_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ab1aa230_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b4a75_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ab1b4a75_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ab3da_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ab1ab3da_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b26dd_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ab1b26dd_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b3678_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ab1b3678_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8d04e26_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a8d04e26_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab198b7a_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ab198b7a_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab223b5b_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ab223b5b_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2212b8_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1ab2212b8_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c9ea8_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2b5c0e_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1ab2b5c0e_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1cb1a7_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ab1cb1a7_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c8c32_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c726e_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ab1c726e_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c7648_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ab1c7648_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c7deb_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c83a2_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c9ace_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ab1c9ace_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c9705_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1cb4a4_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ab1cb4a4_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c3677_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ab1c3677_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab221e01_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ab221e01_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2221ed_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ab2221ed_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ac85e_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ab1ac85e_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2226a4_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ab2226a4_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ad266_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ab1ad266_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab223100_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ab223100_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab223485_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ab223485_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab224035_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ab224035_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab22440e_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ab22440e_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2248b5_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ab2248b5_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c4007_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ab1c4007_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab224c8e_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ab224c8e_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2253ee_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ab2253ee_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab226631_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ab226631_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab22385e_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ab22385e_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2269b6_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1ab2269b6_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a8591_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1ab1a8591_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19c8a4_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1ab19c8a4_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ae850_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1ab1ae850_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ac034_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ab1ac034_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ada19_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ab1ada19_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a5b54_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ab1a5b54_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a602d_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ab1a602d_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a701d_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ab1a701d_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b0d5c_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ab1b0d5c_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a632a_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ab1a632a_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ad640_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ab1ad640_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ab7b4_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ab1ab7b4_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19d278_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ab19d278_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ce40d_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ab1ce40d_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1b9470_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ab1b9470_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2e5733_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ab2e5733_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1e4de6_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1ab1e4de6_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1e6601_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ab1e6601_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19a83b_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1ab19a83b_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1999a0_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1ab1999a0_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19a099_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1ab19a099_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19961a_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1ab19961a_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19b089_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1ab19b089_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab199c9c_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1ab199c9c_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19ed3a_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1ab19ed3a_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c3a51_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1ab1c3a51_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a20c3_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1ab1a20c3_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a36ce_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ab1a36ce_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19e2ce_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ab19e2ce_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19d575_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1ab19d575_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c6d95_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ab1c6d95_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ca9d1_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ab1ca9d1_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab2e6525_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ab2e6525_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c6a98_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ab1c6a98_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a09b7_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1ab1a09b7_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab198e77_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ab198e77_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19e961_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ab19e961_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab198570_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1ab198570_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a05dd_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ab1a05dd_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19931d_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1ab19931d_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c52e4_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ab1c52e4_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c2cc5_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1ab1c2cc5_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a3dc7_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1ab1a3dc7_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c2445_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ab1c2445_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c66be_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ab1c66be_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c5877_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ab1c5877_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c6218_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ab1c6218_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c4c61_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ab1c4c61_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c43d1_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ab1c43d1_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19cba1_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1ab19cba1_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19d94e_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1ab19d94e_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab19dd28_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1ab19dd28_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a4867_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ab1a4867_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a4ec7_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1ab1a4ec7_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a0214_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1ab1a0214_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a28ed_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1ab1a28ed_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a15cd_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1ab1a15cd_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a2da4_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ab1a2da4_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1a0e6d_BinaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ab1a0e6d_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c1a71_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ab1c1a71_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c1697_BinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ab1c1697_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c2742_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ab1c2742_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c7a22_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ab1c7a22_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c8858_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c902e_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ab1c902e_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c932b_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ab1c932b_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1c5a64_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ab1c5a64_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1ca6d4_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ab1ca6d4_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab1caccd_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ab1caccd_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3db20d_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ab3db20d_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3dbc36_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ab3dbc36_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3dc110_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ab3dc110_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3d9e32_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ab3d9e32_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3da350_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ab3da350_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3dab7a_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ab3dab7a_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3db50a_UnsafeBinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ab3db50a_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3da64c_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ab3da64c_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab3db807_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ab3db807_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type129_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type129_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=__jule_any_type129_eq, .to_str=__jule_any_type129_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type129 && __jule_any_type129_eq(any.data.alloc, (void*)&other); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1a7e19712_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1ac9aa48a_OutDir = jule::Str::lit("dist", 4);
jule::Str _1ac9aa776_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1ac9aaa40_Out = jule::Str();
jule::Str _1d725d780_Compiler = jule::Str();
jule::Str _1d725eb16_CompilerPath = jule::Str();
jule::Str _1d725ed69_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _1d7260100_Shadowing = false;
jule::Bool _1d72603b9_Transpilation = false;
jule::Bool _1d7260683_Test = false;
jule::Bool _1d726094c_RC = true;
jule::Bool _1d7260d26_Safety = true;
jule::Bool _1d72610e0_Production = false;
jule::Ptr<_1a7aeb36c_RangeTable> _1a7a86b32__L = jule::new_ptr<_1a7aeb36c_RangeTable>(_1a7aeb36c_RangeTable{._field_R16=jule::Slice<_1a7aea888_Range16>::make({_1a7aea888_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1a7aea888_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1a7aea888_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1a7aea888_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1a7aea888_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1a7aea888_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1a7aea888_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1a7aea888_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1a7aea888_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1a7aea888_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1a7aea888_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1a7aea888_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1a7aea888_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1a7aea888_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1a7aea888_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1a7aea888_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1a7aea888_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1a7aea888_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1a7aea888_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1a7aea888_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1a7aea888_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1a7aea888_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1a7aea888_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1a7aea888_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1a7aea888_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1a7aea888_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1a7aea888_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1a7aea888_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1a7aea888_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1a7aea888_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1a7aea888_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1a7aea888_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1a7aea888_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a7aea888_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1a7aea888_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1a7aea888_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1a7aea888_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1a7aea888_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1a7aea888_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a7aea888_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1a7aea888_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1a7aea888_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1a7aea888_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1a7aea888_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1a7aea888_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1a7aea888_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1a7aea888_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1a7aea888_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a7aeadb6_Range32>::make({_1a7aeadb6_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1a7aeadb6_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1a7aeadb6_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1a7aeadb6_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1a7aeadb6_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1a7aeadb6_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1a7aeadb6_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1a7aeadb6_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1a7aeadb6_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1a7aeadb6_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1a7aeadb6_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1a7aeadb6_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1a7aeadb6_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1a7aeadb6_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1a7aeadb6_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1a7aeadb6_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1a7aeadb6_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1a7aeadb6_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1a7aeadb6_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1a7aeadb6_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a7aeadb6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1a7aeadb6_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1a7aeadb6_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1a7aeadb6_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1a7aeb36c_RangeTable> _1a7a87b22__LU = jule::new_ptr<_1a7aeb36c_RangeTable>(_1a7aeb36c_RangeTable{._field_R16=jule::Slice<_1a7aea888_Range16>::make({_1a7aea888_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1a7aea888_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a7aea888_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a7aea888_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a7aea888_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1a7aea888_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1a7aea888_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1a7aea888_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1a7aea888_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1a7aea888_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1a7aea888_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1a7aea888_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a7aeadb6_Range32>::make({_1a7aeadb6_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1a7aeadb6_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a7aeadb6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a7aeadb6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a7aeadb6_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1a7aeadb6_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1a7ae4ba1__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1a7be592d_first = jule::Array<jule::U8,256>({});
jule::Array<_1a7be5eb1_acceptRange,16> _1a7be62be_acceptRanges = jule::Array<_1a7be5eb1_acceptRange,16>({_1a7be5eb1_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1a7be5eb1_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1a7be5eb1_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1a7be5eb1_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1a7be5eb1_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1a7c5edd7_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1a7ce6600_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1a7ce68b9_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1a7e1590b_PathStdlib = jule::Str();
jule::Str _1a7e15b5e_PathExec = jule::Str();
jule::Str _1a7e15e17_PathWd = jule::Str();
jule::Str _1a7e16225_PathApi = jule::Str();
jule::Str _1a7e164de_Os = jule::Str::lit("linux", 5);
jule::Str _1a7e167a8_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _1a8c860e9__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1a8c866b0__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1a8ccb9be_floatInfo _1a8ccbccc_f32info = _1a8ccb9be_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1a8ccb9be_floatInfo _1a8ccc041_f64info = _1a8ccb9be_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1a8cd4983_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1a8cd67dc_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1a8cd73ae_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1a8cd7700_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1a8cda967_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1a8cde73a_leftCheat> _1a8cdeb69_leftCheats = jule::Slice<_1a8cde73a_leftCheat>::make({_1a8cde73a_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1a8cde73a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1a8cde73a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1a8cde73a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1a8cde73a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1a8cde73a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1a8cde73a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1a8cde73a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1a8cde73a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1a8cde73a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1a8cde73a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1a8cde73a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1a8cde73a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1a8cde73a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1a8cde73a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1a8cde73a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1a8cde73a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1a8cde73a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1a8cde73a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1a8cde73a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1a8cde73a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1a8cde73a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1a8cde73a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1a8cde73a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1a8cde73a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1a8cde73a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1a8cde73a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1a8cde73a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1a8cde73a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1a8cde73a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1a8cde73a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1a8cde73a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1a8cde73a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1a8cde73a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1a8cde73a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1a8cde73a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1a8cde73a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1a8cde73a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1a8cde73a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1a8cde73a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1a8cde73a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1a8cde73a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1a8cde73a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1a8cde73a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1a8cde73a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1a8cde73a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1a8cde73a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1a8cde73a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1a8cde73a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1a8cde73a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1a8cde73a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1a8cde73a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1a8cde73a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1a8cde73a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1a8cde73a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1a8cde73a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1a8cde73a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1a8cde73a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1a8cde73a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1a8cde73a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1a8cde73a_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1a8ce5c80_BitSize = 0LL;
jule::Str _1a8ce608d_SysInt = jule::Str();
jule::Str _1a8ce6357_SysUint = jule::Str();
jule::Array<jule::I32,5> _1d747745a_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1d7477757_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1ab17bd39_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1ab17c433_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1ab17c730_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1ab18a85e_kindPair,28> _1ab18ac8d_keywords = jule::Array<_1ab18a85e_kindPair,28>({_1ab18a85e_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1ab18a85e_kindPair,46> _1ab18b0ce_basicOps = jule::Array<_1ab18a85e_kindPair,46>({_1ab18a85e_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1ab18a85e_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1ab2181b1_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c841a_primNil = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c8728_primVoid = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c89e2_primAny = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c8d00_primStr = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c90b9_primBool = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c9383_primUintptr = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c964c_primUint = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c9a26_primInt = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3c9ce0_primI8 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3ca0a9_primI16 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3ca373_primI32 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3ca63c_primI64 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3ca906_primU8 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3cabc0_primU16 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3cae89_primU32 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3cb40c_primU64 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3cb6c6_primF32 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1ab2e6525_TypeKind> _1ab3cb990_primF64 = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Bool _1ab3ec791_Copy = false;
jule::Bool _1ab3eca9e_Deadcode = false;
jule::Bool _1ab3ecd68_Append = false;
jule::Bool _1ab3ed176_Math = false;
jule::Bool _1ab3ed440_Access = false;
jule::Bool _1ab3ed709_Inline = false;
jule::Bool _1ab3ed9c3_Ptr = false;
jule::Bool _1ab3edd9c_Cond = false;
jule::Bool _1ab3ee166_Str = false;
jule::Bool _1ab3ee430_Slice = false;
jule::Bool _1ab3ee6e9_Assign = false;
jule::Bool _1abea36ba_exprEnabled = false;
jule::Bool _1abea39c8_scopeEnabled = false;
jule::Array<jule::U64,12> _1ac915bcb_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ac83c707_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1a7aeb36c_RangeTable> _1a7a95327_Upper = _1a7a87b22__LU;
jule::Ptr<_1a7aeb36c_RangeTable> _1a7a8dcc1_Letter = _1a7a86b32__L;



std::ostream &operator<<(std::ostream &_Stream, _1a7aea888_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7aeadb6_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7aeb36c_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7be5eb1_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1a7c4c7ed_StrBuilder static__1a7c4cb1c_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1a7c4c7ed_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1a7c57121_Write(_1a7c4c7ed_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1a7c573c9_WriteStr(_1a7c4c7ed_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_1d785a255_StrBytes(_3027_s));;
}



inline void _1a7c57682_WriteByte(_1a7c4c7ed_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1a7c57bc1_Str(_1a7c4c7ed_StrBuilder* _self_) {
	jule::Slice<jule::U8> _5013_buf = (*(_self_))._field_buf;;
	_1a7c57dbe_Clear(_self_);
	{ jule::Slice<jule::U8> &__jule_push_dest = _5013_buf; __jule_push_dest.push(0LLU); };
	(_5013_buf).mut_slice(0LL, (_5013_buf.len() - 1LL));;
	return _1d785a7d8_StrFromBytes(_5013_buf);;
}



inline void _1a7c57dbe_Clear(_1a7c4c7ed_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1a7c58155_Len(_1a7c4c7ed_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _1a7c58672_Buf(_1a7c4c7ed_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1a7c5892a_SetBuf(_1a7c4c7ed_StrBuilder* _self_, jule::Slice<jule::U8> _7936_buf) {
	(*(_self_))._field_buf=_7936_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7c4c7ed_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a7c596d9_index(_1a7c59255_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1a7c59992_append(_1a7c59255_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1a7c59c28_string(_1a7c59255_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1d785a51e_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7c59255_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d779b97c_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>> static__1a7c5dac8_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1d779b97c_DirEntry>> __jule_func_result;
	DIR* _1613_dir = _1d7b1e2b6_Opendir((&(_1520_path[0LL])));;
	if ((_1613_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>>(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2113_dirent = _1d7b1e580_Readdir(_1613_dir);;
			if ((_2113_dirent == nullptr)) {
				goto _iter_end_1ad779302;
			};
			jule::Str _2513_name = _1d7b0d87c_BytePtrToStr(((jule::U8*)((*(_2113_dirent)).d_name)));;
			jule::Ptr<_1d77a08b5_Status> _2617_stat = ({
				auto except = static__1d779c54e_Of(_1a7c5a971_Join(jule::Slice<jule::Str>::make({_1520_path,_2513_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>>(except.error);
				} jule::Ptr<_1d77a08b5_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_1d779b97c_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_1d779b97c_DirEntry>(_1d779b97c_DirEntry{._field_Name=_2513_name, ._field_Stat=_2617_stat})); };
		}
	_iter_next_1ad779302:;
	}
	_iter_end_1ad779302:;;
	_1d7b1e849_Closedir(_1613_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1a7c5dd09_Create(jule::Str _3922_path) {
	if ((_1d7b20251_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1a7c5e03a_Remove(jule::Str _5122_path) {
	if ((_1d7b2051a_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1d779bbe1_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d779d7c5_File>> static__1d7b52261_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _199_handle = _1d7b1d947_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_199_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d779d7c5_File>>(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_1d779d7c5_File>>(jule::Any(), static__1d779dbe3_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_199_handle))));;
}



inline jule::VoidExceptional static__1d7b52492_Remove(jule::Str _3022_path) {
	if ((_1d7b207d4_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d7b52926_Write(_1d779d7c5_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d7b26752_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _1d7b52c67_Read(_1d779d7c5_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d7b25e7c_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_1d779d7c5_File> static__1d779dbe3_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_1d779d7c5_File>(_1d779d7c5_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_1d779d7c5_File>> static__1d779deac_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_1d779d7c5_File>>(jule::Any(), ({
		auto except = static__1d7b52261_Open(_5522_path, static_cast<jule::I64>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_1d779d7c5_File>>(except.error);
		} jule::Ptr<_1d779d7c5_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d779e276_Read(jule::Str _6720_path) {
	jule::Ptr<_1d77a08b5_Status> _689_s = ({
		auto except = static__1d779c54e_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d77a08b5_Status>(nullptr);});
	});;
	if ((!(_1d77a1025_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_1d77a12ab_Size(_689_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_1d779d7c5_File> _7813_f = ({
		auto except = static__1d7b52261_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d779d7c5_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _1d779ed59_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_1d77a12ab_Size(_689_s.ptr())), static_cast<jule::I64>(_1d77a12ab_Size(_689_s.ptr())), 0);;
	jule::I64 _829_n = ({
		auto except = _1d7b52c67_Read(_7813_f.ptr(), _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8113_buff.slice(0LL, _829_n));;
}



inline jule::VoidExceptional static__1d779e61c_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_1d779d7c5_File> _9213_f = ({
		auto except = static__1d7b52261_Open(_9121_path, static_cast<jule::I64>(577LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1d779d7c5_File>(nullptr);});
	});;
	({
		auto except = _1d7b52926_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1d779ed59_Close(_9213_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d779ed59_Close(_1d779d7c5_File* _self_) {
	if ((_1d7b26323_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1d779d7c5_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1d77a08b5_Status>> static__1d779c54e_Of(jule::Str _1118_path) {
	if ((_1118_path).empty()) {
		return jule::Exceptional<jule::Ptr<_1d77a08b5_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1513_handle = (struct stat){};;
	jule::I64 _169_code = _1d7b1d518_Stat((&(_1118_path[0LL])), (&(_1513_handle)));;
	if ((_169_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d77a08b5_Status>>(jule::Any(_1d7b518ae_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_1d77a08b5_Status> _2013_stat = jule::new_ptr<_1d77a08b5_Status>();;
	(*(_2013_stat))._field_size=_1513_handle.st_size;
	if (((_1513_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1513_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1d77a08b5_Status>>(jule::Any(), _2013_stat);;
}



inline jule::Bool _1d77a0c8e_IsDir(_1d77a08b5_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1d77a1025_IsReg(_1d77a08b5_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1d77a12ab_Size(_1d77a08b5_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _1d77a08b5_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7e12e9c_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7d05a93_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8ccb9be_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8ccc4d6_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8cde73a_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8cd6b2d_set(_1a8ce0263_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1ab887ae9:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1ab887ce7:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1ab887c09:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1ab889799:;
					{
						goto _iter_next_1ab889106;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1ab889821:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ab889106;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1ab889898:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ab889106;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ab889106;
					}
				}
				_match_end_1ab889678:;
			};
			goto _iter_end_1ab889106;
		}
	_iter_next_1ab889106:;
	}
	_iter_end_1ab889106:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1a8cd20ce_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1ab89055d;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1ab89055d:;
		}
		_iter_end_1ab89055d:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a8cd6e6e_floatBits(_1a8ce0263_decimal* _self_, _1a8ccb9be_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1ab89eb88;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1ab89e21a;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1ab89eb88;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a8cd67dc_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1a8cd67dc_powtab[(*(_self_))._field_dp];
			};
			_1a8ce08c3_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1ab895eae:;
	}
	_iter_end_1ab895eae:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a8cd67dc_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1a8cd67dc_powtab[(-((*(_self_))._field_dp))];
			};
			_1a8ce08c3_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1ab897664:;
	}
	_iter_end_1ab897664:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1a8ce08c3_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1ab89e21a;
	};
	_1a8ce08c3_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_1a8ce1473_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1ab89e21a;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1ab89eb88;
	_julec_label_1ab89e21a:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1ab89eb88:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1a8ce061a_assign(_1a8ce0263_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1ab8a361a:;
	}
	_iter_end_1ab8a361a:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1ab8a4077:;
	}
	_iter_end_1ab8a4077:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1a8ce1ab1_trim(_self_);
}



inline void _1a8ce08c3_shift(_1a8ce0263_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1ab8a6035:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1ab8a60ac:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1a8ce260b_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1ab8a6c06:;
				}
				_iter_end_1ab8a6c06:;;
				_1a8ce260b_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1ab8a6134:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1a8ce1d9c_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1ab8a6b90:;
				}
				_iter_end_1ab8a6b90:;;
				_1a8ce1d9c_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1ab8a5e14:;
	};
}



inline void _1a8ce0b7b_roundDown(_1a8ce0263_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1a8ce1ab1_trim(_self_);
}



inline void _1a8ce0e34_roundUp(_1a8ce0263_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1ab8aa1d2:;
	}
	_iter_end_1ab8aa1d2:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1a8ce11dc_round(_1a8ce0263_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1a8ce2980_shouldRoundUp(_self_, _23224_nd)) {
		_1a8ce0e34_roundUp(_self_, _23224_nd);
	} else {
		_1a8ce0b7b_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1a8ce1473_roundedInteger(_1a8ce0263_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1ab8ad108:;
	}
	_iter_end_1ab8ad108:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1ab8ae4b1:;
	}
	_iter_end_1ab8ae4b1:;;
	if (_1a8ce2980_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8ce0263_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d04e26_Const> static__1a8d05366_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1a8d04e26_Const>(_1a8d04e26_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1a8d04e26_Const> static__1a8d05630_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1a8d04e26_Const>(_1a8d04e26_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a8d04e26_Const> static__1a8d058e9_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1a8d04e26_Const>(_1a8d04e26_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a8d04e26_Const> static__1a8d05bb3_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1a8d04e26_Const>(_1a8d04e26_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a8d04e26_Const> static__1a8d05e7c_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1a8d04e26_Const>(_1a8d04e26_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a8d04e26_Const> static__1a8d0618b_NewNil(void) {
	return jule::new_ptr<_1a8d04e26_Const>(_1a8d04e26_Const{._field_data=nullptr});;
}



inline jule::I64 _1a8d067eb_ReadI64(_1a8d04e26_Const* _self_) {
	if ((!(_1a8d08de7_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _1a8d06a82_ReadU64(_1a8d04e26_Const* _self_) {
	if ((!(_1a8d0917d_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _1a8d06d18_ReadBool(_1a8d04e26_Const* _self_) {
	if ((!(_1a8d09414_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1a8d0709e_ReadStr(_1a8d04e26_Const* _self_) {
	if ((!(_1a8d0969a_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1a8d07335_ReadF64(_1a8d04e26_Const* _self_) {
	if ((!(_1a8d09931_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _1a8d075bb_AsI64(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ad90b363:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ad90b594:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ad90b60a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1ad90b52d:;
			{
				return 0LL;;
			}
		}
		_match_end_1ad90ae12:;
	};
}



inline jule::U64 _1a8d07852_AsU64(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ad90c023:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ad90ce36:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ad90ce9c:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1ad90bd36:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ad90bcd1:;
	};
}



inline jule::F64 _1a8d07ad8_AsF64(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ad90ec07:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ad90d7a5:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ad90e6b8:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1ad90d5b8:;
			{
				return 0LL;;
			}
		}
		_match_end_1ad90d563:;
	};
}



inline void _1a8d07d91_SetI64(_1a8d04e26_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1a8d08149_SetU64(_1a8d04e26_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1a8d08402_SetBool(_1a8d04e26_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1a8d086aa_SetStr(_1a8d04e26_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1a8d08963_SetF64(_1a8d04e26_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1a8d08de7_IsI64(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ad913447:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad9136cd:;
			{
				return false;;
			}
		}
		_match_end_1ad913678:;
	};
}



inline jule::Bool _1a8d0917d_IsU64(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ad913d3d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad914091:;
			{
				return false;;
			}
		}
		_match_end_1ad91403b:;
	};
}



inline jule::Bool _1a8d09414_IsBool(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ad91479a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad9149ed:;
			{
				return false;;
			}
		}
		_match_end_1ad914998:;
	};
}



inline jule::Bool _1a8d0969a_IsStr(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ad915207:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad91545a:;
			{
				return false;;
			}
		}
		_match_end_1ad915405:;
	};
}



inline jule::Bool _1a8d09931_IsF64(_1a8d04e26_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ad915b64:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad915db7:;
			{
				return false;;
			}
		}
		_match_end_1ad915d62:;
	};
}



inline jule::Bool _1a8d09bb7_IsNil(_1a8d04e26_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a8d0a349_And(_1a8d04e26_Const* _self_, _1a8d04e26_Const _23818_x) {
	{
		
		if ((_1a8d09414_IsBool(_self_) && _1a8d09414_IsBool(&_23818_x))) {
			_case_begin_1ad91a1b8:;
			{
				return (_1a8d06d18_ReadBool(_self_) && _1a8d06d18_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1ad91a10d:;
			{
				return false;;
			}
		}
		_match_end_1ad919c23:;
	};
}



inline jule::Bool _1a8d0a68a_Or(_1a8d04e26_Const* _self_, _1a8d04e26_Const _24917_x) {
	{
		
		if ((_1a8d09414_IsBool(_self_) && _1a8d09414_IsBool(&_24917_x))) {
			_case_begin_1ad91b4c7:;
			{
				return (_1a8d06d18_ReadBool(_self_) || _1a8d06d18_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1ad91ab69:;
			{
				return false;;
			}
		}
		_match_end_1ad91aac0:;
	};
}



inline jule::Bool _1a8d0a9cb_Eq(_1a8d04e26_Const* _self_, _1a8d04e26_Const _26017_x) {
	{
		
		if (_1a8d09bb7_IsNil(_self_)) {
			_case_begin_1ad91c808:;
			{
				return _1a8d09bb7_IsNil(&_26017_x);;
			}
		}
		else if (_1a8d09414_IsBool(_self_)) {
			_case_begin_1ad91c880:;
			{
				return (_1a8d09414_IsBool(&_26017_x) && (_1a8d06d18_ReadBool(_self_) == _1a8d06d18_ReadBool(&_26017_x)));;
			}
		}
		else if (_1a8d0969a_IsStr(_self_)) {
			_case_begin_1ad91cb05:;
			{
				return (_1a8d0969a_IsStr(&_26017_x) && (_1a8d0709e_ReadStr(_self_) == _1a8d0709e_ReadStr(&_26017_x)));;
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad91cb6b:;
			{
				return (_1a8d067eb_ReadI64(_self_) == _1a8d075bb_AsI64(&_26017_x));;
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad91cbd2:;
			{
				return (_1a8d06a82_ReadU64(_self_) == _1a8d07852_AsU64(&_26017_x));;
			}
		}
		else if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad91cc48:;
			{
				return (_1a8d07335_ReadF64(_self_) == _1a8d07ad8_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1ad91be45:;
			{
				return false;;
			}
		}
		_match_end_1ad91bd9b:;
	};
}



inline jule::Bool _1a8d0ad1c_Lt(_1a8d04e26_Const* _self_, _1a8d04e26_Const _28717_x) {
	{
		
		if (_1a8d0969a_IsStr(_self_)) {
			_case_begin_1ad9214bb:;
			{
				return (_1a8d0969a_IsStr(&_28717_x) && (_1a8d0709e_ReadStr(_self_) < _1a8d0709e_ReadStr(&_28717_x)));;
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad921532:;
			{
				return (_1a8d067eb_ReadI64(_self_) < _1a8d075bb_AsI64(&_28717_x));;
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad9215a9:;
			{
				return (_1a8d06a82_ReadU64(_self_) < _1a8d07852_AsU64(&_28717_x));;
			}
		}
		else if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad9217da:;
			{
				return (_1a8d07335_ReadF64(_self_) < _1a8d07ad8_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1ad91d1dd:;
			{
				return false;;
			}
		}
		_match_end_1ad91d122:;
	};
}



inline jule::Bool _1a8d0b15d_LtEq(_1a8d04e26_Const* _self_, _1a8d04e26_Const _31019_x) {
	{
		
		if (_1a8d0969a_IsStr(_self_)) {
			_case_begin_1ad92417d:;
			{
				return (_1a8d0969a_IsStr(&_31019_x) && (_1a8d0709e_ReadStr(_self_) <= _1a8d0709e_ReadStr(&_31019_x)));;
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad9241e4:;
			{
				return (_1a8d067eb_ReadI64(_self_) <= _1a8d075bb_AsI64(&_31019_x));;
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad92426b:;
			{
				return (_1a8d06a82_ReadU64(_self_) <= _1a8d07852_AsU64(&_31019_x));;
			}
		}
		else if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad92449c:;
			{
				return (_1a8d07335_ReadF64(_self_) <= _1a8d07ad8_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1ad921d29:;
			{
				return false;;
			}
		}
		_match_end_1ad921c5d:;
	};
}



inline jule::Bool _1a8d0b49e_Gt(_1a8d04e26_Const* _self_, _1a8d04e26_Const _33317_x) {
	{
		
		if (_1a8d0969a_IsStr(_self_)) {
			_case_begin_1ad926d40:;
			{
				return (_1a8d0969a_IsStr(&_33317_x) && (_1a8d0709e_ReadStr(_self_) > _1a8d0709e_ReadStr(&_33317_x)));;
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad926da6:;
			{
				return (_1a8d067eb_ReadI64(_self_) > _1a8d075bb_AsI64(&_33317_x));;
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad926e2d:;
			{
				return (_1a8d06a82_ReadU64(_self_) > _1a8d07852_AsU64(&_33317_x));;
			}
		}
		else if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad92715e:;
			{
				return (_1a8d07335_ReadF64(_self_) > _1a8d07ad8_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1ad9249db:;
			{
				return false;;
			}
		}
		_match_end_1ad924920:;
	};
}



inline jule::Bool _1a8d0b7e0_GtEq(_1a8d04e26_Const* _self_, _1a8d04e26_Const _35619_x) {
	{
		
		if (_1a8d0969a_IsStr(_self_)) {
			_case_begin_1ad929a02:;
			{
				return (_1a8d0969a_IsStr(&_35619_x) && (_1a8d0709e_ReadStr(_self_) >= _1a8d0709e_ReadStr(&_35619_x)));;
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad929a68:;
			{
				return (_1a8d067eb_ReadI64(_self_) >= _1a8d075bb_AsI64(&_35619_x));;
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad929ae0:;
			{
				return (_1a8d06a82_ReadU64(_self_) >= _1a8d07852_AsU64(&_35619_x));;
			}
		}
		else if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad929d21:;
			{
				return (_1a8d07335_ReadF64(_self_) >= _1a8d07ad8_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1ad92769d:;
			{
				return false;;
			}
		}
		_match_end_1ad9275d2:;
	};
}



inline jule::Bool _1a8d0bb31_Add(_1a8d04e26_Const* _self_, _1a8d04e26_Const _37722_x) {
	{
		
		if (_1a8d0969a_IsStr(_self_)) {
			_case_begin_1ad92c6b4:;
			{
				if ((!(_1a8d0969a_IsStr(&_37722_x)))) {
					return false;;
				};
				_1a8d086aa_SetStr(_self_, (_1a8d0709e_ReadStr(_self_) + _1a8d0709e_ReadStr(&_37722_x)));
			}
		}
		else if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad92c72a:;
			{
				_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07335_ReadF64(_self_) + _1a8d07ad8_AsF64(&_37722_x))));
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad92c7a2:;
			{
				if (_1a8d09931_IsF64(&_37722_x)) {
					_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07ad8_AsF64(_self_) + _1a8d07335_ReadF64(&_37722_x))));
				} else {
					_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_1a8d067eb_ReadI64(_self_) + _1a8d075bb_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad92c9d3:;
			{
				if (_1a8d09931_IsF64(&_37722_x)) {
					_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07ad8_AsF64(_self_) + _1a8d07335_ReadF64(&_37722_x))));
				} else {
					_1a8d08149_SetU64(_self_, static_cast<jule::U64>((_1a8d06a82_ReadU64(_self_) + _1a8d07852_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1ad92a360:;
			{
				return false;;
			}
		}
		_match_end_1ad92a294:;
	};
	return true;;
}



inline jule::Bool _1a8d0be72_Sub(_1a8d04e26_Const* _self_, _1a8d04e26_Const _40622_x) {
	{
		
		if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad9325dc:;
			{
				_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07335_ReadF64(_self_) - _1a8d07ad8_AsF64(&_40622_x))));
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad932664:;
			{
				if (_1a8d09931_IsF64(&_40622_x)) {
					_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07ad8_AsF64(_self_) - _1a8d07335_ReadF64(&_40622_x))));
				} else {
					_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_1a8d067eb_ReadI64(_self_) - _1a8d075bb_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad9326db:;
			{
				if (_1a8d09931_IsF64(&_40622_x)) {
					_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07ad8_AsF64(_self_) - _1a8d07335_ReadF64(&_40622_x))));
				} else {
					_1a8d08149_SetU64(_self_, static_cast<jule::U64>((_1a8d06a82_ReadU64(_self_) - _1a8d07852_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1ad931db1:;
			{
				return false;;
			}
		}
		_match_end_1ad931ce5:;
	};
	return true;;
}



inline jule::Bool _1a8d0c2b3_Mul(_1a8d04e26_Const* _self_, _1a8d04e26_Const _43022_x) {
	{
		
		if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad93668a:;
			{
				_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07335_ReadF64(_self_) * _1a8d07ad8_AsF64(&_43022_x))));
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad936712:;
			{
				if (_1a8d09931_IsF64(&_43022_x)) {
					_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07ad8_AsF64(_self_) * _1a8d07335_ReadF64(&_43022_x))));
				} else {
					_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_1a8d067eb_ReadI64(_self_) * _1a8d075bb_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad936789:;
			{
				if (_1a8d09931_IsF64(&_43022_x)) {
					_1a8d08963_SetF64(_self_, static_cast<jule::F64>((_1a8d07ad8_AsF64(_self_) * _1a8d07335_ReadF64(&_43022_x))));
				} else {
					_1a8d08149_SetU64(_self_, static_cast<jule::U64>((_1a8d06a82_ReadU64(_self_) * _1a8d07852_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1ad935d1b:;
			{
				return false;;
			}
		}
		_match_end_1ad935c50:;
	};
	return true;;
}



inline jule::Bool _1a8d0c604_Div(_1a8d04e26_Const* _self_, _1a8d04e26_Const _45822_x) {
	{
		
		if (_1a8d09931_IsF64(_self_)) {
			_case_begin_1ad93a738:;
			{
				jule::F64 _46113_l = _1a8d07ad8_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1a8d08963_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a8d07335_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad93a7b0:;
			{
				jule::F64 _46713_l = _1a8d07ad8_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1a8d08963_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a8d07ad8_AsF64(_self_),_46713_l)));
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad93a837:;
			{
				jule::F64 _47313_l = _1a8d07ad8_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1a8d08963_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a8d07ad8_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1ad939db9:;
			{
				return false;;
			}
		}
		_match_end_1ad939ced:;
	};
	return true;;
}



inline jule::Bool _1a8d0c945_Mod(_1a8d04e26_Const* _self_, _1a8d04e26_Const _48722_x) {
	{
		
		if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad93e918:;
			{
				jule::I64 _49013_l = _1a8d075bb_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1a8d07d91_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1a8d067eb_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad93e990:;
			{
				jule::U64 _49613_l = _1a8d07852_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1a8d08149_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1a8d06a82_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1ad93e85d:;
			{
				return false;;
			}
		}
		_match_end_1ad93d52c:;
	};
	return true;;
}



inline jule::Bool _1a8d0cc86_BitwiseAnd(_1a8d04e26_Const* _self_, _1a8d04e26_Const _50929_x) {
	{
		
		if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad94283e:;
			{
				_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_1a8d067eb_ReadI64(_self_) & _1a8d075bb_AsI64(&_50929_x))));
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad9428b6:;
			{
				_1a8d08149_SetU64(_self_, static_cast<jule::U64>((_1a8d06a82_ReadU64(_self_) & _1a8d07852_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1ad942784:;
			{
				return false;;
			}
		}
		_match_end_1ad941453:;
	};
	return true;;
}



inline jule::Bool _1a8d0d0c7_BitwiseOr(_1a8d04e26_Const* _self_, _1a8d04e26_Const _52328_x) {
	{
		
		if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad9446ba:;
			{
				_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_1a8d067eb_ReadI64(_self_) | _1a8d075bb_AsI64(&_52328_x))));
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad944742:;
			{
				_1a8d08149_SetU64(_self_, static_cast<jule::U64>((_1a8d06a82_ReadU64(_self_) | _1a8d07852_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1ad9445ee:;
			{
				return false;;
			}
		}
		_match_end_1ad944533:;
	};
	return true;;
}



inline jule::Bool _1a8d0d418_Xor(_1a8d04e26_Const* _self_, _1a8d04e26_Const _53722_x) {
	{
		
		if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad946546:;
			{
				_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_1a8d067eb_ReadI64(_self_) ^ _1a8d075bb_AsI64(&_53722_x))));
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad9465bd:;
			{
				_1a8d08149_SetU64(_self_, static_cast<jule::U64>((_1a8d06a82_ReadU64(_self_) ^ _1a8d07852_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1ad94647a:;
			{
				return false;;
			}
		}
		_match_end_1ad9463ae:;
	};
	return true;;
}



inline jule::Bool _1a8d0d759_Lshift(_1a8d04e26_Const* _self_, _1a8d04e26_Const _55125_x) {
	{
		
		if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad9483c2:;
			{
				jule::I64 _55413_l = _1a8d075bb_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1a8d07852_AsU64(&_55125_x);;
					_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_1a8d0de41_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad948449:;
			{
				_1a8d0de41_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1ad948306:;
			{
				return false;;
			}
		}
		_match_end_1ad94823a:;
	};
	return true;;
}



inline jule::Bool _1a8d0da9a_Rshift(_1a8d04e26_Const* _self_, _1a8d04e26_Const _57125_x) {
	{
		
		if (_1a8d08de7_IsI64(_self_)) {
			_case_begin_1ad94a99b:;
			{
				jule::I64 _57413_l = _1a8d075bb_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1a8d07852_AsU64(&_57125_x);;
					_1a8d07d91_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_1a8d0e271_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1a8d0917d_IsU64(_self_)) {
			_case_begin_1ad94aa23:;
			{
				_1a8d0e271_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1ad94a8d0:;
			{
				return false;;
			}
		}
		_match_end_1ad94a814:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8d04e26_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ab1832e6_Prec(_1ab182e72_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad9a5110:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad9a5297:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ad9a530d:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ad9a5385:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ad9a540c:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ad9a498e:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ad9a48e5:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab182e72_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1ab188b26_Fill(_1ab18873b_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1ab188dac_Dir(_1ab18873b_File* _self_) {
	return _1a7c5b664_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ab189143_Name(_1ab18873b_File* _self_) {
	return _1a7c5b2bd_Base((*(_self_))._field_Path);;
}



inline jule::Str _1ab18971a_GetRow(_1ab18873b_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1ad9aa588;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_1ad9aa588:;
	}
	_iter_end_1ad9aa588:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab18873b_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab18a85e_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ab192008_pushErr(_1ab191975_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1a7d05a93_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab18b62e_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1ab192569_lex(_1ab191975_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1ab19478b_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1ab182e72_Token> _46217_token = _1ab195c76_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1ab182e72_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1ad9d941e:;
	}
	_iter_end_1ad9d941e:;;
}



inline jule::Str _1ab1928aa_id(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1ab1866a1_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1ab186c34_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1ab1866a1_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1baac8006:;
	}
	_iter_end_1baac8006:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1ab192b41_resume(_1ab191975_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1ab18622d_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1baacc12b:;
						{
							_1ab19478b_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1baacc192:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1baacb9ee:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1baacba87:;
				};
				goto _iter_next_1baac8446;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1baacab63;
					};
				}
			_iter_next_1baacab63:;
			}
			_iter_end_1baacab63:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1baac8446:;
	}
	_iter_end_1baac8446:;;
	return nullptr;;
}



inline void _1ab192de9_lexLineComment(_1ab191975_lex* _self_, jule::Ptr<_1ab182e72_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1baacebab;
			};
		}
	_iter_next_1baacebab:;
	}
	_iter_end_1baacebab:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1ab1931a2_lexRangeComment(_1ab191975_lex* _self_, jule::Ptr<_1ab182e72_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1baad31ed;
			};
			if ((_54313_r == '\n')) {
				_1ab19478b_newLine(_self_);
				goto _iter_next_1baad31ed;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1baad31ed:;
	}
	_iter_end_1baad31ed:;;
	_1ab192008_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1ab1934e3_num(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1ab19026a_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1baada9b9;
	};
	__jule_func_result=_1ab18eea1_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1baada9b9;
	};
	__jule_func_result=_1ab18d7b8_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1baada9b9;
	};
	__jule_func_result=_1ab18d4ee_commonNum(_56723_txt);
	_julec_label_1baada9b9:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1ab193834_escapeSeq(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1baadc966;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1baadc999:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1baadca10:;
			{
				_59013_seq=_1ab1908a8_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1baadca87:;
			{
				_59013_seq=_1ab190b72_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1baadc6e1:;
			{
				_59013_seq=_1ab190e3b_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1baadc070:;
			{
				_59013_seq=_1ab191205_byteEscape(_58929_txt);
			}
		}
		_match_end_1baadc5d1:;
	};
	_julec_label_1baadc966:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1ab192008_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1ab193c30_getRune(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1ab193834_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1ab194071_lexRune(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1a7c4c7ed_StrBuilder _62913_run = static__1a7c4cb1c_New(8LL);;
	_1a7c57682_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1baae3c36;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1ab192008_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1ab19478b_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1ab193c30_getRune(_self_, &(_64513_part), false);;
			_1a7c573c9_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_1a7be8942_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1baae3c36;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1baae3c36:;
	}
	_iter_end_1baae3c36:;;
	if ((_63213_n == 0LL)) {
		_1ab192008_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1ab192008_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1a7c57bc1_Str(&_62913_run);;
}



inline jule::Str _1ab194307_lexStr(_1ab191975_lex* _self_) {
	_1a7c4c7ed_StrBuilder _66913_s = static__1a7c4cb1c_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_1a7c57682_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1baae8db2;
			};
			if ((_67713_ch == '\n')) {
				_1ab19478b_newLine(_self_);
				if ((!(_6729_raw))) {
					_1ab192008_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1ab193c30_getRune(_self_, &(_68917_part), _6729_raw);;
			_1a7c573c9_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_1a7be8942_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1baae8db2;
			};
		}
	_iter_next_1baae8db2:;
	}
	_iter_end_1baae8db2:;;
	return _1a7c57bc1_Str(&_66913_s);;
}



inline void _1ab19478b_newLine(_1ab191975_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1ab194cec_isOp(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1ab182e72_Token>* _71066_t) {
	if ((!(_1ab18b9e7_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1ab1951e8_lexBasicOps(_1ab191975_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1ab182e72_Token>* _72048_tok) {
	{
		auto expr = &(_1ab18b0ce_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab00d97:;
		if (it != expr_end) {
			_1ab18a85e_kindPair *_72116_pair = it;
			{
				if (_1ab194cec_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1bab00d97:;
			++it;
			goto _iter_begin_1bab00d97;
		}
		_iter_end_1bab00d97:;
	};
	return false;;
}



inline jule::Bool _1ab1955e4_lexId(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1ab182e72_Token>* _72943_t) {
	jule::Str _7309_lex = _1ab1928aa_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1ab1959e0_lexNum(_1ab191975_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1ab182e72_Token>* _73944_t) {
	jule::Str _7409_lex = _1ab1934e3_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1ab182e72_Token> _1ab195c76_token(_1ab191975_lex* _self_) {
	jule::Ptr<_1ab182e72_Token> _75113_t = jule::new_ptr<_1ab182e72_Token>(_1ab182e72_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1ab192b41_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1ab1959e0_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1ba990d9c:;
			{
				goto _match_end_1ba9885e2;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1ba990e13:;
			{
				(*(_75113_t))._field_Kind=_1ab194071_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1ba990e79:;
			{
				(*(_75113_t))._field_Kind=_1ab194307_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1ab18b9e7_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1ba99051c:;
			{
				_1ab192de9_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1ab18b9e7_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1ba990583:;
			{
				_1ab1931a2_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1ab1951e8_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1ba99060a:;
			{
				goto _match_end_1ba9885e2;
			}
		}
		else if (_1ab1955e4_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1ba98bd10:;
			{
				{
					auto expr = &(_1ab18ac8d_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ba994455:;
					if (it != expr_end) {
						_1ab18a85e_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1ba994455;
							};
						}
						_iter_next_1ba994455:;
						++it;
						goto _iter_begin_1ba994455;
					}
					_iter_end_1ba994455:;
				};
			}
		}
		else {
			_case_begin_1ba98bc88:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1ab192008_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1ba9885e2:;
	};
	(*(_self_))._field_column+=_1a7be8942_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab191975_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1965b2_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19756e_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19798c_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab198570_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab198b7a_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab198e77_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19931d_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19961a_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1999a0_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab199c9c_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab19a40c_IsUnsafe(_1ab19a099_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19a099_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab19ab9e_AutoSized(_1ab19a83b_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19a83b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19b089_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19b463_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19c8a4_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19cba1_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19d278_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19d575_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19d94e_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19dd28_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19e2ce_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19e961_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab19ed3a_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a0214_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a05dd_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a09b7_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a0e6d_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab1a1952_Unhandled(_1ab1a15cd_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1ab1a1bd8_Ignored(_1ab1a15cd_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a15cd_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a20c3_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a28ed_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a2da4_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a36ce_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a3dc7_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a4867_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a4ec7_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a52c4_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a577a_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a5b54_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a602d_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a632a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a698a_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a701d_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a7e31_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a8591_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab1a9152_IsSelf(_1ab1a8ccd_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a8ccd_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab1aa593_IsAnon(_1ab1aa230_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1aa230_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ab3da_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ab7b4_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab1ac397_IsInf(_1ab1ac034_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ac034_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab1acbc2_IsWhileNext(_1ab1ac85e_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ac85e_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ad266_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ad640_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ada19_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1adec0_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ae399_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ae850_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b008c_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b0543_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b0d5c_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b1676_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b1b2c_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b26dd_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b3018_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b3678_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b3942_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b4338_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b4a75_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b51d5_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1bb64d_FieldIns> _1ab1b6901_instance(jule::Ptr<_1ab1b657c_Field> _self_) {
	return jule::new_ptr<_1ab1bb64d_FieldIns>(_1ab1bb64d_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b657c_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b855c_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab1b98d2_instance(jule::Ptr<_1ab1b9470_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _10013_ins = jule::new_ptr<_1ab1bc1ed_StructIns>(_1ab1bc1ed_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1ab1bb64d_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1ab2853a4_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1ab1d57cc_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badeb3d4:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1ab2853a4_Var>((*(_10721_s)))); };
			}
			_iter_next_1badeb3d4:;
			++it;
			goto _iter_begin_1badeb3d4;
		}
		_iter_end_1badeb3d4:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baded02e:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b657c_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1bb64d_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1ab1b6901_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1ab2e7da6_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1baded02e:;
			++it;
			goto _iter_begin_1baded02e;
		}
		_iter_end_1baded02e:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bae01296:;
			if (it != expr_end) {
				jule::Ptr<_1ab1ce40d_Fn> _12225_f = *it;
				{
					jule::Ptr<_1ab1ce40d_Fn> _12321_fins = jule::new_ptr<_1ab1ce40d_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1bae01296:;
				++it;
				goto _iter_begin_1bae01296;
			}
			_iter_end_1bae01296:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab1b9be0_appendInstance(_1ab1b9470_Struct* _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae03078:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bc1ed_StructIns> _14021_ains = *it;
			{
				if (_1ab1bcd69_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1bae03078:;
			++it;
			goto _iter_begin_1bae03078;
		}
		_iter_end_1bae03078:;
	};
	{ jule::Slice<jule::Ptr<_1ab1bc1ed_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab1ba0db_FindMethod(_1ab1b9470_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae0507a:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1bae0507a:;
			++it;
			goto _iter_begin_1bae0507a;
		}
		_iter_end_1bae0507a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab1ba42c_FindStatic(_1ab1b9470_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae0639a:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1bae0639a:;
			++it;
			goto _iter_begin_1bae0639a;
		}
		_iter_end_1bae0639a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1b657c_Field> _1ab1ba76d_FindField(_1ab1b9470_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae06a71:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b657c_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1bae06a71:;
			++it;
			goto _iter_begin_1bae06a71;
		}
		_iter_end_1bae06a71:;
	};
	return nullptr;;
}



inline jule::Bool _1ab1baaae_IsImplements(_1ab1b9470_Struct* _self_, jule::Ptr<_1ab1e26da_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae07a72:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1bae07a72:;
			++it;
			goto _iter_begin_1bae07a72;
		}
		_iter_end_1bae07a72:;
	};
	return false;;
}



inline jule::Bool _1ab1bae00_IsUses(_1ab1b9470_Struct* _self_, jule::Ptr<_1ab1b9470_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae091c2:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1bae099b9:;
				}
				_iter_end_1bae099b9:;;
			}
			_iter_next_1bae091c2:;
			++it;
			goto _iter_begin_1bae091c2;
		}
		_iter_end_1bae091c2:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1b9470_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1bb64d_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c119c_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c1697_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c1a71_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c209e_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c2445_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c2742_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c2cc5_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c3677_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c3a51_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c4007_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c43d1_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c47aa_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c4c61_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c52e4_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c5877_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c6218_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c66be_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c6a98_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c6d95_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c726e_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c7648_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c7a22_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c7deb_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c83a2_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c8858_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c8c32_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c902e_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c932b_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c9705_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c9ace_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c9ea8_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1c5a64_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ca6d4_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ca9d1_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1caccd_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1cb1a7_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1cb4a4_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1cc1a8_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1d1366_ParamIns> _1ab1cccbe_instance(jule::Ptr<_1ab1cc939_Param> _self_) {
	return jule::new_ptr<_1ab1d1366_ParamIns>(_1ab1d1366_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1ab1cd055_IsSelf(_1ab1cc939_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ab1cd2db_IsRef(_1ab1cc939_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1cc939_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab1ce881_IsVoid(_1ab1ce40d_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ab1ceb17_IsMethod(_1ab1ce40d_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1ab1ced9d_IsEntryPoint(_1ab1ce40d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ab1d0134_IsInit(_1ab1ce40d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ab1d03ba_IsAnon(_1ab1ce40d_Fn* _self_) {
	return _1ab185b9a_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ab1d0651_AnyVar(_1ab1ce40d_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab1d08d7_instanceForce(jule::Ptr<_1ab1ce40d_Fn> _self_) {
	jule::Ptr<_1ab1d2312_FnIns> _10113_ins = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ab2212b8_Scope>(), ._field_Refers=static__1ab1d57cc_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae2134e:;
		if (it != expr_end) {
			jule::Ptr<_1ab1cc939_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1ab1cccbe_instance(_10821_p)); };
			}
			_iter_next_1bae2134e:;
			++it;
			goto _iter_begin_1bae2134e;
		}
		_iter_end_1bae2134e:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab1d0b6d_instance(jule::Ptr<_1ab1ce40d_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1ab1d08d7_instanceForce(_self_);;
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab1d0e7b_appendInstance(_1ab1ce40d_Fn* _self_, jule::Ptr<_1ab1d2312_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae26552:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _14521_ains = *it;
			{
				if (_1ab1d3d6e_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1bae26552:;
			++it;
			goto _iter_begin_1bae26552;
		}
		_iter_end_1bae26552:;
	};
	{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ce40d_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab1d16c9_Str(_1ab1d1366_ParamIns* _self_) {
	_1a7c4c7ed_StrBuilder _16713_s = static__1a7c4cb1c_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1a7c573c9_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_1a7c573c9_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1ab1cd055_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1ab1cd2db_IsRef((*(_self_))._field_Decl.ptr())) {
			_1a7c57682_WriteByte(&_16713_s, '&');
		};
		_1a7c573c9_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _1a7c57bc1_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_1a7c573c9_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1a7c573c9_WriteStr(&_16713_s, _1ab2e68dd_Str((*(_self_))._field_Kind.ptr()));
	};
	return _1a7c57bc1_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1d1366_ParamIns _Src) {
	_Stream << _1ab1d16c9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab1d2653_Str(_1ab1d2312_FnIns* _self_) {
	;
	return _1ab1d41b0_GetKindStr(_self_, false);;
}



inline jule::Bool _1ab1d2994_Equal(jule::Ptr<_1ab1d2312_FnIns> _self_, jule::Ptr<_1ab2e6525_TypeKind> _21821_other) {
	jule::Ptr<_1ab1d2312_FnIns> _2199_f = _1ab2e9e63_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1ab1d2e39_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1ab1d2e39_EqualFn(jule::Ptr<_1ab1d2312_FnIns> _self_, jule::Ptr<_1ab1d2312_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1ab1ce881_IsVoid((*(_self_))._field_Decl.ptr()) != _1ab1ce881_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1ab1d1366_ParamIns>,jule::Ptr<_1ab1d1366_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1ab1d1366_ParamIns>,jule::Ptr<_1ab1d1366_ParamIns>)>([=](jule::Ptr<_1ab1d1366_ParamIns> _23927_p1, jule::Ptr<_1ab1d1366_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1ab1cd055_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1ab1cd055_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1ab1cd2db_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1ab1cd2db_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1ab2e6c2e_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1bae37c5b:;
	}
	_iter_end_1bae37c5b:;;
	if ((!(_1ab1ce881_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1ab2e6c2e_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ab1d327a_equalTrait(jule::Ptr<_1ab1d2312_FnIns> _self_, jule::Ptr<_1ab1d2312_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1ab1d2e39_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _1ab1d3511_Types(_1ab1d2312_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1bae3d426:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab2ea99c_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1bae3d48c:;
			{
				return jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1bae3d3b0:;
			{
				return (*(_1ab2ea99c_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1bae3d2e4:;
	};
}



inline jule::Bool _1ab1d3797_IsBuiltin(_1ab1d2312_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ab1d3a2d_IsAnon(_1ab1d2312_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ab1d03ba_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1ab1d3d6e_Same(_1ab1d2312_FnIns* _self_, jule::Ptr<_1ab1d2312_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae41209:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1ab2e4b3e_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1ab2e4b3e_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1ab2e6c2e_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bae41209:;
			++it;
			_33613_i++;
			goto _iter_begin_1bae41209;
		}
		_iter_end_1bae41209:;
	};
	return true;;
}



inline jule::Str _1ab1d41b0_GetKindStr(_1ab1d2312_FnIns* _self_, jule::Bool _34825_ident) {
	_1a7c4c7ed_StrBuilder _34913_s = static__1a7c4cb1c_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1a7c573c9_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_1a7c573c9_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1a7c57682_WriteByte(&_34913_s, ' ');
		_1a7c573c9_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_1a7c57682_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bae47111:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1ab1d1366_ParamIns> *_36520_p = it;
				{
					_1a7c573c9_WriteStr(&_34913_s, _1ab1d16c9_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1a7c57682_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1bae47111:;
				++it;
				_36517_i++;
				goto _iter_begin_1bae47111;
			}
			_iter_end_1bae47111:;
		};
	};
	_1a7c57682_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_1a7c57682_WriteByte(&_34913_s, '!');
	};
	if ((!(_1ab1ce881_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_1a7c57682_WriteByte(&_34913_s, ':');
		_1a7c573c9_WriteStr(&_34913_s, _1ab2e68dd_Str((*(_self_))._field_Result.ptr()));
	};
	return _1a7c57bc1_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1d2312_FnIns _Src) {
	_Stream << _1ab1d2653_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ab1d54d0_ReferenceStack> static__1ab1d57cc_new(void) {
	return jule::new_ptr<_1ab1d54d0_ReferenceStack>(_1ab1d54d0_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1ab1d5bc8_Len(_1ab1d54d0_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1ab1d6019_At(_1ab1d54d0_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1ab1d62c2_Push(_1ab1d54d0_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1bb79ab84_Exist(_1ab1d54d0_ReferenceStack* _self_, jule::Ptr<_1ab1d2312_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb79bd83:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bb79bd83:;
			++it;
			goto _iter_begin_1bb79bd83;
		}
		_iter_end_1bb79bd83:;
	};
	return false;;
}

inline jule::Bool _1bab063a8_Exist(_1ab1d54d0_ReferenceStack* _self_, jule::Ptr<_1ab2853a4_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab07244:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bab07244:;
			++it;
			goto _iter_begin_1bab07244;
		}
		_iter_end_1bab07244:;
	};
	return false;;
}

inline jule::Bool _1babb749c_Exist(_1ab1d54d0_ReferenceStack* _self_, jule::Ptr<_1ab1bc1ed_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babb86e0:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1babb86e0:;
			++it;
			goto _iter_begin_1babb86e0;
		}
		_iter_end_1babb86e0:;
	};
	return false;;
}

inline jule::Bool _1bbb9e5d7_Exist(_1ab1d54d0_ReferenceStack* _self_, jule::Ptr<_1ab1e26da_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbba075e:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1bbba075e:;
			++it;
			goto _iter_begin_1bbba075e;
		}
		_iter_end_1bbba075e:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1d54d0_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1d69ed_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1ab1dbe54_pushErr(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab182e72_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1a7d05a93_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab260b65_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1ab1dc6d5_pushSuggestion(_1ab1db5b3_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1ab262194_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1ab1dcad1_checkCppUseDeclPath(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _1a7c5ac3a_Ext((*(_34556_path)));;
	if (((!(_1a7ce87de_IsValidHeaderExt(_3469_ext))) && (!(_1a7ce8aa8_IsValidCppExt(_3469_ext))))) {
		_1ab1dbe54_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d77a08b5_Status> _3539_info = ({
		auto except = static__1d779c54e_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1ab1dbe54_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1d77a08b5_Status>(nullptr);});
	});;
	if (_1d77a0c8e_IsDir(_3539_info.ptr())) {
		_1ab1dbe54_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dcdde_buildCppHeaderImport(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1a7ce8514_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_1a7c5a971_Join(jule::Slice<jule::Str>::make({_1ab188dac_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1ab1dcad1_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7c5b004_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1ab1dbe54_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1ab242a9d_ImportInfo>(_1ab242a9d_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dd230_buildStdImport(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_1a7c3d37c_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39513_path=_1a7c5a971_Join(jule::Slice<jule::Str>::make({_1a7e1590b_PathStdlib,_39513_path}));
	jule::Bool _39815_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7c5b004_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1ab1dbe54_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d77a08b5_Status> _4059_info = ({
		auto except = static__1d779c54e_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1ab1dbe54_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_1d77a08b5_Status>(nullptr);});
	});;
	if ((!(_1d77a0c8e_IsDir(_4059_info.ptr())))) {
		_1ab1dbe54_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4159_i = (_1a7c38e05_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1ab242a9d_ImportInfo>(_1ab242a9d_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ab2459c4_Package>(_1ab2459c4_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dd571_buildIdentImport(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Ptr<_1ab1b1676_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_1a7c38542_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1a7c37c8e_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1ab1dbe54_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = _1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23dbed_GetModPath((*(_self_))._field_importer);;
	if ((_4419_modPath.len() == 0LL)) {
		_1ab1dbe54_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1ab1dc6d5_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_1a7c3d37c_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44813_path=_1a7c5a971_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7c5b004_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1ab1dbe54_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1d77a08b5_Status> _4599_info = ({
		auto except = static__1d779c54e_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1ab1dbe54_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_1d77a08b5_Status>(nullptr);});
	});;
	if ((!(_1d77a0c8e_IsDir(_4599_info.ptr())))) {
		_1ab1dbe54_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4699_i = (_1a7c38e05_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1ab242a9d_ImportInfo>(_1ab242a9d_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ab2459c4_Package>(_1ab2459c4_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1dd8b2_buildImport(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Ptr<_1ab1b1676_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1bae86d65:;
			{
				return _1ab1dcdde_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1bae86727:;
			{
				return _1ab1dd230_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1bae866b1:;
			{
				return _1ab1dd571_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1bae865e5:;
	};
}



inline jule::Bool _1ab1ddc03_checkDuplicateUseDecl(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab242a9d_ImportInfo> _5009_lpkg = _1ab2b0d4c_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>([=](jule::Ptr<_1ab242a9d_ImportInfo> _50045_spkg) mutable -> jule::Bool {
		return ((*((*(_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
	}));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ab1dbe54_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1ab1dc6d5_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1ab1de066_implImportSelections(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _51244_imp, jule::Ptr<_1ab1b1676_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae8b254:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bae8bdc0:;
					if (it != expr_end) {
						jule::Ptr<_1ab182e72_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1bae8bdc0;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1ab1dbe54_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_51416_item))._field_Kind, &__jule_any_type4)}));
								_1ab1dc6d5_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1bae8bdc0;
							};
						}
						_iter_next_1bae8bdc0:;
						++it;
						goto _iter_begin_1bae8bdc0;
					}
					_iter_end_1bae8bdc0:;
				};
			}
			_iter_next_1bae8b254:;
			++it;
			goto _iter_begin_1bae8b254;
		}
		_iter_end_1bae8b254:;
	};
}



inline jule::Str _1ab1de3a7_getAsLinkPath(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_1a7c37497_HasPrefix(_52737_path, _1a7e1590b_PathStdlib)) {
		(_52737_path).mut_slice(_1a7e1590b_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1a7c3d37c_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7c5b004_Abs(_1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23dbed_GetModPath((*(_self_))._field_importer));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 47LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _1a7c3d37c_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1ab1de7c5_pushCycleError(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Ptr<_1ab1db5b3_symbolBuilder>* _54135_sb, jule::Str _54155_path, _1a7c4c7ed_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _1a7d06005_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1ab1de3a7_getAsLinkPath(_self_, _1ab188dac_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1ab1de3a7_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5479_buf = _1a7c58672_Buf(_54171_message);;
	_1a7c573c9_WriteStr(_54171_message, _1a7c36ba0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1a7c573c9_WriteStr(_54171_message, _5439_refersTo);
	_1a7c57682_WriteByte(_54171_message, '\n');
	_1a7c57121_Write(_54171_message, _5479_buf);
}



inline void _1ab1debe3_pushCrossCycleError(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Ptr<_1ab1db5b3_symbolBuilder>* _55440_target, jule::Ptr<_1ab242a9d_ImportInfo>* _55465_imp, jule::Ptr<_1ab182e72_Token>* _55484_errorToken) {
	_1a7c4c7ed_StrBuilder _55513_message = static__1a7c4cb1c_New(32LL);;
	_1ab1de7c5_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1ab1db5b3_symbolBuilder> _55913_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1ab1db5b3_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1ab1de7c5_pushCycleError(_self_, &((*(_56013_old))._field_owner), _1ab188dac_Dir((*((*(_56013_old))._field_table))._field_File.ptr()), &(_55513_message));
			if (((*(_55913_owner))._field_owner == (*(_55440_target)))) {
				_1ab1de7c5_pushCycleError(_self_, _55440_target, _1ab188dac_Dir((*((*(_55913_owner))._field_table))._field_File.ptr()), &(_55513_message));
				goto _iter_end_1bae94b53;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*(_55913_owner))._field_owner;
		}
	_iter_next_1bae94b53:;
	}
	_iter_end_1bae94b53:;;
	_1ab1dbe54_pushErr(_self_.ptr(), _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1a7c57bc1_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1ab1e00de_checkImportCycles(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Ptr<_1ab242a9d_ImportInfo> _57737_imp, jule::Ptr<_1ab1b1676_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1ab188dac_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ab1dbe54_pushErr(_self_.ptr(), &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1ab1de3a7_getAsLinkPath(_self_, (*(_57737_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ab1db5b3_symbolBuilder> _58713_owner = (*(_self_))._field_owner;;
	_julec_label_1bae9ad24:;
	if ((_1ab188dac_Dir((*((*(_58713_owner))._field_table))._field_File.ptr()) == (*(_57737_imp))._field_Path)) {
		_1ab1debe3_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*(_58713_owner))._field_owner != nullptr)) {
		_58713_owner=(*(_58713_owner))._field_owner;
		goto _julec_label_1bae9ad24;
	};
	return true;;
}



inline void _1ab1e050c_checkPackageAccessibility(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((_1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23dbed_GetModPath((*(_self_))._field_importer) != (*(_60862_mod))) && _1a7c3bea2_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1ab1dbe54_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab1e0908_importPackage(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _61438_imp, jule::Ptr<_1ab1b1676_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab242a9d_ImportInfo> _61913_port = _1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23e380_GetImport((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*(_61913_port))._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = _1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23dbed_GetModPath((*(_self_))._field_importer);;
		_1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23d967_SetModPath((*(_self_))._field_importer, _1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23e03e_ModById((*(_self_))._field_importer, (*((*(_61438_imp))))._field_ModId));
		_1ab1e050c_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_62413_oldMod), &((*(_61913_port))._field_Path));
		_1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23d967_SetModPath((*(_self_))._field_importer, _62413_oldMod);
	} else {
		if ((!(_1ab1e00de_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = _1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23dbed_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23d967_SetModPath((*(_self_))._field_importer, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			_1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23d967_SetModPath((*(_self_))._field_importer, _1a7e1590b_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ab1965b2_Ast>> _63817_asts;;
		jule::Slice<_1a7d05a93_Log> _63827_errors;;
		({
			__jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23e77b_ImportPackage((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63827_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ab1e050c_checkPackageAccessibility(_self_.ptr(), _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8b20b8:;
			if (it != expr_end) {
				jule::Ptr<_1ab1965b2_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1ab2b0863_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1ab2b0863_SymbolTable__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1ab316d4d_buildSymbols(&(_64625_ast), &((*(_self_))._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63827_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>> &__jule_push_dest = (*((*((*(_61438_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64725_table); };
				}
				_iter_next_1ab8b20b8:;
				++it;
				goto _iter_begin_1ab8b20b8;
			}
			_iter_end_1ab8b20b8:;
		};
	};
	_1ab1de066_implImportSelections(_self_.ptr(), _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab1e0c49_importUseDecl(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_, jule::Ptr<_1ab1b1676_UseDecl>* _66138_decl) {
	jule::Ptr<_1ab242a9d_ImportInfo> _66213_imp = _1ab1dd8b2_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1ab1ddc03_checkDuplicateUseDecl(_self_.ptr(), &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1ab1e0908_importPackage(_self_, &(_66213_imp), _66138_decl);
	{ jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_66213_imp); };
	if (_66813_ok) {
		_1ab23eb88_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ab23ea34_Imported((*(_self_))._field_importer, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1ab1e0e47_importUseDecls(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b80ad:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b1676_UseDecl> _68321_decl = *it;
			{
				_1ab1e0c49_importUseDecl(_self_, &(_68321_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1ab8b80ad;
				};
			}
			_iter_next_1ab8b80ad:;
			++it;
			goto _iter_begin_1ab8b80ad;
		}
		_iter_end_1ab8b80ad:;
	};
}



inline void _1ab1e1200_appendNode(_1ab1db5b3_symbolBuilder* _self_, _1ab19756e_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ab8ba3bd:;
			{
				{ jule::Slice<jule::Ptr<_1ab21ad62_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1ab1daeec_buildImpl((*(_69234_node))._field_Data.cast_ptr<_1ab1b51d5_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab8ba621:;
			{
				jule::Ptr<_1ab2e5733_TypeAlias> _69717_ta = _1ab1d7438_buildTypeAlias((*(_69234_node))._field_Data.cast_ptr<_1ab1b008c_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69717_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ab8ba687:;
			{
				jule::Ptr<_1ab1b9470_Struct> _70017_srct = _1ab1d7d0c_buildStruct((*(_69234_node))._field_Data.cast_ptr<_1ab1b4338_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1ab1b9470_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_70017_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab8ba6ed:;
			{
				jule::Ptr<_1ab1ce40d_Fn> _70317_f = _1ab1d8a00_buildFunc((*(_69234_node))._field_Data.cast_ptr<_1ab1aa230_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70317_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab8ba764:;
			{
				jule::Ptr<_1ab1e26da_Trait> _70617_t = _1ab1d934c_buildTrait((*(_69234_node))._field_Data.cast_ptr<_1ab1b4a75_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1ab1e26da_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70617_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab8baed4:;
			{
				jule::Ptr<_1ab2853a4_Var> _70917_v = _1ab1da969_buildVar((*(_69234_node))._field_Data.cast_ptr<_1ab1ab3da_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70917_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ab8bb04a:;
			{
				jule::Ptr<_1ab1e4de6_Enum> _71217_e = _1ab1d9d53_buildEnum((*(_69234_node))._field_Data.cast_ptr<_1ab1b26dd_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1ab1e4de6_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_71217_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ab8bb0b1:;
			{
				jule::Ptr<_1ab1e6601_TypeEnum> _71517_e = _1ab1da6a0_buildTypeEnum((*(_69234_node))._field_Data.cast_ptr<_1ab1b3678_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1ab1e6601_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71517_e); };
			}
		}
		else {
			_case_begin_1ab8ba5aa:;
			{
				_1ab1dbe54_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab8b96ec:;
	};
}



inline void _1ab1e13ed_appendNodes(_1ab1db5b3_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c3c45:;
		if (it != expr_end) {
			_1ab19756e_Node _72321_node = *it;
			{
				_1ab1e1200_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1ab8c3c45:;
			++it;
			goto _iter_begin_1ab8c3c45;
		}
		_iter_end_1ab8c3c45:;
	};
}



inline void _1ab1e16a6_pushDirectivePass(_1ab1db5b3_symbolBuilder* _self_, jule::Ptr<_1ab19798c_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1ab1dbe54_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1ab182e72_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1ab1dbe54_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ab182e72_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab1dbe54_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7379_arg))._field_Kind[0LL] != '\"')) {
		_1ab1dbe54_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1ab1d69ed_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1ab1d69ed_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*(_7379_arg))._field_Kind.slice(1LL, ((*(_7379_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1ab1e18a4_appendTopDirectives(_1ab1db5b3_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c76a5:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1ab8cc424:;
						{
							_1ab1e16a6_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1ab8cc369:;
				};
			}
			_iter_next_1ab8c76a5:;
			++it;
			goto _iter_begin_1ab8c76a5;
		}
		_iter_end_1ab8c76a5:;
	};
}



inline void _1ab1e1aa2_build(jule::Ptr<_1ab1db5b3_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1ab2b0863_SymbolTable>(_1ab2b0863_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1ab1e18a4_appendTopDirectives(_self_.ptr());
	_1ab1e0e47_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1ab1e13ed_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1db5b3_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab1e2aa3_Str(_1ab1e26da_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab1e2de4_Equal(jule::Ptr<_1ab1e26da_Trait> _self_, jule::Ptr<_1ab2e6525_TypeKind> _2521_other) {
	jule::Ptr<_1ab1e26da_Trait> _269_trt = _1ab2ea480_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab1e3389_FindMethod(_1ab1e26da_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d123b:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1ab8d123b:;
			++it;
			goto _iter_begin_1ab8d123b;
		}
		_iter_end_1ab8d123b:;
	};
	return _1ab1e3a1b_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab1e3a1b_findMethodInherit(_1ab1e26da_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d3dba:;
		if (it != expr_end) {
			jule::Ptr<_1ab2ed6e7_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1ab8d3dba;
				};
				jule::Ptr<_1ab1e26da_Trait> _6017_t = _1ab2ea480_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1ab1ce40d_Fn> _6221_f2 = _1ab1e3389_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1ab8d3dba:;
			++it;
			goto _iter_begin_1ab8d3dba;
		}
		_iter_end_1ab8d3dba:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1e26da_Trait _Src) {
	_Stream << _1ab1e2aa3_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ab1e4731_AutoExpr(_1ab1e4379_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1e4379_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab1e526a_Str(_1ab1e4de6_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab1e55ab_Equal(jule::Ptr<_1ab1e4de6_Enum> _self_, jule::Ptr<_1ab2e6525_TypeKind> _3821_other) {
	jule::Ptr<_1ab1e4de6_Enum> _399_enm = _1ab2e9429_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1ab1e4379_EnumItem> _1ab1e59da_FindItem(_1ab1e4de6_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d7c8c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4379_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1ab8d7c8c:;
			++it;
			goto _iter_begin_1ab8d7c8c;
		}
		_iter_end_1ab8d7c8c:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1e4de6_Enum _Src) {
	_Stream << _1ab1e526a_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1e6029_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab1e6942_Str(_1ab1e6601_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ab1e6c83_Equal(jule::Ptr<_1ab1e6601_TypeEnum> _self_, jule::Ptr<_1ab2e6525_TypeKind> _8021_other) {
	jule::Ptr<_1ab1e6601_TypeEnum> _819_tenm = _1ab2e96b0_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1ab1e6029_TypeEnumItem> _1ab1e71b2_FindItem(_1ab1e6601_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8da08b:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6029_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1ab8da08b:;
			++it;
			goto _iter_begin_1ab8da08b;
		}
		_iter_end_1ab8da08b:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1e6601_TypeEnum _Src) {
	_Stream << _1ab1e6942_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab1e9acc_Str(_1ab1e9758_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ab1e9e1d_Equal(jule::Ptr<_1ab1e9758_comptimeRange> _self_, jule::Ptr<_1ab2e6525_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1e9758_comptimeRange _Src) {
	_Stream << _1ab1e9acc_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab1ea5e4_Str(_1ab1ea22b_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ab1ea935_Equal(jule::Ptr<_1ab1ea22b_comptimeStructField> _self_, jule::Ptr<_1ab2e6525_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eaec9__Name(jule::Ptr<_1ab1ea22b_comptimeStructField> _self_, jule::Ptr<_1ab2b7903_Eval>* _5026_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _5513_constant = static__1a8d05bb3_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eb3c5__Type(jule::Ptr<_1ab1ea22b_comptimeStructField> _self_, jule::Ptr<_1ab2b7903_Eval>* _6330_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eb7c1__Public(jule::Ptr<_1ab1ea22b_comptimeStructField> _self_, jule::Ptr<_1ab2b7903_Eval>* _7132_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _7613_constant = static__1a8d058e9_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1ebace_subIdent(jule::Ptr<_1ab1ea22b_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab8e76a3:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _8717_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _8833_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _8848_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab1eaec9__Name(_self_, _8833_e, _8848_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ab8e7719:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _9417_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _9533_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _9548_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab1eb7c1__Public(_self_, _9533_e, _9548_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab8e7780:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _10117_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _10233_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _10248_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab1eb3c5__Type(_self_, _10233_e, _10248_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1ab8e763c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e75b5:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ea22b_comptimeStructField _Src) {
	_Stream << _1ab1ea5e4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab1ec261_Str(_1ab1ebddc_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ab1ec5a2_Equal(jule::Ptr<_1ab1ebddc_comptimeStructFields> _self_, jule::Ptr<_1ab2e6525_TypeKind> _12021_other) {
	return false;;
}



inline void _1ab1eca25_ready(_1ab1ebddc_comptimeStructFields* _self_, jule::Ptr<_1ab2853a4_Var>* _12429_keyA, jule::Ptr<_1ab2853a4_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*((*((*(_12429_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_12429_keyA))))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1ea22b_comptimeStructField>(), 6)})});
	};
}



inline void _1ab1ece43_step(_1ab1ebddc_comptimeStructFields* _self_, jule::I64 _14623_i, jule::Ptr<_1ab2853a4_Var>* _14636_keyA, jule::Ptr<_1ab2853a4_Var>* _14653_keyB) {
	if (((*(_14636_keyA)) != nullptr)) {
		(*((*((*((*(_14636_keyA))))._field_Value))._field_Data))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_14623_i)));
		(*((*((*((*(_14636_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_14636_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_14653_keyB)) != nullptr)) {
		(*(_1ab2eb250_comptimeStructField((*((*((*(_14653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14623_i];
	};
}



inline jule::I64 _1ab1ed1c9_len(_1ab1ebddc_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ebddc_comptimeStructFields _Src) {
	_Stream << _1ab1ec261_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab1ed85b_Str(_1ab1ed4d7_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ab1edb9c_Equal(jule::Ptr<_1ab1ed4d7_comptimeStatic> _self_, jule::Ptr<_1ab2e6525_TypeKind> _17021_other) {
	return false;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1ee2c9__Name(jule::Ptr<_1ab1ed4d7_comptimeStatic> _self_, jule::Ptr<_1ab2b7903_Eval>* _17426_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _17441_fc) {
	if (((*((*(_17441_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_17426_e)).ptr(), (*((*((*(_17441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _17913_constant = static__1a8d05bb3_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_17913_constant, &__jule_any_type19), ._field_Constant=_17913_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1ee6c5__Type(jule::Ptr<_1ab1ed4d7_comptimeStatic> _self_, jule::Ptr<_1ab2b7903_Eval>* _18730_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _18745_fc) {
	if (((*((*(_18745_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_18730_e)).ptr(), (*((*((*(_18745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_18730_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eeac1__Public(jule::Ptr<_1ab1ed4d7_comptimeStatic> _self_, jule::Ptr<_1ab2b7903_Eval>* _19532_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _19547_fc) {
	if (((*((*(_19547_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_19532_e)).ptr(), (*((*((*(_19547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _20013_constant = static__1a8d058e9_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_20013_constant, &__jule_any_type19), ._field_Constant=_20013_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab1eee12_subIdent(jule::Ptr<_1ab1ed4d7_comptimeStatic> _self_, jule::Str* _20829_ident) {
	{
		auto &_match_expr{ (*(_20829_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab90d961:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _21117_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _21233_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _21248_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab1ee2c9__Name(_self_, _21233_e, _21248_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_21117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ab90d9c7:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _21817_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _21933_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _21948_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab1eeac1__Public(_self_, _21933_e, _21948_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_21817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab90da3d:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _22517_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _22633_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _22648_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab1ee6c5__Type(_self_, _22633_e, _22648_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_22517_method));;
			}
		}
		else {
			_case_begin_1ab90d8ea:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab90d873:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ed4d7_comptimeStatic _Src) {
	_Stream << _1ab1ed85b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab20051c_Str(_1ab200198_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ab20085d_Equal(jule::Ptr<_1ab200198_comptimeStatics> _self_, jule::Ptr<_1ab2e6525_TypeKind> _24421_other) {
	return false;;
}



inline void _1ab200cd1_ready(_1ab200198_comptimeStatics* _self_, jule::Ptr<_1ab2853a4_Var>* _24829_keyA, jule::Ptr<_1ab2853a4_Var>* _24846_keyB) {
	if (((*(_24829_keyA)) != nullptr)) {
		(*((*(_24829_keyA))))._field_Constant=true;
		(*((*(_24829_keyA))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*((*((*(_24829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_24829_keyA))))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24846_keyB)) != nullptr)) {
		(*((*(_24846_keyB))))._field_Constant=true;
		(*((*(_24846_keyB))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*(_24846_keyB))))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1ed4d7_comptimeStatic>(), 8)})});
	};
}



inline void _1ab2011ee_step(_1ab200198_comptimeStatics* _self_, jule::I64 _27023_i, jule::Ptr<_1ab2853a4_Var>* _27036_keyA, jule::Ptr<_1ab2853a4_Var>* _27053_keyB) {
	if (((*(_27036_keyA)) != nullptr)) {
		(*((*((*((*(_27036_keyA))))._field_Value))._field_Data))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_27023_i)));
		(*((*((*((*(_27036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_27036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_27053_keyB)) != nullptr)) {
		(*(_1ab2eca59_comptimeStatic((*((*((*(_27053_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_27023_i];
	};
}



inline jule::I64 _1ab201485_len(_1ab200198_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab200198_comptimeStatics _Src) {
	_Stream << _1ab20051c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab201c27_Str(_1ab201793_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ab202068_Equal(jule::Ptr<_1ab201793_comptimeEnumField> _self_, jule::Ptr<_1ab2e6525_TypeKind> _29421_other) {
	return false;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2024db__Name(jule::Ptr<_1ab201793_comptimeEnumField> _self_, jule::Ptr<_1ab2b7903_Eval>* _29826_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _29841_fc) {
	if (((*((*(_29841_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_29826_e)).ptr(), (*((*((*(_29841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _30313_constant = static__1a8d05bb3_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_30313_constant, &__jule_any_type19), ._field_Constant=_30313_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20282c_subIdent(jule::Ptr<_1ab201793_comptimeEnumField> _self_, jule::Str* _31129_ident) {
	{
		auto &_match_expr{ (*(_31129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab91ee6c:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _31417_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _31533_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _31548_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab2024db__Name(_self_, _31533_e, _31548_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_31417_method));;
			}
		}
		else {
			_case_begin_1ab91ee06:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab91ed7e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab201793_comptimeEnumField _Src) {
	_Stream << _1ab201c27_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab202eae_Str(_1ab202b3a_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ab203300_Equal(jule::Ptr<_1ab202b3a_comptimeEnumFields> _self_, jule::Ptr<_1ab2e6525_TypeKind> _33321_other) {
	return false;;
}



inline void _1ab203773_ready(_1ab202b3a_comptimeEnumFields* _self_, jule::Ptr<_1ab2853a4_Var>* _33729_keyA, jule::Ptr<_1ab2853a4_Var>* _33746_keyB) {
	if (((*(_33729_keyA)) != nullptr)) {
		(*((*(_33729_keyA))))._field_Constant=true;
		(*((*(_33729_keyA))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*((*((*(_33729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_33729_keyA))))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33746_keyB)) != nullptr)) {
		(*((*(_33746_keyB))))._field_Constant=true;
		(*((*(_33746_keyB))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*(_33746_keyB))))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab201793_comptimeEnumField>(), 10)})});
	};
}



inline void _1ab203b91_step(_1ab202b3a_comptimeEnumFields* _self_, jule::I64 _35923_i, jule::Ptr<_1ab2853a4_Var>* _35936_keyA, jule::Ptr<_1ab2853a4_Var>* _35953_keyB) {
	if (((*(_35936_keyA)) != nullptr)) {
		(*((*((*((*(_35936_keyA))))._field_Value))._field_Data))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_35923_i)));
		(*((*((*((*(_35936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_35936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_35953_keyB)) != nullptr)) {
		(*(_1ab2eb76c_comptimeEnumField((*((*((*(_35953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35923_i];
	};
}



inline jule::I64 _1ab203e27_len(_1ab202b3a_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab202b3a_comptimeEnumFields _Src) {
	_Stream << _1ab202eae_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab2045a9_Str(_1ab204235_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ab2048ea_Equal(jule::Ptr<_1ab204235_comptimeParam> _self_, jule::Ptr<_1ab2e6525_TypeKind> _38321_other) {
	return false;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab205159__Name(jule::Ptr<_1ab204235_comptimeParam> _self_, jule::Ptr<_1ab2b7903_Eval>* _38726_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _38741_fc) {
	if (((*((*(_38741_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_38726_e)).ptr(), (*((*((*(_38741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _39213_constant = static__1a8d05bb3_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_39213_constant, &__jule_any_type19), ._field_Constant=_39213_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab205555__Type(jule::Ptr<_1ab204235_comptimeParam> _self_, jule::Ptr<_1ab2b7903_Eval>* _40030_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _40045_fc) {
	if (((*((*(_40045_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_40030_e)).ptr(), (*((*((*(_40045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_40030_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab205951__Variadic(jule::Ptr<_1ab204235_comptimeParam> _self_, jule::Ptr<_1ab2b7903_Eval>* _40834_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _40849_fc) {
	if (((*((*(_40849_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_40834_e)).ptr(), (*((*((*(_40849_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _41313_constant = static__1a8d058e9_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_41313_constant, &__jule_any_type19), ._field_Constant=_41313_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab205d4c__Reference(jule::Ptr<_1ab204235_comptimeParam> _self_, jule::Ptr<_1ab2b7903_Eval>* _42135_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _42150_fc) {
	if (((*((*(_42150_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_42135_e)).ptr(), (*((*((*(_42150_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _42613_constant = static__1a8d058e9_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_42613_constant, &__jule_any_type19), ._field_Constant=_42613_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20618d_subIdent(jule::Ptr<_1ab204235_comptimeParam> _self_, jule::Str* _43429_ident) {
	{
		auto &_match_expr{ (*(_43429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab934d61:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _43717_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _43833_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _43848_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab205159__Name(_self_, _43833_e, _43848_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_43717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1ab934dc7:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _44417_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _44533_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _44548_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab205951__Variadic(_self_, _44533_e, _44548_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_44417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1ab934e4e:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _45117_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _45233_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _45248_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab205d4c__Reference(_self_, _45233_e, _45248_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_45117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab934ec6:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _45817_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _45933_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _45948_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab205555__Type(_self_, _45933_e, _45948_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_45817_method));;
			}
		}
		else {
			_case_begin_1ab934cea:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab934c73:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab204235_comptimeParam _Src) {
	_Stream << _1ab2045a9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab206820_Str(_1ab20649b_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ab206b61_Equal(jule::Ptr<_1ab20649b_comptimeParams> _self_, jule::Ptr<_1ab2e6525_TypeKind> _47721_other) {
	return false;;
}



inline void _1ab2070d4_ready(_1ab20649b_comptimeParams* _self_, jule::Ptr<_1ab2853a4_Var>* _48129_keyA, jule::Ptr<_1ab2853a4_Var>* _48146_keyB) {
	if (((*(_48129_keyA)) != nullptr)) {
		(*((*(_48129_keyA))))._field_Constant=true;
		(*((*(_48129_keyA))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*((*((*(_48129_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_48129_keyA))))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_48146_keyB)) != nullptr)) {
		(*((*(_48146_keyB))))._field_Constant=true;
		(*((*(_48146_keyB))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*(_48146_keyB))))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab204235_comptimeParam>(), 12)})});
	};
}



inline void _1ab207502_step(_1ab20649b_comptimeParams* _self_, jule::I64 _50323_i, jule::Ptr<_1ab2853a4_Var>* _50336_keyA, jule::Ptr<_1ab2853a4_Var>* _50353_keyB) {
	if (((*(_50336_keyA)) != nullptr)) {
		(*((*((*((*(_50336_keyA))))._field_Value))._field_Data))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_50323_i)));
		(*((*((*((*(_50336_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_50336_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_50353_keyB)) != nullptr)) {
		(*(_1ab2ebc89_comptimeParam((*((*((*(_50353_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_50323_i];
	};
}



inline jule::I64 _1ab207788_len(_1ab20649b_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab20649b_comptimeParams _Src) {
	_Stream << _1ab206820_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab207e1a_Str(_1ab207a96_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ab20825b_Equal(jule::Ptr<_1ab207a96_comptimeTypeInfos> _self_, jule::Ptr<_1ab2e6525_TypeKind> _52721_other) {
	return false;;
}



inline void _1ab2086ce_ready(_1ab207a96_comptimeTypeInfos* _self_, jule::Ptr<_1ab2853a4_Var>* _53129_keyA, jule::Ptr<_1ab2853a4_Var>* _53146_keyB) {
	if (((*(_53129_keyA)) != nullptr)) {
		(*((*(_53129_keyA))))._field_Constant=true;
		(*((*(_53129_keyA))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*((*((*(_53129_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_53129_keyA))))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_53146_keyB)) != nullptr)) {
		(*((*(_53146_keyB))))._field_Constant=true;
		(*((*(_53146_keyB))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*(_53146_keyB))))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab209191_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1ab208aec_step(_1ab207a96_comptimeTypeInfos* _self_, jule::I64 _55323_i, jule::Ptr<_1ab2853a4_Var>* _55336_keyA, jule::Ptr<_1ab2853a4_Var>* _55353_keyB) {
	if (((*(_55336_keyA)) != nullptr)) {
		(*((*((*((*(_55336_keyA))))._field_Value))._field_Data))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_55323_i)));
		(*((*((*((*(_55336_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_55336_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_55353_keyB)) != nullptr)) {
		(*((*((*((*(_55353_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_self_))._field_types[_55323_i], 15);
	};
}



inline jule::I64 _1ab208d83_len(_1ab207a96_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab207a96_comptimeTypeInfos _Src) {
	_Stream << _1ab207e1a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab209515_Str(_1ab209191_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1ab2e68dd_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ab209856_Equal(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2e6525_TypeKind> _57721_other) {
	return false;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab209ea5__Str(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _58125_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _58140_fc) {
	if (((*((*(_58140_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_58125_e)).ptr(), (*((*((*(_58140_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _58613_constant = static__1a8d05bb3_NewStr(_1ab2e68dd_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_58613_constant, &__jule_any_type19), ._field_Constant=_58613_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20a3a1__Kind(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _59430_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _59445_fc) {
	if (((*((*(_59445_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_59430_e)).ptr(), (*((*((*(_59445_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab1e4de6_Enum> _59913_enm = _1ab244808_FindEnum(_1ab2166ba_findComptimePackage(&((*((*(_59430_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1ab1e4379_EnumItem> _60017_item = nullptr;;
	{
		
		if (_1ab2e7889_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1ab9537ca:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab953676:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1ab2ea480_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab953599:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1ab2e9193_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab95338a:;
			{
				if (_1ab306e2b_IsUnsafe(_1ab2e9193_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1ab2e8e0c_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab953401:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1ab2e9429_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab953e4b:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1ab2ea716_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab953ec3:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab95404a:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1ab2e9946_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab9540c2:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1ab2e9e63_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab954149:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1ab2ea99c_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab9541c1:;
			{
				_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1ab2e8b76_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab954248:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _62913_prim = _1ab2e8b76_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1ab30281c_IsAny(_62913_prim.ptr())) {
						_case_begin_1ab95ee57:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1ab302300_IsBool(_62913_prim.ptr())) {
						_case_begin_1ab95eebd:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1ab302586_IsStr(_62913_prim.ptr())) {
						_case_begin_1ab960034:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1ab301530_IsF32(_62913_prim.ptr())) {
						_case_begin_1ab96009a:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1ab3017b6_IsF64(_62913_prim.ptr())) {
						_case_begin_1ab960b5b:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1ab2eeeac_IsI8(_62913_prim.ptr())) {
						_case_begin_1ab960bc2:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1ab300243_IsI16(_62913_prim.ptr())) {
						_case_begin_1ab960c38:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1ab3004c9_IsI32(_62913_prim.ptr())) {
						_case_begin_1ab960c9e:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1ab300760_IsI64(_62913_prim.ptr())) {
						_case_begin_1ab960d26:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1ab3009e6_IsU8(_62913_prim.ptr())) {
						_case_begin_1ab960d9d:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1ab300c7c_IsU16(_62913_prim.ptr())) {
						_case_begin_1ab960e25:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1ab301013_IsU32(_62913_prim.ptr())) {
						_case_begin_1ab960e9c:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1ab301299_IsU64(_62913_prim.ptr())) {
						_case_begin_1ab961024:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1ab301a4c_IsInt(_62913_prim.ptr())) {
						_case_begin_1ab96109b:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1ab301cd3_IsUint(_62913_prim.ptr())) {
						_case_begin_1ab961123:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1ab302069_IsUintptr(_62913_prim.ptr())) {
						_case_begin_1ab96119a:;
						{
							_60017_item=_1ab1e59da_FindItem(_59913_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ab95ede1:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ab2e68dd_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:664:17"));;
						}
					}
					_match_end_1ab95ed8b:;
				};
			}
		}
		else {
			_case_begin_1ab953236:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ab2e68dd_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:667:13"));;
			}
		}
		_match_end_1ab952da1:;
	};
	return _1ab2e328b_evalEnumStatic(&(_59913_enm), &(_60017_item));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20a79c__Bits(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _67230_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _67245_fc) {
	if (((*((*(_67245_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_67230_e)).ptr(), (*((*((*(_67245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _6779_prim = _1ab2e8b76_Prim((*(_self_))._field_base.ptr());;
	if ((_6779_prim == nullptr)) {
		_1ab2b7e53_pushErr((*(_67230_e)).ptr(), (*((*(_67245_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6829_n = _1a8ce6d5d_BitsizeOf((*(_6779_prim))._field_Kind);;
	if ((_6829_n == -1LL)) {
		_1ab2b7e53_pushErr((*(_67230_e)).ptr(), (*((*(_67245_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _68713_constant = static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6829_n)));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_68713_constant, &__jule_any_type19), ._field_Constant=_68713_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20ab98__Elem(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _69530_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _69545_fc) {
	if (((*((*(_69545_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_69530_e)).ptr(), (*((*((*(_69545_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab3063e2_Ptr> _70013_ptr = _1ab2e9193_Ptr((*(_self_))._field_base.ptr());;
	if ((_70013_ptr != nullptr)) {
		if (_1ab306e2b_IsUnsafe(_70013_ptr.ptr())) {
			_1ab2b7e53_pushErr((*(_69530_e)).ptr(), (*((*(_69545_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_70013_ptr))._field_Elem));;
	};
	jule::Ptr<_1ab302b2a_Sptr> _70813_sptr = _1ab2e8e0c_Sptr((*(_self_))._field_base.ptr());;
	if ((_70813_sptr != nullptr)) {
		return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_70813_sptr))._field_Elem));;
	};
	jule::Ptr<_1ab3035ed_Slc> _71213_slice = _1ab2e9bcc_Slc((*(_self_))._field_base.ptr());;
	if ((_71213_slice != nullptr)) {
		return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_71213_slice))._field_Elem));;
	};
	jule::Ptr<_1ab30591e_Arr> _71613_array = _1ab2e9946_Arr((*(_self_))._field_base.ptr());;
	if ((_71613_array != nullptr)) {
		return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_71613_array))._field_Elem));;
	};
	jule::Ptr<_1ab1e4de6_Enum> _72013_enm = _1ab2e9429_Enum((*(_self_))._field_base.ptr());;
	if ((_72013_enm != nullptr)) {
		return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*((*(_72013_enm))._field_Kind))._field_Kind));;
	};
	_1ab2b7e53_pushErr((*(_69530_e)).ptr(), (*((*(_69545_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20b094__Size(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _72830_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _72845_fc) {
	if (((*((*(_72845_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_72830_e)).ptr(), (*((*((*(_72845_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab30591e_Arr> _73313_arr = _1ab2e9946_Arr((*(_self_))._field_base.ptr());;
	if ((_73313_arr == nullptr)) {
		_1ab2b7e53_pushErr((*(_72830_e)).ptr(), (*((*(_72845_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _73813_constant = static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_73313_arr))._field_N)));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c9a26_primInt, ._field_Model=jule::Any(_73813_constant, &__jule_any_type19), ._field_Constant=_73813_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20b490__Key(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _74629_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _74644_fc) {
	if (((*((*(_74644_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_74629_e)).ptr(), (*((*((*(_74644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab304c92_Map> _75113_m = _1ab2ea716_Map((*(_self_))._field_base.ptr());;
	if ((_75113_m == nullptr)) {
		_1ab2b7e53_pushErr((*(_74629_e)).ptr(), (*((*(_74644_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_74629_e))))._field_s), &((*(_75113_m))._field_Key));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20b88b__Value(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _75931_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _75946_fc) {
	if (((*((*(_75946_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_75931_e)).ptr(), (*((*((*(_75946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab304c92_Map> _76413_m = _1ab2ea716_Map((*(_self_))._field_base.ptr());;
	if ((_76413_m == nullptr)) {
		_1ab2b7e53_pushErr((*(_75931_e)).ptr(), (*((*(_75946_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_75931_e))))._field_s), &((*(_76413_m))._field_Val));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20bc87__Fields(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _77232_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _77247_fc) {
	if (((*((*(_77247_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_77232_e)).ptr(), (*((*((*(_77247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _77713_s = _1ab2ea1e9_Struct((*(_self_))._field_base.ptr());;
	if ((_77713_s != nullptr)) {
		return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1ebddc_comptimeStructFields>(_1ab1ebddc_comptimeStructFields{._field_fields=(*(_77713_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1ab1e4de6_Enum> _78713_enm = _1ab2e9429_Enum((*(_self_))._field_base.ptr());;
	if ((_78713_enm != nullptr)) {
		return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab202b3a_comptimeEnumFields>(_1ab202b3a_comptimeEnumFields{._field_fields=(*(_78713_enm))._field_Items}), 11)}), });;
	};
	_1ab2b7e53_pushErr((*(_77232_e)).ptr(), (*((*(_77247_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20c183__Statics(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _80133_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _80148_fc) {
	if (((*((*(_80148_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_80133_e)).ptr(), (*((*((*(_80148_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _80613_s = _1ab2ea1e9_Struct((*(_self_))._field_base.ptr());;
	if ((_80613_s == nullptr)) {
		_1ab2b7e53_pushErr((*(_80133_e)).ptr(), (*((*(_80148_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab200198_comptimeStatics>(_1ab200198_comptimeStatics{._field_fields=(*(_80613_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20c57e__Public(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _82032_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _82047_fc) {
	if (((*((*(_82047_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_82032_e)).ptr(), (*((*((*(_82047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82513_public = false;;
	{
		
		if ((_1ab2ea1e9_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bb00ae72:;
			{
				_82513_public=(*((*(_1ab2ea1e9_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1ab2ea480_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bb009e4e:;
			{
				_82513_public=(*(_1ab2ea480_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1ab2e9429_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bb009eb5:;
			{
				_82513_public=(*(_1ab2e9429_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1ab2e96b0_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bb00a02b:;
			{
				_82513_public=(*(_1ab2e96b0_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1bb009adb:;
			{
				_1ab2b7e53_pushErr((*(_82032_e)).ptr(), (*((*(_82047_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb0099ba:;
	};
	jule::Ptr<_1a8d04e26_Const> _83913_constant = static__1a8d058e9_NewBool(_82513_public);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_83913_constant, &__jule_any_type19), ._field_Constant=_83913_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20c97a__Binded(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _84732_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _84747_fc) {
	if (((*((*(_84747_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_84732_e)).ptr(), (*((*((*(_84747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _85213_constant = static__1a8d058e9_NewBool(_1ab2e736c_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_85213_constant, &__jule_any_type19), ._field_Constant=_85213_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20cd76__Ordered(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _86029_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _86044_fc) {
	if (((*((*(_86044_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_86029_e)).ptr(), (*((*((*(_86044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _86513_constant = static__1a8d058e9_NewBool(_1ab2e813c_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_86513_constant, &__jule_any_type19), ._field_Constant=_86513_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20d272__Comparable(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _87332_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _87347_fc) {
	if (((*((*(_87347_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_87332_e)).ptr(), (*((*((*(_87347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _87813_constant = static__1a8d058e9_NewBool(_1ab2e7b20_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_87813_constant, &__jule_any_type19), ._field_Constant=_87813_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20d66d__Mutable(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _88629_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _88644_fc) {
	if (((*((*(_88644_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_88629_e)).ptr(), (*((*((*(_88644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _89113_constant = static__1a8d058e9_NewBool(_1ab2e7da6_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_89113_constant, &__jule_any_type19), ._field_Constant=_89113_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20da69__Types(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _89931_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _89946_fc) {
	if (((*((*(_89946_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_89931_e)).ptr(), (*((*((*(_89946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab3041e2_Tuple> _90413_tup = _1ab2ea99c_Tup((*(_self_))._field_base.ptr());;
	if ((_90413_tup == nullptr)) {
		_1ab2b7e53_pushErr((*(_89931_e)).ptr(), (*((*(_89946_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab207a96_comptimeTypeInfos> _90913_infos = jule::new_ptr<_1ab207a96_comptimeTypeInfos>(_1ab207a96_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1ab209191_comptimeTypeInfo>>::alloc(0LL, (*(_90413_tup))._field_Types.len())});;
	{
		auto expr = &((*(_90413_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb01e848:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e6525_TypeKind> _91221_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab209191_comptimeTypeInfo>> &__jule_push_dest = (*(_90913_infos))._field_types; __jule_push_dest.push(_1ab2627d2_pushComptimeTypeInfo((*((*((*(_89931_e))))._field_s))._field_meta.ptr(), &(_91221_t))); };
			}
			_iter_next_1bb01e848:;
			++it;
			goto _iter_begin_1bb01e848;
		}
		_iter_end_1bb01e848:;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_90913_infos, 14)}), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20de65__Exceptional(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _92237_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _92252_fc) {
	if (((*((*(_92252_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_92237_e)).ptr(), (*((*((*(_92252_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _92713_f = _1ab2e9e63_Fn((*(_self_))._field_base.ptr());;
	if ((_92713_f == nullptr)) {
		_1ab2b7e53_pushErr((*(_92237_e)).ptr(), (*((*(_92252_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _93213_constant = static__1a8d058e9_NewBool((((*(_92713_f))._field_Decl != nullptr) && (*((*(_92713_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_93213_constant, &__jule_any_type19), ._field_Constant=_93213_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20e361__CanNil(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _94032_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _94047_fc) {
	if (((*((*(_94047_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_94032_e)).ptr(), (*((*((*(_94047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _94513_constant = static__1a8d058e9_NewBool(_1ab2e83c3_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_94513_constant, &__jule_any_type19), ._field_Constant=_94513_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20e75c__RC(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _95328_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _95343_fc) {
	if (((*((*(_95343_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_95328_e)).ptr(), (*((*((*(_95343_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _95813_constant = static__1a8d058e9_NewBool(_1ab2e8659_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_95813_constant, &__jule_any_type19), ._field_Constant=_95813_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab20eb58__Result(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _96632_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _96647_fc) {
	if (((*((*(_96647_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_96632_e)).ptr(), (*((*((*(_96647_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _97113_f = _1ab2e9e63_Fn((*(_self_))._field_base.ptr());;
	if ((_97113_f == nullptr)) {
		_1ab2b7e53_pushErr((*(_96632_e)).ptr(), (*((*(_96647_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_97113_f))._field_Result == nullptr)) {
		return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_96632_e))))._field_s), &(_1ab3c8728_primVoid));;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_96632_e))))._field_s), &((*(_97113_f))._field_Result));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab210054__Params(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Ptr<_1ab2b7903_Eval>* _98232_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _98247_fc) {
	if (((*((*(_98247_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_98232_e)).ptr(), (*((*((*(_98247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _98713_f = _1ab2e9e63_Fn((*(_self_))._field_base.ptr());;
	if ((_98713_f == nullptr)) {
		_1ab2b7e53_pushErr((*(_98232_e)).ptr(), (*((*(_98247_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab20649b_comptimeParams>(_1ab20649b_comptimeParams{._field_params=(*(_98713_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab210395_subIdent(jule::Ptr<_1ab209191_comptimeTypeInfo> _self_, jule::Str* _99929_ident) {
	{
		auto &_match_expr{ (*(_99929_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bb03461b:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _100217_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _100333_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _100348_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab209ea5__Str(_self_, _100333_e, _100348_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_100217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bb034b9e:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _100917_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _101033_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _101048_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20a79c__Bits(_self_, _101033_e, _101048_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_100917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bb034c15:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _101617_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _101733_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _101748_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20ab98__Elem(_self_, _101733_e, _101748_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_101617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bb034c7b:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _102317_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _102433_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _102448_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20b094__Size(_self_, _102433_e, _102448_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_102317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bb034ce2:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _103017_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _103133_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _103148_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20b490__Key(_self_, _103133_e, _103148_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_103017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bb034e02:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _103717_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _103833_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _103848_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20b88b__Value(_self_, _103833_e, _103848_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_103717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bb034e68:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _104417_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _104533_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _104548_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20bc87__Fields(_self_, _104533_e, _104548_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_104417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bb034ece:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _105117_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _105233_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _105248_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20c183__Statics(_self_, _105233_e, _105248_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_105117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bb035045:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _105817_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _105933_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _105948_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab210054__Params(_self_, _105933_e, _105948_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_105817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bb0350ab:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _106517_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _106633_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _106648_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20da69__Types(_self_, _106633_e, _106648_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_106517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bb035122:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _107217_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _107333_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _107348_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20c57e__Public(_self_, _107333_e, _107348_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_107217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bb035188:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _107917_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _108033_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _108048_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20c97a__Binded(_self_, _108033_e, _108048_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_107917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bb035210:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _108617_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _108733_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _108748_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20cd76__Ordered(_self_, _108733_e, _108748_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_108617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bb035287:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _109317_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _109433_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _109448_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20d272__Comparable(_self_, _109433_e, _109448_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_109317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bb03530e:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _110017_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _110133_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _110148_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20d66d__Mutable(_self_, _110133_e, _110148_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_110017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1bb035386:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _110717_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _110833_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _110848_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20de65__Exceptional(_self_, _110833_e, _110848_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_110717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bb03540d:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _111417_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _111533_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _111548_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20e361__CanNil(_self_, _111533_e, _111548_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_111417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1bb035485:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _112117_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _112233_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _112248_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20e75c__RC(_self_, _112233_e, _112248_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_112117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bb03550c:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _112817_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _112933_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _112948_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20eb58__Result(_self_, _112933_e, _112948_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_112817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bb035584:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _113517_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _113633_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _113648_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab20a3a1__Kind(_self_, _113633_e, _113648_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_113517_method));;
			}
		}
		else {
			_case_begin_1bb034781:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb034462:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab209191_comptimeTypeInfo _Src) {
	_Stream << _1ab209515_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab210a27_Str(_1ab2106a3_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ab210d68_Equal(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Ptr<_1ab2e6525_TypeKind> _115421_other) {
	return false;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2113b8__Unwrap(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Ptr<_1ab2b7903_Eval>* _115832_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _115847_fc) {
	if (((*((*(_115847_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_115832_e)).ptr(), (*((*((*(_115847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2117b4__Type(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Ptr<_1ab2b7903_Eval>* _116630_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _116645_fc) {
	if (((*((*(_116645_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_116630_e)).ptr(), (*((*((*(_116645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_116630_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab211bb0__Lvalue(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Ptr<_1ab2b7903_Eval>* _117432_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _117447_fc) {
	if (((*((*(_117447_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_117432_e)).ptr(), (*((*((*(_117447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _117913_constant = static__1a8d058e9_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_117913_constant, &__jule_any_type19), ._field_Constant=_117913_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2120ab__Mutable(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Ptr<_1ab2b7903_Eval>* _118733_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _118748_fc) {
	if (((*((*(_118748_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_118733_e)).ptr(), (*((*((*(_118748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _119213_constant = static__1a8d058e9_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_119213_constant, &__jule_any_type19), ._field_Constant=_119213_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2124a7__Const(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Ptr<_1ab2b7903_Eval>* _120031_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _120046_fc) {
	if (((*((*(_120046_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_120031_e)).ptr(), (*((*((*(_120046_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _120513_constant = static__1a8d058e9_NewBool(_1ab2b65d3_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_120513_constant, &__jule_any_type19), ._field_Constant=_120513_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2128a3__Field(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Ptr<_1ab2b7903_Eval>* _121331_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _121346_fc) {
	if (((*((*(_121346_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_121331_e)).ptr(), (*((*((*(_121346_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _121813_s = _1ab2ea1e9_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121813_s == nullptr)) {
		_1ab2b7e53_pushErr((*(_121331_e)).ptr(), (*((*(_121346_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab19c8a4_Expr> _122313_arg = (*((*(_121346_fc))))._field_Args[0LL];;
	jule::Ptr<_1ab2b5c0e_Data> _122413_d = _1ab2d5b63_evalExpr((*(_121331_e)), _122313_arg);;
	if ((_122413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab2b65d3_IsConst(_122413_d.ptr())))) {
		_1ab2b7e53_pushErr((*(_121331_e)).ptr(), (*(_122313_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _12329_prim = _1ab2e8b76_Prim((*(_122413_d))._field_Kind.ptr());;
	if (((_12329_prim == nullptr) || (!(_1ab302586_IsStr(_12329_prim.ptr()))))) {
		_1ab2b7e53_pushErr((*(_121331_e)).ptr(), (*(_122313_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12379_ident = _1a8d0709e_ReadStr((*(_122413_d))._field_Constant.ptr());;
	jule::Ptr<_1ab1bb64d_FieldIns> _123813_f = _1ab1bd5a6_FindField(_121813_s.ptr(), _12379_ident);;
	if ((_123813_f == nullptr)) {
		_1ab2b7e53_pushErr((*(_121331_e)).ptr(), (*(_122313_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121813_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12379_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_122413_d=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_data)));
	_122413_d=_1ab2cde69_evalStructSubIdentField((*(_121331_e)).ptr(), &(_122413_d), &(_121813_s), &((*(_122313_arg))._field_Token), &(_123813_f));
	return _1ab216c70_buildComptimeValue(&(_122413_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab212be4_subIdent(jule::Ptr<_1ab2106a3_comptimeValue> _self_, jule::Str* _124829_ident) {
	{
		auto &_match_expr{ (*(_124829_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1bb077252:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _125117_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _125233_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _125248_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab2113b8__Unwrap(_self_, _125233_e, _125248_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_125117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bb0772c9:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _125817_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _125933_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _125948_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab2117b4__Type(_self_, _125933_e, _125948_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_125817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1bb077351:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _126517_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _126633_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _126648_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab211bb0__Lvalue(_self_, _126633_e, _126648_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_126517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bb0773c8:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _127217_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _127333_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _127348_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab2120ab__Mutable(_self_, _127333_e, _127348_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_127217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1bb07762b:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _127917_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _128033_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _128048_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab2124a7__Const(_self_, _128033_e, _128048_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_127917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1bb0776a3:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _128617_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _128733_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _128748_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab2128a3__Field(_self_, _128733_e, _128748_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_128617_method));;
			}
		}
		else {
			_case_begin_1bb0771ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb077153:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2106a3_comptimeValue _Src) {
	_Stream << _1ab210a27_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab213376_Str(_1ab213002_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ab2136b7_Equal(jule::Ptr<_1ab213002_comptimeFiles> _self_, jule::Ptr<_1ab2e6525_TypeKind> _130521_other) {
	return false;;
}



inline void _1ab213b3a_ready(_1ab213002_comptimeFiles* _self_, jule::Ptr<_1ab2853a4_Var>* _130929_keyA, jule::Ptr<_1ab2853a4_Var>* _130946_keyB) {
	if (((*(_130929_keyA)) != nullptr)) {
		(*((*(_130929_keyA))))._field_Constant=true;
		(*((*(_130929_keyA))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*((*((*(_130929_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_130929_keyA))))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130946_keyB)) != nullptr)) {
		(*((*(_130946_keyB))))._field_Constant=true;
		(*((*(_130946_keyB))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		(*((*(_130946_keyB))))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab2145ec_comptimeFile>(), 18)})});
	};
}



inline void _1ab214058_step(_1ab213002_comptimeFiles* _self_, jule::I64 _133123_i, jule::Ptr<_1ab2853a4_Var>* _133136_keyA, jule::Ptr<_1ab2853a4_Var>* _133153_keyB) {
	if (((*(_133136_keyA)) != nullptr)) {
		(*((*((*((*(_133136_keyA))))._field_Value))._field_Data))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_133123_i)));
		(*((*((*((*(_133136_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_133136_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_133153_keyB)) != nullptr)) {
		(*((*((*((*((*(_133153_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ab2145ec_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_133123_i];
	};
}



inline jule::I64 _1ab2142de_len(_1ab213002_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab213002_comptimeFiles _Src) {
	_Stream << _1ab213376_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab214a92_Str(_1ab2145ec_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ab214dd3_Equal(jule::Ptr<_1ab2145ec_comptimeFile> _self_, jule::Ptr<_1ab2e6525_TypeKind> _135521_other) {
	return false;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab215400__Path(jule::Ptr<_1ab2145ec_comptimeFile> _self_, jule::Ptr<_1ab2b7903_Eval>* _135930_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _135945_fc) {
	if (((*((*(_135945_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_135930_e)).ptr(), (*((*((*(_135945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _136413_constant = static__1a8d05bb3_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_136413_constant, &__jule_any_type19), ._field_Constant=_136413_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2157eb__Name(jule::Ptr<_1ab2145ec_comptimeFile> _self_, jule::Ptr<_1ab2b7903_Eval>* _137230_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _137245_fc) {
	if (((*((*(_137245_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_137230_e)).ptr(), (*((*((*(_137245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _137713_constant = static__1a8d05bb3_NewStr(_1ab189143_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_137713_constant, &__jule_any_type19), ._field_Constant=_137713_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab215be7__Dir(jule::Ptr<_1ab2145ec_comptimeFile> _self_, jule::Ptr<_1ab2b7903_Eval>* _138529_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _138544_fc) {
	if (((*((*(_138544_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_138529_e)).ptr(), (*((*((*(_138544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a8d04e26_Const> _139013_constant = static__1a8d05bb3_NewStr(_1ab188dac_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(_139013_constant, &__jule_any_type19), ._field_Constant=_139013_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab216038_subIdent(jule::Ptr<_1ab2145ec_comptimeFile> _self_, jule::Str* _139829_ident) {
	{
		auto &_match_expr{ (*(_139829_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1bb09512c:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _140117_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _140233_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _140248_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab215400__Path(_self_, _140233_e, _140248_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_140117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bb095193:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _140817_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _140933_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _140948_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab2157eb__Name(_self_, _140933_e, _140948_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_140817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1bb095209:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _141517_method = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>([=](jule::Ptr<_1ab2b7903_Eval>* _141633_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _141648_fc, jule::Ptr<_1ab2b5c0e_Data>* ) mutable -> jule::Ptr<_1ab2b5c0e_Data> {
					return _1ab215be7__Dir(_self_, _141633_e, _141648_fc);;
				}), });;
				return _1ab2163ac_buildAsComptimeMethodData(&(_141517_method));;
			}
		}
		else {
			_case_begin_1bb0950b6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb095061:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2145ec_comptimeFile _Src) {
	_Stream << _1ab214a92_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1ab262e97_Sema>*,jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*)> _1ab218e09_readyFn(jule::Ptr<_1ab218a0d_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1ab262e97_Sema>*,jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*)>([=](jule::Ptr<_1ab262e97_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>* _6439_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb0a6bdd:;
			if (it != expr_end) {
				jule::I64 _6518_i = it - expr->begin();
				jule::Ptr<_1ab1a577a_GenericDecl> _6525_g = *it;
				{
					jule::Ptr<_1ab2e4b3e_InsGeneric> _6621_generic = (*(_self_))._field_generics[_6518_i];;
					if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*(_6525_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1bb0a6bdd;
					};
					(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>::alloc(0LL, (*((*(_6525_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6525_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb0a8063:;
						if (it != expr_end) {
							jule::Ptr<_1ab198570_TypeDecl> _7129_mask = *it;
							{
								jule::I64 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
								jule::Ptr<_1ab2e6525_TypeKind> _7325_kind = _1ab26aa60_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait<_1ab31605b_Lookup>((*(_6421_sema)), 3), (*(_6439_generics)), nullptr);;
								if ((_7325_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7129_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1bb0ab9e5:;
											{
												jule::Ptr<_1ab198b7a_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.cast_ptr<_1ab198b7a_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1ab21a48d_isBuiltinConstraint(&((*(_7733_itd))._field_Ident)))) {
													_7325_kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType((*(_7733_itd))._field_Ident), 20)});
													(*((*(_6421_sema))))._field_errors=(*((*(_6421_sema))))._field_errors.slice(0LL, _7221_n);
													goto _julec_label_1bb0acbc2;
												};
											}
										}
										_match_end_1bb0ab990:;
									};
									return false;;
								};
								_julec_label_1bb0acbc2:;
								{ jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> &__jule_push_dest = (*(_6621_generic))._field_Constraint; __jule_push_dest.push(_7325_kind); };
							}
							_iter_next_1bb0a8063:;
							++it;
							goto _iter_begin_1bb0a8063;
						}
						_iter_end_1bb0a8063:;
					};
				}
				_iter_next_1bb0a6bdd:;
				++it;
				_6518_i++;
				goto _iter_begin_1bb0a6bdd;
			}
			_iter_end_1bb0a6bdd:;
		};
		return true;;
	});;
}



inline jule::Bool _1ab219190_readyFi(jule::Ptr<_1ab218a0d_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1ab2705e2_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1ab218e09_readyFn(_self_)));;
}



inline jule::Bool _1ab219426_readySi(jule::Ptr<_1ab218a0d_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1ab218e09_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1ab2196ac_ready(jule::Ptr<_1ab218a0d_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ab219190_readyFi(_self_);;
	};
	return _1ab219426_readySi(_self_);;
}



inline jule::Bool _1ab219943_check(jule::Ptr<_1ab218a0d_constraintChecker> _self_) {
	if ((!(_1ab2196ac_ready(_self_)))) {
		return false;;
	};
	_julec_label_1bb0b546b:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb0b5b20:;
		if (it != expr_end) {
			jule::I64 _12014_i = it - expr->begin();
			jule::Ptr<_1ab2e4b3e_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1bb0b5b20;
				};
				{
					auto expr = &((*(_12021_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb0b6c0e:;
					if (it != expr_end) {
						jule::Ptr<_1ab2e6525_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1ab2ee0ee_Prim> _12521_prim = _1ab2e8b76_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1ab2eec26_IsConstraint(_12521_prim.ptr()))) {
								if (_1ab21a1c4_matchConstraint(&((*(_12521_prim))._field_Kind), &((*(_12021_g))._field_Kind))) {
									goto _iter_next_1bb0b5b20;
								};
								goto _iter_next_1bb0b6c0e;
							};
							if (_1ab2e6c2e_Equal(_12425_c2, (*(_12021_g))._field_Kind)) {
								goto _iter_next_1bb0b5b20;
							};
						}
						_iter_next_1bb0b6c0e:;
						++it;
						goto _iter_begin_1bb0b6c0e;
					}
					_iter_end_1bb0b6c0e:;
				};
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_12021_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1ab219d0b_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1bb0b5b20:;
			++it;
			_12014_i++;
			goto _iter_begin_1bb0b5b20;
		}
		_iter_end_1bb0b5b20:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab218a0d_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab21b22a_IsTraitImpl(_1ab21ad62_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ab21b4b1_IsStructImpl(_1ab21ad62_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab21ad62_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2212b8_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2216d6_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2219d3_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab221e01_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2221ed_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2226a4_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab223100_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab223485_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab22385e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab223b5b_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab224035_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab22440e_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2248b5_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab224c8e_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2253ee_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab226037_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab226631_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2269b6_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab227126_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2276a9_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab228a62_SelectPackage(_1ab2285bc_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _45832_selector) {
	return _1ab26343c_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab228e5d_FindVar(_1ab2285bc_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1ab2853a4_Var> _47213_v = _1ab2b302a_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1ab2b302a_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1bb103a4d:;
	}
	_iter_end_1bb103a4d:;;
	return _1ab263838_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab229359_FindTypeAlias(_1ab2285bc_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1ab2e5733_TypeAlias> _49913_ta = _1ab2b34d1_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1ab2b34d1_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1bb106a62:;
	}
	_iter_end_1bb106a62:;;
	return _1ab263c34_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1ab1b9470_Struct> _1ab229755_FindStruct(_1ab2285bc_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1ab264130_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab229b51_FindFn(_1ab2285bc_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1ab26452b_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab229e92_FindTrait(_1ab2285bc_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1ab26486c_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab22a2d3_FindEnum(_1ab2285bc_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1ab264bad_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab22a624_FindTypeEnum(_1ab2285bc_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1ab264eee_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1ab22a976_isUnsafe(jule::Ptr<_1ab2285bc_scopeChecker> _self_) {
	jule::Ptr<_1ab2285bc_scopeChecker> _56513_scope = _self_;;
	_julec_label_1bb10b6c1:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1bb10b6c1;
	};
	return false;;
}



inline jule::Bool _1ab22ac0c_isRoot(_1ab2285bc_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ab22ae0a_stop(_1ab2285bc_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ab22b191_stopped(_1ab2285bc_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ab22b427_isDeferred(jule::Ptr<_1ab2285bc_scopeChecker> _self_) {
	jule::Ptr<_1ab2285bc_scopeChecker> _59813_scope = _self_;;
	_julec_label_1bb10ea48:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1bb10ea48;
	};
	return false;;
}



inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab22b6ad_getRoot(jule::Ptr<_1ab2285bc_scopeChecker> _self_) {
	jule::Ptr<_1ab2285bc_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1bb1119d4:;
	}
	_iter_end_1bb1119d4:;;
	return _61613_root;;
}



inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab22b944_getHardRoot(jule::Ptr<_1ab2285bc_scopeChecker> _self_) {
	jule::Ptr<_1ab2285bc_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1bb112d37:;
	}
	_iter_end_1bb112d37:;;
	return _62613_root;;
}



inline jule::Ptr<_1ab223b5b_Label> _1ab22bc85_findLabel(_1ab2285bc_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb113bb2:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1bb1147ea:;
						{
							jule::Ptr<_1ab223b5b_Label> _64021_label = _63721_st.cast_ptr<_1ab223b5b_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1bb114795:;
				};
			}
			_iter_next_1bb113bb2:;
			++it;
			goto _iter_begin_1bb113bb2;
		}
		_iter_end_1bb113bb2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab227126_scopeLabel> _1ab22c0c6_findLabelScope(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1ab227126_scopeLabel> _65313_label = _1ab22c417_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab227126_scopeLabel> _1ab22c417_findLabelAll(_1ab2285bc_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb116bc6:;
		if (it != expr_end) {
			jule::Ptr<_1ab227126_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1bb116bc6:;
			++it;
			goto _iter_begin_1bb116bc6;
		}
		_iter_end_1bb116bc6:;
	};
	return nullptr;;
}



inline jule::Bool _1ab22c813_isDuplicatedIdent(_1ab2285bc_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1ab2853a4_Var> _6779_v = _1ab228e5d_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1ab26540b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1ab2e5733_TypeAlias> _6859_ta = _1ab229359_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1ab26540b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1ab22cabb_checkVarDecl(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ab3da_VarDecl> _69636_decl) {
	jule::Ptr<_1ab2853a4_Var> _69713_v = _1ab1da969_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1ab22c813_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ab22ae0a_stop(_self_.ptr());
		return;;
	};
	_1ab2782cb_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1ab31605b_Lookup>(_self_, 0));
	if (((!(_1ab2859c0_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1ab27ba71_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1ab31605b_Lookup>(_self_, 0));
	if (((!(_1ab285739_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ab233d36_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1ab27b70d_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1ab22cd74_checkTypeAlias(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab2e5733_TypeAlias>* _72739_ta) {
	if (_1ab22c813_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ab22ae0a_stop(_self_.ptr());
		return;;
	};
	_1ab27235d_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1ab31605b_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1ab22ae0a_stop(_self_.ptr());
	};
}



inline void _1ab22d12c_checkTypeAliasDecl(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1b008c_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1ab2e5733_TypeAlias> _74413_ta = _1ab1d7438_buildTypeAlias(_74342_decl);;
	_1ab22cd74_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1ab2212b8_Scope> _1ab22d3b3_getChild(_1ab2285bc_scopeChecker* _self_) {
	return jule::new_ptr<_1ab2212b8_Scope>(_1ab2212b8_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1ab22d7d1_checkChildSsc(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a8591_ScopeTree>* _75438_tree, jule::Ptr<_1ab2212b8_Scope>* _75461_s, jule::Ptr<_1ab2285bc_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1ab239cc6_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1ab2212b8_Scope> _1ab22dbcc_checkChildSc(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a8591_ScopeTree>* _75937_tree, jule::Ptr<_1ab2285bc_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1ab2212b8_Scope> _76013_s = _1ab22d3b3_getChild(_self_.ptr());;
	_1ab22d7d1_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1ab2212b8_Scope> _1ab22e01d_checkChild(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a8591_ScopeTree>* _76535_tree) {
	jule::Ptr<_1ab2285bc_scopeChecker> _76613_ssc = _1ab23a05c_newChildChecker(_self_);;
	return _1ab22dbcc_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1ab22e2c6_checkAnonScope(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a8591_ScopeTree> _77038_tree) {
	jule::Ptr<_1ab2212b8_Scope> _77113_s = _1ab22e01d_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1ab22e639_processErrorCall(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1ab182e72_Token> _77572_err) {
	if (_1ab22b427_isDeferred(_self_)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _78013_root = _1ab22b6ad_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1ab22e8e2_checkExpr(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab19c8a4_Expr> _78833_expr) {
	jule::Ptr<_1ab2b7903_Eval> _78913_eval = _1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1ab2b5c0e_Data> _79113_d = _1ab2d5b63_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bb1344da:;
			{
				jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1ab22e639_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1bb134e9c:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1bb134b39:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb134ad4:;
	};
}



inline jule::Ptr<_1ab2216d6_If> _1ab22ec33_checkIf(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1adec0_If> _81931_i) {
	jule::Ptr<_1ab2212b8_Scope> _82013_s = _1ab22e01d_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1ab2b5c0e_Data> _82213_d = _1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _82713_prim = _1ab2e8b76_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1ab302300_IsBool(_82713_prim.ptr()))))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab2216d6_If>(_1ab2216d6_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1ab2219d3_Else> _1ab230074_checkElse(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ae399_Else> _83933_e) {
	return jule::new_ptr<_1ab2219d3_Else>(_1ab2219d3_Else{._field_Scope=_1ab22e01d_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1ab23032c_checkConditional(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ae850_Conditional> _84540_conditional) {
	jule::Ptr<_1ab221e01_Conditional> _84613_c = jule::new_ptr<_1ab221e01_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1ab2216d6_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1ab2216d6_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1ab22ec33_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb141a58:;
		if (it != expr_end) {
			jule::Ptr<_1ab1adec0_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab2216d6_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1ab22ec33_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1bb141a58:;
			++it;
			goto _iter_begin_1bb141a58;
		}
		_iter_end_1bb141a58:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1ab230074_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1ab230805_checkIterScopeSsc(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1ab1a8591_ScopeTree> _86154_tree, jule::Ptr<_1ab2212b8_Scope>* _86177_s, jule::Ptr<_1ab2285bc_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1ab22d7d1_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1ab2212b8_Scope> _1ab230cab_checkIterScopeSc(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1ab1a8591_ScopeTree> _86653_tree, jule::Ptr<_1ab2285bc_scopeChecker> _86675_ssc) {
	jule::Ptr<_1ab2212b8_Scope> _86713_scope = _1ab22d3b3_getChild(_self_.ptr());;
	_1ab230805_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1ab2212b8_Scope> _1ab2311a7_checkIterScope(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1ab1a8591_ScopeTree>* _87252_tree) {
	jule::Ptr<_1ab2285bc_scopeChecker> _87313_ssc = _1ab23a05c_newChildChecker(_self_);;
	return _1ab230cab_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1ab231460_checkInfIter(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ac034_Iter>* _87737_it) {
	jule::Ptr<_1ab2221ed_InfIter> _87813_kind = jule::new_ptr<_1ab2221ed_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1ab2311a7_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1ab231718_checkWhileIter(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ac034_Iter>* _88339_it) {
	jule::Ptr<_1ab1ac85e_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1ab1ac85e_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1ab231460_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1ab2226a4_WhileIter> _89013_kind = jule::new_ptr<_1ab2226a4_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1ab2311a7_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1ab2b5c0e_Data> _89517_d = _1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ab2ee0ee_Prim> _90013_prim = _1ab2e8b76_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ab302300_IsBool(_90013_prim.ptr())))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1ab1acbc2_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1ab2207c3_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1ab23890c_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1ab220a8c_isValidStForNextSt(&(_92321_st))))) {
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1ab231b36_checkComptimeRangeIter(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ac034_Iter>* _93347_it, jule::Ptr<_1ab223100_RangeIter>* _93363_kind, jule::Ptr<_1ab2b5c0e_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ab26540b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab22c813_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ab26540b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab22c813_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1ab1ad266_RangeKind> _94713_rang = (*((*(_93347_it))))._field_Kind.cast_ptr<_1ab1ad266_RangeKind>(&__jule_any_type39);;
	_1ab23a612_makeComptimeRange(_93386_d);
	if ((*((*(_93386_d))))._field_Decl) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_94713_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_93386_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1ab2aac8c_rangeChecker _95413_rc = _1ab2aac8c_rangeChecker{._field_sc=_self_, ._field_rang=_94713_rang, ._field_Kind=(*(_93363_kind)), ._field_d=(*(_93386_d))};;
	jule::Bool _9609_ok = _1ab2acca0_check(&_95413_rc);;
	if ((!(_9609_ok))) {
		return;;
	};
	jule::Ptr<_1ab1e9758_comptimeRange> _96513_comptime = _1ab2ec020_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1ab1e9538_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1ab1e8c30_ready((*(_96513_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _96713_i = 0LL;;
	jule::I64 _9689_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_96713_i < _1ab1e9538_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1ab1e93d4_len((*(_96513_comptime))._field_kind)); (_96713_i)++) {
		{
			jule::Ptr<_1ab2285bc_scopeChecker> _97017_ssc = _1ab23a05c_newChildChecker(_self_);;
			jule::Ptr<_1ab2212b8_Scope> _97117_scope = _1ab22d3b3_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_97117_scope;
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_97017_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1ab1e9538_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1ab1e914d_step((*(_96513_comptime))._field_kind, _96713_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1ab22d7d1_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_97117_scope), &(_97017_ssc));
			if ((_9689_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1bb167166;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_97117_scope, &__jule_any_type22)); };
		}
	_iter_next_1bb167166:;
	}
	_iter_end_1bb167166:;;
}



inline void _1ab231dde_checkRangeIter(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ac034_Iter>* _99039_it) {
	jule::Ptr<_1ab1ad266_RangeKind> _99113_rang = (*((*(_99039_it))))._field_Kind.cast_ptr<_1ab1ad266_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1ab2b5c0e_Data> _99313_d = _1ab2d5822_evalExpr1(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*(_99113_rang))._field_Expr);;
	if ((_99313_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab223100_RangeIter> _99813_kind = jule::new_ptr<_1ab223100_RangeIter>(_1ab223100_RangeIter{._field_Expr=_99313_d, });;
	if ((*((*(_99039_it))))._field_Comptime) {
		_1ab231b36_checkComptimeRangeIter(_self_, _99039_it, &(_99813_kind), &(_99313_d));
		return;;
	};
	if (_1ab2eac33_comptime((*(_99313_d))._field_Kind.ptr())) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_99113_rang))._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1ab2aac8c_rangeChecker _101213_rc = _1ab2aac8c_rangeChecker{._field_sc=_self_, ._field_rang=_99113_rang, ._field_Kind=_99813_kind, ._field_d=_99313_d};;
	jule::Bool _10189_ok = _1ab2acca0_check(&_101213_rc);;
	if ((!(_10189_ok))) {
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_99813_kind, &__jule_any_type40)); };
	jule::Ptr<_1ab2285bc_scopeChecker> _102513_ssc = _1ab23a05c_newChildChecker(_self_);;
	jule::Ptr<_1ab2212b8_Scope> _102613_scope = _1ab22d3b3_getChild(_self_.ptr());;
	if (((*(_99813_kind))._field_KeyA != nullptr)) {
		if (((!(_1ab26540b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab22c813_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyA))._field_Ident)))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyA))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyA); };
	};
	if (((*(_99813_kind))._field_KeyB != nullptr)) {
		if (((!(_1ab26540b_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ab22c813_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_99813_kind))._field_KeyB))._field_Ident)))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_99813_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_99813_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_99813_kind))._field_KeyB))._field_Scope=_102613_scope;
		{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_102513_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_99813_kind))._field_KeyB); };
	};
	_1ab230805_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_99813_kind)), (*((*(_99039_it))))._field_Scope, &(_102613_scope), _102513_ssc);
	(*(_99813_kind))._field_Scope=_102613_scope;
}



inline void _1ab232197_checkIter(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ac034_Iter> _105033_it) {
	if (_1ab1ac397_IsInf(_105033_it.ptr())) {
		if ((*(_105033_it))._field_Comptime) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1ab231460_checkInfIter(_self_, &(_105033_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_105033_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bb180316:;
			{
				if ((*(_105033_it))._field_Comptime) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_105033_it))._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1ab231718_checkWhileIter(_self_, &(_105033_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bb180d94:;
			{
				_1ab231dde_checkRangeIter(_self_, &(_105033_it));
			}
		}
		else {
			_case_begin_1bb1808bb:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1bb180866:;
	};
}



inline jule::Bool _1ab2324d8_checkValidContLabel(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Uintptr _107439_it) {
	jule::Ptr<_1ab2285bc_scopeChecker> _107513_scope = _self_;;
	_julec_label_1bb1827ad:;
	if (((*(_107513_scope))._field_it == _107439_it)) {
		return true;;
	};
	if (((*(_107513_scope))._field_parent != nullptr)) {
		_107513_scope=(*(_107513_scope))._field_parent;
		goto _julec_label_1bb1827ad;
	};
	return false;;
}



inline jule::Bool _1ab232829_checkValidBreakLabel(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Uintptr _109040_ptr) {
	jule::Ptr<_1ab2285bc_scopeChecker> _109113_scope = _self_;;
	_julec_label_1bb185085:;
	if (((*(_109113_scope))._field_it == _109040_ptr)) {
		return true;;
	};
	if (((*(_109113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _109913_mtch = static_cast<jule::Uintptr>((*(((_1ab226037_Case*)((*(_109113_scope))._field_cse))))._field_Owner);;
		if ((_109913_mtch == _109040_ptr)) {
			return true;;
		};
	};
	if (((*(_109113_scope))._field_parent != nullptr)) {
		_109113_scope=(*(_109113_scope))._field_parent;
		goto _julec_label_1bb185085;
	};
	return false;;
}



inline jule::Ptr<_1ab223485_ContSt> _1ab232b6a_checkContValidScope(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ada19_ContSt> _111339_c) {
	if (_1ab22b427_isDeferred(_self_)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_111339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1ab223485_ContSt>();;
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _112313_scope = _self_;;
	_julec_label_1bb187d79:;
	{
		
		if (((((*(_112313_scope))._field_it == 0LLU) && ((*(_112313_scope))._field_parent != nullptr)) && ((*(_112313_scope))._field_owner == nullptr))) {
			_case_begin_1bb189b7d:;
			{
				_112313_scope=(*(_112313_scope))._field_parent;
				goto _julec_label_1bb187d79;
			}
		}
		else if (((*(_112313_scope))._field_it != 0LLU)) {
			_case_begin_1bb189c05:;
			{
				return jule::new_ptr<_1ab223485_ContSt>(_1ab223485_ContSt{._field_It=(*(_112313_scope))._field_it});;
			}
		}
		_match_end_1bb189ac3:;
	};
	_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab232e23_checkCont(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ada19_ContSt> _113729_c) {
	jule::Ptr<_1ab223485_ContSt> _113813_cont = _1ab232b6a_checkContValidScope(_self_, _113729_c);;
	if ((_113813_cont == nullptr)) {
		return;;
	};
	if (((*(_113729_c))._field_Label != nullptr)) {
		jule::Ptr<_1ab227126_scopeLabel> _114417_label = _1ab21d7d2_findLabelParent(&((*((*(_113729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_114417_label == nullptr)) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_114417_label))._field_used=true;
		if ((((*(_114417_label))._field_pos + 1LL) >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _115713_i = ((*(_114417_label))._field_pos + 1LL);;
		if ((_115713_i >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _116121_st = (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts[_115713_i];;
			{
				auto &_match_expr{ _116121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1bb1957e3:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1ab2221ed_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1bb1954e6:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1ab223100_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1bb19555c:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_116121_st.cast_ptr<_1ab2226a4_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1bb195480:;
					{
						_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1bb19542a:;
			};
		};
	};
	if (((*(_113813_cont))._field_It != 0LLU)) {
		if ((!(_1ab2324d8_checkValidContLabel(_self_, (*(_113813_cont))._field_It)))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_113729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_113729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_113813_cont, &__jule_any_type41)); };
}



inline void _1ab2331cb_checkLabel(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a5b54_LabelSt> _118434_l) {
	if ((_1ab22bc85_findLabel(_self_.ptr(), &((*(_118434_l))._field_Ident)) != nullptr)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_118434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_118434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ab223b5b_Label> _119013_label = jule::new_ptr<_1ab223b5b_Label>(_1ab223b5b_Label{._field_Ident=(*(_118434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_119013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1ab227126_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1ab227126_scopeLabel>(_1ab227126_scopeLabel{._field_token=(*(_118434_l))._field_Token, ._field_label=_119013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1ab233484_pushGoto(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a602d_GotoSt> _120332_gt) {
	jule::Ptr<_1ab224035_GotoSt> _120413_st = jule::new_ptr<_1ab224035_GotoSt>(_1ab224035_GotoSt{._field_Ident=(*((*(_120332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_120413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1ab2276a9_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1ab2276a9_scopeGoto>(_1ab2276a9_scopeGoto{._field_st=_120413_st, ._field_gt=_120332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1ab23373c_checkPostfix(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a701d_AssignSt> _121736_a) {
	if (((*(_121736_a))._field_Left.len() > 1LL)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab19c8a4_Expr> _122313_expr = (*((*(_121736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1ab2b5c0e_Data> _122413_d = _1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), _122313_expr);;
	if ((_122413_d == nullptr)) {
		return;;
	};
	_1ab220509_checkAssign(&((*(_self_))._field_s), &(_122413_d), nullptr, (*(_121736_a))._field_Setter);
	if ((_1ab2e9193_Ptr((*(_122413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab3063e2_Ptr> _123217_ptr = _1ab2e9193_Ptr((*(_122413_d))._field_Kind.ptr());;
		if (_1ab306e2b_IsUnsafe(_123217_ptr.ptr())) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1ab2e8b76_Prim((*(_122413_d))._field_Kind.ptr()) == nullptr) || (!(_1a8d0482c_IsNum((*(_1ab2e8b76_Prim((*(_122413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_121736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_121736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ab22440e_Postfix>(_1ab22440e_Postfix{._field_Expr=(*(_122413_d))._field_Model, ._field_Op=(*((*(_121736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1ab233a7d_isNewAssignIdent(_1ab2285bc_scopeChecker* _self_, jule::Str _125035_ident) {
	if ((_1ab1858d1_IsIgnoreIdent(_125035_ident) || (_125035_ident).empty())) {
		return false;;
	};
	return (_1ab2b38cc_defByIdent((*(_self_))._field_table.ptr(), &(_125035_ident), false) == nullptr);;
}



inline void _1ab233d36_removeInteriorMutRisk(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab2b5c0e_Data>* _126346_d) {
	jule::Ptr<_1ab1bc1ed_StructIns> _12649_s = _1ab2ea1e9_Struct((*((*(_126346_d))))._field_Kind.ptr());;
	if ((_12649_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _12689_root = _1ab22b944_getHardRoot(_self_);;
	if (((*((*(_12689_root))._field_owner))._field_Owner != _12649_s)) {
		return;;
	};
	(*((*(_126346_d))))._field_Mutable=true;
}



inline jule::Bool _1ab2342dc_checkStructureAssignOp(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _127747_s, jule::Ptr<_1ab1a701d_AssignSt>* _127767_a, jule::Ptr<_1ab2b5c0e_Data>* _127786_r) {
	jule::Ptr<_1ab1d2312_FnIns> _128017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_127767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bb1b0b2c:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1bb1b27ee:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bb1b2865:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1bb1b126a:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bb1b12d1:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1bb1b1347:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1bb1b13ad:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1bb1b2953:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1bb1b29b9:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1bb1b2a30:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1bb1b1204:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab1bc572_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1bb1b119e:;
	};
	if ((_128017_overload == nullptr)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ab1bc572_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ab1d1366_ParamIns> _131213_p = (*(_128017_overload))._field_Params[1LL];;
	return _1ab26d5e0_checkAssignType((*(_self_))._field_s, (*((*(_131213_p))._field_Decl))._field_Reference, &((*(_131213_p))._field_Kind), _127786_r, (*((*(_127767_a))))._field_Setter);;
}



inline void _1ab234595_checkSingleAssign(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a701d_AssignSt>* _131642_a) {
	jule::Ptr<_1ab2b5c0e_Data> _131717_l = nullptr;;
	if ((!(_1ab1858d1_IsIgnoreIdent((*((*((*(_131642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1ab19c8a4_Expr> _132017_expr = (*((*((*(_131642_a))))._field_Left[0LL]))._field_Expr;;
		_131717_l=_1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), _132017_expr);
		if ((_131717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ab2b7903_Eval> _132717_eval = nullptr;;
	if ((_131717_l != nullptr)) {
		_132717_eval=_1ab26cc3d_evalp((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0), (*(_131717_l))._field_Kind);
	} else {
		_132717_eval=_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0));
	};
	(*(_132717_eval))._field_unsafety=_1ab22a976_isUnsafe(_self_);
	jule::Ptr<_1ab2b5c0e_Data> _133413_r = _1ab2d5b63_evalExpr(_132717_eval, (*((*(_131642_a))))._field_Right);;
	if ((_133413_r == nullptr)) {
		return;;
	};
	_1ab233d36_removeInteriorMutRisk(_self_, &(_133413_r));
	if ((_131717_l == nullptr)) {
		if (_1ab2e7889_Void((*(_133413_r))._field_Kind.ptr())) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_131642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_133413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1ab220509_checkAssign(&((*(_self_))._field_s), &(_131717_l), _133413_r, (*((*(_131642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1ab2ea99c_Tup((*(_133413_r))._field_Kind.ptr()) != nullptr)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_131642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab1c119c_OperandExprModel> _135813_lm = jule::new_ptr<_1ab1c119c_OperandExprModel>(_1ab1c119c_OperandExprModel{._field_Kind=(*(_131717_l))._field_Kind, ._field_Model=(*(_131717_l))._field_Model});;
	jule::Ptr<_1ab1c119c_OperandExprModel> _136213_rm = jule::new_ptr<_1ab1c119c_OperandExprModel>(_1ab1c119c_OperandExprModel{._field_Kind=(*(_133413_r))._field_Kind, ._field_Model=(*(_133413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ab2248b5_Assign>(_1ab2248b5_Assign{._field_L=_135813_lm, ._field_R=_136213_rm, ._field_Op=(*((*(_131642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_131642_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ab29e599_assignTypeChecker _136917_checker = _1ab29e599_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_131717_l))._field_Kind, ._field_d=_133413_r, ._field_errorToken=(*((*(_131642_a))))._field_Setter};;
		if (_1ab2a080e_check(&_136917_checker)) {
			(*(_136213_rm))._field_Model=(*(_133413_r))._field_Model;
			(*(_135813_lm))._field_Model=(*(_131717_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _138113_strct = _1ab2ea1e9_Struct((*(_131717_l))._field_Kind.ptr());;
	if ((_138113_strct != nullptr)) {
		_1ab2342dc_checkStructureAssignOp(_self_, &(_138113_strct), _131642_a, &(_133413_r));
		return;;
	};
	jule::U64 _13869_id = (*((*((*(_131642_a))))._field_Setter))._field_Id;;
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_1ab23a3d1_removeEqFromOp((*((*((*(_131642_a))))._field_Setter))._field_Id);
	_1ab2d80b6_binaryEval _138813_solver = static__1ab2d89e0_new(_132717_eval, (*((*(_131642_a))))._field_Setter);;
	({
		jule::Ptr<_1ab2b5c0e_Data> ___jule_assign_arg = _131717_l;
		jule::Ptr<_1ab2b5c0e_Data> _1___jule_assign_arg = _133413_r;
		_138813_solver._field_l = ___jule_assign_arg;
		_138813_solver._field_r = _1___jule_assign_arg;
	});
	_1ab2dcb37_evalOp(&_138813_solver);
	(*((*((*(_131642_a))))._field_Setter))._field_Id=_13869_id;
}



inline void _1ab234b28_processEndPartOfMultiAssign(_1ab2285bc_scopeChecker* _self_, jule::Ptr<_1ab224c8e_MultiAssign>* _139451_st, jule::Ptr<_1ab1a701d_AssignSt>* _139514_a, jule::Ptr<_1ab1a698a_AssignLeft>* _139533_lexpr, jule::Ptr<_1ab2b5c0e_Data>* _139558_l, jule::Ptr<_1ab2b5c0e_Data>* _139573_r) {
	if (((!((*((*(_139533_lexpr))))._field_Reference)) && _1ab1858d1_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident))) {
		if (_1ab2e7889_Void((*((*(_139573_r))))._field_Kind.ptr())) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_139514_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_139514_a))))._field_Declarative && ((*((*(_139533_lexpr))))._field_Reference || _1ab233a7d_isNewAssignIdent(_self_, (*((*(_139533_lexpr))))._field_Ident)))) {
		if (_1ab22c813_isDuplicatedIdent(_self_, 0LLU, &((*((*(_139533_lexpr))))._field_Ident))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1ab22ae0a_stop(_self_);
			return;;
		};
		if (_1ab1858d1_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident)) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab2853a4_Var> _141617_v = jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_139533_lexpr))))._field_Token, ._field_Ident=(*((*(_139533_lexpr))))._field_Ident, ._field_Mutable=(*((*(_139533_lexpr))))._field_Mutable, ._field_Reference=(*((*(_139533_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Expr=(*((*(_139514_a))))._field_Right, ._field_Data=(*(_139573_r))}), });;
		_1ab27b70d_checkVarValue((*(_self_))._field_s, &(_141617_v));
		(*(_141617_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=(*((*(_141617_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_141617_v))._field_Mutable, ._field_Reference=(*(_141617_v))._field_Reference, ._field_Lvalue=(!((*(_141617_v))._field_Constant)), ._field_Model=jule::Any(_141617_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_141617_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_141617_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_139533_lexpr))))._field_Mutable || (*((*(_139533_lexpr))))._field_Reference)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1ab220509_checkAssign(&((*(_self_))._field_s), _139558_l, (*(_139573_r)), (*((*(_139533_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1ab271aee_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_139558_l))))._field_Mutable, false, &((*((*(_139558_l))))._field_Kind), _139573_r, &((*((*(_139514_a))))._field_Setter));
	_1ab29e599_assignTypeChecker _145913_checker = _1ab29e599_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_139558_l))))._field_Kind, ._field_d=(*(_139573_r)), ._field_errorToken=(*((*(_139514_a))))._field_Setter};;
	_1ab2a080e_check(&_145913_checker);
	{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push((*(_139558_l))); };
}



inline void _1ab234dd1_checkMultiAssign(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a701d_AssignSt>* _146941_a) {
	jule::Ptr<_1ab2b5c0e_Data> _147013_rd = _1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*((*(_146941_a))))._field_Right);;
	if ((_147013_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _147413_right = _1ab21e65c_getDatasFromTupleData(&(_147013_rd));;
	if ((_147413_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_147413_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1bb1de1cc:;
				{
					jule::Ptr<_1ab1c4007_IndexingExprModel> _147821_iem = (*(_147413_right[0LL]))._field_Model.cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45);;
					if ((_1ab2ea716_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_147413_right=jule::Slice<jule::Ptr<_1ab2b5c0e_Data>>::make({jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=(*(_1ab2ea716_Map((*((*(_147821_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, })});
					};
				}
			}
			_match_end_1bb1de133:;
		};
	};
	{
		
		if (((*((*(_146941_a))))._field_Left.len() > _147413_right.len())) {
			_case_begin_1bb1ddb6b:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_146941_a))))._field_Left.len() < _147413_right.len())) {
			_case_begin_1bb1de52e:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_146941_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bb1dd0ee:;
	};
	jule::Ptr<_1ab224c8e_MultiAssign> _149713_st = jule::new_ptr<_1ab224c8e_MultiAssign>(_1ab224c8e_MultiAssign{._field_R=(*(_147013_rd))._field_Model});;
	{
		auto expr = &((*((*(_146941_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1e3d08:;
		if (it != expr_end) {
			jule::I64 _150013_i = it - expr->begin();
			{
				jule::Ptr<_1ab1a698a_AssignLeft> _150117_lexpr = (*((*(_146941_a))))._field_Left[_150013_i];;
				jule::Ptr<_1ab2b5c0e_Data> _150221_l = nullptr;;
				if (((!(_1ab1858d1_IsIgnoreIdent((*(_150117_lexpr))._field_Ident))) && ((!((*((*(_146941_a))))._field_Declarative)) || (!(_1ab233a7d_isNewAssignIdent(_self_.ptr(), (*(_150117_lexpr))._field_Ident)))))) {
					_150221_l=_1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*(_150117_lexpr))._field_Expr);
					if ((_150221_l == nullptr)) {
						goto _iter_next_1bb1e3d08;
					};
				};
				jule::Ptr<_1ab2b5c0e_Data> _151017_r = _147413_right[_150013_i];;
				_1ab233d36_removeInteriorMutRisk(_self_, &(_151017_r));
				_1ab234b28_processEndPartOfMultiAssign(_self_.ptr(), &(_149713_st), _146941_a, &(_150117_lexpr), &(_150221_l), &(_151017_r));
			}
			_iter_next_1bb1e3d08:;
			++it;
			_150013_i++;
			goto _iter_begin_1bb1e3d08;
		}
		_iter_end_1bb1e3d08:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_149713_st, &__jule_any_type46)); };
}



inline void _1ab235189_checkAssignSt(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a701d_AssignSt> _151737_a) {
	{
		
		if (_1ab187b14_IsPostfixOp((*((*(_151737_a))._field_Setter))._field_Id)) {
			_case_begin_1bb1e94e5:;
			{
				_1ab23373c_checkPostfix(_self_, _151737_a);
			}
		}
		else if (((*(_151737_a))._field_Left.len() == 1LL)) {
			_case_begin_1bb1e8a55:;
			{
				_1ab234595_checkSingleAssign(_self_, &(_151737_a));
			}
		}
		else {
			_case_begin_1bb1e89de:;
			{
				_1ab234dd1_checkMultiAssign(_self_, &(_151737_a));
			}
		}
		_match_end_1bb1e8923:;
	};
}



inline jule::Ptr<_1ab2212b8_Scope> _1ab235585_checkCaseScope(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab226037_Case>* _152835_c, jule::Ptr<_1ab1a8591_ScopeTree>* _152850_tree) {
	jule::Ptr<_1ab2285bc_scopeChecker> _152913_ssc = _1ab23a05c_newChildChecker(_self_);;
	(*(_152913_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_152835_c))));
	return _1ab22dbcc_checkChildSc(_self_, _152850_tree, &(_152913_ssc));;
}



inline jule::Ptr<_1ab226037_Case> _1ab235ae6_checkCase(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab2253ee_Match> _153433_m, jule::I64 _153444_i, jule::Ptr<_1ab1b0543_Case> _153456_c, jule::Ptr<_1ab2b5c0e_Data> _153475_expr) {
	jule::Ptr<_1ab226037_Case> _153513_case = (*(_153433_m))._field_Cases[_153444_i];;
	(*(_153513_case))._field_Exprs=jule::Slice<jule::Ptr<_1ab2b5c0e_Data>>::alloc(0LL, (*(_153456_c))._field_Exprs.len());
	jule::Bool _153713_constMatched = false;;
	jule::Ptr<_1ab2b7903_Eval> _153813_eval = _1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_153456_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1eead3:;
		if (it != expr_end) {
			jule::Ptr<_1ab19c8a4_Expr> _153921_e = *it;
			{
				jule::Ptr<_1ab2b5c0e_Data> _154017_d = _1ab2d4d4e_evalExprKind(_153813_eval, (*(_153921_e))._field_Kind);;
				if ((_154017_d == nullptr)) {
					goto _iter_next_1bb1eead3;
				};
				if ((*(_153433_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
					if ((_1ab21e393_countMatchType(&(_153433_m), &((*(_154017_d))._field_Kind)) > 1LL)) {
						_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_154017_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*(_153433_m))._field_Comptime) {
						_153713_constMatched=(_153713_constMatched || _1ab2e6c2e_Equal((*(_153475_expr))._field_Kind, (*(_154017_d))._field_Kind));
					} else {
						if ((_1ab2e96b0_TypeEnum((*(_153475_expr))._field_Kind.ptr()) != nullptr)) {
							_1ab26da96_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
						} else {
							jule::Ptr<_1ab1e26da_Trait> _155925_trt = _1ab2ea480_Trait((*(_153475_expr))._field_Kind.ptr());;
							if ((_155925_trt != nullptr)) {
								_1ab26da96_checkTypeCompatibility((*(_self_))._field_s, &((*(_153475_expr))._field_Kind), &((*(_154017_d))._field_Kind), &((*(_153921_e))._field_Token));
							};
						};
					};
					goto _iter_next_1bb1eead3;
				};
				if ((*(_154017_d))._field_Decl) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1bb1eead3;
				};
				if ((*(_153433_m))._field_Comptime) {
					if (((!(_1ab2b65d3_IsConst(_154017_d.ptr()))) && (_1ab2ec53c_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
						_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_153921_e))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1bb1eead3;
					};
					if ((!(_153713_constMatched))) {
						if (_1ab2b65d3_IsConst(_154017_d.ptr())) {
							_153713_constMatched=(_1ab2b65d3_IsConst(_153475_expr.ptr()) && _1a8d0a9cb_Eq((*(_154017_d))._field_Constant.ptr(), (*((*(_153475_expr))._field_Constant))));
						} else {
							jule::Ptr<_1ab209191_comptimeTypeInfo> _158425_exprCti = _1ab2ec53c_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr());;
							_153713_constMatched=((_158425_exprCti != nullptr) && _1ab2e6c2e_Equal((*(_1ab2ec53c_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr())))._field_base, (*(_158425_exprCti))._field_base));
						};
					};
				};
				{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = (*(_153513_case))._field_Exprs; __jule_push_dest.push(_154017_d); };
				if ((((!((*(_153433_m))._field_Comptime)) || (_1ab2ec53c_comptimeTypeInfo((*(_153475_expr))._field_Kind.ptr()) == nullptr)) || (_1ab2ec53c_comptimeTypeInfo((*(_154017_d))._field_Kind.ptr()) == nullptr))) {
					_1ab29e599_assignTypeChecker _159421_checker = _1ab29e599_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_153475_expr))._field_Kind, ._field_d=_154017_d, ._field_errorToken=(*(_153921_e))._field_Token};;
					_1ab2a080e_check(&_159421_checker);
				};
			}
			_iter_next_1bb1eead3:;
			++it;
			goto _iter_begin_1bb1eead3;
		}
		_iter_end_1bb1eead3:;
	};
	if (((!((*(_153433_m))._field_Comptime)) || _153713_constMatched)) {
		(*(_153513_case))._field_Scope=_1ab235585_checkCaseScope(_self_, &(_153513_case), &((*(_153456_c))._field_Scope));
	};
	return _153513_case;;
}



inline void _1ab236014_checkCases(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1b0d5c_MatchCase>* _160935_m, jule::Ptr<_1ab2253ee_Match> _160954_rm, jule::Ptr<_1ab2b5c0e_Data> _160970_expr) {
	(*(_160954_rm))._field_Cases=jule::Slice<jule::Ptr<_1ab226037_Case>>::alloc(0LL, (*((*(_160935_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb21209b:;
		if (it != expr_end) {
			jule::I64 _161113_i = it - expr->begin();
			{
				jule::Ptr<_1ab226037_Case> _161217_case = jule::new_ptr<_1ab226037_Case>(_1ab226037_Case{._field_Owner=_160954_rm, });;
				if ((_161113_i > 0LL)) {
					(*((*(_160954_rm))._field_Cases[(_161113_i - 1LL)]))._field_Next=_161217_case;
				};
				{ jule::Slice<jule::Ptr<_1ab226037_Case>> &__jule_push_dest = (*(_160954_rm))._field_Cases; __jule_push_dest.push(_161217_case); };
			}
			_iter_next_1bb21209b:;
			++it;
			_161113_i++;
			goto _iter_begin_1bb21209b;
		}
		_iter_end_1bb21209b:;
	};
	if ((((*(_160954_rm))._field_Default != nullptr) && ((*((*(_160935_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160954_rm))._field_Cases[((*(_160954_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160954_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160935_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2129a3:;
		if (it != expr_end) {
			jule::I64 _162514_i = it - expr->begin();
			jule::Ptr<_1ab1b0543_Case> _162521_c = *it;
			{
				_1ab235ae6_checkCase(_self_, _160954_rm, _162514_i, _162521_c, _160970_expr);
			}
			_iter_next_1bb2129a3:;
			++it;
			_162514_i++;
			goto _iter_begin_1bb2129a3;
		}
		_iter_end_1bb2129a3:;
	};
}



inline jule::Ptr<_1ab226037_Case> _1ab236410_checkDefault(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab2253ee_Match> _163036_m, jule::Ptr<_1ab1ae399_Else> _163051_d) {
	jule::Ptr<_1ab226037_Case> _163113_def = jule::new_ptr<_1ab226037_Case>(_1ab226037_Case{._field_Owner=_163036_m, });;
	(*(_163113_def))._field_Scope=_1ab235585_checkCaseScope(_self_, &(_163113_def), &((*(_163051_d))._field_Scope));
	return _163113_def;;
}



inline void _1ab236773_checkComptimePanic(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab182e72_Token> _163842_callToken, jule::Ptr<_1ab2212b8_Scope>* _163862_s) {
	if (((*((*(_163862_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16429_stmt = (*((*(_163862_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16429_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bb219416:;
			{
				jule::Ptr<_1ab2b5c0e_Data> _164513_d = _16429_stmt.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164513_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1bb21a37e:;
						{
							jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel> _164821_m = (*(_164513_d))._field_Model.cast_ptr<_1ab1c7deb_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164821_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1bb21b4d4:;
									{
										jule::Ptr<_1a8d04e26_Const> _165121_c = (*(_164821_m))._field_Expr.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
										if ((!(_1a8d0969a_IsStr(_165121_c.ptr())))) {
											goto _match_end_1bb21b47e;
										};
										if ((_163842_callToken == nullptr)) {
											jule::Ptr<_1ab2285bc_scopeChecker> _165629_root = _1ab22b944_getHardRoot(_self_);;
											if (((*(_165629_root))._field_calledFrom == nullptr)) {
												_163842_callToken=(*(_164821_m))._field_Token;
											} else {
												_163842_callToken=(*(_165629_root))._field_calledFrom;
											};
										};
										_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _163842_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1a8d0709e_ReadStr(_165121_c.ptr()), &__jule_any_type4)}));
										_1ab22ae0a_stop(_self_.ptr());
									}
								}
								_match_end_1bb21b47e:;
							};
						}
					}
					_match_end_1bb21a329:;
				};
			}
		}
		_match_end_1bb2193b1:;
	};
}



inline void _1ab236ad6_processConstMatch(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab2253ee_Match>* _167042_tm, jule::Ptr<_1ab1b0d5c_MatchCase>* _167059_m) {
	{
		auto expr = &((*((*(_167042_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb21d64b:;
		if (it != expr_end) {
			jule::I64 _167114_i = it - expr->begin();
			jule::Ptr<_1ab226037_Case> _167121_c = *it;
			{
				if (((*(_167121_c))._field_Scope != nullptr)) {
					jule::Ptr<_1ab182e72_Token> _167325_token = nullptr;;
					if (((!((*((*(_167042_tm))))._field_TypeMatch)) && ((*((*(_167121_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_167325_token=(*((*((*((*(_167059_m))))._field_Cases[_167114_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ab236773_checkComptimePanic(_self_, _167325_token, &((*(_167121_c))._field_Scope));
					(*((*(_167042_tm))))._field_Default=_167121_c;
					(*((*(_167042_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1bb21d64b:;
			++it;
			_167114_i++;
			goto _iter_begin_1bb21d64b;
		}
		_iter_end_1bb21d64b:;
	};
	if (((*((*(_167059_m))))._field_Default != nullptr)) {
		(*((*(_167042_tm))))._field_Cases=nullptr;
		(*((*(_167042_tm))))._field_Default=_1ab236410_checkDefault(_self_, (*(_167042_tm)), (*((*(_167059_m))))._field_Default);
		if (((*((*(_167042_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1ab182e72_Token> _168725_token = nullptr;;
			if ((!((*((*(_167042_tm))))._field_TypeMatch))) {
				_168725_token=(*((*((*((*(_167059_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ab236773_checkComptimePanic(_self_, _168725_token, &((*((*((*(_167042_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_167042_tm))))._field_Cases=nullptr;
	};
}



inline void _1ab236d8e_checkTypeMatch(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1b0d5c_MatchCase>* _169939_m) {
	jule::Ptr<_1ab2b5c0e_Data> _170013_d = _1ab2d5190_eval1(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*((*(_169939_m))))._field_Expr);;
	if ((_170013_d == nullptr)) {
		return;;
	};
	if ((*((*(_169939_m))))._field_Comptime) {
		jule::Ptr<_1ab209191_comptimeTypeInfo> _170617_cti = _1ab2ec53c_comptimeTypeInfo((*(_170013_d))._field_Kind.ptr());;
		if ((_170617_cti == nullptr)) {
			if ((!((*(_170013_d))._field_Decl))) {
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_170013_d))._field_Kind=(*(_170617_cti))._field_base;
		};
	} else if (((*(_170013_d))._field_Decl || (!(((((_1ab2e8b76_Prim((*(_170013_d))._field_Kind.ptr()) != nullptr) && _1ab30281c_IsAny(_1ab2e8b76_Prim((*(_170013_d))._field_Kind.ptr()).ptr())) || (_1ab2ea480_Trait((*(_170013_d))._field_Kind.ptr()) != nullptr)) || (_1ab2e96b0_TypeEnum((*(_170013_d))._field_Kind.ptr()) != nullptr)))))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169939_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab2253ee_Match> _172013_tm = jule::new_ptr<_1ab2253ee_Match>(_1ab2253ee_Match{._field_Expr=_170013_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_169939_m))))._field_Comptime, });;
	if (((!((*(_172013_tm))._field_Comptime)) && ((*((*(_169939_m))))._field_Default != nullptr))) {
		(*(_172013_tm))._field_Default=_1ab236410_checkDefault(_self_, _172013_tm, (*((*(_169939_m))))._field_Default);
	};
	_1ab236014_checkCases(_self_, _169939_m, _172013_tm, _170013_d);
	if ((*(_172013_tm))._field_Comptime) {
		_1ab236ad6_processConstMatch(_self_, &(_172013_tm), _169939_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_172013_tm, &__jule_any_type47)); };
}



inline void _1ab237147_checkCommonMatch(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1b0d5c_MatchCase>* _174141_m) {
	jule::Ptr<_1ab2b5c0e_Data> _174217_d = nullptr;;
	if (((*((*(_174141_m))))._field_Expr == nullptr)) {
		_174217_d=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Constant=static__1a8d058e9_NewBool(true)});
		(*(_174217_d))._field_Model=jule::Any((*(_174217_d))._field_Constant, &__jule_any_type19);
	} else {
		_174217_d=_1ab2d5822_evalExpr1(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*((*(_174141_m))))._field_Expr);
		if ((_174217_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_174141_m))))._field_Comptime) {
		if ((!(_1ab23ab0c_canComptimeMatch(&(_174217_d))))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1ab2eac33_comptime((*(_174217_d))._field_Kind.ptr())) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_174141_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab2253ee_Match> _176813_mc = jule::new_ptr<_1ab2253ee_Match>(_1ab2253ee_Match{._field_Expr=_174217_d, ._field_Comptime=(*((*(_174141_m))))._field_Comptime, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_176813_mc, &__jule_any_type47)); };
	if (((!((*(_176813_mc))._field_Comptime)) && ((*((*(_174141_m))))._field_Default != nullptr))) {
		(*(_176813_mc))._field_Default=_1ab236410_checkDefault(_self_, _176813_mc, (*((*(_174141_m))))._field_Default);
	};
	_1ab236014_checkCases(_self_, _174141_m, _176813_mc, _174217_d);
	if ((*(_176813_mc))._field_Comptime) {
		_1ab236ad6_processConstMatch(_self_, &(_176813_mc), _174141_m);
	};
}



inline void _1ab237400_checkMatch(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1b0d5c_MatchCase> _179134_m) {
	if ((*(_179134_m))._field_TypeMatch) {
		_1ab236d8e_checkTypeMatch(_self_, &(_179134_m));
		return;;
	};
	_1ab237147_checkCommonMatch(_self_, &(_179134_m));
}



inline void _1ab2376a8_checkFall(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a632a_FallSt> _179929_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1ab22b427_isDeferred(_self_))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1ab226037_Case* _180713_case = ((_1ab226037_Case*)((*(_self_))._field_cse));;
	if ((*((*(_180713_case))._field_Owner))._field_Comptime) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_180713_case))._field_Next == nullptr)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_179929_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1ab226631_FallSt>(_1ab226631_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_180713_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1ab22385e_BreakSt> _1ab2379e9_checkBreakWithLabel(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ad640_BreakSt> _182239_b) {
	jule::Ptr<_1ab22385e_BreakSt> _182313_brk = _1ab237d3a_checkPlainBreak(_self_, _182239_b);;
	if ((_182313_brk == nullptr)) {
		return nullptr;;
	};
	(*(_182313_brk))._field_It=0LLU;
	(*(_182313_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ab227126_scopeLabel> _183313_label = _1ab21d7d2_findLabelParent(&((*((*(_182239_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_183313_label == nullptr)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_183313_label))._field_used=true;
	if ((((*(_183313_label))._field_pos + 1LL) >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18469_i = ((*(_183313_label))._field_pos + 1LL);;
	if ((_18469_i >= (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _185017_st = (*((*((*(_183313_label))._field_scope))._field_scope))._field_Stmts[_18469_i];;
		{
			auto &_match_expr{ _185017_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1bb24aa52:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ab2221ed_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1bb24a755:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ab223100_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1bb24a7bb:;
				{
					(*(_182313_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ab2226a4_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1bb24a832:;
				{
					(*(_182313_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_185017_st.cast_ptr<_1ab2253ee_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1bb24a6de:;
				{
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1bb24a689:;
		};
	};
	if (((*(_182313_brk))._field_It != 0LLU)) {
		if ((!(_1ab232829_checkValidBreakLabel(_self_, (*(_182313_brk))._field_It)))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_182313_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ab232829_checkValidBreakLabel(_self_, (*(_182313_brk))._field_Mtch)))) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_182239_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_182239_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _182313_brk;;
}



inline jule::Ptr<_1ab22385e_BreakSt> _1ab237d3a_checkPlainBreak(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ad640_BreakSt> _188035_b) {
	if (_1ab22b427_isDeferred(_self_)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _188613_scope = _self_;;
	_julec_label_1bb25310e:;
	{
		
		if ((((((*(_188613_scope))._field_it == 0LLU) && ((*(_188613_scope))._field_cse == 0LLU)) && ((*(_188613_scope))._field_parent != nullptr)) && ((*(_188613_scope))._field_owner == nullptr))) {
			_case_begin_1bb253670:;
			{
				_188613_scope=(*(_188613_scope))._field_parent;
				goto _julec_label_1bb25310e;
			}
		}
		else if (((*(_188613_scope))._field_it != 0LLU)) {
			_case_begin_1bb2536e7:;
			{
				return jule::new_ptr<_1ab22385e_BreakSt>(_1ab22385e_BreakSt{._field_It=(*(_188613_scope))._field_it, });;
			}
		}
		else if (((*(_188613_scope))._field_cse != 0LLU)) {
			_case_begin_1bb25376e:;
			{
				return jule::new_ptr<_1ab22385e_BreakSt>(_1ab22385e_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1ab226037_Case*)((*(_188613_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1bb2535a4:;
	};
	_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_188035_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab2380e3_checkBreak(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ad640_BreakSt> _190230_b) {
	if (((*(_190230_b))._field_Label != nullptr)) {
		jule::Ptr<_1ab22385e_BreakSt> _190417_brk = _1ab2379e9_checkBreakWithLabel(_self_, _190230_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190417_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1ab22385e_BreakSt> _190913_brk = _1ab237d3a_checkPlainBreak(_self_, _190230_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_190913_brk, &__jule_any_type49)); };
}



inline void _1ab23839b_checkRet(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1ab7b4_RetSt> _191332_r) {
	if (_1ab22b427_isDeferred(_self_)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_191332_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab2269b6_RetSt> _191813_rt = jule::new_ptr<_1ab2269b6_RetSt>(_1ab2269b6_RetSt{._field_Func=(*(_1ab22b6ad_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_191813_rt, &__jule_any_type50)); };
	jule::Ptr<_1ab2ad4ed_retTypeChecker> _192313_rtc = jule::new_ptr<_1ab2ad4ed_retTypeChecker>(_1ab2ad4ed_retTypeChecker{._field_sc=_self_, ._field_f=(*(_191813_rt))._field_Func, ._field_errorToken=(*(_191332_r))._field_Token, });;
	jule::Bool _19289_ok = _1ab2ae213_check(_192313_rtc.ptr(), &((*(_191332_r))._field_Expr));;
	if ((!(_19289_ok))) {
		return;;
	};
	if (((*(_191332_r))._field_Expr != nullptr)) {
		(*(_191813_rt))._field_Expr=(*(_192313_rtc))._field_model;
	};
}



inline void _1ab238654_checkUseExpr(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab19d278_UseExpr> _193832_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ab22b427_isDeferred(_self_)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_193832_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1ab23890c_checkNode(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Any* _195434_node) {
	{
		auto &_match_expr{ (*(_195434_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bb263bad:;
			{
				_1ab22e2c6_checkAnonScope(_self_, (*(_195434_node)).cast_ptr<_1ab1a8591_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bb26421e:;
			{
				_1ab22cabb_checkVarDecl(_self_, (*(_195434_node)).cast_ptr<_1ab1ab3da_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bb263edd:;
			{
				_1ab22d12c_checkTypeAliasDecl(_self_, (*(_195434_node)).cast_ptr<_1ab1b008c_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bb264494:;
			{
				_1ab22e8e2_checkExpr(_self_, (*(_195434_node)).cast_ptr<_1ab19c8a4_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bb26450a:;
			{
				_1ab23032c_checkConditional(_self_, (*(_195434_node)).cast_ptr<_1ab1ae850_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1bb264571:;
			{
				_1ab232197_checkIter(_self_, (*(_195434_node)).cast_ptr<_1ab1ac034_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bb2645d7:;
			{
				_1ab232e23_checkCont(_self_, (*(_195434_node)).cast_ptr<_1ab1ada19_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1bb26464d:;
			{
				_1ab2331cb_checkLabel(_self_, (*(_195434_node)).cast_ptr<_1ab1a5b54_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1bb2646b4:;
			{
				_1ab233484_pushGoto(_self_, (*(_195434_node)).cast_ptr<_1ab1a602d_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bb26472a:;
			{
				_1ab235189_checkAssignSt(_self_, (*(_195434_node)).cast_ptr<_1ab1a701d_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1bb264791:;
			{
				_1ab237400_checkMatch(_self_, (*(_195434_node)).cast_ptr<_1ab1b0d5c_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bb264807:;
			{
				_1ab2376a8_checkFall(_self_, (*(_195434_node)).cast_ptr<_1ab1a632a_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1bb26486d:;
			{
				_1ab2380e3_checkBreak(_self_, (*(_195434_node)).cast_ptr<_1ab1ad640_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1bb2648d4:;
			{
				_1ab23839b_checkRet(_self_, (*(_195434_node)).cast_ptr<_1ab1ab7b4_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bb26494a:;
			{
				_1ab238654_checkUseExpr(_self_, (*(_195434_node)).cast_ptr<_1ab19d278_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1bb263d56:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1bb263d01:;
	};
}



inline void _1ab238b0a_checkResult(jule::Ptr<_1ab2285bc_scopeChecker> _self_) {
	_1ab1a7e31_Stmt _199213_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _199213_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bb26db85:;
			{
				jule::Ptr<_1ab19d278_UseExpr> _199517_ue = _199213_stmt._field_Data.cast_ptr<_1ab19d278_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1ab2b5c0e_Data> _199617_d = _1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), (*(_199517_ue))._field_Expr);;
				if ((_199617_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_199617_d, &__jule_any_type24)); };
				jule::Ptr<_1ab2ad4ed_retTypeChecker> _200117_rtc = jule::new_ptr<_1ab2ad4ed_retTypeChecker>(_1ab2ad4ed_retTypeChecker{._field_sc=_self_, ._field_types=_1ab1d3511_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_199517_ue))._field_Expr))._field_Token, });;
				_1ab2ae213_check(_200117_rtc.ptr(), &((*(_199517_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bb26d338:;
			{
				jule::Ptr<_1ab19c8a4_Expr> _200817_expr = _199213_stmt._field_Data.cast_ptr<_1ab19c8a4_Expr>(&__jule_any_type52);;
				jule::Ptr<_1ab2b5c0e_Data> _200917_d = _1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, jule::Trait<_1ab31605b_Lookup>(_self_, 0)), _200817_expr);;
				if ((_200917_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_200917_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1bb27442c:;
						{
							jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel> _201521_m = (*(_200917_d))._field_Model.cast_ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1ab22e639_processErrorCall(_self_, &(_201521_m), (*(_200817_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_200917_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1bb27464c:;
						{
							return;;
						}
					}
					_match_end_1bb2745e7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1bb26d39e:;
			{
				_1ab23890c_checkNode(_self_, &(_199213_stmt._field_Data));
			}
		}
		else {
			_case_begin_1bb26d2c2:;
			{
				_1ab23890c_checkNode(_self_, &(_199213_stmt._field_Data));
				return;;
			}
		}
		_match_end_1bb26b2c0:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1ab238d08_checkTree(jule::Ptr<_1ab2285bc_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _203713_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_203713_n)--;
	};
	for (; ((*(_self_))._field_i < _203713_n); ((*(_self_))._field_i)++) {
		{
			_1ab1a7e31_Stmt _204517_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1ab23890c_checkNode(_self_, &(_204517_stmt._field_Data));
			if (_1ab22b191_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1bb278453:;
	}
	_iter_end_1bb278453:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1ab238b0a_checkResult(_self_);
	};
}



inline void _1ab23916b_checkGoto(_1ab2285bc_scopeChecker* _self_, jule::Ptr<_1ab2276a9_scopeGoto>* _205633_gt, jule::Ptr<_1ab227126_scopeLabel>* _205654_label) {
	jule::Ptr<_1ab2285bc_scopeChecker> _205713_gtsc = (*((*(_205633_gt))))._field_scope;;
	while ((((*(_205713_gtsc))._field_childIndex - 1LL) > (*((*((*(_205654_label))))._field_scope))._field_childIndex)) {
		{
			_205713_gtsc=(*(_205713_gtsc))._field_parent;
		}
	_iter_next_1bb27ba72:;
	}
	_iter_end_1bb27ba72:;;
	jule::I64 _206213_n = 0LL;;
	if (((*(_205713_gtsc))._field_scope == (*((*((*(_205654_label))))._field_scope))._field_scope)) {
		if (((*((*(_205633_gt))))._field_pos > (*((*(_205654_label))))._field_pos)) {
			return;;
		};
		_206213_n=(*((*(_205633_gt))))._field_pos;
	};
	jule::I64 _207513_i = ((*((*(_205654_label))))._field_pos - 1LL);;
	if ((_206213_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb27edd8:;
			if (it != expr_end) {
				jule::I64 _207817_j = it - expr->begin();
				jule::Any _207820_stmt = *it;
				{
					if (_1ab21e01e_stmtIsGotoScope(&(_207820_stmt), &((*(_205713_gtsc))._field_scope))) {
						_206213_n=_207817_j;
						goto _iter_end_1bb27edd8;
					};
				}
				_iter_next_1bb27edd8:;
				++it;
				_207817_j++;
				goto _iter_begin_1bb27edd8;
			}
			_iter_end_1bb27edd8:;
		};
	};
	for (; (_207513_i >= _206213_n); (_207513_i)--) {
		{
			jule::Any _208817_stmt = (*((*((*((*(_205654_label))))._field_scope))._field_scope))._field_Stmts[_207513_i];;
			if (_1ab220d56_stmtIsDef(&(_208817_stmt))) {
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_205633_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_205633_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1bb280ed8:;
	}
	_iter_end_1bb280ed8:;;
}



inline void _1ab239369_checkGotos(_1ab2285bc_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2822d6:;
		if (it != expr_end) {
			jule::Ptr<_1ab2276a9_scopeGoto> _209721_gt = *it;
			{
				jule::Ptr<_1ab227126_scopeLabel> _209817_label = _1ab22c417_findLabelAll(_self_, &((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_209817_label == nullptr)) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_209721_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_209721_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1bb2822d6;
				};
				(*((*(_209721_gt))._field_st))._field_Label=(*(_209817_label))._field_label;
				(*(_209817_label))._field_used=true;
				_1ab23916b_checkGoto(_self_, &(_209721_gt), &(_209817_label));
			}
			_iter_next_1bb2822d6:;
			++it;
			goto _iter_begin_1bb2822d6;
		}
		_iter_end_1bb2822d6:;
	};
}



inline void _1ab239567_checkLabels(_1ab2285bc_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb284e21:;
		if (it != expr_end) {
			jule::Ptr<_1ab227126_scopeLabel> _211016_l = *it;
			{
				if ((!((*(_211016_l))._field_used))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_211016_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_211016_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bb284e21:;
			++it;
			goto _iter_begin_1bb284e21;
		}
		_iter_end_1bb284e21:;
	};
}



inline void _1ab239765_checkVars(_1ab2285bc_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb28730d:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _211816_v = *it;
			{
				if (((((!((*(_211816_v))._field_Used)) && (!((*(_211816_v))._field_Constant))) && (!(_1ab1858d1_IsIgnoreIdent((*(_211816_v))._field_Ident)))) && (!(_1ab185b9a_IsAnonIdent((*(_211816_v))._field_Ident))))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_211816_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_211816_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bb28730d:;
			++it;
			goto _iter_begin_1bb28730d;
		}
		_iter_end_1bb28730d:;
	};
}



inline void _1ab239963_checkAliases(_1ab2285bc_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb288dc0:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e5733_TypeAlias> _212616_a = *it;
			{
				if ((((!((*(_212616_a))._field_Used)) && (!(_1ab1858d1_IsIgnoreIdent((*(_212616_a))._field_Ident)))) && (!(_1ab185b9a_IsAnonIdent((*(_212616_a))._field_Ident))))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_212616_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_212616_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1bb288dc0:;
			++it;
			goto _iter_begin_1bb288dc0;
		}
		_iter_end_1bb288dc0:;
	};
}



inline void _1ab239cc6_check(jule::Ptr<_1ab2285bc_scopeChecker> _self_, jule::Ptr<_1ab1a8591_ScopeTree>* _213430_tree, jule::Ptr<_1ab2212b8_Scope>* _213453_s) {
	(*((*(_213453_s))))._field_Deferred=(*((*(_213430_tree))))._field_Deferred;
	(*((*(_213453_s))))._field_Unsafety=(*((*(_213430_tree))))._field_Unsafety;
	jule::I64 _21389_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_213430_tree));
	(*(_self_))._field_scope=(*(_213453_s));
	_1ab238d08_checkTree(_self_);
	if ((_21389_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1ab239765_checkVars(_self_.ptr());
		_1ab239963_checkAliases(_self_.ptr());
		if (_1ab22ac0c_isRoot(_self_.ptr())) {
			_1ab239369_checkGotos(_self_.ptr());
			_1ab239567_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab23a05c_newChildChecker(jule::Ptr<_1ab2285bc_scopeChecker> _self_) {
	jule::Ptr<_1ab2285bc_scopeChecker> _215813_base = _1ab21d095_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_215813_base))._field_parent=_self_;
	(*(_215813_base))._field_labels=(*(_self_))._field_labels;
	(*(_215813_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_215813_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _215813_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2285bc_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ab23ba0e_checkCdef(_1ab23b602_directiveChecker* _self_, jule::Ptr<_1ab19798c_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bb293ced:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab1ce40d_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1bb294040;
				};
				goto _case_begin_1bb294095;
			}
		}
		else {
			_case_begin_1bb294095:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bb294040:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab23bcb7_checkTypedef(_1ab23b602_directiveChecker* _self_, jule::Ptr<_1ab19798c_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb296b58:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1bb296d9a;
				};
				goto _case_begin_1bb296e00;
			}
		}
		else {
			_case_begin_1bb296e00:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bb296d9a:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab23c070_checkNamespace(_1ab23b602_directiveChecker* _self_, jule::Ptr<_1ab19798c_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb29a079:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bb299cc1:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ab1ce40d_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb299d37:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8)))._field_Binded))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1bb299c5a:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bb299c05:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ab182e72_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb2a5282:;
			{
				if ((_1ab2de573_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1ab19798c_Directive> _9021_typedef = jule::new_ptr<_1ab19798c_Directive>(_1ab19798c_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1ab19798c_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1bb2a522c:;
	};
}



inline void _1ab23c328_checkDeprecated(_1ab23b602_directiveChecker* _self_, jule::Ptr<_1ab19798c_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bb2a65a2:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65)))._field_Binded) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bb2a7790:;
			{
				jule::Ptr<_1ab1ce40d_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1ab1ce40d_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1ab1ced9d_IsEntryPoint(_10617_f.ptr())) || _1ab1d0134_IsInit(_10617_f.ptr()))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb2a7806:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8)))._field_Binded) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1bb2a7350:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bb2a72ea:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1ab182e72_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1ab23c5d1_checkTest(_1ab23b602_directiveChecker* _self_, jule::Ptr<_1ab19798c_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bb2b3735:;
			{
				jule::Ptr<_1ab1ce40d_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1ab1ce40d_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1ab1d0134_IsInit(_14213_f.ptr())))) && (!(_1ab1ced9d_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1bb2b810d;
				};
				if (_1ab1ceb17_IsMethod(_14213_f.ptr())) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1bb2b810d;
				};
				goto _case_begin_1bb2b8163;
			}
		}
		else {
			_case_begin_1bb2b8163:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bb2b810d:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab23c889_checkDirective(_1ab23b602_directiveChecker* _self_, jule::Ptr<_1ab19798c_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1bb2bd047:;
			{
				_1ab23ba0e_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1bb2bcc06:;
			{
				_1ab23bcb7_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1bb2bcc6c:;
			{
				_1ab23c070_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1bb2bccd3:;
			{
				_1ab23c328_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1bb2bcd49:;
			{
				_1ab23c5d1_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1bb2bdd39:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1bb2bcb90:;
			{
				_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1bb2bcb18:;
	};
}



inline void _1ab23ca87_check(_1ab23b602_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c0a72:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _18121_d = *it;
			{
				_1ab23c889_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1bb2c0a72:;
			++it;
			goto _iter_begin_1bb2c0a72;
		}
		_iter_end_1bb2c0a72:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab23b602_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab243087_SelectPackage(_1ab242a9d_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab243483_FindVar(_1ab242a9d_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1ab2450de_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1ab240084_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab24387e_FindTypeAlias(_1ab242a9d_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1ab2450de_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1ab240507_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1ab1b9470_Struct> _1ab243c7a_FindStruct(_1ab242a9d_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1ab2450de_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1ab240936_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab244176_FindFn(_1ab242a9d_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1ab2450de_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1ab240ddc_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab2444b7_FindTrait(_1ab242a9d_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1ab2450de_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1ab24122d_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab244808_FindEnum(_1ab242a9d_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1ab2450de_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1ab2415a2_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab244b49_FindTypeEnum(_1ab242a9d_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1ab2450de_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1ab241926_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1ab2450de_isLookupable(_1ab242a9d_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1ab245430_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1ab245430_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1ab245430_existIdent(_1ab242a9d_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2d6ca8:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1bb2d6ca8:;
			++it;
			goto _iter_begin_1bb2d6ca8;
		}
		_iter_end_1bb2d6ca8:;
	};
	return false;;
}



inline jule::Bool _1ab2456b6_isAccessibleViaSelection(_1ab242a9d_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1ab245430_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab242a9d_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab245e69_SelectPackage(_1ab2459c4_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab246365_FindVar(_1ab2459c4_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1ab240084_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab246761_FindTypeAlias(_1ab2459c4_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1ab240507_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1ab1b9470_Struct> _1ab246b5c_FindStruct(_1ab2459c4_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1ab240936_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab247058_FindFn(_1ab2459c4_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1ab240ddc_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab247399_FindTrait(_1ab2459c4_Package* _self_, jule::Str _33828_ident) {
	return _1ab24122d_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab2476da_FindEnum(_1ab2459c4_Package* _self_, jule::Str _34427_ident) {
	return _1ab2415a2_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab247a2b_FindTypeEnum(_1ab2459c4_Package* _self_, jule::Str _35031_ident) {
	return _1ab241926_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2459c4_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab209191_comptimeTypeInfo> _1ab2627d2_pushComptimeTypeInfo(_1ab262370_commonSemaMeta* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb31911a:;
		if (it != expr_end) {
			jule::Ptr<_1ab209191_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1ab2e6c2e_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1bb31911a:;
			++it;
			goto _iter_begin_1bb31911a;
		}
		_iter_end_1bb31911a:;
	};
	jule::Ptr<_1ab209191_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1ab209191_comptimeTypeInfo>(_1ab209191_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1ab209191_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab262370_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab26343c_SelectPackage(_1ab262e97_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _24632_selector) {
	return _1ab2b0d4c_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab263838_FindVar(_1ab262e97_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1ab2853a4_Var> _25813_v = _1ab240084_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1ab260093_IsPub(_25626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb31ce65:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1ab260ed9_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1bb31ce65;
				};
				_25813_v=_1ab243483_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1ab266341_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1bb31ce65:;
			++it;
			goto _iter_begin_1bb31ce65;
		}
		_iter_end_1bb31ce65:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab263c34_FindTypeAlias(_1ab262e97_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1ab2e5733_TypeAlias> _29013_ta = _1ab240507_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1ab260093_IsPub(_28832_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb320dbe:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1ab260ed9_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1bb320dbe;
				};
				_29013_ta=_1ab24387e_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1ab266341_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1bb320dbe:;
			++it;
			goto _iter_begin_1bb320dbe;
		}
		_iter_end_1bb320dbe:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1b9470_Struct> _1ab264130_FindStruct(_1ab262e97_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1ab1b9470_Struct> _32213_s = _1ab240936_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1ab260093_IsPub(_32029_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb323d28:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1ab260ed9_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1bb323d28;
				};
				_32213_s=_1ab243c7a_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1ab266341_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1bb323d28:;
			++it;
			goto _iter_begin_1bb323d28;
		}
		_iter_end_1bb323d28:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab26452b_FindFn(_1ab262e97_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1ab1ce40d_Fn> _35313_f = _1ab240ddc_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1ab260093_IsPub(_35125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb326c82:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1ab260ed9_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1bb326c82;
				};
				_35313_f=_1ab244176_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1ab266341_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1bb326c82:;
			++it;
			goto _iter_begin_1bb326c82;
		}
		_iter_end_1bb326c82:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab26486c_FindTrait(_1ab262e97_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1ab1e26da_Trait> _38513_t = _1ab24122d_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1ab260093_IsPub(_38328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb329988:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1ab260ed9_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1bb329988;
				};
				_38513_t=_1ab2444b7_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1ab266341_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1bb329988:;
			++it;
			goto _iter_begin_1bb329988;
		}
		_iter_end_1bb329988:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab264bad_FindEnum(_1ab262e97_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1ab1e4de6_Enum> _41713_e = _1ab2415a2_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1ab260093_IsPub(_41527_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb32c68e:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1ab260ed9_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1bb32c68e;
				};
				_41713_e=_1ab244808_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1ab266341_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1bb32c68e:;
			++it;
			goto _iter_begin_1bb32c68e;
		}
		_iter_end_1bb32c68e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab264eee_FindTypeEnum(_1ab262e97_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1ab1e6601_TypeEnum> _44913_e = _1ab241926_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1ab260093_IsPub(_44731_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb330395:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1ab260ed9_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1bb330395;
				};
				_44913_e=_1ab244b49_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1ab266341_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1bb330395:;
			++it;
			goto _iter_begin_1bb330395;
		}
		_iter_end_1bb330395:;
	};
	return nullptr;;
}



inline jule::Bool _1ab26540b_isFlag(_1ab262e97_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1ab2656b4_setCurrentFile(_1ab262e97_Sema* _self_, jule::Ptr<_1ab2b0863_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1ab265ad2_pushErr(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_1a7d05a93_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab260b65_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1ab265e45_pushSuggestion(_1ab262e97_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1ab262194_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1ab266341_isAccessibleDefine(_1ab262e97_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1ab182e72_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1ab188dac_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1ab188dac_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1ab2667e7_isDuplicatedIdent(_1ab262e97_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb336e29:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> *_49816_f = it;
			{
				if (_1ab2b3d83_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb337820:;
					if (it != expr_end) {
						jule::Ptr<_1ab242a9d_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bb338722:;
								if (it != expr_end) {
									jule::Ptr<_1ab182e72_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1bb338722:;
									++it;
									goto _iter_begin_1bb338722;
								}
								_iter_end_1bb338722:;
							};
						}
						_iter_next_1bb337820:;
						++it;
						goto _iter_begin_1bb337820;
					}
					_iter_end_1bb337820:;
				};
			}
			_iter_next_1bb336e29:;
			++it;
			goto _iter_begin_1bb336e29;
		}
		_iter_end_1bb336e29:;
	};
	return false;;
}



inline void _1ab266b5a_checkDirectives(jule::Ptr<_1ab262e97_Sema> _self_, jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _51440_d, jule::Any _51466_o) {
	_1ab23b602_directiveChecker _51513_dc = _1ab23b602_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ab19798c_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1ab23ca87_check(&_51513_dc);
}



inline jule::Bool _1ab267111_checkGenericQuantity(_1ab262e97_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_1ab182e72_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1bb33b01b:;
			{
				_1ab265ad2_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1bb33b093:;
			{
				_1ab265ad2_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1bb33b11a:;
			{
				_1ab265ad2_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1bb33b33a:;
			{
				_1ab265ad2_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb33ae2d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb33ad62:;
	};
}



inline jule::Bool _1ab26750c_isDuplicatedImportSelection(_1ab262e97_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb33d5b2:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1bb33d5b2;
				};
				if (_1ab245430_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1bb33d5b2:;
			++it;
			goto _iter_begin_1bb33d5b2;
		}
		_iter_end_1bb33d5b2:;
	};
	return false;;
}



inline jule::Any _1ab267908_getImportDef(_1ab262e97_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1ab242a9d_ImportInfo>* _55545_imp) {
	if ((_1ab3cd277_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3404a4:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1ab2b38cc_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1bb3404a4:;
			++it;
			goto _iter_begin_1bb3404a4;
		}
		_iter_end_1bb3404a4:;
	};
	return nullptr;;
}



inline jule::Bool _1bb3473ce_checkImportSelection(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token>* _57043_ident, jule::Ptr<_1ab2853a4_Var>* _57059_s) {
	if ((!(_1ab266341_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab241e65_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bb34b526_checkImportSelection(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token>* _57043_ident, jule::Ptr<_1ab2e5733_TypeAlias>* _57059_s) {
	if ((!(_1ab266341_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab241e65_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bb350629_checkImportSelection(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token>* _57043_ident, jule::Ptr<_1ab1b9470_Struct>* _57059_s) {
	if ((!(_1ab266341_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab241e65_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bb354a18_checkImportSelection(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token>* _57043_ident, jule::Ptr<_1ab1e26da_Trait>* _57059_s) {
	if ((!(_1ab266341_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab241e65_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bb358b3d_checkImportSelection(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token>* _57043_ident, jule::Ptr<_1ab1e4de6_Enum>* _57059_s) {
	if ((!(_1ab266341_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab241e65_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bb35cc63_checkImportSelection(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token>* _57043_ident, jule::Ptr<_1ab1e6601_TypeEnum>* _57059_s) {
	if ((!(_1ab266341_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab241e65_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1bb361d66_checkImportSelection(_1ab262e97_Sema* _self_, jule::Ptr<_1ab182e72_Token>* _57043_ident, jule::Ptr<_1ab1ce40d_Fn>* _57059_s) {
	if ((!(_1ab266341_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab241e65_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1ab265ad2_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab268145_checkImportSelectedSelections(_1ab262e97_Sema* _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3427e7:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1bb3427e7;
				};
				if (_1ab26750c_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1ab265ad2_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bb3427e7;
				};
				jule::Any _59817_def = _1ab267908_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1bb345069:;
						{
							goto _iter_next_1bb3427e7;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bb3455db:;
						{
							jule::Ptr<_1ab2853a4_Var> _60421_v = _59817_def.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
							__jule_func_result=(_1bb3473ce_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1bb345652:;
						{
							jule::Ptr<_1ab2e5733_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1ab2e5733_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1bb34b526_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1bb346213:;
						{
							jule::Ptr<_1ab1b9470_Struct> _61021_s = _59817_def.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1bb350629_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1bb346279:;
						{
							jule::Ptr<_1ab1e26da_Trait> _61321_t = _59817_def.cast_ptr<_1ab1e26da_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1bb354a18_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1bb3462e0:;
						{
							jule::Ptr<_1ab1e4de6_Enum> _61621_e = _59817_def.cast_ptr<_1ab1e4de6_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1bb358b3d_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1bb346356:;
						{
							jule::Ptr<_1ab1e6601_TypeEnum> _61921_e = _59817_def.cast_ptr<_1ab1e6601_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1bb35cc63_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1bb3463bc:;
						{
							jule::Ptr<_1ab1ce40d_Fn> _62221_f = _59817_def.cast_ptr<_1ab1ce40d_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1bb361d66_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1bb3454cb:;
						{
							_1ab265ad2_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1bb3427e7;
						}
					}
					_match_end_1bb345476:;
				};
			}
			_iter_next_1bb3427e7:;
			++it;
			goto _iter_begin_1bb3427e7;
		}
		_iter_end_1bb3427e7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bb366541_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab2853a4_Var>>* _63362_s, jule::Ptr<_1ab182e72_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb368136:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bb3473ce_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bb368136:;
			++it;
			goto _iter_begin_1bb368136;
		}
		_iter_end_1bb368136:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bb367685_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>* _63362_s, jule::Ptr<_1ab182e72_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb36a897:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e5733_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bb34b526_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bb36a897:;
			++it;
			goto _iter_begin_1bb36a897;
		}
		_iter_end_1bb36a897:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bb369e3a_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1b9470_Struct>>* _63362_s, jule::Ptr<_1ab182e72_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb36d0e7:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bb350629_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bb36d0e7:;
			++it;
			goto _iter_begin_1bb36d0e7;
		}
		_iter_end_1bb36d0e7:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bb36c68a_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>* _63362_s, jule::Ptr<_1ab182e72_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb370869:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bb361d66_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bb370869:;
			++it;
			goto _iter_begin_1bb370869;
		}
		_iter_end_1bb370869:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bb36de50_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1e26da_Trait>>* _63362_s, jule::Ptr<_1ab182e72_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb373075:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bb354a18_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bb373075:;
			++it;
			goto _iter_begin_1bb373075;
		}
		_iter_end_1bb373075:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bb37265c_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1e4de6_Enum>>* _63362_s, jule::Ptr<_1ab182e72_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb375781:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4de6_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bb358b3d_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bb375781:;
			++it;
			goto _iter_begin_1bb375781;
		}
		_iter_end_1bb375781:;
	};
	return _63413_ok;;
}

inline jule::Bool _1bb374d68_checkImportsAllSelectionsFromCollection(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1e6601_TypeEnum>>* _63362_s, jule::Ptr<_1ab182e72_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb378025:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6601_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1bb35cc63_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1bb378025:;
			++it;
			goto _iter_begin_1bb378025;
		}
		_iter_end_1bb378025:;
	};
	return _63413_ok;;
}



inline jule::Bool _1ab268882_checkImportAllSelections(_1ab262e97_Sema* _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb346521:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1bb366541_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bb367685_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bb369e3a_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bb36c68a_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bb36de50_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bb37265c_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1bb374d68_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1bb346521:;
			++it;
			goto _iter_begin_1bb346521;
		}
		_iter_end_1bb346521:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab268bc3_checkImportSelections(_1ab262e97_Sema* _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1ab268145_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1ab268882_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab269014_isUseAliasDuplication(_1ab262e97_Sema* _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _66641_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3776ea:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _66721_imp2 = *it;
			{
				if ((_66721_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1bb3776ea;
				};
				if (((*(_66721_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_66721_imp2))._field_Ident == (*(_66721_imp2))._field_LinkPath) && ((*(_66721_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1bb3776ea:;
			++it;
			goto _iter_begin_1bb3776ea;
		}
		_iter_end_1bb3776ea:;
	};
	return false;;
}



inline jule::Bool _1ab269355_checkImport(_1ab262e97_Sema* _self_, jule::Ptr<_1ab242a9d_ImportInfo>* _68235_imp) {
	if (((*((*(_68235_imp))))._field_Binded || ((*((*((*(_68235_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68235_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68235_imp))))._field_ImportAll || !((*((*(_68235_imp))))._field_Alias).empty()) || ((*((*(_68235_imp))))._field_Selected.len() > 0LL))) {
			_1ab265ad2_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_68235_imp))))._field_Alias.len() != 0LL)) {
		if (_1ab1858d1_IsIgnoreIdent((*((*(_68235_imp))))._field_Alias)) {
			_1ab265ad2_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1ab269014_isUseAliasDuplication(_self_, _68235_imp)) {
			_1ab265ad2_pushErr(_self_, (*((*(_68235_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68235_imp))))._field_Alias, &__jule_any_type4)}));
			_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_68235_imp))))._field_Duplicate))) {
		jule::Ptr<_1ab262e97_Sema> _70517_sema = jule::new_ptr<_1ab262e97_Sema>(_1ab262e97_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ab2818ab_check(_70517_sema, &((*((*((*(_68235_imp))))._field_Package))._field_Files));
		if (((*(_70517_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_70517_sema))._field_errors);;
			(*(_70517_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1ab268bc3_checkImportSelections(_self_, _68235_imp);;
}



inline void _1ab269553_checkImports(_1ab262e97_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3841c9:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _72021_file = *it;
			{
				_1ab2656b4_setCurrentFile(_self_, _72021_file);
				{
					auto expr = &((*(_72021_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb384d89:;
					if (it != expr_end) {
						jule::Ptr<_1ab242a9d_ImportInfo> _72225_imp = *it;
						{
							jule::Bool _72317_ok = _1ab269355_checkImport(_self_, &(_72225_imp));;
							if ((!(_72317_ok))) {
								return;;
							};
						}
						_iter_next_1bb384d89:;
						++it;
						goto _iter_begin_1bb384d89;
					}
					_iter_end_1bb384d89:;
				};
			}
			_iter_next_1bb3841c9:;
			++it;
			goto _iter_begin_1bb3841c9;
		}
		_iter_end_1bb3841c9:;
	};
}



inline void _1ab269751_implFileImpls(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb384cce:;
		if (it != expr_end) {
			jule::Ptr<_1ab21ad62_Impl> _73321_imp = *it;
			{
				_1ab277e68_implImpl(_self_, &(_73321_imp));
			}
			_iter_next_1bb384cce:;
			++it;
			goto _iter_begin_1bb384cce;
		}
		_iter_end_1bb384cce:;
	};
}



inline void _1ab26994e_implImpls(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3869e5:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _73921_file = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _73921_file);
				_1ab269751_implFileImpls(_self_);
			}
			_iter_next_1bb3869e5:;
			++it;
			goto _iter_begin_1bb3869e5;
		}
		_iter_end_1bb3869e5:;
	};
}



inline void _1ab269b4c_checkEnums(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb38773d:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _74621_file = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _74621_file);
				{
					
					if ((!(_1ab2743a4_checkEnumDecls(_self_)))) {
						_case_begin_1bb388ec0:;
					}
					else if ((!(_1ab27463a_checkTypeEnumDecls(_self_)))) {
						_case_begin_1bb389047:;
					}
					_match_end_1bb388e37:;
				};
			}
			_iter_next_1bb38773d:;
			++it;
			goto _iter_begin_1bb38773d;
		}
		_iter_end_1bb38773d:;
	};
}



inline void _1ab269d4a_checkFileInherits(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3885da:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> _75621_t = *it;
			{
				jule::Bool _75713_ok = _1ab275eee__checkTraitDeclInherits(_self_, &(_75621_t));;
				if ((!(_75713_ok))) {
					return;;
				};
			}
			_iter_next_1bb3885da:;
			++it;
			goto _iter_begin_1bb3885da;
		}
		_iter_end_1bb3885da:;
	};
}



inline void _1ab26a048_checkInherits(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb38a246:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _76521_file = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _76521_file);
				_1ab269d4a_checkFileInherits(_self_);
			}
			_iter_next_1bb38a246:;
			++it;
			goto _iter_begin_1bb38a246;
		}
		_iter_end_1bb38a246:;
	};
}



inline _1ab3083d3_typeChecker _1ab26a4ee_typeChecker(jule::Ptr<_1ab262e97_Sema> _self_, jule::Trait<_1ab31605b_Lookup> _77135_l, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _77150_generics, jule::Ptr<_1ab3073e3_referencer> _77213_referencer) {
	_1ab3083d3_typeChecker _77313_tc = _1ab3083d3_typeChecker{._field_s=_self_, ._field_rootLookup=_77135_l, ._field_lookup=_77135_l, ._field_referencer=_77213_referencer, ._field_useGenerics=_77150_generics, };;
	{
		auto &_match_expr{ _77135_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb38d0d4:;
			{
				jule::Ptr<_1ab2285bc_scopeChecker> _78217_hard = _1ab22b944_getHardRoot(_77135_l.cast_ptr<_1ab2285bc_scopeChecker>(0));;
				_77313_tc._field_refers=(*((*(_78217_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1bb38d07e:;
	};
	if (((_77213_referencer != nullptr) && ((*(_77213_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_77213_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1bb38e921:;
				{
					_77313_tc._field_ownerAlias=(*(_77213_referencer))._field_owner.cast_ptr<_1ab2e5733_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1bb38e8bb:;
		};
	};
	return _77313_tc;;
}



inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26aa60_buildTypeWithRefers(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab198570_TypeDecl>* _79844_t, jule::Trait<_1ab31605b_Lookup> _79867_l, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _79913_generics, jule::Ptr<_1ab3073e3_referencer> _79941_referencer) {
	return ({ auto _wrap_copy = _1ab26a4ee_typeChecker(_self_, _79867_l, _79913_generics, _79941_referencer); _1ab310a7d_checkDecl(&_wrap_copy, _79844_t); });;
}



inline jule::Bool _1ab26b0c1_checkTypeWithRefers(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2ed6e7_TypeSymbol>* _80544_t, jule::Trait<_1ab31605b_Lookup> _80564_l, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _80613_generics, jule::Ptr<_1ab3073e3_referencer> _80641_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ab2eda6b_checked((*(_80544_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80544_t))))._field_Kind=_1ab26aa60_buildTypeWithRefers(_self_, &((*((*(_80544_t))))._field_Decl), _80564_l, _80613_generics, _80641_referencer);
	__jule_func_result = _1ab2eda6b_checked((*(_80544_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ab218a0d_constraintChecker> _1ab26b357_constraintChecker(jule::Ptr<_1ab262e97_Sema> _self_) {
	return jule::new_ptr<_1ab218a0d_constraintChecker>(_1ab218a0d_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1ab26b753_checkType(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2ed6e7_TypeSymbol>* _82034_t, jule::Trait<_1ab31605b_Lookup> _82054_l) {
	return _1ab26b0c1_checkTypeWithRefers(_self_, _82034_t, _82054_l, nullptr, nullptr);;
}



inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26bc09_buildTypeWithGenerics(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab198570_TypeDecl>* _82646_t, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _82713_generics, jule::Ptr<_1ab1d54d0_ReferenceStack> _82741_refers) {
	jule::Ptr<_1ab3083d3_typeChecker> _82813_tc = jule::new_ptr<_1ab3083d3_typeChecker>(_1ab3083d3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), ._field_refers=_82741_refers, ._field_useGenerics=_82713_generics, });;
	return _1ab310a7d_checkDecl(_82813_tc.ptr(), _82646_t);;
}



inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26c38b_selectType(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab198570_TypeDecl>* _84435_t) {
	jule::Ptr<_1ab3083d3_typeChecker> _84513_tc = jule::new_ptr<_1ab3083d3_typeChecker>(_1ab3083d3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1ab310a7d_checkDecl(_84513_tc.ptr(), _84435_t);;
}



inline jule::Ptr<_1ab2b7903_Eval> _1ab26c842_evalpd(jule::Ptr<_1ab262e97_Sema> _self_, jule::Trait<_1ab31605b_Lookup> _85630_l, jule::Ptr<_1ab2e6525_TypeKind> _85645_p, jule::Ptr<_1ab2853a4_Var> _85663_owner) {
	jule::Ptr<_1ab2b7903_Eval> _85713_e = jule::new_ptr<_1ab2b7903_Eval>(_1ab2b7903_Eval{._field_s=_self_, ._field_lookup=_85630_l, ._field_owner=_85663_owner, });;
	{
		auto &_match_expr{ _85630_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb398c5a:;
			{
				(*(_85713_e))._field_unsafety=_1ab22a976_isUnsafe(_85630_l.cast_ptr<_1ab2285bc_scopeChecker>(0));
			}
		}
		_match_end_1bb398c05:;
	};
	(*(_85713_e))._field_prefix=_85645_p;
	return _85713_e;;
}



inline jule::Ptr<_1ab2b7903_Eval> _1ab26cc3d_evalp(jule::Ptr<_1ab262e97_Sema> _self_, jule::Trait<_1ab31605b_Lookup> _87129_l, jule::Ptr<_1ab2e6525_TypeKind> _87144_p) {
	return _1ab26c842_evalpd(_self_, _87129_l, _87144_p, nullptr);;
}



inline jule::Ptr<_1ab2b7903_Eval> _1ab26d07e_eval(jule::Ptr<_1ab262e97_Sema> _self_, jule::Trait<_1ab31605b_Lookup> _87628_l) {
	return _1ab26cc3d_evalp(_self_, _87628_l, nullptr);;
}



inline jule::Bool _1ab26d5e0_checkAssignType(jule::Ptr<_1ab262e97_Sema> _self_, jule::Bool _88035_destIsRef, jule::Ptr<_1ab2e6525_TypeKind>* _88057_dest, jule::Ptr<_1ab2b5c0e_Data>* _88114_d, jule::Ptr<_1ab182e72_Token> _88128_errorToken) {
	if ((*((*(_88114_d))))._field_Decl) {
		_1ab265ad2_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_88035_destIsRef) {
		if ((!(_1ab2e6c2e_Equal((*(_88057_dest)), (*((*(_88114_d))))._field_Kind)))) {
			_1ab265ad2_pushErr(_self_.ptr(), _88128_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_88057_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_88114_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1ab29e599_assignTypeChecker> _89217_atc = jule::new_ptr<_1ab29e599_assignTypeChecker>(_1ab29e599_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_88057_dest)), ._field_d=(*(_88114_d)), ._field_errorToken=_88128_errorToken});;
		jule::Bool _89813_ok = _1ab2a080e_check(_89217_atc.ptr());;
		if ((!(_89813_ok))) {
			return false;;
		};
	};
	if (((!(_1ab2b65d3_IsConst((*(_88114_d)).ptr()))) || (_1ab2e8b76_Prim((*(_88057_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90813_kind = (*(_1ab2e8b76_Prim((*(_88057_dest)).ptr())))._field_Kind;;
	{
		
		if (_1a8d03b4a_IsSigInt(_90813_kind)) {
			_case_begin_1bb3a14b0:;
			{
				_1a8d07d91_SetI64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1a8d03e58_IsUnsigInt(_90813_kind)) {
			_case_begin_1bb3a1537:;
			{
				_1a8d08149_SetU64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		else if (_1a8d04563_IsFloat(_90813_kind)) {
			_case_begin_1bb3a15ae:;
			{
				_1a8d08963_SetF64((*((*(_88114_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1a8d07ad8_AsF64((*((*(_88114_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1bb3a13e4:;
	};
	return true;;
}



inline jule::Bool _1ab26da96_checkTypeCompatibility(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2e6525_TypeKind>* _92247_dest, jule::Ptr<_1ab2e6525_TypeKind>* _92314_src, jule::Ptr<_1ab182e72_Token>* _92335_errorToken) {
	if (((*(_92314_src)) == nullptr)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_1ab2ea99c_Tup((*(_92314_src)).ptr()) != nullptr)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_1ab29c7ea_typeCompatibilityChecker _93713_tcc = _1ab29c7ea_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92247_dest)), ._field_src=(*(_92314_src)), ._field_errorToken=(*(_92335_errorToken))};;
	if (_1ab29deb1_check(&_93713_tcc)) {
		return true;;
	};
	_1ab265ad2_pushErr(_self_.ptr(), (*(_92335_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_92247_dest)).ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_92314_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_1ab2e6525_TypeKind> _1ab26e04c_buildNonGenericTypeKind(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab198570_TypeDecl>* _95848_ast, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>* _95914_generics, jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>* _95950_ignored) {
	jule::Ptr<_1ab3083d3_typeChecker> _96013_tc = jule::new_ptr<_1ab3083d3_typeChecker>(_1ab3083d3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_95914_generics)), ._field_ignoredGenerics=_95950_ignored, });;
	return _1ab310a7d_checkDecl(_96013_tc.ptr(), _95848_ast);;
}



inline jule::Bool _1ab26e448_buildFnNonGenericTypeKinds(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1d2312_FnIns>* _97051_f, jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>* _97067_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _97217_generics = nullptr;;
	if (_1ab1ceb17_IsMethod((*((*(_97051_f))))._field_Decl.ptr())) {
		_97217_generics=jule::append((*((*((*(_97051_f))))._field_Decl))._field_Generics,(*((*((*((*(_97051_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_97217_generics=(*((*((*(_97051_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_97051_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3ab91b:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d1366_ParamIns> _97921_p = *it;
			{
				if ((!(_1ab1cd055_IsSelf((*(_97921_p))._field_Decl.ptr())))) {
					(*(_97921_p))._field_Kind=_1ab26e04c_buildNonGenericTypeKind(_self_, &((*((*((*(_97921_p))._field_Decl))._field_Kind))._field_Decl), &(_97217_generics), _97067_ignored);
					__jule_func_result=(__jule_func_result && ((*(_97921_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1bb3ab91b:;
			++it;
			goto _iter_begin_1bb3ab91b;
		}
		_iter_end_1bb3ab91b:;
	};
	if ((!(_1ab1ce881_IsVoid((*((*(_97051_f))))._field_Decl.ptr())))) {
		(*((*(_97051_f))))._field_Result=_1ab26e04c_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_97051_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_97217_generics), _97067_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_97051_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab26e789_getTraitCheckFnKind(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _99244_f) {
	if (((*((*(_99244_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_99244_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ab1d2312_FnIns> _99613_ins = _1ab1d08d7_instanceForce((*(_99244_f)));;
	jule::Ptr<_1ab3083d3_typeChecker> _99813_tc = jule::new_ptr<_1ab3083d3_typeChecker>(_1ab3083d3_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ab31605b_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_99613_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3b1723:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d1366_ParamIns> _100321_p = *it;
			{
				if ((!(_1ab1cd055_IsSelf((*(_100321_p))._field_Decl.ptr())))) {
					(*(_100321_p))._field_Kind=_1ab310a7d_checkDecl(_99813_tc.ptr(), &((*((*((*(_100321_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1bb3b1723:;
			++it;
			goto _iter_begin_1bb3b1723;
		}
		_iter_end_1bb3b1723:;
	};
	if ((!(_1ab1ce881_IsVoid((*(_99244_f)).ptr())))) {
		(*(_99613_ins))._field_Result=_1ab310a7d_checkDecl(_99813_tc.ptr(), &((*((*((*((*(_99244_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _99613_ins;;
}



inline jule::Bool _1ab26ec40_checkConstraintsFn(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1d2312_FnIns>* _101543_f, jule::Ptr<_1ab182e72_Token>* _101559_et, jule::Ptr<_1ab1d2312_FnIns> _101575_exist) {
	jule::Ptr<_1ab218a0d_constraintChecker> _101613_cc = _1ab26b357_constraintChecker(_self_);;
	(*(_101613_cc))._field_et=(*(_101559_et));
	(*(_101613_cc))._field_fi=(*(_101543_f));
	if ((_101575_exist != nullptr)) {
		{
			auto expr = &((*(_101575_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb3b787d:;
			if (it != expr_end) {
				jule::I64 _102018_i = it - expr->begin();
				jule::Ptr<_1ab2e4b3e_InsGeneric> _102025_g = *it;
				{
					(*((*((*(_101543_f))))._field_Generics[_102018_i]))._field_Constraint=(*(_102025_g))._field_Constraint;
				}
				_iter_next_1bb3b787d:;
				++it;
				_102018_i++;
				goto _iter_begin_1bb3b787d;
			}
			_iter_end_1bb3b787d:;
		};
	} else {
		(*(_101613_cc))._field_uniq=true;
	};
	return _1ab219943_check(_101613_cc);;
}



inline jule::Bool _1ab2701e6_checkConstraintsStruct(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _102947_s, jule::Ptr<_1ab182e72_Token>* _102967_et, jule::Ptr<_1ab1bc1ed_StructIns> _102983_exist) {
	jule::Ptr<_1ab218a0d_constraintChecker> _103013_cc = _1ab26b357_constraintChecker(_self_);;
	(*(_103013_cc))._field_et=(*(_102967_et));
	(*(_103013_cc))._field_si=(*(_102947_s));
	if ((_102983_exist != nullptr)) {
		{
			auto expr = &((*(_102983_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb3baa90:;
			if (it != expr_end) {
				jule::I64 _103418_i = it - expr->begin();
				jule::Ptr<_1ab2e4b3e_InsGeneric> _103425_g = *it;
				{
					(*((*((*(_102947_s))))._field_Generics[_103418_i]))._field_Constraint=(*(_103425_g))._field_Constraint;
				}
				_iter_next_1bb3baa90:;
				++it;
				_103418_i++;
				goto _iter_begin_1bb3baa90;
			}
			_iter_end_1bb3baa90:;
		};
	} else {
		(*(_103013_cc))._field_uniq=true;
	};
	return _1ab219943_check(_103013_cc);;
}



inline jule::Bool _1ab2705e2_fnEnvironment(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1d2312_FnIns>* _104638_f, jule::Fn<jule::Bool(jule::Ptr<_1ab262e97_Sema>*,jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*)> _104649_algo) {
	jule::Ptr<_1ab262e97_Sema> _104713_sema = (*((*((*(_104638_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1ab2b0863_SymbolTable> _104813_old = (*((*((*((*(_104638_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1ab2656b4_setCurrentFile((*((*((*(_104638_f))))._field_Decl))._field_sema.ptr(), _104813_old);
	});;
	jule::Ptr<_1ab2b0863_SymbolTable> _105013_file = _1ab261bdd_findFile(&((*((*((*((*(_104638_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_104638_f))))._field_Decl))._field_Token))._field_File));;
	if ((_105013_file != nullptr)) {
		_1ab2656b4_setCurrentFile((*((*((*(_104638_f))))._field_Decl))._field_sema.ptr(), _105013_file);
	};
	jule::I64 _105513_size = (*((*(_104638_f))))._field_Generics.len();;
	if ((((*((*(_104638_f))))._field_Decl != nullptr) && ((*((*((*(_104638_f))))._field_Decl))._field_Owner != nullptr))) {
		_105513_size+=(*((*((*((*(_104638_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _106013_generics = jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>::alloc(0LL, _105513_size);;
	_1ab261869_appendGenericTypeAliases(&(_106013_generics), _104638_f);
	jule::Bool _10639_ok = _104649_algo(&(_104713_sema), &(_106013_generics));;
	if ((_104713_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_104713_sema))._field_errors);;
		(*(_104713_sema))._field_errors=nullptr;
	};
	return _10639_ok;;
}



inline void _1ab27089a_checkFnParamKind(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1d1366_ParamIns>* _107341_p) {
	(*((*((*(_107341_p))))._field_Kind))._field_Variadic=(*((*((*(_107341_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_107341_p))))._field_Decl))._field_Reference && (!(_1ab312a19_isValidForRef(&((*((*(_107341_p))))._field_Kind)))))) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_107341_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_107341_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1ab270bdb_reloadFnInsTypes(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1d2312_FnIns> _108040_f) {
	if ((_1ab1d3797_IsBuiltin(_108040_f.ptr()) || _1ab1d3a2d_IsAnon(_108040_f.ptr()))) {
		return true;;
	};
	return _1ab2705e2_fnEnvironment(_self_, &(_108040_f), jule::Fn<jule::Bool(jule::Ptr<_1ab262e97_Sema>*,jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>*)>([=](jule::Ptr<_1ab262e97_Sema>* _108443_sema, jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>* _108461_generics) mutable -> jule::Bool {
		jule::Bool _108517_ok = true;;
		{
			auto expr = &((*(_108040_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb3c976e:;
			if (it != expr_end) {
				jule::Ptr<_1ab1d1366_ParamIns> _108625_p = *it;
				{
					if (_1ab1cd055_IsSelf((*(_108625_p))._field_Decl.ptr())) {
						if (_1ab1cd2db_IsRef((*(_108625_p))._field_Decl.ptr())) {
							(*(_108625_p))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab302b2a_Sptr>(_1ab302b2a_Sptr{._field_Elem=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_108040_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_108625_p))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_108040_f))._field_Owner, 0)});
						};
					} else {
						(*(_108625_p))._field_Kind=_1ab26bc09_buildTypeWithGenerics((*(_108443_sema)), &((*((*((*(_108625_p))._field_Decl))._field_Kind))._field_Decl), (*(_108461_generics)), (*(_108040_f))._field_Refers);
						if (((*(_108625_p))._field_Kind != nullptr)) {
							_1ab27089a_checkFnParamKind(_self_, &(_108625_p));
						} else {
							_108517_ok=false;
						};
					};
				}
				_iter_next_1bb3c976e:;
				++it;
				goto _iter_begin_1bb3c976e;
			}
			_iter_end_1bb3c976e:;
		};
		if ((!(_1ab1ce881_IsVoid((*(_108040_f))._field_Decl.ptr())))) {
			(*(_108040_f))._field_Result=_1ab26bc09_buildTypeWithGenerics((*(_108443_sema)), &((*((*((*((*(_108040_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_108461_generics)), (*(_108040_f))._field_Refers);
			_108517_ok=(((*(_108040_f))._field_Result != nullptr) && _108517_ok);
		};
		return _108517_ok;;
	}));;
}



inline jule::Bool _1ab271192_checkRefValidityForInitExpr(jule::Ptr<_1ab262e97_Sema> _self_, jule::Bool _111647_leftMut, jule::Ptr<_1ab2b5c0e_Data>* _111667_d, jule::Ptr<_1ab182e72_Token>* _111682_errorToken) {
	if ((!(_1ab260637_isValidModelForRef(&((*((*(_111667_d))))._field_Model))))) {
		_1ab265ad2_pushErr(_self_.ptr(), (*(_111682_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_111647_leftMut && (!((*((*(_111667_d))))._field_Mutable)))) {
		_1ab265ad2_pushErr(_self_.ptr(), (*(_111682_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab2714d3_isMutRiskyStruct(_1ab262e97_Sema* _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _113332_s) {
	{
		auto expr = &((*((*(_113332_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3d2ab8:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bb64d_FieldIns> *_113416_f = it;
			{
				if ((((*((*((*(_113416_f))))._field_Decl))._field_Mutable && _1ab2e7da6_Mutable((*((*(_113416_f))))._field_Kind.ptr())) && _1ab266341_isAccessibleDefine(_self_, (*((*((*(_113416_f))))._field_Decl))._field_Public, (*((*((*(_113416_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1bb3d2ab8:;
			++it;
			goto _iter_begin_1bb3d2ab8;
		}
		_iter_end_1bb3d2ab8:;
	};
	return false;;
}



inline jule::Bool _1ab271aee_checkValidityForInitExpr(jule::Ptr<_1ab262e97_Sema> _self_, jule::Bool _116044_leftMut, jule::Bool _116059_leftRef, jule::Ptr<_1ab2e6525_TypeKind>* _116110_leftKind, jule::Ptr<_1ab2b5c0e_Data>* _116136_d, jule::Ptr<_1ab182e72_Token>* _116151_errorToken) {
	if ((_116044_leftMut && (!((*((*(_116136_d))))._field_Mutable)))) {
		if (_1ab2e7da6_Mutable((*((*(_116136_d))))._field_Kind.ptr())) {
			_1ab265ad2_pushErr(_self_.ptr(), (*(_116151_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_116136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1ab1bc1ed_StructIns> _116913_s = _1ab2ea1e9_Struct((*((*(_116136_d))))._field_Kind.ptr());;
		if (((_116913_s != nullptr) && _1ab2714d3_isMutRiskyStruct(_self_.ptr(), &(_116913_s)))) {
			_1ab265ad2_pushErr(_self_.ptr(), (*(_116151_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_116136_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_116059_leftRef) {
		if ((!(_1ab271192_checkRefValidityForInitExpr(_self_, _116044_leftMut, _116136_d, _116151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1ab29e599_assignTypeChecker> _118013_atc = jule::new_ptr<_1ab29e599_assignTypeChecker>(_1ab29e599_assignTypeChecker{._field_s=_self_, ._field_d=(*(_116136_d)), ._field_errorToken=(*(_116151_errorToken))});;
	return _1ab29ecc5_checkValidity(_118013_atc.ptr());;
}



inline jule::Bool _1ab271eea_checkTypeAliasDeclKind(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2e5733_TypeAlias>* _118847_ta, jule::Trait<_1ab31605b_Lookup> _118867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab2b0863_SymbolTable> _118913_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab2656b4_setCurrentFile(_self_.ptr(), _118913_old);
	});;
	if (((*((*(_118847_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1ab2b0863_SymbolTable> _119417_file = _1ab261bdd_findFile(&((*(_self_))._field_files), &((*((*((*(_118847_ta))))._field_Token))._field_File));;
		if ((_119417_file != nullptr)) {
			_1ab2656b4_setCurrentFile(_self_.ptr(), _119417_file);
		};
	};
	__jule_func_result=_1ab26b0c1_checkTypeWithRefers(_self_, &((*((*(_118847_ta))))._field_Kind), _118867_l, nullptr, jule::new_ptr<_1ab3073e3_referencer>(_1ab3073e3_referencer{._field_ident=(*((*(_118847_ta))))._field_Ident, ._field_owner=jule::Any((*(_118847_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_118847_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1ab2e9946_Arr((*((*((*(_118847_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1ab2e9946_Arr((*((*((*(_118847_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*((*(_118847_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ab27235d_checkTypeAliasDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2e5733_TypeAlias>* _121143_ta, jule::Trait<_1ab31605b_Lookup> _121163_l) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_121143_ta))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_121143_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1ab271eea_checkTypeAliasDeclKind(_self_, _121143_ta, _121163_l);
}



inline void _1ab272616_checkTypeAliasDeclDup(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2e5733_TypeAlias>* _121946_ta) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_121946_ta))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_121946_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ab2667e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_121946_ta)))), &((*((*(_121946_ta))))._field_Ident), (*((*(_121946_ta))))._field_Binded)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_121946_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_121946_ta))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab271eea_checkTypeAliasDeclKind(_self_, _121946_ta, jule::Trait<_1ab31605b_Lookup>(_self_, 3));
}



inline jule::Bool _1ab27289c_checkTypeAliasDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3e5416:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e5733_TypeAlias> _123221_ta = *it;
			{
				_1ab272616_checkTypeAliasDeclDup(_self_, &(_123221_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb3e5416:;
			++it;
			goto _iter_begin_1bb3e5416;
		}
		_iter_end_1bb3e5416:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bb427305_checkEnumItemsDup(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>> _124339_items) {
	{
		auto expr = &(_124339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4285d1:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4379_EnumItem> *_124416_item = it;
			{
				if (((*((*(_124416_item))))._field_Ident).empty()) {
					goto _iter_next_1bb4285d1;
				} else if (_1ab1858d1_IsIgnoreIdent((*((*(_124416_item))))._field_Ident)) {
					_1ab265ad2_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb4293a1:;
						if (it != expr_end) {
							jule::Ptr<_1ab1e4379_EnumItem> *_125024_citem = it;
							{
								if (((*(_124416_item)) == (*(_125024_citem)))) {
									goto _iter_end_1bb4293a1;
								} else if (((*((*(_124416_item))))._field_Ident == (*((*(_125024_citem))))._field_Ident)) {
									_1ab265ad2_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124416_item))))._field_Ident, &__jule_any_type4)}));
									_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bb4293a1;
								};
							}
							_iter_next_1bb4293a1:;
							++it;
							goto _iter_begin_1bb4293a1;
						}
						_iter_end_1bb4293a1:;
					};
				};
			}
			_iter_next_1bb4285d1:;
			++it;
			goto _iter_begin_1bb4285d1;
		}
		_iter_end_1bb4285d1:;
	};
}

inline void _1bb434400_checkEnumItemsDup(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>> _124339_items) {
	{
		auto expr = &(_124339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4356a9:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6029_TypeEnumItem> *_124416_item = it;
			{
				if (((*((*(_124416_item))))._field_Ident).empty()) {
					goto _iter_next_1bb4356a9;
				} else if (_1ab1858d1_IsIgnoreIdent((*((*(_124416_item))))._field_Ident)) {
					_1ab265ad2_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb436479:;
						if (it != expr_end) {
							jule::Ptr<_1ab1e6029_TypeEnumItem> *_125024_citem = it;
							{
								if (((*(_124416_item)) == (*(_125024_citem)))) {
									goto _iter_end_1bb436479;
								} else if (((*((*(_124416_item))))._field_Ident == (*((*(_125024_citem))))._field_Ident)) {
									_1ab265ad2_pushErr(_self_, (*((*(_124416_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124416_item))))._field_Ident, &__jule_any_type4)}));
									_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bb436479;
								};
							}
							_iter_next_1bb436479:;
							++it;
							goto _iter_begin_1bb436479;
						}
						_iter_end_1bb436479:;
					};
				};
			}
			_iter_next_1bb4356a9:;
			++it;
			goto _iter_begin_1bb4356a9;
		}
		_iter_end_1bb4356a9:;
	};
}



inline void _1ab272e0d_checkEnumItemsStr(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e4de6_Enum>* _126342_e) {
	jule::Ptr<_1ab2b7903_Eval> _126413_eval = _1ab26d07e_eval(_self_, jule::Trait<_1ab31605b_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_126342_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3e73b3:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4379_EnumItem> _126521_item = *it;
			{
				if (_1ab1e4731_AutoExpr(_126521_item.ptr())) {
					(*(_126521_item))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Constant=static__1a8d05bb3_NewStr((*(_126521_item))._field_Ident)})});
					(*((*((*(_126521_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_126521_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1ab2b5c0e_Data> _127421_d = _1ab2d5b63_evalExpr(_126413_eval, (*((*(_126521_item))._field_Value))._field_Expr);;
					if ((_127421_d == nullptr)) {
						goto _iter_next_1bb3e73b3;
					};
					if ((!(_1ab2b65d3_IsConst(_127421_d.ptr())))) {
						_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_126521_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1ab26d5e0_checkAssignType(_self_, false, &((*((*((*(_126342_e))))._field_Kind))._field_Kind), &(_127421_d), (*(_126521_item))._field_Token);
					(*((*(_126521_item))._field_Value))._field_Data=_127421_d;
				};
			}
			_iter_next_1bb3e73b3:;
			++it;
			goto _iter_begin_1bb3e73b3;
		}
		_iter_end_1bb3e73b3:;
	};
}



inline void _1bb402d6e_checkEnumItemInt(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2b7903_Eval>* _128946_eval, jule::Ptr<_1ab1e4de6_Enum>* _128964_e, jule::Ptr<_1ab2ee0ee_Prim>* _128975_prim, jule::Ptr<_1ab1e4379_EnumItem>* _128993_item, jule::U64* _1289115_n) {
	if (_1ab1e4731_AutoExpr((*(_128993_item)).ptr())) {
		(*((*(_128993_item))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		{
			
{
				_case_begin_1bb405b96:;
				{
					(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant=static__1a8d05630_NewU64((*(_1289115_n)));
				}
			}
			_match_end_1bb405ab9:;
		};
		(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ab2b5c0e_Data> _130417_d = _1ab2d5b63_evalExpr((*(_128946_eval)), (*((*((*(_128993_item))))._field_Value))._field_Expr);;
		if ((_130417_d == nullptr)) {
			return;;
		};
		if ((!(_1ab2b65d3_IsConst(_130417_d.ptr())))) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*((*((*(_128993_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ab26d5e0_checkAssignType(_self_, false, &((*((*((*(_128964_e))))._field_Kind))._field_Kind), &(_130417_d), (*((*(_128993_item))))._field_Token);
		(*((*((*(_128993_item))))._field_Value))._field_Data=_130417_d;
		{
			
{
				_case_begin_1bb40a9ae:;
				{
					(*(_1289115_n))=static_cast<jule::U64>(_1a8d06a82_ReadU64((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bb40a8c1:;
		};
	};
}

inline void _1bb412ed3_checkEnumItemInt(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2b7903_Eval>* _128946_eval, jule::Ptr<_1ab1e4de6_Enum>* _128964_e, jule::Ptr<_1ab2ee0ee_Prim>* _128975_prim, jule::Ptr<_1ab1e4379_EnumItem>* _128993_item, jule::I64* _1289115_n) {
	if (_1ab1e4731_AutoExpr((*(_128993_item)).ptr())) {
		(*((*(_128993_item))))._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()});
		{
			
{
				_case_begin_1bb41aa9b:;
				{
					(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant=static__1a8d05366_NewI64((*(_1289115_n)));
				}
			}
			_match_end_1bb41aa46:;
		};
		(*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ab2b5c0e_Data> _130417_d = _1ab2d5b63_evalExpr((*(_128946_eval)), (*((*((*(_128993_item))))._field_Value))._field_Expr);;
		if ((_130417_d == nullptr)) {
			return;;
		};
		if ((!(_1ab2b65d3_IsConst(_130417_d.ptr())))) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*((*((*(_128993_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ab26d5e0_checkAssignType(_self_, false, &((*((*((*(_128964_e))))._field_Kind))._field_Kind), &(_130417_d), (*((*(_128993_item))))._field_Token);
		(*((*((*(_128993_item))))._field_Value))._field_Data=_130417_d;
		{
			
{
				_case_begin_1bb420a4b:;
				{
					(*(_1289115_n))=static_cast<jule::I64>(_1a8d067eb_ReadI64((*((*((*((*(_128993_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bb4209d5:;
		};
	};
}



inline void _1bb3ee024_checkEnumItemsInt1(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2ee0ee_Prim>* _132444_prim, jule::Ptr<_1ab1e4de6_Enum>* _132462_e) {
	jule::U64 _132513_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1bb400e16:;
			{
				_132513_max=static_cast<jule::U64>(_1a8ced408_MaxU(_1ab2ee440_Str((*(_132444_prim)).ptr())));
			}
		}
		_match_end_1bb400d4a:;
	};
	jule::Ptr<_1ab2b7903_Eval> _133513_eval = _1ab26d07e_eval(_self_, jule::Trait<_1ab31605b_Lookup>(_self_, 3));;
	jule::U64 _133613_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ab1e4379_EnumItem> _133713_first = (*((*(_132462_e))))._field_Items[0LL];;
	_1bb402d6e_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_133713_first), &(_133613_n));
	if (((*((*(_133713_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bb40b0b9:;
				{
					_133613_n=static_cast<jule::U64>(_1a8d07852_AsU64((*((*((*(_133713_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bb40a926:;
		};
	};
	{
		auto expr = (*((*(_132462_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bb4077ad:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4379_EnumItem> _134921_item = *it;
			{
				if (((_1ab1e4731_AutoExpr(_134921_item.ptr()) && (_133613_n > 0LLU)) && ((_132513_max - _133613_n) <= 0LLU))) {
					_1ab265ad2_pushErr(_self_.ptr(), (*(_134921_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bb4077ad;
				};
				(_133613_n)++;
				_1bb402d6e_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_134921_item), &(_133613_n));
			}
			_iter_next_1bb4077ad:;
			++it;
			goto _iter_begin_1bb4077ad;
		}
		_iter_end_1bb4077ad:;
	};
}

inline void _1bb40c6c5_checkEnumItemsInt1(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2ee0ee_Prim>* _132444_prim, jule::Ptr<_1ab1e4de6_Enum>* _132462_e) {
	jule::I64 _132513_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1bb410d7c:;
			{
				_132513_max=static_cast<jule::I64>(_1a8ced13e_MaxI(_1ab2ee440_Str((*(_132444_prim)).ptr())));
			}
		}
		_match_end_1bb410d27:;
	};
	jule::Ptr<_1ab2b7903_Eval> _133513_eval = _1ab26d07e_eval(_self_, jule::Trait<_1ab31605b_Lookup>(_self_, 3));;
	jule::I64 _133613_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1ab1e4379_EnumItem> _133713_first = (*((*(_132462_e))))._field_Items[0LL];;
	_1bb412ed3_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_133713_first), &(_133613_n));
	if (((*((*(_133713_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bb411de4:;
				{
					_133613_n=static_cast<jule::I64>(_1a8d075bb_AsI64((*((*((*(_133713_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1bb412653:;
		};
	};
	{
		auto expr = (*((*(_132462_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bb4226eb:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4379_EnumItem> _134921_item = *it;
			{
				if (((_1ab1e4731_AutoExpr(_134921_item.ptr()) && (_133613_n > 0LL)) && ((_132513_max - _133613_n) <= 0LL))) {
					_1ab265ad2_pushErr(_self_.ptr(), (*(_134921_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bb4226eb;
				};
				(_133613_n)++;
				_1bb412ed3_checkEnumItemInt(_self_, &(_133513_eval), _132462_e, _132444_prim, &(_134921_item), &(_133613_n));
			}
			_iter_next_1bb4226eb:;
			++it;
			goto _iter_begin_1bb4226eb;
		}
		_iter_end_1bb4226eb:;
	};
}



inline void _1ab273aac_checkEnumItemsInt(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e4de6_Enum>* _135942_e) {
	jule::Ptr<_1ab2ee0ee_Prim> _13609_prim = _1ab2e8b76_Prim((*((*((*(_135942_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1a8d03b4a_IsSigInt((*(_13609_prim))._field_Kind)) {
			_case_begin_1bb40e595:;
			{
				_1bb40c6c5_checkEnumItemsInt1(_self_, &(_13609_prim), _135942_e);
			}
		}
		else {
			_case_begin_1bb3ed760:;
			{
				_1bb3ee024_checkEnumItemsInt1(_self_, &(_13609_prim), _135942_e);
			}
		}
		_match_end_1bb3ed6e9:;
	};
}



inline void _1ab273d65_checkEnumDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e4de6_Enum>* _136938_e) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_136938_e))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab2667e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_136938_e)))), &((*((*(_136938_e))))._field_Ident), false)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136938_e))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_136938_e))))._field_Items.len() == 0LL)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_136938_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1bb427305_checkEnumItemsDup(_self_.ptr(), (*((*(_136938_e))))._field_Items);
	if (((*((*(_136938_e))))._field_Kind != nullptr)) {
		if ((!(_1ab26b753_checkType(_self_, &((*((*(_136938_e))))._field_Kind), jule::Trait<_1ab31605b_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_136938_e))))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _139313_t = _1ab2e8b76_Prim((*((*((*(_136938_e))))._field_Kind))._field_Kind.ptr());;
	if ((_139313_t == nullptr)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ab302586_IsStr(_139313_t.ptr())) {
			_case_begin_1bb42e032:;
			{
				_1ab272e0d_checkEnumItemsStr(_self_, _136938_e);
			}
		}
		else if (_1a8d04222_IsInt(_1ab2ee440_Str(_139313_t.ptr()))) {
			_case_begin_1bb42dc35:;
			{
				_1ab273aac_checkEnumItemsInt(_self_, _136938_e);
			}
		}
		else {
			_case_begin_1bb42dbbe:;
			{
				_1ab265ad2_pushErr(_self_.ptr(), (*((*(_136938_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb42d30b:;
	};
}



inline void _1ab27411d_checkTypeEnumDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e6601_TypeEnum>* _141042_e) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_141042_e))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab2667e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_141042_e)))), &((*((*(_141042_e))))._field_Ident), false)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_141042_e))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_141042_e))))._field_Items.len() == 0LL)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_141042_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_141042_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1bb434400_checkEnumItemsDup(_self_.ptr(), (*((*(_141042_e))))._field_Items);
	{
		auto expr = &((*((*(_141042_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb430c9d:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6029_TypeEnumItem> _142421_item = *it;
			{
				if (((*(_142421_item))._field_Kind == nullptr)) {
					_1ab265ad2_pushErr(_self_.ptr(), (*(_142421_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1bb430c9d;
				};
				jule::Bool _142913_ok = _1ab26b753_checkType(_self_, &((*(_142421_item))._field_Kind), jule::Trait<_1ab31605b_Lookup>(_self_, 3));;
				if ((!(_142913_ok))) {
					goto _iter_next_1bb430c9d;
				};
				jule::Ptr<_1ab2ee0ee_Prim> _143313_p = _1ab2e8b76_Prim((*((*(_142421_item))._field_Kind))._field_Kind.ptr());;
				if (((_143313_p != nullptr) && _1ab30281c_IsAny(_143313_p.ptr()))) {
					_1ab265ad2_pushErr(_self_.ptr(), (*(_142421_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bb430c9d:;
			++it;
			goto _iter_begin_1bb430c9d;
		}
		_iter_end_1bb430c9d:;
	};
	if (((*((*(_141042_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1ab1e6029_TypeEnumItem> _143917_item = (*((*(_141042_e))))._field_Items[0LL];;
		_1ab2e6525_TypeKind _144013_tk = _1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_141042_e)), 4)};;
		if ((((*((*(_143917_item))._field_Kind))._field_Kind != nullptr) && _1ab2e6c2e_Equal((*((*(_143917_item))._field_Kind))._field_Kind, ((jule::Ptr<_1ab2e6525_TypeKind>)((&(_144013_tk))))))) {
			_1ab265ad2_pushErr(_self_.ptr(), (*(_143917_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1ab1e6942_Str((*(_141042_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1ab2743a4_checkEnumDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb440010:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4de6_Enum> _145121_e = *it;
			{
				_1ab273d65_checkEnumDecl(_self_, &(_145121_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb440010:;
			++it;
			goto _iter_begin_1bb440010;
		}
		_iter_end_1bb440010:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab27463a_checkTypeEnumDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb440a05:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6601_TypeEnum> _146321_e = *it;
			{
				_1ab27411d_checkTypeEnumDecl(_self_, &(_146321_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb440a05:;
			++it;
			goto _iter_begin_1bb440a05;
		}
		_iter_end_1bb440a05:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab27497b_checkDeclGenerics(_1ab262e97_Sema* _self_, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>* _147337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _147337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb443134:;
		if (it != expr_end) {
			jule::I64 _147513_i = it - expr->begin();
			jule::Ptr<_1ab1a577a_GenericDecl> *_147516_g = it;
			{
				if (_1ab1858d1_IsIgnoreIdent((*((*(_147516_g))))._field_Ident)) {
					_1ab265ad2_pushErr(_self_, (*((*(_147516_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bb443134;
				};
				_julec_label_1bb4447c8:;
				{
					auto expr = _147337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb4449c6:;
					if (it != expr_end) {
						jule::I64 _148417_j = it - expr->begin();
						jule::Ptr<_1ab1a577a_GenericDecl> *_148420_ct = it;
						{
							{
								
								if ((_148417_j >= _147513_i)) {
									_case_begin_1bb44560e:;
									{
										goto _iter_end_1bb4449c6;
									}
								}
								else if (((*((*(_147516_g))))._field_Ident == (*((*(_148420_ct))))._field_Ident)) {
									_case_begin_1bb445686:;
									{
										_1ab265ad2_pushErr(_self_, (*((*(_147516_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_147516_g))))._field_Ident, &__jule_any_type4)}));
										_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1bb4449c6;
									}
								}
								_match_end_1bb445510:;
							};
						}
						_iter_next_1bb4449c6:;
						++it;
						_148417_j++;
						goto _iter_begin_1bb4449c6;
					}
					_iter_end_1bb4449c6:;
				};
			}
			_iter_next_1bb443134:;
			++it;
			_147513_i++;
			goto _iter_begin_1bb443134;
		}
		_iter_end_1bb443134:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab274cbc_checkFnDeclParamsDup(_1ab262e97_Sema* _self_, jule::Ptr<_1ab1ce40d_Fn>* _150040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1bb446357:;
	{
		auto expr = &((*((*(_150040_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb447985:;
		if (it != expr_end) {
			jule::I64 _150313_i = it - expr->begin();
			jule::Ptr<_1ab1cc939_Param> *_150316_p = it;
			{
				{
					auto expr = &((*((*(_150040_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb447930:;
					if (it != expr_end) {
						jule::Ptr<_1ab1a577a_GenericDecl> *_150520_g = it;
						{
							if (((*((*(_150316_p))))._field_Ident == (*((*(_150520_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ab265ad2_pushErr(_self_, (*((*(_150316_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150316_p))))._field_Ident, &__jule_any_type4)}));
								_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1bb447985;
							};
						}
						_iter_next_1bb447930:;
						++it;
						goto _iter_begin_1bb447930;
					}
					_iter_end_1bb447930:;
				};
				_julec_label_1bb4485ac:;
				{
					auto expr = &((*((*(_150040_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb449239:;
					if (it != expr_end) {
						jule::I64 _151517_j = it - expr->begin();
						jule::Ptr<_1ab1cc939_Param> *_151520_jp = it;
						{
							{
								
								if ((_151517_j >= _150313_i)) {
									_case_begin_1bb44b082:;
									{
										goto _iter_end_1bb449239;
									}
								}
								else if (_1ab1858d1_IsIgnoreIdent((*((*(_150316_p))))._field_Ident) || _1ab1858d1_IsIgnoreIdent((*((*(_151520_jp))))._field_Ident) || _1ab185b9a_IsAnonIdent((*((*(_150316_p))))._field_Ident) || _1ab185b9a_IsAnonIdent((*((*(_151520_jp))))._field_Ident)) {
									_case_begin_1bb44b109:;
									{
										goto _iter_end_1bb449239;
									}
								}
								else if (((*((*(_150316_p))))._field_Ident == (*((*(_151520_jp))))._field_Ident)) {
									_case_begin_1bb44b181:;
									{
										__jule_func_result=false;
										_1ab265ad2_pushErr(_self_, (*((*(_150316_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150316_p))))._field_Ident, &__jule_any_type4)}));
										_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1bb447985;
									}
								}
								_match_end_1bb44ae72:;
							};
						}
						_iter_next_1bb449239:;
						++it;
						_151517_j++;
						goto _iter_begin_1bb449239;
					}
					_iter_end_1bb449239:;
				};
			}
			_iter_next_1bb447985:;
			++it;
			_150313_i++;
			goto _iter_begin_1bb447985;
		}
		_iter_end_1bb447985:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab27510d_checkFnDeclResultDup(_1ab262e97_Sema* _self_, jule::Ptr<_1ab1ce40d_Fn>* _153740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ab1ce881_IsVoid((*(_153740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_153740_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb44e508:;
		if (it != expr_end) {
			jule::I64 _154413_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> *_154416_v = it;
			{
				if ((_1ab1858d1_IsIgnoreIdent((*((*(_154416_v))))._field_Kind) || _1ab185b9a_IsAnonIdent((*((*(_154416_v))))._field_Kind))) {
					goto _iter_next_1bb44e508;
				};
				{
					auto expr = &((*((*(_153740_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb450691:;
					if (it != expr_end) {
						jule::Ptr<_1ab1a577a_GenericDecl> *_154920_g = it;
						{
							if (((*((*(_154416_v))))._field_Kind == (*((*(_154920_g))))._field_Ident)) {
								goto _julec_label_1bb451ce1;
							};
						}
						_iter_next_1bb450691:;
						++it;
						goto _iter_begin_1bb450691;
					}
					_iter_end_1bb450691:;
				};
				{
					auto expr = &((*((*(_153740_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb452154:;
					if (it != expr_end) {
						jule::Ptr<_1ab1cc939_Param> *_155520_p = it;
						{
							if (((*((*(_154416_v))))._field_Kind == (*((*(_155520_p))))._field_Ident)) {
								goto _julec_label_1bb451ce1;
							};
						}
						_iter_next_1bb452154:;
						++it;
						goto _iter_begin_1bb452154;
					}
					_iter_end_1bb452154:;
				};
				_julec_label_1bb4533a8:;
				{
					auto expr = &((*((*((*(_153740_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb4532cb:;
					if (it != expr_end) {
						jule::I64 _156317_j = it - expr->begin();
						jule::Ptr<_1ab182e72_Token> *_156320_jv = it;
						{
							{
								
								if ((_156317_j >= _154413_i)) {
									_case_begin_1bb4548d7:;
									{
										goto _iter_end_1bb4532cb;
									}
								}
								else if (((*((*(_156320_jv))))._field_Kind == (*((*(_154416_v))))._field_Kind)) {
									_case_begin_1bb45495e:;
									{
										goto _julec_label_1bb451ce1;
									}
								}
								_match_end_1bb4547c7:;
							};
						}
						_iter_next_1bb4532cb:;
						++it;
						_156317_j++;
						goto _iter_begin_1bb4532cb;
					}
					_iter_end_1bb4532cb:;
				};
				goto _iter_next_1bb44e508;
				_julec_label_1bb451ce1:;
				_1ab265ad2_pushErr(_self_, (*(_154416_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_154416_v))))._field_Kind, &__jule_any_type4)}));
				_1ab265e45_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1bb44e508:;
			++it;
			_154413_i++;
			goto _iter_begin_1bb44e508;
		}
		_iter_end_1bb44e508:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab27544e_checkFnVariadicParam(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _158245_f) {
	if (((*((*(_158245_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ab1cc939_Param> _158613_param = (*((*(_158245_f))))._field_Params[((*((*(_158245_f))))._field_Params.len() - 1LL)];;
	if (((*(_158613_param))._field_Variadic && (*(_158613_param))._field_Reference)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*(_158613_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ab275707_checkFnDeclPrototype(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _159545_f) {
	if (((*((*(_159545_f))))._field_Exceptional && (*((*(_159545_f))))._field_Binded)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_159545_f))))._field_Exceptional) {
		if (_1ab1ced9d_IsEntryPoint((*(_159545_f)).ptr())) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1ab1d0134_IsInit((*(_159545_f)).ptr())) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_159545_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ab27497b_checkDeclGenerics(_self_.ptr(), &((*((*(_159545_f))))._field_Generics))))) {
			_case_begin_1bb45bda6:;
		}
		else if ((!(_1ab274cbc_checkFnDeclParamsDup(_self_.ptr(), _159545_f)))) {
			_case_begin_1bb45be2d:;
		}
		else if ((!(_1ab27510d_checkFnDeclResultDup(_self_.ptr(), _159545_f)))) {
			_case_begin_1bb45bea5:;
		}
		else if ((!(_1ab27544e_checkFnVariadicParam(_self_, _159545_f)))) {
			_case_begin_1bb45c02c:;
		}
		_match_end_1bb45a525:;
	};
}



inline jule::Bool _1ab275bad_catchTraitInheritCycle(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e26da_Trait> _161742_t1, jule::Ptr<_1ab1e26da_Trait> _161758_t2, _1a7c4c7ed_StrBuilder* _161775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_161758_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb45e2c6:;
		if (it != expr_end) {
			jule::Ptr<_1ab2ed6e7_TypeSymbol> _161921_i = *it;
			{
				if (((*(_161921_i))._field_Kind == nullptr)) {
					goto _iter_next_1bb45e2c6;
				};
				jule::Ptr<_1ab1e26da_Trait> _162317_t3 = _1ab2ea480_Trait((*(_161921_i))._field_Kind.ptr());;
				if ((_161742_t1 == _162317_t3)) {
					_1ab27a93d_pushCycleError(_self_.ptr(), &((*(_161758_t2))._field_Ident), &((*(_162317_t3))._field_Ident), _161775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ab275bad_catchTraitInheritCycle(_self_, _161742_t1, _162317_t3, _161775_message)))) {
					_1ab27a93d_pushCycleError(_self_.ptr(), &((*(_161758_t2))._field_Ident), &((*(_162317_t3))._field_Ident), _161775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb45e2c6:;
			++it;
			goto _iter_begin_1bb45e2c6;
		}
		_iter_end_1bb45e2c6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab275eee__checkTraitDeclInherits(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e26da_Trait>* _163648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_163648_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb462a9e:;
		if (it != expr_end) {
			jule::I64 _163814_i = it - expr->begin();
			jule::Ptr<_1ab2ed6e7_TypeSymbol> _163821_it = *it;
			{
				if ((!(_1ab26b753_checkType(_self_, &(_163821_it), jule::Trait<_1ab31605b_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1bb462a9e;
				};
				jule::Ptr<_1ab1e26da_Trait> _164317_t2 = _1ab2ea480_Trait((*(_163821_it))._field_Kind.ptr());;
				if ((_164317_t2 == nullptr)) {
					_1ab265ad2_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163648_t))))._field_Ident, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_163821_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bb462a9e;
				};
				{
					auto expr = &((*((*(_163648_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb464b17:;
					if (it != expr_end) {
						jule::I64 _164917_j = it - expr->begin();
						jule::Ptr<_1ab2ed6e7_TypeSymbol> _164920_it2 = *it;
						{
							if ((_164917_j >= _163814_i)) {
								goto _iter_end_1bb464b17;
							};
							if ((((*(_164920_it2))._field_Kind != nullptr) && _1ab2e6c2e_Equal((*(_163821_it))._field_Kind, (*(_164920_it2))._field_Kind))) {
								_1ab265ad2_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_164317_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1bb464b17;
							};
						}
						_iter_next_1bb464b17:;
						++it;
						_164917_j++;
						goto _iter_begin_1bb464b17;
					}
					_iter_end_1bb464b17:;
				};
				if (((*(_163648_t)) == _164317_t2)) {
					_1ab265ad2_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163648_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1a7c4c7ed_StrBuilder _166321_message = static__1a7c4cb1c_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ab275bad_catchTraitInheritCycle(_self_, (*(_163648_t)), _164317_t2, &(_166321_message)));
					if ((_1a7c58155_Len(&_166321_message) > 0LL)) {
						jule::Str _166625_errMsg = _1a7c57bc1_Str(&_166321_message);;
						_1a7c57dbe_Clear(&_166321_message);
						_1ab27a93d_pushCycleError(_self_.ptr(), &((*((*(_163648_t))))._field_Ident), &((*(_164317_t2))._field_Ident), &(_166321_message));
						_166625_errMsg+=_1a7c57bc1_Str(&_166321_message);
						_1ab265ad2_pushErr(_self_.ptr(), (*((*(_163821_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_166625_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1bb462a9e:;
			++it;
			_163814_i++;
			goto _iter_begin_1bb462a9e;
		}
		_iter_end_1bb462a9e:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab2762a7_checkTraitDeclInherits(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e26da_Trait>* _167747_t) {
	{
		auto expr = &((*((*(_167747_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb469963:;
		if (it != expr_end) {
			jule::I64 _167814_i = it - expr->begin();
			jule::Ptr<_1ab2ed6e7_TypeSymbol> _167821_it = *it;
			{
				jule::Ptr<_1ab1e26da_Trait> _167917_t1 = _1ab2ea480_Trait((*(_167821_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_167747_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb46dd1e:;
					if (it != expr_end) {
						jule::I64 _168018_j = it - expr->begin();
						jule::Ptr<_1ab2ed6e7_TypeSymbol> _168025_it2 = *it;
						{
							if ((_168018_j == _167814_i)) {
								goto _iter_next_1bb46dd1e;
							};
							jule::Ptr<_1ab1e26da_Trait> _168421_t2 = _1ab2ea480_Trait((*(_168025_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_167917_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bb470491:;
								if (it != expr_end) {
									jule::Ptr<_1ab1ce40d_Fn> _168529_t1m = *it;
									{
										jule::Ptr<_1ab1ce40d_Fn> _168625_t2m = _1ab1e3389_FindMethod(_168421_t2.ptr(), (*(_168529_t1m))._field_Ident);;
										if ((_168625_t2m == nullptr)) {
											goto _iter_next_1bb470491;
										};
										jule::Ptr<_1ab1d2312_FnIns> _169021_t1f = _1ab26e789_getTraitCheckFnKind(_self_, &(_168529_t1m));;
										jule::Ptr<_1ab1d2312_FnIns> _169121_t2f = _1ab26e789_getTraitCheckFnKind(_self_, &(_168625_t2m));;
										if ((!(_1ab1d327a_equalTrait(_169021_t1f, &(_169121_t2f))))) {
											_1ab265ad2_pushErr(_self_.ptr(), (*((*(_167821_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_167747_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_168421_t2))._field_Ident, &__jule_any_type4),jule::Any(_1ab1d41b0_GetKindStr(_169021_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1ab1d41b0_GetKindStr(_169121_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1bb470491:;
									++it;
									goto _iter_begin_1bb470491;
								}
								_iter_end_1bb470491:;
							};
						}
						_iter_next_1bb46dd1e:;
						++it;
						_168018_j++;
						goto _iter_begin_1bb46dd1e;
					}
					_iter_end_1bb46dd1e:;
				};
			}
			_iter_next_1bb469963:;
			++it;
			_167814_i++;
			goto _iter_begin_1bb469963;
		}
		_iter_end_1bb469963:;
	};
}



inline void _1ab276560_checkTraitDeclMethod(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _170245_f) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_170245_f))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_170245_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab185b9a_IsAnonIdent((*((*(_170245_f))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_170245_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_170245_f))))._field_sema=_self_;
	_1ab275707_checkFnDeclPrototype(_self_, _170245_f);
	jule::Ptr<_1ab1d2312_FnIns> _171013_ins = _1ab1d0b6d_instance((*(_170245_f)));;
	_1ab270bdb_reloadFnInsTypes(_self_, _171013_ins);
	(*(_171013_ins))._field_reloaded=true;
	_1ab1d0e7b_appendInstance((*(_170245_f)).ptr(), &(_171013_ins));
}



inline void _1ab276818_checkTraitDeclMethods(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e26da_Trait>* _171646_t) {
	{
		auto expr = &((*((*(_171646_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb477575:;
		if (it != expr_end) {
			jule::I64 _171714_i = it - expr->begin();
			jule::Ptr<_1ab1ce40d_Fn> _171721_f = *it;
			{
				_1ab276560_checkTraitDeclMethod(_self_, &(_171721_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1ab1e3a1b_findMethodInherit((*(_171646_t)).ptr(), &((*(_171721_f))._field_Ident)) != nullptr)) {
					_1ab265ad2_pushErr(_self_.ptr(), (*(_171721_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171721_f))._field_Ident, &__jule_any_type4)}));
					_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1bb477575;
				};
				_julec_label_1bb479de6:;
				{
					auto expr = &((*((*(_171646_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb478ac6:;
					if (it != expr_end) {
						jule::I64 _173317_j = it - expr->begin();
						jule::Ptr<_1ab1ce40d_Fn> _173320_jf = *it;
						{
							{
								
								if ((_173317_j >= _171714_i)) {
									_case_begin_1bb47b2b0:;
									{
										goto _iter_end_1bb478ac6;
									}
								}
								else if (((*(_171721_f))._field_Ident == (*(_173320_jf))._field_Ident)) {
									_case_begin_1bb47b337:;
									{
										_1ab265ad2_pushErr(_self_.ptr(), (*(_171721_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171721_f))._field_Ident, &__jule_any_type4)}));
										_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1bb478ac6;
									}
								}
								_match_end_1bb47b1a0:;
							};
						}
						_iter_next_1bb478ac6:;
						++it;
						_173317_j++;
						goto _iter_begin_1bb478ac6;
					}
					_iter_end_1bb478ac6:;
				};
			}
			_iter_next_1bb477575:;
			++it;
			_171714_i++;
			goto _iter_begin_1bb477575;
		}
		_iter_end_1bb477575:;
	};
}



inline void _1ab276ac1_checkTraitDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1e26da_Trait>* _175239_t) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_175239_t))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_175239_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab2667e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_175239_t)))), &((*((*(_175239_t))))._field_Ident), false)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_175239_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_175239_t))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab2762a7_checkTraitDeclInherits(_self_, _175239_t);
	_1ab276818_checkTraitDeclMethods(_self_, _175239_t);
}



inline jule::Bool _1ab276d57_checkTraitDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb48111c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> _176621_t = *it;
			{
				_1ab276ac1_checkTraitDecl(_self_, &(_176621_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb48111c:;
			++it;
			goto _iter_begin_1bb48111c;
		}
		_iter_end_1bb48111c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab277253_checkTraitImplMethods(_1ab262e97_Sema* _self_, jule::Ptr<_1ab1e26da_Trait>* _177645_base, jule::Ptr<_1ab21ad62_Impl>* _177660_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_177660_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb482c56:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> *_177816_f = it;
			{
				if ((_1ab1e3389_FindMethod((*(_177645_base)).ptr(), (*((*(_177816_f))))._field_Ident) == nullptr)) {
					_1ab265ad2_pushErr(_self_, (*((*(_177816_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_177645_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_177816_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bb482c56:;
			++it;
			goto _iter_begin_1bb482c56;
		}
		_iter_end_1bb482c56:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab27764e_implToStruct(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1b9470_Struct>* _178737_dest, jule::Ptr<_1ab21ad62_Impl>* _178757_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_178757_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4853a7:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _179121_f = *it;
			{
				if (((_1ab1ba0db_FindMethod((*(_178737_dest)).ptr(), (*(_179121_f))._field_Ident, (*(_179121_f))._field_Statically) != nullptr) || (_1ab1ba76d_FindField((*(_178737_dest)).ptr(), (*(_179121_f))._field_Ident) != nullptr))) {
					_1ab265ad2_pushErr(_self_.ptr(), (*(_179121_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178737_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_179121_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bb4853a7;
				};
				if ((((*((*(_178737_dest))))._field_Generics.len() > 0LL) && ((*(_179121_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_179121_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb48829a:;
						if (it != expr_end) {
							jule::Ptr<_1ab1a577a_GenericDecl> _179924_fg = *it;
							{
								{
									auto expr = &((*((*(_178737_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bb488b6e:;
									if (it != expr_end) {
										jule::Ptr<_1ab1a577a_GenericDecl> _180028_dg = *it;
										{
											if (((*(_179924_fg))._field_Ident == (*(_180028_dg))._field_Ident)) {
												_1ab265ad2_pushErr(_self_.ptr(), (*(_179924_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1bb488b6e:;
										++it;
										goto _iter_begin_1bb488b6e;
									}
									_iter_end_1bb488b6e:;
								};
							}
							_iter_next_1bb48829a:;
							++it;
							goto _iter_begin_1bb48829a;
						}
						_iter_end_1bb48829a:;
					};
				};
				_1ab266b5a_checkDirectives(_self_, &((*(_179121_f))._field_Directives), jule::Any(_179121_f, &__jule_any_type64));
				(*(_179121_f))._field_sema=_self_;
				(*(_179121_f))._field_Owner=(*(_178737_dest));
				{ jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> &__jule_push_dest = (*((*(_178737_dest))))._field_Methods; __jule_push_dest.push(_179121_f); };
			}
			_iter_next_1bb4853a7:;
			++it;
			goto _iter_begin_1bb4853a7;
		}
		_iter_end_1bb4853a7:;
	};
	{
		auto expr = &((*((*(_178757_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb485286:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _181621_v = *it;
			{
				;
				if (((_1ab1ba0db_FindMethod((*(_178737_dest)).ptr(), (*(_181621_v))._field_Ident, true) != nullptr) || (_1ab1ba42c_FindStatic((*(_178737_dest)).ptr(), (*(_181621_v))._field_Ident) != nullptr))) {
					_1ab265ad2_pushErr(_self_.ptr(), (*(_181621_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178737_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_181621_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1bb485286;
				};
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_178737_dest))))._field_Statics; __jule_push_dest.push(_181621_v); };
			}
			_iter_next_1bb485286:;
			++it;
			goto _iter_begin_1bb485286;
		}
		_iter_end_1bb485286:;
	};
	return __jule_func_result;;
}



inline void _1ab277907_implTrait(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab21ad62_Impl>* _182934_decl) {
	jule::Ptr<_1ab2e6525_TypeKind> _183013_base_t = _1ab26c38b_selectType(_self_, &((*((*(_182934_decl))))._field_Base));;
	if ((_183013_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab1e26da_Trait> _183413_base = _1ab2ea480_Trait(_183013_base_t.ptr());;
	if ((_183413_base == nullptr)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str(_183013_base_t.ptr()), &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _184113_destT = _1ab26c38b_selectType(_self_, &((*((*(_182934_decl))))._field_Dest));;
	if ((_184113_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _184513_destS = _1ab2ea1e9_Struct(_184113_destT.ptr());;
	if ((_184513_destS == nullptr)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str(_184113_destT.ptr()), &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab1b9470_Struct> _185213_dest = (*(_184513_destS))._field_Decl;;
	if ((_1ab188dac_Dir((*((*(_185213_dest))._field_Token))._field_File.ptr()) != _1ab188dac_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1ab28366b_pushImplemented(_183413_base, &(_185213_dest));
	_1ab283957_pushImplements(&(_185213_dest), _183413_base);
	if (((*((*(_182934_decl))))._field_Statics.len() > 0LL)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_182934_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ab277253_checkTraitImplMethods(_self_.ptr(), &(_183413_base), _182934_decl)))) {
			_case_begin_1bb497d7b:;
		}
		else if ((!(_1ab27764e_implToStruct(_self_, &(_185213_dest), _182934_decl)))) {
			_case_begin_1bb497e03:;
		}
		_match_end_1bb4953c8:;
	};
}



inline void _1ab277bb0_implStruct(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab21ad62_Impl>* _187235_decl) {
	jule::Ptr<_1ab2e6525_TypeKind> _187313_destT = _1ab26c38b_selectType(_self_, &((*((*(_187235_decl))))._field_Dest));;
	if ((_187313_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _187713_destS = _1ab2ea1e9_Struct(_187313_destT.ptr());;
	if ((_187713_destS == nullptr)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_187235_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str(_187313_destT.ptr()), &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab1b9470_Struct> _188413_dest = (*(_187713_destS))._field_Decl;;
	if ((_1ab188dac_Dir((*((*(_188413_dest))._field_Token))._field_File.ptr()) != _1ab188dac_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*((*(_187235_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ab27764e_implToStruct(_self_, &(_188413_dest), _187235_decl)))) {
			_case_begin_1bb49d9db:;
		}
		_match_end_1bb49c1d2:;
	};
}



inline void _1ab277e68_implImpl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab21ad62_Impl>* _189633_decl) {
	{
		
		if (_1ab21b22a_IsTraitImpl((*(_189633_decl)).ptr())) {
			_case_begin_1bb49e5be:;
			{
				_1ab277907_implTrait(_self_, _189633_decl);
			}
		}
		else if (_1ab21b4b1_IsStructImpl((*(_189633_decl)).ptr())) {
			_case_begin_1bb49e646:;
			{
				_1ab277bb0_implStruct(_self_, _189633_decl);
			}
		}
		_match_end_1bb49e4ae:;
	};
}



inline void _1ab2782cb_checkVarDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2853a4_Var>* _190737_decl, jule::Trait<_1ab31605b_Lookup> _190753_l) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_190737_decl))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ab2859c0_IsTypeInferred((*(_190737_decl)).ptr())) {
		if ((!(_1ab285739_IsInitialized((*(_190737_decl)).ptr())))) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1ab26b753_checkType(_self_, &((*((*(_190737_decl))))._field_Kind), _190753_l);
	};
	if ((*((*(_190737_decl))))._field_Reference) {
		if ((*((*(_190737_decl))))._field_Constant) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Statically) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1ab285739_IsInitialized((*(_190737_decl)).ptr())))) {
		if ((*((*(_190737_decl))))._field_Constant) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Statically) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_190737_decl))))._field_Reference) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*(_190737_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ab278584_checkGlobalVarDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2853a4_Var>* _194443_decl) {
	if (_1ab2667e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_194443_decl)))), &((*((*(_194443_decl))))._field_Ident), (*((*(_194443_decl))))._field_Binded)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_194443_decl))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_194443_decl))))._field_Binded && (*((*(_194443_decl))))._field_Constant)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_194443_decl))))._field_Binded)) && (!((*((*(_194443_decl))))._field_Constant))) && (!((*((*(_194443_decl))))._field_Statically)))) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_194443_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1ab266b5a_checkDirectives(_self_, &((*((*(_194443_decl))))._field_Directives), jule::Any((*(_194443_decl)), &__jule_any_type8));
	_1ab2782cb_checkVarDecl(_self_, _194443_decl, jule::Trait<_1ab31605b_Lookup>(_self_, 3));
}



inline jule::Bool _1ab27881a_checkGlobalDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4ac1e2:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _196221_decl = *it;
			{
				_1ab278584_checkGlobalVarDecl(_self_, &(_196221_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb4ac1e2:;
			++it;
			goto _iter_begin_1bb4ac1e2;
		}
		_iter_end_1bb4ac1e2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab278c16_checkStructTraitImpl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1b9470_Struct>* _197245_strct, jule::Ptr<_1ab1e26da_Trait>* _197266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_197266_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4add1a:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _197321_tf = *it;
			{
				jule::Bool _197417_exist = false;;
				jule::Ptr<_1ab1ce40d_Fn> _197517_sf = _1ab1ba0db_FindMethod((*(_197245_strct)).ptr(), (*(_197321_tf))._field_Ident, (*(_197321_tf))._field_Statically);;
				jule::Ptr<_1ab1d2312_FnIns> _197613_tfK = _1ab26e789_getTraitCheckFnKind(_self_, &(_197321_tf));;
				if ((_197517_sf != nullptr)) {
					jule::Ptr<_1ab1d2312_FnIns> _197821_sfK = _1ab26e789_getTraitCheckFnKind(_self_, &(_197517_sf));;
					_197417_exist=_1ab1d327a_equalTrait(_197613_tfK, &(_197821_sfK));
				};
				if (_197417_exist) {
					jule::Ptr<_1ab19798c_Directive> _198217_d = _1ab2de573_findDirective(&((*(_197517_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_198217_d != nullptr)) {
						_1ab265ad2_pushErr(_self_.ptr(), (*(_198217_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ab265ad2_pushErr(_self_.ptr(), (*((*(_197245_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_197266_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1ab1d41b0_GetKindStr(_197613_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1bb4add1a:;
			++it;
			goto _iter_begin_1bb4add1a;
		}
		_iter_end_1bb4add1a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab279057_checkStructImpls(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1b9470_Struct>* _199641_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_199641_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4b4958:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> _199821_trt = *it;
			{
				__jule_func_result=(_1ab278c16_checkStructTraitImpl(_self_, _199641_s, &(_199821_trt)) && __jule_func_result);
			}
			_iter_next_1bb4b4958:;
			++it;
			goto _iter_begin_1bb4b4958;
		}
		_iter_end_1bb4b4958:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab279398_checkStructFields(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1b9470_Struct>* _200442_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_200442_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4b5dcc:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b657c_Field> _200621_f = *it;
			{
				(*(_200621_f))._field_Owner=(*(_200442_st));
				{
					auto expr = &((*((*(_200442_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb4b6b25:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b657c_Field> _200820_cf = *it;
						{
							if ((_200621_f == _200820_cf)) {
								goto _iter_end_1bb4b6b25;
							} else if (((*(_200621_f))._field_Ident == (*(_200820_cf))._field_Ident)) {
								_1ab265ad2_pushErr(_self_.ptr(), (*(_200621_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_200621_f))._field_Ident, &__jule_any_type4)}));
								_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1bb4b6b25:;
						++it;
						goto _iter_begin_1bb4b6b25;
					}
					_iter_end_1bb4b6b25:;
				};
			}
			_iter_next_1bb4b5dcc:;
			++it;
			goto _iter_begin_1bb4b5dcc;
		}
		_iter_end_1bb4b5dcc:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab279651_checkStructDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1b9470_Struct>* _202140_s) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_202140_s))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_202140_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab2667e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_202140_s)))), &((*((*(_202140_s))))._field_Ident), (*((*(_202140_s))))._field_Binded)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_202140_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_202140_s))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab266b5a_checkDirectives(_self_, &((*((*(_202140_s))))._field_Directives), jule::Any((*(_202140_s)), &__jule_any_type65));
	{
		
		if ((!(_1ab27497b_checkDeclGenerics(_self_.ptr(), &((*((*(_202140_s))))._field_Generics))))) {
			_case_begin_1bb4bb9b5:;
		}
		else if ((!(_1ab279398_checkStructFields(_self_, _202140_s)))) {
			_case_begin_1bb4bba2b:;
		}
		else if ((!(_1ab279057_checkStructImpls(_self_, _202140_s)))) {
			_case_begin_1bb4bba92:;
		}
		else if ((!(_1ab27a289_checkFuncDeclsBy(_self_, &((*((*(_202140_s))))._field_Methods))))) {
			_case_begin_1bb4bbb19:;
		}
		_match_end_1bb4bb4dc:;
	};
}



inline jule::Bool _1ab2798d7_checkStructDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4bd8b8:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _204121_s = *it;
			{
				_1ab279651_checkStructDecl(_self_, &(_204121_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb4bd8b8:;
			++it;
			goto _iter_begin_1bb4bd8b8;
		}
		_iter_end_1bb4bd8b8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab279b90_checkAnonFuncDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _205142_f) {
	(*((*(_205142_f))))._field_sema=_self_;
	_1ab275707_checkFnDeclPrototype(_self_, _205142_f);
}



inline void _1ab279e48_checkFuncDecl(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _205638_f) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_205638_f))))._field_Ident)) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab1d03ba_IsAnon((*(_205638_f)).ptr())) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1ab266b5a_checkDirectives(_self_, &((*((*(_205638_f))))._field_Directives), jule::Any((*(_205638_f)), &__jule_any_type64));
	_1ab279b90_checkAnonFuncDecl(_self_, _205638_f);
	if ((((*((*(_205638_f))))._field_Owner == nullptr) && _1ab2667e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_205638_f)))), &((*((*(_205638_f))))._field_Ident), (*((*(_205638_f))))._field_Binded))) {
		if ((*((*(_205638_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ab1ce40d_Fn> _206817_init = _1ab26452b_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_206817_init != nullptr)) {
				return;;
			};
		};
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_205638_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_205638_f))))._field_Ident, &__jule_any_type4)}));
		_1ab265e45_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab27a289_checkFuncDeclsBy(jule::Ptr<_1ab262e97_Sema> _self_, jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>* _207841_funcs) {
	{
		auto expr = _207841_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4c5eca:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _207921_f = *it;
			{
				_1ab279e48_checkFuncDecl(_self_, &(_207921_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1bb4c5eca:;
			++it;
			goto _iter_begin_1bb4c5eca;
		}
		_iter_end_1bb4c5eca:;
	};
	return true;;
}



inline jule::Bool _1ab27a520_checkFuncDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ab27a289_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ab27a93d_pushCycleError(_1ab262e97_Sema* _self_, jule::Str* _209430_st1, jule::Str* _209441_st2, _1a7c4c7ed_StrBuilder* _209456_message) {
	;
	jule::Str _20969_refersTo = _1a7d06005_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_209430_st1)), &__jule_any_type4),jule::Any((*(_209441_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _209713_buf = _1a7c58672_Buf(_209456_message);;
	_1a7c573c9_WriteStr(_209456_message, _1a7c36ba0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1a7c573c9_WriteStr(_209456_message, _20969_refersTo);
	_1a7c57682_WriteByte(_209456_message, '\n');
	_1a7c57121_Write(_209456_message, _209713_buf);
}



inline void _1ab27b0e2_checkPackageDecls(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4cb3ed:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _212121_f = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _212121_f);
				if ((!(_1ab27289c_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bb4cb3ed:;
			++it;
			goto _iter_begin_1bb4cb3ed;
		}
		_iter_end_1bb4cb3ed:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4cd9c7:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _212821_f = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _212821_f);
				if ((!(_1ab276d57_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bb4cd9c7:;
			++it;
			goto _iter_begin_1bb4cd9c7;
		}
		_iter_end_1bb4cd9c7:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4cd28a:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _213521_f = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _213521_f);
				if ((!(_1ab27881a_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bb4cd28a:;
			++it;
			goto _iter_begin_1bb4cd28a;
		}
		_iter_end_1bb4cd28a:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4d0963:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _214221_f = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _214221_f);
				{
					
					if ((!(_1ab27a520_checkFuncDecls(_self_)))) {
						_case_begin_1bb4d17aa:;
					}
					else if ((!(_1ab2798d7_checkStructDecls(_self_)))) {
						_case_begin_1bb4d1821:;
					}
					else {
						_case_begin_1bb4d1744:;
						{
							goto _iter_next_1bb4d0963;
						}
					}
					_match_end_1bb4d16de:;
				};
				return;;
			}
			_iter_next_1bb4d0963:;
			++it;
			goto _iter_begin_1bb4d0963;
		}
		_iter_end_1bb4d0963:;
	};
}



inline void _1ab27b455_checkDataForTypeInference(_1ab262e97_Sema* _self_, jule::Ptr<_1ab2b5c0e_Data>* _215445_d, jule::Ptr<_1ab182e72_Token>* _215456_err_token) {
	{
		
		if (_1ab2b60b6_IsNil((*(_215445_d)).ptr())) {
			_case_begin_1bb4d28ee:;
			{
				_1ab265ad2_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1ab2b634c_IsVoid((*(_215445_d)).ptr())) {
			_case_begin_1bb4d2976:;
			{
				_1ab265ad2_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_215445_d))))._field_Kind))._field_Variadic) {
			_case_begin_1bb4d29ed:;
			{
				_1ab265ad2_pushErr(_self_, (*(_215456_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb4d27cd:;
	};
}



inline void _1ab27b70d_checkVarValue(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2853a4_Var>* _216638_v) {
	if (_1ab2859c0_IsTypeInferred((*(_216638_v)).ptr())) {
		(*((*(_216638_v))))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind});
		_1ab27b455_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
		_1ab271aee_checkValidityForInitExpr(_self_, (*((*(_216638_v))))._field_Mutable, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1ab30591e_Arr> _217917_arr = _1ab2e9946_Arr((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr());;
		if ((_217917_arr != nullptr)) {
			if ((*(_217917_arr))._field_Auto) {
				jule::Ptr<_1ab30591e_Arr> _218221_dataArr = _1ab2e9946_Arr((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_218221_dataArr != nullptr)) {
					(*(_217917_arr))._field_N=(*(_218221_dataArr))._field_N;
				};
			};
		};
		if (_1ab26d5e0_checkAssignType(_self_, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token)) {
			_1ab271aee_checkValidityForInitExpr(_self_, (*((*(_216638_v))))._field_Mutable, (*((*(_216638_v))))._field_Reference, &((*((*((*(_216638_v))))._field_Kind))._field_Kind), &((*((*((*(_216638_v))))._field_Value))._field_Data), &((*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_216638_v))))._field_Reference && (!(_1ab312a19_isValidForRef(&((*((*((*(_216638_v))))._field_Kind))._field_Kind)))))) {
		_1ab265ad2_pushErr(_self_.ptr(), (*((*(_216638_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_216638_v))))._field_Constant) {
		if (((!(_1ab2b65d3_IsConst((*((*((*(_216638_v))))._field_Value))._field_Data.ptr()))) && (!(_1ab2eac33_comptime((*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Kind.ptr()))))) {
			_1ab265ad2_pushErr(_self_.ptr(), (*((*((*((*(_216638_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_216638_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_1ab2ea99c_Tup((*((*((*(_216638_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_216638_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1ab27ba71_evalVarValue(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2853a4_Var>* _221837_decl, jule::Trait<_1ab31605b_Lookup> _221853_l) {
	if ((!(_1ab285739_IsInitialized((*(_221837_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1ab2b7903_Eval> _222317_eval = nullptr;;
	if (((*((*(_221837_decl))))._field_Kind != nullptr)) {
		_222317_eval=_1ab26c842_evalpd(_self_, _221853_l, (*((*((*(_221837_decl))))._field_Kind))._field_Kind, (*(_221837_decl)));
	} else {
		_222317_eval=_1ab26c842_evalpd(_self_, _221853_l, nullptr, (*(_221837_decl)));
	};
	(*(_222317_eval))._field_immutable=(!((*((*(_221837_decl))))._field_Mutable));
	(*((*((*(_221837_decl))))._field_Value))._field_Data=_1ab2d5b63_evalExpr(_222317_eval, (*((*((*(_221837_decl))))._field_Value))._field_Expr);
}



inline void _1ab27bdd4_checkVar(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab2853a4_Var>* _223533_decl, jule::Trait<_1ab31605b_Lookup> _223549_l) {
	_1ab27ba71_evalVarValue(_self_, _223533_decl, _223549_l);
	if (((*((*((*(_223533_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ab27b70d_checkVarValue(_self_, _223533_decl);
}



inline void _1ab27c0d2_checkGlobals(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb4e8838:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _224521_decl = *it;
			{
				if ((*(_224521_decl))._field_Binded) {
					goto _iter_next_1bb4e8838;
				};
				if (((_1ab285739_IsInitialized(_224521_decl.ptr()) && ((*((*(_224521_decl))._field_Value))._field_Data == nullptr)) || (_1ab2859c0_IsTypeInferred(_224521_decl.ptr()) && ((*((*(_224521_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1ab27bdd4_checkVar(_self_, &(_224521_decl), jule::Trait<_1ab31605b_Lookup>(_self_, 3));
				};
			}
			_iter_next_1bb4e8838:;
			++it;
			goto _iter_begin_1bb4e8838;
		}
		_iter_end_1bb4e8838:;
	};
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab27c4cd_readyToCheckFn(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _225939_s, jule::Ptr<_1ab1ce40d_Fn>* _225959_f) {
	jule::Ptr<_1ab1d2312_FnIns> _226013_ins = _1ab1d0b6d_instance((*(_225959_f)));;
	if (((*((*(_225959_f))))._field_Instances.len() != 0LL)) {
		return _226013_ins;;
	};
	(*(_226013_ins))._field_Owner=(*(_225939_s));
	_1ab1d0e7b_appendInstance((*(_225959_f)).ptr(), &(_226013_ins));
	(*(_226013_ins))._field_reloaded=true;
	if (_1ab270bdb_reloadFnInsTypes(_self_, _226013_ins)) {
		return _226013_ins;;
	};
	return nullptr;;
}



inline void _1ab27c841_checkTypeMethod(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _227340_s, jule::Ptr<_1ab1ce40d_Fn>* _227360_f) {
	if (((*((*(_227360_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _227813_ins = (*((*(_227360_f))))._field_Instances[0LL];;
	if (((*((*(_227813_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ab2802e4_checkFnIns(_self_, &(_227813_ins));
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab27cce7_checkStructInsOp(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _228641_s, jule::Ptr<_1ab1ce40d_Fn>* _228661_f, jule::Fn<jule::Bool(jule::Ptr<_1ab1ce40d_Fn>)> _228669_p) {
	if (((((*(_228661_f)) == nullptr) || ((*((*(_228661_f))))._field_Generics.len() > 0LL)) || (!(_228669_p((*(_228661_f))))))) {
		return nullptr;;
	};
	return (*((*(_228661_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ab27d1e3_checkStructEnv(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _229639_s, jule::Ptr<_1ab182e72_Token> _229658_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ab3083d3_typeChecker _229713_tc = _1ab3083d3_typeChecker{._field_s=(*((*((*(_229639_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1ab31605b_Lookup>((*((*((*(_229639_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1ab31605b_Lookup>((*((*((*(_229639_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1ab3073e3_referencer>(_1ab3073e3_referencer{._field_ident=(*((*((*(_229639_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_229639_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_229639_s))))._field_Refers, };;
	if (((*((*(_229639_s))))._field_Generics.len() > 0LL)) {
		_229713_tc._field_useGenerics=jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>::alloc(0LL, (*((*(_229639_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_229639_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb504cd9:;
			if (it != expr_end) {
				jule::I64 _231018_i = it - expr->begin();
				jule::Ptr<_1ab2e4b3e_InsGeneric> _231025_g = *it;
				{
					jule::Ptr<_1ab1a577a_GenericDecl> _231121_decl = (*((*((*(_229639_s))))._field_Decl))._field_Generics[_231018_i];;
					{ jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> &__jule_push_dest = _229713_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1ab2e5733_TypeAlias>(_1ab2e5733_TypeAlias{._field_Token=(*(_231121_decl))._field_Token, ._field_Ident=(*(_231121_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_231025_g))._field_Kind}), })); };
				}
				_iter_next_1bb504cd9:;
				++it;
				_231018_i++;
				goto _iter_begin_1bb504cd9;
			}
			_iter_end_1bb504cd9:;
		};
	};
	jule::Ptr<_1ab2b0863_SymbolTable> _232013_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab2656b4_setCurrentFile(_self_.ptr(), _232013_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_229639_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1ab2b0863_SymbolTable> _232417_file = _1ab261bdd_findFile(&((*(_self_))._field_files), &((*((*((*((*(_229639_s))))._field_Decl))._field_Token))._field_File));;
		if ((_232417_file != nullptr)) {
			_1ab2656b4_setCurrentFile(_self_.ptr(), _232417_file);
		};
	};
	if (((*((*(_229639_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ab218a0d_constraintChecker> _233117_cc = _1ab26b357_constraintChecker(_self_);;
		(*(_233117_cc))._field_et=_229658_errorToken;
		(*(_233117_cc))._field_si=(*(_229639_s));
		(*(_233117_cc))._field_genericsA=_229713_tc._field_useGenerics;
		(*(_233117_cc))._field_uniq=true;
		if ((!(_1ab219943_check(_233117_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_229639_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _234417_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_229713_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_229639_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb50d1bb:;
			if (it != expr_end) {
				jule::Ptr<_1ab2853a4_Var> _234625_v = *it;
				{
					_1ab2782cb_checkVarDecl(_self_, &(_234625_v), jule::Trait<_1ab31605b_Lookup>(_self_, 3));
					_1ab27bdd4_checkVar(_self_, &(_234625_v), jule::Trait<_1ab31605b_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _234417_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1bb50d1bb:;
				++it;
				goto _iter_begin_1bb50d1bb;
			}
			_iter_end_1bb50d1bb:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_229713_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1ab2b7903_Eval> _235713_eval = _1ab26d07e_eval(_self_, jule::Trait<_1ab31605b_Lookup>(_self_, 3));;
	(*((*(_229639_s))))._field_Comparable=(!((*((*((*(_229639_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_229639_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb511ca2:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bb64d_FieldIns> _235921_f = *it;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _236017_kind = _1ab310a7d_checkDecl(&_229713_tc, &((*((*((*(_235921_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_236017_kind != nullptr) && __jule_func_result);
				if ((_236017_kind == nullptr)) {
					if (((_self_ != (*((*((*(_229639_s))))._field_Decl))._field_sema) && ((*((*((*((*(_229639_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_229639_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_229639_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1bb511ca2;
				};
				(*(_235921_f))._field_Kind=_236017_kind;
				(*((*(_229639_s))))._field_Mutable=((*((*(_229639_s))))._field_Mutable || ((!((*((*(_235921_f))._field_Decl))._field_Mutable)) && _1ab2e7da6_Mutable((*(_235921_f))._field_Kind.ptr())));
				(*((*(_229639_s))))._field_Comparable=((*((*(_229639_s))))._field_Comparable && _1ab2e7b20_Comparable((*(_235921_f))._field_Kind.ptr()));
				if (((*((*(_235921_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1bb511ca2;
				};
				(*(_235713_eval))._field_prefix=(*(_235921_f))._field_Kind;
				(*(_235713_eval))._field_field=_235921_f;
				(*(_235921_f))._field_Default=_1ab2d5b63_evalExpr(_235713_eval, (*((*(_235921_f))._field_Decl))._field_Default);
				if (((*(_235921_f))._field_Default == nullptr)) {
					goto _iter_next_1bb511ca2;
				};
				;
				_1ab26d5e0_checkAssignType(_self_, false, &((*(_235921_f))._field_Kind), &((*(_235921_f))._field_Default), (*((*((*(_235921_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1bb511ca2:;
			++it;
			goto _iter_begin_1bb511ca2;
		}
		_iter_end_1bb511ca2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab27d5de_precheckStructIns(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _239342_s, jule::Ptr<_1ab182e72_Token> _239361_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ab27d1e3_checkStructEnv(_self_, _239342_s, _239361_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_239342_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb51c1db:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _239821_f = *it;
			{
				if (((*(_239821_f))._field_Generics.len() == 0LL)) {
					if ((_1ab27c4cd_readyToCheckFn(_self_, _239342_s, &(_239821_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1bb51c1db:;
			++it;
			goto _iter_begin_1bb51c1db;
		}
		_iter_end_1bb51c1db:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab27d897_checkStructIns(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _240839_s) {
	{
		auto expr = &((*((*(_240839_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb51cac1:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _240921_f = *it;
			{
				_1ab27c841_checkTypeMethod(_self_, _240839_s, &(_240921_f));
			}
			_iter_next_1bb51cac1:;
			++it;
			goto _iter_begin_1bb51cac1;
		}
		_iter_end_1bb51cac1:;
	};
}



inline void _1ab27db50_checkTypeStruct(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1b9470_Struct>* _241440_s) {
	if ((*((*(_241440_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_241440_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_241440_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb51eb5b:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bc1ed_StructIns> _242721_ins = *it;
			{
				_1ab27d897_checkStructIns(_self_, &(_242721_ins));
			}
			_iter_next_1bb51eb5b:;
			++it;
			goto _iter_begin_1bb51eb5b;
		}
		_iter_end_1bb51eb5b:;
	};
}



inline void _1ab27dd4d_checkStructTypes(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb521036:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _243321_s = *it;
			{
				_1ab27db50_checkTypeStruct(_self_, &(_243321_s));
			}
			_iter_next_1bb521036:;
			++it;
			goto _iter_begin_1bb521036;
		}
		_iter_end_1bb521036:;
	};
}



inline void _1ab27e106_checkStructInsOperators(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1bc1ed_StructIns> _243847_s) {
	{
		auto expr = &((*(_243847_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb522587:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _243921_m = *it;
			{
				{
					auto &_match_expr{ (*(_243921_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1bb523522:;
						{
							(*(_243847_s))._field_Operators._field_Eq=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28720d_Eq);
							(*(_243847_s))._field_Comparable=((*(_243847_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1bb523599:;
						{
							(*(_243847_s))._field_Operators._field_Gt=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab2874c7_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1bb523621:;
						{
							(*(_243847_s))._field_Operators._field_GtEq=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab287791_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1bb523698:;
						{
							(*(_243847_s))._field_Operators._field_Lt=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab287a5a_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1bb523720:;
						{
							(*(_243847_s))._field_Operators._field_LtEq=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab287d24_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1bb523797:;
						{
							(*(_243847_s))._field_Operators._field_Shl=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab288462_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1bb52381e:;
						{
							(*(_243847_s))._field_Operators._field_Shr=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28872b_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1bb523896:;
						{
							(*(_243847_s))._field_Operators._field_Add=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab2889e5_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1bb52391d:;
						{
							(*(_243847_s))._field_Operators._field_Sub=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab288cae_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1bb523995:;
						{
							(*(_243847_s))._field_Operators._field_Div=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab289078_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1bb523a1c:;
						{
							(*(_243847_s))._field_Operators._field_Mul=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab289342_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1bb523a94:;
						{
							(*(_243847_s))._field_Operators._field_Mod=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28960b_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1bb523b1b:;
						{
							(*(_243847_s))._field_Operators._field_BitAnd=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab2898c5_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1bb523b93:;
						{
							(*(_243847_s))._field_Operators._field_BitOr=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab289b8e_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1bb523c1a:;
						{
							(*(_243847_s))._field_Operators._field_BitXor=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab289e58_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1bb523c92:;
						{
							(*(_243847_s))._field_Operators._field_Neg=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28a596_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1bb523d19:;
						{
							(*(_243847_s))._field_Operators._field_Pos=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28a860_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1bb523d91:;
						{
							(*(_243847_s))._field_Operators._field_BitNot=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28ab29_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1bb523e18:;
						{
							(*(_243847_s))._field_Operators._field_AddAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28b267_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1bb523e90:;
						{
							(*(_243847_s))._field_Operators._field_SubAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28b531_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1bb524017:;
						{
							(*(_243847_s))._field_Operators._field_DivAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28b7ea_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1bb52408e:;
						{
							(*(_243847_s))._field_Operators._field_MulAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28bab4_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1bb524116:;
						{
							(*(_243847_s))._field_Operators._field_ModAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28bd7d_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1bb52418d:;
						{
							(*(_243847_s))._field_Operators._field_ShlAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28c147_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1bb524215:;
						{
							(*(_243847_s))._field_Operators._field_ShrAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28c411_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1bb52428c:;
						{
							(*(_243847_s))._field_Operators._field_BitOrAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28c6ca_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1bb524314:;
						{
							(*(_243847_s))._field_Operators._field_BitAndAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28c994_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1bb52438b:;
						{
							(*(_243847_s))._field_Operators._field_BitXorAssign=_1ab27cce7_checkStructInsOp(_self_, &(_243847_s), &(_243921_m), static__1ab28cc5d_BitXorAssign);
						}
					}
					_match_end_1bb52327a:;
				};
			}
			_iter_next_1bb522587:;
			++it;
			goto _iter_begin_1bb522587;
		}
		_iter_end_1bb522587:;
	};
}



inline void _1ab27e3ae_precheckStructType(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1b9470_Struct>* _250243_s) {
	if ((*((*(_250243_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_250243_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_250243_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ab1bc1ed_StructIns> _251317_ins = _1ab1b98d2_instance((*(_250243_s)));;
		(*(_251317_ins))._field_Checked=true;
		_1ab1b9be0_appendInstance((*(_250243_s)).ptr(), &(_251317_ins));
		_1ab27d5de_precheckStructIns(_self_, &(_251317_ins), nullptr);
	};
	_1ab27e106_checkStructInsOperators(_self_, (*((*(_250243_s))))._field_Instances[0LL]);
}



inline void _1ab27e5ac_precheckStructTypes(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb53a34c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _252321_s = *it;
			{
				_1ab27e3ae_precheckStructType(_self_, &(_252321_s));
			}
			_iter_next_1bb53a34c:;
			++it;
			goto _iter_begin_1bb53a34c;
		}
		_iter_end_1bb53a34c:;
	};
}



inline void _1ab27e865_checkRets(_1ab262e97_Sema* _self_, jule::Ptr<_1ab1d2312_FnIns>* _252833_f) {
	if (_1ab1ce881_IsVoid((*((*(_252833_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ab281cda_missingRetChecker _25329_mrc = static__1ab2821a3_new();;
	jule::Bool _25339_ok = _1ab2832c5_check(&_25329_mrc, (*((*(_252833_f))))._field_Scope);;
	if ((!(_25339_ok))) {
		_1ab265ad2_pushErr(_self_, (*((*((*(_252833_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1ab27ebc8_checkFnInsSc(_1ab262e97_Sema* _self_, jule::Ptr<_1ab1d2312_FnIns>* _253936_f, jule::Ptr<_1ab2285bc_scopeChecker>* _253952_sc) {
	_1ab261292_appendRetVars(&((*((*((*(_253952_sc))))._field_table))._field_Vars), _253936_f);
	_1ab26157d_appendParamVars(&((*((*((*(_253952_sc))))._field_table))._field_Vars), _253936_f);
	_1ab261869_appendGenericTypeAliases(&((*((*((*(_253952_sc))))._field_table))._field_TypeAliases), _253936_f);
	_1ab239cc6_check((*(_253952_sc)), &((*((*((*(_253936_f))))._field_Decl))._field_Scope), &((*((*(_253936_f))))._field_Scope));
	if ((!(_1ab22b191_stopped((*(_253952_sc)).ptr())))) {
		_1ab27e865_checkRets(_self_, _253936_f);
	};
}



inline void _1ab28003b_checkFnInsCaller(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1d2312_FnIns>* _255241_f, jule::Ptr<_1ab182e72_Token> _255256_caller) {
	if ((*((*((*(_255241_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1ab2b0863_SymbolTable> _255713_old = (*((*((*((*(_255241_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1ab2656b4_setCurrentFile((*((*((*(_255241_f))))._field_Decl))._field_sema.ptr(), _255713_old);
	});;
	jule::Ptr<_1ab2b0863_SymbolTable> _255913_file = _1ab261bdd_findFile(&((*((*((*((*(_255241_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_255241_f))))._field_Decl))._field_Token))._field_File));;
	if ((_255913_file != nullptr)) {
		_1ab2656b4_setCurrentFile((*((*((*(_255241_f))))._field_Decl))._field_sema.ptr(), _255913_file);
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _256413_sc = _1ab21d45d_newScopeChecker(&((*((*((*(_255241_f))))._field_Decl))._field_sema), (*(_255241_f)));;
	(*(_256413_sc))._field_calledFrom=_255256_caller;
	_1ab27ebc8_checkFnInsSc(_self_.ptr(), _255241_f, &(_256413_sc));
	if (((*((*((*(_255241_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_255241_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_255241_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1ab2802e4_checkFnIns(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1d2312_FnIns>* _257435_f) {
	_1ab28003b_checkFnInsCaller(_self_, _257435_f, nullptr);
}



inline void _1ab28059c_checkFunc(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _257834_f) {
	if ((*((*(_257834_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_257834_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_257834_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb548118:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _258821_ins = *it;
			{
				_1ab2802e4_checkFnIns(_self_, &(_258821_ins));
			}
			_iter_next_1bb548118:;
			++it;
			goto _iter_begin_1bb548118;
		}
		_iter_end_1bb548118:;
	};
}



inline void _1ab280855_checkTestFn(_1ab262e97_Sema* _self_, jule::Ptr<_1ab1d2312_FnIns>* _259335_f) {
	if ((*((*((*(_259335_f))))._field_Decl))._field_Public) {
		_1ab265ad2_pushErr(_self_, (*((*((*(_259335_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_259335_f))))._field_Decl))._field_Unsafety || (!(_1ab1ce881_IsVoid((*((*(_259335_f))))._field_Decl.ptr())))) || ((*((*((*(_259335_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_259335_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_259335_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_259335_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1ab265ad2_pushErr(_self_, (*((*((*(_259335_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab302b2a_Sptr> _261113_sptr = _1ab2e8e0c_Sptr((*((*((*(_259335_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_261113_sptr == nullptr)) {
		_1ab265ad2_pushErr(_self_, (*((*((*(_259335_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _26189_s = _1ab2ea1e9_Struct((*(_261113_sptr))._field_Elem.ptr());;
	if (((_26189_s == nullptr) || (!(_1ab247e9e_isStdPackage(&((*((*((*((*(_26189_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ab265ad2_pushErr(_self_, (*((*((*(_259335_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab265e45_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab280b0d_precheckFunc(jule::Ptr<_1ab262e97_Sema> _self_, jule::Ptr<_1ab1ce40d_Fn>* _262637_f) {
	if ((*((*(_262637_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_262637_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_262637_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ab1d2312_FnIns> _263717_ins = _1ab1d08d7_instanceForce((*(_262637_f)));;
		{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*((*(_262637_f))))._field_Instances; __jule_push_dest.push(_263717_ins); };
		jule::Bool _263913_ok = _1ab270bdb_reloadFnInsTypes(_self_, _263717_ins);;
		(*(_263717_ins))._field_reloaded=true;
		if ((_263913_ok && _1ab312145_hasDirective(&((*((*(_262637_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1ab280855_checkTestFn(_self_.ptr(), &(_263717_ins));
		};
	};
}



inline void _1ab280d0b_precheckFuncs(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb556a94:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> _265021_decl = *it;
			{
				{
					auto expr = &((*(_265021_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb5576cc:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _265125_m = *it;
						{
							_1ab280b0d_precheckFunc(_self_, &(_265125_m));
						}
						_iter_next_1bb5576cc:;
						++it;
						goto _iter_begin_1bb5576cc;
					}
					_iter_end_1bb5576cc:;
				};
			}
			_iter_next_1bb556a94:;
			++it;
			goto _iter_begin_1bb556a94;
		}
		_iter_end_1bb556a94:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb55816c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _265521_decl = *it;
			{
				_1ab280b0d_precheckFunc(_self_, &(_265521_decl));
			}
			_iter_next_1bb55816c:;
			++it;
			goto _iter_begin_1bb55816c;
		}
		_iter_end_1bb55816c:;
	};
}



inline void _1ab281009_checkFuncs(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb558942:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _266221_decl = *it;
			{
				_1ab28059c_checkFunc(_self_, &(_266221_decl));
			}
			_iter_next_1bb558942:;
			++it;
			goto _iter_begin_1bb558942;
		}
		_iter_end_1bb558942:;
	};
}



inline void _1ab281207_checkPackageTypes(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb559844:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _267021_f = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _267021_f);
				_1ab27c0d2_checkGlobals(_self_);
				_1ab280d0b_precheckFuncs(_self_);
				_1ab27e5ac_precheckStructTypes(_self_);
			}
			_iter_next_1bb559844:;
			++it;
			goto _iter_begin_1bb559844;
		}
		_iter_end_1bb559844:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb55b648:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _268121_f = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _268121_f);
				_1ab281009_checkFuncs(_self_);
				_1ab27dd4d_checkStructTypes(_self_);
			}
			_iter_next_1bb55b648:;
			++it;
			goto _iter_begin_1bb55b648;
		}
		_iter_end_1bb55b648:;
	};
}



inline void _1ab281405_setFileSemaFields(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb55c11b:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _268921_f = *it;
			{
				(*(_268921_f))._field_sema=_self_;
			}
			_iter_next_1bb55c11b:;
			++it;
			goto _iter_begin_1bb55c11b;
		}
		_iter_end_1bb55c11b:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb55d848:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _269221_st = *it;
			{
				(*(_269221_st))._field_sema=_self_;
			}
			_iter_next_1bb55d848:;
			++it;
			goto _iter_begin_1bb55d848;
		}
		_iter_end_1bb55d848:;
	};
}



inline void _1ab281603_setSemaFields(jule::Ptr<_1ab262e97_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb55e371:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _269821_file = *it;
			{
				_1ab2656b4_setCurrentFile(_self_.ptr(), _269821_file);
				_1ab281405_setFileSemaFields(_self_);
			}
			_iter_next_1bb55e371:;
			++it;
			goto _iter_begin_1bb55e371;
		}
		_iter_end_1bb55e371:;
	};
}



inline void _1ab2818ab_check(jule::Ptr<_1ab262e97_Sema> _self_, jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _270430_files) {
	(*(_self_))._field_files=(*(_270430_files));
	_1ab269553_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab281603_setSemaFields(_self_);
	_1ab26a048_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab26994e_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab269b4c_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab27b0e2_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab281207_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ab262e97_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1ab281cda_missingRetChecker static__1ab2821a3_new(void) {
	return _1ab281cda_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1ab2824b1_checkConditional(_1ab281cda_missingRetChecker* _self_, jule::Ptr<_1ab221e01_Conditional> _275235_c) {
	{
		auto expr = &((*(_275235_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb5647c7:;
		if (it != expr_end) {
			jule::Ptr<_1ab2216d6_If> _275321_elif = *it;
			{
				if ((_275321_elif == nullptr)) {
					return false;;
				};
				if ((!(_1ab282e84_checkScope(_self_, (*(_275321_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1bb5647c7:;
			++it;
			goto _iter_begin_1bb5647c7;
		}
		_iter_end_1bb5647c7:;
	};
	return (((*(_275235_c))._field_Default != nullptr) && _1ab282e84_checkScope(_self_, (*((*(_275235_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1ab282802_checkMatch(_1ab281cda_missingRetChecker* _self_, jule::Ptr<_1ab2253ee_Match> _276429_m) {
	{
		auto expr = &((*(_276429_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb565d7d:;
		if (it != expr_end) {
			jule::Ptr<_1ab226037_Case> _276521_c = *it;
			{
				if ((_276521_c == nullptr)) {
					return false;;
				};
				jule::I64 _276913_n = (*(_self_))._field_breaked.len();;
				jule::Bool _277013_ok = _1ab282e84_checkScope(_self_, (*(_276521_c))._field_Scope);;
				{
					
					if ((_276913_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1bb568c0a:;
						{
							return false;;
						}
					}
					else if ((!(_277013_ok))) {
						_case_begin_1bb568c71:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1bb568ce8;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1bb568ce8:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_276521_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1bb565d7d;
						}
					}
					_match_end_1bb568b61:;
				};
			}
			_iter_next_1bb565d7d:;
			++it;
			goto _iter_begin_1bb565d7d;
		}
		_iter_end_1bb565d7d:;
	};
	return (((*(_276429_m))._field_Default != nullptr) && _1ab282e84_checkScope(_self_, (*((*(_276429_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1ab282b43_checkInfIter(_1ab281cda_missingRetChecker* _self_, jule::Ptr<_1ab2221ed_InfIter> _279031_it) {
	jule::I64 _27919_n = (*(_self_))._field_breaked.len();;
	if (_1ab282e84_checkScope(_self_, (*(_279031_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27919_n);
		return true;;
	};
	if ((_27919_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _279713_itaddr = static_cast<jule::Uintptr>(_279031_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_27919_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bb56ca66:;
			if (it != expr_end) {
				jule::Uintptr _279820_addr = *it;
				{
					if ((_279713_itaddr == _279820_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27919_n);
						return false;;
					};
				}
				_iter_next_1bb56ca66:;
				++it;
				goto _iter_begin_1bb56ca66;
			}
			_iter_end_1bb56ca66:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27919_n);
	};
	return true;;
}



inline jule::Bool _1ab282e84_checkScope(_1ab281cda_missingRetChecker* _self_, jule::Ptr<_1ab2212b8_Scope> _280929_s) {
	if ((_280929_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_280929_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb56e0d9:;
		if (it != expr_end) {
			jule::Any _281321_st = *it;
			{
				{
					auto &_match_expr{ _281321_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1bb574c5a:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1bb574cc1:;
						{
							jule::Uintptr _281917_addr = (*(_281321_st.cast_ptr<_1ab22385e_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_281917_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_281917_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1bb574d37:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1bb574dae:;
						{
							if (_1ab282b43_checkInfIter(_self_, _281321_st.cast_ptr<_1ab2221ed_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1bb574e36:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1bb574ead:;
						{
							if (_1ab282e84_checkScope(_self_, _281321_st.cast_ptr<_1ab2212b8_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1bb575035:;
						{
							{
								auto &_match_expr{ (*(_281321_st.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1bb578a50:;
									{
										return true;;
									}
								}
								_match_end_1bb5789b7:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1bb5750ac:;
						{
							if (_1ab2824b1_checkConditional(_self_, _281321_st.cast_ptr<_1ab221e01_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1bb575134:;
						{
							if (_1ab282802_checkMatch(_self_, _281321_st.cast_ptr<_1ab2253ee_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1bb56ec44:;
				};
			}
			_iter_next_1bb56e0d9:;
			++it;
			goto _iter_begin_1bb56e0d9;
		}
		_iter_end_1bb56e0d9:;
	};
	return false;;
}



inline jule::Bool _1ab2832c5_check(_1ab281cda_missingRetChecker* _self_, jule::Ptr<_1ab2212b8_Scope> _285524_s) {
	return _1ab282e84_checkScope(_self_, _285524_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab281cda_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2841e9_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab285739_IsInitialized(_1ab2853a4_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1ab2859c0_IsTypeInferred(_1ab2853a4_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1ab285c56_untypedConstant(_1ab2853a4_Var* _self_) {
	return (_1ab2859c0_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2853a4_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ab286806_Dispose(jule::Ptr<_1ab1ce40d_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1ab1ce881_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1ab1cd2db_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1ab286ac0_Str(jule::Ptr<_1ab1ce40d_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1ab1ce881_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1ab1cd2db_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1ab2ee0ee_Prim> _399_prim = _1ab2e8b76_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1ab302586_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1ab286e44_logical(jule::Ptr<_1ab1ce40d_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1ab1ce881_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1ab1cd2db_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1ab2ee0ee_Prim> _649_prim = _1ab2e8b76_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1ab302300_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1ab2ea1e9_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1ab28720d_Eq(jule::Ptr<_1ab1ce40d_Fn> _7218_f) {
	return static__1ab286e44_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1ab2874c7_Gt(jule::Ptr<_1ab1ce40d_Fn> _7718_f) {
	return static__1ab286e44_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1ab287791_GtEq(jule::Ptr<_1ab1ce40d_Fn> _8220_f) {
	return static__1ab286e44_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1ab287a5a_Lt(jule::Ptr<_1ab1ce40d_Fn> _8718_f) {
	return static__1ab286e44_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1ab287d24_LtEq(jule::Ptr<_1ab1ce40d_Fn> _9220_f) {
	return static__1ab286e44_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1ab288198_result(jule::Ptr<_1ab1ce40d_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1ab1ce881_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1ab1cd2db_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1ab2ea1e9_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1ab288462_Shl(jule::Ptr<_1ab1ce40d_Fn> _11819_f) {
	return static__1ab288198_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1ab28872b_Shr(jule::Ptr<_1ab1ce40d_Fn> _12319_f) {
	return static__1ab288198_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1ab2889e5_Add(jule::Ptr<_1ab1ce40d_Fn> _12819_f) {
	return static__1ab288198_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1ab288cae_Sub(jule::Ptr<_1ab1ce40d_Fn> _13319_f) {
	return static__1ab288198_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1ab289078_Div(jule::Ptr<_1ab1ce40d_Fn> _13819_f) {
	return static__1ab288198_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1ab289342_Mul(jule::Ptr<_1ab1ce40d_Fn> _14319_f) {
	return static__1ab288198_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1ab28960b_Mod(jule::Ptr<_1ab1ce40d_Fn> _14819_f) {
	return static__1ab288198_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1ab2898c5_BitAnd(jule::Ptr<_1ab1ce40d_Fn> _15322_f) {
	return static__1ab288198_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1ab289b8e_BitOr(jule::Ptr<_1ab1ce40d_Fn> _15821_f) {
	return static__1ab288198_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1ab289e58_BitXor(jule::Ptr<_1ab1ce40d_Fn> _16322_f) {
	return static__1ab288198_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1ab28a2cc_unary(jule::Ptr<_1ab1ce40d_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1ab1ce881_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1ab1cd2db_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1ab2ea1e9_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1ab28a596_Neg(jule::Ptr<_1ab1ce40d_Fn> _18719_f) {
	return static__1ab28a2cc_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1ab28a860_Pos(jule::Ptr<_1ab1ce40d_Fn> _19219_f) {
	return static__1ab28a2cc_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1ab28ab29_BitNot(jule::Ptr<_1ab1ce40d_Fn> _19722_f) {
	return static__1ab28a2cc_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1ab28ae9d_assign(jule::Ptr<_1ab1ce40d_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1ab1ce881_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1ab1cd2db_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1ab28b267_AddAssign(jule::Ptr<_1ab1ce40d_Fn> _22125_f) {
	return static__1ab28ae9d_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1ab28b531_SubAssign(jule::Ptr<_1ab1ce40d_Fn> _22625_f) {
	return static__1ab28ae9d_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1ab28b7ea_DivAssign(jule::Ptr<_1ab1ce40d_Fn> _23125_f) {
	return static__1ab28ae9d_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1ab28bab4_MulAssign(jule::Ptr<_1ab1ce40d_Fn> _23625_f) {
	return static__1ab28ae9d_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1ab28bd7d_ModAssign(jule::Ptr<_1ab1ce40d_Fn> _24125_f) {
	return static__1ab28ae9d_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1ab28c147_ShlAssign(jule::Ptr<_1ab1ce40d_Fn> _24625_f) {
	return static__1ab28ae9d_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1ab28c411_ShrAssign(jule::Ptr<_1ab1ce40d_Fn> _25125_f) {
	return static__1ab28ae9d_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1ab28c6ca_BitOrAssign(jule::Ptr<_1ab1ce40d_Fn> _25627_f) {
	return static__1ab28ae9d_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1ab28c994_BitAndAssign(jule::Ptr<_1ab1ce40d_Fn> _26128_f) {
	return static__1ab28ae9d_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1ab28cc5d_BitXorAssign(jule::Ptr<_1ab1ce40d_Fn> _26628_f) {
	return static__1ab28ae9d_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2861b8_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1ab29cce5_pushErr(_1ab29c7ea_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1ab29d07b_checkTrait(_1ab29c7ea_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab2e7603_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab1e26da_Trait> _12613_trt = _1ab2ea480_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1ab2e8e0c_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bb5bab80:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1ab2e8e0c_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1ab2ea1e9_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1bb5bac07;
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bb5bac07:;
			{
				jule::Ptr<_1ab1bc1ed_StructIns> _13713_s = _1ab2ea1e9_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1ab1baaae_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1ab29b3ba_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1ab29cce5_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2ea480_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bb5bac7e:;
			{
				jule::Ptr<_1ab1e26da_Trait> _14717_base = _1ab2ea480_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1bb5c0767:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb5c0b52:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b9470_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bb5c15ae:;
								if (it != expr_end) {
									jule::Ptr<_1ab1b9470_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1bb5c0b52;
										};
									}
									_iter_next_1bb5c15ae:;
									++it;
									goto _iter_begin_1bb5c15ae;
								}
								_iter_end_1bb5c15ae:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1bb5c0b52:;
						++it;
						goto _iter_begin_1bb5c0b52;
					}
					_iter_end_1bb5c0b52:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb5c0910:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1ab1ce40d_Fn> _16121_m2 = _1ab1e3389_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ab1d2312_FnIns> _16517_m1k = _1ab26e789_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1ab1d2312_FnIns> _16617_m2k = _1ab26e789_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1ab1d327a_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1bb5c0910:;
						++it;
						goto _iter_begin_1bb5c0910;
					}
					_iter_end_1bb5c0910:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb5baac5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bb5baa70:;
	};
}



inline jule::Bool _1ab29d312_checkPtr(_1ab29c7ea_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab2e7603_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab3063e2_Ptr> _18113_dest = _1ab2e9193_Ptr((*(_self_))._field_dest.ptr());;
	if (_1ab306e2b_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ab2e6c2e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ab29d598_checkPrim(_1ab29c7ea_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1ab2ee0ee_Prim> _19013_prim = _1ab2e8b76_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1ab30281c_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ab2e6c2e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ab29d994_typeEnum(_1ab29c7ea_typeCompatibilityChecker* _self_, jule::Ptr<_1ab1e6601_TypeEnum>* _19828_e, jule::Ptr<_1ab2e6525_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb5c896d:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6029_TypeEnumItem> _19921_item = *it;
			{
				if (_1ab2e6c2e_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1ab1e6601_TypeEnum> _20317_ke = _1ab2e96b0_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1bb5c896d;
				};
				if (_1ab29d994_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb5c896d:;
			++it;
			goto _iter_begin_1bb5c896d;
		}
		_iter_end_1bb5c896d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab29dc2a_checkTypeEnum(_1ab29c7ea_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ab2e6c2e_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab1e6601_TypeEnum> _21813_e = _1ab2e96b0_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1ab29d994_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1ab29deb1_check(_1ab29c7ea_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ab2e9193_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1ab29d312_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1ab2e83c3_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1ab2e7603_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ab2e8b76_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bb5ce479:;
			{
				__jule_func_result = _1ab29d598_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2e96b0_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bb5cda3e:;
			{
				__jule_func_result = _1ab29dc2a_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2ea480_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bb5cdaa5:;
			{
				__jule_func_result = _1ab29d07b_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb5cd9c8:;
			{
				__jule_func_result = _1ab2e6c2e_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1bb5cd247:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab29c7ea_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1ab29ea3e_pushErr(_1ab29e599_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1ab29ecc5_checkValidity(_1ab29e599_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1ab2e9e63_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb5d226d:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _26213_f = _1ab2e9e63_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1ab1d3797_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1bb5d3a99:;
						{
							_1ab29ea3e_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1bb5d3b21:;
						{
							_1ab29ea3e_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1ab1ceb17_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1bb5d3b98:;
						{
							_1ab29ea3e_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1bb5d3c20:;
						{
							_1ab29ea3e_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1bb5d39cd:;
				};
			}
		}
		else if ((_1ab2ea99c_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb5d22e5:;
			{
				_1ab29ea3e_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1bb5d21b3:;
	};
	return _25913_valid;;
}



inline jule::Bool _1ab2a005b_checkConst(_1ab29e599_assignTypeChecker* _self_) {
	if (((((!(_1ab2b65d3_IsConst((*(_self_))._field_d.ptr()))) || (_1ab2e8b76_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_1a8d0482c_IsNum((*(_1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _2999_kind = (*(_1ab2e8b76_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_1a8d04563_IsFloat(_2999_kind)) {
			_case_begin_1bb5db82c:;
			{
				if ((!(_1ab29b750_floatAssignable(&(_2999_kind), &((*(_self_))._field_d))))) {
					_1ab29ea3e_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else if (_1a8d04222_IsInt(_2999_kind)) {
			_case_begin_1bb5db8a4:;
			{
				if ((!(_1ab29c311_intAssignable(_2999_kind, &((*(_self_))._field_d))))) {
					_1ab29ea3e_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else {
			_case_begin_1bb5db783:;
			{
				return false;;
			}
		}
		_match_end_1bb5db72d:;
	};
	return true;;
}



inline jule::Bool _1ab2a02e2_isPrim(_1ab29e599_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_1ab2e736c_Binded((*(_self_))._field_dest.ptr()) || _1ab2e736c_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1ab2e8b76_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1ab2a0578_checkCompatibility(_1ab29e599_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bb5e1997:;
			{
				return false;;
			}
		}
		else if ((!(_1ab29ecc5_checkValidity(_self_)))) {
			_case_begin_1bb5e1a1e:;
			{
				return false;;
			}
		}
		else if (_1ab2a005b_checkConst(_self_)) {
			_case_begin_1bb5e1a96:;
			{
				return true;;
			}
		}
		else if ((_1ab2e9429_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb5e1b1d:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _34317_dkind = (*(_self_))._field_dest;;
				if ((_1ab2e9429_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34317_dkind=(*((*(_1ab2e9429_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_1ab2e8b76_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1bb5e1865;
				};
				if (_1a8d00d89_TypesAreCompatible((*(_1ab2e8b76_Prim((*((*(_1ab2e9429_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_1ab2e8b76_Prim(_34317_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1ab2a02e2_isPrim(_self_)) {
			_case_begin_1bb5e1b95:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _35313_dest = _1ab2e8b76_Prim((*(_self_))._field_dest.ptr());;
				if (_1ab30281c_IsAny(_35313_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1ab2ee0ee_Prim> _35717_src = _1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1a8d00d89_TypesAreCompatible((*(_35313_dest))._field_Kind, (*(_35717_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1bb5e1865:;
	};
	return _1ab26da96_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1ab2a080e_check(_1ab29e599_assignTypeChecker* _self_) {
	jule::Bool _3669_ok = _1ab2a0578_checkCompatibility(_self_);;
	if ((_3669_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1ab3139e8_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3669_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab29e599_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bb60cd48_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bb60e531:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bb6103ab:;
						{
							_38921_elem=(*(_1ab2e9946_Arr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bb610301:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab19a83b_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1ab2a2921_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bb60e4cb:;
	};
	return false;;
}

inline jule::Bool _1bb60c6a5_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bb613007:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bb613de8:;
						{
							_38921_elem=(*(_1ab2e9bcc_Slc((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bb613cc7:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab1999a0_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1ab2a2921_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bb612ea2:;
	};
	return false;;
}

inline jule::Bool _1bb60e861_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bb616a99:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bb617a01:;
						{
							_38921_elem=(*(_1ab2e9193_Ptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bb617869:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab19a099_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1ab2a2921_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bb616a44:;
	};
	return false;;
}

inline jule::Bool _1bb615647_annotateConstraintElem(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bb61a1da:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1bb61b1a8:;
						{
							_38921_elem=(*(_1ab2e8e0c_Sptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bb61aeaa:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab19961a_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1ab2a2921_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1bb61a185:;
	};
	return false;;
}



inline jule::Bool _1ab2a1b0c_annotateConstraintMap(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bb5eac7b:;
			{
				jule::Ptr<_1ab304c92_Map> _40917_m = _1ab2ea716_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1ab19b089_MapTypeDecl> _41017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab19b089_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_41017_m2))._field_Key;
				if ((!(_1ab2a2921_annotateConstraint(_self_, &((*(_40917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41017_m2))._field_Val;
				__jule_func_result = _1ab2a2921_annotateConstraint(_self_, &((*(_40917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1bb5eac26:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a1e4d_annotateConstraintTup(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bb5edba2:;
			{
				jule::Ptr<_1ab199c9c_TupleTypeDecl> _42417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab199c9c_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1ab3041e2_Tuple> _42517_tup2 = _1ab2ea99c_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &((*(_42517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb60016a:;
					if (it != expr_end) {
						jule::Ptr<_1ab2e6525_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &((*(_42417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bb5eed4b:;
								if (it != expr_end) {
									jule::Ptr<_1ab198570_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1ab2a2921_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1bb5eed4b:;
									++it;
									goto _iter_begin_1bb5eed4b;
								}
								_iter_end_1bb5eed4b:;
							};
						}
						_iter_next_1bb60016a:;
						++it;
						goto _iter_begin_1bb60016a;
					}
					_iter_end_1bb60016a:;
				};
			}
		}
		_match_end_1bb5edb4c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a228e_annotateConstraintFn(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bb600a83:;
			{
				jule::Ptr<_1ab1aa230_FnDecl> _44117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab1aa230_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1ab1d2312_FnIns> _44217_f = _1ab2e9e63_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &((*(_44217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb603080:;
					if (it != expr_end) {
						jule::I64 _44318_i = it - expr->begin();
						jule::Ptr<_1ab1d1366_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44117_pf))._field_Params[_44318_i]))._field_Kind;
							if (_1ab2a2921_annotateConstraint(_self_, &((*(_44325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1bb603080:;
						++it;
						_44318_i++;
						goto _iter_begin_1bb603080;
					}
					_iter_end_1bb603080:;
				};
				if (((*(_44117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44117_pf))._field_Result))._field_Kind;
					if (_1ab2a2921_annotateConstraint(_self_, &((*(_44217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1bb600a2d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a25d0_annotateConstraintIdent(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _45947_k) {
	jule::Ptr<_1ab198b7a_IdentTypeDecl> _46013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ab198b7a_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1ab1bc1ed_StructIns> _46113_s = _1ab2ea1e9_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb606715:;
		if (it != expr_end) {
			jule::I64 _46213_i = it - expr->begin();
			jule::Ptr<_1ab1a577a_GenericDecl> _46216_g = *it;
			{
				if (((*(_46216_g))._field_Ident == (*(_46013_ident))._field_Ident)) {
					jule::Ptr<_1ab2e4b3e_InsGeneric> _46421_fg = (*((*(_self_))._field_f))._field_Generics[_46213_i];;
					if ((_46421_fg != nullptr)) {
						return false;;
					};
					_1ab2a2c84_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46113_s == nullptr)) {
					goto _iter_next_1bb606715;
				};
				jule::Ptr<_1ab198570_TypeDecl> _47417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb607705:;
					if (it != expr_end) {
						jule::Ptr<_1ab198570_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &((*(_46113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bb60a197:;
								if (it != expr_end) {
									jule::Ptr<_1ab2e4b3e_InsGeneric> _47729_sg = *it;
									{
										if (_1ab2a2921_annotateConstraint(_self_, &((*(_47729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1bb60a197:;
									++it;
									goto _iter_begin_1bb60a197;
								}
								_iter_end_1bb60a197:;
							};
						}
						_iter_next_1bb607705:;
						++it;
						goto _iter_begin_1bb607705;
					}
					_iter_end_1bb607705:;
				};
				(*(_self_))._field_c=_47417_c;
			}
			_iter_next_1bb606715:;
			++it;
			_46213_i++;
			goto _iter_begin_1bb606715;
		}
		_iter_end_1bb606715:;
	};
	return false;;
}



inline jule::Bool _1ab2a2921_annotateConstraint(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bb609d89:;
			{
				return _1ab2a25d0_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1bb609d34:;
	};
	{
		
		if ((_1ab2e9946_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bb60b572:;
			{
				return _1bb60cd48_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bb60b5e9:;
			{
				return _1bb60c6a5_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab2e9193_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bb60b671:;
			{
				return _1bb60e861_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab2e8e0c_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bb60bd8b:;
			{
				return _1bb615647_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1ab2ea716_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bb60be02:;
			{
				return _1ab2a1b0c_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1ab2e9e63_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bb60be68:;
			{
				return _1ab2a228e_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1ab2ea99c_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1bb60bece:;
			{
				return _1ab2a1e4d_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1bb60b95c:;
			{
				return false;;
			}
		}
		_match_end_1bb60b907:;
	};
}



inline void _1ab2a2c84_pushGeneric(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _51335_k, jule::I64 _51349_i) {
	(*((*(_self_))._field_f))._field_Generics[_51349_i]=jule::new_ptr<_1ab2e4b3e_InsGeneric>(_1ab2e4b3e_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1ab1a577a_GenericDecl> _51513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb61e266:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e6525_TypeKind> _51621_ignored = *it;
			{
				if (((*(_51513_gd))._field_Ident == _1ab2e68dd_Str(_51621_ignored.ptr()))) {
					(*(_51621_ignored))._field_Kind=(*((*(_51335_k))))._field_Kind;
				};
			}
			_iter_next_1bb61e266:;
			++it;
			goto _iter_begin_1bb61e266;
		}
		_iter_end_1bb61e266:;
	};
	if ((((*(_51513_gd))._field_Constraint == nullptr) || ((*((*(_51513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51513_gd))._field_Constraint))._field_Mask[0LL];
	_1ab2a2921_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1ab2a30c5_annotatePrim(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ab2a50e9_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1ab2a3416_annotateArr(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab30591e_Arr> _53313_parr = _1ab2e9946_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab30591e_Arr> _53713_arr = _1ab2e9946_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53313_parr))._field_Elem));
	__jule_func_result = _1ab2a543a_annotateKind(_self_, &((*(_53713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab2a3757_annotateSlc(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab3035ed_Slc> _54313_pslc = _1ab2e9bcc_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab3035ed_Slc> _54713_slc = _1ab2e9bcc_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54313_pslc))._field_Elem));
	__jule_func_result = _1ab2a543a_annotateKind(_self_, &((*(_54713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab2a3b53_checkMapKey(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _55241_k, jule::Ptr<_1ab2e6525_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab2e6525_TypeKind>* _55313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1ab2a543a_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a3e94_annotateMap(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab304c92_Map> _56113_pmap = _1ab2ea716_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab304c92_Map> _56513_m = _1ab2ea716_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1ab2a3b53_checkMapKey(_self_, (&((*(_56113_pmap))._field_Key)), &((*(_56513_m))._field_Key)) && _1ab2a3b53_checkMapKey(_self_, (&((*(_56113_pmap))._field_Val)), &((*(_56513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1ab2a42d5_annotateFn(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab1d2312_FnIns> _57113_pf = _1ab2e9e63_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _57513_f = _1ab2e9e63_Fn((*(_57041_k)).ptr());;
	{
		
		if (((*(_57113_pf))._field_Params.len() != (*(_57513_f))._field_Params.len())) {
			_case_begin_1bb62ba8c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ab1ce881_IsVoid((*(_57113_pf))._field_Decl.ptr()) != _1ab1ce881_IsVoid((*(_57513_f))._field_Decl.ptr()))) {
			_case_begin_1bb62bb14:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bb62ba37:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ab2e6525_TypeKind>* _58413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb62bbd0:;
		if (it != expr_end) {
			jule::I64 _58514_i = it - expr->begin();
			jule::Ptr<_1ab1d1366_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57113_pf))._field_Params[_58514_i]))._field_Kind));
				__jule_func_result=(_1ab2a543a_annotateKind(_self_, &((*(_58521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1bb62bbd0:;
			++it;
			_58514_i++;
			goto _iter_begin_1bb62bbd0;
		}
		_iter_end_1bb62bbd0:;
	};
	if ((!(_1ab1ce881_IsVoid((*(_57113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57113_pf))._field_Result));
		__jule_func_result=(_1ab2a543a_annotateKind(_self_, &((*(_57513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a4626_annotatePtr(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab3063e2_Ptr> _60013_pptr = _1ab2e9193_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab3063e2_Ptr> _60413_ptr = _1ab2e9193_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60013_pptr))._field_Elem));
	__jule_func_result = _1ab2a543a_annotateKind(_self_, &((*(_60413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab2a4967_annotateSptr(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab302b2a_Sptr> _61013_ssptr = _1ab2e8e0c_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab302b2a_Sptr> _61413_sptr = _1ab2e8e0c_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61013_ssptr))._field_Elem));
	__jule_func_result = _1ab2a543a_annotateKind(_self_, &((*(_61413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ab2a4ca8_annotateStruct(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab1bc1ed_StructIns> _62013_s = _1ab2ea1e9_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _62413_s2 = _1ab2ea1e9_Struct((*(_61945_k)).ptr());;
	if (((*(_62013_s))._field_Generics.len() != (*(_62413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb63713b:;
		if (it != expr_end) {
			jule::I64 _62814_i = it - expr->begin();
			jule::Ptr<_1ab2e4b3e_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1ab2e4b3e_InsGeneric> _62917_g2 = (*(_62413_s2))._field_Generics[_62814_i];;
				if (_1ab2e6c2e_Equal((*(_62821_g))._field_Kind, (*(_62917_g2))._field_Kind)) {
					goto _iter_next_1bb63713b;
				};
				(*(_self_))._field_k=(&((*(_62821_g))._field_Kind));
				if ((!(_1ab2a543a_annotateKind(_self_, &((*(_62917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb63713b:;
			++it;
			_62814_i++;
			goto _iter_begin_1bb63713b;
		}
		_iter_end_1bb63713b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a50e9_annotateAny(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6429_kind = _1ab2e68dd_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb63ab01:;
		if (it != expr_end) {
			jule::I64 _64313_i = it - expr->begin();
			jule::Ptr<_1ab1a577a_GenericDecl> _64316_g = *it;
			{
				if ((_6429_kind != (*(_64316_g))._field_Ident)) {
					goto _iter_next_1bb63ab01;
				};
				jule::Ptr<_1ab2e4b3e_InsGeneric> _64713_t = (*((*(_self_))._field_f))._field_Generics[_64313_i];;
				{
					
					if ((_64713_t == nullptr) || ((*(_64713_t))._field_Kind == nullptr)) {
						_case_begin_1bb63c96b:;
						{
							_1ab2a2c84_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1ab2e6c2e_Equal((*(_64713_t))._field_Kind, (*(_64142_k)))))) {
						_case_begin_1bb63c9e3:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1bb63c839:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1bb63ab01:;
			++it;
			_64313_i++;
			goto _iter_begin_1bb63ab01;
		}
		_iter_end_1bb63ab01:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a543a_annotateKind(_1ab2a1216_dynamicTypeAnnotation* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1ab2a50e9_annotateAny(_self_, _66243_k)) {
			_case_begin_1bb640056:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2e8b76_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb6400cd:;
			{
				__jule_func_result = _1ab2a30c5_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2e9946_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb640342:;
			{
				__jule_func_result = _1ab2a3416_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb6403a8:;
			{
				__jule_func_result = _1ab2a3757_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2ea716_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb64041e:;
			{
				__jule_func_result = _1ab2a3e94_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2e9e63_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb640496:;
			{
				__jule_func_result = _1ab2a42d5_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2e9193_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb64051d:;
			{
				__jule_func_result = _1ab2a4626_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2e8e0c_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb64062d:;
			{
				__jule_func_result = _1ab2a4967_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1bb640694:;
			{
				__jule_func_result = _1ab2a4ca8_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb63ee35:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bb63e990:;
	};
}



inline jule::Bool _1ab2a56c1_annotate(_1ab2a1216_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1ab2a543a_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2a1216_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ab2a6617_pushErrToken(_1ab2a6073_fnCallArgChecker* _self_, jule::Ptr<_1ab182e72_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1ab265ad2_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1ab2a697a_pushErr(_1ab2a6073_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1ab2a6617_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>> _1ab2a6c11_getParams(_1ab2a6073_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1ab1cd055_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1ab2a701e_checkCounts(_1ab2a6073_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72513_n = (*(_72431_params)).len();;
	if (((_72513_n > 0LL) && _1ab1cd055_IsSelf((*((*(_72431_params))[0LL]))._field_Decl.ptr()))) {
		(_72513_n)--;
	};
	jule::I64 _73013_diff = (_72513_n - (*(_self_))._field_args.len());;
	jule::Str _73113_log = jule::Str();;
	{
		
		if ((_73013_diff == 0LL)) {
			_case_begin_1bb64c0da:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72513_n > 0LL) && (*((*((*(_72431_params))[(_72513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1bb64c00d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73013_diff < 0LL) || (_73013_diff > (*(_72431_params)).len()))) {
			_case_begin_1bb64bc11:;
			{
				_73113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1bb64bb9a:;
			{
				_73113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1bb64bb45:;
	};
	_1a7c4c7ed_StrBuilder _74213_err = static__1a7c4cb1c_New(32LL);;
	_1a7c573c9_WriteStr(&_74213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1a7c573c9_WriteStr(&_74213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb64e1b9:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_1ab1d1366_ParamIns> *_74516_p = it;
			{
				_1a7c573c9_WriteStr(&_74213_err, _1ab2e68dd_Str((*((*(_74516_p))))._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_1a7c573c9_WriteStr(&_74213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bb64e1b9:;
			++it;
			_74513_i++;
			goto _iter_begin_1bb64e1b9;
		}
		_iter_end_1bb64e1b9:;
	};
	_1a7c57682_WriteByte(&_74213_err, ')');
	_1ab2a697a_pushErr(_self_, _73113_log, jule::Slice<jule::Any>::make({jule::Any(_1a7c57bc1_Str(&_74213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a74c5_checkArg(_1ab2a6073_fnCallArgChecker* _self_, jule::Ptr<_1ab1d1366_ParamIns>* _75632_p, jule::Ptr<_1ab2b5c0e_Data>* _75651_arg, jule::Ptr<_1ab182e72_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ab1d45de_parameterUsesGenerics(_75632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75632_p))))._field_Decl))._field_Variadic)) && _1ab2ae8b7_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1ab2a1216_dynamicTypeAnnotation _76121_dta = _1ab2a1216_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1ab2a56c1_annotate(&_76121_dta);
		};
		if ((!(__jule_func_result))) {
			_1ab2a6617_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ab271aee_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Mutable, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, _75668_errorToken)) {
		_1ab26d5e0_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a78c1_push(_1ab2a6073_fnCallArgChecker* _self_, jule::Ptr<_1ab1d1366_ParamIns>* _78528_p, jule::Ptr<_1ab19c8a4_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab2e6525_TypeKind> _78613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7879_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1ab2b5c0e_Data> _79513_d = _1ab2d5b63_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78613_old;
	(*((*(_self_))._field_e))._field_immutable=_7879_oldImmut;
	if ((_79513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ab2a74c5_checkArg(_self_, _78528_p, &(_79513_d), &((*(_78546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1ab2a7cbc_pushVariadic(_1ab2a6073_fnCallArgChecker* _self_, jule::Ptr<_1ab1d1366_ParamIns>* _80936_p, jule::I64 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81113_variadiced = false;;
	jule::Bool _8129_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1ab1c3a51_SliceExprModel> _81313_model = jule::new_ptr<_1ab1c3a51_SliceExprModel>(_1ab1c3a51_SliceExprModel{._field_ElemKind=(*((*(_80936_p))))._field_Kind, });;
	jule::Ptr<_1ab2e6525_TypeKind> _81713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8229_variadic = (*((*((*(_80936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_80936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_80936_p))))._field_Kind))._field_Variadic=_8229_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1ab19c8a4_Expr> _82917_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ (*(_82917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1bb661a8e:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab3035ed_Slc>(_1ab3035ed_Slc{._field_Elem=(*((*(_80936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1bb6616d7:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_80936_p))))._field_Kind;
					}
				}
				_match_end_1bb661682:;
			};
			jule::Ptr<_1ab2b5c0e_Data> _84217_d = _1ab2d54d1_eval((*(_self_))._field_e, _82917_arg);;
			if ((_84217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1bb65ed56;
			};
			if ((*((*(_84217_d))._field_Kind))._field_Variadic) {
				_81113_variadiced=true;
				(*((*((*(_80936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1ab2a74c5_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1bb6652bd:;
						{
							_81313_model=(*(_84217_d))._field_Model.cast_ptr<_1ab1c3a51_SliceExprModel>(&__jule_any_type76);
							(*(_81313_model))._field_ElemKind=(*((*(_80936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1bb664e05:;
						{
							_81313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84217_d))._field_Model); };
						}
					}
					_match_end_1bb664da0:;
				};
				(_80954_i)++;
				goto _iter_end_1bb65ed56;
			};
			__jule_func_result=(__jule_func_result && _1ab2a74c5_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_84217_d))._field_Model); };
		}
	_iter_next_1bb65ed56:;
	}
	_iter_end_1bb65ed56:;;
	(*((*(_self_))._field_e))._field_prefix=_81713_old;
	if ((_81113_variadiced && _8129_more)) {
		_1ab2a6617_pushErrToken(_self_, (*((*(_self_))._field_args[_80954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a810d_checkArgs(_1ab2a6073_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8869_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89013_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1ab1cd055_IsSelf((*((*(_88533_params))[0LL]))._field_Decl.ptr()))) {
		(_89013_i)++;
	};
	_julec_label_1bb66a1d5:;
	while ((_89013_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1ab1d1366_ParamIns> _89717_p = (*(_88533_params))[_89013_i];;
			{
				
				if ((*((*(_89717_p))._field_Decl))._field_Variadic) {
					_case_begin_1bac9b6d5:;
					{
						__jule_func_result=(_1ab2a7cbc_pushVariadic(_self_, &(_89717_p), _89013_i) && __jule_func_result);
						goto _iter_end_1bb66a4e3;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89013_i)) {
					_case_begin_1bac9b74b:;
					{
						__jule_func_result=false;
						goto _iter_end_1bb66a4e3;
					}
				}
				else {
					_case_begin_1baea01be:;
					{
						__jule_func_result=(_1ab2a78c1_push(_self_, &(_89717_p), (*(_self_))._field_args[_89013_i]) && __jule_func_result);
					}
				}
				_match_end_1baea0169:;
			};
			(_89013_i)++;
		}
	_iter_next_1bb66a4e3:;
	}
	_iter_end_1bb66a4e3:;;
	(*((*(_self_))._field_e))._field_arg=_8869_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a8394_checkDynamicTypeAnnotation(_1ab2a6073_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac8867d:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e4b3e_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1ab2a697a_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bac8867d:;
			++it;
			goto _iter_begin_1bac8867d;
		}
		_iter_end_1bac8867d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab2a862a_check(_1ab2a6073_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>> _92713_params = _1ab2a6c11_getParams(_self_);;
	__jule_func_result=_1ab2a701e_checkCounts(_self_, &(_92713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ab2a810d_checkArgs(_self_, &(_92713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1ab2a8394_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2a6073_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ab2a950a_pushErr(_1ab2a8eaa_structLitChecker* _self_, jule::Ptr<_1ab182e72_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1ab2a986d_pushSuggestion(_1ab2a8eaa_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1ab2b82b6_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1ab2a9c8b_pushMatch(_1ab2a8eaa_structLitChecker* _self_, jule::Ptr<_1ab1bb64d_FieldIns>* _97433_f, jule::Ptr<_1ab2b5c0e_Data>* _97452_d, jule::Ptr<_1ab182e72_Token>* _97467_errorToken) {
	;
	jule::Bool _9809_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ab271aee_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9809_mutable, false, &((*((*(_97433_f))))._field_Kind), _97452_d, _97467_errorToken)) {
		_1ab26d5e0_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97433_f))))._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1ab1c209e_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1ab1c209e_StructArgExprModel>(_1ab1c209e_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1ab2aa0ee_checkPair(_1ab2a8eaa_structLitChecker* _self_, jule::Ptr<_1ab1a20c3_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>* _99360_exprs) {
	jule::Ptr<_1ab1bb64d_FieldIns> _99513_f = _1ab1bd5a6_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99333_pair))))._field_Field))._field_Kind);;
	if ((_99513_f == nullptr)) {
		_1ab2a950a_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1ab266341_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99513_f))._field_Decl))._field_Public, (*((*(_99513_f))._field_Decl))._field_Token)))) {
		_1ab2a950a_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1ab2a986d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1baeacac2:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baeb05b9:;
		if (it != expr_end) {
			jule::Ptr<_1ab19c8a4_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1baeb106a:;
						{
							jule::Ptr<_1ab1a20c3_FieldExprPair> _101021_dpair = (*(_100721_expr))._field_Kind.cast_ptr<_1ab1a20c3_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_99333_pair)) == _101021_dpair)) {
									_case_begin_1baeb1ed3:;
									{
										goto _iter_end_1baeb05b9;
									}
								}
								else if (((*((*((*(_99333_pair))))._field_Field))._field_Kind == (*((*(_101021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1baeb205a:;
									{
										_1ab2a950a_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1baeb05b9;
									}
								}
								_match_end_1baeb1e28:;
							};
						}
					}
					_match_end_1baeb1015:;
				};
			}
			_iter_next_1baeb05b9:;
			++it;
			goto _iter_begin_1baeb05b9;
		}
		_iter_end_1baeb05b9:;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _102113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99513_f))._field_Kind;
	jule::Ptr<_1ab2b5c0e_Data> _102513_d = _1ab2d5b63_evalExpr((*(_self_))._field_e, (*((*(_99333_pair))))._field_Expr);;
	if ((_102513_d == nullptr)) {
		return;;
	};
	_1ab2a9c8b_pushMatch(_self_, &(_99513_f), &(_102513_d), &((*((*(_99333_pair))))._field_Field));
}



inline jule::Bool _1ab2aa440_readyExprs(_1ab2a8eaa_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>* _103234_exprs) {
	jule::Bool _103313_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baeb637d:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1ab19c8a4_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1baeb7109:;
						{
							jule::Ptr<_1ab1a36ce_KeyValPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1ab1a36ce_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_103721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1baeb7e0c:;
									{
										goto _match_end_1baeb83e6;
									}
								}
								else {
									_case_begin_1baeb844b:;
									{
										_1ab2a950a_pushErr(_self_, (*(_103721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_103313_ok=false;
										goto _iter_next_1baeb637d;
									}
								}
								_match_end_1baeb83e6:;
							};
							(*((*(_103234_exprs))[_103414_i]))._field_Kind=jule::Any(jule::new_ptr<_1ab1a20c3_FieldExprPair>(_1ab1a20c3_FieldExprPair{._field_Field=(*((*(_103721_pair))._field_Key))._field_Token, ._field_Expr=(*(_103721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1baeb70a4:;
				};
			}
			_iter_next_1baeb637d:;
			++it;
			_103414_i++;
			goto _iter_begin_1baeb637d;
		}
		_iter_end_1baeb637d:;
	};
	return _103313_ok;;
}



inline void _1ab2aa6e8_check(_1ab2a8eaa_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1ab2aa440_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106313_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baeb7538:;
		if (it != expr_end) {
			jule::I64 _106414_i = it - expr->begin();
			jule::Ptr<_1ab19c8a4_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1baec1d4a:;
						{
							jule::Ptr<_1ab1a20c3_FieldExprPair> _106721_pair = (*(_106421_expr))._field_Kind.cast_ptr<_1ab1a20c3_FieldExprPair>(&__jule_any_type77);;
							if (((_106414_i > 0LL) && (!(_106313_paired)))) {
								_1ab2a950a_pushErr(_self_, (*(_106721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106313_paired=true;
							_1ab2aa0ee_checkPair(_self_, &(_106721_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1baebb88e:;
						{
							if (_106313_paired) {
								_1ab2a950a_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1ab2a950a_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1baeb7538;
							};
							jule::Ptr<_1ab1bb64d_FieldIns> _108221_field = (*((*(_self_))._field_s))._field_Fields[_106414_i];;
							if ((!(_1ab266341_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108221_field))._field_Decl))._field_Public, (*((*(_108221_field))._field_Decl))._field_Token)))) {
								_1ab2a950a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1ab2a986d_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ab2e6525_TypeKind> _109021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108221_field))._field_Kind;
							jule::Ptr<_1ab2b5c0e_Data> _109421_d = _1ab2d5b63_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109421_d == nullptr)) {
								goto _iter_next_1baeb7538;
							};
							_1ab2a9c8b_pushMatch(_self_, &(_108221_field), &(_109421_d), &((*(_106421_expr))._field_Token));
						}
					}
					_match_end_1baebb839:;
				};
			}
			_iter_next_1baeb7538:;
			++it;
			_106414_i++;
			goto _iter_begin_1baeb7538;
		}
		_iter_end_1baeb7538:;
	};
	if ((!(_106313_paired))) {
		jule::I64 _110513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _110617_diff = (_110513_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110617_diff <= 0LL)) {
				_case_begin_1baec4974:;
				{
					return;;
				}
			}
			_match_end_1baec4853:;
		};
		_1a7c4c7ed_StrBuilder _111217_idents = static__1a7c4cb1c_New(32LL);;
		for (; (_110617_diff > 0LL); (_110617_diff)--) {
			{
				_1a7c573c9_WriteStr(&_111217_idents, jule::Str::lit(", ", 2));
				_1a7c573c9_WriteStr(&_111217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110513_n - _110617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1baec51e4:;
		}
		_iter_end_1baec51e4:;;
		_1ab2a950a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1a7c58672_Buf(&_111217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2a8eaa_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab2ab276_buildVar(_1ab2aac8c_rangeChecker* _self_, jule::Ptr<_1ab1ab3da_VarDecl>* _113228_decl) {
	jule::Ptr<_1ab2853a4_Var> _113313_v = _1ab1da969_buildVar((*(_113228_decl)));;
	return _113313_v;;
}



inline void _1ab2ab474_setSizeKey(_1ab2aac8c_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ab1858d1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1ab2ab276_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1baec9b88:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1ab2841e9_IterRelation>(_1ab2841e9_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1baec9b33:;
	};
}



inline void _1ab2ab892_checkRangeExprValidity(_1ab2aac8c_rangeChecker* _self_, jule::Ptr<_1ab2b5c0e_Data>* _115946_d, jule::Ptr<_1ab2853a4_Var>* _115957_key, jule::Ptr<_1ab2e6525_TypeKind>* _115973_k) {
	jule::Bool _116013__mut = (*((*(_115957_key))))._field_Mutable;;
	if ((_116013__mut && (!(_1ab2e7da6_Mutable((*(_115973_k)).ptr()))))) {
		_116013__mut=false;
	};
	_1ab271aee_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116013__mut, (*((*(_115957_key))))._field_Reference, &((*((*((*(_115957_key))))._field_Kind))._field_Kind), _115946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1ab2aba90_checkSlice(_1ab2aac8c_rangeChecker* _self_) {
	_1ab2ab474_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab1858d1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab3035ed_Slc> _117813_slc = _1ab2e9bcc_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab2ab276_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_117813_slc))._field_Elem});
	_1ab2ab892_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117813_slc))._field_Elem));
}



inline void _1ab2abc8d_checkArray(_1ab2aac8c_rangeChecker* _self_) {
	_1ab2ab474_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab1858d1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab30591e_Arr> _119113_arr = _1ab2e9946_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab2ab276_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_119113_arr))._field_Elem});
	_1ab2ab892_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119113_arr))._field_Elem));
}



inline void _1ab2abe8b_checkMapKeyA(_1ab2aac8c_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ab1858d1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab304c92_Map> _120313_m = _1ab2ea716_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1ab2ab276_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_120313_m))._field_Key});
	jule::Ptr<_1ab2b5c0e_Data> _120713_d = jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d)));;
	(*(_120713_d))._field_Kind=(*(_120313_m))._field_Key;
	_1ab2ab892_checkRangeExprValidity(_self_, &(_120713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120313_m))._field_Key));
}



inline void _1ab2ac189_checkMapKeyB(_1ab2aac8c_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab1858d1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ab304c92_Map> _121813_m = _1ab2ea716_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab2ab276_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_121813_m))._field_Val});
	jule::Ptr<_1ab2b5c0e_Data> _122213_d = jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d)));;
	(*(_122213_d))._field_Kind=(*(_121813_m))._field_Val;
	_1ab2ab892_checkRangeExprValidity(_self_, &(_122213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121813_m))._field_Val));
}



inline void _1ab2ac387_checkMap(_1ab2aac8c_rangeChecker* _self_) {
	_1ab2abe8b_checkMapKeyA(_self_);
	_1ab2ac189_checkMapKeyB(_self_);
}



inline void _1ab2ac585_checkStr(_1ab2aac8c_rangeChecker* _self_) {
	_1ab2ab474_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab1858d1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab2ab276_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1ab2ac783_checkComptime(_1ab2aac8c_rangeChecker* _self_) {
	_1ab2ab474_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ab1858d1_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ab2ab276_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1ab2aca19_checkComptimeRange(_1ab2aac8c_rangeChecker* _self_) {
	jule::Ptr<_1ab1e9758_comptimeRange> _125713_range = _1ab2ec020_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1bb6d6350:;
			{
				_1ab2ac783_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1bb6d5e98:;
			{
				_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bb6d5b13:;
	};
}



inline jule::Bool _1ab2acca0_check(_1ab2aac8c_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1bb6d90ab:;
		}
		else if ((_1ab2e9bcc_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6d80bb:;
			{
				_1ab2aba90_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1ab2e9946_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6d8132:;
			{
				_1ab2abc8d_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1ab2ea716_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6d8198:;
			{
				_1ab2ac387_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1ab2ec020_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6d820e:;
			{
				return _1ab2aca19_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1bb6d786d:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _128913_prim = _1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_128913_prim != nullptr) && _1ab302586_IsStr(_128913_prim.ptr()))) {
					_1ab2ac585_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1bb6d76d6:;
	};
	_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2aac8c_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1ab2ad91b_prepareTypes(_1ab2ad4ed_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ab1d3511_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1ab2adbc4_prepareExprs(_1ab2ad4ed_retTypeChecker* _self_, jule::Ptr<_1ab19c8a4_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bb6e0117:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131736_e))))._field_Kind.cast_ptr<_1ab19d575_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1bb6dec4e:;
			{
				{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1bb6debe9:;
	};
}



inline void _1ab2addc2_checkExprs(_1ab2ad4ed_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _133313_datas = jule::Slice<jule::Ptr<_1ab2b5c0e_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1ab2b7903_Eval> _133413_eval = _1ab26d07e_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1ab31605b_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb6e05bd:;
		if (it != expr_end) {
			jule::I64 _133514_i = it - expr->begin();
			jule::Ptr<_1ab19c8a4_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1bb6e05bd;
				};
				jule::Ptr<_1ab2e6525_TypeKind> _134017_t = (*(_self_))._field_types[_133514_i];;
				(*(_133413_eval))._field_prefix=_134017_t;
				jule::Ptr<_1ab2b5c0e_Data> _134317_d = _1ab2d5b63_evalExpr(_133413_eval, _133521_expr);;
				if ((_134317_d == nullptr)) {
					goto _iter_next_1bb6e05bd;
				};
				{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = _133313_datas; __jule_push_dest.push(_134317_d); };
				if (((!((*(_134317_d))._field_Mutable)) && _1ab2e7da6_Mutable((*(_134317_d))._field_Kind.ptr()))) {
					_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1ab29e599_assignTypeChecker _135517_ac = _1ab29e599_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134017_t, ._field_d=_134317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1ab2a080e_check(&_135517_ac);
			}
			_iter_next_1bb6e05bd:;
			++it;
			_133514_i++;
			goto _iter_begin_1bb6e05bd;
		}
		_iter_end_1bb6e05bd:;
	};
	if ((_133313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ab1c6d95_TupleExprModel>(_1ab1c6d95_TupleExprModel{._field_Datas=_133313_datas}), &__jule_any_type81);
	} else if ((_133313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1ab2ae213_check(_1ab2ad4ed_retTypeChecker* _self_, jule::Ptr<_1ab19c8a4_Expr>* _137429_e) {
	_1ab2ad91b_prepareTypes(_self_);
	_1ab2adbc4_prepareExprs(_self_, _137429_e);
	jule::I64 _13789_n = (*(_self_))._field_exprs.len();;
	if (((_13789_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1ab1d0651_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13789_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ab1ce881_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13789_n > (*(_self_))._field_types.len())) {
		_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13789_n < (*(_self_))._field_types.len())) {
		_1ab265ad2_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1ab2addc2_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2ad4ed_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab2b0d4c_SelectPackage(_1ab2b0863_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb6ee0c1:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1bb6ee0c1:;
			++it;
			goto _iter_begin_1bb6ee0c1;
		}
		_iter_end_1bb6ee0c1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab2b1248_FindVar(_1ab2b0863_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1ab2b302a_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab2b1644_FindTypeAlias(_1ab2b0863_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1ab2b34d1_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1ab1b9470_Struct> _1ab2b1a40_FindStruct(_1ab2b0863_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb701810:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1bb701810:;
			++it;
			goto _iter_begin_1bb701810;
		}
		_iter_end_1bb701810:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab2b1e3b_FindFn(_1ab2b0863_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb702d94:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1bb702d94:;
			++it;
			goto _iter_begin_1bb702d94;
		}
		_iter_end_1bb702d94:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab2b227c_FindTrait(_1ab2b0863_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb7041b4:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1bb7041b4:;
			++it;
			goto _iter_begin_1bb7041b4;
		}
		_iter_end_1bb7041b4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab2b25bd_FindEnum(_1ab2b0863_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb70488a:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4de6_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1bb70488a:;
			++it;
			goto _iter_begin_1bb70488a;
		}
		_iter_end_1bb70488a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab2b290e_FindTypeEnum(_1ab2b0863_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb70588b:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6601_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1bb70588b:;
			++it;
			goto _iter_begin_1bb70588b;
		}
		_iter_end_1bb70588b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab2b302a_findVar(_1ab2b0863_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1ab2853a4_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1bb707c56:;
		}
		_iter_end_1bb707c56:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb708482:;
			if (it != expr_end) {
				jule::Ptr<_1ab2853a4_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1bb708482:;
				++it;
				goto _iter_begin_1bb708482;
			}
			_iter_end_1bb708482:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab2b34d1_findTypeAlias(_1ab2b0863_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1ab2e5733_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1bb70b122:;
		}
		_iter_end_1bb70b122:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb70b84d:;
			if (it != expr_end) {
				jule::Ptr<_1ab2e5733_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1bb70b84d:;
				++it;
				goto _iter_begin_1bb70b84d;
			}
			_iter_end_1bb70b84d:;
		};
	};
	return nullptr;;
}



inline jule::Any _1ab2b38cc_defByIdent(_1ab2b0863_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb70d102:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1bb70d102:;
			++it;
			goto _iter_begin_1bb70d102;
		}
		_iter_end_1bb70d102:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb70ed29:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e5733_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1bb70ed29:;
			++it;
			goto _iter_begin_1bb70ed29;
		}
		_iter_end_1bb70ed29:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb710be8:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1bb710be8:;
			++it;
			goto _iter_begin_1bb710be8;
		}
		_iter_end_1bb710be8:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb710401:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1bb710401:;
			++it;
			goto _iter_begin_1bb710401;
		}
		_iter_end_1bb710401:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb711ea2:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1bb711ea2:;
			++it;
			goto _iter_begin_1bb711ea2;
		}
		_iter_end_1bb711ea2:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb711dc5:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4de6_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1bb711dc5:;
			++it;
			goto _iter_begin_1bb711dc5;
		}
		_iter_end_1bb711dc5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb713327:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6601_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1bb713327:;
			++it;
			goto _iter_begin_1bb713327;
		}
		_iter_end_1bb713327:;
	};
	return nullptr;;
}



inline jule::Bool _1ab2b3d83_isDuplicatedIdent(_1ab2b0863_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb715505:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bb715505:;
			++it;
			goto _iter_begin_1bb715505;
		}
		_iter_end_1bb715505:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb71622b:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e5733_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bb71622b:;
			++it;
			goto _iter_begin_1bb71622b;
		}
		_iter_end_1bb71622b:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb717370:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bb717370:;
			++it;
			goto _iter_begin_1bb717370;
		}
		_iter_end_1bb717370:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb716ec9:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1bb716ec9:;
			++it;
			goto _iter_begin_1bb716ec9;
		}
		_iter_end_1bb716ec9:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb719064:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bb719064:;
			++it;
			goto _iter_begin_1bb719064;
		}
		_iter_end_1bb719064:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb718e87:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e4de6_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bb718e87:;
			++it;
			goto _iter_begin_1bb718e87;
		}
		_iter_end_1bb718e87:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb71b5a5:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e6601_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1bb71b5a5:;
			++it;
			goto _iter_begin_1bb71b5a5;
		}
		_iter_end_1bb71b5a5:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2b0863_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab2b60b6_IsNil(_1ab2b5c0e_Data* _self_) {
	return _1ab2e7603_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ab2b634c_IsVoid(_1ab2b5c0e_Data* _self_) {
	return _1ab2e7889_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ab2b65d3_IsConst(_1ab2b5c0e_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1ab2b6924_GoodOperand(_1ab2b5c0e_Data* _self_, jule::Ptr<_1ab2b5c0e_Data>* _10331_other) {
	if ((_1ab2e96b0_TypeEnum((*((*(_10331_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ab2e8b76_Prim((*((*(_10331_other))))._field_Kind.ptr()) == nullptr) || (!(_1ab30281c_IsAny(_1ab2e8b76_Prim((*((*(_10331_other))))._field_Kind.ptr()).ptr())))) && (_1ab2ea480_Trait((*((*(_10331_other))))._field_Kind.ptr()) == nullptr)) && (!(_1ab2e7603_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2b5c0e_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2b6d53_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1ab2b7e53_pushErr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _13426_token, jule::Str _13441_fmt, jule::Slice<jule::Any> _13454_args) {
	_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _13426_token, _13441_fmt, _13454_args);
}



inline void _1ab2b82b6_pushSuggestion(_1ab2b7903_Eval* _self_, jule::Str _13933_fmt, jule::Slice<jule::Any> _13946_args) {
	_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), _13933_fmt, _13946_args);
}



inline void _1ab2b84b4_allowBuiltin(_1ab2b7903_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ab2b86b2_disallowBuiltin(_1ab2b7903_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1ab2b8948_isUnsafe(_1ab2b7903_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1ab2b8bce_isGlobal(_1ab2b7903_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bb76020e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb7605c7:;
			{
				return false;;
			}
		}
		_match_end_1bb760572:;
	};
}



inline jule::Bool _1ab2b8edc_applyNumericPrefix(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _16642_d) {
	if ((((((*(_16642_d)) == nullptr) || (!(_1ab2b65d3_IsConst((*(_16642_d)).ptr())))) || (_1ab2e8b76_Prim((*((*(_16642_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _1739_prim = _1ab2e8b76_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1739_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a8d04563_IsFloat(_1ab2ee440_Str(_1739_prim.ptr()))) {
			_case_begin_1bb762ec0:;
			{
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>((*((*(_self_))._field_prefix)));
				_1a8d08963_SetF64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1a8d07ad8_AsF64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_1a8d03b4a_IsSigInt(_1ab2ee440_Str(_1739_prim.ptr()))) {
			_case_begin_1bb763036:;
			{
				if ((!(_1ab29bac4_sigAssignable(_1ab2ee440_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>((*((*(_self_))._field_prefix)));
				_1a8d07d91_SetI64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_1a8d03e58_IsUnsigInt(_1ab2ee440_Str(_1739_prim.ptr()))) {
			_case_begin_1bb76309c:;
			{
				if ((!(_1ab29be8c_unsigAssignable(_1ab2ee440_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>((*((*(_self_))._field_prefix)));
				_1a8d08149_SetU64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		_match_end_1bb762be5:;
	};
	return true;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b932d_litStr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab19d94e_LitExpr>* _20122_l) {
	jule::Str _20213_s = jule::Str();;
	if (_1ab184391_IsRawStr((*((*(_20122_l))))._field_Value)) {
		_20213_s=_1aa267541_ToRawStr((*((*(_20122_l))))._field_Value);
	} else {
		_20213_s=_1aa267882_ToStr((*((*(_20122_l))))._field_Value);
	};
	jule::Ptr<_1a8d04e26_Const> _20813_constant = static__1a8d05bb3_NewStr(_20213_s);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20813_constant, &__jule_any_type19), ._field_Constant=_20813_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b966e_litRune(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab19d94e_LitExpr>* _21823_l) {
	jule::I32 _2199_r = _1aa267277_ToRune((*((*(_21823_l))))._field_Value);;
	jule::Ptr<_1ab2b5c0e_Data> _22013_data = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2199_r)))});;
	jule::Bool _2249_isAscii = _1aa266ee1_IsAscii(_2199_r);;
	if (_2249_isAscii) {
		(*(_22013_data))._field_Kind=_1ab3ca906_primU8;
	} else {
		(*(_22013_data))._field_Kind=_1ab3ca373_primI32;
	};
	(*(_22013_data))._field_Mutable=true;
	(*(_22013_data))._field_Model=jule::Any(jule::new_ptr<_1ab1ca9d1_RuneExprModel>(_1ab1ca9d1_RuneExprModel{._field_Code=_2199_r}), &__jule_any_type82);
	(*(_22013_data))._field_IsRune=true;
	(*(_22013_data))._field_untyped=true;
	return _22013_data;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b99b0_litFloat(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab19d94e_LitExpr>* _23824_l) {
	jule::F64 _2399_f = ({
		auto except = _1a8cd9878_ParseFloat((*((*(_23824_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a8d04e26_Const> _24013_constant = static__1a8d05e7c_NewF64(_2399_f);;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_untyped=true, ._field_Kind=_1ab3cb990_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24013_constant, &__jule_any_type19), ._field_Constant=_24013_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2b9d01_litInt(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab19d94e_LitExpr>* _25026_l) {
	;
	jule::Str _25313_lit = (*((*(_25026_l))))._field_Value;;
	jule::I64 _25413_base = 0LL;;
	{
		
		if (_1a7c37497_HasPrefix(_25313_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1bb7729c4:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=16LLU;
			}
		}
		else if (_1a7c37497_HasPrefix(_25313_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1bb772ab2:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=2LLU;
			}
		}
		else if (_1a7c37497_HasPrefix(_25313_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1bb7726b6:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=8LLU;
			}
		}
		else if (((_25313_lit[0LL] == '0') && (_25313_lit.len() > 1LL))) {
			_case_begin_1bb77272c:;
			{
				(_25313_lit).mut_slice(1LL);;
				_25413_base=8LLU;
			}
		}
		else {
			_case_begin_1bb772650:;
			{
				_25413_base=10LLU;
			}
		}
		_match_end_1bb7725ea:;
	};
	jule::Ptr<_1ab2b5c0e_Data> _27413_d = jule::new_ptr<_1ab2b5c0e_Data>();;
	jule::Bool _27613_ok = true;;
	jule::I64 _2779_sig = ({
		auto except = _1a8cd2e37_ParseInt(_25313_lit, _25413_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27613_ok=false;

			0LL;
		});
	});;
	if (_27613_ok) {
		(*(_27413_d))._field_Constant=static__1a8d05366_NewI64(_2779_sig);
		(*(_27413_d))._field_Kind=_1ab3c9a26_primInt;
	} else {
		jule::U64 _28513_unsig = ({
			auto except = _1a8cd2981_ParseUint(_25313_lit, _25413_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1ab2b7e53_pushErr(_self_, (*((*(_25026_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27413_d))._field_Constant=static__1a8d05630_NewU64(_28513_unsig);
		(*(_27413_d))._field_Kind=_1ab3c964c_primUint;
	};
	(*(_27413_d))._field_Model=jule::Any((*(_27413_d))._field_Constant, &__jule_any_type19);
	if ((!(_1ab2b8edc_applyNumericPrefix(_self_, &(_27413_d))))) {
		_1ab2deb6c_fitBitsize(&(_27413_d));
	};
	(*(_27413_d))._field_Mutable=true;
	(*(_27413_d))._field_untyped=true;
	return _27413_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ba142_litNum(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab19d94e_LitExpr>* _30626_l) {
	{
		
		if (_1ab185084_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_1bb77a317:;
			{
				return _1ab2b99b0_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_1bb779b63:;
			{
				return _1ab2b9d01_litInt(_self_, _30626_l);;
			}
		}
		_match_end_1bb779ab9:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ba483_evalLit(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab19d94e_LitExpr> _31526_lit) {
	{
		
		if (_1ab1840c7_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_1bb77ada6:;
			{
				return _1ab2b932d_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_1ab18465a_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_1bb77ae2d:;
			{
				return _1ab2b966e_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_1ab18534d_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_1bb77aea5:;
			{
				return _1ab2ba142_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_1bb77a7bd:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb77a702:;
	};
}



inline jule::Any _1ab2ba7c4_findBuiltins(_1ab2b7903_Eval* _self_, jule::Str* _32832_ident) {
	if (_1ab260093_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1bb77d1d8:;
				{
					jule::Any _33221_def = _1ab2de93b_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1ab242a9d_ImportInfo>(1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1bb77d24e:;
				{
					jule::Any _33721_def = _1ab2e0695_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1ab262e97_Sema>(3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1bb77d2b5:;
				{
					jule::Any _34221_def = _1ab2e0695_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_1bb77d183:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1ab3cc210_findBuiltinDef(_32832_ident);;
}



inline jule::Any _1ab2babc0_getDef(_1ab2b7903_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_1ab2853a4_Var> _36013_v = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab314741_FindVar((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ab2e5733_TypeAlias> _36513_ta = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab314b3c_FindTypeAlias((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type66);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_1ab1e4de6_Enum> _37117_enm = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315ab6_FindEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1ab1e6601_TypeEnum> _37617_tenm = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315e07_FindTypeEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1ab1ce40d_Fn> _38213_f = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315434_FindFn((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type64);;
	};
	jule::Ptr<_1ab1b9470_Struct> _38713_s = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315038_FindStruct((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type65);;
	};
	return _1ab2ba7c4_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_1ab1d54d0_ReferenceStack> _1ab2bae56_getOwnerRefers(_1ab2b7903_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb786444:;
			{
				jule::Ptr<_1ab2285bc_scopeChecker> _39817_sc = _1ab22b944_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1bb785d17:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr))) {
					return (*((*(_self_))._field_owner))._field_Refers;;
				};
			}
		}
		_match_end_1bb785cb2:;
	};
	return nullptr;;
}



inline void _1bb798896_pushReference(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1d2312_FnIns>* _41040_ref) {
	jule::Ptr<_1ab1d54d0_ReferenceStack> _41113_refers = _1ab2bae56_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1bb79ab84_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1ab1d62c2_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _1bb7ad13b_pushReference(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2853a4_Var>* _41040_ref) {
	jule::Ptr<_1ab1d54d0_ReferenceStack> _41113_refers = _1ab2bae56_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1bab063a8_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1ab1d62c2_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _1babb516a_pushReference(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _41040_ref) {
	jule::Ptr<_1ab1d54d0_ReferenceStack> _41113_refers = _1ab2bae56_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1babb749c_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_1ab1d62c2_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bb550__evalEnum(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1e4de6_Enum> _41728_enm) {
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_41728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bb94b_evalEnum(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1e4de6_Enum> _42631_enm, jule::Ptr<_1ab182e72_Token> _42643_errorToken) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*(_42631_enm))._field_Token)))) {
		_1ab2b7e53_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42631_enm))._field_Ident, &__jule_any_type4)}));
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab2bb550__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bbc8c__evalTypeEnum(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1e6601_TypeEnum> _43532_enm) {
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_43532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bc188_evalTypeEnum(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1e6601_TypeEnum> _44435_enm, jule::Ptr<_1ab182e72_Token> _44451_errorToken) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*(_44435_enm))._field_Token)))) {
		_1ab2b7e53_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44435_enm))._field_Ident, &__jule_any_type4)}));
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab2bbc8c__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bc4c9__evalStruct(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1bc1ed_StructIns> _45330_s) {
	jule::Ptr<_1ab2b5c0e_Data> _45413_d = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_45330_s, 0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*((*(_45330_s))._field_Decl))._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*((*(_45330_s))._field_Decl))._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bc8c5_evalStruct(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1bc1ed_StructIns> _46733_s, jule::Ptr<_1ab182e72_Token> _46748_errorToken) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*((*(_46733_s))._field_Decl))._field_Token)))) {
		_1ab2b7e53_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46733_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab2bd079_checkDeprecated(_self_, &((*((*(_46733_s))._field_Decl))._field_Directives), _46748_errorToken);
	return _1ab2bc4c9__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bcc16_evalFnIns(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1d2312_FnIns> _47728_f) {
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_47728_f, 1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _1ab2bd079_checkDeprecated(_1ab2b7903_Eval* _self_, jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _48639_directives, jule::Ptr<_1ab182e72_Token> _48670_tok) {
	if (_1ab2b8948_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1ab19798c_Directive> _4919_d = _1ab2de573_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*(_4919_d))._field_Args.len() == 0LL)) {
			_1ab2b7e53_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1ab2b7e53_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4919_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bd475_evalFn(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1ce40d_Fn> _50229_f, jule::Ptr<_1ab182e72_Token> _50237_errorToken) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*(_50229_f))._field_Token)))) {
		_1ab2b7e53_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_50229_f))._field_Ident, &__jule_any_type4)}));
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab2bd079_checkDeprecated(_self_, &((*(_50229_f))._field_Directives), _50237_errorToken);
	jule::Ptr<_1ab1d2312_FnIns> _51113_ins = _1ab1d0b6d_instance(_50229_f);;
	_1bb798896_pushReference(_self_, &(_51113_ins));
	return _1ab2bcc16_evalFnIns(_self_, _51113_ins);;
}



inline void _1ab2bd893_pushIllegalCycleError(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2853a4_Var>* _51641_v1, jule::Ptr<_1ab2853a4_Var>* _51652_v2, _1a7c4c7ed_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _1a7d06005_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _1a7c58672_Buf(_51667_message);;
	_1a7c573c9_WriteStr(_51667_message, _1a7c36ba0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1a7c573c9_WriteStr(_51667_message, _5189_refers_to);
	_1a7c57682_WriteByte(_51667_message, '\n');
	_1a7c57121_Write(_51667_message, _5199_buf);
}



inline jule::Bool _1ab2bdc8e_checkCrossCycle(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2853a4_Var>* _52635_v, _1a7c4c7ed_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb79dc86:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_1ab2bd893_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_1ab2bdc8e_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_1ab2bd893_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_1bb79dc86:;
			++it;
			goto _iter_begin_1bb79dc86;
		}
		_iter_end_1bb79dc86:;
	};
	return true;;
}



inline jule::Bool _1ab2be18a_checkIllegalCycles(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2853a4_Var>* _54342_v, jule::Ptr<_1ab182e72_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_1ab2b7e53_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a7c4c7ed_StrBuilder _55613_message = static__1a7c4cb1c_New(32LL);;
	if ((!(_1ab2bdc8e_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _1a7c57bc1_Str(&_55613_message);;
		_1a7c57dbe_Clear(&_55613_message);
		_1ab2bd893_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_1a7c57bc1_Str(&_55613_message);
		_1ab2b7e53_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2be586_evalVar(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2853a4_Var> _57130_v, jule::Ptr<_1ab182e72_Token> _57139_errorToken) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*(_57130_v))._field_Token)))) {
		_1ab2b7e53_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab2bd079_checkDeprecated(_self_, &((*(_57130_v))._field_Directives), _57139_errorToken);
	if (((*(_57130_v))._field_Token == nullptr)) {
		goto _julec_label_1bab0bd1a;
	};
	(*(_57130_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bb7a8851:;
			{
				jule::Bool _59013_ok = _1ab2be18a_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb7a88b7:;
			{
				if (((!((*(_57130_v))._field_Reference)) || _1ab2b8948_isUnsafe(_self_))) {
					goto _match_end_1bb7a87eb;
				};
				jule::Ptr<_1ab2285bc_scopeChecker> _59817_s = (*(_self_))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0);;
				while ((((*(_59817_s))._field_owner == nullptr) && ((*(_59817_s))._field_parent != nullptr))) {
					{
						_59817_s=(*(_59817_s))._field_parent;
					}
				_iter_next_1bb7a9c2b:;
				}
				_iter_end_1bb7a9c2b:;;
				if (((((*(_59817_s))._field_owner != nullptr) && (*((*(_59817_s))._field_owner))._field_Anon) && ((*(_57130_v))._field_Scope != (*((*(_59817_s))._field_owner))._field_Scope))) {
					_1ab2b7e53_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1bb7a87eb:;
	};
	if (((*(_57130_v))._field_Scope == nullptr)) {
		_1bb7ad13b_pushReference(_self_, &(_57130_v));
	};
	if (((!((*(_57130_v))._field_Binded)) && (((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_57130_v))._field_Constant) {
			_1ab27bdd4_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait<_1ab31605b_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_57130_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1ab27bdd4_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1bab0bd1a:;
	jule::Ptr<_1ab2b5c0e_Data> _64213_d = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=(*((*(_57130_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_57130_v))._field_Mutable, ._field_Reference=(*(_57130_v))._field_Reference, ._field_Lvalue=(!((*(_57130_v))._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*(_57130_v))._field_Binded)) && _1ab285739_IsInitialized(_57130_v.ptr())) && ((*((*(_57130_v))._field_Value))._field_Data != nullptr))) {
		(*(_64213_d))._field_IsRune=(*((*((*(_57130_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_57130_v))._field_Constant && ((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_64213_d))._field_Constant=jule::new_ptr<_1a8d04e26_Const>((*((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant)));
		(*(_64213_d))._field_Model=jule::Any((*(_64213_d))._field_Constant, &__jule_any_type19);
		if (_1ab285c56_untypedConstant(_57130_v.ptr())) {
			_1ab2b8edc_applyNumericPrefix(_self_, &(_64213_d));
			(*(_64213_d))._field_untyped=true;
		};
	};
	return _64213_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2be982_evalTypeAlias(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e5733_TypeAlias> _66636_ta, jule::Ptr<_1ab182e72_Token> _66652_errorToken) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66636_ta))._field_Public, (*(_66636_ta))._field_Token)))) {
		_1ab2b7e53_pushErr(_self_, _66652_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66636_ta))._field_Ident, &__jule_any_type4)}));
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66636_ta))._field_Used=true;
	jule::Trait<_1ab2e606e_Kind> _67513_kind = (*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1ab2b5c0e_Data> _67617_d = nullptr;;
	{
		auto &_match_expr{ _67513_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bab17e03:;
			{
				_67617_d=_1ab2bc4c9__evalStruct(_self_, _67513_kind.cast_ptr<_1ab1bc1ed_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1bab17c27:;
			{
				_67617_d=_1ab2bb550__evalEnum(_self_, _67513_kind.cast_ptr<_1ab1e4de6_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bab15ebc:;
			{
				_67617_d=_1ab2bbc8c__evalTypeEnum(_self_, _67513_kind.cast_ptr<_1ab1e6601_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1bab15e56:;
			{
				_67617_d=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66636_ta))._field_Binded) {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*(_66636_ta))._field_Ident;
				} else {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67617_d))._field_Model=jule::Any((*(_67617_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1bab15e01:;
	};
	(*((*(_67617_d))._field_Kind))._field_Generic=(*(_66636_ta))._field_Generic;
	return _67617_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2bed7d_evalDef(_1ab2b7903_Eval* _self_, jule::Any* _70231_def, jule::Ptr<_1ab182e72_Token> _70241_ident) {
	{
		auto &_match_expr{ (*(_70231_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bab1b401:;
			{
				return _1ab2be586_evalVar(_self_, (*(_70231_def)).cast_ptr<_1ab2853a4_Var>(&__jule_any_type8), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bab1b467:;
			{
				return _1ab2bb94b_evalEnum(_self_, (*(_70231_def)).cast_ptr<_1ab1e4de6_Enum>(&__jule_any_type67), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bab1b4cd:;
			{
				return _1ab2bc188_evalTypeEnum(_self_, (*(_70231_def)).cast_ptr<_1ab1e6601_TypeEnum>(&__jule_any_type68), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bab1b544:;
			{
				return _1ab2bc8c5_evalStruct(_self_, _1ab1b98d2_instance((*(_70231_def)).cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65)), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bab1b5aa:;
			{
				jule::Ptr<_1ab1ce40d_Fn> _71317_f = (*(_70231_def)).cast_ptr<_1ab1ce40d_Fn>(&__jule_any_type64);;
				if ((!(*(_71317_f))._field_Ident.equal("init", 4))) {
					return _1ab2bd475_evalFn(_self_, _71317_f, _70241_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bab1b632:;
			{
				return _1ab2bcc16_evalFnIns(_self_, (*(_70231_def)).cast_ptr<_1ab1d2312_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bab1b6a9:;
			{
				return _1ab2be982_evalTypeAlias(_self_, (*(_70231_def)).cast_ptr<_1ab2e5733_TypeAlias>(&__jule_any_type66), _70241_ident);;
			}
		}
		_match_end_1bab1b39b:;
	};
	_1ab2b7e53_pushErr(_self_, _70241_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70241_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c01be_evalIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab19e2ce_IdentExpr> _72628_ident) {
	jule::Any _72713_def = _1ab2babc0_getDef(_self_, &((*(_72628_ident))._field_Ident), (*(_72628_ident))._field_Binded);;
	return _1ab2bed7d_evalDef(_self_, &(_72713_def), (*(_72628_ident))._field_Token);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0510_evalUnary(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19e961_UnaryExpr> _73133_u) {
	_1ab2d612a_unaryEval _73213_unary = static__1ab2d656a_new(_self_);;
	return _1ab2d799a_eval(&_73213_unary, _73133_u);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0851_evalVariadic(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19ed3a_VariadicExpr> _73636_v) {
	if (((*(_73636_v))._field_Expr == nullptr)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _74213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_74213_prefix;
	});;
	jule::Ptr<_1ab2b5c0e_Data> _74613_d = _1ab2d5b63_evalExpr(_self_, (*(_73636_v))._field_Expr);;
	if ((_74613_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab2e88e0_Variadicable((*(_74613_d))._field_Kind.ptr())))) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_74613_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab3035ed_Slc> _75613_slc = _1ab2e9bcc_Slc((*(_74613_d))._field_Kind.ptr());;
	(*(_74613_d))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_BindIdent=(*((*(_75613_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75613_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75613_slc))._field_Elem))._field_Kind});
	return _74613_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0b92_evalUnsafe(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19dd28_UnsafeExpr> _76634_u) {
	jule::Bool _7679_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1ab2b5c0e_Data> _76913_d = _1ab2d5b63_evalExpr(_self_, (*(_76634_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7679_unsafety;
	return _76913_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c0ed3_evalArr(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a3dc7_SliceExpr> _77431_s) {
	jule::Ptr<_1ab30591e_Arr> _77613_pt = _1ab2e9946_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1ab30591e_Arr> _77813_arr = jule::new_ptr<_1ab30591e_Arr>(_1ab30591e_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77613_pt))._field_Elem});;
	jule::Bool _78413_filled = false;;
	if (((*(_77431_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77431_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1bab2ccc5:;
				{
					if (((*((*((*(_77431_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1ab19ed3a_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1bab2cc2b;
					};
					if ((*(_77613_pt))._field_Auto) {
						_1ab2b7e53_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78413_filled=true;
					(*(_77431_s))._field_Exprs=(*(_77431_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1bab2cc2b:;
		};
	};
	(*(_77813_arr))._field_N=static_cast<jule::I64>((*(_77431_s))._field_Exprs.len());
	if ((!((*(_77613_pt))._field_Auto))) {
		if (((*(_77813_arr))._field_N > (*(_77613_pt))._field_N)) {
			_1ab2b7e53_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77813_arr))._field_N < (*(_77613_pt))._field_N)) {
			(*(_77813_arr))._field_N=(*(_77613_pt))._field_N;
		};
	};
	jule::Ptr<_1ab1c6a98_ArrayExprModel> _81313_model = jule::new_ptr<_1ab1c6a98_ArrayExprModel>(_1ab1c6a98_ArrayExprModel{._field_Kind=_77813_arr, });;
	if (_78413_filled) {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77431_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1ab2e6525_TypeKind> _82213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77813_arr))._field_Elem;
	{
		auto expr = &((*(_77431_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab3311b:;
		if (it != expr_end) {
			jule::Ptr<_1ab19c8a4_Expr> _82421_elem = *it;
			{
				jule::Ptr<_1ab2b5c0e_Data> _82517_d = _1ab2d5b63_evalExpr(_self_, _82421_elem);;
				if ((_82517_d == nullptr)) {
					goto _iter_next_1bab3311b;
				};
				_1ab26d5e0_checkAssignType((*(_self_))._field_s, false, &((*(_77813_arr))._field_Elem), &(_82517_d), (*(_77431_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_82517_d))._field_Model); };
			}
			_iter_next_1bab3311b:;
			++it;
			goto _iter_begin_1bab3311b;
		}
		_iter_end_1bab3311b:;
	};
	(*(_self_))._field_prefix=_82213_prefix;
	if (_78413_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_77813_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_81313_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c1489_evalExpSlc(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a3dc7_SliceExpr> _84834_s, jule::Ptr<_1ab2e6525_TypeKind> _84853_t, jule::Any _84871_first) {
	jule::Ptr<_1ab3035ed_Slc> _84913_slc = jule::new_ptr<_1ab3035ed_Slc>(_1ab3035ed_Slc{._field_Elem=_84853_t});;
	jule::I64 _85313_i = 0LL;;
	jule::Ptr<_1ab1c3a51_SliceExprModel> _85413_model = jule::new_ptr<_1ab1c3a51_SliceExprModel>(_1ab1c3a51_SliceExprModel{._field_ElemKind=_84853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84834_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push(_84871_first); };
		_85313_i=1LL;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _86313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84913_slc))._field_Elem;
	{
		auto expr = (*(_84834_s))._field_Exprs.slice(_85313_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bab3aba1:;
		if (it != expr_end) {
			jule::Ptr<_1ab19c8a4_Expr> _86521_elem = *it;
			{
				jule::Ptr<_1ab2b5c0e_Data> _86617_d = _1ab2d5b63_evalExpr(_self_, _86521_elem);;
				if ((_86617_d == nullptr)) {
					goto _iter_next_1bab3aba1;
				};
				_1ab26d5e0_checkAssignType((*(_self_))._field_s, false, &((*(_84913_slc))._field_Elem), &(_86617_d), (*(_84834_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push((*(_86617_d))._field_Model); };
			}
			_iter_next_1bab3aba1:;
			++it;
			goto _iter_begin_1bab3aba1;
		}
		_iter_end_1bab3aba1:;
	};
	(*(_self_))._field_prefix=_86313_prefix;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_84913_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85413_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c17ca_evalSliceExpr(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a3dc7_SliceExpr> _88437_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1ab2e9946_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bab3edd6:;
				{
					return _1ab2c0ed3_evalArr(_self_, _88437_s);;
				}
			}
			else if ((_1ab2e9bcc_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bab3ee5d:;
				{
					jule::Ptr<_1ab3035ed_Slc> _89021_pt = _1ab2e9bcc_Slc((*(_self_))._field_prefix.ptr());;
					return _1ab2c1489_evalExpSlc(_self_, _88437_s, (*(_89021_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1bab3ecc6:;
		};
	};
	jule::Ptr<_1ab2e6525_TypeKind> _89513_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88437_s))._field_Exprs.len() == 0LL)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*(_88437_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _90313_firstElem = _1ab2d5b63_evalExpr(_self_, (*(_88437_s))._field_Exprs[0LL]);;
	if ((_90313_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _90813_d = _1ab2c1489_evalExpSlc(_self_, _88437_s, (*(_90313_firstElem))._field_Kind, (*(_90313_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89513_prefix;
	return _90813_d;;
}



inline void _1ab2c1b3d_checkIntegerIndexingByData(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _91450_d, jule::Ptr<_1ab182e72_Token> _91460_token) {
	jule::Str _9159_err_key = _1ab2e1c5c_checkDataForIntegerIndexing(_91450_d);;
	{
		auto &_match_expr{ _9159_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bab46a47:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1bab46052:;
			{
				_1ab2b7e53_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_91450_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1bab4645e:;
			{
				_1ab2b7e53_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1bab46409:;
	};
}



inline void _1ab2c205b_indexingPtr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _92635_d, jule::Ptr<_1ab2b5c0e_Data>* _92650_index, jule::Ptr<_1ab1a4867_IndexingExpr>* _92665_i) {
	_1ab2c1b3d_checkIntegerIndexingByData(_self_, _92650_index, (*((*(_92665_i))))._field_Token);
	(*((*(_92635_d))))._field_Lvalue=true;
	jule::Ptr<_1ab3063e2_Ptr> _93013_ptr = _1ab2e9193_Ptr((*((*(_92635_d))))._field_Kind.ptr());;
	{
		
		if (_1ab306e2b_IsUnsafe(_93013_ptr.ptr())) {
			_case_begin_1bab49253:;
			{
				_1ab2b7e53_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ab2b8948_isUnsafe(_self_)))) {
			_case_begin_1bab492ca:;
			{
				_1ab2b7e53_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bab491ed:;
	};
	(*((*(_92635_d))))._field_Kind=(*(_93013_ptr))._field_Elem;
}



inline void _1ab2c2479_indexingArr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _94235_d, jule::Ptr<_1ab2b5c0e_Data>* _94250_index, jule::Ptr<_1ab1a4867_IndexingExpr>* _94265_i) {
	jule::Ptr<_1ab30591e_Arr> _94313_arr = _1ab2e9946_Arr((*((*(_94235_d))))._field_Kind.ptr());;
	(*((*(_94235_d))))._field_Kind=(*(_94313_arr))._field_Elem;
	_1ab2c1b3d_checkIntegerIndexingByData(_self_, _94250_index, (*((*(_94265_i))))._field_Token);
	(*((*(_94235_d))))._field_Lvalue=true;
	if ((_1ab2b65d3_IsConst((*(_94250_index)).ptr()) && (_1a8d07ad8_AsF64((*((*(_94250_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_94313_arr))._field_N)))) {
		_1ab2b7e53_pushErr(_self_, (*((*(_94265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1ab2c2897_indexingSlc(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _95235_d, jule::Ptr<_1ab2b5c0e_Data>* _95250_index, jule::Ptr<_1ab1a4867_IndexingExpr>* _95265_i) {
	jule::Ptr<_1ab3035ed_Slc> _95313_slc = _1ab2e9bcc_Slc((*((*(_95235_d))))._field_Kind.ptr());;
	(*((*(_95235_d))))._field_Kind=(*(_95313_slc))._field_Elem;
	_1ab2c1b3d_checkIntegerIndexingByData(_self_, _95250_index, (*((*(_95265_i))))._field_Token);
	(*((*(_95235_d))))._field_Lvalue=true;
	if ((!(_1ab2b65d3_IsConst((*(_95250_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95235_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bab51601:;
			{
				jule::Ptr<_1ab1c3a51_SliceExprModel> _96417_m = (*((*(_95235_d))))._field_Model.cast_ptr<_1ab1c3a51_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96513_indx = _1a8d07ad8_AsF64((*((*(_95250_index))))._field_Constant.ptr());;
				if ((_96513_indx >= static_cast<jule::F64>((*(_96417_m))._field_Elems.len()))) {
					_1ab2b7e53_pushErr(_self_, (*((*(_95265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95235_d))))._field_Model=(*(_96417_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96513_indx))];
					(*((*(_95235_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1bab5159b:;
	};
}



inline void _1ab2c2cb5_indexingMap(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _97535_d, jule::Ptr<_1ab2b5c0e_Data>* _97550_index, jule::Ptr<_1ab1a4867_IndexingExpr>* _97569_i) {
	(*((*(_97535_d))))._field_Lvalue=true;
	if (((*(_97550_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab304c92_Map> _98013_m = _1ab2ea716_Map((*((*(_97535_d))))._field_Kind.ptr());;
	_1ab29e599_assignTypeChecker _98113_atc = _1ab29e599_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98013_m))._field_Key, ._field_d=(*(_97550_index)), ._field_errorToken=(*((*(_97569_i))))._field_Token};;
	_1ab2a080e_check(&_98113_atc);
	(*((*(_97535_d))))._field_Kind=(*(_98013_m))._field_Val;
}



inline void _1ab2c31d3_indexingStr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _99135_d, jule::Ptr<_1ab2b5c0e_Data>* _99150_index, jule::Ptr<_1ab1a4867_IndexingExpr>* _99165_i) {
	(*((*(_99135_d))))._field_Kind=_1ab3ca906_primU8;
	(*((*(_99135_d))))._field_Mutable=false;
	(*((*(_99135_d))))._field_Lvalue=true;
	if (((*(_99150_index)) == nullptr)) {
		return;;
	};
	_1ab2c1b3d_checkIntegerIndexingByData(_self_, _99150_index, (*((*(_99165_i))))._field_Token);
	if ((!(_1ab2b65d3_IsConst((*(_99150_index)).ptr())))) {
		(*((*(_99135_d))))._field_Constant=nullptr;
		return;;
	};
	if (_1ab2b65d3_IsConst((*(_99135_d)).ptr())) {
		jule::Ptr<_1ab182e72_Token> _100813_errorToken = (*((*(_99165_i))))._field_Token;;
		jule::I64 _100913_j = _1a8d075bb_AsI64((*((*(_99150_index))))._field_Constant.ptr());;
		jule::Str _101013_s = _1a8d0709e_ReadStr((*((*(_99135_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100913_j) >= _101013_s.len())) {
			_1ab2b7e53_pushErr(_self_, _100813_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1a8d08149_SetU64((*((*(_99135_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101013_s[_100913_j])));
		};
	};
}



inline void _1ab2c3601_toIndexing(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _101934_d, jule::Ptr<_1ab2b5c0e_Data>* _101949_index, jule::Ptr<_1ab1a4867_IndexingExpr>* _101968_i) {
	{
		
		if ((_1ab2e9193_Ptr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bab5c8b5:;
			{
				_1ab2c205b_indexingPtr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab2e9946_Arr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bab5c93c:;
			{
				_1ab2c2479_indexingArr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab2e9bcc_Slc((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bab5c9b4:;
			{
				_1ab2c2897_indexingSlc(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab2ea716_Map((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bab5ca3b:;
			{
				_1ab2c2cb5_indexingMap(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_1ab2e8b76_Prim((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bab5cab3:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _103413_prim = _1ab2e8b76_Prim((*((*(_101934_d))))._field_Kind.ptr());;
				{
					
					if (_1ab302586_IsStr(_103413_prim.ptr())) {
						_case_begin_1bab61dd6:;
						{
							_1ab2c31d3_indexingStr(_self_, _101934_d, _101949_index, _101968_i);
							return;;
						}
					}
					_match_end_1bab61d4d:;
				};
			}
		}
		_match_end_1bab5c772:;
	};
	_1ab2b7e53_pushErr(_self_, (*((*(_101968_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_101934_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1ab2c3aa7_pushGenericsFromExprSubIdent(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _104453_sexpr, jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>* _104514_generics, jule::Ptr<_1ab19c8a4_Expr>* _104542_expr) {
	jule::Ptr<_1ab198e77_SubIdentTypeDecl> _104613_t = jule::new_ptr<_1ab198e77_SubIdentTypeDecl>();;
	if ((!(_1ab2e2b4d_pushSubIdentFromExpr(jule::Any((*(_104453_sexpr)), &__jule_any_type85), &(_104613_t))))) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_104542_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*(_104514_generics)); __jule_push_dest.push(jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Kind=jule::Any(_104613_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1ab2c3ea3_pushGenericsFromData(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>* _105545_generics, jule::Ptr<_1ab19c8a4_Expr>* _105573_expr) {
	{
		auto &_match_expr{ (*((*(_105573_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bab6546c:;
			{
				jule::Ptr<_1ab19e961_UnaryExpr> _105817_u = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab19e961_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_105817_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1bab6720a:;
						{
							jule::Ptr<_1ab19a099_PtrTypeDecl> _106121_kind = jule::new_ptr<_1ab19a099_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _106221__generics = jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>::alloc(0LL, 1LL);;
							_1ab2c3ea3_pushGenericsFromData(_self_, &(_106221__generics), &((*(_105817_u))._field_Expr));
							(*(_106121_kind))._field_Elem=_106221__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_106121_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1bab68371:;
						{
							jule::Ptr<_1ab19961a_SptrTypeDecl> _107021_kind = jule::new_ptr<_1ab19961a_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _107121__generics = jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>::alloc(0LL, 1LL);;
							_1ab2c3ea3_pushGenericsFromData(_self_, &(_107121__generics), &((*(_105817_u))._field_Expr));
							(*(_107021_kind))._field_Elem=_107121__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_107021_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1bab67749:;
						{
							_1ab2b7e53_pushErr(_self_.ptr(), (*(_105817_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1bab676e4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bab663e6:;
			{
				{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push((*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab198570_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bab6645c:;
			{
				jule::Ptr<_1ab1a09b7_SubIdentExpr> _108517_sexpr = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab1a09b7_SubIdentExpr>(&__jule_any_type85);;
				return _1ab2c3aa7_pushGenericsFromExprSubIdent(_self_, &(_108517_sexpr), _105545_generics, _105573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bab664c3:;
			{
				jule::Ptr<_1ab19e2ce_IdentExpr> _108817_ident = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab19e2ce_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=(*(_108817_ident))._field_Token, ._field_Ident=(*(_108817_ident))._field_Ident, ._field_Binded=(*(_108817_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bab65835:;
			{
				{
					auto expr = &((*((*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab19d575_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bab707da:;
					if (it != expr_end) {
						jule::Ptr<_1ab19c8a4_Expr> _109725_texpr = *it;
						{
							if ((!(_1ab2c3ea3_pushGenericsFromData(_self_, _105545_generics, &(_109725_texpr))))) {
								return false;;
							};
						}
						_iter_next_1bab707da:;
						++it;
						goto _iter_begin_1bab707da;
					}
					_iter_end_1bab707da:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bab6589b:;
			{
				jule::Ptr<_1ab1a05dd_NsSelectionExpr> _110317_ns = (*((*(_105573_expr))))._field_Kind.cast_ptr<_1ab1a05dd_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1ab198b7a_IdentTypeDecl> _110417_decl = jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=(*(_110317_ns))._field_Ident, ._field_Ident=(*((*(_110317_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab19931d_NamespaceTypeDecl>(_1ab19931d_NamespaceTypeDecl{._field_Idents=(*(_110317_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(_110417_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1bab657be:;
			{
				_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_105573_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bab65769:;
	};
	return true;;
}



inline void _1ab2c4316_evalIdentDeclFromIndexing(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab2b5c0e_Data>* _112550_d, jule::Ptr<_1ab1a4867_IndexingExpr>* _112565_i) {
	jule::Ptr<_1ab1bc1ed_StructIns> _112613_s = _1ab2ea1e9_Struct((*((*(_112550_d))))._field_Kind.ptr());;
	if ((_112613_s == nullptr)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*((*(_112565_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_112550_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112550_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab198b7a_IdentTypeDecl> _113317_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112565_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bab76615:;
			{
				jule::Ptr<_1ab19e2ce_IdentExpr> _113617_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_1ab19e2ce_IdentExpr>(&__jule_any_type79);;
				_113317_decl=jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=(*(_113617_expr))._field_Token, ._field_Ident=(*(_113617_expr))._field_Ident, ._field_Binded=(*(_113617_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bab7788b:;
			{
				jule::Ptr<_1ab1a05dd_NsSelectionExpr> _114317_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_1ab1a05dd_NsSelectionExpr>(&__jule_any_type89);;
				_113317_decl=jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=(*(_114317_expr))._field_Ident, ._field_Ident=(*((*(_114317_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1bab76a88:;
			{
				_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_112565_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112550_d))=nullptr;
				return;;
			}
		}
		_match_end_1bab76a33:;
	};
	if ((!(_1ab2c3ea3_pushGenericsFromData(_self_, &((*(_113317_decl))._field_Generics), &((*((*(_112565_i))))._field_Index))))) {
		(*(_112550_d))=nullptr;
		return;;
	};
	_112613_s=({ auto _wrap_copy = _1ab2cad12_typeChecker(_self_.ptr()); _1ab30c32c_fromStruct(&_wrap_copy, &(_113317_decl), &((*(_112613_s))._field_Decl)); });
	if ((_112613_s == nullptr)) {
		(*(_112550_d))=nullptr;
		return;;
	};
	(*((*((*(_112550_d))))._field_Kind))._field_Kind=jule::Trait<_1ab2e606e_Kind>(_112613_s, 0);
}



inline jule::Bool _1ab2c47bc_checkGenericFn(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1d2312_FnIns>* _116839_f, jule::Ptr<_1ab182e72_Token>* _116855_et, jule::Any* _116872_model) {
	jule::Bool _11699_ok = _1ab270bdb_reloadFnInsTypes((*(_self_))._field_s, (*(_116839_f)));;
	(*((*(_116839_f))))._field_reloaded=true;
	if ((!(_11699_ok))) {
		return false;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _117413_existInstance = _1ab1d0e7b_appendInstance((*((*(_116839_f))))._field_Decl.ptr(), _116839_f);;
	if ((!(_1ab26ec40_checkConstraintsFn((*(_self_))._field_s, _116839_f, _116855_et, _117413_existInstance)))) {
		return false;;
	};
	if ((_117413_existInstance != nullptr)) {
		_1ab2e27c9_updateModelToGenericIns(_116872_model, &(_117413_existInstance));
		_1bab8071d_updateRefer(_1ab2bae56_getOwnerRefers(_self_.ptr()), _116839_f, &(_117413_existInstance));
		(*(_116839_f))=_117413_existInstance;
	} else {
		_1ab28003b_checkFnInsCaller((*(_self_))._field_s, _116839_f, (*(_116855_et)));
	};
	return true;;
}



inline void _1ab2c4b30_evalFnGenericFromIndexing(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab2b5c0e_Data>* _119750_d, jule::Ptr<_1ab1a4867_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _119813_generics = jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1ab2c3ea3_pushGenericsFromData(_self_, &(_119813_generics), &((*((*(_119765_i))))._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _120413_f = _1ab2e9e63_Fn((*((*(_119750_d))))._field_Kind.ptr());;
	jule::I64 _120513_genericsLen = 0LL;;
	if (((*(_120413_f))._field_Decl != nullptr)) {
		_120513_genericsLen=static_cast<jule::I64>((*((*(_120413_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1ab267111_checkGenericQuantity((*(_self_))._field_s.ptr(), _120513_genericsLen, static_cast<jule::I64>(_119813_generics.len()), (*((*((*(_119765_i))))._field_Expr))._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	(*(_120413_f))._field_Generics=jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>>::alloc(0LL, (*((*(_120413_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119813_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab874a0:;
		if (it != expr_end) {
			jule::Ptr<_1ab198570_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_1ab2b5c0e_Data> _121717_k = _1ab2cb153_evalType(_self_.ptr(), _121621_g);;
				if ((_121717_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>> &__jule_push_dest = (*(_120413_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1ab2e4b3e_InsGeneric>(_1ab2e4b3e_InsGeneric{._field_Kind=(*(_121717_k))._field_Kind, })); };
			}
			_iter_next_1bab874a0:;
			++it;
			goto _iter_begin_1bab874a0;
		}
		_iter_end_1bab874a0:;
	};
	if (_1ab1d3797_IsBuiltin(_120413_f.ptr())) {
		return;;
	};
	if (_1ab2c47bc_checkGenericFn(_self_, &(_120413_f), &((*((*((*(_119765_i))))._field_Expr))._field_Token), &((*((*(_119750_d))))._field_Model))) {
		(*((*((*(_119750_d))))._field_Kind))._field_Kind=jule::Trait<_1ab2e606e_Kind>(_120413_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c4e71_evalIndexing(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a4867_IndexingExpr> _123636_i) {
	jule::Ptr<_1ab2e6525_TypeKind> _123713_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_123713_prefix;
	});;
	jule::Ptr<_1ab2b5c0e_Data> _124113_d = _1ab2d4d4e_evalExprKind(_self_, (*((*(_123636_i))._field_Expr))._field_Kind);;
	if ((_124113_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124113_d))._field_Decl) {
		_1ab2c4316_evalIdentDeclFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	if ((_1ab2e9e63_Fn((*(_124113_d))._field_Kind.ptr()) != nullptr)) {
		_1ab2c4b30_evalFnGenericFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	_1ab2b5c0e_Data _125713_oldData = (*(_124113_d));;
	jule::Ptr<_1ab2b5c0e_Data> _125913_index = _1ab2d5b63_evalExpr(_self_, (*(_123636_i))._field_Index);;
	if ((_125913_index == nullptr)) {
		return nullptr;;
	};
	(*(_124113_d))._field_Decl=false;
	_1ab2c3601_toIndexing(_self_.ptr(), &(_124113_d), &(_125913_index), &(_123636_i));
	if (_1ab2b65d3_IsConst(_124113_d.ptr())) {
		(*(_124113_d))._field_Decl=false;
		(*(_124113_d))._field_Model=jule::Any((*(_124113_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124113_d))._field_Decl) {
		(*(_124113_d))._field_Decl=false;
	} else {
		(*(_124113_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c4007_IndexingExprModel>(_1ab1c4007_IndexingExprModel{._field_Token=(*(_123636_i))._field_Token, ._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>(_125713_oldData), ._field_Index=_125913_index}), &__jule_any_type45);
	};
	return _124113_d;;
}



inline __jule_tuple_x_1ab2b5c0e_Data__jule_tuple_x_1ab2b5c0e_Data _1ab2c52b2_evalSlicingExprs(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a4ec7_SlicingExpr>* _129041_s) {
	__jule_tuple_x_1ab2b5c0e_Data__jule_tuple_x_1ab2b5c0e_Data __jule_func_result;
	jule::Ptr<_1ab2e6525_TypeKind> _129113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_129113_prefix;
	});;
	jule::Ptr<_1ab2b5c0e_Data> _129517_l = nullptr;;
	jule::Ptr<_1ab2b5c0e_Data> _129617_r = nullptr;;
	if (((*((*(_129041_s))))._field_Start != nullptr)) {
		_129517_l=_1ab2d5b63_evalExpr(_self_, (*((*(_129041_s))))._field_Start);
		if ((_129517_l != nullptr)) {
			_1ab2c1b3d_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c9a26_primInt, ._field_Constant=static__1a8d05366_NewI64(0LL)});
		(*((*(_129517_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_129517_l))._field_Model=jule::Any((*(_129517_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129041_s))))._field_To != nullptr)) {
		_129617_r=_1ab2d5b63_evalExpr(_self_, (*((*(_129041_s))))._field_To);
		if ((_129617_r != nullptr)) {
			_1ab2c1b3d_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _1ab2c556a_slicingArr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _132630_d) {
	jule::Ptr<_1ab2e6525_TypeKind> _132713_elemType = (*(_1ab2e9946_Arr((*((*(_132630_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132630_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab3035ed_Slc>(_1ab3035ed_Slc{._field_Elem=_132713_elemType}), 22)});
	(*((*(_132630_d))))._field_Lvalue=false;
	(*((*(_132630_d))))._field_Mutable=((*((*(_132630_d))))._field_Mutable || (!(_1ab2e7da6_Mutable(_132713_elemType.ptr()))));
}



inline void _1ab2c5988_slicingStr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _134130_d, jule::Ptr<_1ab2b5c0e_Data>* _134141_l, jule::Ptr<_1ab2b5c0e_Data>* _134152_r) {
	(*((*(_134130_d))))._field_Lvalue=false;
	(*((*(_134130_d))))._field_Mutable=true;
	if ((!(_1ab2b65d3_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*((*(_134130_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_1ab2b65d3_IsConst((*(_134141_l)).ptr()) && _1ab2b65d3_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135413_left = _1a8d075bb_AsI64((*((*(_134141_l))))._field_Constant.ptr());;
		if ((_135413_left < 0LL)) {
			return;;
		};
		jule::Str _135913_s = _1a8d0709e_ReadStr((*((*(_134130_d))))._field_Constant.ptr());;
		jule::I64 _136017_right = static_cast<jule::I64>(0LL);;
		if (((*(_134152_r)) == nullptr)) {
			_136017_right=static_cast<jule::I64>(static_cast<jule::I64>(_135913_s.len()));
		} else {
			_136017_right=static_cast<jule::I64>(_1a8d075bb_AsI64((*((*(_134152_r))))._field_Constant.ptr()));
		};
		if ((_135413_left > _136017_right)) {
			return;;
		};
		_1a8d086aa_SetStr((*((*(_134130_d))))._field_Constant.ptr(), _135913_s.slice(_135413_left, _136017_right));
		(*((*(_134130_d))))._field_Decl=true;
	} else {
		(*((*(_134130_d))))._field_Constant=nullptr;
	};
}



inline void _1ab2c5e61_checkSlicing(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _137736_d, jule::Ptr<_1ab2b5c0e_Data>* _137747_l, jule::Ptr<_1ab2b5c0e_Data>* _137758_r, jule::Ptr<_1ab1a4ec7_SlicingExpr>* _137769_s) {
	{
		
		if ((_1ab2e9946_Arr((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1baba25a8:;
			{
				_1ab2c556a_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_1ab2e9bcc_Slc((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1baba2630:;
			{
				return;;
			}
		}
		else if ((_1ab2e8b76_Prim((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1baba26a7:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _138513_prim = _1ab2e8b76_Prim((*((*(_137736_d))))._field_Kind.ptr());;
				{
					
					if (_1ab302586_IsStr(_138513_prim.ptr())) {
						_case_begin_1baba4e29:;
						{
							_1ab2c5988_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1baba4d91:;
				};
			}
		}
		_match_end_1baba2487:;
	};
	_1ab2b7e53_pushErr(_self_, (*((*(_137769_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_137736_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c62a2_evalSlicing(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a4ec7_SlicingExpr> _139635_s) {
	jule::Ptr<_1ab2b5c0e_Data> _139713_d = _1ab2d5b63_evalExpr(_self_, (*(_139635_s))._field_Expr);;
	if ((_139713_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _140213_l;;
	jule::Ptr<_1ab2b5c0e_Data> _140220_r;;
	({
		__jule_tuple_x_1ab2b5c0e_Data__jule_tuple_x_1ab2b5c0e_Data __jule_assign_result = _1ab2c52b2_evalSlicingExprs(_self_, &(_139635_s));
		_140213_l = __jule_assign_result.__jule_result_arg0;
		_140220_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140213_l == nullptr)) {
		return _139713_d;;
	};
	(*(_139713_d))._field_Decl=false;
	_1ab2c5e61_checkSlicing(_self_.ptr(), &(_139713_d), &(_140213_l), &(_140220_r), &(_139635_s));
	if (_1ab2b65d3_IsConst(_139713_d.ptr())) {
		(*(_139713_d))._field_Decl=false;
		(*(_139713_d))._field_Model=jule::Any((*(_139713_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_139713_d))._field_Decl) {
		(*(_139713_d))._field_Decl=false;
	} else {
		jule::Ptr<_1ab1c52e4_SlicingExprModel> _142017_model = jule::new_ptr<_1ab1c52e4_SlicingExprModel>(_1ab1c52e4_SlicingExprModel{._field_Token=(*(_139635_s))._field_Token, ._field_Expr=(*(_139713_d))._field_Model, ._field_Left=(*(_140213_l))._field_Model, });;
		if ((_140220_r != nullptr)) {
			(*(_142017_model))._field_Right=(*(_140220_r))._field_Model;
		};
		(*(_139713_d))._field_Model=jule::Any(_142017_model, &__jule_any_type91);
	};
	return _139713_d;;
}



inline void _1ab2c66c0_castPtr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _143330_t, jule::Ptr<_1ab2b5c0e_Data> _143348_d, jule::Ptr<_1ab182e72_Token> _143358_errorToken) {
	(*(_143348_d))._field_Constant=nullptr;
	jule::Ptr<_1ab302b2a_Sptr> _14359_sptr = _1ab2e8e0c_Sptr((*(_143348_d))._field_Kind.ptr());;
	if ((_14359_sptr != nullptr)) {
		if ((!(_1ab2e6c2e_Equal((*(_1ab2e9193_Ptr(_143330_t.ptr())))._field_Elem, (*(_14359_sptr))._field_Elem)))) {
			_1ab2b7e53_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_143330_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1ab2b8948_isUnsafe(_self_)))) {
		_1ab2b7e53_pushErr(_self_, _143358_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _14489_prim = _1ab2e8b76_Prim((*(_143348_d))._field_Kind.ptr());;
	if (((_1ab2e9193_Ptr((*(_143348_d))._field_Kind.ptr()) == nullptr) && ((_14489_prim == nullptr) || (!(_1a8d04222_IsInt(_1ab2ee440_Str(_14489_prim.ptr()))))))) {
		_1ab2b7e53_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_143330_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1ab2c6add_castStruct(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _145433_t, jule::Ptr<_1ab2b5c0e_Data> _145451_d, jule::Ptr<_1ab182e72_Token> _145461_errorToken) {
	(*(_145451_d))._field_Constant=nullptr;
	jule::Ptr<_1ab1e26da_Trait> _145613_tr = _1ab2ea480_Trait((*(_145451_d))._field_Kind.ptr());;
	if ((_145613_tr == nullptr)) {
		_1ab2b7e53_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_145433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _146213_s = _1ab2ea1e9_Struct(_145433_t.ptr());;
	_1babb516a_pushReference(_self_, &(_146213_s));
	if ((!(_1ab1baaae_IsImplements((*(_146213_s))._field_Decl.ptr(), _145613_tr)))) {
		_1ab2b7e53_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_145433_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1ab2c700b_castRef(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _147030_t, jule::Ptr<_1ab2b5c0e_Data> _147048_d, jule::Ptr<_1ab182e72_Token> _147058_errorToken) {
	(*(_147048_d))._field_Constant=nullptr;
	jule::Ptr<_1ab302b2a_Sptr> _147213_sptr = _1ab2e8e0c_Sptr(_147030_t.ptr());;
	jule::Ptr<_1ab3063e2_Ptr> _147413_ptr = _1ab2e9193_Ptr((*(_147048_d))._field_Kind.ptr());;
	if (((_147413_ptr != nullptr) && _1ab2e6c2e_Equal((*(_147213_sptr))._field_Elem, (*(_147413_ptr))._field_Elem))) {
		if ((!(_1ab2b8948_isUnsafe(_self_)))) {
			_1ab2b7e53_pushErr(_self_, _147058_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ab2ea1e9_Struct((*(_147213_sptr))._field_Elem.ptr()) != nullptr)) {
		_1ab2c6add_castStruct(_self_, (*(_147213_sptr))._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_1ab2b7e53_pushErr(_self_, _147058_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_147048_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_147030_t.ptr()), &__jule_any_type4)}));
}



inline void _1ab2c7429_castSlc(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _149230_t, jule::Ptr<_1ab2b5c0e_Data> _149248_d, jule::Ptr<_1ab182e72_Token> _149258_errorToken) {
	jule::Ptr<_1a8d04e26_Const> _14939_c = (*(_149248_d))._field_Constant;;
	(*(_149248_d))._field_Constant=nullptr;
	if ((_1ab2e9429_Enum((*(_149248_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1ab2e8b76_Prim((*((*(_1ab2e9429_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1ab302586_IsStr(_1ab2e8b76_Prim((*((*(_1ab2e9429_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1ab2b7e53_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_149230_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1ab2e8b76_Prim((*(_149248_d))._field_Kind.ptr()) == nullptr) || (!(_1ab302586_IsStr(_1ab2e8b76_Prim((*(_149248_d))._field_Kind.ptr()).ptr()))))) {
		_1ab2b7e53_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149230_t=(*(_1ab2e9bcc_Slc(_149230_t.ptr())))._field_Elem;
	jule::Ptr<_1ab2ee0ee_Prim> _15079_prim = _1ab2e8b76_Prim(_149230_t.ptr());;
	if (((_15079_prim == nullptr) || ((!(_1ab3009e6_IsU8(_15079_prim.ptr()))) && (!(_1ab3004c9_IsI32(_15079_prim.ptr())))))) {
		_1ab2b7e53_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_14939_c != nullptr)) {
		{
			
			if (_1ab3009e6_IsU8(_15079_prim.ptr())) {
				_case_begin_1babc7ad9:;
				{
					jule::Str _151717_s = _1a8d0709e_ReadStr(_14939_c.ptr());;
					jule::Ptr<_1ab1c3a51_SliceExprModel> _151821_model = jule::new_ptr<_1ab1c3a51_SliceExprModel>(_1ab1c3a51_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151717_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151717_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1babc9525:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_1a8d04e26_Const> _152325_bc = static__1a8d05630_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								(*(_152325_bc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151821_model))._field_Elems; __jule_push_dest.push(jule::Any(_152325_bc, &__jule_any_type19)); };
							}
							_iter_next_1babc9525:;
							++it;
							goto _iter_begin_1babc9525;
						}
						_iter_end_1babc9525:;
					};
					(*(_149248_d))._field_Model=jule::Any(_151821_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			else if (_1ab3004c9_IsI32(_15079_prim.ptr())) {
				_case_begin_1babc7b61:;
				{
					jule::Slice<jule::I32> _153017_runes = static_cast<jule::Slice<jule::I32>>(_1a8d0709e_ReadStr(_14939_c.ptr()));;
					jule::Ptr<_1ab1c3a51_SliceExprModel> _153121_model = jule::new_ptr<_1ab1c3a51_SliceExprModel>(_1ab1c3a51_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1babcc88b:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_1a8d04e26_Const> _153625_rc = static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								(*(_153625_rc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_153121_model))._field_Elems; __jule_push_dest.push(jule::Any(_153625_rc, &__jule_any_type19)); };
							}
							_iter_next_1babcc88b:;
							++it;
							goto _iter_begin_1babcc88b;
						}
						_iter_end_1babcc88b:;
					};
					(*(_149248_d))._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			_match_end_1babc79c9:;
		};
	};
}



inline void _1ab2c778c_castStr(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data> _154630_d, jule::Ptr<_1ab182e72_Token> _154640_errorToken) {
	if ((_1ab2e9429_Enum((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab1e4de6_Enum> _154817_e = _1ab2e9429_Enum((*(_154630_d))._field_Kind.ptr());;
		if (((_1ab2e8b76_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1ab302586_IsStr(_1ab2e8b76_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a8d04e26_Const> _15549_c = (*(_154630_d))._field_Constant;;
	(*(_154630_d))._field_Constant=nullptr;
	if ((_1ab2e8b76_Prim((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab2ee0ee_Prim> _155713_prim = _1ab2e8b76_Prim((*(_154630_d))._field_Kind.ptr());;
		if (((!(_1ab3009e6_IsU8(_155713_prim.ptr()))) && (!(_1ab3004c9_IsI32(_155713_prim.ptr()))))) {
			_1ab2b7e53_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15549_c != nullptr)) {
			{
				
				if (_1ab3009e6_IsU8(_155713_prim.ptr())) {
					_case_begin_1babd4cc2:;
					{
						(*(_154630_d))._field_Constant=static__1a8d05bb3_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1a8d07852_AsU64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				else if (_1ab3004c9_IsI32(_155713_prim.ptr())) {
					_case_begin_1babd4d49:;
					{
						(*(_154630_d))._field_Constant=static__1a8d05bb3_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1a8d075bb_AsI64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				_match_end_1babd4bc3:;
			};
		};
		return;;
	};
	jule::Ptr<_1ab3035ed_Slc> _157813_s = _1ab2e9bcc_Slc((*(_154630_d))._field_Kind.ptr());;
	if ((_157813_s == nullptr)) {
		_1ab2b7e53_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _158413_t = (*(_157813_s))._field_Elem;;
	jule::Ptr<_1ab2ee0ee_Prim> _15859_prim = _1ab2e8b76_Prim(_158413_t.ptr());;
	if (((_15859_prim == nullptr) || ((!(_1ab3009e6_IsU8(_15859_prim.ptr()))) && (!(_1ab3004c9_IsI32(_15859_prim.ptr())))))) {
		_1ab2b7e53_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1ab2c7baa_castInt(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _159230_t, jule::Ptr<_1ab2b5c0e_Data> _159248_d, jule::Ptr<_1ab182e72_Token> _159258_errorToken) {
	if (_1ab2b65d3_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1ab2ee0ee_Prim> _159413_prim = _1ab2e8b76_Prim(_159230_t.ptr());;
		{
			
			if (_1a8d03b4a_IsSigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_1babdce84:;
				{
					_1a8d07d91_SetI64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			else if (_1a8d03e58_IsUnsigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_1babdd00b:;
				{
					_1a8d08149_SetU64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			_match_end_1babdcdda:;
		};
	} else {
		(*(_159248_d))._field_Constant=nullptr;
	};
	if ((_1ab2e9429_Enum((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab1e4de6_Enum> _160613_e = _1ab2e9429_Enum((*(_159248_d))._field_Kind.ptr());;
		if (_1a8d0482c_IsNum(_1ab2e68dd_Str((*((*(_160613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ab2e8e0c_Sptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab2ee0ee_Prim> _161313_prim = _1ab2e8b76_Prim(_159230_t.ptr());;
		if ((!(_1ab302069_IsUintptr(_161313_prim.ptr())))) {
			_1ab2b7e53_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_159230_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1ab2e9193_Ptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab2ee0ee_Prim> _162013_prim = _1ab2e8b76_Prim(_159230_t.ptr());;
		if (_1ab302069_IsUintptr(_162013_prim.ptr())) {
		} else if ((!(_1ab2b8948_isUnsafe(_self_)))) {
			_1ab2b7e53_pushErr(_self_, _159258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _16299_prim = _1ab2e8b76_Prim((*(_159248_d))._field_Kind.ptr());;
	if (((_16299_prim != nullptr) && _1a8d0482c_IsNum(_1ab2ee440_Str(_16299_prim.ptr())))) {
		return;;
	};
	_1ab2b7e53_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_159230_t.ptr()), &__jule_any_type4)}));
}



inline void _1ab2c80c8_castNum(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _163730_t, jule::Ptr<_1ab2b5c0e_Data> _163748_d, jule::Ptr<_1ab182e72_Token> _163758_errorToken) {
	if (_1ab2b65d3_IsConst(_163748_d.ptr())) {
		jule::Ptr<_1ab2ee0ee_Prim> _163913_prim = _1ab2e8b76_Prim(_163730_t.ptr());;
		{
			
			if (_1a8d04563_IsFloat((*(_163913_prim))._field_Kind)) {
				_case_begin_1babe8d80:;
				{
					_1a8d08963_SetF64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::F64>(_1a8d07ad8_AsF64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_1a8d03b4a_IsSigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_1babe8e07:;
				{
					_1a8d07d91_SetI64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_1a8d03e58_IsUnsigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_1babe8e7e:;
				{
					_1a8d08149_SetU64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			_match_end_1babe8cc5:;
		};
	} else {
		(*(_163748_d))._field_Constant=nullptr;
	};
	if ((_1ab2e9429_Enum((*(_163748_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab1e4de6_Enum> _165313_e = _1ab2e9429_Enum((*(_163748_d))._field_Kind.ptr());;
		if (_1a8d0482c_IsNum(_1ab2e68dd_Str((*((*(_165313_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ab2ee0ee_Prim> _16599_prim = _1ab2e8b76_Prim((*(_163748_d))._field_Kind.ptr());;
	if (((_16599_prim != nullptr) && _1a8d0482c_IsNum(_1ab2ee440_Str(_16599_prim.ptr())))) {
		return;;
	};
	_1ab2b7e53_pushErr(_self_, _163758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_163748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_163730_t.ptr()), &__jule_any_type4)}));
}



inline void _1ab2c84e6_castPrim(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _166731_t, jule::Ptr<_1ab2b5c0e_Data> _166749_d, jule::Ptr<_1ab182e72_Token> _166759_errorToken) {
	jule::Ptr<_1ab2ee0ee_Prim> _16689_prim = _1ab2e8b76_Prim(_166731_t.ptr());;
	{
		
		if (_1ab30281c_IsAny(_16689_prim.ptr())) {
			_case_begin_1bac0211e:;
			{
				(*(_166749_d))._field_Constant=nullptr;
			}
		}
		else if (_1ab302586_IsStr(_16689_prim.ptr())) {
			_case_begin_1bac02196:;
			{
				_1ab2c778c_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_1a8d04222_IsInt(_1ab2ee440_Str(_16689_prim.ptr()))) {
			_case_begin_1bac01c89:;
			{
				_1ab2c7baa_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_1a8d0482c_IsNum(_1ab2ee440_Str(_16689_prim.ptr()))) {
			_case_begin_1bac01d11:;
			{
				_1ab2c80c8_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1bac01c23:;
			{
				_1ab2b7e53_pushErr(_self_, _166759_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str(_166731_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1bac01bbd:;
	};
}



inline void _1ab2c8859_castConstant(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _168436_t, jule::Ptr<_1ab2b5c0e_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_1ab2b65d3_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _16889_prim = _1ab2e8b76_Prim((*(_168436_t)).ptr());;
	_1ab2e2334_castConstByType(&((*(_16889_prim))._field_Kind), _168455_d);
	(*((*(_168455_d))))._field_Model=jule::Any((*((*(_168455_d))))._field_Constant, &__jule_any_type19);
}



inline void _1ab2c8c77_castTypeEnum(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _169336_t, jule::Ptr<_1ab2b5c0e_Data>* _169355_d, jule::Ptr<_1ab182e72_Token>* _169370_errorToken) {
	jule::I64 _16949_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab26da96_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_169355_d))))._field_Kind), _169336_t, _169370_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16949_n);
		_1ab2b7e53_pushErr(_self_, (*(_169370_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_169355_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_169336_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169355_d))))._field_Constant=nullptr;
}



inline void _1ab2c9195_castTypeEnumT(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _170237_t, jule::Ptr<_1ab2b5c0e_Data>* _170256_d, jule::Ptr<_1ab182e72_Token>* _170271_errorToken) {
	jule::I64 _17039_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab26da96_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*((*(_170256_d))))._field_Kind), _170271_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17039_n);
		_1ab2b7e53_pushErr(_self_, (*(_170271_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_170256_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_170237_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170256_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c964b_evalCastByTypeNData(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2e6525_TypeKind> _171142_t, jule::Ptr<_1ab2b5c0e_Data> _171160_d, jule::Ptr<_1ab182e72_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && (*(_171160_d))._field_Decl)) {
		_1ab2b7e53_pushErr(_self_, _171174_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1ab2b60b6_IsNil(_171160_d.ptr())) {
			_case_begin_1bac0e0d7:;
			{
				if ((!(_1ab2e83c3_NilCompatible(_171142_t.ptr())))) {
					_1ab2b7e53_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_171142_t.ptr()), &__jule_any_type4)}));
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if (((_1ab2e8b76_Prim((*(_171160_d))._field_Kind.ptr()) != nullptr) && _1ab30281c_IsAny(_1ab2e8b76_Prim((*(_171160_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bac0dee9:;
			{
				if ((_1ab2e9429_Enum(_171142_t.ptr()) != nullptr)) {
					_1ab2b7e53_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1ab2e96b0_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_1ab2b7e53_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if ((_1ab2e96b0_TypeEnum((*(_171160_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bac0dc96:;
			{
				_1ab2c8c77_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1ab2e96b0_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bac0dd0c:;
			{
				_1ab2c9195_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1ab2e9193_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bac0e9bc:;
			{
				_1ab2c66c0_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab2e8e0c_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bac0ea33:;
			{
				_1ab2c700b_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab2e9bcc_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bac0ea99:;
			{
				_1ab2c7429_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab2ea1e9_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bac0eb10:;
			{
				_1ab2c6add_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1ab2e8b76_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1bac0eb76:;
			{
				_1ab2c84e6_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_1ab2c8859_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1bac0db75:;
			{
				_1ab2b7e53_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str(_171142_t.ptr()), &__jule_any_type4)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1bac0d45a:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	(*(_171160_d))._field_Mutable=((*(_171160_d))._field_Mutable || (!(_1ab2e7da6_Mutable((*(_171160_d))._field_Kind.ptr()))));
	if (((!((*(_171160_d))._field_Decl)) && ((_1ab2e9429_Enum((*(_171160_d))._field_Kind.ptr()) == nullptr) || (!(_1ab2e6c2e_Equal((*((*(_1ab2e9429_Enum((*(_171160_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _171142_t)))))) {
		_1ab2e1784_applyCastKind(&(_171160_d), &(_171142_t));
		(*((*(_171160_d))._field_Model.cast_ptr<_1ab1c2cc5_CastingExprModel>(&__jule_any_type92)))._field_Token=_171174_errorToken;
	} else {
		(*(_171160_d))._field_Kind=_171142_t;
	};
	(*(_171160_d))._field_Decl=false;
	(*(_171160_d))._field_Lvalue=false;
	(*(_171160_d))._field_untyped=false;
	if (_1ab2b65d3_IsConst(_171160_d.ptr())) {
		(*((*(_171160_d))._field_Constant))._field_Kind=(*(_1ab2e8b76_Prim(_171142_t.ptr())))._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c9b02_evalCastT(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab2e6525_TypeKind>* _178234_t, jule::Ptr<_1ab19c8a4_Expr>* _178253_e, jule::Ptr<_1ab182e72_Token>* _178268_et) {
	jule::Ptr<_1ab2e6525_TypeKind> _178313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_178313_prefix;
	});;
	if ((_1ab2e9bcc_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_178253_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1bac1e449:;
				{
					(*(_self_))._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1bac1e3e4:;
		};
	};
	jule::Ptr<_1ab2b5c0e_Data> _179213_d = _1ab2d5b63_evalExpr(_self_, (*(_178253_e)));;
	if (((_179213_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _179213_d;;
	};
	return _1ab2c964b_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179213_d, (*(_178268_et)));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2c9e43_evalCast(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a0214_CastExpr> _179932_c) {
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _180013_t = _1ab1d6d61_buildType((*(_179932_c))._field_Kind);;
	jule::Bool _18019_ok = _1ab26b753_checkType((*(_self_))._field_s, &(_180013_t), (*(_self_))._field_lookup);;
	if ((!(_18019_ok))) {
		return nullptr;;
	};
	return _1ab2c9b02_evalCastT(_self_, &((*(_180013_t))._field_Kind), &((*(_179932_c))._field_Expr), &((*((*(_179932_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ca284_evalNsSelection(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1a05dd_NsSelectionExpr> _180834_s) {
	jule::Str _18099_path = _1ab31309c_buildLinkPathByTokens(&((*(_180834_s))._field_Ns));;
	jule::Ptr<_1ab242a9d_ImportInfo> _181013_imp = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab314345_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>([=](jule::Ptr<_1ab242a9d_ImportInfo> _181049_imp) mutable -> jule::Bool {
		if ((((*(_180834_s))._field_Ns.len() == 1LL) && ((*(_181049_imp))._field_Alias == _18099_path))) {
			return true;;
		};
		return (((*(_181049_imp))._field_LinkPath == _18099_path) && _1ab2456b6_isAccessibleViaSelection(_181049_imp.ptr()));;
	}));;
	if ((_181013_imp == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*(_180834_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18099_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1ab31605b_Lookup> _182213_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ab31605b_Lookup>(_181013_imp, 1);
	;
	_1ab2b86b2_disallowBuiltin(_self_);
	jule::Any _182713_def = _1ab2babc0_getDef(_self_, &((*((*(_180834_s))._field_Ident))._field_Kind), false);;
	_1ab2b84b4_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182213_lookup;
	jule::Ptr<_1ab2b5c0e_Data> _183013_d = _1ab2bed7d_evalDef(_self_, &(_182713_def), (*(_180834_s))._field_Ident);;
	return _183013_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ca73a_evalStructLitExplicit(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1bc1ed_StructIns> _183445_s, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _183513_exprs, jule::Ptr<_1ab182e72_Token> _183533_errorToken) {
	jule::Bool _18369_ok = _1ab267111_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_183445_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_183445_s))._field_Generics.len()), _183533_errorToken);;
	if ((!(_18369_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_183445_s))._field_Decl))) {
		_1ab2b7e53_pushErr(_self_.ptr(), _183533_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_183445_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1babb516a_pushReference(_self_.ptr(), &(_183445_s));
	_1ab2bd079_checkDeprecated(_self_.ptr(), &((*((*(_183445_s))._field_Decl))._field_Directives), _183533_errorToken);
	_1ab2a8eaa_structLitChecker _184913_slc = _1ab2a8eaa_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_1ab2aa6e8_check(&_184913_slc, &(_183513_exprs));
	jule::Ptr<_1ab2b5c0e_Data> _185613_d = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_183445_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1ab1c2445_StructLitExprModel>(_1ab1c2445_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184913_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_183445_s))._field_Decl))._field_Binded) {
		(*((*(_185613_d))._field_Kind))._field_BindIdent=(*((*(_183445_s))._field_Decl))._field_Ident;
	};
	return _185613_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2caa7b_evalStructLit(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a28ed_StructLit> _187237_lit) {
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _187313_t = _1ab1d6d61_buildType((*(_187237_lit))._field_Kind);;
	jule::Bool _18749_ok = _1ab26b753_checkType((*(_self_))._field_s, &(_187313_t), (*(_self_))._field_lookup);;
	if ((!(_18749_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _187913_s = _1ab2ea1e9_Struct((*(_187313_t))._field_Kind.ptr());;
	if ((_187913_s == nullptr)) {
		if ((_1ab2e8e0c_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
			_187913_s=_1ab2ea1e9_Struct((*(_1ab2e8e0c_Sptr((*(_187313_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187913_s != nullptr)) {
				goto _julec_label_1bb8463d3;
			};
		};
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_187237_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bb8463d3:;
	jule::Ptr<_1ab2b5c0e_Data> _189213_d = _1ab2ca73a_evalStructLitExplicit(_self_, _187913_s, (*(_187237_lit))._field_Exprs, (*((*(_187237_lit))._field_Kind))._field_Token);;
	if ((_1ab2e8e0c_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab1c2445_StructLitExprModel> _189417_model = (*(_189213_d))._field_Model.cast_ptr<_1ab1c2445_StructLitExprModel>(&__jule_any_type94);;
		_1ab2dee9c_makeStructLitAlloc(&(_189213_d), &(_189417_model));
	};
	return _189213_d;;
}



inline _1ab3083d3_typeChecker _1ab2cad12_typeChecker(_1ab2b7903_Eval* _self_) {
	return _1ab26a4ee_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cb153_evalType(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab198570_TypeDecl> _190431_t) {
	jule::Ptr<_1ab2ed6e7_TypeSymbol> _190513_tk = _1ab1d6d61_buildType(_190431_t);;
	jule::Bool _19069_ok = _1ab26b753_checkType((*(_self_))._field_s, &(_190513_tk), (*(_self_))._field_lookup);;
	if ((!(_19069_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=(*(_190513_tk))._field_Kind, ._field_Model=jule::Any((*(_190513_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1ab2cb4b6_callTypeFn(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a15cd_FnCallExpr>* _191735_fc, jule::Ptr<_1ab2b5c0e_Data>* _191757_d) {
	if (((*((*(_191735_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_191735_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*((*(_191735_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_191757_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_191735_fc))))._field_IsCo) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*((*(_191735_fc))))._field_Exception != nullptr)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*((*(_191735_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1ab19c8a4_Expr> _193317_arg = (*((*(_191735_fc))))._field_Args[0LL];;
		(*(_191757_d))=_1ab2c9b02_evalCastT(_self_, &((*((*(_191757_d))))._field_Kind), &(_193317_arg), &((*(_193317_arg))._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*((*(_191757_d))))._field_Decl=false;
	};
}



inline void _1ab2cb829_callBuiltinFn(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a15cd_FnCallExpr>* _194338_fc, jule::Ptr<_1ab2b5c0e_Data>* _194360_d) {
	if ((!(_1ab1a1952_Unhandled((*(_194338_fc)).ptr())))) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_194338_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=(*(_1ab2e9e63_Fn((*((*(_194360_d))))._field_Kind.ptr())))._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*((*(_194360_d))))._field_Mutable=true;
}



inline void _1ab2cbb8c_checkFnOfConcurrentCall(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1d2312_FnIns>* _195543_f, jule::Ptr<_1ab182e72_Token> _195554_errorToken) {
	if (_1ab2b8948_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_195543_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb8557cc:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d1366_ParamIns> *_195916_p = it;
			{
				if (_1ab1cd055_IsSelf((*((*(_195916_p))))._field_Decl.ptr())) {
					if ((!(_1ab1cd2db_IsRef((*((*(_195916_p))))._field_Decl.ptr())))) {
						_1ab2b7e53_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195916_p))))._field_Decl))._field_Reference) {
					_1ab2b7e53_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1bb8557cc:;
			++it;
			goto _iter_begin_1bb8557cc;
		}
		_iter_end_1bb8557cc:;
	};
}



inline void _1ab2cc0aa_processExceptionalHandler(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1d2312_FnIns>* _197449_f, jule::Ptr<_1ab1a15cd_FnCallExpr>* _197465_fc, jule::Ptr<_1ab2b5c0e_Data>* _197487_d) {
	jule::Bool _19759_resultNeeded = ((!(_1ab1ce881_IsVoid((*((*(_197449_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ab2285bc_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_1ab2212b8_Scope> _197717_ch = nullptr;;
	jule::Ptr<_1ab1c3677_FnCallExprModel> _197913_model = (*((*(_197487_d))))._field_Model.cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1ab2285bc_scopeChecker> _198313_sc = (*(_self_))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0);;
	_197617_csc=_1ab23a05c_newChildChecker(_198313_sc);
	if (_19759_resultNeeded) {
		(*(_197617_csc))._field_result=(*(_197449_f));
	};
	_197717_ch=_1ab22d3b3_getChild(_198313_sc.ptr());
	(*((*((*(_197465_fc))))._field_Exception))._field_Parent=(*(_198313_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*((*(_197617_csc))._field_table))._field_Vars; __jule_push_dest.push(_1ab2e0321_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_1ab22d7d1_checkChildSsc(_198313_sc, &((*((*(_197465_fc))))._field_Exception), &(_197717_ch), &(_197617_csc));
	(*(_197913_model))._field_Assigned=_19759_resultNeeded;
	(*(_197913_model))._field_Except=_197717_ch;
	if ((_19759_resultNeeded && ((*(_197617_csc))._field_result != nullptr))) {
		_1ab2b7e53_pushErr(_self_, (*((*(_197465_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1ab2cc41d_callFn(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a15cd_FnCallExpr>* _200131_fc, jule::Ptr<_1ab2b5c0e_Data>* _200153_d) {
	jule::Ptr<_1ab1d2312_FnIns> _200213_f = _1ab2e9e63_Fn((*((*(_200153_d))))._field_Kind.ptr());;
	if (_1ab1d3797_IsBuiltin(_200213_f.ptr())) {
		_1ab2cb829_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_1ab2b8bce_isGlobal(_self_.ptr()) && (*((*(_200213_f))._field_Decl))._field_Exceptional)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1ab2b82b6_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_1ab1ceb17_IsMethod((*(_200213_f))._field_Decl.ptr()))) && _1ab312145_hasDirective(&((*((*(_200213_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_200153_d))))._field_Mutable)) && _1ab1ceb17_IsMethod((*(_200213_f))._field_Decl.ptr())) && (!((*((*(_200213_f))._field_Decl))._field_Statically))) && (*((*((*(_200213_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1ab1c2445_StructLitExprModel> _202817_lit = _1ab2e3555_isLitBased(&((*((*(_200153_d))))._field_Model));;
			if ((_202817_lit == nullptr)) {
				_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1ab2a89c1_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202817_lit));
			};
		};
	} else if (((!(_1ab2b8948_isUnsafe(_self_.ptr()))) && (*((*(_200213_f))._field_Decl))._field_Unsafety)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _204013_dynamicAnnotation = ((((*((*(_200213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_200213_f))._field_Generics.len() == 0LL)) && ((*(_200213_f))._field_Params.len() > 0LL));;
	if (_204013_dynamicAnnotation) {
		(*(_200213_f))._field_Generics=jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>>::alloc((*((*(_200213_f))._field_Decl))._field_Generics.len(), (*((*(_200213_f))._field_Decl))._field_Generics.len());
	} else if (((*(_200213_f))._field_Generics.len() != (*((*(_200213_f))._field_Decl))._field_Generics.len())) {
		_1ab267111_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_200213_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_200213_f))._field_Generics.len()), (*((*(_200131_fc))))._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab262e97_Sema> _204913_old = (*(_self_))._field_s;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_200213_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204913_old != (*(_self_))._field_s)) {
			((*(_204913_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204913_old;
	});;
	_1ab2a6073_fnCallArgChecker _206213_fcac = _1ab2a6073_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_200131_fc))))._field_Args, ._field_errorToken=(*((*(_200131_fc))))._field_Token, ._field_dynamicAnnotation=_204013_dynamicAnnotation, };;
	if ((!(_204013_dynamicAnnotation))) {
		if ((!((*(_200213_f))._field_reloaded))) {
			jule::Bool _207117_ok = _1ab270bdb_reloadFnInsTypes((*(_self_))._field_s, _200213_f);;
			(*(_200213_f))._field_reloaded=true;
			if ((!(_207117_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ab1d2312_FnIns> _207817_existInstance = _1ab1d0e7b_appendInstance((*(_200213_f))._field_Decl.ptr(), &(_200213_f));;
		if ((_207817_existInstance != nullptr)) {
			_200213_f=_207817_existInstance;
		};
	} else if ((!(_1ab26e448_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_200213_f), &(_206213_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_206213_fcac._field_f=_200213_f;
	jule::Bool _208913_ok = false;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_204913_old, (*(_self_))._field_s);
		_208913_ok=_1ab2a862a_check(&_206213_fcac);
		std::swap(_204913_old, (*(_self_))._field_s);
	} else {
		_208913_ok=_1ab2a862a_check(&_206213_fcac);
	};
	if (_204013_dynamicAnnotation) {
		if ((!(_208913_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_1ab2c47bc_checkGenericFn(_self_, &(_200213_f), &((*((*(_200131_fc))))._field_Token), &((*((*(_200153_d))))._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _210913_callModel = (*((*(_200153_d))))._field_Model;;
	if (_1ab1ce881_IsVoid((*(_200213_f))._field_Decl.ptr())) {
		(*(_200153_d))=_1ab2e1993_buildVoidData();
	} else {
		(*((*(_200153_d))))._field_Kind=(*(_200213_f))._field_Result;
		(*((*(_200153_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1ab1c3677_FnCallExprModel> _211813_model = jule::new_ptr<_1ab1c3677_FnCallExprModel>(_1ab1c3677_FnCallExprModel{._field_Token=(*((*(_200131_fc))))._field_Token, ._field_Func=_200213_f, ._field_IsCo=(*((*(_200131_fc))))._field_IsCo, ._field_Expr=_210913_callModel, ._field_Args=_206213_fcac._field_argModels, });;
	(*((*(_200153_d))))._field_Model=jule::Any(_211813_model, &__jule_any_type34);
	(*((*(_200153_d))))._field_Mutable=true;
	if ((*((*(_200213_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_200131_fc))))._field_IsCo) {
			_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1ab265e45_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1ab1a1952_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_1bb87bc32:;
				{
					_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1ab2b82b6_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1ab1a1bd8_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_1bb87bc98:;
				{
					goto _match_end_1bb87a725;
				}
			}
			else {
				_case_begin_1bb87a77a:;
				{
					_1ab2cc0aa_processExceptionalHandler(_self_.ptr(), &(_200213_f), _200131_fc, _200153_d);
				}
			}
			_match_end_1bb87a725:;
		};
	} else if ((!(_1ab1a1952_Unhandled((*(_200131_fc)).ptr())))) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_200131_fc))))._field_IsCo) {
		_1ab2cbb8c_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211813_model))._field_Func), (*((*(_200131_fc))))._field_Token);
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cc75e_evalFnCall(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a15cd_FnCallExpr> _215334_fc) {
	jule::Ptr<_1ab2e6525_TypeKind> _215413_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_215413_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_215334_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bb881341:;
			{
				if ((*((*((*(_215334_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1ab3cda2a_builtinCallerError(&(_self_), &(_215334_fc));;
				};
			}
		}
		_match_end_1bb8812db:;
	};
	jule::Ptr<_1ab2b5c0e_Data> _216713_d = _1ab2d4d4e_evalExprKind(_self_, (*((*(_215334_fc))._field_Expr))._field_Kind);;
	if ((_216713_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_216713_d))._field_Decl) {
		_1ab2cb4b6_callTypeFn(_self_, &(_215334_fc), &(_216713_d));
		return _216713_d;;
	};
	if ((_1ab2e9e63_Fn((*(_216713_d))._field_Kind.ptr()) == nullptr)) {
		_1ab2b7e53_pushErr(_self_.ptr(), (*(_215334_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ab2cc41d_callFn(_self_, &(_215334_fc), &(_216713_d));
	return _216713_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ccb5a_evalEnumStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1e4de6_Enum> _218637_enm, jule::Ptr<_1ab182e72_Token> _218649_ident) {
	jule::Ptr<_1ab1e4379_EnumItem> _218713_item = _1ab1e59da_FindItem(_218637_enm.ptr(), (*(_218649_ident))._field_Kind);;
	if ((_218713_item == nullptr)) {
		_1ab2b7e53_pushErr(_self_, _218649_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218637_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218649_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1ab2e328b_evalEnumStatic(&(_218637_enm), &(_218713_item));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cd056_evalTypeEnumStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1e6601_TypeEnum> _219441_enm, jule::Ptr<_1ab182e72_Token> _219457_ident) {
	jule::Ptr<_1ab1e6029_TypeEnumItem> _219513_item = _1ab1e71b2_FindItem(_219441_enm.ptr(), (*(_219457_ident))._field_Kind);;
	if ((_219513_item == nullptr)) {
		_1ab2b7e53_pushErr(_self_, _219457_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_219441_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_219457_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1ab2e9429_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8899ba:;
			{
				return _1ab2bb550__evalEnum(_self_, _1ab2e9429_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1ab2e96b0_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8896ce:;
			{
				return _1ab2bbc8c__evalTypeEnum(_self_, _1ab2e96b0_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1ab2ea1e9_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb889745:;
			{
				return _1ab2bc4c9__evalStruct(_self_, _1ab2ea1e9_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1bb8879a7:;
			{
				jule::Ptr<_1ab2b5c0e_Data> _220817_d = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=(*((*(_219513_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220817_d))._field_Model=jule::Any((*(_220817_d))._field_Kind, &__jule_any_type83);
				return _220817_d;;
			}
		}
		_match_end_1bb888700:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cd452_evalStructStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1bc1ed_StructIns> _221739_s, jule::Ptr<_1ab182e72_Token> _221754_ident) {
	jule::Ptr<_1ab2b5c0e_Data> _221813_d = jule::new_ptr<_1ab2b5c0e_Data>();;
	;
	jule::Ptr<_1ab1ce40d_Fn> _222213_method = _1ab1bd265_FindMethod(_221739_s.ptr(), (*(_221754_ident))._field_Kind, true);;
	if ((_222213_method != nullptr)) {
		if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_222213_method))._field_Public, (*(_222213_method))._field_Token)))) {
			_1ab2b7e53_pushErr(_self_, _221754_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
			_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ab1d2312_FnIns> _222917_ins = _1ab1d0b6d_instance(_222213_method);;
		(*(_222917_ins))._field_Owner=_221739_s;
		_1bb798896_pushReference(_self_, &(_222917_ins));
		(*(_221813_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c66be_StructStaticIdentExprModel>(_1ab1c66be_StructStaticIdentExprModel{._field_Structure=_221739_s, ._field_Expr=(*(_221813_d))._field_Model, ._field_Method=_222917_ins}), &__jule_any_type95);
		(*(_221813_d))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_222917_ins, 1)});
		return _221813_d;;
	};
	jule::Ptr<_1ab2853a4_Var> _224313_sttc = _1ab1bd8e7_FindStatic(_221739_s.ptr(), (*(_221754_ident))._field_Kind);;
	if ((_224313_sttc != nullptr)) {
		return _1ab2be586_evalVar(_self_, _224313_sttc, _221754_ident);;
	};
	_1ab2b7e53_pushErr(_self_, _221754_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_221739_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cd908_evalTraitSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data> _225240_d, jule::Ptr<_1ab1e26da_Trait> _225254_trt, jule::Ptr<_1ab182e72_Token> _225271_ident) {
	jule::Ptr<_1ab1ce40d_Fn> _225313_f = _1ab1e3389_FindMethod(_225254_trt.ptr(), (*(_225271_ident))._field_Kind);;
	if ((_225313_f == nullptr)) {
		_1ab2b7e53_pushErr(_self_, _225271_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_225254_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_225271_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab1d0b6d_instance(_225313_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ab1c5877_TraitSubIdentExprModel>(_1ab1c5877_TraitSubIdentExprModel{._field_Token=_225271_ident, ._field_Expr=(*(_225240_d))._field_Model, ._field_Method=_225313_f, ._field_Trt=_225254_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cde69_evalStructSubIdentField(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _227247_d, jule::Ptr<_1ab1bc1ed_StructIns>* _227262_s, jule::Ptr<_1ab182e72_Token>* _227282_tok, jule::Ptr<_1ab1bb64d_FieldIns>* _2272100_f) {
	jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _227313_model = jule::new_ptr<_1ab1c6218_StructSubIdentExprModel>(_1ab1c6218_StructSubIdentExprModel{._field_Token=(*(_227282_tok)), ._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_227247_d))))), ._field_Field=(*(_2272100_f)), ._field_Owner=(*(_227262_s))});;
	(*((*(_227247_d))))._field_Model=jule::Any(_227313_model, &__jule_any_type97);
	(*((*(_227247_d))))._field_Kind=(*((*(_2272100_f))))._field_Kind;
	(*((*(_227247_d))))._field_Lvalue=true;
	if (((*((*((*(_2272100_f))))._field_Decl))._field_Mutable && (!((*((*(_227247_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1bb89aa31:;
				{
					jule::Ptr<_1ab2285bc_scopeChecker> _228717_scope = _1ab22b6ad_getRoot((*(_self_))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0));;
					(*((*(_227247_d))))._field_Mutable=(((*(_228717_scope))._field_owner != nullptr) && ((*((*(_228717_scope))._field_owner))._field_Owner == (*(_227262_s))));
				}
			}
			_match_end_1bb89a9cb:;
		};
	};
	return (*(_227247_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ce4ca_evalStructSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data> _229541_d, jule::Ptr<_1ab1bc1ed_StructIns> _229555_s, jule::Ptr<_1ab1a09b7_SubIdentExpr> _229574_si, jule::Bool _229593_ref) {
	jule::Ptr<_1ab1bb64d_FieldIns> _229613_f = _1ab1bd5a6_FindField(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind);;
	if ((_229613_f != nullptr)) {
		if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_229613_f))._field_Decl))._field_Public, (*((*(_229613_f))._field_Decl))._field_Token)))) {
			_1ab2b7e53_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_229613_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1ab2cde69_evalStructSubIdentField(_self_, &(_229541_d), &(_229555_s), &((*(_229574_si))._field_Ident), &(_229613_f));;
	};
	;
	jule::Ptr<_1ab1ce40d_Fn> _230613_m = _1ab1bd265_FindMethod(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind, false);;
	if ((_230613_m == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_229555_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_229574_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_230613_m))._field_Public, (*(_230613_m))._field_Token)))) {
		_1ab2b7e53_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_230613_m))._field_Ident, &__jule_any_type4)}));
		_1ab2b82b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1ab1cd2db_IsRef((*(_230613_m))._field_Params[0LL].ptr()) && (!(_229593_ref)))) {
		_1ab2b7e53_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1ab2bd079_checkDeprecated(_self_, &((*(_230613_m))._field_Directives), (*(_229574_si))._field_Ident);
	jule::Ptr<_1ab1d2312_FnIns> _232213_ins = _1ab1d0b6d_instance(_230613_m);;
	(*(_232213_ins))._field_Owner=_229555_s;
	_1bb798896_pushReference(_self_, &(_232213_ins));
	jule::Ptr<_1ab2b5c0e_Data> _232513_model = jule::new_ptr<_1ab2b5c0e_Data>((*(_229541_d)));;
	(*(_229541_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c6218_StructSubIdentExprModel>(_1ab1c6218_StructSubIdentExprModel{._field_Token=(*(_229574_si))._field_Ident, ._field_Expr=_232513_model, ._field_Method=_232213_ins, ._field_Owner=_229555_s}), &__jule_any_type97);
	(*(_229541_d))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_232213_ins, 1)});
	return _229541_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ce81b_evalIntTypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _233636_ident) {
	;
	{
		auto &_match_expr{ (*(_233636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8a990d:;
			{
				jule::Ptr<_1a8d04e26_Const> _234017_c = static__1a8d05366_NewI64(static_cast<jule::I64>(_1a8ced13e_MaxI(jule::Str::lit("int", 3))));;
				(*(_234017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c9a26_primInt, ._field_Model=jule::Any(_234017_c, &__jule_any_type19), ._field_Constant=_234017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bb8aa26b:;
			{
				jule::Ptr<_1a8d04e26_Const> _234817_c = static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a8ced639_Min(jule::Str::lit("int", 3)))));;
				(*(_234817_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c9a26_primInt, ._field_Model=jule::Any(_234817_c, &__jule_any_type19), ._field_Constant=_234817_c});;
			}
		}
		else {
			_case_begin_1bb8a959a:;
			{
				_1ab2b7e53_pushErr(_self_, _233636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_233636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8a9545:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ceb5c_evalUintTypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _236137_ident) {
	;
	{
		auto &_match_expr{ (*(_236137_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8aa4e1:;
			{
				jule::Ptr<_1a8d04e26_Const> _236517_c = static__1a8d05630_NewU64(static_cast<jule::U64>(_1a8ced408_MaxU(jule::Str::lit("uint", 4))));;
				(*(_236517_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c964c_primUint, ._field_Model=jule::Any(_236517_c, &__jule_any_type19), ._field_Constant=_236517_c});;
			}
		}
		else {
			_case_begin_1bb8ad0c6:;
			{
				_1ab2b7e53_pushErr(_self_, _236137_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_236137_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8ad071:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2cee9d_evalI8TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _237835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8b1492:;
			{
				jule::Ptr<_1a8d04e26_Const> _238417_c = static__1a8d05366_NewI64(127LL);;
				(*(_238417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c9ce0_primI8, ._field_Model=jule::Any(_238417_c, &__jule_any_type19), ._field_Constant=_238417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bb8b1d00:;
			{
				jule::Ptr<_1a8d04e26_Const> _239217_c = static__1a8d05366_NewI64(-128LL);;
				(*(_239217_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c9ce0_primI8, ._field_Model=jule::Any(_239217_c, &__jule_any_type19), ._field_Constant=_239217_c});;
			}
		}
		else {
			_case_begin_1bb8b112e:;
			{
				_1ab2b7e53_pushErr(_self_, _237835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_237835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8b10c9:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d02de_evalI16TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _240536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8b5430:;
			{
				jule::Ptr<_1a8d04e26_Const> _241117_c = static__1a8d05366_NewI64(32767LL);;
				(*(_241117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3ca0a9_primI16, ._field_Model=jule::Any(_241117_c, &__jule_any_type19), ._field_Constant=_241117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bb8b5c8d:;
			{
				jule::Ptr<_1a8d04e26_Const> _241917_c = static__1a8d05366_NewI64(-32768LL);;
				(*(_241917_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3ca0a9_primI16, ._field_Model=jule::Any(_241917_c, &__jule_any_type19), ._field_Constant=_241917_c});;
			}
		}
		else {
			_case_begin_1bb8b50bc:;
			{
				_1ab2b7e53_pushErr(_self_, _240536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_240536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8b5067:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d0630_evalI32TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _243236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8b93bd:;
			{
				jule::Ptr<_1a8d04e26_Const> _243817_c = static__1a8d05366_NewI64(2147483647LL);;
				(*(_243817_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3ca373_primI32, ._field_Model=jule::Any(_243817_c, &__jule_any_type19), ._field_Constant=_243817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bb8b9c2b:;
			{
				jule::Ptr<_1a8d04e26_Const> _244617_c = static__1a8d05366_NewI64(-2147483648LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3ca373_primI32, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_1bb8b905a:;
			{
				_1ab2b7e53_pushErr(_self_, _243236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_243236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8b9005:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d0971_evalI64TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _245936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8bd35b:;
			{
				jule::Ptr<_1a8d04e26_Const> _246517_c = static__1a8d05366_NewI64(jule::MAX_I64);;
				(*(_246517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3ca63c_primI64, ._field_Model=jule::Any(_246517_c, &__jule_any_type19), ._field_Constant=_246517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bb8bdbb9:;
			{
				jule::Ptr<_1a8d04e26_Const> _247317_c = static__1a8d05366_NewI64(jule::MIN_I64);;
				(*(_247317_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3ca63c_primI64, ._field_Model=jule::Any(_247317_c, &__jule_any_type19), ._field_Constant=_247317_c});;
			}
		}
		else {
			_case_begin_1bb8bcee8:;
			{
				_1ab2b7e53_pushErr(_self_, _245936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_245936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8bce93:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d0cb2_evalU8TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _248635_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_248635_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8c1dba:;
			{
				jule::Ptr<_1a8d04e26_Const> _249117_c = static__1a8d05630_NewU64(255LLU);;
				(*(_249117_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3ca906_primU8, ._field_Model=jule::Any(_249117_c, &__jule_any_type19), ._field_Constant=_249117_c});;
			}
		}
		else {
			_case_begin_1bb8c1639:;
			{
				_1ab2b7e53_pushErr(_self_, _248635_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_248635_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8c1a02:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1103_evalU16TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _250436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_250436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8c4939:;
			{
				jule::Ptr<_1a8d04e26_Const> _250917_c = static__1a8d05630_NewU64(65535LLU);;
				(*(_250917_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cabc0_primU16, ._field_Model=jule::Any(_250917_c, &__jule_any_type19), ._field_Constant=_250917_c});;
			}
		}
		else {
			_case_begin_1bb8c41a8:;
			{
				_1ab2b7e53_pushErr(_self_, _250436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_250436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8c4571:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1444_evalU32TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _252236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_252236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8c74a8:;
			{
				jule::Ptr<_1a8d04e26_Const> _252717_c = static__1a8d05630_NewU64(4294967295LLU);;
				(*(_252717_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cae89_primU32, ._field_Model=jule::Any(_252717_c, &__jule_any_type19), ._field_Constant=_252717_c});;
			}
		}
		else {
			_case_begin_1bb8c6c27:;
			{
				_1ab2b7e53_pushErr(_self_, _252236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_252236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8c70e0:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1785_evalU64TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _254036_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8ca027:;
			{
				jule::Ptr<_1a8d04e26_Const> _254517_c = static__1a8d05630_NewU64(jule::MAX_U64);;
				(*(_254517_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cb40c_primU64, ._field_Model=jule::Any(_254517_c, &__jule_any_type19), ._field_Constant=_254517_c});;
			}
		}
		else {
			_case_begin_1bb8c9796:;
			{
				_1ab2b7e53_pushErr(_self_, _254036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_254036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8c9b5e:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1ac6_evalF32TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _255836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8cd327:;
			{
				jule::Ptr<_1a8d04e26_Const> _256517_c = static__1a8d05e7c_NewF64(340282346638528860000000000000000000000.0);;
				(*(_256517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cb6c6_primF32, ._field_Model=jule::Any(_256517_c, &__jule_any_type19), ._field_Constant=_256517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bb8cdb85:;
			{
				jule::Ptr<_1a8d04e26_Const> _257317_c = static__1a8d05e7c_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_257317_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cb6c6_primF32, ._field_Model=jule::Any(_257317_c, &__jule_any_type19), ._field_Constant=_257317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bb8cdbeb:;
			{
				jule::Ptr<_1a8d04e26_Const> _258117_c = static__1a8d05e7c_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_258117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cb6c6_primF32, ._field_Model=jule::Any(_258117_c, &__jule_any_type19), ._field_Constant=_258117_c});;
			}
		}
		else {
			_case_begin_1bb8cceb4:;
			{
				_1ab2b7e53_pushErr(_self_, _255836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_255836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8cce5e:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d1e17_evalF64TypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab182e72_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bb8d366d:;
			{
				jule::Ptr<_1a8d04e26_Const> _260117_c = static__1a8d05e7c_NewF64(jule::MAX_F64);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cb990_primF64, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bb8d3ecb:;
			{
				jule::Ptr<_1a8d04e26_Const> _260917_c = static__1a8d05e7c_NewF64(jule::MIN_F64);;
				(*(_260917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cb990_primF64, ._field_Model=jule::Any(_260917_c, &__jule_any_type19), ._field_Constant=_260917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bb8d4042:;
			{
				jule::Ptr<_1a8d04e26_Const> _261717_c = static__1a8d05e7c_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_261717_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3cb990_primF64, ._field_Model=jule::Any(_261717_c, &__jule_any_type19), ._field_Constant=_261717_c});;
			}
		}
		else {
			_case_begin_1bb8d330a:;
			{
				_1ab2b7e53_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8d32a5:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d2313_evalPrimStatic(_1ab2b7903_Eval* _self_, jule::Str _263033_kind, jule::Ptr<_1ab182e72_Token> _263044_ident) {
	{
		auto &_match_expr{ _263033_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bb8d7a6d:;
			{
				return _1ab2ce81b_evalIntTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bb8d7463:;
			{
				return _1ab2ceb5c_evalUintTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bb8d761c:;
			{
				return _1ab2cee9d_evalI8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bb8d7683:;
			{
				return _1ab2d02de_evalI16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bb8d76e9:;
			{
				return _1ab2d0630_evalI32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bb8d7760:;
			{
				return _1ab2d0971_evalI64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bb8d8354:;
			{
				return _1ab2d0cb2_evalU8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bb8d83ba:;
			{
				return _1ab2d1103_evalU16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bb8d8431:;
			{
				return _1ab2d1444_evalU32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bb8d8497:;
			{
				return _1ab2d1785_evalU64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bb8d850d:;
			{
				return _1ab2d1ac6_evalF32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bb8d8574:;
			{
				return _1ab2d1e17_evalF64TypeStatic(_self_, _263044_ident);;
			}
		}
		else {
			_case_begin_1bb8d35a2:;
			{
				_1ab2b7e53_pushErr(_self_, _263044_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_263033_kind, &__jule_any_type4),jule::Any((*(_263044_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8d354c:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d270e_evalTypeStatic(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data> _266237_d, jule::Ptr<_1ab1a09b7_SubIdentExpr> _266251_si) {
	{
		
		if ((_1ab2e8b76_Prim((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8dca73:;
			{
				return _1ab2d2313_evalPrimStatic(_self_, _1ab2ee440_Str(_1ab2e8b76_Prim((*(_266237_d))._field_Kind.ptr()).ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1ab2e9429_Enum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8dd799:;
			{
				return _1ab2ccb5a_evalEnumStatic(_self_, _1ab2e9429_Enum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1ab2e96b0_TypeEnum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8dd810:;
			{
				return _1ab2cd056_evalTypeEnumStatic(_self_, _1ab2e96b0_TypeEnum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8dd876:;
			{
				return _1ab2cd452_evalStructStatic(_self_, _1ab2ea1e9_Struct((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1bb8dc6bb:;
			{
				_1ab2b7e53_pushErr(_self_, (*(_266251_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_266237_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb8dc622:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1bb8e57a1_comptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab209191_comptimeTypeInfo>* _267857_ct, jule::Ptr<_1ab2b5c0e_Data>* _267877_d, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab2b5c0e_Data> _267913_cd = _1ab210395_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab2b5c0e_Data> _1bb8e9d5a_comptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1ea22b_comptimeStructField>* _267857_ct, jule::Ptr<_1ab2b5c0e_Data>* _267877_d, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab2b5c0e_Data> _267913_cd = _1ab1ebace_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab2b5c0e_Data> _1bb8ee3c0_comptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab201793_comptimeEnumField>* _267857_ct, jule::Ptr<_1ab2b5c0e_Data>* _267877_d, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab2b5c0e_Data> _267913_cd = _1ab20282c_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab2b5c0e_Data> _1bb903979_comptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab204235_comptimeParam>* _267857_ct, jule::Ptr<_1ab2b5c0e_Data>* _267877_d, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab2b5c0e_Data> _267913_cd = _1ab20618d_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab2b5c0e_Data> _1bb908264_comptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab1ed4d7_comptimeStatic>* _267857_ct, jule::Ptr<_1ab2b5c0e_Data>* _267877_d, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab2b5c0e_Data> _267913_cd = _1ab1eee12_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab2b5c0e_Data> _1bb90c7c9_comptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2106a3_comptimeValue>* _267857_ct, jule::Ptr<_1ab2b5c0e_Data>* _267877_d, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab2b5c0e_Data> _267913_cd = _1ab212be4_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_1ab2b5c0e_Data> _1bb911d3e_comptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2145ec_comptimeFile>* _267857_ct, jule::Ptr<_1ab2b5c0e_Data>* _267877_d, jule::Ptr<_1ab1a09b7_SubIdentExpr>* _267888_si) {
	jule::Ptr<_1ab2b5c0e_Data> _267913_cd = _1ab216038_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_1ab2b7e53_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}



inline __jule_tuple_x_1ab2b5c0e_Data__jule_tuple_bool _1ab2d30b1_tryComptimeObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _268646_d, jule::Ptr<_1ab1a09b7_SubIdentExpr> _268660_si) {
	__jule_tuple_x_1ab2b5c0e_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1ab2ec53c_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8e3b01:;
			{
				jule::Ptr<_1ab209191_comptimeTypeInfo> _268917_ct = _1ab2ec53c_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bb8e57a1_comptimeObjSubIdent(_self_, &(_268917_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2eb250_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8e3749:;
			{
				jule::Ptr<_1ab1ea22b_comptimeStructField> _269217_ct = _1ab2eb250_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bb8e9d5a_comptimeObjSubIdent(_self_, &(_269217_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2eb76c_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8e37b0:;
			{
				jule::Ptr<_1ab201793_comptimeEnumField> _269517_ct = _1ab2eb76c_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bb8ee3c0_comptimeObjSubIdent(_self_, &(_269517_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2ebc89_comptimeParam((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8e3826:;
			{
				jule::Ptr<_1ab204235_comptimeParam> _269817_ct = _1ab2ebc89_comptimeParam((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bb903979_comptimeObjSubIdent(_self_, &(_269817_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2eca59_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8e388c:;
			{
				jule::Ptr<_1ab1ed4d7_comptimeStatic> _270117_ct = _1ab2eca59_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bb908264_comptimeObjSubIdent(_self_, &(_270117_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2ecce0_comptimeValue((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8e3e75:;
			{
				jule::Ptr<_1ab2106a3_comptimeValue> _270417_ct = _1ab2ecce0_comptimeValue((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bb90c7c9_comptimeObjSubIdent(_self_, &(_270417_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ab2ed076_comptimeFile((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8e3edb:;
			{
				jule::Ptr<_1ab2145ec_comptimeFile> _270717_ct = _1ab2ed076_comptimeFile((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1bb911d3e_comptimeObjSubIdent(_self_, &(_270717_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb8e36d3:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bb8e3639:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d34ac_evalObjSubIdent(_1ab2b7903_Eval* _self_, jule::Ptr<_1ab2b5c0e_Data> _271438_d, jule::Ptr<_1ab1a09b7_SubIdentExpr> _271452_si) {
	if (_1ab1858d1_IsIgnoreIdent((*((*(_271452_si))._field_Ident))._field_Kind)) {
		_1ab2b7e53_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1ab2b5c0e_Data> _272117_compData;;
		jule::Bool _272127_ok = false;;
		({
			__jule_tuple_x_1ab2b5c0e_Data__jule_tuple_bool __jule_assign_result = _1ab2d30b1_tryComptimeObjSubIdent(_self_, &(_271438_d), _271452_si);
			_272117_compData = __jule_assign_result.__jule_result_arg0;
			_272127_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_272127_ok) {
			return _272117_compData;;
		};
	};
	jule::Ptr<_1ab2e6525_TypeKind> _272713_kind = (*(_271438_d))._field_Kind;;
	{
		
		if ((_1ab2e9193_Ptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb917130:;
			{
				jule::Ptr<_1ab3063e2_Ptr> _273013_ptr = _1ab2e9193_Ptr((*(_271438_d))._field_Kind.ptr());;
				if (_1ab306e2b_IsUnsafe(_273013_ptr.ptr())) {
					goto _match_end_1bb9170b9;
				};
				if ((!(_1ab2b8948_isUnsafe(_self_)))) {
					_1ab2b7e53_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_272713_kind=(*(_1ab2e9193_Ptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_1ab2e3841_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		else if ((_1ab2e8e0c_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb9171a7:;
			{
				_272713_kind=(*(_1ab2e8e0c_Sptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_1ab2e3841_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		_match_end_1bb9170b9:;
	};
	{
		
		if ((_1ab2ea480_Trait((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb91a485:;
			{
				return _1ab2cd908_evalTraitSubIdent(_self_, _271438_d, _1ab2ea480_Trait((*(_271438_d))._field_Kind.ptr()), (*(_271452_si))._field_Ident);;
			}
		}
		else if ((_1ab2ea1e9_Struct(_272713_kind.ptr()) != nullptr)) {
			_case_begin_1bb91a50c:;
			{
				jule::Ptr<_1ab1bc1ed_StructIns> _274813_s = _1ab2ea1e9_Struct(_272713_kind.ptr());;
				if (_1ab2e0d38_isInstancedStruct(_274813_s)) {
					jule::Bool _275021_usedReferenceElem = (_1ab2e8e0c_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr);;
					return _1ab2ce4ca_evalStructSubIdent(_self_, _271438_d, _1ab2ea1e9_Struct(_272713_kind.ptr()), _271452_si, _275021_usedReferenceElem);;
				};
			}
		}
		_match_end_1bb91a430:;
	};
	_1ab2b7e53_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_271438_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d37ed_evalSubIdent(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a09b7_SubIdentExpr> _275836_si) {
	jule::Ptr<_1ab2e6525_TypeKind> _275913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275913_prefix;
	});;
	jule::Ptr<_1ab2b5c0e_Data> _276213_d = _1ab2d4d4e_evalExprKind(_self_, (*((*(_275836_si))._field_Expr))._field_Kind);;
	if ((_276213_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_276213_d))._field_Decl) {
		return _1ab2d270e_evalTypeStatic(_self_.ptr(), _276213_d, _275836_si);;
	};
	return _1ab2d34ac_evalObjSubIdent(_self_.ptr(), _276213_d, _275836_si);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d3b3e_evalTuple(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19d575_TupleExpr> _277233_tup) {
	jule::Ptr<_1ab3041e2_Tuple> _277313_tupT = jule::new_ptr<_1ab3041e2_Tuple>();;
	(*(_277313_tupT))._field_Types=jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>::alloc(0LL, (*(_277233_tup))._field_Expr.len());
	jule::Ptr<_1ab1c6d95_TupleExprModel> _277613_model = jule::new_ptr<_1ab1c6d95_TupleExprModel>(_1ab1c6d95_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1ab2b5c0e_Data>>::alloc(0LL, (*(_277233_tup))._field_Expr.len())});;
	jule::Bool _278013_ok = true;;
	{
		auto expr = &((*(_277233_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb925050:;
		if (it != expr_end) {
			jule::Ptr<_1ab19c8a4_Expr> _278121_expr = *it;
			{
				jule::Ptr<_1ab2b5c0e_Data> _278217_d = _1ab2d5b63_evalExpr(_self_, _278121_expr);;
				if ((_278217_d == nullptr)) {
					_278013_ok=false;
					goto _iter_next_1bb925050;
				};
				{ jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> &__jule_push_dest = (*(_277313_tupT))._field_Types; __jule_push_dest.push((*(_278217_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = (*(_277613_model))._field_Datas; __jule_push_dest.push(_278217_d); };
			}
			_iter_next_1bb925050:;
			++it;
			goto _iter_begin_1bb925050;
		}
		_iter_end_1bb925050:;
	};
	if ((!(_278013_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_277313_tupT, 23)}), ._field_Model=jule::Any(_277613_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d403a_evalMap(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab304c92_Map> _280131_m, jule::Ptr<_1ab1a2da4_BraceLit> _280144_lit) {
	jule::Ptr<_1ab1c4c61_MapExprModel> _280213_model = jule::new_ptr<_1ab1c4c61_MapExprModel>(_1ab1c4c61_MapExprModel{._field_KeyKind=(*(_280131_m))._field_Key, ._field_ValKind=(*(_280131_m))._field_Val, });;
	{
		auto expr = &((*(_280144_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb928ce0:;
		if (it != expr_end) {
			jule::Ptr<_1ab19c8a4_Expr> _280721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_280721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1bb929d79:;
						{
							goto _match_end_1bb92997d;
						}
					}
					else {
						_case_begin_1bb9299d3:;
						{
							_1ab2b7e53_pushErr(_self_.ptr(), (*(_280144_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1bb92997d:;
				};
				jule::Ptr<_1ab1a36ce_KeyValPair> _281717_pair = (*(_280721_expr))._field_Kind.cast_ptr<_1ab1a36ce_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1ab2b5c0e_Data> _281917_key = _1ab2d5b63_evalExpr(_self_, (*(_281717_pair))._field_Key);;
				if ((_281917_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1ab2b5c0e_Data> _282417_val = _1ab2d5b63_evalExpr(_self_, (*(_281717_pair))._field_Val);;
				if ((_282417_val == nullptr)) {
					return nullptr;;
				};
				_1ab26d5e0_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Key), &(_281917_key), (*(_281717_pair))._field_Colon);
				_1ab26d5e0_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Val), &(_282417_val), (*(_281717_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1ab1c47aa_KeyValPairExprModel>> &__jule_push_dest = (*(_280213_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1ab1c47aa_KeyValPairExprModel>(_1ab1c47aa_KeyValPairExprModel{._field_Key=(*(_281917_key))._field_Model, ._field_Val=(*(_282417_val))._field_Model})); };
			}
			_iter_next_1bb928ce0:;
			++it;
			goto _iter_begin_1bb928ce0;
		}
		_iter_end_1bb928ce0:;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_280131_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_280213_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d437b_evalBraceLit(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a2da4_BraceLit> _284536_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1bb931215:;
			{
				_1ab2b7e53_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab2ea716_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bb93128c:;
			{
				return _1ab2d403a_evalMap(_self_, _1ab2ea716_Map((*(_self_))._field_prefix.ptr()), _284536_lit);;
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bb930885:;
			{
				return _1ab2ca73a_evalStructLitExplicit(_self_, _1ab2ea1e9_Struct((*(_self_))._field_prefix.ptr()), (*(_284536_lit))._field_Exprs, (*(_284536_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1bb9304cd:;
			{
				_1ab2b7e53_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bb929472:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d46bc_evalAnonFunc(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1aa230_FnDecl> _286036_decl) {
	_1ab3083d3_typeChecker _286113_tc = _1ab3083d3_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1ab1d2312_FnIns> _286613_ins = _1ab3100aa_buildFunc(&_286113_tc, _286036_decl);;
	if ((_286613_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb9364c3:;
			{
				jule::Ptr<_1ab2285bc_scopeChecker> _287217_sc = (*(_self_))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0);;
				jule::Ptr<_1ab2285bc_scopeChecker> _287317_scc = _1ab23a05c_newChildChecker(_287217_sc);;
				(*(_287317_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab227126_scopeLabel>>>(nullptr);
				(*(_287317_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab2276a9_scopeGoto>>>(nullptr);
				(*(_287317_scc))._field_owner=nullptr;
				(*(_287317_scc))._field_childIndex=0LL;
				(*(_287317_scc))._field_it=0LLU;
				(*(_287317_scc))._field_cse=0LLU;
				(*(_287317_scc))._field_owner=_286613_ins;
				_1ab27ebc8_checkFnInsSc((*(_self_))._field_s.ptr(), &(_286613_ins), &(_287317_scc));
			}
		}
		else {
			_case_begin_1bb93614e:;
			{
				_1ab2802e4_checkFnIns((*(_self_))._field_s, &(_286613_ins));
			}
		}
		_match_end_1bb936050:;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_286613_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1ab1c43d1_AnonFnExprModel>(_1ab1c43d1_AnonFnExprModel{._field_Func=_286613_ins, ._field_Global=_1ab2b8bce_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d4a0d_evalBinary(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab1a0e6d_BinaryExpr> _289534_op) {
	_1ab2d80b6_binaryEval _289613_bs = static__1ab2d869e_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1ab2ee0ee_Prim> _289913_prim = _1ab2e8b76_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289913_prim == nullptr) || (!(_1a8d0482c_IsNum(_1ab2ee440_Str(_289913_prim.ptr())))))) {
			jule::Ptr<_1ab2e6525_TypeKind> _290121_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_290121_prefix;
			});;
			return _1ab2de144_eval(&_289613_bs, &(_289534_op));;
		};
	};
	return _1ab2de144_eval(&_289613_bs, &(_289534_op));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d4d4e_evalExprKind(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Any _291036_kind) {
	{
		auto &_match_expr{ _291036_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bb93e71d:;
			{
				jule::Ptr<_1ab19cba1_RangeExpr> _291317_e = _291036_kind.cast_ptr<_1ab19cba1_RangeExpr>(&__jule_any_type100);;
				return _1ab2d4d4e_evalExprKind(_self_, (*((*(_291317_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bb93e3aa:;
			{
				return _1ab2ba483_evalLit(_self_.ptr(), _291036_kind.cast_ptr<_1ab19d94e_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bb93e94e:;
			{
				return _1ab2c01be_evalIdent(_self_.ptr(), _291036_kind.cast_ptr<_1ab19e2ce_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bb93e9c6:;
			{
				return _1ab2c0510_evalUnary(_self_, _291036_kind.cast_ptr<_1ab19e961_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bb93ea4d:;
			{
				return _1ab2c0851_evalVariadic(_self_, _291036_kind.cast_ptr<_1ab19ed3a_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bb93eac5:;
			{
				return _1ab2c0b92_evalUnsafe(_self_, _291036_kind.cast_ptr<_1ab19dd28_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bb93eba2:;
			{
				return _1ab2c17ca_evalSliceExpr(_self_, _291036_kind.cast_ptr<_1ab1a3dc7_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bb93ec29:;
			{
				return _1ab2c4e71_evalIndexing(_self_, _291036_kind.cast_ptr<_1ab1a4867_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bb93eca1:;
			{
				return _1ab2c62a2_evalSlicing(_self_, _291036_kind.cast_ptr<_1ab1a4ec7_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1bb93ed28:;
			{
				return _1ab2c9e43_evalCast(_self_, _291036_kind.cast_ptr<_1ab1a0214_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bb93eda0:;
			{
				return _1ab2ca284_evalNsSelection(_self_.ptr(), _291036_kind.cast_ptr<_1ab1a05dd_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1bb93ee27:;
			{
				return _1ab2caa7b_evalStructLit(_self_, _291036_kind.cast_ptr<_1ab1a28ed_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bb93ee9e:;
			{
				return _1ab2cb153_evalType(_self_.ptr(), _291036_kind.cast_ptr<_1ab198570_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bb940026:;
			{
				return _1ab2cc75e_evalFnCall(_self_, _291036_kind.cast_ptr<_1ab1a15cd_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bb94009d:;
			{
				return _1ab2d37ed_evalSubIdent(_self_, _291036_kind.cast_ptr<_1ab1a09b7_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bb940125:;
			{
				return _1ab2d3b3e_evalTuple(_self_, _291036_kind.cast_ptr<_1ab19d575_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1bb94019c:;
			{
				return _1ab2d437b_evalBraceLit(_self_, _291036_kind.cast_ptr<_1ab1a2da4_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bb940224:;
			{
				return _1ab2d46bc_evalAnonFunc(_self_, _291036_kind.cast_ptr<_1ab1aa230_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1bb94029b:;
			{
				return _1ab2d4a0d_evalBinary(_self_, _291036_kind.cast_ptr<_1ab1a0e6d_BinaryExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1bb93e542:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb93e4dc:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d5190_eval1(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19c8a4_Expr> _295829_expr) {
	jule::Ptr<_1ab2b5c0e_Data> _295913_d = _1ab2d4d4e_evalExprKind(_self_, (*(_295829_expr))._field_Kind);;
	if (((_295913_d == nullptr) || ((*(_295913_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ab2e9e63_Fn((*(_295913_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb94b30c:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _296617_f = _1ab2e9e63_Fn((*(_295913_d))._field_Kind.ptr());;
				if (_1ab1d3797_IsBuiltin(_296617_f.ptr())) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1bb94a927;
				};
				if (((*(_296617_f))._field_Generics.len() != (*((*(_296617_f))._field_Decl))._field_Generics.len())) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_296617_f))._field_Decl))._field_Statically)) && _1ab1ceb17_IsMethod((*(_296617_f))._field_Decl.ptr()))) {
					_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1bb94a927:;
	};
	return _295913_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d54d1_eval(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19c8a4_Expr> _298528_expr) {
	jule::Ptr<_1ab2b5c0e_Data> _298613_d = _1ab2d5190_eval1(_self_, _298528_expr);;
	if ((_298613_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1ab2eac33_comptime((*(_298613_d))._field_Kind.ptr()))) {
		_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), (*(_298528_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _298613_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d5822_evalExpr1(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19c8a4_Expr> _300033_expr) {
	jule::Ptr<_1ab2b5c0e_Data> _300113_d = _1ab2d5190_eval1(_self_, _300033_expr);;
	{
		
		if ((_300113_d == nullptr)) {
			_case_begin_1bb95429e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300113_d))._field_Decl) {
			_case_begin_1bb954326:;
			{
				_1ab2b7e53_pushErr(_self_.ptr(), (*(_300033_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bb9541d3:;
			{
				return _300113_d;;
			}
		}
		_match_end_1bb95416c:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d5b63_evalExpr(jule::Ptr<_1ab2b7903_Eval> _self_, jule::Ptr<_1ab19c8a4_Expr> _301632_expr) {
	jule::Ptr<_1ab2b5c0e_Data> _301713_d = _1ab2d54d1_eval(_self_, _301632_expr);;
	{
		
		if ((_301713_d == nullptr)) {
			_case_begin_1bb9561c4:;
			{
				return nullptr;;
			}
		}
		else if ((*(_301713_d))._field_Decl) {
			_case_begin_1bb95624b:;
			{
				_1ab2b7e53_pushErr(_self_.ptr(), (*(_301632_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bb956108:;
			{
				return _301713_d;;
			}
		}
		_match_end_1bb956092:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2b7903_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1ab2d612a_unaryEval static__1ab2d656a_new(jule::Ptr<_1ab2b7903_Eval> _303723_e) {
	return _1ab2d612a_unaryEval{._field_e=_303723_e, };;
}



inline void _1ab2d6768_minus(_1ab2d612a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bb957d85:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb957a55:;
			{
				if ((!(_1a8d0482c_IsNum(_1ab2e68dd_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab2ea1e9_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb957abb:;
			{
				if (((*(_1ab2ea1e9_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bb9579de:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bb956a98:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab2b65d3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a8d09931_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb95c5b5:;
				{
					_1a8d08963_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_1a8d07335_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a8d08de7_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb95c63c:;
				{
					_1a8d07d91_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1a8d067eb_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a8d0917d_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb95c230:;
				{
					_1a8d07d91_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1a8d075bb_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bb95c1b9:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3075:17"));;
				}
			}
			_match_end_1bb95c10e:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c1a71_UnaryExprModel>(_1ab1c1a71_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab2d6966_plus(_1ab2d612a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bb962d6d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb962a3d:;
			{
				if ((!(_1a8d0482c_IsNum(_1ab2e68dd_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab2ea1e9_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb962aa4:;
			{
				if (((*(_1ab2ea1e9_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bb9629c7:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bb96290b:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab2b65d3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a8d09931_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb96759d:;
				{
					_1a8d08963_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_1a8d07335_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a8d08de7_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb967625:;
				{
					_1a8d07d91_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1a8d067eb_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a8d0917d_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb967218:;
				{
					_1a8d07d91_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1a8d075bb_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bb9671a2:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3120:17"));;
				}
			}
			_match_end_1bb9670e7:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c1a71_UnaryExprModel>(_1ab1c1a71_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab2d6b64_caret(_1ab2d612a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bb96cd34:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb96ca04:;
			{
				if ((!(_1a8d04222_IsInt(_1ab2e68dd_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ab2ea1e9_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb96ca6a:;
			{
				if (((*(_1ab2ea1e9_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bb96c98d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bb96c8c2:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab2b65d3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a8d08de7_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb972553:;
				{
					_1a8d07d91_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_1a8d067eb_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1a8d0917d_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb9725ca:;
				{
					_1a8d08149_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_1a8d06a82_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1bb972168:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3163:17"));;
				}
			}
			_match_end_1bb9720ad:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c1a71_UnaryExprModel>(_1ab1c1a71_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab2d6d62_excl(_1ab2d612a_unaryEval* _self_) {
	jule::Ptr<_1ab2ee0ee_Prim> _31779_t = _1ab2e8b76_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_31779_t == nullptr) || (!(_1ab302300_IsBool(_31779_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1ab2b65d3_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a8d09414_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1bb9788cd:;
				{
					_1a8d08402_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_1a8d06d18_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1bb978504:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3191:17"));;
				}
			}
			_match_end_1bb978438:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c1a71_UnaryExprModel>(_1ab1c1a71_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ab2d7060_star(_1ab2d612a_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c1a71_UnaryExprModel>(_1ab1c1a71_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1ab2e9193_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb97c1d9:;
			{
				if ((!(_1ab2b8948_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ab3063e2_Ptr> _321617_t = _1ab2e9193_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1ab306e2b_IsUnsafe(_321617_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_321617_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1ab2e8e0c_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb97bdba:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1ab2e8e0c_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1bb97bd54:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bb97addb:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1ab2d725d_amper(_1ab2d612a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bb9853bd:;
			{
				jule::Ptr<_1ab1c2445_StructLitExprModel> _323717_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1ab1c2445_StructLitExprModel>(&__jule_any_type94);;
				_1ab2dee9c_makeStructLitAlloc(&((*(_self_))._field_d), &(_323717_lit));
			}
		}
		else {
			_case_begin_1bb9828c6:;
			{
				{
					
					if (_1ab31240e_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1bb982475:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab3063e2_Ptr>(_1ab3063e2_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c1a71_UnaryExprModel>(_1ab1c1a71_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1bb982e04:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1bb982d38:;
				};
			}
		}
		_match_end_1bb982871:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1ab2d745b_typeDecl(_1ab2d612a_unaryEval* _self_) {
	_1ab3083d3_typeChecker _326113_tc = _1ab3083d3_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bb986d92:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab30d7c3_buildPtrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bb98a307:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab30d141_buildSptrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_1bb988635:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bb9885d0:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1ab2d7659_evalData(_1ab2d612a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bb98dd44:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _328617_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1ab2d54d1_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_328617_prefix;
			}
		}
		else {
			_case_begin_1bb98d959:;
			{
				(*(_self_))._field_d=_1ab2d54d1_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1bb98d8d2:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d799a_eval(_1ab2d612a_unaryEval* _self_, jule::Ptr<_1ab19e961_UnaryExpr> _329527_u) {
	(*(_self_))._field_u=_329527_u;
	_1ab2d7659_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1ab2d745b_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _33069_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bb99859b:;
			{
				_1ab2d6768_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bb99829e:;
			{
				_1ab2d6966_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bb998315:;
			{
				_1ab2d6b64_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1bb99837b:;
			{
				_1ab2d6d62_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bb9983e2:;
			{
				_1ab2d7060_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bb9988ed:;
			{
				_1ab2d725d_amper(_self_);
			}
		}
		else {
			_case_begin_1bb998238:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1bb9981d3:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bb998964:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str(_33069_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1ab2b65d3_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1bb99a1c4:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1bb99a16e:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2d612a_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1ab2d80b6_binaryEval static__1ab2d869e_newPlain(jule::Ptr<_1ab2b7903_Eval> _334328_e) {
	return _1ab2d80b6_binaryEval{._field_e=_334328_e, };;
}



inline _1ab2d80b6_binaryEval static__1ab2d89e0_new(jule::Ptr<_1ab2b7903_Eval> _334923_e, jule::Ptr<_1ab182e72_Token> _334937_op) {
	return _1ab2d80b6_binaryEval{._field_e=_334923_e, ._field_op=_334937_op};;
}



inline jule::Bool _1ab2d8c76_checkTypeCompatibility(_1ab2d80b6_binaryEval* _self_) {
	return _1ab26da96_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1ab2d900c_checkStructCommonOperatorCompatibility(_1ab2d80b6_binaryEval* _self_) {
	jule::Ptr<_1ab1d2312_FnIns> _336317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1bb9a0262:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bb9a1cad:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bb9a1d24:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bb9a0790:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bb9a0806:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bb9a086c:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bb9a08d3:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bb9a1e12:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1bb9a1e78:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bb9a1ede:;
			{
				_336317_overload=(*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1bb9a0729:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1bb9a06c4:;
	};
	if ((_336317_overload == nullptr)) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ab1d1366_ParamIns> _339513_p = (*(_336317_overload))._field_Params[1LL];;
	return _1ab26d5e0_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_339513_p))._field_Decl))._field_Reference, &((*(_339513_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9293_evalComptimeTypeInfo(_1ab2d80b6_binaryEval* _self_) {
	jule::Ptr<_1ab209191_comptimeTypeInfo> _340013_r = _1ab2ec53c_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_340013_r == nullptr)) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab209191_comptimeTypeInfo> _340513_l = _1ab2ec53c_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bb9aeded:;
			{
				jule::Ptr<_1a8d04e26_Const> _340817_constant = static__1a8d058e9_NewBool(_1ab2e6c2e_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base));;
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_340817_constant, &__jule_any_type19), ._field_Constant=_340817_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9b17b2:;
			{
				jule::Ptr<_1a8d04e26_Const> _341517_constant = static__1a8d058e9_NewBool((!(_1ab2e6c2e_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base))));;
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, ._field_Model=jule::Any(_341517_constant, &__jule_any_type19), ._field_Constant=_341517_constant});;
			}
		}
		else {
			_case_begin_1bb9b0250:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9b01ea:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9529_evalNil(_1ab2d80b6_binaryEval* _self_) {
	if ((!(_1ab2e83c3_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9b43db:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb9b5a19:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9b59b4:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d97b0_evalEnum(_1ab2d80b6_binaryEval* _self_) {
	jule::Ptr<_1ab1e4de6_Enum> _344613_enm = _1ab2e9429_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9b7ea0:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _345017_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1ab2e9429_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_345017_rkind=(*((*(_1ab2e9429_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1ab26da96_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_344613_enm))._field_Kind))._field_Kind), &(_345017_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		_match_end_1bb9b7e4a:;
	};
	if (((_1ab2e9429_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_344613_enm != _1ab2e9429_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bb9bd7ad:;
			{
				if ((!(_1a8d0482c_IsNum(_1ab2e68dd_Str((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bb9be649:;
			{
				jule::Ptr<_1ab1e4379_EnumItem> _348013_first = (*(_344613_enm))._field_Items[0LL];;
				{
					
					if (_1a8d08de7_IsI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bb9c299e:;
						{
							if ((_1a8d067eb_ReadI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1bb9c6bc3;
							};
							goto _julec_label_1bb9c52a9;
						}
					}
					else if (_1a8d0917d_IsU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bb9c2a26:;
						{
							if ((_1a8d06a82_ReadU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1bb9c6bc3;
							};
							goto _julec_label_1bb9c52a9;
						}
					}
					else {
						_case_begin_1bb9c25b4:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3493:17"));;
						}
					}
					_match_end_1bb9c254d:;
				};
				_julec_label_1bb9c52a9:;
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1ab2b82b6_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1bb9c6bc3:;
				goto _case_begin_1bb9be6b0;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bb9be6b0:;
			{
				if (((_1ab2e8b76_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a8d04222_IsInt(_1ab2ee440_Str(_1ab2e8b76_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bb9bd44a:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9bd3e5:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9a46_evalTypeEnum(_1ab2d80b6_binaryEval* _self_) {
	jule::Ptr<_1ab1e6601_TypeEnum> _351313_enm = _1ab2e96b0_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9cc426:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb9cb799:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab1e6942_Str(_351313_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9cc05d:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2d9ccc_evalSptr(_1ab2d80b6_binaryEval* _self_) {
	if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9cd59d:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb9ce329:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9ce2c4:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da063_evalPtr(_1ab2d80b6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bb9d1705:;
			{
				if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bb9d2926:;
			{
				if ((_1ab2e9193_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1ab306e2b_IsUnsafe(_1ab2e9193_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1ab2e11ac_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bb9d0c76:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9d0bee:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da2e9_evalArr(_1ab2d80b6_binaryEval* _self_) {
	if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9caa62:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb9d882d:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9d87c8:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da580_evalSlc(_1ab2d80b6_binaryEval* _self_) {
	if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9da06b:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb9dace7:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb9dac92:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2da816_evalStruct(_1ab2d80b6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bb9dcdc6:;
			{
				if (((*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bb9dce3c:;
			{
				if (((*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1bb9dcea3:;
			{
				if (((*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bb9dd02a:;
			{
				if (((*(_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb9dd0a2:;
			{
				if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		_match_end_1bb9dc6bc:;
	};
	if ((!(_1ab2d900c_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2daa9c_evalTrait(_1ab2d80b6_binaryEval* _self_) {
	if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb671087:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb6718b2:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb67185c:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dad33_evalAny(_1ab2d80b6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb673452:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb67330e:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb673287:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2db0b9_evalBool(_1ab2d80b6_binaryEval* _self_) {
	if ((!(_1ab2d8c76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bb674bd4:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bb675960:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb67590a:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2db350_evalStr(_1ab2d80b6_binaryEval* _self_) {
	jule::Str _371213_rk = _1ab2e68dd_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_371213_rk.equal("str", 3))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_371213_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bb6796cd:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bb67a4ae:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		else {
			_case_begin_1bb679117:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb679315:;
	};
}



inline void _1ab2db54d_setTypeToGreater(_1ab2d80b6_binaryEval* _self_) {
	jule::Ptr<_1ab2ee0ee_Prim> _37379_lp = _1ab2e8b76_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1ab2ee0ee_Prim> _37389_rp = _1ab2e8b76_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1ab2b65d3_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1ab2b65d3_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1bb67ec00;
	};
	if (_1ab2b65d3_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37379_lp))._field_Kind;
		return;;
	};
	_julec_label_1bb67ec00:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1ab2b65d3_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_1a8d02ae4_IsGreater((*(_37389_rp))._field_Kind, (*(_37379_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1ab2b65d3_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
	};
}



inline void _1ab2db806_checkModData(_1ab2d80b6_binaryEval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _377036_d) {
	if ((!(_1ab2b65d3_IsConst((*(_377036_d)).ptr())))) {
		if (((_1ab2e8b76_Prim((*((*(_377036_d))))._field_Kind.ptr()) == nullptr) || (!(_1a8d04222_IsInt((*(_1ab2e8b76_Prim((*((*(_377036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ab29bac4_sigAssignable(jule::Str::lit("i64", 3), _377036_d)) {
			_case_begin_1bb687961:;
			{
				_1a8d07d91_SetI64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else if (_1ab29be8c_unsigAssignable(jule::Str::lit("u64", 3), _377036_d)) {
			_case_begin_1bb6879d8:;
			{
				_1a8d08149_SetU64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1bb6875dc:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb687587:;
	};
}



inline void _1ab2dba04_mod(_1ab2d80b6_binaryEval* _self_) {
	_1ab2db806_checkModData(_self_, &((*(_self_))._field_l));
	_1ab2db806_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1ab2dbe00_numbersAreCompatibile(_1ab2d80b6_binaryEval* _self_, jule::Str* _379237_lk, jule::Str* _379247_rk) {
	if ((!(_1a8d0482c_IsNum((*(_379247_rk)))))) {
		return false;;
	};
	if ((_1ab2b65d3_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_379237_lk)).equal("f32", 3)) {
		if ((_1ab2b65d3_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f32", 3);;
	};
	if ((*(_379237_lk)).equal("f64", 3)) {
		if ((_1ab2b65d3_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f64", 3);;
	};
	if ((_1ab2b65d3_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_379237_lk)) == (*(_379247_rk)));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dc186_evalFloat(_1ab2d80b6_binaryEval* _self_) {
	jule::Str _38189_lk = (*(_1ab2e8b76_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38199_rk = (*(_1ab2e8b76_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1ab2dbe00_numbersAreCompatibile(_self_, &(_38189_lk), &(_38199_rk))))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bb69220c:;
			{
				if (((!(_1ab2b65d3_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ab29c311_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1ab2b65d3_IsConst((*(_self_))._field_r.ptr()))) || (!(_1ab29c311_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1a8d07d91_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_1a8d08149_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1ab2e095e_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1bb6921a7:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bb6927a1:;
			{
				_1ab2db54d_setTypeToGreater(_self_);
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		_match_end_1bb69274b:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bb69144d:;
			{
				_1ab2db54d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bb699c70:;
			{
				if ((!(_1a8d04222_IsInt(_38199_rk)))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1ab2dba04_mod(_self_);
				_1ab2db54d_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1bb6985ba:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb6990b0:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dc41c_evalInt(_1ab2d80b6_binaryEval* _self_) {
	jule::Str _38829_lk = (*(_1ab2e8b76_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38839_rk = (*(_1ab2e8b76_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bb69d4c1:;
			{
				if (((!(_1a8d04222_IsInt(_38829_lk))) || (!(_1a8d04222_IsInt(_38839_rk))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1ab2e095e_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1bb69d845:;
	};
	if ((!(_1ab2dbe00_numbersAreCompatibile(_self_, &(_38829_lk), &(_38839_rk))))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bb6a1ae0:;
			{
				return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c90b9_primBool, });;
			}
		}
		_match_end_1bb6a1a8a:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bb69d988:;
			{
				_1ab2db54d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bb6a3c68:;
			{
				_1ab2dba04_mod(_self_);
				_1ab2db54d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bb6a2cde:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb6a2c89:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dc6a3_evalPrim(_1ab2d80b6_binaryEval* _self_) {
	jule::Ptr<_1ab2ee0ee_Prim> _39399_prim = _1ab2e8b76_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1ab302300_IsBool(_39399_prim.ptr())) {
			_case_begin_1bb6a61cc:;
			{
				return _1ab2db0b9_evalBool(_self_);;
			}
		}
		else if (_1ab302586_IsStr(_39399_prim.ptr())) {
			_case_begin_1bb6a6254:;
			{
				return _1ab2db350_evalStr(_self_);;
			}
		}
		_match_end_1bb6a6133:;
	};
	if ((_1ab2e8b76_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab2ee440_Str(_39399_prim.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1a8d04563_IsFloat((*(_39399_prim))._field_Kind)) {
			_case_begin_1bb6a8ad6:;
			{
				return _1ab2dc186_evalFloat(_self_);;
			}
		}
		else if (_1a8d04222_IsInt((*(_39399_prim))._field_Kind)) {
			_case_begin_1bb6a8b5d:;
			{
				return _1ab2dc41c_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1bb6a8a3c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb6a630e:;
	};
}



inline void _1ab2dc8a1_checkSpecialCases(_1ab2d80b6_binaryEval* _self_) {
	if (((!(_1ab2e7b20_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1ab2e7603_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1ab2e7b20_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1ab2e7603_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2dcb37_evalOp(_1ab2d80b6_binaryEval* _self_) {
	_1ab2dc8a1_checkSpecialCases(_self_);
	{
		
		if (_1ab2e7889_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1bb6ae1c4:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1ab2ec53c_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6ada97:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6ae36c;
			}
		}
		else if ((_1ab2ec53c_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6ae36c:;
			{
				return _1ab2d9293_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1ab2e8b76_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1ab30281c_IsAny(_1ab2e8b76_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bb6b058d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6b0604;
			}
		}
		else if (_1ab2e7603_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1bb6b0604:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6b06e2;
			}
		}
		else if (_1ab2e7603_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1bb6b06e2:;
			{
				return _1ab2d9529_evalNil(_self_);;
			}
		}
		else if (((_1ab2e8b76_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1ab30281c_IsAny(_1ab2e8b76_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bb6b0758:;
			{
				return _1ab2dad33_evalAny(_self_);;
			}
		}
		else if ((_1ab2e96b0_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b07be:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6b0835;
			}
		}
		else if ((_1ab2e96b0_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0835:;
			{
				return _1ab2d9a46_evalTypeEnum(_self_);;
			}
		}
		else if ((_1ab2e9429_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b089b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6b0912;
			}
		}
		else if ((_1ab2e9429_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0912:;
			{
				return _1ab2d97b0_evalEnum(_self_);;
			}
		}
		else if ((_1ab2e8e0c_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0989:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6b0a11;
			}
		}
		else if ((_1ab2e8e0c_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0a11:;
			{
				return _1ab2d9ccc_evalSptr(_self_);;
			}
		}
		else if ((_1ab2e9193_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0a88:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6b0b10;
			}
		}
		else if ((_1ab2e9193_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0b10:;
			{
				return _1ab2da063_evalPtr(_self_);;
			}
		}
		else if ((_1ab2e9946_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0b87:;
			{
				return _1ab2da2e9_evalArr(_self_);;
			}
		}
		else if ((_1ab2e9bcc_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0c0e:;
			{
				return _1ab2da580_evalSlc(_self_);;
			}
		}
		else if ((_1ab2ea480_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0c86:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bb6b0d0d;
			}
		}
		else if ((_1ab2ea480_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0d0d:;
			{
				return _1ab2daa9c_evalTrait(_self_);;
			}
		}
		else if ((_1ab2ea1e9_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0d85:;
			{
				return _1ab2da816_evalStruct(_self_);;
			}
		}
		else if ((_1ab2e8b76_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb6b0e0c:;
			{
				return _1ab2dc6a3_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1bb6adec6:;
			{
				_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bb6ade60:;
	};
}



inline void _1ab2dcde0_evalConst(_1ab2d80b6_binaryEval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _403033_d) {
	{
		
		if (((*(_403033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1bb6c3c77:;
			{
				return;;
			}
		}
		else if ((!(_1ab2b65d3_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ab2b65d3_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1bb6c3eca:;
			{
				(*((*(_403033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1bb6c3b9a:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bb6c6164:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool(_1a8d0a9cb_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bb6c61ca:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool((!(_1a8d0a9cb_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bb6c6241:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool(_1a8d0a68a_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bb6c62a7:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool(_1a8d0a349_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bb6c631d:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool(_1a8d0b49e_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1bb6c6384:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool(_1a8d0ad1c_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bb6c640b:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool(_1a8d0b7e0_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bb6c6483:;
			{
				(*((*(_403033_d))))._field_Constant=static__1a8d058e9_NewBool(_1a8d0b15d_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bb6c650a:;
			{
				_1a8d0bb31_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bb6c6582:;
			{
				_1a8d0be72_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bb6c6609:;
			{
				_1a8d0c2b3_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bb6c6681:;
			{
				jule::Bool _406913_ok = _1a8d0c604_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_406913_ok)) && (_1a8d07ad8_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1ab2ee0ee_Prim> _407417_prim = _1ab2e8b76_Prim((*((*(_403033_d))))._field_Kind.ptr());;
				{
					
					if (_1a8d03b4a_IsSigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_1bbb0e1d4:;
						{
							_1a8d07d91_SetI64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					else if (_1a8d03e58_IsUnsigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_1bbb0e25b:;
						{
							_1a8d08149_SetU64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1bbb0e13a:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bb6c6708:;
			{
				jule::Bool _408213_ok = _1a8d0c945_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_408213_ok)) && (_1a8d07ad8_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1bb6c6780:;
			{
				_1a8d0d0c7_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bb6c6807:;
			{
				_1a8d0cc86_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bb6c687e:;
			{
				_1a8d0d418_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1bb6c6906:;
			{
				_1a8d0d759_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bb6c697d:;
			{
				_1a8d0da9a_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1bb6c5927:;
	};
	(*((*(_403033_d))))._field_Model=jule::Any((*((*(_403033_d))))._field_Constant, &__jule_any_type19);
	_1ab2e2048_applyCastModelByEnum(_403033_d, _1ab2e9429_Enum((*((*(_403033_d))))._field_Kind.ptr()));
}



inline void _1ab2dd198_checkData(_1ab2d80b6_binaryEval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _410733_d) {
	jule::Ptr<_1ab1d2312_FnIns> _41089_f = _1ab2e9e63_Fn((*((*(_410733_d))))._field_Kind.ptr());;
	if ((((_41089_f != nullptr) && ((*(_41089_f))._field_Decl != nullptr)) && _1ab1ceb17_IsMethod((*(_41089_f))._field_Decl.ptr()))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1ab2dd396_checkDatas(_1ab2d80b6_binaryEval* _self_) {
	_1ab2dd198_checkData(_self_, &((*(_self_))._field_l));
	_1ab2dd198_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1ab2dd64e_setModel(_1ab2d80b6_binaryEval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _411932_d) {
	if (_1ab2b65d3_IsConst((*(_411932_d)).ptr())) {
		if (((_1ab2b65d3_IsConst((*(_self_))._field_l.ptr()) && _1ab2b65d3_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1ab2b5c0e_Data> _412813_l;;
	jule::Ptr<_1ab2b5c0e_Data> _412820_r;;
	({
		jule::Ptr<_1ab2b5c0e_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1ab2b5c0e_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_412813_l = ___jule_assign_arg;
		_412820_r = _1___jule_assign_arg;
	});
	if ((!(_1ab2b6924_GoodOperand(_412813_l.ptr(), &(_412820_r))))) {
		std::swap(_412813_l, _412820_r);
	};
	(*((*(_411932_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c1697_BinaryExprModel>(_1ab1c1697_BinaryExprModel{._field_Left=jule::new_ptr<_1ab1c119c_OperandExprModel>(_1ab1c119c_OperandExprModel{._field_Kind=(*(_412813_l))._field_Kind, ._field_Model=(*(_412813_l))._field_Model}), ._field_Right=jule::new_ptr<_1ab1c119c_OperandExprModel>(_1ab1c119c_OperandExprModel{._field_Kind=(*(_412820_r))._field_Kind, ._field_Model=(*(_412820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1ab2dd907_postEval(_1ab2d80b6_binaryEval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _414632_d) {
	(*((*(_414632_d))))._field_Lvalue=false;
	_1ab2dd64e_setModel(_self_, _414632_d);
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2ddd03_solveExplicit(_1ab2d80b6_binaryEval* _self_, jule::Ptr<_1ab2b5c0e_Data>* _415137_l, jule::Ptr<_1ab2b5c0e_Data>* _415152_r) {
	({
		jule::Ptr<_1ab2b5c0e_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_1ab2b5c0e_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ab2dd396_checkDatas(_self_);
	jule::Ptr<_1ab2b5c0e_Data> _415613_d = _1ab2dcb37_evalOp(_self_);;
	({
		jule::Ptr<_1ab2b5c0e_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_1ab2b5c0e_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ab2dcde0_evalConst(_self_, &(_415613_d));
	if ((_415613_d != nullptr)) {
		(*(_415613_d))._field_Mutable=true;
		_1ab2dd907_postEval(_self_, &(_415613_d));
	};
	return _415613_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2de144_eval(_1ab2d80b6_binaryEval* _self_, jule::Ptr<_1ab1a0e6d_BinaryExpr>* _417128_op) {
	if (((*((*((*(_417128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ab2b7e53_pushErr((*(_self_))._field_e.ptr(), (*((*(_417128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1ab2b82b6_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _417813_l = _1ab2d5822_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Left);;
	if (((_417813_l == nullptr) || ((*(_417813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _418313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_417813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_418313_prefix;
	});;
	jule::Ptr<_1ab2b5c0e_Data> _418613_r = _1ab2d5822_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Right);;
	if (((_418613_r == nullptr) || ((*(_418613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_417128_op))))._field_Op;
	jule::Ptr<_1ab2b5c0e_Data> _419313_d = _1ab2ddd03_solveExplicit(_self_, &(_417813_l), &(_418613_r));;
	if ((((_419313_d != nullptr) && (*(_417813_l))._field_IsRune) && (*(_418613_r))._field_IsRune)) {
		(*(_419313_d))._field_IsRune=true;
	};
	return _419313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2d80b6_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2e4b3e_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2e5733_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab2e68dd_Str(_1ab2e6525_TypeKind* _self_) {
	if (_1ab2e7603_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1a7c4c7ed_StrBuilder _7413_kind = static__1a7c4cb1c_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1a7c573c9_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1ab2e736c_Binded(_self_)) {
		_1a7c573c9_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_1a7c573c9_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_1a7c573c9_WriteStr(&_7413_kind, _1ab2e606e_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1ab2e5ac9_Str((*(_self_))._field_Kind));
	};
	return _1a7c57bc1_Str(&_7413_kind);;
}



inline jule::Bool _1ab2e6c2e_Equal(jule::Ptr<_1ab2e6525_TypeKind> _self_, jule::Ptr<_1ab2e6525_TypeKind> _9021_other) {
	if (_1ab2e7603_IsNil(_self_.ptr())) {
		return _1ab2e7603_IsNil(_9021_other.ptr());;
	};
	if (_1ab2e736c_Binded(_self_.ptr())) {
		return (_1ab2e736c_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1ab2e606e_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1ab2e5e1a_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1ab2e736c_Binded(_1ab2e6525_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1ab2e7603_IsNil(_1ab2e6525_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1ab2e7889_Void(_1ab2e6525_TypeKind* _self_) {
	jule::Ptr<_1ab2ee0ee_Prim> _1109_prim = _1ab2e8b76_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1ab2e7b20_Comparable(_1ab2e6525_TypeKind* _self_) {
	{
		_1ab2e6525_TypeKind* _11717__self = _self_;;
		if ((_1ab2ea1e9_Struct(_11717__self) != nullptr)) {
			return (*(_1ab2ea1e9_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1ab2ea716_Map(_11717__self) == nullptr) && (_1ab2e9bcc_Slc(_11717__self) == nullptr)) && (_1ab2e9e63_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1ab2e7da6_Mutable(_1ab2e6525_TypeKind* _self_) {
	{
		_1ab2e6525_TypeKind* _12817__self = _self_;;
		if ((_1ab2ea1e9_Struct(_12817__self) != nullptr)) {
			return (*(_1ab2ea1e9_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1ab2ea480_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1ab2e8b76_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1ab2ee0ee_Prim> _13617_p = _1ab2e8b76_Prim(_12817__self);;
			return _1ab30281c_IsAny(_13617_p.ptr());;
		};
		if ((_1ab2e9946_Arr(_12817__self) != nullptr)) {
			return _1ab2e7da6_Mutable((*(_1ab2e9946_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1ab2e9bcc_Slc(_12817__self) != nullptr) || (_1ab2e9193_Ptr(_12817__self) != nullptr)) || (_1ab2e8e0c_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1ab2e813c_Ordered(_1ab2e6525_TypeKind* _self_) {
	{
		_1ab2e6525_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1ab2ee0ee_Prim> _15213_prim = _1ab2e8b76_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1a8d0482c_IsNum((*(_15213_prim))._field_Kind) || _1ab302586_IsStr(_15213_prim.ptr()));;
		};
		if ((_1ab2e9193_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1ab1bc1ed_StructIns> _15913_s = _1ab2ea1e9_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1ab1e4de6_Enum> _16613_enm = _1ab2e9429_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1a8d0482c_IsNum(_1ab2e68dd_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1ab2e83c3_NilCompatible(_1ab2e6525_TypeKind* _self_) {
	{
		_1ab2e6525_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1ab2ee0ee_Prim> _17913_prim = _1ab2e8b76_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1ab30281c_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1ab2e7603_IsNil(_17717__self) || (_1ab2e9e63_Fn(_17717__self) != nullptr)) || (_1ab2e8e0c_Sptr(_17717__self) != nullptr)) || (_1ab2e9193_Ptr(_17717__self) != nullptr)) || (_1ab2ea480_Trait(_17717__self) != nullptr)) || (_1ab2e9bcc_Slc(_17717__self) != nullptr)) || (_1ab2ea716_Map(_17717__self) != nullptr)) || (_1ab2e96b0_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1ab2e8659_PerformsRC(_1ab2e6525_TypeKind* _self_) {
	{
		_1ab2e6525_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1ab2ee0ee_Prim> _19913_prim = _1ab2e8b76_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1ab30281c_IsAny(_19913_prim.ptr()) || _1ab302586_IsStr(_19913_prim.ptr()));;
		};
		return (((_1ab2e8e0c_Sptr(_19817__self) != nullptr) || (_1ab2e9bcc_Slc(_19817__self) != nullptr)) || (_1ab2ea480_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1ab2e88e0_Variadicable(_1ab2e6525_TypeKind* _self_) {
	{
		_1ab2e6525_TypeKind* _21017__self = _self_;;
		return (_1ab2e9bcc_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1ab2ee0ee_Prim> _1ab2e8b76_Prim(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1bbb5d189:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab2ee0ee_Prim>(20);;
			}
		}
		else {
			_case_begin_1bbb5d662:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb5d60c:;
	};
}



inline jule::Ptr<_1ab302b2a_Sptr> _1ab2e8e0c_Sptr(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1bbb5dc8e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab302b2a_Sptr>(21);;
			}
		}
		else {
			_case_begin_1bbb5e50e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb5e4a9:;
	};
}



inline jule::Ptr<_1ab3063e2_Ptr> _1ab2e9193_Ptr(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1bbb5e597:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab3063e2_Ptr>(26);;
			}
		}
		else {
			_case_begin_1bbb60213:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb601ad:;
	};
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab2e9429_Enum(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bbb6029b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1e4de6_Enum>(3);;
			}
		}
		else {
			_case_begin_1bbb60e17:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb60db2:;
	};
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab2e96b0_TypeEnum(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1bbb60ea0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1e6601_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1bbb61b1b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb61ab6:;
	};
}



inline jule::Ptr<_1ab30591e_Arr> _1ab2e9946_Arr(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1bbb61ba4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab30591e_Arr>(25);;
			}
		}
		else {
			_case_begin_1bbb62820:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb627ba:;
	};
}



inline jule::Ptr<_1ab3035ed_Slc> _1ab2e9bcc_Slc(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1bbb628a8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab3035ed_Slc>(22);;
			}
		}
		else {
			_case_begin_1bbb63524:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb634be:;
	};
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab2e9e63_Fn(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1bbb635ac:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1d2312_FnIns>(1);;
			}
		}
		else {
			_case_begin_1bbb64228:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb641c3:;
	};
}



inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab2ea1e9_Struct(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bbb642b1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1bc1ed_StructIns>(0);;
			}
		}
		else {
			_case_begin_1bbb64e2c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb64dc7:;
	};
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab2ea480_Trait(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1bbb64eb5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1e26da_Trait>(2);;
			}
		}
		else {
			_case_begin_1bbb65b31:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb65acb:;
	};
}



inline jule::Ptr<_1ab304c92_Map> _1ab2ea716_Map(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1bbb65bb9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab304c92_Map>(24);;
			}
		}
		else {
			_case_begin_1bbb66813:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb667ad:;
	};
}



inline jule::Ptr<_1ab3041e2_Tuple> _1ab2ea99c_Tup(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1bbb6689b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab3041e2_Tuple>(23);;
			}
		}
		else {
			_case_begin_1bbb67517:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb674b2:;
	};
}



inline jule::Bool _1ab2eac33_comptime(_1ab2e6525_TypeKind* _self_) {
	return (((((((((((((_1ab2ec2a6_comptimeTypeInfos(_self_) != nullptr) || (_1ab2ec53c_comptimeTypeInfo(_self_) != nullptr)) || (_1ab2eaeb9_comptimeStructFields(_self_) != nullptr)) || (_1ab2eb250_comptimeStructField(_self_) != nullptr)) || (_1ab2eb4d6_comptimeEnumFields(_self_) != nullptr)) || (_1ab2eb76c_comptimeEnumField(_self_) != nullptr)) || (_1ab2ec7c3_comptimeStatics(_self_) != nullptr)) || (_1ab2eca59_comptimeStatic(_self_) != nullptr)) || (_1ab2eba03_comptimeParams(_self_) != nullptr)) || (_1ab2ebc89_comptimeParam(_self_) != nullptr)) || (_1ab2ecce0_comptimeValue(_self_) != nullptr)) || (_1ab2ed30c_comptimeFiles(_self_) != nullptr)) || (_1ab2ed076_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1ab1ebddc_comptimeStructFields> _1ab2eaeb9_comptimeStructFields(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1bbb68183:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1ebddc_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1bbb6bb26:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb6bac1:;
	};
}



inline jule::Ptr<_1ab1ea22b_comptimeStructField> _1ab2eb250_comptimeStructField(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1bbb6c0dd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1ea22b_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1bbb6c4ea:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb6c495:;
	};
}



inline jule::Ptr<_1ab202b3a_comptimeEnumFields> _1ab2eb4d6_comptimeEnumFields(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1bbb6cce2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab202b3a_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1bbb6d1ee:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb6d199:;
	};
}



inline jule::Ptr<_1ab201793_comptimeEnumField> _1ab2eb76c_comptimeEnumField(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1bbb6d9e6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab201793_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1bbb6de03:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb6dd9d:;
	};
}



inline jule::Ptr<_1ab20649b_comptimeParams> _1ab2eba03_comptimeParams(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1bbb6e6ea:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab20649b_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1bbb6eb07:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb6eaa2:;
	};
}



inline jule::Ptr<_1ab204235_comptimeParam> _1ab2ebc89_comptimeParam(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1bbb6eb90:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab204235_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1bbb7080b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb707a6:;
	};
}



inline jule::Ptr<_1ab1e9758_comptimeRange> _1ab2ec020_comptimeRange(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1bbb70894:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1e9758_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1bbb71510:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb714aa:;
	};
}



inline jule::Ptr<_1ab207a96_comptimeTypeInfos> _1ab2ec2a6_comptimeTypeInfos(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1bbb71598:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab207a96_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1bbb721e2:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb7218c:;
	};
}



inline jule::Ptr<_1ab209191_comptimeTypeInfo> _1ab2ec53c_comptimeTypeInfo(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1bbb729d9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab209191_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1bbb72de6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb72d91:;
	};
}



inline jule::Ptr<_1ab200198_comptimeStatics> _1ab2ec7c3_comptimeStatics(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1bbb736cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab200198_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1bbb73aea:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb73a95:;
	};
}



inline jule::Ptr<_1ab1ed4d7_comptimeStatic> _1ab2eca59_comptimeStatic(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1bbb74414:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab1ed4d7_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1bbb74821:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb747bb:;
	};
}



inline jule::Ptr<_1ab2106a3_comptimeValue> _1ab2ecce0_comptimeValue(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1bbb748a9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab2106a3_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1bbb75525:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb754c0:;
	};
}



inline jule::Ptr<_1ab2145ec_comptimeFile> _1ab2ed076_comptimeFile(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1bbb755ad:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab2145ec_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1bbb76207:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb761a2:;
	};
}



inline jule::Ptr<_1ab213002_comptimeFiles> _1ab2ed30c_comptimeFiles(_1ab2e6525_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1bbb76290:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab213002_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1bbb76dd9:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbb76d84:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2e6525_TypeKind _Src) {
	_Stream << _1ab2e68dd_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ab2eda6b_checked(_1ab2ed6e7_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2ed6e7_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab2ee440_Str(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1ab2ee781_Equal(jule::Ptr<_1ab2ee0ee_Prim> _self_, jule::Ptr<_1ab2e6525_TypeKind> _50821_other) {
	jule::Ptr<_1ab2ee0ee_Prim> _5099_prim = _1ab2e8b76_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1ab2eec26_IsConstraint(_1ab2ee0ee_Prim* _self_) {
	return ((((!(_1ab302586_IsStr(_self_))) && (!(_1ab30281c_IsAny(_self_)))) && (!(_1ab302300_IsBool(_self_)))) && (!(_1a8d0482c_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1ab2eeeac_IsI8(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1ab300243_IsI16(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1ab3004c9_IsI32(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1ab300760_IsI64(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1ab3009e6_IsU8(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1ab300c7c_IsU16(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1ab301013_IsU32(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1ab301299_IsU64(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1ab301530_IsF32(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1ab3017b6_IsF64(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1ab301a4c_IsInt(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1ab301cd3_IsUint(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1ab302069_IsUintptr(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1ab302300_IsBool(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1ab302586_IsStr(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1ab30281c_IsAny(_1ab2ee0ee_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab2ee0ee_Prim _Src) {
	_Stream << _1ab2ee440_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab302e9e_Str(_1ab302b2a_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1ab2e68dd_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab3032e0_Equal(jule::Ptr<_1ab302b2a_Sptr> _self_, jule::Ptr<_1ab2e6525_TypeKind> _58521_other) {
	jule::Ptr<_1ab302b2a_Sptr> _5869_sptr = _1ab2e8e0c_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1ab2e6c2e_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab302b2a_Sptr _Src) {
	_Stream << _1ab302e9e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab303a82_Str(_1ab3035ed_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1ab2e68dd_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab303dc3_Equal(jule::Ptr<_1ab3035ed_Slc> _self_, jule::Ptr<_1ab2e6525_TypeKind> _60421_other) {
	jule::Ptr<_1ab3035ed_Slc> _6059_slc = _1ab2e9bcc_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1ab2e6c2e_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3035ed_Slc _Src) {
	_Stream << _1ab303a82_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab304566_Str(_1ab3041e2_Tuple* _self_) {
	_1a7c4c7ed_StrBuilder _62113_s = static__1a7c4cb1c_New(16LL);;
	_1a7c57682_WriteByte(&_62113_s, '(');
	_1a7c573c9_WriteStr(&_62113_s, _1ab2e68dd_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bbb875c0:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e6525_TypeKind> *_62416_t = it;
			{
				_1a7c57682_WriteByte(&_62113_s, ',');
				_1a7c573c9_WriteStr(&_62113_s, _1ab2e68dd_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1bbb875c0:;
			++it;
			goto _iter_begin_1bbb875c0;
		}
		_iter_end_1bbb875c0:;
	};
	_1a7c57682_WriteByte(&_62113_s, ')');
	return _1a7c57bc1_Str(&_62113_s);;
}



inline jule::Bool _1ab3048a7_Equal(jule::Ptr<_1ab3041e2_Tuple> _self_, jule::Ptr<_1ab2e6525_TypeKind> _63321_other) {
	jule::Ptr<_1ab3041e2_Tuple> _6349_tup = _1ab2ea99c_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64113_i = 0LL;;
	for (; (_64113_i < (*(_self_))._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1ab2e6c2e_Equal((*(_self_))._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1bbb8a5a1:;
	}
	_iter_end_1bbb8a5a1:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3041e2_Tuple _Src) {
	_Stream << _1ab304566_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab305116_Str(_1ab304c92_Map* _self_) {
	_1a7c4c7ed_StrBuilder _66113_s = static__1a7c4cb1c_New(16LL);;
	_1a7c573c9_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_1a7c573c9_WriteStr(&_66113_s, _1ab2e68dd_Str((*(_self_))._field_Key.ptr()));
	_1a7c57682_WriteByte(&_66113_s, ']');
	_1a7c573c9_WriteStr(&_66113_s, _1ab2e68dd_Str((*(_self_))._field_Val.ptr()));
	return _1a7c57bc1_Str(&_66113_s);;
}



inline jule::Bool _1ab305457_Equal(jule::Ptr<_1ab304c92_Map> _self_, jule::Ptr<_1ab2e6525_TypeKind> _67021_other) {
	jule::Ptr<_1ab304c92_Map> _6719_m = _1ab2ea716_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1ab2e6c2e_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1ab2e6c2e_Equal((*(_self_))._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab304c92_Map _Src) {
	_Stream << _1ab305116_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab305c93_Str(_1ab30591e_Arr* _self_) {
	_1a7c4c7ed_StrBuilder _68913_s = static__1a7c4cb1c_New(16LL);;
	_1a7c57682_WriteByte(&_68913_s, '[');
	_1a7c573c9_WriteStr(&_68913_s, _1a8ce48e9_Itoa((*(_self_))._field_N));
	_1a7c57682_WriteByte(&_68913_s, ']');
	_1a7c573c9_WriteStr(&_68913_s, _1ab2e68dd_Str((*(_self_))._field_Elem.ptr()));
	return _1a7c57bc1_Str(&_68913_s);;
}



inline jule::Bool _1ab3060d4_Equal(jule::Ptr<_1ab30591e_Arr> _self_, jule::Ptr<_1ab2e6525_TypeKind> _69821_other) {
	jule::Ptr<_1ab30591e_Arr> _6999_arr = _1ab2e9946_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1ab2e6c2e_Equal((*(_self_))._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab30591e_Arr _Src) {
	_Stream << _1ab305c93_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab306766_Str(_1ab3063e2_Ptr* _self_) {
	if (_1ab306e2b_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1ab2e68dd_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ab306aa7_Equal(jule::Ptr<_1ab3063e2_Ptr> _self_, jule::Ptr<_1ab2e6525_TypeKind> _72221_other) {
	jule::Ptr<_1ab3063e2_Ptr> _7239_ptr = _1ab2e9193_Ptr(_72221_other.ptr());;
	if ((_7239_ptr == nullptr)) {
		return false;;
	};
	return _1ab2e6c2e_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
}



inline jule::Bool _1ab306e2b_IsUnsafe(_1ab3063e2_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3063e2_Ptr _Src) {
	_Stream << _1ab306766_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3073e3_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ab308b20_pushErr(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab182e72_Token> _80826_token, jule::Str _80841_fmt, jule::Slice<jule::Any> _80854_args) {
	_1ab265ad2_pushErr((*(_self_))._field_s.ptr(), _80826_token, _80841_fmt, _80854_args);
}



inline void _1ab308d1d_allowBuiltin(_1ab3083d3_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ab30901b_disallowBuiltin(_1ab3083d3_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1bbb99ea6_pushReference(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1babb749c_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ab1d62c2_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type9));
}

inline void _1bbb9c88d_pushReference(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab1e26da_Trait>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bbb9e5d7_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ab1d62c2_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type10));
}



inline void _1ab30957c_pushReferenceByKind(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _83043_k) {
	{
		
		if ((_1ab2ea1e9_Struct((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1bbb98a98:;
			{
				jule::Ptr<_1ab1bc1ed_StructIns> _83317_t = _1ab2ea1e9_Struct((*(_83043_k)).ptr());;
				_1bbb99ea6_pushReference(_self_, &(_83317_t));
			}
		}
		else if ((_1ab2ea480_Trait((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1bbb98b20:;
			{
				jule::Ptr<_1ab1e26da_Trait> _83617_t = _1ab2ea480_Trait((*(_83043_k)).ptr());;
				_1bbb9c88d_pushReference(_self_, &(_83617_t));
			}
		}
		_match_end_1bbb98988:;
	};
}



inline void _1ab30999a_pushCycleError(_1ab3083d3_typeChecker* _self_, jule::Any _84129_def1, jule::Any _84140_def2, _1a7c4c7ed_StrBuilder* _84156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8439_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84325_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84325_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1bbba2222:;
				{
					return (*((*(_84325_def)).cast_ptr<_1ab2e5733_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1bbba27c7:;
				{
					return (*((*(_84325_def)).cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1bbba23ba:;
				{
					return jule::Str();;
				}
			}
			_match_end_1bbba2365:;
		};
	});;
	jule::Slice<jule::U8> _8539_buf = _1a7c58672_Buf(_84156_message);;
	jule::Str _8549_def1Ident = _8439_getIdent(&(_84129_def1));;
	jule::Str _8559_def2Ident = _8439_getIdent(&(_84140_def2));;
	jule::Str _8569_refersTo = _1a7d06005_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8549_def1Ident, &__jule_any_type4),jule::Any(_8559_def2Ident, &__jule_any_type4)}));;
	_1a7c573c9_WriteStr(_84156_message, _1a7c36ba0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1a7c573c9_WriteStr(_84156_message, _8569_refersTo);
	_1a7c57682_WriteByte(_84156_message, '\n');
	_1a7c57121_Write(_84156_message, _8539_buf);
}



inline jule::Bool _1ab309d96_checkCrossCycle(_1ab3083d3_typeChecker* _self_, jule::Any _86330_decl, _1a7c4c7ed_StrBuilder* _86346_message) {
	{
		auto &_match_expr{ _86330_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bbba5984:;
			{
				jule::Ptr<_1ab2e5733_TypeAlias> _86613_ta = _86330_decl.cast_ptr<_1ab2e5733_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86613_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbba6677:;
					if (it != expr_end) {
						jule::Any *_86720_d = it;
						{
							{
								
								if (((*(_86720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1bbba71c2:;
									{
										_1ab30999a_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								else if ((!(_1ab309d96_checkCrossCycle(_self_, (*(_86720_d)), _86346_message)))) {
									_case_begin_1bbba7249:;
									{
										_1ab30999a_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								_match_end_1bbba70b2:;
							};
						}
						_iter_next_1bbba6677:;
						++it;
						goto _iter_begin_1bbba6677;
					}
					_iter_end_1bbba6677:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bbba59ea:;
			{
				jule::Ptr<_1ab1b9470_Struct> _87813_s = _86330_decl.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87813_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbba6db4:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b9470_Struct> *_87920_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87920_d))))) {
									_case_begin_1bbba9427:;
									{
										_1ab30999a_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								else if ((!(_1ab309d96_checkCrossCycle(_self_, jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message)))) {
									_case_begin_1bbba949e:;
									{
										_1ab30999a_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								_match_end_1bbba9317:;
							};
						}
						_iter_next_1bbba6db4:;
						++it;
						goto _iter_begin_1bbba6db4;
					}
					_iter_end_1bbba6db4:;
				};
			}
		}
		_match_end_1bbba592e:;
	};
	return true;;
}



inline jule::Bool _1ab30a292_checkIllegalCycles(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _89738_ident, jule::Any _89765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89765_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bbbab407:;
			{
				if ((*(_89765_decl.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bbbab46d:;
			{
				if ((*(_89765_decl.cast_ptr<_1ab2e5733_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bbbab3a2:;
	};
	if ((_89765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1ab308b20_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a7c4c7ed_StrBuilder _92013_message = static__1a7c4cb1c_New(32LL);;
	if ((!(_1ab309d96_checkCrossCycle(_self_, _89765_decl, &(_92013_message))))) {
		jule::Str _92317_errMsg = _1a7c57bc1_Str(&_92013_message);;
		_1a7c57dbe_Clear(&_92013_message);
		_1ab30999a_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89765_decl, &(_92013_message));
		_92317_errMsg+=_1a7c57bc1_Str(&_92013_message);
		_1ab308b20_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92317_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bbbb0ad2:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bbbb0b48:;
			{
				{
					auto &_match_expr{ _89765_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1bbbb1a5b:;
						{
							jule::Ptr<_1ab1b9470_Struct> _93921_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1ab1b9470_Struct>> &__jule_push_dest = (*(_93921_s))._field_Depends; __jule_push_dest.push(_89765_decl.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1bbbb10aa:;
				};
			}
		}
		_match_end_1bbbb0a7c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1ab2e606e_Kind> _1ab30a68d_fromTypeAlias(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _94733_decl, jule::Ptr<_1ab2e5733_TypeAlias>* _94760_ta) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94760_ta))))._field_Public, (*((*(_94760_ta))))._field_Token)))) {
		_1ab308b20_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94760_ta))))._field_Used=true;
	if (((*((*(_94733_decl))))._field_Generics.len() > 0LL)) {
		_1ab308b20_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbbb629c:;
			if (it != expr_end) {
				jule::Ptr<_1ab2e5733_TypeAlias> _96420_bg = *it;
				{
					if (((_96420_bg == (*(_94760_ta))) || (((*((*((*(_94760_ta))))._field_Kind))._field_Kind != nullptr) && _1ab2e6c2e_Equal((*((*((*(_94760_ta))))._field_Kind))._field_Kind, (*((*(_96420_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1bbbb629c;
					};
				}
				_iter_next_1bbbb629c:;
				++it;
				goto _iter_begin_1bbbb629c;
			}
			_iter_end_1bbbb629c:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbbb6e90:;
			if (it != expr_end) {
				jule::Ptr<_1ab2e5733_TypeAlias> _97520_bg = *it;
				{
					if ((_97520_bg == (*(_94760_ta)))) {
						_1ab308b20_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bbbb9c62:;
						if (it != expr_end) {
							jule::Ptr<_1ab2e5733_TypeAlias> _98024_dg = *it;
							{
								if ((_97520_bg == _98024_dg)) {
									_1ab308b20_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1bbbb9c62:;
							++it;
							goto _iter_begin_1bbbb9c62;
						}
						_iter_end_1bbbb9c62:;
					};
				}
				_iter_next_1bbbb6e90:;
				++it;
				goto _iter_begin_1bbbb6e90;
			}
			_iter_end_1bbbb6e90:;
		};
	};
	jule::Bool _98913_ok = _1ab30a292_checkIllegalCycles(_self_, _94733_decl, jule::Any((*(_94760_ta)), &__jule_any_type66));;
	if ((!(_98913_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94760_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98913_ok=_1ab271eea_checkTypeAliasDeclKind((*(_self_))._field_s, _94760_ta, (*(_self_))._field_lookup);
		if ((!(_98913_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94760_ta))); };
	};
	jule::Ptr<_1ab2e6525_TypeKind> _100813_tk = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Generic=(*((*(_94760_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1ab30957c_pushReferenceByKind(_self_, &(_100813_tk));
	if ((*((*(_94760_ta))))._field_Binded) {
		(*(_100813_tk))._field_BindIdent=(*((*(_94760_ta))))._field_Ident;
	} else {
		(*(_100813_tk))._field_BindIdent=(*((*((*((*(_94760_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1ab2e606e_Kind>(_100813_tk, 19);;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab30aa89_fromEnum(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _102128_decl, jule::Ptr<_1ab1e4de6_Enum>* _102155_e) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102155_e))))._field_Public, (*((*(_102155_e))))._field_Token)))) {
		_1ab308b20_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102128_decl))))._field_Generics.len() > 0LL)) {
		_1ab308b20_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102155_e));;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab30ae85_fromTypeEnum(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _103332_decl, jule::Ptr<_1ab1e6601_TypeEnum>* _103359_e) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103359_e))))._field_Public, (*((*(_103359_e))))._field_Token)))) {
		_1ab308b20_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103332_decl))))._field_Generics.len() > 0LL)) {
		_1ab308b20_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103359_e));;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab30b381_fromTrait(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _104529_decl, jule::Ptr<_1ab1e26da_Trait>* _104556_t) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104556_t))))._field_Public, (*((*(_104556_t))))._field_Token)))) {
		_1ab308b20_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104529_decl))))._field_Generics.len() > 0LL)) {
		_1ab308b20_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1bbb9c88d_pushReference(_self_, _104556_t);
	return (*(_104556_t));;
}



inline jule::Bool _1ab30b77c_checkStructIns(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _105838_ins, jule::Ptr<_1ab182e72_Token>* _105860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ab27d5de_precheckStructIns((*(_self_))._field_s, _105838_ins, (*(_105860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105838_ins))))._field_Generics.len() > 0LL)) {
		_1ab27e106_checkStructInsOperators((*(_self_))._field_s, (*(_105838_ins)));
		_1ab27d897_checkStructIns((*(_self_))._field_s, _105838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab30ba35_appendUsedStructReference(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab1b9470_Struct>* _107949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bbbcc7e1:;
			{
				jule::Ptr<_1ab1b9470_Struct> _108517_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1ab1b9470_Struct>(&__jule_any_type65);;
				if ((!(_1ab1bae00_IsUses(_108517_refS.ptr(), (*(_107949_s)))))) {
					{ jule::Slice<jule::Ptr<_1ab1b9470_Struct>> &__jule_push_dest = (*(_108517_refS))._field_Uses; __jule_push_dest.push((*(_107949_s))); };
				};
			}
		}
		_match_end_1bbbcc78b:;
	};
}



inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab30be31_buildStructInstance(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _109243_decl, jule::Ptr<_1ab1b9470_Struct>* _109270_s) {
	jule::Ptr<_1ab3073e3_referencer> _109413_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> _109613_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1bbbd07b1:;
				{
					jule::Ptr<_1ab2285bc_scopeChecker> _110321_sc = (*(_self_))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0);;
					jule::Ptr<_1ab2285bc_scopeChecker> _110421_hard = _1ab22b944_getHardRoot(_110321_sc);;
					if ((((*((*(_110421_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Decl != (*(_109270_s))))) {
						goto _match_end_1bbbd075b;
					};
					jule::I64 _110817_n = ((*((*(_110421_hard))._field_owner))._field_Generics.len() + (*((*((*(_110421_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110421_hard))._field_table))._field_TypeAliases.slice(0LL, _110817_n);
				}
			}
			_match_end_1bbbd075b:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1ab31605b_Lookup> _111813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1ab1bc1ed_StructIns> _112213_ins = _1ab1b98d2_instance((*(_109270_s)));;
	(*(_112213_ins))._field_Generics=jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>>::alloc(0LL, (*((*(_109243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbbd5651:;
		if (it != expr_end) {
			jule::Ptr<_1ab198570_TypeDecl> _112421_g = *it;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _112517_kind = _1ab31073c_build(_self_, &((*(_112421_g))._field_Kind));;
				if ((_112517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ab2e4b3e_InsGeneric>> &__jule_push_dest = (*(_112213_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1ab2e4b3e_InsGeneric>(_1ab2e4b3e_InsGeneric{._field_Kind=_112517_kind, })); };
			}
			_iter_next_1bbbd5651:;
			++it;
			goto _iter_begin_1bbbd5651;
		}
		_iter_end_1bbbd5651:;
	};
	(*(_self_))._field_lookup=_111813_lookup;
	(*(_self_))._field_bannedGenerics=_109613_bannedGenerics;
	(*(_self_))._field_referencer=_109413_referencer;
	return _112213_ins;;
}



inline jule::Ptr<_1ab1bc1ed_StructIns> _1ab30c32c_fromStruct(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _114034_decl, jule::Ptr<_1ab1b9470_Struct>* _114061_s) {
	if ((!(_1ab266341_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114061_s))))._field_Public, (*((*(_114061_s))))._field_Token)))) {
		_1ab308b20_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114034_decl))))._field_Generics.len() > 0LL)) {
			_1ab308b20_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ab1bc1ed_StructIns>(_1ab1bc1ed_StructIns{._field_Decl=(*(_114061_s)), });;
	};
	jule::Bool _115813_ok = _1ab30a292_checkIllegalCycles(_self_, _114034_decl, jule::Any((*(_114061_s)), &__jule_any_type65));;
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	_1ab30ba35_appendUsedStructReference(_self_, _114061_s);
	jule::Ptr<_1ab1bc1ed_StructIns> _116413_ins = _1ab30be31_buildStructInstance(_self_, _114034_decl, _114061_s);;
	if ((_116413_ins == nullptr)) {
		return nullptr;;
	};
	_115813_ok=_1ab267111_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116413_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116413_ins))._field_Generics.len()), (*((*(_114034_decl))))._field_Token);
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _117413_existInstance = _1ab1b9be0_appendInstance((*(_114061_s)).ptr(), &(_116413_ins));;
	if ((_117413_existInstance != nullptr)) {
		if ((!(_1ab2701e6_checkConstraintsStruct((*(_self_))._field_s, &(_116413_ins), &((*((*(_114034_decl))))._field_Token), _117413_existInstance)))) {
			return nullptr;;
		};
		_1bbb99ea6_pushReference(_self_, &(_117413_existInstance));
		return _117413_existInstance;;
	};
	if ((!(_1ab30b77c_checkStructIns(_self_, &(_116413_ins), &((*((*(_114034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1bbb99ea6_pushReference(_self_, &(_116413_ins));
	return _116413_ins;;
}



inline jule::Trait<_1ab2e606e_Kind> _1ab30c66d_getDef(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl>* _119830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbbe0419:;
		if (it != expr_end) {
			jule::Ptr<_1ab1a577a_GenericDecl> _119916_g = *it;
			{
				if (((*(_119916_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					return jule::Trait<_1ab2e606e_Kind>(_1ab313443_buildPrimType((*(_119916_g))._field_Ident), 20);;
				};
			}
			_iter_next_1bbbe0419:;
			++it;
			goto _iter_begin_1bbbe0419;
		}
		_iter_end_1bbbe0419:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbbe0c88:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e5733_TypeAlias> _120521_g = *it;
			{
				if (((*(_120521_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					if (((*((*(_119830_decl))))._field_Generics.len() > 0LL)) {
						_1ab308b20_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1ab1bc1ed_StructIns> _121121_st = _1ab2ea1e9_Struct((*((*(_120521_g))._field_Kind))._field_Kind.ptr());;
					if ((_121121_st != nullptr)) {
						jule::Bool _121321_ok = _1ab30a292_checkIllegalCycles(_self_, _119830_decl, jule::Any((*(_121121_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121321_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120521_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1bbbe0c88:;
			++it;
			goto _iter_begin_1bbbe0c88;
		}
		_iter_end_1bbbe0c88:;
	};
	if ((!((*((*(_119830_decl))))._field_Binded))) {
		jule::Ptr<_1ab1e4de6_Enum> _122317_e = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315ab6_FindEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122317_e != nullptr)) {
			return jule::Trait<_1ab2e606e_Kind>(_1ab30aa89_fromEnum(_self_, _119830_decl, &(_122317_e)), 3);;
		};
		jule::Ptr<_1ab1e6601_TypeEnum> _122817_te = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315e07_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122817_te != nullptr)) {
			return jule::Trait<_1ab2e606e_Kind>(_1ab30ae85_fromTypeEnum(_self_, _119830_decl, &(_122817_te)), 4);;
		};
		jule::Ptr<_1ab1e26da_Trait> _123317_t = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315775_FindTrait((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_123317_t != nullptr)) {
			return jule::Trait<_1ab2e606e_Kind>(_1ab30b381_fromTrait(_self_, _119830_decl, &(_123317_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1ab308b20_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1b9470_Struct> _124213_s = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab315038_FindStruct((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if ((_124213_s != nullptr)) {
		return jule::Trait<_1ab2e606e_Kind>(_1ab30c32c_fromStruct(_self_, _119830_decl, &(_124213_s)), 0);;
	};
	jule::Ptr<_1ab2e5733_TypeAlias> _124713_ta = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab314b3c_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if (((_124713_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124713_ta=_1ab3cbe46_findBuiltinTypeAlias((*((*(_119830_decl))))._field_Ident);
	};
	if ((_124713_ta != nullptr)) {
		return _1ab30a68d_fromTypeAlias(_self_, _119830_decl, &(_124713_ta));;
	};
	_1ab308b20_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1ab2e606e_Kind> _1ab30c9ae_buildIdent(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198b7a_IdentTypeDecl> _125933_decl) {
	return _1ab30c66d_getDef(_self_, &(_125933_decl));;
}



inline jule::Trait<_1ab2e606e_Kind> _1ab30cd00_buildSubIdent(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198e77_SubIdentTypeDecl> _126336_decl) {
	jule::Trait<_1ab2e606e_Kind> _126413_ident = _1ab30c9ae_buildIdent(_self_, (*(_126336_decl))._field_Idents[0LL]);;
	if ((_126413_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126413_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1bbbedb20:;
			{
				goto _match_end_1bbbed58c;
			}
		}
		else {
			_case_begin_1bbbed5e2:;
			{
				_1ab308b20_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bbbed58c:;
	};
	jule::Ptr<_1ab1e6601_TypeEnum> _127513_t = _126413_ident.cast_ptr<_1ab1e6601_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1ab198b7a_IdentTypeDecl>> _127613_idents = (*(_126336_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127613_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbbeebdc:;
		if (it != expr_end) {
			jule::I64 _127713_i = it - expr->begin();
			jule::Ptr<_1ab198b7a_IdentTypeDecl> _127716_id = *it;
			{
				jule::Ptr<_1ab1e6029_TypeEnumItem> _127817_item = _1ab1e71b2_FindItem(_127513_t.ptr(), (*(_127716_id))._field_Ident);;
				if ((_127817_item == nullptr)) {
					_1ab308b20_pushErr(_self_, (*(_127716_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127513_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127716_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127613_idents.len() - _127713_i) == 1LL)) {
					_1ab30957c_pushReferenceByKind(_self_, &((*((*(_127817_item))._field_Kind))._field_Kind));
					return jule::Trait<_1ab2e606e_Kind>((*((*(_127817_item))._field_Kind))._field_Kind, 19);;
				};
				_127513_t=_1ab2e96b0_TypeEnum((*((*(_127817_item))._field_Kind))._field_Kind.ptr());
				if ((_127513_t == nullptr)) {
					_1ab308b20_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1bbbeebdc:;
			++it;
			_127713_i++;
			goto _iter_begin_1bbbeebdc;
		}
		_iter_end_1bbbeebdc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab302b2a_Sptr> _1ab30d141_buildSptrFromType(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _129741_elem) {
	{
		
		if (((*(_129741_elem)) == nullptr)) {
			_case_begin_1bbc04373:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_129741_elem)).ptr()) != nullptr)) {
			_case_begin_1bbc043ea:;
			{
				jule::Ptr<_1ab1bc1ed_StructIns> _130313_s = _1ab2ea1e9_Struct((*(_129741_elem)).ptr());;
				if ((((*(_130313_s))._field_Decl != nullptr) && (*((*(_130313_s))._field_Decl))._field_Binded)) {
					_1ab308b20_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ab2e9946_Arr((*(_129741_elem)).ptr()) != nullptr) && (*(_1ab2e9946_Arr((*(_129741_elem)).ptr())))._field_Auto)) {
			_case_begin_1bbc04472:;
			{
				_1ab308b20_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bbc03ad1:;
	};
	return jule::new_ptr<_1ab302b2a_Sptr>(_1ab302b2a_Sptr{._field_Elem=(*(_129741_elem))});;
}



inline jule::Ptr<_1ab302b2a_Sptr> _1ab30d482_buildSptr(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab19961a_SptrTypeDecl> _131732_decl) {
	jule::Bool _13189_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13189_cycleRisk;
	});;
	jule::Ptr<_1ab2e6525_TypeKind> _132213_elem = _1ab310a7d_checkDecl(_self_, &((*(_131732_decl))._field_Elem));;
	return _1ab30d141_buildSptrFromType(_self_, &(_132213_elem));;
}



inline jule::Ptr<_1ab3063e2_Ptr> _1ab30d7c3_buildPtrFromType(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _132640_elem) {
	{
		
		if (((*(_132640_elem)) == nullptr)) {
			_case_begin_1bbc09510:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab2e9946_Arr((*(_132640_elem)).ptr()) != nullptr) && (*(_1ab2e9946_Arr((*(_132640_elem)).ptr())))._field_Auto)) {
			_case_begin_1bbc09587:;
			{
				_1ab308b20_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1ab3063e2_Ptr>();;
			}
		}
		_match_end_1bbc09400:;
	};
	return jule::new_ptr<_1ab3063e2_Ptr>(_1ab3063e2_Ptr{._field_Elem=(*(_132640_elem))});;
}



inline jule::Ptr<_1ab3063e2_Ptr> _1ab30db14_buildPtr(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab19a099_PtrTypeDecl> _134131_decl) {
	jule::Bool _13429_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13429_cycleRisk;
	});;
	jule::Ptr<_1ab2e6525_TypeKind> _134617_elem = nullptr;;
	if ((!(_1ab19a40c_IsUnsafe(_134131_decl.ptr())))) {
		_134617_elem=_1ab310a7d_checkDecl(_self_, &((*(_134131_decl))._field_Elem));
		return _1ab30d7c3_buildPtrFromType(_self_, &(_134617_elem));;
	};
	return jule::new_ptr<_1ab3063e2_Ptr>(_1ab3063e2_Ptr{._field_Elem=_134617_elem});;
}



inline jule::Ptr<_1ab3035ed_Slc> _1ab30de55_buildSlc(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab1999a0_SlcTypeDecl> _135831_decl) {
	jule::Bool _13599_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13599_cycleRisk;
	});;
	jule::Ptr<_1ab2e6525_TypeKind> _136313_elem = _1ab310a7d_checkDecl(_self_, &((*(_135831_decl))._field_Elem));;
	{
		
		if ((_136313_elem == nullptr)) {
			_case_begin_1bbc0e67a:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab2e9946_Arr(_136313_elem.ptr()) != nullptr) && (*(_1ab2e9946_Arr(_136313_elem.ptr())))._field_Auto)) {
			_case_begin_1bbc0e702:;
			{
				_1ab308b20_pushErr(_self_, (*((*(_135831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bbc0e603:;
	};
	return jule::new_ptr<_1ab3035ed_Slc>(_1ab3035ed_Slc{._field_Elem=_136313_elem});;
}



inline jule::Ptr<_1ab30591e_Arr> _1ab30e296_buildArr(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab19a83b_ArrTypeDecl> _137931_decl) {
	jule::I64 _138013_n = 0LL;;
	if ((!(_1ab19ab9e_AutoSized(_137931_decl.ptr())))) {
		jule::Ptr<_1ab2b5c0e_Data> _138317_size = _1ab2d5b63_evalExpr(_1ab26d07e_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137931_decl))._field_Size);;
		if ((_138317_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1ab2b65d3_IsConst(_138317_size.ptr())))) {
			_1ab308b20_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ab2e8b76_Prim((*(_138317_size))._field_Kind.ptr()) == nullptr) || (!(_1a8d04222_IsInt((*(_1ab2e8b76_Prim((*(_138317_size))._field_Kind.ptr())))._field_Kind))))) {
			_1ab308b20_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138013_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a8d075bb_AsI64((*(_138317_size))._field_Constant.ptr())));
		if ((_138013_n < 0LL)) {
			_1ab308b20_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140117_max = _1a8ced13e_MaxI(jule::Str::lit("int", 3));;
			if (((_1a8ce5c80_BitSize != 64LL) && (static_cast<jule::I64>(_138013_n) > _140117_max))) {
				_1ab308b20_pushErr(_self_, (*((*(_137931_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1ab2e2e17_constoa(&((*(_138317_size))._field_Constant)), &__jule_any_type4),jule::Any(_1a8ce4630_FmtInt(_140117_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1ab2e6525_TypeKind> _141013_elem = _1ab310a7d_checkDecl(_self_, &((*(_137931_decl))._field_Elem));;
	{
		
		if ((_141013_elem == nullptr)) {
			_case_begin_1bbc1919b:;
			{
				return nullptr;;
			}
		}
		else if (((_1ab2e9946_Arr(_141013_elem.ptr()) != nullptr) && (*(_1ab2e9946_Arr(_141013_elem.ptr())))._field_Auto)) {
			_case_begin_1bbc19223:;
			{
				_1ab308b20_pushErr(_self_, (*((*(_137931_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bbc11c43:;
	};
	return jule::new_ptr<_1ab30591e_Arr>(_1ab30591e_Arr{._field_Auto=_1ab19ab9e_AutoSized(_137931_decl.ptr()), ._field_N=_138013_n, ._field_Elem=_141013_elem});;
}



inline jule::Ptr<_1ab304c92_Map> _1ab30e5d7_buildMap(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab19b089_MapTypeDecl> _142831_decl) {
	jule::Bool _14299_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14299_cycleRisk;
	});;
	jule::Ptr<_1ab2e6525_TypeKind> _143313_key = _1ab310a7d_checkDecl(_self_, &((*(_142831_decl))._field_Key));;
	if ((_143313_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab2e6525_TypeKind> _143813_val = _1ab310a7d_checkDecl(_self_, &((*(_142831_decl))._field_Val));;
	if ((_143813_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ab2e9429_Enum(_143813_val.ptr()) != nullptr)) {
		_1ab308b20_pushErr(_self_, (*((*(_142831_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1ab304c92_Map>(_1ab304c92_Map{._field_Key=_143313_key, ._field_Val=_143813_val});;
}



inline jule::Ptr<_1ab3041e2_Tuple> _1ab30e928_buildTuple(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab199c9c_TupleTypeDecl> _145233_decl) {
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _145313_types = jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>>::alloc(0LL, (*(_145233_decl))._field_Types.len());;
	{
		auto expr = &((*(_145233_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc201e6:;
		if (it != expr_end) {
			jule::Ptr<_1ab198570_TypeDecl> _145421_t = *it;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _145517_kind = _1ab310a7d_checkDecl(_self_, &(_145421_t));;
				if ((_145517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> &__jule_push_dest = _145313_types; __jule_push_dest.push(_145517_kind); };
			}
			_iter_next_1bbc201e6:;
			++it;
			goto _iter_begin_1bbc201e6;
		}
		_iter_end_1bbc201e6:;
	};
	return jule::new_ptr<_1ab3041e2_Tuple>(_1ab3041e2_Tuple{._field_Types=_145313_types});;
}



inline jule::Bool _1ab30ec69_checkFuncTypes(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab1d2312_FnIns>* _146538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc21c64:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d1366_ParamIns> _146621_p = *it;
			{
				(*(_146621_p))._field_Kind=_1ab31073c_build(_self_, &((*((*((*((*(_146621_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146621_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ab27089a_checkFnParamKind((*(_self_))._field_s, &(_146621_p));
			}
			_iter_next_1bbc21c64:;
			++it;
			goto _iter_begin_1bbc21c64;
		}
		_iter_end_1bbc21c64:;
	};
	if ((!(_1ab1ce881_IsVoid((*((*(_146538_f))))._field_Decl.ptr())))) {
		(*((*(_146538_f))))._field_Result=_1ab31073c_build(_self_, &((*((*((*((*((*((*(_146538_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab3100aa_buildFunc(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab1aa230_FnDecl> _148332_decl) {
	jule::Bool _14849_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14849_cycleRisk;
	});;
	if (((*(_148332_decl))._field_Generics.len() > 0LL)) {
		_1ab308b20_pushErr(_self_, (*(_148332_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1ce40d_Fn> _149313_f = _1ab1d8a00_buildFunc(_148332_decl);;
	jule::I64 _14959_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ab279b90_checkAnonFuncDecl((*(_self_))._field_s, &(_149313_f));
	if ((_14959_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _150113_ins = _1ab1d08d7_instanceForce(_149313_f);;
	(*(_150113_ins))._field_Anon=true;
	jule::Bool _15049_ok = _1ab30ec69_checkFuncTypes(_self_, &(_150113_ins));;
	if ((!(_15049_ok))) {
		return nullptr;;
	};
	return _150113_ins;;
}



inline jule::Trait<_1ab2e606e_Kind> _1ab3103eb_buildByNamespace(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab19931d_NamespaceTypeDecl> _151239_decl) {
	jule::Str _15139_path = _1ab31309c_buildLinkPathByTokens(&((*(_151239_decl))._field_Idents));;
	jule::Ptr<_1ab242a9d_ImportInfo> _151413_imp = _1ab31605b_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ab314345_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>([=](jule::Ptr<_1ab242a9d_ImportInfo> _151449_imp) mutable -> jule::Bool {
		if ((((*(_151239_decl))._field_Idents.len() == 1LL) && ((*(_151449_imp))._field_Alias == _15139_path))) {
			return true;;
		};
		return (((*(_151449_imp))._field_LinkPath == _15139_path) && _1ab2456b6_isAccessibleViaSelection(_151449_imp.ptr()));;
	}));;
	jule::Str _15219_selfIdent = jule::Str::lit("self", 4);;
	if (((_151413_imp == nullptr) || (!(_1ab2450de_isLookupable(_151413_imp.ptr(), &(_15219_selfIdent)))))) {
		_1ab308b20_pushErr(_self_, (*(_151239_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15139_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ab30901b_disallowBuiltin(_self_);
	jule::Trait<_1ab31605b_Lookup> _152813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ab31605b_Lookup>(_151413_imp, 1);
	jule::Ptr<_1ab2e6525_TypeKind> _153013_kind = _1ab310a7d_checkDecl(_self_, &((*(_151239_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152813_lookup;
	_1ab308d1d_allowBuiltin(_self_);
	return jule::Trait<_1ab2e606e_Kind>(_153013_kind, 19);;
}



inline jule::Ptr<_1ab2e6525_TypeKind> _1ab31073c_build(_1ab3083d3_typeChecker* _self_, jule::Any* _153629_declKind) {
	jule::Trait<_1ab2e606e_Kind> _153717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bbc32082:;
			{
				jule::Trait<_1ab2e606e_Kind> _154017_t = _1ab30c9ae_buildIdent(_self_, (*(_153629_declKind)).cast_ptr<_1ab198b7a_IdentTypeDecl>(&__jule_any_type20));;
				if ((_154017_t != nullptr)) {
					_153717_kind=_154017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1bbc31449:;
			{
				jule::Trait<_1ab2e606e_Kind> _154517_t = _1ab30cd00_buildSubIdent(_self_, (*(_153629_declKind)).cast_ptr<_1ab198e77_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154517_t != nullptr)) {
					_153717_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bbc31647:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab302b2a_Sptr> _155117_t = _1ab30d482_buildSptr(_self_, (*(_153629_declKind)).cast_ptr<_1ab19961a_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155117_t != nullptr)) {
					_153717_kind=jule::Trait<_1ab2e606e_Kind>(_155117_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bbc316ad:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab3063e2_Ptr> _155717_t = _1ab30db14_buildPtr(_self_, (*(_153629_declKind)).cast_ptr<_1ab19a099_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155717_t != nullptr)) {
					_153717_kind=jule::Trait<_1ab2e606e_Kind>(_155717_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bbc31724:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab3035ed_Slc> _156317_t = _1ab30de55_buildSlc(_self_, (*(_153629_declKind)).cast_ptr<_1ab1999a0_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156317_t != nullptr)) {
					_153717_kind=jule::Trait<_1ab2e606e_Kind>(_156317_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bbc3178a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab30591e_Arr> _156917_t = _1ab30e296_buildArr(_self_, (*(_153629_declKind)).cast_ptr<_1ab19a83b_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156917_t != nullptr)) {
					_153717_kind=jule::Trait<_1ab2e606e_Kind>(_156917_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bbc3215e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab304c92_Map> _157517_t = _1ab30e5d7_buildMap(_self_, (*(_153629_declKind)).cast_ptr<_1ab19b089_MapTypeDecl>(&__jule_any_type73));;
				if ((_157517_t != nullptr)) {
					_153717_kind=jule::Trait<_1ab2e606e_Kind>(_157517_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bbc321c5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab3041e2_Tuple> _158117_t = _1ab30e928_buildTuple(_self_, (*(_153629_declKind)).cast_ptr<_1ab199c9c_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158117_t != nullptr)) {
					_153717_kind=jule::Trait<_1ab2e606e_Kind>(_158117_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bbc3223b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ab1d2312_FnIns> _158717_t = _1ab3100aa_buildFunc(_self_, (*(_153629_declKind)).cast_ptr<_1ab1aa230_FnDecl>(&__jule_any_type14));;
				if ((_158717_t != nullptr)) {
					_153717_kind=jule::Trait<_1ab2e606e_Kind>(_158717_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bbc322a2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1ab2e606e_Kind> _159317_t = _1ab3103eb_buildByNamespace(_self_, (*(_153629_declKind)).cast_ptr<_1ab19931d_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159317_t != nullptr)) {
					_153717_kind=_159317_t;
				};
			}
		}
		else {
			_case_begin_1bbc315d1:;
			{
				_1ab308b20_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bbc3157b:;
	};
	if ((_153717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1bbc40128:;
			{
				return _153717_kind.cast_ptr<_1ab2e6525_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1bbc3c9a5:;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _160817_tk = jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=_153717_kind});;
				{
					auto &_match_expr{ _153717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1bbc3d456:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160817_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1bbc3d4cd:;
						{
							jule::Ptr<_1ab1bc1ed_StructIns> _161517_s = _153717_kind.cast_ptr<_1ab1bc1ed_StructIns>(0);;
							if ((((*(_161517_s))._field_Decl != nullptr) && (*((*(_161517_s))._field_Decl))._field_Binded)) {
								(*(_160817_tk))._field_BindIdent=(*((*(_161517_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1bbc3d3e0:;
				};
				return _160817_tk;;
			}
		}
		_match_end_1bbc3c4bb:;
	};
}



inline jule::Ptr<_1ab2e6525_TypeKind> _1ab310a7d_checkDecl(_1ab3083d3_typeChecker* _self_, jule::Ptr<_1ab198570_TypeDecl>* _162433_decl) {
	jule::Ptr<_1ab182e72_Token> _162613_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162433_decl))))._field_Token;
	jule::Ptr<_1ab2e6525_TypeKind> _162913_kind = _1ab31073c_build(_self_, &((*((*(_162433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162613_errorToken;
	return _162913_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3083d3_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ab3114c9_prim(jule::Str* _165121_ident, jule::Ptr<_1ab2ee0ee_Prim> _165133_t) {
	return ((*(_165133_t))._field_Kind == (*(_165121_ident)));;
}



inline jule::Bool static__1ab31184d_exist(jule::Str* _165522_ident, jule::Ptr<_1ab2e6525_TypeKind>* _165539_k) {
	{
		
		if ((_1ab2e8b76_Prim((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc44db9:;
			{
				return static__1ab3114c9_prim(_165522_ident, _1ab2e8b76_Prim((*(_165539_k)).ptr()));;
			}
		}
		else if ((_1ab2e8e0c_Sptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc44e41:;
			{
				jule::Ptr<_1ab302b2a_Sptr> _166017_sptr = _1ab2e8e0c_Sptr((*(_165539_k)).ptr());;
				return static__1ab31184d_exist(_165522_ident, &((*(_166017_sptr))._field_Elem));;
			}
		}
		else if ((_1ab2e9193_Ptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc451b6:;
			{
				jule::Ptr<_1ab3063e2_Ptr> _166317_ptr = _1ab2e9193_Ptr((*(_165539_k)).ptr());;
				return static__1ab31184d_exist(_165522_ident, &((*(_166317_ptr))._field_Elem));;
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc4522c:;
			{
				jule::Ptr<_1ab3035ed_Slc> _166617_slc = _1ab2e9bcc_Slc((*(_165539_k)).ptr());;
				return static__1ab31184d_exist(_165522_ident, &((*(_166617_slc))._field_Elem));;
			}
		}
		else if ((_1ab2e9946_Arr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc45293:;
			{
				jule::Ptr<_1ab30591e_Arr> _166917_arr = _1ab2e9946_Arr((*(_165539_k)).ptr());;
				return static__1ab31184d_exist(_165522_ident, &((*(_166917_arr))._field_Elem));;
			}
		}
		else if ((_1ab2ea716_Map((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc4531a:;
			{
				jule::Ptr<_1ab304c92_Map> _167217_m = _1ab2ea716_Map((*(_165539_k)).ptr());;
				return (static__1ab31184d_exist(_165522_ident, &((*(_167217_m))._field_Key)) || static__1ab31184d_exist(_165522_ident, &((*(_167217_m))._field_Val)));;
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc45392:;
			{
				jule::Ptr<_1ab1bc1ed_StructIns> _167617_s = _1ab2ea1e9_Struct((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_167617_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbc4bcd3:;
					if (it != expr_end) {
						jule::Ptr<_1ab2e4b3e_InsGeneric> _167725_g = *it;
						{
							if (static__1ab31184d_exist(_165522_ident, &((*(_167725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bbc4bcd3:;
						++it;
						goto _iter_begin_1bbc4bcd3;
					}
					_iter_end_1bbc4bcd3:;
				};
				return false;;
			}
		}
		else if ((_1ab2e9e63_Fn((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc454a2:;
			{
				jule::Ptr<_1ab1d2312_FnIns> _168417_f = _1ab2e9e63_Fn((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_168417_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbc4d950:;
					if (it != expr_end) {
						jule::Ptr<_1ab1d1366_ParamIns> _168525_p = *it;
						{
							if (_1ab1cd055_IsSelf((*(_168525_p))._field_Decl.ptr())) {
								goto _iter_next_1bbc4d950;
							};
							if (static__1ab31184d_exist(_165522_ident, &((*(_168525_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bbc4d950:;
						++it;
						goto _iter_begin_1bbc4d950;
					}
					_iter_end_1bbc4d950:;
				};
				if (((*(_168417_f))._field_Result != nullptr)) {
					return static__1ab31184d_exist(_165522_ident, &((*(_168417_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1ab2ea99c_Tup((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1bbc45518:;
			{
				jule::Ptr<_1ab3041e2_Tuple> _169817_tup = _1ab2ea99c_Tup((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_169817_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbc5126b:;
					if (it != expr_end) {
						jule::Ptr<_1ab2e6525_TypeKind> _169925_t = *it;
						{
							if (static__1ab31184d_exist(_165522_ident, &(_169925_t))) {
								return true;;
							};
						}
						_iter_next_1bbc5126b:;
						++it;
						goto _iter_begin_1bbc5126b;
					}
					_iter_end_1bbc5126b:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1bbc44c76:;
			{
				return false;;
			}
		}
		_match_end_1bbc44bbb:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab311067_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abca8503_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abcee208_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1abd0021a_stop(_1abceea99_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1abd004a1_stopped(_1abceea99_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1abd00737_finished(_1abceea99_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1abd009bd_isLastSt(_1abceea99_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1abd00d31_pushErr(_1abceea99_scopeParser* _self_, jule::Ptr<_1ab182e72_Token> _18926_token, jule::Str _18941_fmt) {
	_1abd1d810_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1abd01194_pushSuggestion(_1abceea99_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1abd1db73_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1abd0144c_insertAsNext(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1abcee208_stmt>(_1abcee208_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1abcee208_stmt> _1abd016d3_next(_1abceea99_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd01ace_buildScope(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _20834_tokens, jule::Ptr<_1ab182e72_Token> _20856_end) {
	jule::Ptr<_1ab1a8591_ScopeTree> _20913_s = _1abcece82_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1abceea99_scopeParser _21213_ssp = _1abceea99_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1abd0b952_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd01e20_buildVarSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _21934_tokens) {
	jule::Ptr<_1ab1ab3da_VarDecl> _22013_v = _1abd2168c_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1ab1ab7b4_RetSt> _1abd02261_buildRetSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _22533_tokens) {
	jule::Ptr<_1ab1ab7b4_RetSt> _22613_st = jule::new_ptr<_1ab1ab7b4_RetSt>(_1ab1ab7b4_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1ab1ac034_Iter> _1abd025a2_buildWhileNextIter(_1abceea99_scopeParser* _self_, jule::Ptr<_1abcee208_stmt>* _23642_s) {
	jule::Ptr<_1ab1ac034_Iter> _23713_it = jule::new_ptr<_1ab1ac034_Iter>(_1ab1ac034_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1ab1ac85e_WhileKind> _24113_kind = jule::new_ptr<_1ab1ac85e_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1abd009bd_isLastSt(_self_)) {
		_1abd00d31_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1abd016d3_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _25313_stTokens = _1abd182dd_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1abcee208_stmt> _25517_stmt = jule::new_ptr<_1abcee208_stmt>(_1abcee208_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1abd0b5de_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _26413_blockTokens = _1abd1b511_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1abd0021a_stop(_self_);
		_1abd00d31_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1abd01194_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1abd00d31_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1abd01ace_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1ab1ac85e_WhileKind> _1abd028e3_buildWhileIterKind(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _28142_tokens) {
	return jule::new_ptr<_1ab1ac85e_WhileKind>(_1ab1ac85e_WhileKind{._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd02c34_getRangeKindKeysTokens(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _28813_vars;;
	jule::Slice<_1a7d05a93_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd03075_buildRangeKindKey(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ab1ab3da_VarDecl> _29713_key = jule::new_ptr<_1ab1ab3da_VarDecl>(_1ab1ab3da_VarDecl{._field_Token=(*(_29341_tokens))[0LL], ._field_Setter=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1abd00d31_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1abd00d31_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd00d31_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1abd01194_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> _1abd033b6_buildRangeKindKeys(_1abceea99_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>* _31942_parts) {
	jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> _32017_keys = nullptr;;
	{
		auto expr = _31942_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbe36b38:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _32121_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> &__jule_push_dest = _32017_keys; __jule_push_dest.push(_1abd03075_buildRangeKindKey(_self_, &(_32121_tokens))); };
			}
			_iter_next_1bbe36b38:;
			++it;
			goto _iter_begin_1bbe36b38;
		}
		_iter_end_1bbe36b38:;
	};
	return _32017_keys;;
}



inline void _1abd03729_setupRangeKindKeysPlain(_1abceea99_scopeParser* _self_, jule::Ptr<_1ab1ad266_RangeKind>* _32747_rng, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _32769_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _32813_keyTokens = _1abd02c34_getRangeKindKeysTokens(_self_, _32769_tokens);;
	if ((_32813_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32813_keyTokens.len() > 2LL)) {
		_1abd00d31_pushErr(_self_, (*((*(_32747_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> _33513_keys = _1abd033b6_buildRangeKindKeys(_self_, &(_32813_keyTokens));;
	(*((*(_32747_rng))))._field_KeyA=_33513_keys[0LL];
	if ((_33513_keys.len() > 1LL)) {
		(*((*(_32747_rng))))._field_KeyB=_33513_keys[1LL];
	};
}



inline void _1abd03a8c_setupRangeKindKeysExplicit(_1abceea99_scopeParser* _self_, jule::Ptr<_1ab1ad266_RangeKind>* _34250_rng, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _34272_tokens) {
	jule::I64 _34313_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _34413_rang = _1abd1b511_range(&(_34313_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34272_tokens);;
	if ((_34313_i < (*(_34272_tokens)).len())) {
		_1abd00d31_pushErr(_self_, (*((*(_34250_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1abd03729_setupRangeKindKeysPlain(_self_, _34250_rng, &(_34413_rang));
}



inline void _1abd03e00_setupRangeKindKeys(_1abceea99_scopeParser* _self_, jule::Ptr<_1ab1ad266_RangeKind>* _35142_rng, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _35164_tokens) {
	if (((*((*(_35164_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1abd03a8c_setupRangeKindKeysExplicit(_self_, _35142_rng, _35164_tokens);
		return;;
	};
	_1abd03729_setupRangeKindKeysPlain(_self_, _35142_rng, _35164_tokens);
}



inline jule::Ptr<_1ab1ad266_RangeKind> _1abd043a6_buildRangeIterKind(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _35942_var_tokens, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _36014_exprTokens, jule::Ptr<_1ab182e72_Token>* _36041_inToken) {
	jule::Ptr<_1ab1ad266_RangeKind> _36113_rng = jule::new_ptr<_1ab1ad266_RangeKind>(_1ab1ad266_RangeKind{._field_InToken=(*(_36041_inToken)), });;
	if (((*(_36014_exprTokens)).len() == 0LL)) {
		_1abd00d31_pushErr(_self_, (*(_36113_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36113_rng;;
	};
	(*(_36113_rng))._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, _36014_exprTokens);
	if (((*(_35942_var_tokens)).len() > 0LL)) {
		_1abd03e00_setupRangeKindKeys(_self_, &(_36113_rng), _35942_var_tokens);
	};
	return _36113_rng;;
}



inline jule::Any _1abd047a2_buildCommonIterKind(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _37543_tokens, jule::Ptr<_1ab182e72_Token>* _37562_err_tok) {
	jule::I64 _37613_braceN = 0LL;;
	{
		auto expr = _37543_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbe41406:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _37721_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bbe4243a:;
						{
							(_37613_braceN)++;
							goto _iter_next_1bbe41406;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bbe424b2:;
						{
							(_37613_braceN)--;
						}
					}
					_match_end_1bbe4236e:;
				};
				if ((_37613_braceN != 0LL)) {
					goto _iter_next_1bbe41406;
				};
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1bbe42050:;
						{
							jule::Slice<jule::Ptr<_1ab182e72_Token>> _39421_declTokens = (*(_37543_tokens)).slice(0LL, _37714_i);;
							jule::Slice<jule::Ptr<_1ab182e72_Token>> _39521_exprTokens = (*(_37543_tokens)).slice((_37714_i + 1LL));;
							return jule::Any(_1abd043a6_buildRangeIterKind(_self_, &(_39421_declTokens), &(_39521_exprTokens), &(_37721_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1bbe43925:;
				};
			}
			_iter_next_1bbe41406:;
			++it;
			_37714_i++;
			goto _iter_begin_1bbe41406;
		}
		_iter_end_1bbe41406:;
	};
	return jule::Any(_1abd028e3_buildWhileIterKind(_self_, _37543_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1ab1ac034_Iter> _1abd04ae3_buildCommonIter(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _40238_tokens) {
	jule::Ptr<_1ab1ac034_Iter> _40313_it = jule::new_ptr<_1ab1ac034_Iter>(_1ab1ac034_Iter{._field_Token=_40238_tokens[0LL], });;
	(_40238_tokens).mut_slice(1LL);;
	if ((_40238_tokens.len() == 0LL)) {
		_1abd0021a_stop(_self_);
		_1abd00d31_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1abd01194_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _41313_exprTokens = _1abd182dd_getBlockExpr(&(_40238_tokens));;
	if ((_41313_exprTokens.len() > 0LL)) {
		(*(_40313_it))._field_Kind=_1abd047a2_buildCommonIterKind(_self_, &(_41313_exprTokens), &((*(_40313_it))._field_Token));
	};
	jule::I64 _41713_i = _41313_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _41813_scopeTokens = _1abd1b511_range(&(_41713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40238_tokens));;
	if ((_41813_scopeTokens == nullptr)) {
		_1abd0021a_stop(_self_);
		_1abd00d31_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1abd01194_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41713_i < _40238_tokens.len())) {
		_1abd00d31_pushErr(_self_, _40238_tokens[_41713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40313_it))._field_Scope=_1abd01ace_buildScope(_self_, &(_41813_scopeTokens), _40238_tokens[(_41713_i - 1LL)]);
	return _40313_it;;
}



inline jule::Ptr<_1ab1ac034_Iter> _1abd04e34_buildIterSt(_1abceea99_scopeParser* _self_, jule::Ptr<_1abcee208_stmt>* _43235_st) {
	if ((*((*(_43235_st))))._field_terminated) {
		return _1abd025a2_buildWhileNextIter(_self_, _43235_st);;
	};
	return _1abd04ae3_buildCommonIter(_self_, (*((*(_43235_st))))._field_tokens);;
}



inline jule::Ptr<_1ab1ad640_BreakSt> _1abd05275_buildBreakSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _43936_tokens) {
	jule::Ptr<_1ab1ad640_BreakSt> _44013_brk = jule::new_ptr<_1ab1ad640_BreakSt>(_1ab1ad640_BreakSt{._field_Token=(*(_43936_tokens))[0LL], });;
	if (((*(_43936_tokens)).len() > 1LL)) {
		if (((*((*(_43936_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1abd00d31_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1abd01194_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_44013_brk))._field_Label=(*(_43936_tokens))[1LL];
			if (((*(_43936_tokens)).len() > 2LL)) {
				_1abd00d31_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _44013_brk;;
}



inline jule::Ptr<_1ab1ada19_ContSt> _1abd055b6_buildContSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _45735_tokens) {
	jule::Ptr<_1ab1ada19_ContSt> _45813_cont = jule::new_ptr<_1ab1ada19_ContSt>(_1ab1ada19_ContSt{._field_Token=(*(_45735_tokens))[0LL], });;
	if (((*(_45735_tokens)).len() > 1LL)) {
		if (((*((*(_45735_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1abd00d31_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1abd01194_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45813_cont))._field_Label=(*(_45735_tokens))[1LL];
			if (((*(_45735_tokens)).len() > 2LL)) {
				_1abd00d31_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45813_cont;;
}



inline jule::Ptr<_1ab1adec0_If> _1abd05907_buildIf(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _47531_tokens) {
	jule::Ptr<_1ab1adec0_If> _47613_model = jule::new_ptr<_1ab1adec0_If>(_1ab1adec0_If{._field_Token=(*(_47531_tokens))[0LL], });;
	((*(_47531_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _48013_exprTokens = _1abd182dd_getBlockExpr(_47531_tokens);;
	jule::I64 _48113_i = 0LL;;
	if ((_48013_exprTokens.len() == 0LL)) {
		_1abd00d31_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48113_i=static_cast<jule::I64>(_48013_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _48713_scopeTokens = _1abd1b511_range(&(_48113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47531_tokens);;
	if ((_48713_scopeTokens == nullptr)) {
		_1abd0021a_stop(_self_);
		_1abd00d31_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1abd01194_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab182e72_Token> _49413_end = (*(_47531_tokens))[(_48113_i - 1LL)];;
	if ((_48113_i < (*(_47531_tokens)).len())) {
		if (((*((*(_47531_tokens))[_48113_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47531_tokens))).mut_slice(_48113_i);;
		} else {
			_1abd00d31_pushErr(_self_, (*(_47531_tokens))[_48113_i], jule::Str::lit("invalid syntax", 14));
			(*(_47531_tokens))=nullptr;
		};
	};
	(*(_47613_model))._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, &(_48013_exprTokens));
	(*(_47613_model))._field_Scope=_1abd01ace_buildScope(_self_, &(_48713_scopeTokens), _49413_end);
	return _47613_model;;
}



inline jule::Ptr<_1ab1ae399_Else> _1abd05c48_buildElse(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _50833_tokens) {
	jule::Ptr<_1ab1ae399_Else> _50913_els = jule::new_ptr<_1ab1ae399_Else>(_1ab1ae399_Else{._field_Token=(*(_50833_tokens))[0LL], });;
	((*(_50833_tokens))).mut_slice(1LL);;
	jule::I64 _51313_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _51413_scopeTokens = _1abd1b511_range(&(_51313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50833_tokens);;
	if ((_51413_scopeTokens == nullptr)) {
		if ((_51313_i < (*(_50833_tokens)).len())) {
			_1abd00d31_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1abd0021a_stop(_self_);
			_1abd00d31_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1abd01194_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51313_i < (*(_50833_tokens)).len())) {
		_1abd00d31_pushErr(_self_, (*(_50833_tokens))[_51313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50913_els))._field_Scope=_1abd01ace_buildScope(_self_, &(_51413_scopeTokens), (*(_50833_tokens))[(_51313_i - 1LL)]);
	return _50913_els;;
}



inline jule::Ptr<_1ab1ae850_Conditional> _1abd06089_buildIfElseChain(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _53239_tokens) {
	jule::Ptr<_1ab1ae850_Conditional> _53313_chain = jule::new_ptr<_1ab1ae850_Conditional>(_1ab1ae850_Conditional{._field_Head=_1abd05907_buildIf(_self_, &(_53239_tokens)), });;
	if (((*(_53313_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53239_tokens.len() != 0LL)) {
		{
			if (((*(_53239_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1bbe5d2d0;
			};
			if (((_53239_tokens.len() > 1LL) && ((*(_53239_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53239_tokens).mut_slice(1LL);;
				jule::Ptr<_1ab1adec0_If> _54521_elif = _1abd05907_buildIf(_self_, &(_53239_tokens));;
				{ jule::Slice<jule::Ptr<_1ab1adec0_If>> &__jule_push_dest = (*(_53313_chain))._field_Tail; __jule_push_dest.push(_54521_elif); };
				goto _iter_next_1bbe5d2d0;
			};
			(*(_53313_chain))._field_Default=_1abd05c48_buildElse(_self_, &(_53239_tokens));
			goto _iter_end_1bbe5d2d0;
		}
	_iter_next_1bbe5d2d0:;
	}
	_iter_end_1bbe5d2d0:;;
	return _53313_chain;;
}



inline jule::Ptr<_1ab19c8a4_Expr> _1abd063ca_buildCoCallSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _55536_tokens) {
	jule::Ptr<_1ab182e72_Token> _5569_token = _55536_tokens[0LL];;
	(_55536_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab19c8a4_Expr> _55813_e = _1abd1deb4_buildExpr((*(_self_))._field_p, &(_55536_tokens));;
	if ((_55813_e == nullptr)) {
		return _55813_e;;
	};
	{
		auto &_match_expr{ (*(_55813_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bbe62735:;
			{
				(*((*(_55813_e))._field_Kind.cast_ptr<_1ab1a15cd_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1bbe62ca7:;
			{
				_1abd00d31_pushErr(_self_, _5569_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1bbe62c52:;
	};
	return _55813_e;;
}



inline jule::Ptr<_1ab1a602d_GotoSt> _1abd0671b_buildGotoSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _57135_tokens) {
	jule::Ptr<_1ab1a602d_GotoSt> _57213_gt = jule::new_ptr<_1ab1a602d_GotoSt>(_1ab1a602d_GotoSt{._field_Token=(*(_57135_tokens))[0LL], });;
	if (((*(_57135_tokens)).len() == 1LL)) {
		_1abd00d31_pushErr(_self_, (*(_57213_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57135_tokens)).len() > 2LL)) {
		_1abd00d31_pushErr(_self_, (*(_57135_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1ab182e72_Token> _58113_identToken = (*(_57135_tokens))[1LL];;
	if (((*(_58113_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd00d31_pushErr(_self_, _58113_identToken, jule::Str::lit("invalid syntax", 14));
		_1abd01194_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57213_gt;;
	};
	(*(_57213_gt))._field_Label=_58113_identToken;
	return _57213_gt;;
}



inline jule::Ptr<_1ab1a632a_FallSt> _1abd06a5c_buildFallSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _59135_tokens) {
	jule::Ptr<_1ab1a632a_FallSt> _59213_fll = jule::new_ptr<_1ab1a632a_FallSt>(_1ab1a632a_FallSt{._field_Token=(*(_59135_tokens))[0LL]});;
	if (((*(_59135_tokens)).len() > 1LL)) {
		_1abd00d31_pushErr(_self_, (*(_59135_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59213_fll;;
}



inline jule::Ptr<_1ab1b008c_TypeAliasDecl> _1abd06d9d_buildTypeAliasSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _60140_tokens) {
	jule::Ptr<_1ab1b008c_TypeAliasDecl> _60213_tad = _1abd20757_buildTypeAliasDecl((*(_self_))._field_p, _60140_tokens);;
	(*(_60213_tad))._field_Scope=(*(_self_))._field_s;
	return _60213_tad;;
}



inline void _1abd07376_pushCaseExpr(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _60735_tokens, jule::Ptr<_1ab182e72_Token> _60757_token, jule::Bool _6089_typeMatch, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>* _60831_exprs) {
	if ((_60735_tokens.len() == 0LL)) {
		return;;
	};
	if (_6089_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1ab198570_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType((*(_self_))._field_p, &(_60735_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(jule::new_ptr<_1ab19c8a4_Expr>(_1ab19c8a4_Expr{._field_Token=_60735_tokens[0LL], ._field_End=_60735_tokens[(_60735_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60735_tokens.len())) {
				_1abd00d31_pushErr(_self_, _60735_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(_1abd1deb4_buildExpr((*(_self_))._field_p, &(_60735_tokens))); };
}



inline __jule_tuple_sx_1ab19c8a4_Expr__jule_tuple_bool _1abd0782c_buildCaseExprs(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _63038_tokens, jule::Ptr<_1ab182e72_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	__jule_tuple_sx_1ab19c8a4_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63213_braceN = 0LL;;
	jule::I64 _63313_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbe6dc3b:;
		if (it != expr_end) {
			jule::I64 _63414_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _63421_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63421_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bbe7080e:;
						{
							(_63213_braceN)++;
							goto _iter_next_1bbe6dc3b;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bbe70886:;
						{
							(_63213_braceN)--;
							goto _iter_next_1bbe6dc3b;
						}
					}
					_match_end_1bbe70743:;
				};
				if ((_63213_braceN != 0LL)) {
					goto _iter_next_1bbe6dc3b;
				};
				{
					
					if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1bbe71c3e:;
						{
							jule::Slice<jule::Ptr<_1ab182e72_Token>> _65317_exprTokens = (*(_63038_tokens)).slice(_63313_j, _63414_i);;
							if ((_65317_exprTokens.len() == 0LL)) {
								_1abd00d31_pushErr(_self_, _63421_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1abd07376_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63313_j=static_cast<jule::I64>((_63414_i + 1LL));
						}
					}
					else if (((*(_63421_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1bbe71cb6:;
						{
							(*(_63061_colon))=_63421_tok;
							_1abd07376_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63414_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63113_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63414_i - _63313_j) == 0LL) || (_63113_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1bbe71722:;
				};
			}
			_iter_next_1bbe6dc3b:;
			++it;
			_63414_i++;
			goto _iter_begin_1bbe6dc3b;
		}
		_iter_end_1bbe6dc3b:;
	};
	_1abd00d31_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd07b6d_buildCaseScope(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _67238_tokens) {
	jule::I64 _67313_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67517_i = 0LL;;
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _67617_next;;
			({
				__jule_tuple_sx_1ab182e72_Token__jule_tuple_bool __jule_assign_result = _1abceddc8_skipSt(&(_67517_i), (*(_67238_tokens)).slice(_67313_n));
				_67617_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67617_next.len() == 0LL)) {
				goto _iter_end_1bbe75a89;
			};
			jule::Ptr<_1ab182e72_Token> _68013_tok = _67617_next[0LL];;
			if (((*(_68013_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67313_n+=_67517_i;
				goto _iter_next_1bbe75a89;
			};
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _68517_scopeTokens = (*(_67238_tokens)).slice(0LL, _67313_n);;
			jule::Ptr<_1ab1a8591_ScopeTree> _68617_scope = _1abd01ace_buildScope(_self_, &(_68517_scopeTokens), (*(_67238_tokens))[_67313_n]);;
			((*(_67238_tokens))).mut_slice(_67313_n);;
			return _68617_scope;;
		}
	_iter_next_1bbe75a89:;
	}
	_iter_end_1bbe75a89:;;
	jule::Ptr<_1ab182e72_Token> _69017_end;;
	if (((*(_67238_tokens)).len() > 0LL)) {
		_69017_end=(*(_67238_tokens))[((*(_67238_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1ab1a8591_ScopeTree> _69413_scope = _1abd01ace_buildScope(_self_, _67238_tokens, _69017_end);;
	(*(_67238_tokens))=nullptr;
	return _69413_scope;;
}



inline __jule_tuple_x_1ab1b0543_Case__jule_tuple_bool _1abd08069_buildCase(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _69933_tokens, jule::Bool _69951_typeMatch) {
	__jule_tuple_x_1ab1b0543_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab1b0543_Case> _70013_c = jule::new_ptr<_1ab1b0543_Case>(_1ab1b0543_Case{._field_Token=(*(_69933_tokens))[0LL], });;
	((*(_69933_tokens))).mut_slice(1LL);;
	jule::Ptr<_1ab182e72_Token> _70417_colon = nullptr;;
	jule::Bool _70518_ok = false;;
	({
		__jule_tuple_sx_1ab19c8a4_Expr__jule_tuple_bool __jule_assign_result = _1abd0782c_buildCaseExprs(_self_, _69933_tokens, &(_70417_colon), _69951_typeMatch);
		(*(_70013_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70518_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_70013_c))._field_Scope=_1abd07b6d_buildCaseScope(_self_, _69933_tokens);
	if (((*((*(_70013_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70013_c))._field_Scope))._field_End=_70417_colon;
	};
	jule::Bool _7109_isDefault = (_70518_ok && ((*(_70013_c))._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _70013_c;
	__jule_func_result.__jule_result_arg1 = _7109_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ab1b0543_Case__jule_tuple_x_1ab1ae399_Else _1abd08465_buildCases(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _71433_tokens, jule::Bool _71451_typeMatch) {
	__jule_tuple_sx_1ab1b0543_Case__jule_tuple_x_1ab1ae399_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ab1b0543_Case>> _71517_cases = nullptr;;
	jule::Ptr<_1ab1ae399_Else> _71617_def = nullptr;;
	jule::Bool _71713_defNotLast = false;;
	while ((_71433_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ab182e72_Token> _71917_tok = _71433_tokens[0LL];;
			if (((*(_71917_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1abd00d31_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1bbe7dcb2;
			};
			jule::Ptr<_1ab1b0543_Case> _72417_c;;
			jule::Bool _72420_isDefault = false;;
			({
				__jule_tuple_x_1ab1b0543_Case__jule_tuple_bool __jule_assign_result = _1abd08069_buildCase(_self_, &(_71433_tokens), _71451_typeMatch);
				_72417_c = __jule_assign_result.__jule_result_arg0;
				_72420_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72420_isDefault) {
				(*(_72417_c))._field_Token=_71917_tok;
				if ((_71617_def == nullptr)) {
					_71617_def=jule::new_ptr<_1ab1ae399_Else>(_1ab1ae399_Else{._field_Token=(*(_72417_c))._field_Token, ._field_Scope=(*(_72417_c))._field_Scope});
				} else {
					_1abd00d31_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71713_defNotLast=(_71713_defNotLast || (_71617_def != nullptr));
				{ jule::Slice<jule::Ptr<_1ab1b0543_Case>> &__jule_push_dest = _71517_cases; __jule_push_dest.push(_72417_c); };
			};
		}
	_iter_next_1bbe7dcb2:;
	}
	_iter_end_1bbe7dcb2:;;
	if (_71713_defNotLast) {
		_1abd00d31_pushErr(_self_, (*(_71617_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71517_cases;
	__jule_func_result.__jule_result_arg1 = _71617_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1b0d5c_MatchCase> _1abd087a6_buildMatchCase(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _74837_tokens) {
	jule::Ptr<_1ab1b0d5c_MatchCase> _74913_m = jule::new_ptr<_1ab1b0d5c_MatchCase>(_1ab1b0d5c_MatchCase{._field_Token=_74837_tokens[0LL], });;
	(_74837_tokens).mut_slice(1LL);;
	if (((_74837_tokens.len() > 0LL) && ((*(_74837_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74913_m))._field_TypeMatch=true;
		(_74837_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _75913_exprTokens = _1abd182dd_getBlockExpr(&(_74837_tokens));;
	if ((_75913_exprTokens.len() > 0LL)) {
		(*(_74913_m))._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, &(_75913_exprTokens));
	} else if ((*(_74913_m))._field_TypeMatch) {
		_1abd00d31_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76613_i = _75913_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _76713_blockToks = _1abd1b511_range(&(_76613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74837_tokens));;
	if ((_76713_blockToks == nullptr)) {
		_1abd0021a_stop(_self_);
		_1abd00d31_pushErr(_self_, (*(_74913_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1abd01194_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76613_i < _74837_tokens.len())) {
		_1abd00d31_pushErr(_self_, _74837_tokens[_76613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_74913_m))._field_End=_74837_tokens[(_76613_i - 1LL)];
	({
		__jule_tuple_sx_1ab1b0543_Case__jule_tuple_x_1ab1ae399_Else __jule_assign_result = _1abd08465_buildCases(_self_, _76713_blockToks, (*(_74913_m))._field_TypeMatch);
		(*(_74913_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_74913_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74913_m;;
}



inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd08ae7_buildScopeSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _78135_tokens) {
	jule::Bool _78213_isUnsafe = false;;
	jule::Bool _78313_isDeferred = false;;
	jule::Ptr<_1ab182e72_Token> _78413_token = _78135_tokens[0LL];;
	if (((*(_78413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78213_isUnsafe=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1abd00d31_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78413_token=_78135_tokens[0LL];
		if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78313_isDeferred=true;
			(_78135_tokens).mut_slice(1LL);;
			if ((_78135_tokens.len() == 0LL)) {
				_1abd00d31_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78413_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78313_isDeferred=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1abd00d31_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81013_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _81113_scopeTokens = _1abd1b511_range(&(_81013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78135_tokens));;
	if ((_81113_scopeTokens == nullptr)) {
		_1abd00d31_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81013_i < _78135_tokens.len())) {
		_1abd00d31_pushErr(_self_, _78135_tokens[_81013_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1ab1a8591_ScopeTree> _81813_scope = _1abd01ace_buildScope(_self_, &(_81113_scopeTokens), _78135_tokens[(_81013_i - 1LL)]);;
	(*(_81813_scope))._field_Unsafety=_78213_isUnsafe;
	(*(_81813_scope))._field_Deferred=_78313_isDeferred;
	return _81813_scope;;
}



inline jule::Ptr<_1ab1a5b54_LabelSt> _1abd08e38_buildLabelSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _82436_tokens) {
	jule::Ptr<_1ab1a5b54_LabelSt> _82513_lbl = jule::new_ptr<_1ab1a5b54_LabelSt>(_1ab1a5b54_LabelSt{._field_Token=(*(_82436_tokens))[0LL], ._field_Ident=(*((*(_82436_tokens))[0LL]))._field_Kind});;
	if (((*(_82436_tokens)).len() > 2LL)) {
		((*(_82436_tokens))).mut_slice(2LL);;
		_1abd0144c_insertAsNext(_self_, _82436_tokens);
	};
	return _82513_lbl;;
}



inline __jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool _1abd09279_buildIdSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _83933_tokens) {
	__jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83933_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ab182e72_Token> _84413_token = (*(_83933_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84413_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1bbe94602:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1abd08e38_buildLabelSt(_self_, _83933_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bbe94e0a:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1abd19960_assignInfo> _1abd095ba_buildAssignInfo(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _85339_tokens) {
	jule::Ptr<_1abd19960_assignInfo> _85413_info = jule::new_ptr<_1abd19960_assignInfo>(_1abd19960_assignInfo{._field_ok=true});;
	jule::I64 _85713_braceN = 0LL;;
	{
		auto expr = _85339_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbe9655a:;
		if (it != expr_end) {
			jule::I64 _85814_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _85821_token = *it;
			{
				{
					auto &_match_expr{ (*(_85821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bbe973e6:;
						{
							(_85713_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bbe9746d:;
						{
							(_85713_braceN)--;
						}
					}
					_match_end_1bbe9732a:;
				};
				{
					
					if ((_85713_braceN > 0LL)) {
						_case_begin_1bbe982d7:;
						{
							goto _iter_next_1bbe9655a;
						}
					}
					else if (((!(_1ab187dcd_IsAssignOp((*(_85821_token))._field_Id))) && ((*(_85821_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1bbe9835e:;
						{
							goto _iter_next_1bbe9655a;
						}
					}
					_match_end_1bbe98260:;
				};
				(*(_85413_info))._field_l=(*(_85339_tokens)).slice(0LL, _85814_i);
				if (((*(_85413_info))._field_l.len() == 0LL)) {
					(*(_85413_info))._field_ok=false;
				};
				(*(_85413_info))._field_setter=_85821_token;
				if (((_85814_i + 1LL) >= (*(_85339_tokens)).len())) {
					(*(_85413_info))._field_r=nullptr;
					(*(_85413_info))._field_ok=_1ab187b14_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id);
					goto _iter_end_1bbe9655a;
				};
				(*(_85413_info))._field_r=(*(_85339_tokens)).slice((_85814_i + 1LL));
				if (_1ab187b14_IsPostfixOp((*((*(_85413_info))._field_setter))._field_Id)) {
					if (((*(_85413_info))._field_r.len() > 0LL)) {
						_1abd00d31_pushErr(_self_, (*(_85413_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85413_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1bbe9655a;
			}
			_iter_next_1bbe9655a:;
			++it;
			_85814_i++;
			goto _iter_begin_1bbe9655a;
		}
		_iter_end_1bbe9655a:;
	};
	return _85413_info;;
}



inline jule::Ptr<_1ab1a698a_AssignLeft> _1abd0990b_buildAssignL(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _89836_tokens) {
	jule::Ptr<_1ab1a698a_AssignLeft> _89913_l = jule::new_ptr<_1ab1a698a_AssignLeft>(_1ab1a698a_AssignLeft{._field_Token=(*(_89836_tokens))[0LL], });;
	if (((*((*(_89836_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89913_l))._field_Ident=(*((*(_89913_l))._field_Token))._field_Kind;
	};
	(*(_89913_l))._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, _89836_tokens);
	return _89913_l;;
}



inline jule::Slice<jule::Ptr<_1ab1a698a_AssignLeft>> _1abd09c4c_buildAssignLs(_1abceea99_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>* _90937_parts) {
	jule::Slice<jule::Ptr<_1ab1a698a_AssignLeft>> _91017_lefts = nullptr;;
	{
		auto expr = _90937_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbea0d7d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _91121_part = *it;
			{
				jule::Ptr<_1ab1a698a_AssignLeft> _91217_l = _1abd0990b_buildAssignL(_self_, &(_91121_part));;
				{ jule::Slice<jule::Ptr<_1ab1a698a_AssignLeft>> &__jule_push_dest = _91017_lefts; __jule_push_dest.push(_91217_l); };
			}
			_iter_next_1bbea0d7d:;
			++it;
			goto _iter_begin_1bbea0d7d;
		}
		_iter_end_1bbea0d7d:;
	};
	return _91017_lefts;;
}



inline __jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool _1abd0a08d_buildPlainAssign(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _91840_tokens) {
	__jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1abd19960_assignInfo> _91913_info = _1abd095ba_buildAssignInfo(_self_, _91840_tokens);;
	if ((!((*(_91913_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab1a701d_AssignSt> _92413_assign = jule::new_ptr<_1ab1a701d_AssignSt>(_1ab1a701d_AssignSt{._field_Setter=(*(_91913_info))._field_setter, });;
	if (((*((*(_91913_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92413_assign))._field_Declarative=true;
		(*(_92413_assign))._field_Right=_1abd1deb4_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
		jule::Bool _93213_ok = _1abd0a489_buildDeclAssign1(_self_, &((*(_91913_info))._field_l), &(_92413_assign));;
		if ((!(_93213_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		if (((*(_92413_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1ab1a698a_AssignLeft> _94017_left = (*(_92413_assign))._field_Left[0LL];;
		jule::Ptr<_1ab1ab3da_VarDecl> _94117_decl = jule::new_ptr<_1ab1ab3da_VarDecl>(_1ab1ab3da_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*(_92413_assign))._field_Setter, ._field_Ident=(*(_94017_left))._field_Ident, ._field_Mutable=(*(_94017_left))._field_Mutable, ._field_Reference=(*(_94017_left))._field_Reference, ._field_Expr=(*(_92413_assign))._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _95313_parts;;
	jule::Slice<_1a7d05a93_Log> _95320_errs;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(&((*(_91913_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92413_assign))._field_Left=_1abd09c4c_buildAssignLs(_self_, &(_95313_parts));
	if (((*(_91913_info))._field_r != nullptr)) {
		(*(_92413_assign))._field_Right=_1abd1deb4_buildExpr((*(_self_))._field_p, &((*(_91913_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1abd0a489_buildDeclAssign1(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _96740_lefts, jule::Ptr<_1ab1a701d_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _96913_parts;;
	jule::Slice<_1a7d05a93_Log> _96920_errs;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(_96740_lefts, static_cast<jule::U64>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_96920_errs);;
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbeacecd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1ab182e72_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1abd00d31_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1bbeacecd;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1abd00d31_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1bbeacecd;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1abd00d31_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1bbeacecd;
				};
				jule::Ptr<_1ab1a698a_AssignLeft> _100317_l = _1abd0990b_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*(_100317_l))._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1ab1a698a_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1bbeacecd:;
			++it;
			goto _iter_begin_1bbeacecd;
		}
		_iter_end_1bbeacecd:;
	};
	return true;;
}



inline __jule_tuple_x_1ab1a701d_AssignSt__jule_tuple_bool _1abd0a7ca_buildDeclAssign(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _101238_tokens) {
	__jule_tuple_x_1ab1a701d_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab182e72_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab1a701d_AssignSt> _102313_assign = jule::new_ptr<_1ab1a701d_AssignSt>(_1ab1a701d_AssignSt{._field_Declarative=true, });;
	jule::I64 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _102813_rang = _1abd1b511_range(&(_102713_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1abd00d31_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*(_102313_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1abd00d31_pushErr(_self_, (*(_102313_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1ab182e72_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*(_102313_assign))._field_Right=_1abd1deb4_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _1abd0a489_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool _1abd0ab1b_buildAssignSt(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _104637_tokens) {
	__jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1abd19d17_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bbebaea8:;
			{
				({
					__jule_tuple_x_1ab1a701d_AssignSt__jule_tuple_bool __jule_assign_result = _1abd0a7ca_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bbebaaac:;
			{
				({
					__jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool __jule_assign_result = _1abd0a08d_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bbebaa46:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab19d278_UseExpr> _1abd0ae5c_buildUseExpr(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1abd00d31_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1ab19d278_UseExpr> _106413_ue = jule::new_ptr<_1ab19d278_UseExpr>(_1ab19d278_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_1abd1deb4_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _1abd0b29d_buildConstSt(_1abceea99_scopeParser* _self_, jule::Ptr<_1abcee208_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1abd00d31_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1bbec071b:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1ab1ac034_Iter> _108017_iter = _1abd04e34_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*(_108017_iter))._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bbebe033:;
			{
				(*((*(_107236_st))))._field_tokens=(*((*(_107236_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1ab1b0d5c_MatchCase> _108717_mt = _1abd087a6_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*(_108717_mt))._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1bbec0100:;
			{
				return jule::Any(_1abd01e20_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1bbec0089:;
	};
}



inline jule::Any _1abd0b5de_buildSt(_1abceea99_scopeParser* _self_, jule::Ptr<_1abcee208_stmt>* _109731_st) {
	jule::Ptr<_1ab182e72_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _110017_s = jule::Any(nullptr);;
		jule::Bool _110020_ok = false;;
		({
			__jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool __jule_assign_result = _1abd09279_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s = jule::Any(nullptr);;
	jule::Bool _110616_ok = false;;
	({
		__jule_tuple__1ab1a7bcd_StmtData__jule_tuple_bool __jule_assign_result = _1abd0ab1b_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bbec5cc6:;
			{
				return jule::Any(_1abd0ae5c_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1bbec6326:;
			{
				return _1abd0b29d_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bbec64e1:;
			{
				return jule::Any(_1abd01e20_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1bbec6557:;
			{
				return jule::Any(_1abd02261_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1bbec65bd:;
			{
				return jule::Any(_1abd04e34_buildIterSt(_self_, _109731_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bbec6634:;
			{
				return jule::Any(_1abd05275_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1bbec669a:;
			{
				return jule::Any(_1abd055b6_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1bbec6722:;
			{
				return jule::Any(_1abd06089_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bbec6799:;
			{
				return jule::Any(_1abd063ca_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1bbec6821:;
			{
				return jule::Any(_1abd0671b_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1bbec6898:;
			{
				return jule::Any(_1abd06a5c_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bbec6920:;
			{
				return jule::Any(_1abd06d9d_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bbec6997:;
			{
				return jule::Any(_1abd087a6_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bbec6a1e:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1bbec6139;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1abd08ae7_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bbec6a96:;
			{
				return jule::Any(_1abd08ae7_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bbec6b1d:;
			{
				return jule::Any(_1abd08ae7_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1bbec6139:;
	};
	jule::Ptr<_1ab19c8a4_Expr> _115313_expr = _1abd1deb4_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type52);;
	};
	_1abd00d31_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1abd0b952_build(_1abceea99_scopeParser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _116129_tokens, jule::Ptr<_1ab1a8591_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1abcee5b0_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1abd009bd_isLastSt(_self_))) && (!(_1abd00737_finished(_self_))))) {
		{
			jule::Ptr<_1abcee208_stmt> _116917_st = _1abd016d3_next(_self_);;
			jule::Any _117017_data = _1abd0b5de_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				{ jule::Slice<_1ab1a7e31_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1ab1a7e31_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}); };
			};
			if (_1abd004a1_stopped(_self_)) {
				goto _iter_end_1bbed2d05;
			};
		}
	_iter_next_1bbed2d05:;
	}
	_iter_end_1bbed2d05:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abceea99_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1abd0cca5_pushErr(_1abd0c4be_exprBuilder* _self_, jule::Ptr<_1ab182e72_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1abd1d810_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1abd0d118_pushSuggestion(_1abd0c4be_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1abd1db73_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1ab19d575_TupleExpr> _1abd0d459_buildTuple(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>* _5434_parts) {
	jule::Ptr<_1ab19d575_TupleExpr> _5513_tuple = jule::new_ptr<_1ab19d575_TupleExpr>(_1ab19d575_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adae85a5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1abd1784d_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1adae85a5:;
			++it;
			goto _iter_begin_1adae85a5;
		}
		_iter_end_1adae85a5:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1ab19d94e_LitExpr> _1abd0d79a_buildLit(_1abd0c4be_exprBuilder* _self_, jule::Ptr<_1ab182e72_Token> _6427_token) {
	return jule::new_ptr<_1ab19d94e_LitExpr>(_1ab19d94e_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1abd0de2c_buildSingle(_1abd0c4be_exprBuilder* _self_, jule::Ptr<_1ab182e72_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1adaea750:;
			{
				return jule::Any(_1abd0d79a_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1adaea7c7:;
			{
				return jule::Any(jule::new_ptr<_1ab19ed3a_VariadicExpr>(_1ab19ed3a_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1adaea84e:;
			{
				return jule::Any(_1abd18c39_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1adaea673:;
	};
	_1abd0cca5_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab19e2ce_IdentExpr> _1abd0e26d_buildBindIdent(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1abd0cca5_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab182e72_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd0cca5_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab19e2ce_IdentExpr> _10613_expr = _1abd18c39_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1ab19e961_UnaryExpr> _1abd0e5ae_buildUnary(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _11133_tokens) {
	jule::Ptr<_1ab182e72_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1abd0cca5_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ab1836ae_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1abd0cca5_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1ab19e961_UnaryExpr>(_1ab19e961_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1abd1784d_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1ab1a09b7_SubIdentExpr> _1abd0e900_buildObjSubIdent(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1ab182e72_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1abd0cca5_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab1a09b7_SubIdentExpr>(_1ab1a09b7_SubIdentExpr{._field_Expr=_1abd1784d_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1ab1a05dd_NsSelectionExpr> _1abd0ec41_buildNsSubIdent(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _14739_tokens) {
	jule::Ptr<_1ab1a05dd_NsSelectionExpr> _14813_ns = jule::new_ptr<_1ab1a05dd_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*(_14813_ns))._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*(_14813_ns))._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adb0764c:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1ab182e72_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1abd0cca5_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1abd0d118_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						{ jule::Slice<jule::Ptr<_1ab182e72_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_15425_token); };
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1abd0cca5_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1abd0d118_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1adb0764c:;
				++it;
				_15418_i++;
				goto _iter_begin_1adb0764c;
			}
			_iter_end_1adb0764c:;
		};
		(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
		(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd10082_buildType(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1ab198570_TypeDecl> _17413_t;;
	jule::Bool _17416_ok = false;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1abd0cca5_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1abd0cca5_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1abd103c3_buildSubIdent(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1ab182e72_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1adb0e8b8:;
			{
				return jule::Any(_1abd0e900_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1adb0eec3:;
			{
				return jule::Any(_1abd0ec41_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1adb10039:;
			{
				return jule::Any(_1abd10082_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1adb0edb3:;
	};
	_1abd0cca5_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ab19ed3a_VariadicExpr> _1abd10714_buildVariadic(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _20236_tokens) {
	jule::Ptr<_1ab182e72_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1ab19ed3a_VariadicExpr>(_1ab19ed3a_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1abd1784d_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1ab19cba1_RangeExpr> _1abd10a55_buildBetweenParentheses(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1abd0cca5_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1ab19cba1_RangeExpr>(_1ab19cba1_RangeExpr{._field_Expr=_1abd1784d_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1ab1a0214_CastExpr> _1abd10d96_tryBuildCast(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb150c7:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1adb15db9:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1adb150c7;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1adb15e41:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1adb15ced:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1adb150c7;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ab182e72_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1ab182e72_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ab182e72_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1ab1a0214_CastExpr> _25717_cast = jule::new_ptr<_1ab1a0214_CastExpr>(_1ab1a0214_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1abd0cca5_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1abd0d118_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1abd0cca5_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1abd0d118_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1ab198570_TypeDecl> _27221_t;;
					jule::Bool _27224_ok = false;;
					({
						__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1abd0cca5_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1abd1b511_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*(_25717_cast))._field_Expr=_1abd1784d_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1adb150c7:;
			++it;
			_22513_i++;
			goto _iter_begin_1adb150c7;
		}
		_iter_end_1adb150c7:;
	};
	return nullptr;;
}



inline void _1abd112b4_pushArg(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1ab182e72_Token>> _29750_tokens, jule::Ptr<_1ab182e72_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1abd0cca5_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1abd1784d_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _1abd11605_buildArgs(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb2304c:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1adb2412a:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1adb241a2:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1adb2405e:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1adb2304c;
				};
				_1abd112b4_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=static_cast<jule::I64>((_31613_i + 1LL));
			}
			_iter_next_1adb2304c:;
			++it;
			_31613_i++;
			goto _iter_begin_1adb2304c;
		}
		_iter_end_1adb2304c:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1abd112b4_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1abd112b4_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1ab1a15cd_FnCallExpr> _1abd11dec_buildFnCall(_1abd0c4be_exprBuilder* _self_, jule::Ptr<_1ab182e72_Token>* _37235_token, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _37276_args) {
	return jule::new_ptr<_1ab1a15cd_FnCallExpr>(_1ab1a15cd_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1abd1784d_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1abd11605_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1abd1223d_buildParenthesesRange(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _38045_tokens) {
	jule::Ptr<_1ab182e72_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1ab1a0214_CastExpr> _38317_expr = _1abd10d96_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token __jule_assign_result = _1abd1b7ca_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1abd10a55_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1abd11dec_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1ab19dd28_UnsafeExpr> _1abd1257e_buildUnsafeExpr(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _39738_tokens) {
	jule::Ptr<_1ab182e72_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _40113_rangeTokens = _1abd1b511_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1abd0cca5_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab19dd28_UnsafeExpr>(_1ab19dd28_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1abd1784d_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1ab1aa230_FnDecl> _1abd128c0_buildAnonFn(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _41235_tokens) {
	jule::Ptr<_1ab1aa230_FnDecl> _41313_f = _1abd24a58_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1ab1aa593_IsAnon(_41313_f.ptr())))) {
		_1abd0cca5_pushErr(_self_, (*(_41313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1abd12c11_buildUnsafe(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1adb34cb7:;
			{
				return jule::Any(_1abd128c0_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1adb352e5:;
			{
				return jule::Any(_1abd1257e_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1adb35229:;
	};
}



inline void _1abd1312e_pushRangeLitPart(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _43139_part, jule::Ptr<_1ab182e72_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1abd0cca5_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd13470_getBraceRangeLitExprParts(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb38e20:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1adb39eed:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1adb3a075:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1adb39e32:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1adb38e20;
				};
				_1abd1312e_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=static_cast<jule::I64>((_45313_i + 1LL));
			}
			_iter_next_1adb38e20:;
			++it;
			_45313_i++;
			goto _iter_begin_1adb38e20;
		}
		_iter_end_1adb38e20:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1abd1312e_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1abd1312e_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1ab1a20c3_FieldExprPair> _1abd137b1_buildFieldExprPair(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1abd0cca5_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1a20c3_FieldExprPair> _48913_pair = jule::new_ptr<_1ab1a20c3_FieldExprPair>(_1ab1a20c3_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1abd1784d_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1ab19c8a4_Expr> _1abd13b02_buildStructLitExpr(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _49742_tokens) {
	jule::Ptr<_1ab182e72_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*(_49813_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1ab19c8a4_Expr>(_1ab19c8a4_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1abd137b1_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1abd1784d_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _1abd13e43_buildStructLitExprs(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _51313_parts = _1abd13470_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb435de:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1abd13b02_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1adb435de:;
			++it;
			goto _iter_begin_1adb435de;
		}
		_iter_end_1adb435de:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1ab1a28ed_StructLit> _1abd14284_buildTypedStructLiteral(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1ab198570_TypeDecl> _52713_t;;
	jule::Bool _52716_ok = false;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1abd0cca5_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1ab182e72_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1abd0cca5_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab1a28ed_StructLit>(_1ab1a28ed_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1abd13e43_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1ab19c8a4_Expr> _1abd145c5_buildBraceLitPart(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _55020_r;;
	({
		__jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token __jule_assign_result = _1abd186a6_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1ab19c8a4_Expr>(_1ab19c8a4_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ab1a36ce_KeyValPair>(_1ab1a36ce_KeyValPair{._field_Key=_1abd1784d_buildFromTokens(_self_, _55013_l), ._field_Val=_1abd1784d_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1abd1784d_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1ab1a2da4_BraceLit> _1abd14916_buildBraceLit(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _56637_tokens) {
	jule::Ptr<_1ab1a2da4_BraceLit> _56713_lit = jule::new_ptr<_1ab1a2da4_BraceLit>(_1ab1a2da4_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _57213_parts = _1abd13470_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc02c019:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _57821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = (*(_56713_lit))._field_Exprs; __jule_push_dest.push(_1abd145c5_buildBraceLitPart(_self_, &(_57821_part))); };
			}
			_iter_next_1bc02c019:;
			++it;
			goto _iter_begin_1bc02c019;
		}
		_iter_end_1bc02c019:;
	};
	return _56713_lit;;
}



inline jule::Any _1abd14c57_buildBraceRange(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN = 0;;
	({
		__jule_tuple_sx_1ab182e72_Token__jule_tuple_int __jule_assign_result = _1abd19003_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1bc02cba7:;
			{
				return jule::Any(_1abd14916_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1bc02d8ab:;
			{
				_1abd0cca5_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc02ccb7:;
	};
	jule::Ptr<_1ab182e72_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1abd171bb_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1bc031a9b:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1ab182e72_Token>> _60821_rangeTokens = _1abd1b511_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1ab1a15cd_FnCallExpr> _60921_model = _60017_d.cast_ptr<_1ab1a15cd_FnCallExpr>(&__jule_any_type107);;
					if (_1ab1a1bd8_Ignored(_60921_model.ptr())) {
						_1abd0cca5_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1abd0d118_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60921_model))._field_Exception=_1abd1e9a9_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1bc03156d:;
				{
					_1abd0cca5_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1bc031518:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bc035a39:;
			{
				return _1abd12c11_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bc036166:;
			{
				return jule::Any(_1abd128c0_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bc0361cc:;
			{
				return jule::Any(_1abd14284_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1bc032052:;
			{
				_1abd0cca5_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc03551c:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd15098_getEnumerableParts(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _63913_parts;;
	jule::Slice<_1a7d05a93_Log> _63920_errors;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63920_errors);;
	return _63913_parts;;
}



inline jule::Ptr<_1ab1a3dc7_SliceExpr> _1abd153d9_buildSlice(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _64433_tokens) {
	jule::Ptr<_1ab1a3dc7_SliceExpr> _64513_slc = jule::new_ptr<_1ab1a3dc7_SliceExpr>(_1ab1a3dc7_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _65013_parts = _1abd15098_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1ab19c8a4_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc03aec3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1bc03aec3;
				};
				{ jule::Slice<jule::Ptr<_1ab19c8a4_Expr>> &__jule_push_dest = (*(_64513_slc))._field_Exprs; __jule_push_dest.push(_1abd1784d_buildFromTokens(_self_, _65621_p)); };
			}
			_iter_next_1bc03aec3:;
			++it;
			goto _iter_begin_1bc03aec3;
		}
		_iter_end_1bc03aec3:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1ab1a4867_IndexingExpr> _1abd15890_buildIndexing(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1ab182e72_Token>> _66713_tokens, jule::Ptr<_1ab182e72_Token> _66735_errorToken) {
	jule::Ptr<_1ab182e72_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1abd0cca5_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab19c8a4_Expr> _67413_expr = _1abd1784d_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab19c8a4_Expr> _67813_index = _1abd1784d_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab1a4867_IndexingExpr>(_1ab1a4867_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1ab1a4ec7_SlicingExpr> _1abd15eab_buildSlicing(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _69063_start, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _69114_to, jule::Ptr<_1ab182e72_Token>* _69133_errorToken, jule::Ptr<_1ab182e72_Token> _69157_end) {
	jule::Ptr<_1ab1a4ec7_SlicingExpr> _69213_slc = jule::new_ptr<_1ab1a4ec7_SlicingExpr>(_1ab1a4ec7_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1abd1784d_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1abd1784d_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*(_69213_slc))._field_To=_1abd1784d_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1abd162ec_buildBracketRange(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _70640_tokens) {
	jule::Ptr<_1ab182e72_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN = 0;;
	({
		__jule_tuple_sx_1ab182e72_Token__jule_tuple_int __jule_assign_result = _1abd19003_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1abd153d9_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_1abd0cca5_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _72424_to;;
	({
		__jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token __jule_assign_result = _1abd186a6_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1abd15eab_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1abd15890_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _1abd1663d_buildExclRight(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _73138_tokens) {
	jule::Ptr<_1ab182e72_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1abd171bb_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bc048a19:;
			{
				(*(_73413_d.cast_ptr<_1ab1a15cd_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1ab1a8591_ScopeTree>(_1ab1a8591_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1bc048794:;
	};
	_1abd0cca5_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1abd1697e_buildData(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bc04a1d0:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bc04a246:;
			{
				return _1abd0de2c_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bc04a2bd:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1abd0e26d_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1bc049ee3:;
	};
	jule::Ptr<_1ab182e72_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1abd10714_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1ab1836ae_IsUnaryOp((*(_76113_token))._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*(_76113_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1abd10082_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1abd0e5ae_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1bc04e9cb:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1ab182e72_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1bc04e921;
						};
					};
					jule::Ptr<_1ab182e72_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1bc04e921;
					};
					return jule::Any(_1abd10082_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1bc04e921:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bc052a12:;
			{
				return _1abd103c3_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1bc052a78:;
			{
				return _1abd1663d_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1bc052ade:;
			{
				return _1abd1223d_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bc052b55:;
			{
				return _1abd14c57_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bc052bcc:;
			{
				return _1abd162ec_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bc052c54:;
			{
				return jule::Any(_1abd10082_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1bc052935:;
	};
	_1abd0cca5_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1abd16d7a_buildBinary(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _82135_tokens, jule::I64 _82153_i) {
	jule::Ptr<_1ab182e72_Token> _82213_op = (*(_82135_tokens))[_82153_i];;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _82313_leftTokens = (*(_82135_tokens)).slice(0LL, _82153_i);;
	if ((_1abd17c16_isTypeOp(&((*(_82213_op))._field_Id)) && _1abd18024_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1abd10082_buildType(_self_, _82135_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _82813_rightTokens = (*(_82135_tokens)).slice((_82153_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1abd0cca5_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1abd0cca5_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd0d118_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ab1a0e6d_BinaryExpr>(_1ab1a0e6d_BinaryExpr{._field_Left=_1abd1784d_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1abd1784d_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1abd171bb_build(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1abd10082_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _1abd18970_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1abd1697e_buildData(_self_, _84629_tokens);;
	};
	return _1abd16d7a_buildBinary(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1abd1750c_buildKind(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _85813_parts;;
	jule::Slice<_1a7d05a93_Log> _85820_errors;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85820_errors);;
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1abd0d459_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1abd171bb_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1ab19c8a4_Expr> _1abd1784d_buildFromTokens(_1abd0c4be_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1abd1750c_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab19c8a4_Expr>(_1ab19c8a4_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd0c4be_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd19960_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1abd1d15b_stop(_1abd1cd5e_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1abd1d3e2_stopped(_1abd1cd5e_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1abd1d810_pushErr(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab182e72_Token> _22426_token, jule::Str _22441_fmt, jule::Slice<jule::Any> _22454_args) {
	{ jule::Slice<_1a7d05a93_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1abd1c479_compilerErr(&(_22426_token), &(_22441_fmt), _22454_args)); };
}



inline void _1abd1db73_pushSuggestion(_1abd1cd5e_parser* _self_, jule::Str _22933_fmt, jule::Slice<jule::Any> _22946_args) {
	{
		_1abd1c820_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _22933_fmt, _22946_args);
	};
}



inline jule::Ptr<_1ab19c8a4_Expr> _1abd1deb4_buildExpr(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _23334_tokens) {
	return _1abd1784d_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_23334_tokens)));;
}



inline jule::Ptr<_1ab19798c_Directive> _1abd1e305_buildDirective(_1abd1cd5e_parser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _23737_tokens) {
	if ((_23737_tokens.len() == 1LL)) {
		_1abd1d810_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_23737_tokens[1LL]))._field_Column != ((*(_23737_tokens[0LL]))._field_Column + 1LL))) {
		_1abd1d810_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab19798c_Directive>(_1ab19798c_Directive{._field_Tag=_23737_tokens[1LL], ._field_Args=_23737_tokens.slice(2LL)});;
}



inline void _1abd1e5ad_pushDirective(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab19798c_Directive> _25236_d) {
	if ((_25236_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0806cc:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _25716_pd = *it;
			{
				if (((*((*(_25236_d))._field_Tag))._field_Kind == (*((*(_25716_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1bc0806cc:;
			++it;
			goto _iter_begin_1bc0806cc;
		}
		_iter_end_1bc0806cc:;
	};
	{ jule::Slice<jule::Ptr<_1ab19798c_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_25236_d); };
}



inline jule::Ptr<_1ab1a8591_ScopeTree> _1abd1e9a9_buildScope(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _26535_tokens, jule::Ptr<_1ab182e72_Token> _26557_end) {
	jule::Ptr<_1ab1a8591_ScopeTree> _26613_s = _1abcece82_newScope();;
	(*(_26613_s))._field_End=_26557_end;
	_1abceea99_scopeParser _26813_sp = _1abceea99_scopeParser{._field_p=_self_, };;
	_1abd0b952_build(&_26813_sp, _26535_tokens, &(_26613_s));
	return _26613_s;;
}



inline __jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool _1abd1ee60__buildType(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _27542_tokens, jule::I64* _27613_i, jule::Bool _27622_err) {
	__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1abd3003b_typeBuilder _27713_tb = _1abd3003b_typeBuilder{._field_p=_self_, ._field_tokens=(*(_27542_tokens)), ._field_i=_27613_i, ._field_err=_27622_err};;
	jule::Ptr<_1ab198570_TypeDecl> _28313_decl;;
	jule::Bool _28319_ok = false;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd3301c_build(&_27713_tb);
		_28313_decl = __jule_assign_result.__jule_result_arg0;
		_28319_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _28313_decl;
	__jule_func_result.__jule_result_arg1 = _28319_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool _1abd20416_buildType(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _28841_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab182e72_Token> _2909_token = (*(_28841_tokens))[(*(_28913_i))];;
	jule::Ptr<_1ab198570_TypeDecl> _29113_t;;
	jule::Bool _29116_ok = false;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd1ee60__buildType(_self_, _28841_tokens, _28913_i, _28922_err);
		_29113_t = __jule_assign_result.__jule_result_arg0;
		_29116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_28922_err && (!(_29116_ok)))) {
		_1abd1d810_pushErr(_self_.ptr(), _2909_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _29113_t;
	__jule_func_result.__jule_result_arg1 = _29116_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1b008c_TypeAliasDecl> _1abd20757_buildTypeAliasDecl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _29843_tokens) {
	jule::I64 _29913_i = 1LL;;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1b008c_TypeAliasDecl> _30413_tad = jule::new_ptr<_1ab1b008c_TypeAliasDecl>(_1ab1b008c_TypeAliasDecl{._field_Token=(*(_29843_tokens))[1LL], ._field_Ident=(*((*(_29843_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1ab182e72_Token> _30813_token = (*(_29843_tokens))[_29913_i];;
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), _30813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	_30813_token=(*(_29843_tokens))[_29913_i];
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	jule::Ptr<_1ab198570_TypeDecl> _32913_t;;
	jule::Bool _32916_ok = false;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, _29843_tokens, (&(_29913_i)), true);
		_32913_t = __jule_assign_result.__jule_result_arg0;
		_32916_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_30413_tad))._field_Kind=_32913_t;
	if ((_32916_ok && (_29913_i < (*(_29843_tokens)).len()))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_29843_tokens))[_29913_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_30413_tad))._field_Public=_1ab260093_IsPub((*(_30413_tad))._field_Ident);
	return _30413_tad;;
}



inline void _1abd20aba_buildVarTypeAndExpr(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab1ab3da_VarDecl>* _33844_v, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _33862_tokens) {
	jule::I64 _33913_i = 0LL;;
	jule::Ptr<_1ab182e72_Token> _34013_tok = (*(_33862_tokens))[_33913_i];;
	if (((*(_34013_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_33913_i)++;
		if (((_33913_i >= (*(_33862_tokens)).len()) || ((*((*(_33862_tokens))[_33913_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1abd1d810_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ab198570_TypeDecl> _34717_t;;
		jule::Bool _34720_ok = false;;
		({
			__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, _33862_tokens, (&(_33913_i)), true);
			_34717_t = __jule_assign_result.__jule_result_arg0;
			_34720_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_34720_ok) {
			(*((*(_33844_v))))._field_Kind=_34717_t;
			if ((_33913_i >= (*(_33862_tokens)).len())) {
				return;;
			};
			_34013_tok=(*(_33862_tokens))[_33913_i];
		};
	};
	if (((*(_34013_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Setter=_34013_tok;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _36313_exprTokens = (*(_33862_tokens)).slice((_33913_i + 1LL));;
	if ((_36313_exprTokens.len() == 0LL)) {
		_1abd1d810_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Expr=_1abd1deb4_buildExpr(_self_, &(_36313_exprTokens));
}



inline void _1abd20e2d_buildVarCommon(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab1ab3da_VarDecl>* _37139_v, jule::Slice<jule::Ptr<_1ab182e72_Token>> _37156_tokens) {
	(*((*(_37139_v))))._field_Token=_37156_tokens[0LL];
	if (((*((*((*(_37139_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*((*(_37139_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_37139_v))))._field_Ident=(*((*((*(_37139_v))))._field_Token))._field_Kind;
	(*((*(_37139_v))))._field_Public=_1ab260093_IsPub((*((*(_37139_v))))._field_Ident);
	(*((*(_37139_v))))._field_Kind=nullptr;
	if ((_37156_tokens.len() > 1LL)) {
		(_37156_tokens).mut_slice(1LL);;
		_1abd20aba_buildVarTypeAndExpr(_self_, _37139_v, &(_37156_tokens));
	};
}



inline void _1abd2134b_buildVarBegin(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1ab3da_VarDecl>* _38737_v, jule::I64* _38755_i, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _38764_tokens) {
	jule::Ptr<_1ab182e72_Token> _3889_tok = (*(_38764_tokens))[(*(_38755_i))];;
	{
		auto &_match_expr{ (*(_3889_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bc09b187:;
			{
				(*((*(_38737_v))))._field_Statically=true;
				goto _case_begin_1bc09b61b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bc09b61b:;
			{
				((*(_38755_i)))++;
				if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
					_1abd1d810_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_38764_tokens))[(*(_38755_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_38737_v))))._field_Mutable=true;
					((*(_38755_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1bc09ad57:;
			{
				((*(_38755_i)))++;
				(*((*(_38737_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1bc09ace1:;
			{
				_1abd1d810_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bc09ac8b:;
	};
	if (((*(_38755_i)) >= (*(_38764_tokens)).len())) {
		_1abd1d810_pushErr(_self_, _3889_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd2168c_buildVar(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _41732_tokens) {
	jule::I64 _41813_i = 0LL;;
	jule::Ptr<_1ab1ab3da_VarDecl> _41913_v = jule::new_ptr<_1ab1ab3da_VarDecl>(_1ab1ab3da_VarDecl{._field_Token=_41732_tokens[0LL], });;
	_1abd2134b_buildVarBegin(_self_.ptr(), &(_41913_v), &(_41813_i), &(_41732_tokens));
	if ((_41813_i >= _41732_tokens.len())) {
		return nullptr;;
	};
	(_41732_tokens).mut_slice(_41813_i);;
	if (((*(_41732_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_41913_v))._field_Reference=true;
		if ((_41732_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_41732_tokens).mut_slice(1LL);;
	};
	_1abd20e2d_buildVarCommon(_self_, &(_41913_v), _41732_tokens);
	return _41913_v;;
}



inline jule::Ptr<_1ab1a577a_GenericDecl> _1abd219cd_buildGeneric(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _43937_tokens) {
	jule::Ptr<_1ab1a577a_GenericDecl> _44013_g = jule::new_ptr<_1ab1a577a_GenericDecl>(_1ab1a577a_GenericDecl{._field_Token=(*(_43937_tokens))[0LL], });;
	if (((*((*(_44013_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_44013_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_44013_g))._field_Ident=(*((*(_44013_g))._field_Token))._field_Kind;
	if (((*(_43937_tokens)).len() > 1LL)) {
		if (((*((*(_43937_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_43937_tokens)).len() == 2LL)) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_43937_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ab182e72_Token>> _45717_constraintTokens = (*(_43937_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _45817_parts;;
		jule::Slice<_1a7d05a93_Log> _45824_errors;;
		({
			__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(&(_45717_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_45817_parts = __jule_assign_result.__jule_result_arg0;
			_45824_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_45824_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_45824_errors);;
			return nullptr;;
		};
		(*(_44013_g))._field_Constraint=jule::new_ptr<_1ab1a52c4_Constraint>(_1ab1a52c4_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>::alloc(0LL, _45817_parts.len())});
		{
			auto expr = &(_45817_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc0a7db9:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ab182e72_Token>> _46425_part = *it;
				{
					jule::I64 _46521_i = 0LL;;
					jule::Ptr<_1ab198570_TypeDecl> _46621_kind;;
					({
						__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, &(_46425_part), (&(_46521_i)), true);
						_46621_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*((*(_44013_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_46621_kind); };
					if ((_46521_i < _46425_part.len())) {
						_1abd1d810_pushErr(_self_.ptr(), _46425_part[_46521_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bc0a7db9:;
				++it;
				goto _iter_begin_1bc0a7db9;
			}
			_iter_end_1bc0a7db9:;
		};
	};
	return _44013_g;;
}



inline jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _1abd21dc9_buildGenerics(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _47638_tokens, jule::Ptr<_1ab182e72_Token>* _47657_errorToken) {
	if (((*(_47638_tokens)).len() == 0LL)) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_47657_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _48213_parts;;
	jule::Slice<_1a7d05a93_Log> _48220_errors;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(_47638_tokens, static_cast<jule::U64>(5LLU), true);
		_48213_parts = __jule_assign_result.__jule_result_arg0;
		_48220_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_48220_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_48220_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> _48813_generics = jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>::alloc(0LL, _48213_parts.len());;
	{
		auto expr = &(_48213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0ac83b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _48921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>> &__jule_push_dest = _48813_generics; __jule_push_dest.push(_1abd219cd_buildGeneric(_self_, &(_48921_part))); };
			}
			_iter_next_1bc0ac83b:;
			++it;
			goto _iter_begin_1bc0ac83b;
		}
		_iter_end_1bc0ac83b:;
	};
	return _48813_generics;;
}



inline jule::Ptr<_1ab1a8ccd_ParamDecl> _1abd2221a_buildSelfParam(_1abd1cd5e_parser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _49637_tokens) {
	if ((_49637_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ab1a8ccd_ParamDecl> _50113_param = jule::new_ptr<_1ab1a8ccd_ParamDecl>();;
	jule::I64 _50413_i = 0LL;;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_50113_param))._field_Mutable=true;
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1abd1d810_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_1a7c4c7ed_StrBuilder _51413_ident = static__1a7c4cb1c_New(5LL);;
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1a7c573c9_WriteStr(&_51413_ident, jule::Str::lit("&", 1));
		(_50413_i)++;
		if ((_50413_i >= _49637_tokens.len())) {
			_1abd1d810_pushErr(_self_, _49637_tokens[(_50413_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_49637_tokens[_50413_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1a7c573c9_WriteStr(&_51413_ident, jule::Str::lit("self", 4));
		(*(_50113_param))._field_Token=_49637_tokens[_50413_i];
		(_50413_i)++;
		if ((_50413_i < _49637_tokens.len())) {
			_1abd1d810_pushErr(_self_, _49637_tokens[_50413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_50113_param))._field_Ident=_1a7c57bc1_Str(&_51413_ident);
	return _50113_param;;
}



inline void _1abd22638_paramTypeBegin(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1a8ccd_ParamDecl>* _53838_param, jule::I64* _53862_i, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _53871_tokens) {
	for (; ((*(_53862_i)) < (*(_53871_tokens)).len()); ((*(_53862_i)))++) {
		{
			jule::Ptr<_1ab182e72_Token> _54013_token = (*(_53871_tokens))[(*(_53862_i))];;
			if (((*(_54013_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_53838_param))))._field_Variadic) {
				_1abd1d810_pushErr(_self_, _54013_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1bc0b5aa8;
			};
			(*((*(_53838_param))))._field_Variadic=true;
		}
	_iter_next_1bc0b5aa8:;
	}
	_iter_end_1bc0b5aa8:;;
}



inline void _1abd2299b_buildParamType(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab1a8ccd_ParamDecl>* _55339_param, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _55363_tokens) {
	jule::I64 _55413_i = 0LL;;
	_1abd22638_paramTypeBegin(_self_.ptr(), _55339_param, &(_55413_i), _55363_tokens);
	if ((_55413_i >= (*(_55363_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, _55363_tokens, (&(_55413_i)), true);
		(*((*(_55339_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_55413_i < (*(_55363_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_55363_tokens))[_55413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1abd22d0e_buildParamBody(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab1a8ccd_ParamDecl>* _56639_param, jule::Slice<jule::Ptr<_1ab182e72_Token>> _56662_tokens) {
	jule::Ptr<_1ab182e72_Token> _56713_tok = _56662_tokens[0LL];;
	if ((_56662_tokens.len() == 1LL)) {
		(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
		return;;
	} else if ((_56662_tokens.len() < 3LL)) {
		_1abd1d810_pushErr(_self_.ptr(), _56713_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_56662_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_56639_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1abd2299b_buildParamType(_self_, _56639_param, &(_56662_tokens));
		return;;
	};
	(*((*(_56639_param))))._field_Ident=(*(_56713_tok))._field_Kind;
	(_56662_tokens).mut_slice(2LL);;
	_1abd2299b_buildParamType(_self_, _56639_param, &(_56662_tokens));
}



inline jule::Ptr<_1ab1a8ccd_ParamDecl> _1abd23150_buildParam(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _58634_tokens) {
	jule::Ptr<_1ab1a8ccd_ParamDecl> _58713_param = jule::new_ptr<_1ab1a8ccd_ParamDecl>(_1ab1a8ccd_ParamDecl{._field_Token=_58634_tokens[0LL], });;
	if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_58713_param))._field_Mutable=true;
		if ((_58634_tokens.len() == 1LL)) {
			_1abd1d810_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_58634_tokens).mut_slice(1LL);;
		(*(_58713_param))._field_Token=_58634_tokens[0LL];
	};
	if ((_58634_tokens.len() >= 3LL)) {
		if (((*((*(_58713_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_58634_tokens.len() == 1LL)) {
				_1abd1d810_pushErr(_self_.ptr(), _58634_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_58634_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_58634_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_58713_param))._field_Reference=true;
				(_58634_tokens).mut_slice(1LL);;
				(*(_58713_param))._field_Token=_58634_tokens[0LL];
			};
		};
	};
	if (((*((*(_58713_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_58713_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1abd2299b_buildParamType(_self_, &(_58713_param), &(_58634_tokens));
	} else {
		_1abd22d0e_buildParamBody(_self_, &(_58713_param), _58634_tokens);
	};
	return _58713_param;;
}



inline void _1abd23408_checkParams(_1abd1cd5e_parser* _self_, jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>>* _62935_params) {
	{
		auto expr = _62935_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0c5942:;
		if (it != expr_end) {
			jule::Ptr<_1ab1a8ccd_ParamDecl> _63021_param = *it;
			{
				if ((_1ab1a9152_IsSelf(_63021_param.ptr()) || ((*(_63021_param))._field_Kind != nullptr))) {
					goto _iter_next_1bc0c5942;
				};
				if (((*(_63021_param))._field_Token == nullptr)) {
					_1abd1d810_pushErr(_self_, (*(_63021_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_63021_param))._field_Kind=jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=(*(_63021_param))._field_Token, ._field_Ident=(*((*(_63021_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_63021_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1bc0c5942:;
			++it;
			goto _iter_begin_1bc0c5942;
		}
		_iter_end_1bc0c5942:;
	};
}



inline jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>> _1abd23804_buildParams(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _64936_tokens, jule::Bool _64954_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _65013_parts;;
	jule::Slice<_1a7d05a93_Log> _65020_errs;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(_64936_tokens, static_cast<jule::U64>(5LLU), true);
		_65013_parts = __jule_assign_result.__jule_result_arg0;
		_65020_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_65020_errs);;
	if ((_65013_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>> _65617_params = nullptr;;
	if ((_64954_method && (_65013_parts.len() > 0LL))) {
		jule::Ptr<_1ab1a8ccd_ParamDecl> _65817_param = _1abd2221a_buildSelfParam(_self_.ptr(), _65013_parts[0LL]);;
		if (((_65817_param != nullptr) && _1ab1a9152_IsSelf(_65817_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_65817_param); };
			(_65013_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0cab01:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _66521_part = *it;
			{
				jule::Ptr<_1ab1a8ccd_ParamDecl> _66617_param = _1abd23150_buildParam(_self_, _66521_part);;
				if ((_66617_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>> &__jule_push_dest = _65617_params; __jule_push_dest.push(_66617_param); };
				};
			}
			_iter_next_1bc0cab01:;
			++it;
			goto _iter_begin_1bc0cab01;
		}
		_iter_end_1bc0cab01:;
	};
	_1abd23408_checkParams(_self_.ptr(), &(_65617_params));
	return _65617_params;;
}



inline __jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool _1abd23c00_buildMultiRetType(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _67642_tokens, jule::I64* _67665_i) {
	__jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab19b463_RetTypeDecl>();
	((*(_67665_i)))++;
	if (((*(_67665_i)) >= (*(_67642_tokens)).len())) {
		((*(_67665_i)))--;
		({
			__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, _67642_tokens, _67665_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_67665_i)))--;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _68613_rangeTokens = _1abd1b511_range(_67665_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _67642_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _68813_parts;;
	jule::Slice<_1a7d05a93_Log> _68820_errs;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(&(_68613_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_68813_parts = __jule_assign_result.__jule_result_arg0;
		_68820_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_68820_errs);;
	if ((_68813_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _69413_types = jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>::alloc(0LL, _68813_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1ab182e72_Token>>::alloc(0LL, _68813_parts.len());
	{
		auto expr = &(_68813_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0d29a4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _69621_part = *it;
			{
				jule::Ptr<_1ab182e72_Token> _69717_token = _69621_part[0LL];;
				jule::I64 _69817_offset = 0LL;;
				if ((_69621_part.len() > 1LL)) {
					_69717_token=_69621_part[1LL];
					if (((*(_69717_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_69817_offset=2LL;
						if ((_69621_part.len() < 3LL)) {
							_1abd1d810_pushErr(_self_.ptr(), _69717_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1bc0d29a4;
						};
					};
				};
				_69717_token=_69621_part[0LL];
				if ((_69817_offset != 2LL)) {
					jule::Ptr<_1ab182e72_Token> _71421_newToken = jule::new_ptr<_1ab182e72_Token>((*(_69717_token)));;
					(*(_71421_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1ab182e72_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_71421_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1ab182e72_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_69717_token); };
				};
				jule::Ptr<_1ab198570_TypeDecl> _72117_tk;;
				({
					__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, &(_69621_part), (&(_69817_offset)), true);
					_72117_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_69817_offset < _69621_part.len())) {
					_1abd1d810_pushErr(_self_.ptr(), _69621_part[_69817_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = _69413_types; __jule_push_dest.push(_72117_tk); };
			}
			_iter_next_1bc0d29a4:;
			++it;
			goto _iter_begin_1bc0d29a4;
		}
		_iter_end_1bc0d29a4:;
	};
	if ((_69413_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=(*(_67642_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ab199c9c_TupleTypeDecl>(_1ab199c9c_TupleTypeDecl{._field_Types=_69413_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_69413_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool _1abd240eb_buildRetType(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _74437_tokens, jule::I64* _74460_i) {
	__jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ab19b463_RetTypeDecl>();
	if (((*(_74460_i)) >= (*(_74437_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ab182e72_Token> _75013_token = (*(_74437_tokens))[(*(_74460_i))];;
	{
		auto &_match_expr{ (*(_75013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bc0db34d:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1bc0db3c5:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1bc0db44c:;
			{
				if ((((*(_74460_i)) + 1LL) >= (*(_74437_tokens)).len())) {
					_1abd1d810_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_74460_i)))++;
				_75013_token=(*(_74437_tokens))[(*(_74460_i))];
				{
					auto &_match_expr{ (*(_75013_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bc0dd1da:;
						{
							({
								__jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1abd23c00_buildMultiRetType(_self_, _74437_tokens, _74460_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bc0dd262:;
						{
							_1abd1d810_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1bc0dd174:;
				};
				({
					__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, _74437_tokens, _74460_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1bc0db2c6:;
	};
	((*(_74460_i)))++;
	_1abd1d810_pushErr(_self_.ptr(), _75013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1aa230_FnDecl> _1abd245a2_buildFnPrototype(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _78341_tokens, jule::I64* _78364_i, jule::Bool _78372_method) {
	jule::Ptr<_1ab1aa230_FnDecl> _78413_f = jule::new_ptr<_1ab1aa230_FnDecl>(_1ab1aa230_FnDecl{._field_Token=(*(_78341_tokens))[(*(_78364_i))], });;
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_78413_f))._field_Statically=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	if (((*((*(_78413_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_78413_f))._field_Unsafety=true;
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Token=(*(_78341_tokens))[(*(_78364_i))];
	};
	((*(_78364_i)))++;
	if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab182e72_Token> _8179_tok = (*(_78341_tokens))[(*(_78364_i))];;
	if (((*(_8179_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_78364_i)))++;
		if (((*(_78364_i)) >= (*(_78341_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_78413_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78413_f))._field_Ident=(*(_8179_tok))._field_Kind;
	} else {
		(*(_78413_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1ab182e72_Token> _8299_errorToken = (*(_78341_tokens))[(*(_78364_i))];;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _83013_genericsTokens = _1abd1b511_range(_78364_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _78341_tokens);;
	if ((_83013_genericsTokens != nullptr)) {
		(*(_78413_f))._field_Generics=_1abd21dc9_buildGenerics(_self_, &(_83013_genericsTokens), &(_8299_errorToken));
	};
	if (((*((*(_78341_tokens))[(*(_78364_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_78341_tokens))[(*(_78364_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _84013_paramsToks = _1abd1b511_range(_78364_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _78341_tokens);;
	if ((_84013_paramsToks.len() > 0LL)) {
		(*(_78413_f))._field_Params=_1abd23804_buildParams(_self_, &(_84013_paramsToks), _78372_method);
	};
	if (((*(_78364_i)) < (*(_78341_tokens)).len())) {
		jule::Ptr<_1ab182e72_Token> _84613_token = (*(_78341_tokens))[(*(_78364_i))];;
		if (((*(_84613_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_78413_f))._field_Exceptional=true;
			((*(_78364_i)))++;
		};
	};
	(*(_78413_f))._field_Public=_1ab260093_IsPub((*(_78413_f))._field_Ident);
	({
		__jule_tuple_x_1ab19b463_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1abd240eb_buildRetType(_self_, _78341_tokens, _78364_i);
		(*(_78413_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _78413_f;;
}



inline jule::Ptr<_1ab1aa230_FnDecl> _1abd24a58_buildFn(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _86032_tokens, jule::Bool _86050_method, jule::Bool _86064_prototype) {
	jule::I64 _86113_i = 0LL;;
	jule::Ptr<_1ab1aa230_FnDecl> _86213_f = _1abd245a2_buildFnPrototype(_self_, _86032_tokens, &(_86113_i), _86050_method);;
	if (_86064_prototype) {
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_86032_tokens))[(_86113_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _86213_f;;
	} else if ((_86213_f == nullptr)) {
		return _86213_f;;
	};
	if ((_86113_i >= (*(_86032_tokens)).len())) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _87813_blockTokens = _1abd1b511_range(&(_86113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _86032_tokens);;
	if ((_87813_blockTokens != nullptr)) {
		(*(_86213_f))._field_Scope=_1abd1e9a9_buildScope(_self_, &(_87813_blockTokens), (*(_86032_tokens))[(_86113_i - 1LL)]);
		(*((*(_86213_f))._field_Scope))._field_Unsafety=(*(_86213_f))._field_Unsafety;
		if ((_86113_i < (*(_86032_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_86032_tokens))[_86113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), (*(_86213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _86213_f;;
}



inline jule::Slice<jule::Ptr<_1ab182e72_Token>> _1abd24d99_getUseDeclSelectors(_1abd1cd5e_parser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _89442_tokens) {
	jule::I64 _89513_i = 0LL;;
	_89442_tokens=_1abd1b511_range(&(_89513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_89442_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _89713_parts;;
	jule::Slice<_1a7d05a93_Log> _89720_errs;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(&(_89442_tokens), static_cast<jule::U64>(5LLU), true);
		_89713_parts = __jule_assign_result.__jule_result_arg0;
		_89720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_89720_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_89720_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _90313_selectors = jule::Slice<jule::Ptr<_1ab182e72_Token>>::alloc(0LL, _89713_parts.len());;
	{
		auto expr = &(_89713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1069d9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _90421_part = *it;
			{
				if ((_90421_part.len() > 1LL)) {
					_1abd1d810_pushErr(_self_, _90421_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ab182e72_Token> _90817_tok = _90421_part[0LL];;
				if ((((*(_90817_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_90817_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1abd1d810_pushErr(_self_, _90817_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1abd1db73_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1bc1069d9;
				};
				{ jule::Slice<jule::Ptr<_1ab182e72_Token>> &__jule_push_dest = _90313_selectors; __jule_push_dest.push(_90817_tok); };
			}
			_iter_next_1bc1069d9:;
			++it;
			goto _iter_begin_1bc1069d9;
		}
		_iter_end_1bc1069d9:;
	};
	return _90313_selectors;;
}



inline void _1abd2520c_buildBindUseDecl(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _91940_decl, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _91957_tokens) {
	if (((*(_91957_tokens)).len() > 1LL)) {
		_1abd1d810_pushErr(_self_, (*(_91957_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab182e72_Token> _9239_token = (*(_91957_tokens))[0LL];;
	if ((((*(_9239_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9239_token))._field_Kind[0LL] != '`') && ((*(_9239_token))._field_Kind[0LL] != '\"')))) {
		_1abd1d810_pushErr(_self_, _9239_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_91940_decl))))._field_Binded=true;
	(*((*(_91940_decl))))._field_LinkPath=(*(_9239_token))._field_Kind.slice(1LL, ((*(_9239_token))._field_Kind.len() - 1LL));
}



inline jule::Str _1abd2554d_useDeclTokstoa(_1abd1cd5e_parser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _93234_tokens) {
	jule::I64 _93313_n = 0LL;;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc10d6d3:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> *_93416_token = it;
			{
				if ((((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*((*(_93416_token))))._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1abd1d810_pushErr(_self_, (*(_93416_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_93313_n+=(*((*(_93416_token))))._field_Kind.len();
			}
			_iter_next_1bc10d6d3:;
			++it;
			goto _iter_begin_1bc10d6d3;
		}
		_iter_end_1bc10d6d3:;
	};
	_1a7c4c7ed_StrBuilder _94013_s = static__1a7c4cb1c_New(_93313_n);;
	{
		auto expr = _93234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc10d5e5:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> *_94116_token = it;
			{
				_1a7c573c9_WriteStr(&_94013_s, (*((*(_94116_token))))._field_Kind);
			}
			_iter_next_1bc10d5e5:;
			++it;
			goto _iter_begin_1bc10d5e5;
		}
		_iter_end_1bc10d5e5:;
	};
	return _1a7c57bc1_Str(&_94013_s);;
}



inline void _1abd258b1_buildStdUseDecl(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _94739_decl, jule::Slice<jule::Ptr<_1ab182e72_Token>> _94759_tokens) {
	(*((*(_94739_decl))))._field_Std=true;
	jule::Ptr<_1ab182e72_Token> _95013_token = _94759_tokens[0LL];;
	if ((_94759_tokens.len() < 3LL)) {
		_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94759_tokens).mut_slice(2LL);;
	_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_95013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bc113089:;
			{
				_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bc113111:;
			{
				jule::Slice<jule::Ptr<_1ab182e72_Token>> _96321_selectors = nullptr;;
				({
					__jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token __jule_assign_result = _1abd1b7ca_rangeLast(&(_94759_tokens));
					_94759_tokens = __jule_assign_result.__jule_result_arg0;
					_96321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94739_decl))))._field_Selected=_1abd24d99_getUseDeclSelectors(_self_, _96321_selectors);
				if ((_94759_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc113188:;
			{
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_95013_token=_94759_tokens[(_94759_tokens.len() - 1LL)];
				if (((*(_95013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94759_tokens).mut_slice(0LL, (_94759_tokens.len() - 1LL));;
				if ((_94759_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _95013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94739_decl))))._field_Full=true;
			}
		}
		_match_end_1bc113012:;
	};
	if (((_94759_tokens.len() == 1LL) && ((*(_94759_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_94739_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_94739_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1abd2554d_useDeclTokstoa(_self_, &(_94759_tokens)));
	};
}



inline void _1abd25c24_buildIdentUseDecl(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _100541_decl, jule::Slice<jule::Ptr<_1ab182e72_Token>> _100561_tokens) {
	(*((*(_100541_decl))))._field_Std=false;
	jule::Ptr<_1ab182e72_Token> _100813_token = _100561_tokens[(_100561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bc11c12b:;
			{
				_1abd1d810_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bc11c8bd:;
			{
				jule::Slice<jule::Ptr<_1ab182e72_Token>> _101421_selectors = nullptr;;
				({
					__jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token __jule_assign_result = _1abd1b7ca_rangeLast(&(_100561_tokens));
					_100561_tokens = __jule_assign_result.__jule_result_arg0;
					_101421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_100541_decl))))._field_Selected=_1abd24d99_getUseDeclSelectors(_self_, _101421_selectors);
				if ((_100561_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1abd1d810_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc11c934:;
			{
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100813_token=_100561_tokens[(_100561_tokens.len() - 1LL)];
				if (((*(_100813_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1abd1d810_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100561_tokens).mut_slice(0LL, (_100561_tokens.len() - 1LL));;
				if ((_100561_tokens.len() == 0LL)) {
					_1abd1d810_pushErr(_self_, _100813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_100541_decl))))._field_Full=true;
			}
		}
		_match_end_1bc11c7ad:;
	};
	(*((*(_100541_decl))))._field_LinkPath=_1abd2554d_useDeclTokstoa(_self_, &(_100561_tokens));
}



inline void _1abd26087_parseUseDecl(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1b1676_UseDecl>* _105336_decl, jule::Slice<jule::Ptr<_1ab182e72_Token>> _105356_tokens) {
	if ((*((*(_105336_decl))))._field_Binded) {
		_1abd2520c_buildBindUseDecl(_self_, _105336_decl, &(_105356_tokens));
		return;;
	};
	jule::Ptr<_1ab182e72_Token> _105913_token = _105356_tokens[0LL];;
	if (((*(_105913_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_105356_tokens.len() > 2LL) && ((*(_105356_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_105336_decl))))._field_Alias=(*(_105913_token))._field_Kind;
		if (((*(_105356_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1abd1d810_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1abd1db73_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_105356_tokens).mut_slice(2LL);;
		_105913_token=_105356_tokens[0LL];
	};
	;
	{
		
		if ((*(_105913_token))._field_Kind.equal("std", 3)) {
			_case_begin_1bc1298b9:;
			{
				_1abd258b1_buildStdUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		else {
			_case_begin_1bc129435:;
			{
				_1abd25c24_buildIdentUseDecl(_self_, _105336_decl, _105356_tokens);
			}
		}
		_match_end_1bc1293be:;
	};
}



inline jule::Ptr<_1ab1b1676_UseDecl> _1abd26483_buildUseDecl(_1abd1cd5e_parser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _108735_tokens, jule::Bool _108753_binded) {
	jule::Ptr<_1ab1b1676_UseDecl> _108813_decl = jule::new_ptr<_1ab1b1676_UseDecl>(_1ab1b1676_UseDecl{._field_Token=_108735_tokens[0LL], ._field_Binded=_108753_binded, });;
	if ((_108735_tokens.len() < 2LL)) {
		_1abd1d810_pushErr(_self_, (*(_108813_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_108735_tokens).mut_slice(1LL);;
	_1abd26087_parseUseDecl(_self_, &(_108813_decl), _108735_tokens);
	return _108813_decl;;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd2687e_buildTypeEnumItemKind(jule::Ptr<_1abd1cd5e_parser> _self_, jule::I64* _110146_i, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _110159_tokens) {
	jule::I64 _110213_braceN = 0LL;;
	jule::I64 _11039_exprStart = (*(_110146_i));;
	for (; ((*(_110146_i)) < (*(_110159_tokens)).len()); ((*(_110146_i)))++) {
		{
			jule::Ptr<_1ab182e72_Token> _110513_t = (*(_110159_tokens))[(*(_110146_i))];;
			{
				auto &_match_expr{ (*(_110513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bc12dc0e:;
					{
						(_110213_braceN)++;
						goto _iter_next_1bc12ced8;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bc12dc86:;
					{
						(_110213_braceN)--;
					}
				}
				_match_end_1bc12db98:;
			};
			if ((_110213_braceN > 0LL)) {
				goto _iter_next_1bc12ced8;
			};
			if ((((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_110146_i)) + 1LL) >= (*(_110159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ab182e72_Token>> _112125_kindTokens = nullptr;;
				if (((*(_110513_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart, (*(_110146_i)));
				} else {
					_112125_kindTokens=(*(_110159_tokens)).slice(_11039_exprStart);
				};
				jule::I64 _112721_j = 0LL;;
				jule::Ptr<_1ab198570_TypeDecl> _112821_kind;;
				({
					__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, &(_112125_kindTokens), (&(_112721_j)), true);
					_112821_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_112721_j < _112125_kindTokens.len())) {
					_1abd1d810_pushErr(_self_.ptr(), _112125_kindTokens[_112721_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112821_kind;;
			};
		}
	_iter_next_1bc12ced8:;
	}
	_iter_end_1bc12ced8:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>> _1abd26bc0_buildTypeEnumItems(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _113843_tokens) {
	jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>> _113913_items = jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _114013_i = 0LL;;
	for (; (_114013_i < (*(_113843_tokens)).len()); (_114013_i)++) {
		{
			jule::Ptr<_1ab182e72_Token> _114217_t = (*(_113843_tokens))[_114013_i];;
			jule::Ptr<_1ab1b3018_TypeEnumItemDecl> _114317_item = jule::new_ptr<_1ab1b3018_TypeEnumItemDecl>();;
			(*(_114317_item))._field_Token=_114217_t;
			if ((((*((*(_114317_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113843_tokens)).len() - _114013_i) > 2LL))) {
				_114217_t=(*(_113843_tokens))[(_114013_i + 1LL)];
				if (((*(_114217_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_114317_item))._field_Ident=(*((*(_114317_item))._field_Token))._field_Kind;
					_114013_i+=2LL;
					if (((_114013_i >= (*(_113843_tokens)).len()) || ((*((*(_113843_tokens))[_114013_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1abd1d810_pushErr(_self_.ptr(), _114217_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1bc134000;
					};
				};
			};
			(*(_114317_item))._field_Kind=_1abd2687e_buildTypeEnumItemKind(_self_, &(_114013_i), _113843_tokens);
			{ jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>> &__jule_push_dest = _113913_items; __jule_push_dest.push(_114317_item); };
		}
	_iter_next_1bc134000:;
	}
	_iter_end_1bc134000:;;
	return _113913_items;;
}



inline jule::Ptr<_1ab1b3678_TypeEnumDecl> _1abd27011_buildTypeEnumDecl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _116242_tokens) {
	jule::I64 _116313_i = 1LL;;
	jule::Ptr<_1ab1b3678_TypeEnumDecl> _116413_e = jule::new_ptr<_1ab1b3678_TypeEnumDecl>(_1ab1b3678_TypeEnumDecl{._field_Token=(*(_116242_tokens))[_116313_i], });;
	if (((*((*(_116413_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Ident=(*((*(_116413_e))._field_Token))._field_Kind;
	_116313_i+=3LL;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _117413_itemTokens = _1abd1b511_range(&(_116313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116242_tokens);;
	if ((_117413_itemTokens == nullptr)) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), (*(_116413_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _116413_e;;
	} else if ((_116313_i < (*(_116242_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_116242_tokens))[_116313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_116413_e))._field_Public=_1ab260093_IsPub((*(_116413_e))._field_Ident);
	(*(_116413_e))._field_End=(*(_116242_tokens))[(_116313_i - 1LL)];
	(*(_116413_e))._field_Items=_1abd26bc0_buildTypeEnumItems(_self_, &(_117413_itemTokens));
	return _116413_e;;
}



inline jule::Ptr<_1ab19c8a4_Expr> _1abd2740c_buildEnumItemExpr(jule::Ptr<_1abd1cd5e_parser> _self_, jule::I64* _118942_i, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _118955_tokens) {
	jule::I64 _119013_braceN = 0LL;;
	jule::I64 _11919_exprStart = (*(_118942_i));;
	for (; ((*(_118942_i)) < (*(_118955_tokens)).len()); ((*(_118942_i)))++) {
		{
			jule::Ptr<_1ab182e72_Token> _119313_t = (*(_118955_tokens))[(*(_118942_i))];;
			{
				auto &_match_expr{ (*(_119313_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bc1416e4:;
					{
						(_119013_braceN)++;
						goto _iter_next_1bc1409bd;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bc14176b:;
					{
						(_119013_braceN)--;
					}
				}
				_match_end_1bc14167d:;
			};
			if ((_119013_braceN > 0LL)) {
				goto _iter_next_1bc1409bd;
			};
			if ((((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118942_i)) + 1LL) >= (*(_118955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ab182e72_Token>> _120925_exprTokens = nullptr;;
				if (((*(_119313_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart, (*(_118942_i)));
				} else {
					_120925_exprTokens=(*(_118955_tokens)).slice(_11919_exprStart);
				};
				return _1abd1deb4_buildExpr(_self_, &(_120925_exprTokens));;
			};
		}
	_iter_next_1bc1409bd:;
	}
	_iter_end_1bc1409bd:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>> _1abd2774d_buildEnumItems(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _122139_tokens) {
	jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>> _122213_items = jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _122313_i = 0LL;;
	for (; (_122313_i < (*(_122139_tokens)).len()); (_122313_i)++) {
		{
			jule::Ptr<_1ab182e72_Token> _122517_t = (*(_122139_tokens))[_122313_i];;
			jule::Ptr<_1ab1b1b2c_EnumItemDecl> _122617_item = jule::new_ptr<_1ab1b1b2c_EnumItemDecl>();;
			(*(_122617_item))._field_Token=_122517_t;
			if (((*((*(_122617_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1abd1d810_pushErr(_self_.ptr(), (*(_122617_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_122617_item))._field_Ident=(*((*(_122617_item))._field_Token))._field_Kind;
			if ((((_122313_i + 1LL) >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[(_122313_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_122313_i + 1LL) < (*(_122139_tokens)).len())) {
					(_122313_i)++;
				};
				{ jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
				goto _iter_next_1bc14572b;
			};
			(_122313_i)++;
			_122517_t=(*(_122139_tokens))[_122313_i];
			(_122313_i)++;
			if (((*(_122517_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1abd1d810_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1bc14572b;
			};
			if (((_122313_i >= (*(_122139_tokens)).len()) || ((*((*(_122139_tokens))[_122313_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1abd1d810_pushErr(_self_.ptr(), _122517_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1bc14572b;
			};
			(*(_122617_item))._field_Expr=_1abd2740c_buildEnumItemExpr(_self_, &(_122313_i), _122139_tokens);
			{ jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>> &__jule_push_dest = _122213_items; __jule_push_dest.push(_122617_item); };
		}
	_iter_next_1bc14572b:;
	}
	_iter_end_1bc14572b:;;
	return _122213_items;;
}



inline jule::Ptr<_1ab1b26dd_EnumDecl> _1abd27a8e_buildEnumDecl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _125838_tokens) {
	if (((*(_125838_tokens)).len() < 3LL)) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_125838_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1b26dd_EnumDecl> _126313_e = jule::new_ptr<_1ab1b26dd_EnumDecl>(_1ab1b26dd_EnumDecl{._field_Token=(*(_125838_tokens))[1LL], });;
	if (((*((*(_126313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Ident=(*((*(_126313_e))._field_Token))._field_Kind;
	jule::I64 _127113_i = 2LL;;
	if (((*((*(_125838_tokens))[_127113_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_127113_i)++;
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_125838_tokens))[(_127113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _126313_e;;
		};
		({
			__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, _125838_tokens, (&(_127113_i)), true);
			(*(_126313_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_127113_i >= (*(_125838_tokens)).len())) {
			_1abd1d15b_stop(_self_.ptr());
			_1abd1d810_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _126313_e;;
		};
	} else {
		(*(_126313_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _128813_itemTokens = _1abd1b511_range(&(_127113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125838_tokens);;
	if ((_128813_itemTokens == nullptr)) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), (*(_126313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _126313_e;;
	} else if ((_127113_i < (*(_125838_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_125838_tokens))[_127113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_126313_e))._field_Public=_1ab260093_IsPub((*(_126313_e))._field_Ident);
	(*(_126313_e))._field_End=(*(_125838_tokens))[(_127113_i - 1LL)];
	(*(_126313_e))._field_Items=_1abd2774d_buildEnumItems(_self_, &(_128813_itemTokens));
	return _126313_e;;
}



inline jule::Any _1abd27dd0_buildNodeEnumDecl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _130342_tokens) {
	if ((((*(_130342_tokens)).len() > 3LL) && ((*((*(_130342_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_130342_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1abd27011_buildTypeEnumDecl(_self_, _130342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1abd27a8e_buildEnumDecl(_self_, _130342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1ab1b3942_FieldDecl> _1abd28221_buildField(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _131234_tokens) {
	jule::Ptr<_1ab1b3942_FieldDecl> _131313_f = jule::new_ptr<_1ab1b3942_FieldDecl>();;
	(*(_131313_f))._field_Mutable=((*(_131234_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_131313_f))._field_Mutable) {
		if ((_131234_tokens.len() == 1LL)) {
			_1abd1d810_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(1LL);;
	};
	(*(_131313_f))._field_Token=_131234_tokens[0LL];
	if (((*((*(_131313_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_131313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_131313_f))._field_Ident=(*((*(_131313_f))._field_Token))._field_Kind;
	if ((_131234_tokens.len() == 1LL)) {
		_1abd1d810_pushErr(_self_.ptr(), _131234_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_131234_tokens.len() < 3LL) || ((*(_131234_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1abd1d810_pushErr(_self_.ptr(), _131234_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_131234_tokens).mut_slice(2LL);;
	jule::I64 _134113_i = 0LL;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, &(_131234_tokens), (&(_134113_i)), true);
		(*(_131313_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_134113_i < _131234_tokens.len())) {
		jule::Ptr<_1ab182e72_Token> _134413_token = _131234_tokens[_134113_i];;
		if (((*(_134413_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1abd1d810_pushErr(_self_.ptr(), _131234_tokens[_134113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_134113_i)++;
		if ((_134113_i >= _131234_tokens.len())) {
			_1abd1d810_pushErr(_self_.ptr(), _134413_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131234_tokens).mut_slice(_134113_i);;
		(*(_131313_f))._field_Default=_1abd1deb4_buildExpr(_self_, &(_131234_tokens));
	};
	(*(_131313_f))._field_Public=_1ab260093_IsPub((*(_131313_f))._field_Ident);
	return _131313_f;;
}



inline jule::Slice<jule::Ptr<_1ab1b3942_FieldDecl>> _1abd28562_buildStructDeclFields(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _136145_tokens) {
	jule::Slice<jule::Ptr<_1ab1b3942_FieldDecl>> _136217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1abcee208_stmt>> _136313_stmts = _1abcee5b0_splitStmts(&(_136145_tokens));;
	{
		auto expr = &(_136313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc164e21:;
		if (it != expr_end) {
			jule::Ptr<_1abcee208_stmt> _136421_stmt = *it;
			{
				_136145_tokens=(*(_136421_stmt))._field_tokens;
				jule::Ptr<_1ab1b3942_FieldDecl> _136617_f = _1abd28221_buildField(_self_, _136145_tokens);;
				{ jule::Slice<jule::Ptr<_1ab1b3942_FieldDecl>> &__jule_push_dest = _136217_fields; __jule_push_dest.push(_136617_f); };
			}
			_iter_next_1bc164e21:;
			++it;
			goto _iter_begin_1bc164e21;
		}
		_iter_end_1bc164e21:;
	};
	return _136217_fields;;
}



inline jule::Ptr<_1ab1b4338_StructDecl> _1abd288a3_buildStructDecl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _137240_tokens) {
	if (((*(_137240_tokens)).len() < 3LL)) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_137240_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137813_i = 1LL;;
	jule::Ptr<_1ab1b4338_StructDecl> _137913_s = jule::new_ptr<_1ab1b4338_StructDecl>(_1ab1b4338_StructDecl{._field_Token=(*(_137240_tokens))[_137813_i], });;
	if (((*((*(_137913_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137813_i)++;
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	(*(_137913_s))._field_Ident=(*((*(_137913_s))._field_Token))._field_Kind;
	jule::Ptr<_1ab182e72_Token> _13939_errorToken = (*(_137240_tokens))[_137813_i];;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _139413_genericsTokens = _1abd1b511_range(&(_137813_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _137240_tokens);;
	if ((_139413_genericsTokens != nullptr)) {
		(*(_137913_s))._field_Generics=_1abd21dc9_buildGenerics(_self_, &(_139413_genericsTokens), &(_13939_errorToken));
	};
	if ((_137813_i >= (*(_137240_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_137240_tokens))[(_137813_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _140413_bodyTokens = _1abd1b511_range(&(_137813_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _137240_tokens);;
	if ((_140413_bodyTokens == nullptr)) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), (*(_137913_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137913_s;;
	};
	if ((_137813_i < (*(_137240_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_137240_tokens))[_137813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137913_s))._field_Public=_1ab260093_IsPub((*(_137913_s))._field_Ident);
	(*(_137913_s))._field_Fields=_1abd28562_buildStructDeclFields(_self_, _140413_bodyTokens);
	(*(_137913_s))._field_End=(*(_137240_tokens))[(_137813_i - 1LL)];
	return _137913_s;;
}



inline void _1abd28b5b_checkMethodReceiver(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1aa230_FnDecl>* _142039_f) {
	if ((*((*(_142039_f))))._field_Statically) {
		if ((((*((*(_142039_f))))._field_Params.len() > 0LL) && _1ab1a9152_IsSelf((*((*(_142039_f))))._field_Params[0LL].ptr()))) {
			_1abd1d810_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_142039_f))))._field_Params.len() == 0LL)) {
		_1abd1d810_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab1a8ccd_ParamDecl> _14329_param = (*((*(_142039_f))))._field_Params[0LL];;
	if ((!(_1ab1a9152_IsSelf(_14329_param.ptr())))) {
		_1abd1d810_pushErr(_self_, (*((*(_142039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1abd28ebe_buildTraitBody(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab1b4a75_TraitDecl>* _143939_t, jule::Slice<jule::Ptr<_1ab182e72_Token>> _143958_tokens) {
	jule::Slice<jule::Ptr<_1abcee208_stmt>> _144013_stmts = _1abcee5b0_splitStmts(&(_143958_tokens));;
	{
		auto expr = &(_144013_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1756a1:;
		if (it != expr_end) {
			jule::Ptr<_1abcee208_stmt> _144121_stmt = *it;
			{
				_143958_tokens=(*(_144121_stmt))._field_tokens;
				if ((_143958_tokens.len() == 0LL)) {
					goto _iter_next_1bc1756a1;
				};
				{
					auto &_match_expr{ (*(_143958_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1bc178e46:;
						{
							jule::Ptr<_1ab1aa230_FnDecl> _144821_f = _1abd24a58_buildFn(_self_, &(_143958_tokens), true, true);;
							if ((_144821_f == nullptr)) {
								goto _match_end_1bc176b14;
							};
							_1abd28b5b_checkMethodReceiver(_self_.ptr(), &(_144821_f));
							if (((*(_144821_f))._field_Generics.len() > 0LL)) {
								_1abd1d810_pushErr(_self_.ptr(), (*(_144821_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ab1aa230_FnDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Methods; __jule_push_dest.push(_144821_f); };
						}
					}
					else {
						_case_begin_1bc1763d8:;
						{
							jule::I64 _145821_i = 0LL;;
							jule::Ptr<_1ab198570_TypeDecl> _145921_ti;;
							jule::Bool _145925_ok = false;;
							({
								__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, &(_143958_tokens), (&(_145821_i)), true);
								_145921_ti = __jule_assign_result.__jule_result_arg0;
								_145925_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145925_ok))) {
								goto _match_end_1bc176b14;
							};
							if ((_145821_i < _143958_tokens.len())) {
								_1abd1d810_pushErr(_self_.ptr(), _143958_tokens[_145821_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = (*((*(_143939_t))))._field_Inherits; __jule_push_dest.push(_145921_ti); };
						}
					}
					_match_end_1bc176b14:;
				};
			}
			_iter_next_1bc1756a1:;
			++it;
			goto _iter_begin_1bc1756a1;
		}
		_iter_end_1bc1756a1:;
	};
}



inline jule::Ptr<_1ab1b4a75_TraitDecl> _1abd29310_buildTraitDecl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _147139_tokens) {
	if (((*(_147139_tokens)).len() < 3LL)) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_147139_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1b4a75_TraitDecl> _147613_t = jule::new_ptr<_1ab1b4a75_TraitDecl>(_1ab1b4a75_TraitDecl{._field_Token=(*(_147139_tokens))[1LL], });;
	if (((*((*(_147613_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Ident=(*((*(_147613_t))._field_Token))._field_Kind;
	jule::I64 _148413_i = 2LL;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _148513_bodyTokens = _1abd1b511_range(&(_148413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _147139_tokens);;
	if ((_148513_bodyTokens == nullptr)) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), (*(_147613_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_148413_i < (*(_147139_tokens)).len())) {
		_1abd1d810_pushErr(_self_.ptr(), (*(_147139_tokens))[_148413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_147613_t))._field_Public=_1ab260093_IsPub((*(_147613_t))._field_Ident);
	_1abd28ebe_buildTraitBody(_self_, &(_147613_t), _148513_bodyTokens);
	(*(_147613_t))._field_End=(*(_147139_tokens))[(_148413_i - 1LL)];
	return _147613_t;;
}



inline jule::Ptr<_1ab1aa230_FnDecl> _1abd29651_buildBindFn(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _150135_tokens) {
	(_150135_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab1aa230_FnDecl> _150313_f = _1abd24a58_buildFn(_self_, &(_150135_tokens), false, true);;
	if ((_150313_f != nullptr)) {
		(*(_150313_f))._field_Public=false;
		(*(_150313_f))._field_Binded=true;
	};
	return _150313_f;;
}



inline jule::Ptr<_1ab1ab3da_VarDecl> _1abd29992_buildBindVar(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _151136_tokens) {
	(_151136_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab1ab3da_VarDecl> _151313_v = _1abd2168c_buildVar(_self_, _151136_tokens);;
	if ((_151313_v != nullptr)) {
		(*(_151313_v))._field_Public=false;
		(*(_151313_v))._field_Binded=true;
		if (((*(_151313_v))._field_Expr != nullptr)) {
			_1abd1d810_pushErr(_self_.ptr(), (*(_151313_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _151313_v;;
}



inline jule::Ptr<_1ab1b4338_StructDecl> _1abd29cd3_buildBindStruct(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _152439_tokens) {
	(_152439_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab1b4338_StructDecl> _152613_s = _1abd288a3_buildStructDecl(_self_, &(_152439_tokens));;
	if ((_152613_s != nullptr)) {
		(*(_152613_s))._field_Public=false;
		{
			auto expr = &((*(_152613_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc18d004:;
			if (it != expr_end) {
				jule::Ptr<_1ab1b3942_FieldDecl> _152925_f = *it;
				{
					(*(_152925_f))._field_Public=true;
				}
				_iter_next_1bc18d004:;
				++it;
				goto _iter_begin_1bc18d004;
			}
			_iter_end_1bc18d004:;
		};
		(*(_152613_s))._field_Binded=true;
	};
	return _152613_s;;
}



inline jule::Ptr<_1ab1b008c_TypeAliasDecl> _1abd2a124_buildBindTypeAlias(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _153842_tokens) {
	(_153842_tokens).mut_slice(1LL);;
	jule::Ptr<_1ab1b008c_TypeAliasDecl> _154013_t = _1abd20757_buildTypeAliasDecl(_self_, &(_153842_tokens));;
	if ((_154013_t != nullptr)) {
		(*(_154013_t))._field_Public=false;
		(*(_154013_t))._field_Binded=true;
	};
	return _154013_t;;
}



inline jule::Ptr<_1ab1b1676_UseDecl> _1abd2a465_buildBindUse(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _154836_tokens) {
	if ((_154836_tokens.len() == 1LL)) {
		_1abd1d810_pushErr(_self_.ptr(), _154836_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154836_tokens).mut_slice(1LL);;
	;
	return _1abd26483_buildUseDecl(_self_.ptr(), _154836_tokens, true);;
}



inline jule::Any _1abd2a7a6_buildBind(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _155934_tokens) {
	jule::Ptr<_1ab182e72_Token> _156013_token = (*(_155934_tokens))[0LL];;
	if (((*(_155934_tokens)).len() == 1LL)) {
		_1abd1d810_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_156013_token=(*(_155934_tokens))[1LL];
	{
		auto &_match_expr{ (*(_156013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bc193ec7:;
			{
				return jule::Any(_1abd29651_buildBindFn(_self_, (*(_155934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bc193bca:;
			{
				return jule::Any(_1abd29992_buildBindVar(_self_, (*(_155934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bc193c41:;
			{
				return jule::Any(_1abd29cd3_buildBindStruct(_self_, (*(_155934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc193ca7:;
			{
				return jule::Any(_1abd2a124_buildBindTypeAlias(_self_, (*(_155934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1bc193b64:;
			{
				_1abd1d810_pushErr(_self_.ptr(), _156013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc193b0e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1aa230_FnDecl> _1abd2aae7_getMethod(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _158334_tokens) {
	jule::I64 _158413_i = 0LL;;
	jule::Ptr<_1ab182e72_Token> _158513_token = (*(_158334_tokens))[_158413_i];;
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_158413_i + 1LL) >= (*(_158334_tokens)).len())) {
			_1abd1d810_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158413_i)++;
		_158513_token=(*(_158334_tokens))[_158413_i];
	};
	if (((*(_158513_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1abd1d810_pushErr(_self_.ptr(), _158513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1abd24a58_buildFn(_self_, _158334_tokens, true, false);;
}



inline void _1abd2ae5a_parseImplBody(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab1b51d5_Impl>* _161238_ipl, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _161255_tokens) {
	jule::Slice<jule::Ptr<_1abcee208_stmt>> _161313_stmts = _1abcee5b0_splitStmts(_161255_tokens);;
	{
		auto expr = &(_161313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc19b3db:;
		if (it != expr_end) {
			jule::Ptr<_1abcee208_stmt> _161421_stmt = *it;
			{
				(*(_161255_tokens))=(*(_161421_stmt))._field_tokens;
				jule::Ptr<_1ab182e72_Token> _161617_token = (*(_161255_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1bc19c343:;
						{
							_1abd1e5ad_pushDirective(_self_.ptr(), _1abd1e305_buildDirective(_self_.ptr(), (*(_161255_tokens))));
							goto _iter_next_1bc19b3db;
						}
					}
					_match_end_1bc19c7e9:;
				};
				{
					auto &_match_expr{ (*(_161617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1bc19ce26:;
						{
							jule::Ptr<_1ab1ab3da_VarDecl> _162521_v = _1abd2168c_buildVar(_self_, (*(_161255_tokens)));;
							if ((_162521_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Statics; __jule_push_dest.push(_162521_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1bc19c92b:;
						{
							jule::Ptr<_1ab1aa230_FnDecl> _163221_f = _1abd2aae7_getMethod(_self_, _161255_tokens);;
							if ((_163221_f != nullptr)) {
								_1abd28b5b_checkMethodReceiver(_self_.ptr(), &(_163221_f));
								_1abd2b895_applyFnMeta(_self_.ptr(), &(_163221_f));
								{ jule::Slice<jule::Ptr<_1ab1aa230_FnDecl>> &__jule_push_dest = (*((*(_161238_ipl))))._field_Methods; __jule_push_dest.push(_163221_f); };
							};
						}
					}
					else {
						_case_begin_1bc19cd6b:;
						{
							_1abd1d810_pushErr(_self_.ptr(), _161617_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1bc19b3db;
						}
					}
					_match_end_1bc19cd16:;
				};
			}
			_iter_next_1bc19b3db:;
			++it;
			goto _iter_begin_1bc19b3db;
		}
		_iter_end_1bc19b3db:;
	};
}



inline jule::Ptr<_1ab1b51d5_Impl> _1abd2b29b_buildImpl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _164533_tokens) {
	jule::Ptr<_1ab182e72_Token> _164613_token = _164533_tokens[0LL];;
	if ((_164533_tokens.len() < 2LL)) {
		_1abd1d810_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _165213_i = 1LL;;
	jule::Ptr<_1ab198570_TypeDecl> _165413_base;;
	jule::Bool _165423_ok = false;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		_165413_base = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1abd1d810_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1b51d5_Impl> _166313_ipl = jule::new_ptr<_1ab1b51d5_Impl>(_1ab1b51d5_Impl{._field_Base=_165413_base, });;
	_164613_token=_164533_tokens[_165213_i];
	if (((*(_164613_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_164613_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_166313_ipl))._field_Base, (*(_166313_ipl))._field_Dest);
			goto _julec_label_1bc1aac8b;
		};
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_165213_i)++;
	if ((_165213_i >= _164533_tokens.len())) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType(_self_, &(_164533_tokens), (&(_165213_i)), true);
		(*(_166313_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_165423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165423_ok))) {
		return nullptr;;
	};
	if ((_165213_i >= _164533_tokens.len())) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bc1aac8b:;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _170113_bodyTokens = _1abd1b511_range(&(_165213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_164533_tokens));;
	if ((_170113_bodyTokens == nullptr)) {
		_1abd1d15b_stop(_self_.ptr());
		_1abd1d810_pushErr(_self_.ptr(), _164613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_165213_i < _164533_tokens.len())) {
		_1abd1d810_pushErr(_self_.ptr(), _164533_tokens[_165213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_166313_ipl))._field_End=_164533_tokens[(_165213_i - 1LL)];
	_1abd2ae5a_parseImplBody(_self_, &(_166313_ipl), &(_170113_bodyTokens));
	return _166313_ipl;;
}



inline jule::Any _1abd2b5dc_buildNodeData(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _171638_tokens) {
	jule::Ptr<_1ab182e72_Token> _171713_token = (*(_171638_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_171713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bc1b009d:;
			{
				jule::Ptr<_1ab1aa230_FnDecl> _172117_f = _1abd24a58_buildFn(_self_, _171638_tokens, false, false);;
				if ((_172117_f != nullptr)) {
					(*(_172117_f))._field_Global=true;
				};
				return jule::Any(_172117_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bc1ae8a5:;
			{
				return jule::Any(_1abd2168c_buildVar(_self_, (*(_171638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc1b06db:;
			{
				return jule::Any(_1abd20757_buildTypeAliasDecl(_self_, _171638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1bc1aec6d:;
			{
				return _1abd27dd0_buildNodeEnumDecl(_self_, _171638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bc1aecd4:;
			{
				return jule::Any(_1abd288a3_buildStructDecl(_self_, _171638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1bc1aed4a:;
			{
				return jule::Any(_1abd29310_buildTraitDecl(_self_, _171638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1bc1aedb1:;
			{
				return jule::Any(_1abd2b29b_buildImpl(_self_, (*(_171638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bc1b07da:;
			{
				return _1abd2a7a6_buildBind(_self_, _171638_tokens);;
			}
		}
		else {
			_case_begin_1bc1aec07:;
			{
				_1abd1d810_pushErr(_self_.ptr(), _171713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc1aeba2:;
	};
}



inline void _1abd2b895_applyFnMeta(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab1aa230_FnDecl>* _174935_f) {
	(*((*(_174935_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1abd2bb4d_applyMeta(_1abd1cd5e_parser* _self_, _1ab19756e_Node* _175433_node) {
	{
		auto &_match_expr{ (*(_175433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc1b6093:;
			{
				jule::Ptr<_1ab1ab3da_VarDecl> _175717_v = (*(_175433_node))._field_Data.cast_ptr<_1ab1ab3da_VarDecl>(&__jule_any_type16);;
				if ((_175717_v == nullptr)) {
					return;;
				};
				(*(_175717_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bc1b6109:;
			{
				jule::Ptr<_1ab1aa230_FnDecl> _176417_f = (*(_175433_node))._field_Data.cast_ptr<_1ab1aa230_FnDecl>(&__jule_any_type14);;
				if ((_176417_f == nullptr)) {
					return;;
				};
				_1abd2b895_applyFnMeta(_self_, &(_176417_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bc1b6181:;
			{
				jule::Ptr<_1ab1b4338_StructDecl> _177017_sd = (*(_175433_node))._field_Data.cast_ptr<_1ab1b4338_StructDecl>(&__jule_any_type13);;
				if ((_177017_sd == nullptr)) {
					return;;
				};
				(*(_177017_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1bc1b603d:;
	};
}



inline void _1abd2be06_pushUseDecl(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab1b1676_UseDecl>* _177936_decl) {
	{ jule::Slice<jule::Ptr<_1ab1b1676_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177936_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1abd1d810_pushErr(_self_.ptr(), (*((*(_177936_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1abd1db73_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1abd2c247_pushMetaNodes(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _178738_tokens) {
	{
		auto &_match_expr{ (*((*(_178738_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bc1bc374:;
			{
				;
				jule::Ptr<_1ab1b1676_UseDecl> _179117_decl = _1abd26483_buildUseDecl(_self_.ptr(), (*(_178738_tokens)), false);;
				_1abd2be06_pushUseDecl(_self_, &(_179117_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bc1bc3eb:;
			{
				if ((((*(_178738_tokens)).len() > 1LL) && ((*((*(_178738_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1ab1b1676_UseDecl> _179621_decl = _1abd2a465_buildBindUse(_self_, (*(_178738_tokens)));;
					_1abd2be06_pushUseDecl(_self_, &(_179621_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1bc1bc473:;
			{
				_1abd1e5ad_pushDirective(_self_.ptr(), _1abd1e305_buildDirective(_self_.ptr(), (*(_178738_tokens))));
				return true;;
			}
		}
		_match_end_1bc1bc253:;
	};
	return false;;
}



inline _1ab19756e_Node _1abd2c588_parseNode(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _180734_st) {
	_1ab19756e_Node _180813_node = _1ab19756e_Node{._field_Token=(*(_180734_st))[0LL], };;
	if (_1abd2c247_pushMetaNodes(_self_, _180734_st)) {
		return _180813_node;;
	};
	jule::Any _181613_data = _1abd2b5dc_buildNodeData(_self_, _180734_st);;
	if ((_181613_data == nullptr)) {
		return _180813_node;;
	};
	_180813_node._field_Data=_181613_data;
	_1abd2bb4d_applyMeta(_self_.ptr(), &(_180813_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1abd1d810_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180813_node;;
}



inline void _1abd2c841_appendNode(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _183135_st) {
	if (((*(_183135_st)).len() == 0LL)) {
		return;;
	};
	_1ab19756e_Node _183513_node = _1abd2c588_parseNode(_self_, _183135_st);;
	if (((_183513_node._field_Data == nullptr) || _1abd1d3e2_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1ab19756e_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_183513_node); };
}



inline void _1abd2cd19_removeRange(_1abd1cd5e_parser* _self_, jule::I64 _184230_i, jule::U64 _184238_id, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _184252_tokens, jule::Slice<jule::I64>* _184275_ranges) {
	jule::U64 _18439_close = _1abd1c04a_getCloseOfBrace(_184238_id);;
	for (; (_184230_i >= 0LL); (_184230_i)--) {
		{
			jule::Ptr<_1ab182e72_Token> _184513_tok = (*(_184252_tokens))[(*(_184275_ranges))[_184230_i]];;
			if (((*(_184513_tok))._field_Id != _18439_close)) {
				goto _iter_next_1bc1c757c;
			};
			(*(_184275_ranges))=jule::append((*(_184275_ranges)).slice(0LL, _184230_i),(*(_184275_ranges)).slice((_184230_i + 1LL)));
			goto _iter_end_1bc1c757c;
		}
	_iter_next_1bc1c757c:;
	}
	_iter_end_1bc1c757c:;;
}



inline void _1abd2d237_pushWrongOrderCloseErr(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab182e72_Token>* _185442_t, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _185454_tokens, jule::Slice<jule::I64>* _185473_ranges) {
	{
		auto &_match_expr{ (*((*(_185454_tokens))[(*(_185473_ranges))[((*(_185473_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1bc1c98ae:;
			{
				_1abd1d810_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1bc1c9936:;
			{
				_1abd1d810_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1bc1c99ad:;
			{
				_1abd1d810_pushErr(_self_, (*(_185442_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc1c978d:;
	};
}



inline void _1abd2d710_pushRangeClose(_1abd1cd5e_parser* _self_, jule::Ptr<_1ab182e72_Token> _186533_t, jule::U64 _186544_left, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _186560_tokens, jule::Slice<jule::I64>* _186583_ranges) {
	jule::I64 _18669_n = (*(_186583_ranges)).len();;
	if ((_18669_n == 0LL)) {
		{
			auto &_match_expr{ (*(_186533_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1bc1cc4c7:;
				{
					_1abd1d810_pushErr(_self_, _186533_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1bc1cc54e:;
				{
					_1abd1d810_pushErr(_self_, _186533_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1bc1cc5c6:;
				{
					_1abd1d810_pushErr(_self_, _186533_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1bc1cc3ea:;
		};
		return;;
	} else if (((*((*(_186560_tokens))[(*(_186583_ranges))[(_18669_n - 1LL)]]))._field_Id != _186544_left)) {
		_1abd2d237_pushWrongOrderCloseErr(_self_, &(_186533_t), _186560_tokens, _186583_ranges);
	};
	_1abd2cd19_removeRange(_self_, static_cast<jule::I64>((_18669_n - 1LL)), (*(_186533_t))._field_Id, _186560_tokens, _186583_ranges);
}



inline void _1abd2d9b8_checkRanges(_1abd1cd5e_parser* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _188331_tokens) {
	jule::Slice<jule::I64> _188417_ranges = nullptr;;
	{
		auto expr = _188331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1d061d:;
		if (it != expr_end) {
			jule::I64 _188613_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> *_188616_token = it;
			{
				{
					auto &_match_expr{ (*((*(_188616_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bc1d1432:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _188417_ranges; __jule_push_dest.push(_188613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bc1d14a9:;
						{
							_1abd2d710_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(74LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1bc1d1531:;
						{
							_1abd2d710_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(72LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bc1d15a8:;
						{
							_1abd2d710_pushRangeClose(_self_, (*(_188616_token)), static_cast<jule::U64>(76LLU), _188331_tokens, &(_188417_ranges));
						}
					}
					_match_end_1bc1d1344:;
				};
			}
			_iter_next_1bc1d061d:;
			++it;
			_188613_i++;
			goto _iter_begin_1bc1d061d;
		}
		_iter_end_1bc1d061d:;
	};
	{
		auto expr = &(_188417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1d05a7:;
		if (it != expr_end) {
			jule::I64 _190116_i = *it;
			{
				jule::Ptr<_1ab182e72_Token> _190213_token = (*(_188331_tokens))[_190116_i];;
				{
					auto &_match_expr{ (*(_190213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bc1d40c2:;
						{
							_1abd1d810_pushErr(_self_, _190213_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bc1d4149:;
						{
							_1abd1d810_pushErr(_self_, _190213_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bc1d41c1:;
						{
							_1abd1d810_pushErr(_self_, _190213_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1bc1d404a:;
				};
			}
			_iter_next_1bc1d05a7:;
			++it;
			goto _iter_begin_1bc1d05a7;
		}
		_iter_end_1bc1d05a7:;
	};
}



inline void _1abd2dc71_parse(jule::Ptr<_1abd1cd5e_parser> _self_, jule::Ptr<_1ab18873b_File>* _191430_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1ab1965b2_Ast>(_1ab1965b2_Ast{._field_File=(*(_191430_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1abd0c4be_exprBuilder>(_1abd0c4be_exprBuilder{._field_p=_self_});
	_1abd2d9b8_checkRanges(_self_.ptr(), &((*((*(_191430_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abcee208_stmt>> _192713_stmts = _1abcee5b0_splitStmts(&((*((*(_191430_f))))._field_Tokens));;
	jule::I64 _193013_i = 0LL;;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1abcee208_stmt> _193217_stmt = _192713_stmts[_193013_i];;
			if (((*(_193217_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_193217_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1bc1d7a21;
			};
			if ((!(_1a7d0780e_IsTopDirective((*((*(_193217_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1bc1d7a21;
			};
			{ jule::Slice<jule::Ptr<_1ab19798c_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1abd1e305_buildDirective(_self_.ptr(), (*(_193217_stmt))._field_tokens)); };
		}
	_iter_next_1bc1d7a21:;
	}
	_iter_end_1bc1d7a21:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_193013_i < _192713_stmts.len()); (_193013_i)++) {
		{
			jule::Ptr<_1abcee208_stmt> _194917_stmt = _192713_stmts[_193013_i];;
			_1abd2c841_appendNode(_self_, &((*(_194917_stmt))._field_tokens));
			if (_1abd1d3e2_stopped(_self_.ptr())) {
				goto _iter_end_1bc1da491;
			};
		}
	_iter_next_1bc1da491:;
	}
	_iter_end_1bc1da491:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1abd1d810_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd1cd5e_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1abd305d0_pushErr(_1abd3003b_typeBuilder* _self_, jule::Ptr<_1ab182e72_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1abd1d810_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1abd30943_pushSuggestion(_1abd3003b_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1abd1db73_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd30bc9_buildNamespace(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab198570_TypeDecl> _5513_t = jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1ab19931d_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1ab19931d_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ab182e72_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1abd305d0_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1abd30943_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ab182e72_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1bc1e18a4;
			};
			(_6013_n)++;
		}
	_iter_next_1bc1e18a4:;
	}
	_iter_end_1bc1e18a4:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1abd3147c_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _1abd30e60_buildGenerics(_1abd3003b_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab182e72_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _9313_parts = _1abd311e6_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1abd305d0_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1e8449:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1ab198570_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1abd305d0_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1ab198570_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1bc1e8449:;
			++it;
			goto _iter_begin_1bc1e8449;
		}
		_iter_end_1bc1e8449:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1abd311e6_identGenerics(_1abd3003b_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ab182e72_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1bc1ec99d:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1bc1eca25:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1bc1ec937:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1bc1eb9ad;
			};
		}
	_iter_next_1bc1eb9ad:;
	}
	_iter_end_1bc1eb9ad:;;
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _12813_parts;;
	jule::Slice<_1a7d05a93_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd1bc81_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd3147c_buildIdent(_1abd3003b_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1abd30bc9_buildNamespace(_self_);;
	};
	jule::Ptr<_1ab182e72_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ab198b7a_IdentTypeDecl> _14113_it = jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab198570_TypeDecl> _14713_itd = jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1abd30e60_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1abd305d0_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1abd305d0_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1ab198e77_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1ab198e77_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1ab198b7a_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1ab198570_TypeDecl> _16613_ident = _1abd3147c_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bc2081e5:;
			{
				{ jule::Slice<jule::Ptr<_1ab198b7a_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1ab198b7a_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1bc20826c:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1ab198e77_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1bc20817e:;
	};
	return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd31713_buildCppLink(_1abd3003b_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1abd305d0_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1ab198570_TypeDecl> _18513_t = _1abd3147c_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1ab198b7a_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd31999_buildFn(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab182e72_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ab1aa230_FnDecl> _19213_f = _1abd245a2_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab1aa593_IsAnon(_19213_f.ptr())))) {
		_1abd305d0_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd31c30_buildPtr(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab182e72_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1abd305d0_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab19a099_PtrTypeDecl>(_1ab19a099_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1ab198570_TypeDecl> _22313_elem = _1abd32c86_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab19a099_PtrTypeDecl>(_1ab19a099_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd31eb6_buildSptr(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab182e72_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1abd305d0_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab198570_TypeDecl> _24413_elem = _1abd32c86_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab19961a_SptrTypeDecl>(_1ab19961a_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd3224c_buildSlc(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab182e72_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ab198570_TypeDecl> _26013_elem = _1abd32c86_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1ab1999a0_SlcTypeDecl>(_1ab1999a0_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd324d3_buildArr(_1abd3003b_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _27313_exprTokens = _1abd1b511_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1abd305d0_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ab198570_TypeDecl> _27913_elem = _1abd32c86_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab19a83b_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1ab19a83b_ArrTypeDecl>(_1ab19a83b_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1ab182e72_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1abd1deb4_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd32769_buildMap(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab182e72_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1abd305d0_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _31013_keyTokens = _1abd1b511_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1abd305d0_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1abd305d0_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ab19b089_MapTypeDecl> _31913_mapt = jule::new_ptr<_1ab19b089_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1ab198570_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1abd305d0_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1ab198570_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_assign_result = _1abd20416_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd32a00_buildEnumerable(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab182e72_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1abd305d0_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1abd3224c_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1abd324d3_buildArr(_self_);;
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd32c86_step(_1abd3003b_typeBuilder* _self_) {
	jule::Ptr<_1ab182e72_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bc22837a:;
			{
				return _1abd3147c_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1bc2283e1:;
			{
				return _1abd31713_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bc227874:;
			{
				return _1abd31999_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc2278da:;
			{
				return _1abd31c30_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc227951:;
			{
				return _1abd31eb6_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bc2279b7:;
			{
				return jule::new_ptr<_1ab198570_TypeDecl>(_1ab198570_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ab19961a_SptrTypeDecl>(_1ab19961a_SptrTypeDecl{._field_Elem=_1abd31eb6_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1bc228479:;
			{
				return _1abd32a00_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bc2284e0:;
			{
				return _1abd32769_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1bc22780d:;
			{
				((*((*(_self_))._field_i)))++;
				_1abd305d0_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1bc2277a8:;
	};
}



inline __jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool _1abd3301c_build(_1abd3003b_typeBuilder* _self_) {
	__jule_tuple_x_1ab198570_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab198570_TypeDecl> _38813_root = _1abd32c86_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1abd2e777_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3003b_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab4e75c2_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ab4e90eb_pushErr(_1ab4e8a9b_directiveEval* _self_, jule::Ptr<_1ab182e72_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1a7d05a93_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_1a7d06005_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _1ab4e94e7_splitOperans(_1ab4e8a9b_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1ab182e72_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bc24cba7:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1bc24be4d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bc24cc2e:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1bc24cb41:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1bc24be4d;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_1bc24be4d:;
	}
	_iter_end_1bc24be4d:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1ab4e90eb_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1ab4e9838_evalDirectiveIdent(_1ab4e8a9b_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc25069e:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1bc25069e:;
			++it;
			goto _iter_begin_1bc25069e;
		}
		_iter_end_1bc25069e:;
	};
	return false;;
}



inline jule::Bool _1ab4e9b79_evalDirectivePart(_1ab4e8a9b_directiveEval* _self_, jule::Slice<jule::Ptr<_1ab182e72_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1ab4e90eb_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1ab4e9838_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1ab4e9e10_eval(_1ab4e8a9b_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ab4e90eb_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _10413_logicalOrParts = _1ab4e94e7_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac3b576:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _11117_logicalAndParts = _1ab4e94e7_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1baaa99ee:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ab182e72_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1ab182e72_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1ab182e72_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1ab4e90eb_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1ab4e9b79_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1baaa99ee:;
						++it;
						goto _iter_begin_1baaa99ee;
					}
					_iter_end_1baaa99ee:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1bac3b576:;
			++it;
			goto _iter_begin_1bac3b576;
		}
		_iter_end_1bac3b576:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab4e8a9b_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abd34172_JuleImporter> static__1abd3456d_New(_1ab4e75c2_CompileInfo _5819_info) {
	jule::Ptr<_1abd34172_JuleImporter> _5913_imp = jule::new_ptr<_1abd34172_JuleImporter>(_1abd34172_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1a7e1590b_PathStdlib}), });;
	_1ab4e7e52_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> _1abd34804_AllPackages(_1abd34172_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1abd34c44_SetModPath(_1abd34172_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1abd34eca_GetModPath(_1abd34172_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1abd3531b_ModById(_1abd34172_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1abd3565c_GetImport(_1abd34172_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc95a30:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1bbc95a30:;
			++it;
			goto _iter_begin_1bbc95a30;
		}
		_iter_end_1bbc95a30:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log _1abd35a58_ImportPackage(_1abd34172_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d779b97c_DirEntry>> _9713_dirents = ({
		auto except = static__1a7c5dac8_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1a7d05a93_Log>::make({_1abd33b88_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1ab25e449_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1a7d05a93_Log> _10521_errs = _1ab25e713_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ab1965b2_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1ab1965b2_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc971d5:;
		if (it != expr_end) {
			jule::Ptr<_1d779b97c_DirEntry> _11316_dirent = *it;
			{
				if ((_1d77a0c8e_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_1a7c37c8e_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1bbc971d5;
				};
				jule::Str _11913__path = _1a7c5a971_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1ab18873b_File> _12017_file = _1ab189ad3_NewFileSet(_11913__path);;
				_1ab188b26_Fill(_12017_file.ptr(), _1abd338ad_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_1a7d05a93_Log> _12217_errors = _1ab1961e9_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1abca8503_FileInfo> _12717_finfo = _1abcebe1a_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ab4e6769_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1bbc971d5;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_1a7d05a93_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd36240_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1bbc971d5;
				};
				{ jule::Slice<jule::Ptr<_1ab1965b2_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1bbc971d5:;
			++it;
			goto _iter_begin_1bbc971d5;
		}
		_iter_end_1bbc971d5:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1abd35d11_Imported(_1abd34172_JuleImporter* _self_, jule::Ptr<_1ab242a9d_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc99e96:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1bbc99e96:;
			++it;
			goto _iter_begin_1bbc99e96;
		}
		_iter_end_1bbc99e96:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbca25ca:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1bbca4302;
					};
				}
				_iter_next_1bbca25ca:;
				++it;
				_16217_i++;
				goto _iter_begin_1bbca25ca;
			}
			_iter_end_1bbca25ca:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1bbca4302:;
	};
	{ jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1a7d05a93_Log _1abd36240_isPassBuildDirectives(_1abd34172_JuleImporter* _self_, jule::Ptr<_1ab1965b2_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbca5732:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1bbca5732;
				};
				_1ab4e8a9b_directiveEval _18417_de = _1ab4e8a9b_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1ab4e9e10_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1bbca5732:;
			++it;
			goto _iter_begin_1bbca5732;
		}
		_iter_end_1bbca5732:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd34172_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd39386_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bbcc7215_isCommonOrdered(jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _1834_s, jule::Ptr<_1ab1b9470_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcc825a:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbcc8ba6:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b9470_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bbcc8ba6:;
						++it;
						goto _iter_begin_1bbcc8ba6;
					}
					_iter_end_1bbcc8ba6:;
				};
			}
			_iter_next_1bbcc825a:;
			++it;
			goto _iter_begin_1bbcc825a;
		}
		_iter_end_1bbcc825a:;
	};
	return true;;
}

inline jule::Bool _1bbccc1a4_isCommonOrdered(jule::Slice<jule::Ptr<_1ab2853a4_Var>> _1834_s, jule::Ptr<_1ab2853a4_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbccd1a5:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbccdb01:;
					if (it != expr_end) {
						jule::Ptr<_1ab2853a4_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bbccdb01:;
						++it;
						goto _iter_begin_1bbccdb01;
					}
					_iter_end_1bbccdb01:;
				};
			}
			_iter_next_1bbccd1a5:;
			++it;
			goto _iter_begin_1bbccd1a5;
		}
		_iter_end_1bbccd1a5:;
	};
	return true;;
}



inline void _1bbcc38a4_orderCommon(jule::Slice<jule::Ptr<_1ab1b9470_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcc4d5b:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1bbcc7215_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1bbcc5a82:;
				}
				_iter_end_1bbcc5a82:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1bbcc4d5b;
				};
				(_3213_n)--;
			}
			_iter_next_1bbcc4d5b:;
			++it;
			goto _iter_begin_1bbcc4d5b;
		}
		_iter_end_1bbcc4d5b:;
	};
}

inline void _1bbcc7aa6_orderCommon(jule::Slice<jule::Ptr<_1ab2853a4_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcc9cea:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1bbccc1a4_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1bbccaa21:;
				}
				_iter_end_1bbccaa21:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1bbcc9cea;
				};
				(_3213_n)--;
			}
			_iter_next_1bbcc9cea:;
			++it;
			goto _iter_begin_1bbcc9cea;
		}
		_iter_end_1bbcc9cea:;
	};
}



inline void static__1abd39ee1_orderStructures(jule::Slice<jule::Ptr<_1ab1b9470_Struct>>* _5136_structs) {
	_1bbcc38a4_orderCommon(_5136_structs);
}



inline void static__1abd3a222_orderVars(jule::Slice<jule::Ptr<_1ab2853a4_Var>>* _5730_vars) {
	_1bbcc7aa6_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1abd395ea_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe631c4_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1abe97d74_optimizeChild(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab2212b8_Scope>* _3938_s) {
	jule::Ptr<_1abe978bd_scopeDeadCode> _4013_sdc = jule::new_ptr<_1abe978bd_scopeDeadCode>(_1abe978bd_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1abe9a78e_optimizeStmts(_4013_sdc);
	};
}



inline void _1abe9812c_optimizeBodyChildExceptional(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab2212b8_Scope>* _5053_s) {
	jule::Ptr<_1abe978bd_scopeDeadCode> _5113_sdc = jule::new_ptr<_1abe978bd_scopeDeadCode>(_1abe978bd_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1abe9a78e_optimizeStmts(_5113_sdc);
	};
}



inline void _1abe983d5_optimizeBodyChild(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab2212b8_Scope>* _6142_s) {
	jule::Ptr<_1abe978bd_scopeDeadCode> _6213_sdc = jule::new_ptr<_1abe978bd_scopeDeadCode>(_1abe978bd_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1abe9a78e_optimizeStmts(_6213_sdc);
	};
}



inline void _1abe9868d_optimizeExprModel(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1abe9bb25_exprDeadCode _729_edc = static__1abe9c263_new(&(_self_));;
	_1abea318c_optimize(&_729_edc, _7142_model);
}



inline void _1abe9888b_eliminateFollowed(_1abe978bd_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1abe978bd_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1bbd4d7ca:;
	}
	_iter_end_1bbd4d7ca:;;
}



inline void _1abe98b44_pushGoto(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab224035_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1bbd51c1d:;
	}
	_iter_end_1bbd51c1d:;;
	{ jule::Slice<jule::Ptr<_1ab224035_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1abe98dec_pushLabel(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab223b5b_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1bbd53e40;
			};
			(_10313_i)++;
		}
	_iter_next_1bbd53e40:;
	}
	_iter_end_1bbd53e40:;;
	{ jule::Slice<jule::Ptr<_1ab223b5b_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1abe991a5_optimizeRangeIter(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab223100_RangeIter> _11541_it) {
	_1abe9868d_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1abe983d5_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1abe9945d_optimizeWhileIter(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab2226a4_WhileIter> _12041_it) {
	_1abe9868d_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1abe9a591_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1abe983d5_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1abe99716_optimizeInfIter(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab2221ed_InfIter> _12839_it) {
	_1abe983d5_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1abe999be_optimizeConditional(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab221e01_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd5ace3:;
		if (it != expr_end) {
			jule::Ptr<_1ab2216d6_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1abe9868d_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1abe983d5_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1bbd5ace3:;
			++it;
			goto _iter_begin_1bbd5ace3;
		}
		_iter_end_1bbd5ace3:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1abe97d74_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1abe983d5_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1abe99c77_optimizeMatch(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab2253ee_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd5e357:;
		if (it != expr_end) {
			jule::Ptr<_1ab226037_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd5eca3:;
					if (it != expr_end) {
						jule::Ptr<_1ab2b5c0e_Data> _15225_expr = *it;
						{
							_1abe9868d_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1bbd5eca3:;
						++it;
						goto _iter_begin_1bbd5eca3;
					}
					_iter_end_1bbd5eca3:;
				};
				_1abe983d5_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1bbd5e357:;
			++it;
			goto _iter_begin_1bbd5e357;
		}
		_iter_end_1bbd5e357:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1abe97d74_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1abe983d5_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1abe9a030_optimizeAssign(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab2248b5_Assign> _16838_assign) {
	_1abe9868d_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1abe9868d_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1abe9a2d8_optimizeMultiAssign(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Ptr<_1ab224c8e_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd641b4:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b5c0e_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1abe9868d_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1bbd641b4:;
			++it;
			goto _iter_begin_1bbd641b4;
		}
		_iter_end_1bbd641b4:;
	};
	_1abe9868d_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1abe9a591_optimizeStmt(jule::Ptr<_1abe978bd_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd65d64:;
			{
				jule::Ptr<_1ab2212b8_Scope> _18517_scope = _18236_st.cast_ptr<_1ab2212b8_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1abe9aabe_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1abe97d74_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bbd65dca:;
			{
				_1abe991a5_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1ab223100_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bbd65e41:;
			{
				_1abe9945d_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1ab2226a4_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bbd65eb8:;
			{
				_1abe99716_optimizeInfIter(_self_, _18236_st.cast_ptr<_1ab2221ed_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bbd66040:;
			{
				_1abe999be_optimizeConditional(_self_, _18236_st.cast_ptr<_1ab221e01_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bbd660b7:;
			{
				_1abe99c77_optimizeMatch(_self_, _18236_st.cast_ptr<_1ab2253ee_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bbd6613e:;
			{
				_1abe9a030_optimizeAssign(_self_, _18236_st.cast_ptr<_1ab2248b5_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bbd661b6:;
			{
				_1abe9a2d8_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1ab224c8e_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd6623d:;
			{
				jule::Ptr<_1ab2b5c0e_Data> _20617_d = _18236_st.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1bbd65c21;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1bbd6b7b5:;
						{
							_1abe9888b_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1bbd6be47:;
						{
							_1abe9868d_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1bbd6bde2:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bbd662b5:;
			{
				_1abe9888b_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bbd6633c:;
			{
				_1abe98b44_pushGoto(_self_, _18236_st.cast_ptr<_1ab224035_GotoSt>(&__jule_any_type42));
				_1abe9888b_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bbd663b4:;
			{
				_1abe98dec_pushLabel(_self_, _18236_st.cast_ptr<_1ab223b5b_Label>(&__jule_any_type21));
			}
		}
		_match_end_1bbd65c21:;
	};
}



inline void _1abe9a78e_optimizeStmts(jule::Ptr<_1abe978bd_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1abe9a591_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1bbd6e60e:;
	}
	_iter_end_1bbd6e60e:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe978bd_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1abe9bb25_exprDeadCode static__1abe9c263_new(jule::Ptr<_1abe978bd_scopeDeadCode>* _4824_s) {
	return _1abe9bb25_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1abe9c51b_binary(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c1697_BinaryExprModel> _5425_m) {
	_1abea318c_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1abea318c_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1abe9c7c4_unary(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c1a71_UnaryExprModel> _5924_m) {
	_1abea318c_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1abe9ca7c_structureLit(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c2445_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd73190:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c209e_StructArgExprModel> _6421_arg = *it;
			{
				_1abea318c_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1bbd73190:;
			++it;
			goto _iter_begin_1bbd73190;
		}
		_iter_end_1bbd73190:;
	};
}



inline void _1abe9cd35_allocStructure(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c2742_AllocStructLitExprModel> _6933_m) {
	_1abe9ca7c_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1abe9d0dd_casting(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c2cc5_CastingExprModel> _7326_m) {
	_1abea318c_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1abe9d396_args(_1abe9bb25_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd75626:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1abea318c_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1bbd75626:;
			++it;
			goto _iter_begin_1bbd75626;
		}
		_iter_end_1bbd75626:;
	};
}



inline void _1abe9d64e_funcCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c3677_FnCallExprModel> _8327_m) {
	_1abea318c_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1abe9d396_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1abe9812c_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1abe9d907_slice(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c3a51_SliceExprModel> _9124_m) {
	_1abe9d396_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1abe9dbb0_array(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c6a98_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1abea318c_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1abe9d396_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1abe9de68_indexing(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c4007_IndexingExprModel> _10227_m) {
	_1abea318c_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1abea318c_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1abe9e221_anonFunc(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c43d1_AnonFnExprModel> _10727_m) {
	_1abe9aabe_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1abe9e4c9_mapExpr(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c4c61_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd7bcc0:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c47aa_KeyValPairExprModel> _11221_pair = *it;
			{
				_1abea318c_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1abea318c_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1bbd7bcc0:;
			++it;
			goto _iter_begin_1bbd7bcc0;
		}
		_iter_end_1bbd7bcc0:;
	};
}



inline void _1abe9e782_slicing(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c52e4_SlicingExprModel> _11826_m) {
	_1abea318c_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1abea318c_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1abea318c_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1abe9ea3a_traitSub(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c5877_TraitSubIdentExprModel> _12627_m) {
	_1abea318c_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1abe9ece3_structureSub(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _13031_m) {
	_1abea318c_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1abea009b_tuple(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c6d95_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd80dc3:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b5c0e_Data> _13521_d = *it;
			{
				_1abea318c_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1bbd80dc3:;
			++it;
			goto _iter_begin_1bbd80dc3;
		}
		_iter_end_1bbd80dc3:;
	};
}



inline void _1abea0354_newCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c7a22_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1abea318c_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1abea060c_outCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c726e_BuiltinOutCallExprModel> _14626_m) {
	_1abea318c_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1abea08b5_outlnCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c7648_BuiltinOutlnCallExprModel> _15028_m) {
	_1abea318c_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1abea0b6d_panicCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel> _15428_m) {
	_1abea318c_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1abea0e26_assertCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel> _15829_m) {
	_1abea318c_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1abea11ce_errorCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel> _16228_m) {
	_1abea318c_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1abea1487_makeCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1abea318c_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1abea318c_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1abea1740_appendCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel> _17529_m) {
	_1abea318c_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1abea318c_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1abea19e8_lenCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c902e_BuiltinLenCallExprModel> _18026_m) {
	_1abea318c_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1abea1ca1_capCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c932b_BuiltinCapCallExprModel> _18426_m) {
	_1abea318c_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1abea2059_deleteCall(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel> _18829_m) {
	_1abea318c_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1abea318c_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1abea2312_sizeof(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1c5a64_SizeofExprModel> _19525_m) {
	_1abea318c_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1abea25ba_alignof(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1ca6d4_AlignofExprModel> _19926_m) {
	_1abea318c_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1abea2873_integratedToStr(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1caccd_IntegratedToStrExprModel> _20334_m) {
	_1abea318c_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1abea2b2b_free(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1cb4a4_FreeExprModel> _20723_m) {
	_1abea318c_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1abea2dd4_backendEmit(_1abe9bb25_exprDeadCode* _self_, jule::Ptr<_1ab1cb1a7_BackendEmitExprModel> _21130_m) {
	_1abe9d396_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1abea318c_optimize(_1abe9bb25_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bbd8e431:;
			{
				_1abe9c51b_binary(_self_, (*(_21528_model)).cast_ptr<_1ab1c1697_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bbd8e497:;
			{
				_1abe9c7c4_unary(_self_, (*(_21528_model)).cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bbd8e50d:;
			{
				_1abe9ca7c_structureLit(_self_, (*(_21528_model)).cast_ptr<_1ab1c2445_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bbd8e585:;
			{
				_1abe9cd35_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1ab1c2742_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bbd8e60c:;
			{
				_1abe9d0dd_casting(_self_, (*(_21528_model)).cast_ptr<_1ab1c2cc5_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bbd8e684:;
			{
				_1abe9d64e_funcCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bbd8e70b:;
			{
				_1abe9d907_slice(_self_, (*(_21528_model)).cast_ptr<_1ab1c3a51_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bbd8e783:;
			{
				_1abe9dbb0_array(_self_, (*(_21528_model)).cast_ptr<_1ab1c6a98_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bbd8e80a:;
			{
				_1abe9de68_indexing(_self_, (*(_21528_model)).cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bbd8e882:;
			{
				_1abe9e221_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1ab1c43d1_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bbd8e909:;
			{
				_1abe9e4c9_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1ab1c4c61_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bbd8e981:;
			{
				_1abe9e782_slicing(_self_, (*(_21528_model)).cast_ptr<_1ab1c52e4_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bbd8ea08:;
			{
				_1abe9ea3a_traitSub(_self_, (*(_21528_model)).cast_ptr<_1ab1c5877_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bbd8ea80:;
			{
				_1abe9ece3_structureSub(_self_, (*(_21528_model)).cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bbd8eb07:;
			{
				_1abea009b_tuple(_self_, (*(_21528_model)).cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bbd8eb7e:;
			{
				_1abea060c_outCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c726e_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bbd8ec06:;
			{
				_1abea08b5_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c7648_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bbd8ec7d:;
			{
				_1abea0354_newCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c7a22_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bbd8ed05:;
			{
				_1abea0b6d_panicCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c7deb_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bbd8ed7c:;
			{
				_1abea0e26_assertCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c83a2_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbd8ee04:;
			{
				_1abea11ce_errorCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bbd8ee7b:;
			{
				_1abea1487_makeCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c8858_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd90003:;
			{
				_1abea1740_appendCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c8c32_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bbd9007a:;
			{
				_1abea19e8_lenCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c902e_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bbd90102:;
			{
				_1abea1ca1_capCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c932b_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bbd90179:;
			{
				_1abea2059_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1ab1c9705_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bbd90201:;
			{
				_1abea2312_sizeof(_self_, (*(_21528_model)).cast_ptr<_1ab1c5a64_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bbd90278:;
			{
				_1abea25ba_alignof(_self_, (*(_21528_model)).cast_ptr<_1ab1ca6d4_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bbd90300:;
			{
				_1abea2873_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1ab1caccd_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bbd90377:;
			{
				_1abea2b2b_free(_self_, (*(_21528_model)).cast_ptr<_1ab1cb4a4_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bbd903ee:;
			{
				_1abea2dd4_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1ab1cb1a7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1bbd8e189:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abe9bb25_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3d9e32_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3da350_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3da64c_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3dab7a_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3db20d_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3db50a_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3db807_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3dbc36_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3dc110_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab3dd2ba_scopeOptimizer> static__1ab3dd809_new(jule::Ptr<_1ab2212b8_Scope> _4623_scope) {
	return jule::new_ptr<_1ab3dd2ba_scopeOptimizer>(_1ab3dd2ba_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1ab3ddab2_setCurrentStmt(_1ab3dd2ba_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1ab3ddcb0_removeCurrent(_1ab3dd2ba_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1ab3de068_optimizeData(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2b5c0e_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bc31c172:;
			{
				jule::Ptr<_1ab1c3677_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34);;
				if (_1d72610e0_Production) {
					if (((!(_1ab1d3797_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1ab3e2621_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1ab3ddab2_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1bc31c11c:;
	};
	static__1ab3e4a1e_optimize(&((*(_6135_d))._field_Model));
}



inline void _1ab3de321_optimizeVar(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2853a4_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1ab3e4a1e_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ab3de5c9_optimizeConditional(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab221e01_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc321a8e:;
		if (it != expr_end) {
			jule::Ptr<_1ab2216d6_If> _8321_elif = *it;
			{
				static__1ab3e4a1e_optimize(&((*(_8321_elif))._field_Expr));
				_1ab3e1ea0_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1bc321a8e:;
			++it;
			goto _iter_begin_1bc321a8e;
		}
		_iter_end_1bc321a8e:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1ab3e1ea0_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1ab3edd9c_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc323c5b:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1ab2216d6_If> _9821_elif = *it;
			{
				if ((!(_1ab3e292e_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1bc323c5b;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1ab2219d3_Else>(_1ab2219d3_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1bc323c5b;
			}
			_iter_next_1bc323c5b:;
			++it;
			_9814_i++;
			goto _iter_begin_1bc323c5b;
		}
		_iter_end_1bc323c5b:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab2216d6_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1ab2216d6_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1ab3e3303_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1bc327688:;
	}
	_iter_end_1bc327688:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc328c1c:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1ab2216d6_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1bc328c1c:;
			++it;
			_13513_j++;
			goto _iter_begin_1bc328c1c;
		}
		_iter_end_1bc328c1c:;
	};
	if ((_13413_only != -1LL)) {
		_1ab3ddab2_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ab3de9e7_buildDefaultConstantTrueCase(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab226037_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1ab2253ee_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_1bc32b967:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1bc32b8ce;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1bc32d8d1:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1bc32b8ce;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1bc32da35:;
					{
						goto _iter_end_1bc32b8ce;
					}
				}
				_match_end_1bc32d9d0:;
			};
		}
	_iter_next_1bc32b8ce:;
	}
	_iter_end_1bc32b8ce:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1ab3deca0_optimizeMatch(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2253ee_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3313c8:;
		if (it != expr_end) {
			jule::Ptr<_1ab226037_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc331d24:;
					if (it != expr_end) {
						jule::Ptr<_1ab2b5c0e_Data> _17925_expr = *it;
						{
							static__1ab3e4a1e_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1bc331d24:;
						++it;
						goto _iter_begin_1bc331d24;
					}
					_iter_end_1bc331d24:;
				};
				_1ab3e1ea0_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1bc3313c8:;
			++it;
			goto _iter_begin_1bc3313c8;
		}
		_iter_end_1bc3313c8:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1ab3e1ea0_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1ab3edd9c_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc333bd3:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1ab226037_Case> _19525_case = *it;
			{
				if ((!(_1ab3e3039_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1bc333bd3;
				};
				_19213_constCase=true;
				_1ab3de9e7_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1bc333bd3;
			}
			_iter_next_1bc333bd3:;
			++it;
			_19518_i++;
			goto _iter_begin_1bc333bd3;
		}
		_iter_end_1bc333bd3:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab226037_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1ab226037_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1ab3e35bc_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1bc336ad7:;
	}
	_iter_end_1bc336ad7:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc252041:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1ab226037_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1bc252041:;
			++it;
			_22513_j++;
			goto _iter_begin_1bc252041;
		}
		_iter_end_1bc252041:;
	};
	if ((_22413_only != -1LL)) {
		_1ab3ddab2_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ab3e0058_optimizeRangeIter(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab223100_RangeIter> _24140_it) {
	static__1ab3e4a1e_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1ab3e1ea0_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1ab3e0311_optimizeWhileIter(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2226a4_WhileIter> _24640_it) {
	static__1ab3e4a1e_optimize(&((*(_24640_it))._field_Expr));
	_1ab3e1be7_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1ab3e1ea0_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1ab3e0652_substr(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2248b5_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bc257563:;
			{
				jule::Ptr<_1ab1c52e4_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1ab1c52e4_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1ab3ddab2_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ab3db20d_MutSlicingExprModel>(_1ab3db20d_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1bc25750d:;
	};
	return false;;
}



inline jule::Bool _1ab3e0993_strAssign(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2248b5_Assign> _27232_a) {
	if ((!(_1ab3ee166_Str))) {
		return false;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _2769_lp = _1ab2e8b76_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1ab302586_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1ab3e0652_substr(_self_, _27232_a);;
}



inline jule::Bool _1ab3e0cd4_sliceAssign(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2248b5_Assign> _28334_a) {
	if (((!(_1ab3ee430_Slice)) || (_1ab2e9bcc_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1ab3e0652_substr(_self_, _28334_a);;
}



inline void _1ab3e108c_optimizeAssign(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2248b5_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1ab3d9360_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1ab3ddcb0_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1ab3e0993_strAssign(_self_, _29137_assign) || _1ab3e0cd4_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1bc25e955:;
			{
				return;;
			}
		}
		_match_end_1bc25d5ad:;
	};
	static__1ab3e4a1e_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1ab3e4a1e_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bc2612c5:;
			{
				if (((!(_1ab3ed176_Math)) || (_1ab2ea1e9_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1bc261270;
				};
				jule::U64 _31413_oldId = 0LLU;;
				jule::Str _31420_oldKind;;
				({
					jule::U64 ___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*((*(_29137_assign))._field_Op))._field_Kind;
					_31413_oldId = ___jule_assign_arg;
					_31420_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1bc263e10:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(63LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1bc263e76:;
						{
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(64LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1bc263a9c:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:323:17"));;
						}
					}
					_match_end_1bc263a47:;
				};
				jule::Any _32517_model = jule::Any(jule::new_ptr<_1ab1c1697_BinaryExprModel>(_1ab1c1697_BinaryExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
				static__1ab3e4a1e_optimize(&(_32517_model));
				{
					auto &_match_expr{ _32517_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1bc263690:;
						{
							(*(_29137_assign))._field_R=jule::new_ptr<_1ab1c119c_OperandExprModel>((*((*(_29137_assign))._field_R)));
							(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
							(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
							(*((*(_29137_assign))._field_R))._field_Model=_32517_model;
							return;;
						}
					}
					_match_end_1bc26363a:;
				};
				(*((*(_29137_assign))._field_Op))._field_Id=_31413_oldId;
				(*((*(_29137_assign))._field_Op))._field_Kind=_31420_oldKind;
				return;;
			}
		}
		_match_end_1bc261270:;
	};
	if (_1ab3ecd68_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1bc269b6e:;
				{
					jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel> _34721_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1ab1c8c32_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1ab3ec0ba_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_34721_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_34721_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1bc26c05b:;
							{
								_1ab3ddab2_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ab3dbc36_PushToSliceExprModel>(_1ab3dbc36_PushToSliceExprModel{._field_Dest=(*(_34721_m))._field_Dest, ._field_Elems=(*(_34721_m))._field_Elements.cast_ptr<_1ab1c3a51_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1bc26bb93:;
							{
								_1ab3ddab2_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ab3dc110_AppendToSliceExprModel>(_1ab3dc110_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_34721_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1bc26bb3d:;
					};
				}
			}
			_match_end_1bc269b19:;
		};
	};
}



inline jule::Bool _1ab3e13cd_tryOptimizeSwap(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab224c8e_MultiAssign>* _36939_assign) {
	if (((!(_1ab3ee6e9_Assign)) || ((*((*(_36939_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1ab1c6d95_TupleExprModel> _37317_tup;;
	{
		auto &_match_expr{ (*((*(_36939_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bc26e822:;
			{
				_37317_tup=(*((*(_36939_assign))))._field_R.cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1bc26e7bc:;
	};
	if (((_37317_tup == nullptr) || ((*(_37317_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1ab3d9360_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model) && _1ab3d9360_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) {
		_1ab3ddcb0_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1ab3d9360_equalModels((*((*((*(_36939_assign))))._field_L[0LL]))._field_Model, (*((*(_37317_tup))._field_Datas[1LL]))._field_Model))) || (!(_1ab3d9360_equalModels((*((*((*(_36939_assign))))._field_L[1LL]))._field_Model, (*((*(_37317_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1ab3d9e32_SwapExprModel> _39513_model = jule::new_ptr<_1ab3d9e32_SwapExprModel>(_1ab3d9e32_SwapExprModel{._field_Left=(*((*(_36939_assign))))._field_L[0LL], ._field_Right=(*((*(_36939_assign))))._field_L[1LL]});;
	static__1ab3e4a1e_optimize(&((*((*(_39513_model))._field_Left))._field_Model));
	static__1ab3e4a1e_optimize(&((*((*(_39513_model))._field_Right))._field_Model));
	_1ab3ddab2_setCurrentStmt(_self_, jule::Any(_39513_model, &__jule_any_type123));
	return true;;
}



inline void _1ab3e1686_optimizeMultiAssign(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab224c8e_MultiAssign> _40542_assign) {
	if (_1ab3e13cd_tryOptimizeSwap(_self_, &(_40542_assign))) {
		return;;
	};
	{
		auto expr = &((*(_40542_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc276ce1:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b5c0e_Data> _41021_l = *it;
			{
				if ((_41021_l != nullptr)) {
					static__1ab3e4a1e_optimize(&((*(_41021_l))._field_Model));
				};
			}
			_iter_next_1bc276ce1:;
			++it;
			goto _iter_begin_1bc276ce1;
		}
		_iter_end_1bc276ce1:;
	};
	static__1ab3e4a1e_optimize(&((*(_40542_assign))._field_R));
}



inline void _1ab3e193e_optimizeRet(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2269b6_RetSt> _41834_r) {
	static__1ab3e4a1e_optimize(&((*(_41834_r))._field_Expr));
}



inline void _1ab3e1be7_optimizeStmt(_1ab3dd2ba_scopeOptimizer* _self_, jule::Any _42235_stmt) {
	{
		auto &_match_expr{ _42235_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bc278e25:;
			{
				_1ab3e1ea0_optimizeChild(_self_, _42235_stmt.cast_ptr<_1ab2212b8_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc278e8b:;
			{
				_1ab3de068_optimizeData(_self_, _42235_stmt.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc279002:;
			{
				_1ab3de321_optimizeVar(_self_, _42235_stmt.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bc279079:;
			{
				_1ab3de5c9_optimizeConditional(_self_, _42235_stmt.cast_ptr<_1ab221e01_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bc279101:;
			{
				_1ab3e0058_optimizeRangeIter(_self_, _42235_stmt.cast_ptr<_1ab223100_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bc279178:;
			{
				_1ab3e0311_optimizeWhileIter(_self_, _42235_stmt.cast_ptr<_1ab2226a4_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bc279200:;
			{
				_1ab3e1ea0_optimizeChild(_self_, (*(_42235_stmt.cast_ptr<_1ab2221ed_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bc279277:;
			{
				_1ab3e108c_optimizeAssign(_self_, _42235_stmt.cast_ptr<_1ab2248b5_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bc2792ee:;
			{
				_1ab3e1686_optimizeMultiAssign(_self_, _42235_stmt.cast_ptr<_1ab224c8e_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bc279376:;
			{
				_1ab3deca0_optimizeMatch(_self_, _42235_stmt.cast_ptr<_1ab2253ee_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bc2793ed:;
			{
				_1ab3e193e_optimizeRet(_self_, _42235_stmt.cast_ptr<_1ab2269b6_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1bc278ce3:;
	};
}



inline void _1ab3e1ea0_optimizeChild(_1ab3dd2ba_scopeOptimizer* _self_, jule::Ptr<_1ab2212b8_Scope> _44936_child) {
	jule::Ptr<_1ab3dd2ba_scopeOptimizer> _45013_so = static__1ab3dd809_new(_44936_child);;
	_1ab3e219d_optimize(_45013_so.ptr());
}



inline void _1ab3e219d_optimize(_1ab3dd2ba_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1ab3e1be7_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1bc27ec83:;
	}
	_iter_end_1bc27ec83:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3dd2ba_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1ab3e4a1e_optimize(jule::Any* _5629_model) {
	if (_1abea36ba_exprEnabled) {
		jule::Ptr<_1ab3e4458_exprOptimizer> _5917_exop = jule::new_ptr<_1ab3e4458_exprOptimizer>(_1ab3e4458_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1ab3eb77e_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1ab3e4d60_strCond(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c1697_BinaryExprModel> _6626_m) {
	jule::Ptr<_1ab2ee0ee_Prim> _679_lp = _1ab2e8b76_Prim((*((*(_6626_m))._field_Left))._field_Kind.ptr());;
	if (((_679_lp == nullptr) || (!(_1ab302586_IsStr(_679_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc29029e:;
			{
				std::swap((*(_6626_m))._field_Left, (*(_6626_m))._field_Right);
				goto _julec_label_1bc29203c;
			}
		}
		_match_end_1bc290249:;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc28ddd5:;
			{
				goto _match_end_1bc291965;
			}
		}
		else {
			_case_begin_1bc2919ba:;
			{
				return false;;
			}
		}
		_match_end_1bc291965:;
	};
	_julec_label_1bc29203c:;
	jule::Ptr<_1a8d04e26_Const> _8813_c = (*((*(_6626_m))._field_Right))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bc292ee9:;
			{
				if ((_1a8d0709e_ReadStr(_8813_c.ptr())).empty()) {
					jule::Any _9221_model = jule::Any(jule::new_ptr<_1ab3da350_EmptyCompareExprModel>(_1ab3da350_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9221_model))))));
					goto _match_end_1bc292e83;
				};
				jule::Any _9917_model = jule::Any(jule::new_ptr<_1ab3dab7a_StrCompExprModel>(_1ab3dab7a_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8813_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9917_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bc293071:;
			{
				if ((_1a8d0709e_ReadStr(_8813_c.ptr())).empty()) {
					jule::Any _10721_model = jule::Any(jule::new_ptr<_1ab3da350_EmptyCompareExprModel>(_1ab3da350_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10721_model))))));
					goto _match_end_1bc292e83;
				};
				jule::Any _11417_model = jule::Any(jule::new_ptr<_1ab3dab7a_StrCompExprModel>(_1ab3dab7a_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8813_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11417_model))))));
			}
		}
		_match_end_1bc292e83:;
	};
	return true;;
}



inline jule::Bool _1ab3e5316_tryNeutralElement1(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c1697_BinaryExprModel>* _12438_m, jule::Ptr<_1a8d04e26_Const> _12463_c, jule::Ptr<_1ab1c119c_OperandExprModel>* _12475_nc) {
	if (_1a8d0969a_IsStr(_12463_c.ptr())) {
		if ((!(_1ab3ee166_Str))) {
			return false;;
		};
		if (((_1a8d0709e_ReadStr(_12463_c.ptr())).empty() && ((*((*((*(_12438_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_12475_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1ab3ed176_Math)) || (_1a8d07ad8_AsF64(_12463_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_12438_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bc29bac4:;
			{
				if (((*(_12475_nc)) == (*((*(_12438_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_12475_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_12463_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc29c784:;
			{
				_1a8d07d91_SetI64(_12463_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_12463_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bc29c7ea:;
			{
				(*((*(_self_))._field_model))=(*((*(_12475_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1bc29c674:;
	};
	return false;;
}



inline jule::Bool _1ab3e5657_tryNeutralElement(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c1697_BinaryExprModel>* _16837_m) {
	{
		auto &_match_expr{ (*((*((*(_16837_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc2a0a2e:;
			{
				jule::Ptr<_1a8d04e26_Const> _17217_c = (*((*((*(_16837_m))))._field_Left))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
				return _1ab3e5316_tryNeutralElement1(_self_, _16837_m, _17217_c, &((*((*(_16837_m))))._field_Right));;
			}
		}
		_match_end_1bc2a09c9:;
	};
	{
		auto &_match_expr{ (*((*((*(_16837_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc2a1ba6:;
			{
				jule::Ptr<_1a8d04e26_Const> _17717_c = (*((*((*(_16837_m))))._field_Right))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
				return _1ab3e5316_tryNeutralElement1(_self_, _16837_m, _17717_c, &((*((*(_16837_m))))._field_Left));;
			}
		}
		_match_end_1bc2a1b51:;
	};
	return false;;
}



inline void _1ab3e5910_binary(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c1697_BinaryExprModel> _18325_m) {
	static__1ab3e4a1e_optimize(&((*((*(_18325_m))._field_Left))._field_Model));
	static__1ab3e4a1e_optimize(&((*((*(_18325_m))._field_Right))._field_Model));
	if ((_1ab3edd9c_Cond && _1ab3e4d60_strCond(_self_, _18325_m))) {
		return;;
	};
	if (_1ab3e5657_tryNeutralElement(_self_, &(_18325_m))) {
		return;;
	};
	if ((!(_1ab3ed176_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_18325_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc2a525e:;
			{
				goto _match_end_1bc2a5517;
			}
		}
		else {
			_case_begin_1bc2a556c:;
			{
				return;;
			}
		}
		_match_end_1bc2a5517:;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _2119_lp = _1ab2e8b76_Prim((*((*(_18325_m))._field_Left))._field_Kind.ptr());;
	if ((_2119_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _2159_rp = _1ab2e8b76_Prim((*((*(_18325_m))._field_Right))._field_Kind.ptr());;
	if ((_2159_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_18325_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc2a80b9:;
			{
				jule::Bool _22213_ok = false;;
				jule::U64 _22217_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ab3ebc02_checkForBitShiftOpt(&((*(_18325_m))._field_Left), &((*(_18325_m))._field_Right));
					_22213_ok = __jule_assign_result.__jule_result_arg0;
					_22217_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_22213_ok) {
					(*((*(_18325_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_18325_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1a8d04e26_Const> _22621_c = (*((*(_18325_m))._field_Right))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
					_1a8d08149_SetU64(_22621_c.ptr(), _22217_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bc2a7c23:;
			{
				jule::Bool _23313_ok = false;;
				jule::U64 _23317_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ab3ebc02_checkForBitShiftOpt(&((*(_18325_m))._field_Left), &((*(_18325_m))._field_Right));
					_23313_ok = __jule_assign_result.__jule_result_arg0;
					_23317_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_23313_ok) {
					(*((*(_18325_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_18325_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1a8d04e26_Const> _23721_c = (*((*(_18325_m))._field_Right))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
					_1a8d08149_SetU64(_23721_c.ptr(), _23317_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bc2a7c89:;
			{
				jule::Ptr<_1a8d04e26_Const> _24417_c = (*((*(_18325_m))._field_Right))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
				if ((_1a8d07ad8_AsF64(_24417_c.ptr()) == 2LL)) {
					(*((*(_18325_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_18325_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_1a8d07d91_SetI64(_24417_c.ptr(), 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1bc2a7bac:;
			{
				return;;
			}
		}
		_match_end_1bc2a7b57:;
	};
	jule::Any _25913_model = jule::Any(jule::new_ptr<_1ab3db50a_UnsafeBinaryExprModel>(_1ab3db50a_UnsafeBinaryExprModel{._field_Node=_18325_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_25913_model))))));
}



inline void _1ab3e5bb8_unary(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c1a71_UnaryExprModel> _26324_m) {
	static__1ab3e4a1e_optimize(&((*((*(_26324_m))._field_Expr))._field_Model));
	if ((!(_1ab3ed9c3_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_26324_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc2b1677:;
			{
				{
					auto &_match_expr{ (*((*(_26324_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1bc2b326c:;
						{
							jule::Ptr<_1ab1c1a71_UnaryExprModel> _27221_um = (*((*(_26324_m))._field_Expr))._field_Model.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_27221_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_27221_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1bc2b3217:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bc2b2612:;
			{
				{
					auto &_match_expr{ (*((*(_26324_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bc2b5538:;
						{
							jule::Ptr<_1ab2853a4_Var> _28021_v = (*((*(_26324_m))._field_Expr))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
							if ((*(_28021_v))._field_Reference) {
								jule::Any _28225_model = jule::Any(jule::new_ptr<_1ab3da64c_RefExprModel>(_1ab3da64c_RefExprModel{._field_Var=_28021_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_28225_model))))));
							};
						}
					}
					_match_end_1bc2b54d3:;
				};
			}
		}
		_match_end_1bc2b2502:;
	};
}



inline void _1ab3e5e71_structureLit(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c2445_StructLitExprModel> _28931_m) {
	{
		auto expr = &((*(_28931_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2b67c0:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c209e_StructArgExprModel> _29021_arg = *it;
			{
				static__1ab3e4a1e_optimize(&((*((*(_29021_arg))._field_Expr))._field_Model));
			}
			_iter_next_1bc2b67c0:;
			++it;
			goto _iter_begin_1bc2b67c0;
		}
		_iter_end_1bc2b67c0:;
	};
}



inline void _1ab3e6229_allocStructure(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c2742_AllocStructLitExprModel> _29533_m) {
	_1ab3e5e71_structureLit(_self_, (*(_29533_m))._field_Lit);
}



inline void _1ab3e64d2_casting(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c2cc5_CastingExprModel> _29926_m) {
	static__1ab3e4a1e_optimize(&((*(_29926_m))._field_Expr));
}



inline void _1ab3e678a_args(_1ab3e4458_exprOptimizer* _self_, jule::Slice<jule::Any>* _30324_args) {
	{
		auto expr = _30324_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2b92a6:;
		if (it != expr_end) {
			jule::I64 _30414_i = it - expr->begin();
			jule::Any _30421_arg = *it;
			{
				static__1ab3e4a1e_optimize(&(_30421_arg));
				(*(_30324_args))[_30414_i]=_30421_arg;
			}
			_iter_next_1bc2b92a6:;
			++it;
			_30414_i++;
			goto _iter_begin_1bc2b92a6;
		}
		_iter_end_1bc2b92a6:;
	};
}



inline void _1ab3e6a43_scope(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab2212b8_Scope>* _31025_s) {
	jule::Ptr<_1ab3dd2ba_scopeOptimizer> _31113_scopt = static__1ab3dd809_new((*(_31025_s)));;
	_1ab3e219d_optimize(_31113_scopt.ptr());
}



inline void _1ab3e6ceb_funcCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c3677_FnCallExprModel> _31527_m) {
	static__1ab3e4a1e_optimize(&((*(_31527_m))._field_Expr));
	_1ab3e678a_args(_self_, &((*(_31527_m))._field_Args));
	if (((*(_31527_m))._field_Except != nullptr)) {
		_1ab3e6a43_scope(_self_, &((*(_31527_m))._field_Except));
	};
}



inline void _1ab3e70a4_slice(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c3a51_SliceExprModel> _32324_m) {
	_1ab3e678a_args(_self_, &((*(_32324_m))._field_Elems));
}



inline void _1ab3e735c_array(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c6a98_ArrayExprModel> _32724_m) {
	if ((((*(_32724_m))._field_Elems.len() == 2LL) && ((*(_32724_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _32917_elem = (*(_32724_m))._field_Elems[0LL];;
		static__1ab3e4a1e_optimize(&(_32917_elem));
		(*(_32724_m))._field_Elems[0LL]=_32917_elem;
	};
	_1ab3e678a_args(_self_, &((*(_32724_m))._field_Elems));
}



inline void _1ab3e7615_indexing(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c4007_IndexingExprModel> _33627_m) {
	static__1ab3e4a1e_optimize(&((*((*(_33627_m))._field_Expr))._field_Model));
	static__1ab3e4a1e_optimize(&((*((*(_33627_m))._field_Index))._field_Model));
	if ((!(_1ab3ed440_Access))) {
		return;;
	};
	jule::Bool _3429_array = (_1ab2e9946_Arr((*((*(_33627_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_3429_array && _1ab2b65d3_IsConst((*(_33627_m))._field_Index.ptr()))) {
		jule::Any _34517_model = jule::Any(jule::new_ptr<_1ab3db807_UnsafeIndexingExprModel>(_1ab3db807_UnsafeIndexingExprModel{._field_Node=_33627_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_34517_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_33627_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc2c3601:;
			{
				jule::Ptr<_1ab2853a4_Var> _35113_i = (*((*(_33627_m))._field_Index))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
				if (((*(_35113_i))._field_Mutable || ((*(_35113_i))._field_IterRelation == nullptr))) {
					goto _match_end_1bc2c359b;
				};
				{
					auto &_match_expr{ (*((*(_33627_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bc2c53c2:;
						{
							jule::Ptr<_1ab2853a4_Var> _35717_r = (*((*(_33627_m))._field_Expr))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
							if (((*((*(_35113_i))._field_IterRelation))._field_Range == _35717_r)) {
								jule::Any _36025_model = jule::Any(jule::new_ptr<_1ab3db807_UnsafeIndexingExprModel>(_1ab3db807_UnsafeIndexingExprModel{._field_Node=_33627_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_36025_model))))));
							};
						}
					}
					_match_end_1bc2c536c:;
				};
			}
		}
		_match_end_1bc2c359b:;
	};
}



inline void _1ab3e78bd_anonFunc(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c43d1_AnonFnExprModel> _36727_m) {
	_1ab3e6a43_scope(_self_, &((*((*(_36727_m))._field_Func))._field_Scope));
}



inline void _1ab3e7b76_mapExpr(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c4c61_MapExprModel> _37126_m) {
	{
		auto expr = &((*(_37126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2c8051:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c47aa_KeyValPairExprModel> _37221_pair = *it;
			{
				static__1ab3e4a1e_optimize(&((*(_37221_pair))._field_Key));
				static__1ab3e4a1e_optimize(&((*(_37221_pair))._field_Val));
			}
			_iter_next_1bc2c8051:;
			++it;
			goto _iter_begin_1bc2c8051;
		}
		_iter_end_1bc2c8051:;
	};
}



inline void _1ab3e7e2e_slicing(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c52e4_SlicingExprModel> _37826_m) {
	static__1ab3e4a1e_optimize(&((*(_37826_m))._field_Expr));
	static__1ab3e4a1e_optimize(&((*(_37826_m))._field_Left));
	if (((*(_37826_m))._field_Right != nullptr)) {
		static__1ab3e4a1e_optimize(&((*(_37826_m))._field_Right));
	};
}



inline void _1ab3e81d7_traitSub(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c5877_TraitSubIdentExprModel> _38627_m) {
	static__1ab3e4a1e_optimize(&((*(_38627_m))._field_Expr));
}



inline void _1ab3e8490_structureSub(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _39031_m) {
	static__1ab3e4a1e_optimize(&((*((*(_39031_m))._field_Expr))._field_Model));
}



inline void _1ab3e8748_tuple(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c6d95_TupleExprModel> _39424_m) {
	{
		auto expr = &((*(_39424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2cb395:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b5c0e_Data> _39521_d = *it;
			{
				static__1ab3e4a1e_optimize(&((*(_39521_d))._field_Model));
			}
			_iter_next_1bc2cb395:;
			++it;
			goto _iter_begin_1bc2cb395;
		}
		_iter_end_1bc2cb395:;
	};
}



inline void _1ab3e8a01_newCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c7a22_BuiltinNewCallExprModel> _40026_m) {
	if (((*(_40026_m))._field_Init != nullptr)) {
		static__1ab3e4a1e_optimize(&((*(_40026_m))._field_Init));
	};
}



inline void _1ab3e8ca9_outCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c726e_BuiltinOutCallExprModel> _40626_m) {
	static__1ab3e4a1e_optimize(&((*(_40626_m))._field_Expr));
}



inline void _1ab3e9062_outlnCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c7648_BuiltinOutlnCallExprModel> _41028_m) {
	static__1ab3e4a1e_optimize(&((*(_41028_m))._field_Expr));
}



inline void _1ab3e931a_panicCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel> _41428_m) {
	static__1ab3e4a1e_optimize(&((*(_41428_m))._field_Expr));
}



inline void _1ab3e95c3_assertCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel> _41829_m) {
	static__1ab3e4a1e_optimize(&((*(_41829_m))._field_Expr));
}



inline void _1ab3e987b_errorCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel> _42228_m) {
	static__1ab3e4a1e_optimize(&((*((*(_42228_m))._field_Err))._field_Model));
}



inline void _1ab3e9b34_makeCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel> _42627_m) {
	if (((*(_42627_m))._field_Len != nullptr)) {
		static__1ab3e4a1e_optimize(&((*(_42627_m))._field_Len));
	};
	if (((*(_42627_m))._field_Cap != nullptr)) {
		static__1ab3e4a1e_optimize(&((*(_42627_m))._field_Cap));
	};
}



inline void _1ab3e9ddc_appendCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel> _43529_m) {
	static__1ab3e4a1e_optimize(&((*(_43529_m))._field_Dest));
	static__1ab3e4a1e_optimize(&((*(_43529_m))._field_Elements));
}



inline void _1ab3ea195_lenCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c902e_BuiltinLenCallExprModel> _44026_m) {
	static__1ab3e4a1e_optimize(&((*((*(_44026_m))._field_Expr))._field_Model));
}



inline void _1ab3ea44d_capCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c932b_BuiltinCapCallExprModel> _44426_m) {
	static__1ab3e4a1e_optimize(&((*((*(_44426_m))._field_Expr))._field_Model));
}



inline void _1ab3ea706_deleteCall(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel> _44829_m) {
	static__1ab3e4a1e_optimize(&((*((*(_44829_m))._field_Dest))._field_Model));
	if (((*(_44829_m))._field_Key != nullptr)) {
		static__1ab3e4a1e_optimize(&((*((*(_44829_m))._field_Key))._field_Model));
	};
}



inline void _1ab3ea9ae_sizeof(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1c5a64_SizeofExprModel> _45525_m) {
	static__1ab3e4a1e_optimize(&((*(_45525_m))._field_Expr));
}



inline void _1ab3eac67_alignof(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1ca6d4_AlignofExprModel> _45926_m) {
	static__1ab3e4a1e_optimize(&((*(_45926_m))._field_Expr));
}



inline void _1ab3eb020_integratedToStr(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1caccd_IntegratedToStrExprModel> _46334_m) {
	static__1ab3e4a1e_optimize(&((*(_46334_m))._field_Expr));
}



inline void _1ab3eb2c8_free(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1cb4a4_FreeExprModel> _46723_m) {
	static__1ab3e4a1e_optimize(&((*(_46723_m))._field_Expr));
}



inline void _1ab3eb581_backendEmit(_1ab3e4458_exprOptimizer* _self_, jule::Ptr<_1ab1cb1a7_BackendEmitExprModel> _47130_m) {
	_1ab3e678a_args(_self_, &((*(_47130_m))._field_Exprs));
}



inline void _1ab3eb77e_do(_1ab3e4458_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bc447038:;
			{
				_1ab3e5910_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c1697_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc44709e:;
			{
				_1ab3e5bb8_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bc447115:;
			{
				_1ab3e5e71_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c2445_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bc44718c:;
			{
				_1ab3e6229_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c2742_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bc447214:;
			{
				_1ab3e64d2_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c2cc5_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bc44728b:;
			{
				_1ab3e6ceb_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bc447313:;
			{
				_1ab3e70a4_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c3a51_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bc44738a:;
			{
				_1ab3e735c_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c6a98_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc447412:;
			{
				_1ab3e7615_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bc447489:;
			{
				_1ab3e78bd_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c43d1_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bc447511:;
			{
				_1ab3e7b76_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c4c61_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bc447588:;
			{
				_1ab3e7e2e_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c52e4_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bc447610:;
			{
				_1ab3e81d7_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c5877_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc447687:;
			{
				_1ab3e8490_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bc44770e:;
			{
				_1ab3e8748_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bc447786:;
			{
				_1ab3e8ca9_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c726e_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bc44780d:;
			{
				_1ab3e9062_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c7648_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bc447885:;
			{
				_1ab3e8a01_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c7a22_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bc44790c:;
			{
				_1ab3e931a_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c7deb_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bc447984:;
			{
				_1ab3e95c3_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c83a2_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bc447a0b:;
			{
				_1ab3e987b_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bc447a83:;
			{
				_1ab3e9b34_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c8858_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bc447b0a:;
			{
				_1ab3e9ddc_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c8c32_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bc447b82:;
			{
				_1ab3ea195_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c902e_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bc447c09:;
			{
				_1ab3ea44d_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c932b_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bc447c81:;
			{
				_1ab3ea706_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c9705_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bc447d08:;
			{
				_1ab3ea9ae_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1c5a64_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bc447d80:;
			{
				_1ab3eac67_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1ca6d4_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bc447e07:;
			{
				_1ab3eb020_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1caccd_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bc447e7e:;
			{
				_1ab3eb2c8_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1cb4a4_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bc448006:;
			{
				_1ab3eb581_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1ab1cb1a7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1bc446c91:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab3e4458_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abea3bd7_Optimizer> static__1abea415a_New(jule::Ptr<_1abd36b36_IR>* _2624_ir) {
	return jule::new_ptr<_1abea3bd7_Optimizer>(_1abea3bd7_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1abea4413_optimizeGlobal(_1abea3bd7_Optimizer* _self_, jule::Ptr<_1ab2853a4_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1ab3e4a1e_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1abea46bb_optimizeFunction(_1abea3bd7_Optimizer* _self_, jule::Ptr<_1ab1ce40d_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc45d58d:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1ab3dd2ba_scopeOptimizer> _4317_so = static__1ab3dd809_new((*(_4221_ins))._field_Scope);;
				_1ab3e219d_optimize(_4317_so.ptr());
			}
			_iter_next_1bc45d58d:;
			++it;
			goto _iter_begin_1bc45d58d;
		}
		_iter_end_1bc45d58d:;
	};
}



inline void _1abea4974_optimizeStruct(_1abea3bd7_Optimizer* _self_, jule::Ptr<_1ab1b9470_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc45ee41:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bc1ed_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc4607d2:;
					if (it != expr_end) {
						jule::Ptr<_1ab1bb64d_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1ab3e4a1e_optimize(&((*((*(_5325_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1bc4607d2:;
						++it;
						goto _iter_begin_1bc4607d2;
					}
					_iter_end_1bc4607d2:;
				};
				{
					auto expr = &((*(_5221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc461c9a:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _5825_m = *it;
						{
							_1abea46bb_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1bc461c9a:;
						++it;
						goto _iter_begin_1bc461c9a;
					}
					_iter_end_1bc461c9a:;
				};
			}
			_iter_next_1bc45ee41:;
			++it;
			goto _iter_begin_1bc45ee41;
		}
		_iter_end_1bc45ee41:;
	};
}



inline void _1abea4c2c_optimizeGlobals(_1abea3bd7_Optimizer* _self_, jule::Ptr<_1ab2459c4_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4620ec:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc462d89:;
					if (it != expr_end) {
						jule::Ptr<_1ab2853a4_Var> _6625_v = *it;
						{
							_1abea4413_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1bc462d89:;
						++it;
						goto _iter_begin_1bc462d89;
					}
					_iter_end_1bc462d89:;
				};
			}
			_iter_next_1bc4620ec:;
			++it;
			goto _iter_begin_1bc4620ec;
		}
		_iter_end_1bc4620ec:;
	};
}



inline void _1abea4ed5_optimizeFunctions(_1abea3bd7_Optimizer* _self_, jule::Ptr<_1ab2459c4_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc46354e:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc4642ca:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _7425_func = *it;
						{
							_1abea46bb_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1bc4642ca:;
						++it;
						goto _iter_begin_1bc4642ca;
					}
					_iter_end_1bc4642ca:;
				};
			}
			_iter_next_1bc46354e:;
			++it;
			goto _iter_begin_1bc46354e;
		}
		_iter_end_1bc46354e:;
	};
}



inline void _1abea528d_optimizeStructs(_1abea3bd7_Optimizer* _self_, jule::Ptr<_1ab2459c4_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc464990:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc46571b:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b9470_Struct> _8225_s = *it;
						{
							_1abea4974_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1bc46571b:;
						++it;
						goto _iter_begin_1bc46571b;
					}
					_iter_end_1bc46571b:;
				};
			}
			_iter_next_1bc464990:;
			++it;
			goto _iter_begin_1bc464990;
		}
		_iter_end_1bc464990:;
	};
}



inline void _1abea5546_optimizePackage(_1abea3bd7_Optimizer* _self_, jule::Ptr<_1ab2459c4_Package>* _8839_p) {
	_1abea4c2c_optimizeGlobals(_self_, _8839_p);
	_1abea4ed5_optimizeFunctions(_self_, _8839_p);
	_1abea528d_optimizeStructs(_self_, _8839_p);
}



inline void _1abea5744_Optimize(_1abea3bd7_Optimizer* _self_) {
	_1abea59b9_detectEnabled();
	if (_1ab3eca9e_Deadcode) {
		_1abe95eb5_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1abea39c8_scopeEnabled || _1abea36ba_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc4672de:;
			if (it != expr_end) {
				jule::Ptr<_1ab242a9d_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1abea5546_optimizePackage(_self_, &((*(_10425_u))._field_Package));
					};
				}
				_iter_next_1bc4672de:;
				++it;
				goto _iter_begin_1bc4672de;
			}
			_iter_end_1bc4672de:;
		};
		_1abea5546_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1ab3eca9e_Deadcode) {
		_1abe9b55e_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abea3bd7_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1abeca88a_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1abecbbaa_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1abeca88a_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1abecb9bd_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1abecd3b5_LogFlat(_1a7d05a93_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1abecd5e6_LogError(_1a7d05a93_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1abeca88a_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1a8ce48e9_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1a8ce48e9_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _1a7c3e3e4_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_1a7c3e3e4_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1a8ce48e9_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1a7c36ba0_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1a7c36ba0_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1a7c36ba0_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1abecbbaa_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1abecd827_Log(_1a7d05a93_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1bc475a17:;
			{
				static__1abecd3b5_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1bc475a8e:;
			{
				static__1abecd5e6_LogError(_6520_l);
			}
		}
		_match_end_1bc47560a:;
	};
}



inline void static__1abecda58_PrintLogs(jule::Slice<_1a7d05a93_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc471da9:;
		if (it != expr_end) {
			_1a7d05a93_Log *_7616_l = it;
			{
				static__1abecd827_Log(_7616_l);
			}
			_iter_next_1bc471da9:;
			++it;
			goto _iter_begin_1bc471da9;
		}
		_iter_end_1bc471da9:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1a8ce48e9_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1abecd0eb_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac916704_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ac916dca_Time static__1ac917282_Unix(jule::U64 _9120_sec) {
	return _1ac916dca_Time{._field_sec=_9120_sec};;
}



inline _1ac916dca_Time static__1ac917491_Now(void) {
	return static__1ac917282_Unix(static_cast<jule::U64>(_1ac918eba_unix()));;
}



inline _1ac916704_AbsTime _1ac918b79_Abs(_1ac916dca_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1ac915bcb_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1ac915bcb_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1bc4a74a5:;
	}
	_iter_end_1bc4a74a5:;;
	_1ac916704_AbsTime _17413_t = _1ac916704_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac916dca_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac83cd34_scopeCoder> static__1ac83d450_new(jule::Ptr<_1ac921379_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_1ac83cd34_scopeCoder>(_1ac83cd34_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1bc3bb320_iterHead(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab223100_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str _7355_begin) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ab3ec791_Copy && _1ac844489_isCopyOptimizable(&((*((*(_7332_it))))._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7332_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bc3bca19:;
				{
					jule::Ptr<_1ab2853a4_Var> _8217_v = (*((*((*(_7332_it))))._field_Expr))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
					if ((*(_8217_v))._field_Reference) {
						_1ac859180_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
						goto _match_end_1bc3bed18;
					};
					goto _case_begin_1bc3bed6d;
				}
			}
			else {
				_case_begin_1bc3bed6d:;
				{
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ac859180_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1bc3bed18:;
		};
	} else {
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, _7355_begin);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
}



inline void _1ac83db26_rangeIndexIter(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab223100_RangeIter>* _12239_it) {
	_1a7c4c7ed_StrBuilder _12313_sb = static__1a7c4cb1c_New(64LL);;
	static__1ac862d37_iterBegin(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1259_begin = _1a7c57bc1_Str(&_12313_sb);;
	_1a7c57dbe_Clear(&_12313_sb);
	static__1ac86340e_iterNext(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1289_next = _1a7c57bc1_Str(&_12313_sb);;
	jule::Bool _13013_ref = false;;
	_1bc3bb320_iterHead(_self_, _12239_it, &(_13013_ref), _1259_begin);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		_1ac9296a1_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_13013_ref) {
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac9223d0_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12239_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12239_it))))._field_KeyB))._field_Reference=(_1ab3ec791_Copy && _1ac844852_isIterCopyOptimizable(&((*((*(_12239_it))))._field_Expr), &((*((*(_12239_it))))._field_KeyB)));
		_1ac9296a1_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12239_it))))._field_KeyB))._field_Reference) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac9223d0_indent((*(_self_))._field_oc);
	};
	_1ac843d18_scope(_self_, (*((*(_12239_it))))._field_Scope);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, _1289_next);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ac9223d0_indent((*(_self_))._field_oc);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		static__1ac862a4b_var(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_12239_it))))._field_KeyA);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ac9223d0_indent((*(_self_))._field_oc);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ac921a2d_write((*(_self_))._field_oc, _1259_begin);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac863123_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac83ddce_rangeHashmapIter(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab223100_RangeIter>* _18941_it) {
	_1a7c4c7ed_StrBuilder _19013_sb = static__1a7c4cb1c_New(64LL);;
	static__1ac862d37_iterBegin(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1929_begin = _1a7c57bc1_Str(&_19013_sb);;
	_1a7c57dbe_Clear(&_19013_sb);
	static__1ac86340e_iterNext(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1959_next = _1a7c57bc1_Str(&_19013_sb);;
	jule::Bool _19713_ref = false;;
	_1bc3bb320_iterHead(_self_, _18941_it, &(_19713_ref), _1929_begin);
	if (((*((*(_18941_it))))._field_KeyA != nullptr)) {
		_1ac9296a1_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac9223d0_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18941_it))))._field_KeyB != nullptr)) {
		_1ac9296a1_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac9223d0_indent((*(_self_))._field_oc);
	};
	_1ac843d18_scope(_self_, (*((*(_18941_it))))._field_Scope);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, _1959_next);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ac921a2d_write((*(_self_))._field_oc, _1929_begin);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac863123_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac83e187_ifCase(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2216d6_If> _23630_i) {
	if (((*(_23630_i))._field_Expr != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_23630_i))._field_Expr);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1ac843d18_scope(_self_, (*(_23630_i))._field_Scope);
}



inline void _1ac83e440_conditional(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab221e01_Conditional> _24535_c) {
	jule::Bool _24613_writed = false;;
	{
		auto expr = &((*(_24535_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3ee1dd:;
		if (it != expr_end) {
			jule::Ptr<_1ab2216d6_If> _24721_elif = *it;
			{
				if ((_24721_elif == nullptr)) {
					goto _iter_next_1bc3ee1dd;
				};
				if (_24613_writed) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_24613_writed=true;
				_1ac83e187_ifCase(_self_, _24721_elif);
			}
			_iter_next_1bc3ee1dd:;
			++it;
			goto _iter_begin_1bc3ee1dd;
		}
		_iter_end_1bc3ee1dd:;
	};
	if (((*(_24535_c))._field_Default != nullptr)) {
		if (_24613_writed) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1ac843d18_scope(_self_, (*((*(_24535_c))._field_Default))._field_Scope);
	};
}



inline void _1ac83e6e8_infIter(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2221ed_InfIter> _26531_it) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac843d18_scope(_self_, (*(_26531_it))._field_Scope);
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac86340e_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac863123_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ac83e9a1_whileIter(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2226a4_WhileIter> _28233_it) {
	if ((((*(_28233_it))._field_Expr != nullptr) && ((*(_28233_it))._field_Next == nullptr))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_28233_it))._field_Expr != nullptr)) {
			_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_28233_it))._field_Next != nullptr)) {
			_1ac8437a7_st(_self_, (*(_28233_it))._field_Next);
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac843d18_scope(_self_, (*(_28233_it))._field_Scope);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac86340e_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac863123_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ac83ec59_rangeIter(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab223100_RangeIter> _31533_it) {
	{
		
		if ((_1ab2e9bcc_Slc((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc413444:;
			{
				_1ac83db26_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1ab2e9946_Arr((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc413114:;
			{
				_1ac83db26_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_1ab2ea716_Map((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc41317a:;
			{
				_1ac83ddce_rangeHashmapIter(_self_, &(_31533_it));
			}
		}
		else {
			_case_begin_1bc41309d:;
			{
				_1ac83db26_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		_match_end_1bc412ed2:;
	};
}



inline void _1ac840012_cont(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab223485_ContSt> _32824_c) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ac86340e_iterNext(&((*((*(_self_))._field_oc))._field_Buf), (*(_32824_c))._field_It);
}



inline void _1ac8402ba_label(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab223b5b_Label> _33325_l) {
	static__1ac8636ea_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33325_l)));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1ac840573_gotoSt(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab224035_GotoSt> _33826_gt) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ac8636ea_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_33826_gt))._field_Label)));
}



inline void _1ac84082b_postfix(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab22440e_Postfix> _34331_p) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_34331_p))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1ac921a2d_write((*(_self_))._field_oc, (*(_34331_p))._field_Op);
}



inline void _1ac840ad4_assign(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2248b5_Assign> _35030_a) {
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_L))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, (*((*(_35030_a))._field_Op))._field_Kind);
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_R))._field_Model);
}



inline void _1ac840d8c_mapLookupAssign(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab224c8e_MultiAssign>* _35640_a) {
	jule::Ptr<_1ab1c4007_IndexingExprModel> _35713_iem = (*((*(_35640_a))))._field_R.cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45);;
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Expr))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Index))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_35640_a))))._field_L[0LL] != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[0LL]))._field_Model);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_35640_a))))._field_L[1LL] != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[1LL]))._field_Model);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac841145_multiAssignTup(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab224c8e_MultiAssign>* _37939_a) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1ab1c6d95_TupleExprModel> _38313_tup = (*((*(_37939_a))))._field_R.cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_38313_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc428b1e:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Ptr<_1ab2b5c0e_Data> _38521_r = *it;
			{
				_1ac9223d0_indent((*(_self_))._field_oc);
				jule::Ptr<_1ab2b5c0e_Data> _38717_l = (*((*(_37939_a))))._field_L[_38514_i];;
				if ((_38717_l != nullptr)) {
					{
						auto &_match_expr{ (*(_38717_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bc42baab:;
							{
								jule::Ptr<_1ab2853a4_Var> _39125_v = (*(_38717_l))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
								if (((*(_39125_v))._field_Reference && (!(_1ab285739_IsInitialized(_39125_v.ptr()))))) {
									static__1ac862a4b_var(&((*((*(_self_))._field_oc))._field_Buf), _39125_v);
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37939_a))))._field_L[_38514_i]=nullptr;
									goto _iter_next_1bc428b1e;
								};
							}
						}
						_match_end_1bc42ba56:;
					};
					_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38717_l))._field_Kind);
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1ac860c9c_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1ac83c707_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_38514_i)));
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bc428b1e:;
			++it;
			_38514_i++;
			goto _iter_begin_1bc428b1e;
		}
		_iter_end_1bc428b1e:;
	};
	{
		auto expr = &((*((*(_37939_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc432908:;
		if (it != expr_end) {
			jule::I64 _41214_i = it - expr->begin();
			jule::Ptr<_1ab2b5c0e_Data> _41221_l = *it;
			{
				if ((_41221_l == nullptr)) {
					goto _iter_next_1bc432908;
				};
				_1ac9223d0_indent((*(_self_))._field_oc);
				_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_41221_l))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1ac860c9c_toOut(&((*((*(_self_))._field_oc))._field_Buf), _1ac83c707_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41214_i)));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bc432908:;
			++it;
			_41214_i++;
			goto _iter_begin_1bc432908;
		}
		_iter_end_1bc432908:;
	};
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac8413ed_multiAssignFn(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab224c8e_MultiAssign>* _42838_a) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	jule::Ptr<_1ab1c3677_FnCallExprModel> _43313_f = (*((*(_42838_a))))._field_R.cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34);;
	_1ac93c043_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_43313_f))._field_Func))._field_Result));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_42838_a))))._field_R);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1ab3041e2_Tuple> _43913_tup = _1ab2ea99c_Tup((*((*(_43313_f))._field_Func))._field_Result.ptr());;
	{
		auto expr = &((*((*(_42838_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc43c23c:;
		if (it != expr_end) {
			jule::I64 _44014_i = it - expr->begin();
			jule::Ptr<_1ab2b5c0e_Data> _44021_l = *it;
			{
				if ((_44021_l != nullptr)) {
					;
					_1ac9223d0_indent((*(_self_))._field_oc);
					_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_44021_l))._field_Model);
					{
						
						if (_1ab2e6c2e_Equal((*(_43913_tup))._field_Types[_44014_i], (*(_44021_l))._field_Kind)) {
							_case_begin_1bc4414c7:;
							{
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_44014_i));
							}
						}
						else if (_1ac85b605_isAny(&((*(_44021_l))._field_Kind))) {
							_case_begin_1bc43e97b:;
							{
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_44014_i));
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_1ac922a62_pushAnyType((*(_self_))._field_oc, (*(_43913_tup))._field_Types[_44014_i]))));
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1bc43e915:;
							{
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								if ((_1ab2ea480_Trait((*(_43913_tup))._field_Types[_44014_i].ptr()) != nullptr)) {
									jule::Ptr<_1ab1e26da_Trait> _45929_t1 = _1ab2ea480_Trait((*(_44021_l))._field_Kind.ptr());;
									jule::Ptr<_1ab1e26da_Trait> _46029_t2 = _1ab2ea480_Trait((*(_43913_tup))._field_Types[_44014_i].ptr());;
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_44014_i));
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
									static__1ac861ab1_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _45929_t1);
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
									_1ac923c2d_pushAndWriteMaskMapper((*(_self_))._field_oc, _45929_t1, _46029_t2);
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1bc43e8b0;
								};
								_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_44021_l))._field_Kind);
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_44014_i));
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_1ac9238ba_findTypeOffset((*(_self_))._field_oc.ptr(), _1ab2ea480_Trait((*(_44021_l))._field_Kind.ptr()), (*(_43913_tup))._field_Types[_44014_i]))));
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1bc43e8b0:;
					};
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1bc43c23c:;
			++it;
			_44014_i++;
			goto _iter_begin_1bc43c23c;
		}
		_iter_end_1bc43c23c:;
	};
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac8416a6_multiAssign(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab224c8e_MultiAssign> _48735_a) {
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc5b07cd:;
			{
				_1ac840d8c_mapLookupAssign(_self_, &(_48735_a));
				return;;
			}
		}
		_match_end_1bc5b0778:;
	};
	{
		auto &_match_expr{ (*(_48735_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bc5b1614:;
			{
				_1ac841145_multiAssignTup(_self_, &(_48735_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bc5b167a:;
			{
				_1ac8413ed_multiAssignFn(_self_, &(_48735_a));
			}
		}
		else {
			_case_begin_1bc5b0d61:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:501:13"));;
			}
		}
		_match_end_1bc5b0d0b:;
	};
}



inline jule::Fn<void(void)> _1ac8419e7_matchExpr(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2253ee_Match> _50533_m) {
	if ((!(_1ab2b65d3_IsConst((*(_50533_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_1a8d09414_IsBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))) || (!(_1a8d06d18_ReadBool((*((*(_50533_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_50533_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1ac841d5a_case(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2253ee_Match> _51528_m, jule::Ptr<_1ab226037_Case> _51543_c) {
	if ((((*(_51543_c))._field_Exprs.len() != 0LL) && (!((*(_51528_m))._field_Comptime)))) {
		if ((((*(_51528_m))._field_Cases.len() > 0LL) && ((*(_51528_m))._field_Cases[0LL] == _51543_c))) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_51543_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc5b7829:;
			if (it != expr_end) {
				jule::I64 _52218_i = it - expr->begin();
				jule::Ptr<_1ab2b5c0e_Data> _52225_expr = *it;
				{
					{
						
						if ((!((*(_51528_m))._field_TypeMatch))) {
							_case_begin_1bc5bebc7:;
							{
								jule::Fn<void(void)> _52521_caseExpr = _1ac8419e7_matchExpr(_self_, _51528_m);;
								if (_1ab2b6924_GoodOperand((*(_51528_m))._field_Expr.ptr(), &(_52225_expr))) {
									if ((_52521_caseExpr != nullptr)) {
										_52521_caseExpr();
										_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
								} else {
									_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_52225_expr))._field_Model);
									if ((_52521_caseExpr != nullptr)) {
										_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_52521_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1bc5b930e:;
							{
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1ab2e6525_TypeKind> _54125_tk = (*(_52225_expr))._field_Model.cast_ptr<_1ab2e6525_TypeKind>(&__jule_any_type83);;
								if ((_1ab2ea480_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1ac8478dd_boolean((*((*(_self_))._field_oc))._field_ec, (_1ab2e8e0c_Sptr((*(_52225_expr))._field_Kind.ptr()) != nullptr));
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_1ac9238ba_findTypeOffset((*(_self_))._field_oc.ptr(), _1ab2ea480_Trait((*((*(_51528_m))._field_Expr))._field_Kind.ptr()), (*(_52225_expr))._field_Kind))));
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _54925_j = _1ac922a62_pushAnyType((*(_self_))._field_oc, _54125_tk);;
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_54925_j));
								};
							}
						}
						_match_end_1bc5b9243:;
					};
					if ((((*(_51543_c))._field_Exprs.len() - _52218_i) > 1LL)) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1bc5b7829:;
				++it;
				_52218_i++;
				goto _iter_begin_1bc5b7829;
			}
			_iter_end_1bc5b7829:;
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_51528_m))._field_Default == _51543_c) && ((*(_51528_m))._field_Cases.len() != 0LL))) {
		_1ac9223d0_indent((*(_self_))._field_oc);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac863cc2_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51543_c)));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_51543_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1ac9223d0_indent((*(_self_))._field_oc);
		_1ac843d18_scope(_self_, (*(_51543_c))._field_Scope);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac842113_matchSt(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2253ee_Match> _58331_m) {
	if ((((*(_58331_m))._field_Cases.len() == 0LL) && ((*(_58331_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_58331_m))._field_Comptime && (((*(_58331_m))._field_Default == nullptr) || ((*((*((*(_58331_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	if (((!((*(_58331_m))._field_Comptime)) && (!(_1ab2b65d3_IsConst((*(_58331_m))._field_Expr.ptr()))))) {
		if ((_1ab3ec791_Copy && _1ac844489_isCopyOptimizable(&((*(_58331_m))._field_Expr)))) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_58331_m))._field_Expr))._field_Model);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1ac9223d0_indent((*(_self_))._field_oc);
	};
	if (((*(_58331_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_58331_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc0066b9:;
			if (it != expr_end) {
				jule::Ptr<_1ab226037_Case> _61125_c = *it;
				{
					if ((_61125_c == nullptr)) {
						goto _iter_next_1bc0066b9;
					};
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ac9223d0_indent((*(_self_))._field_oc);
					_1ac841d5a_case(_self_, _58331_m, _61125_c);
				}
				_iter_next_1bc0066b9:;
				++it;
				goto _iter_begin_1bc0066b9;
			}
			_iter_end_1bc0066b9:;
		};
	};
	if (((*(_58331_m))._field_Default != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac841d5a_case(_self_, _58331_m, (*(_58331_m))._field_Default);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac8639d6_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_58331_m)));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac8423bb_fallSt(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab226631_FallSt> _63826_f) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ac863cc2_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), (*(_63826_f))._field_DestCase);
}



inline void _1ac842674_breakSt(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab22385e_BreakSt> _64327_b) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_64327_b))._field_It != 0LLU)) {
		static__1ac863123_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_It);
	} else {
		static__1ac8639d6_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_64327_b))._field_Mtch);
	};
}



inline void _1ac84292c_setResult(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2269b6_RetSt> _65233_r) {
	if (((*((*((*((*(_65233_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_65233_r))._field_Expr);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1ac9223d0_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _66013_datas = (*((*(_65233_r))._field_Expr.cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_66013_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0145b7:;
		if (it != expr_end) {
			jule::I64 _66113_i = it - expr->begin();
			jule::Ptr<_1ab2b5c0e_Data> _66116_data = *it;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_66113_i));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_66116_data))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1ac9223d0_indent((*(_self_))._field_oc);
			}
			_iter_next_1bc0145b7:;
			++it;
			_66113_i++;
			goto _iter_begin_1bc0145b7;
		}
		_iter_end_1bc0145b7:;
	};
}



inline void _1ac842bd5_retSt(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2269b6_RetSt> _67129_r) {
	if (_1ab1ce881_IsVoid((*((*(_67129_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_67129_r))._field_Func))._field_Result);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67129_r))._field_Expr);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_67129_r))._field_Expr != nullptr)) {
		_1ac84292c_setResult(_self_, _67129_r);
	};
	if ((*((*((*(_67129_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1ac93c043_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_67129_r))._field_Func))._field_Result));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1ac842e8d_var(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2853a4_Var> _70727_v) {
	if ((!((*(_70727_v))._field_Constant))) {
		_1ac929959_var((*(_self_))._field_oc, _70727_v);
	};
}



inline void _1ac843246_mutSlicing(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab3db20d_MutSlicingExprModel> _71334_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1d72610e0_Production))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_71334_m))._field_Token));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Left);
	if (((*(_71334_m))._field_Right != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_71334_m))._field_Right);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ac8434ee_swap(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab3d9e32_SwapExprModel> _73028_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Left))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac84a308_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_73028_m))._field_Right))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8437a7_st(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Any _73926_st) {
	if ((_73926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _73926_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bc71c451:;
			{
				_1ac843d18_scope(_self_, _73926_st.cast_ptr<_1ab2212b8_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc71cee0:;
			{
				_1ac842e8d_var(_self_, _73926_st.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc71d056:;
			{
				_1ac859180_model((*((*(_self_))._field_oc))._field_ec, (*(_73926_st.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bc71d0bc:;
			{
				_1ac83e440_conditional(_self_, _73926_st.cast_ptr<_1ab221e01_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bc71d133:;
			{
				_1ac83e6e8_infIter(_self_, _73926_st.cast_ptr<_1ab2221ed_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bc71d199:;
			{
				_1ac83e9a1_whileIter(_self_, _73926_st.cast_ptr<_1ab2226a4_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bc71d210:;
			{
				_1ac83ec59_rangeIter(_self_, _73926_st.cast_ptr<_1ab223100_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bc71d276:;
			{
				_1ac840012_cont(_self_, _73926_st.cast_ptr<_1ab223485_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bc71d2dc:;
			{
				_1ac8402ba_label(_self_, _73926_st.cast_ptr<_1ab223b5b_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bc71d353:;
			{
				_1ac840573_gotoSt(_self_, _73926_st.cast_ptr<_1ab224035_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bc71d3b9:;
			{
				_1ac84082b_postfix(_self_, _73926_st.cast_ptr<_1ab22440e_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bc71d430:;
			{
				_1ac840ad4_assign(_self_, _73926_st.cast_ptr<_1ab2248b5_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bc71d496:;
			{
				_1ac8416a6_multiAssign(_self_, _73926_st.cast_ptr<_1ab224c8e_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bc71d50c:;
			{
				_1ac842113_matchSt(_self_, _73926_st.cast_ptr<_1ab2253ee_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bc71d584:;
			{
				_1ac8423bb_fallSt(_self_, _73926_st.cast_ptr<_1ab226631_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bc71d60b:;
			{
				_1ac842674_breakSt(_self_, _73926_st.cast_ptr<_1ab22385e_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bc71d683:;
			{
				_1ac842bd5_retSt(_self_, _73926_st.cast_ptr<_1ab2269b6_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bc71d70a:;
			{
				_1ac856e19_pushToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1ab3dbc36_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bc71d782:;
			{
				_1ac8571c2_appendToSlice((*((*(_self_))._field_oc))._field_ec, _73926_st.cast_ptr<_1ab3dc110_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bc71d809:;
			{
				_1ac843246_mutSlicing(_self_, _73926_st.cast_ptr<_1ab3db20d_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bc71d881:;
			{
				_1ac8434ee_swap(_self_, _73926_st.cast_ptr<_1ab3d9e32_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1bc71c50b:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bc71c0aa:;
	};
}



inline void _1ac843a60_scopeStmts(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2212b8_Scope>* _79135_s) {
	{
		auto expr = &((*((*(_79135_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc72845c:;
		if (it != expr_end) {
			jule::Any _79221_st = *it;
			{
				_1ac9223d0_indent((*(_self_))._field_oc);
				_1ac8437a7_st(_self_, _79221_st);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bc72845c:;
			++it;
			goto _iter_begin_1bc72845c;
		}
		_iter_end_1bc72845c:;
	};
}



inline void _1ac843d18_scope(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab2212b8_Scope> _80029_s) {
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	if ((*(_80029_s))._field_Deferred) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac843a60_scopeStmts(_self_, &(_80029_s));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_80029_s))._field_Deferred) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1ac8440c1_funcScope(jule::Ptr<_1ac83cd34_scopeCoder> _self_, jule::Ptr<_1ab1d2312_FnIns> _81633_f) {
	if (((*(_81633_f))._field_Scope == nullptr)) {
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	if ((!(_1ab1ce881_IsVoid((*(_81633_f))._field_Decl.ptr())))) {
		jule::Ptr<_1ab3041e2_Tuple> _82317_tup = _1ab2ea99c_Tup((*(_81633_f))._field_Result.ptr());;
		if ((_82317_tup != nullptr)) {
			_1ac9223d0_indent((*(_self_))._field_oc);
			_1ac93b86c_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _82317_tup);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_82317_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bc734105:;
				if (it != expr_end) {
					jule::I64 _82822_i = it - expr->begin();
					jule::Ptr<_1ab2e6525_TypeKind> _82829_t = *it;
					{
						if (_1ac93e441_shouldInitialized(&(_82829_t))) {
							_1ac9223d0_indent((*(_self_))._field_oc);
							_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_82822_i));
							_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1ac859438_initExpr((*((*(_self_))._field_oc))._field_ec, _82829_t);
							_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1bc734105:;
					++it;
					_82822_i++;
					goto _iter_begin_1bc734105;
				}
				_iter_end_1bc734105:;
			};
		} else if (((*((*((*(_81633_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1ac9223d0_indent((*(_self_))._field_oc);
			_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_81633_f))._field_Result);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1ac93e441_shouldInitialized(&((*(_81633_f))._field_Result))) {
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ac859438_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_81633_f))._field_Result);
			};
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1ac843a60_scopeStmts(_self_, &((*(_81633_f))._field_Scope));
	if (((*((*(_81633_f))._field_Decl))._field_Exceptional && _1ab1ce881_IsVoid((*(_81633_f))._field_Decl.ptr()))) {
		_1ac9223d0_indent((*(_self_))._field_oc);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1ac83cd34_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac846eb4_exprCoder> static__1ac84737c_new(jule::Ptr<_1ac921379_ObjectCoder>* _10524_oc) {
	return jule::new_ptr<_1ac846eb4_exprCoder>(_1ac846eb4_exprCoder{._field_oc=(*(_10524_oc))});;
}



inline void _1ac847635_string(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1a8d04e26_Const>* _11127_c) {
	jule::Str _1129_content = _1a8d0709e_ReadStr((*(_11127_c)).ptr());;
	if ((_1129_content.len() == 0LL)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1179_len = _1a8ce4630_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1129_content.len())), 10LL);;
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1ac85a22a_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _1129_content);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac921a2d_write((*(_self_))._field_oc, _1179_len);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8478dd_boolean(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Bool _12627_b) {
	if (_12627_b) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1ac847adb_nilLit(jule::Ptr<_1ac846eb4_exprCoder> _self_) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1ac847e2c_ftoaSpecialCases(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::F64* _13837_x) {
	{
		
		if (_1a8c98194_IsNaN((*(_13837_x)))) {
			_case_begin_1bc759999:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1a8c9879e_IsInf((*(_13837_x)), 1LL)) {
			_case_begin_1bc759a21:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1a8c9879e_IsInf((*(_13837_x)), -1LL)) {
			_case_begin_1bc759a98:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bc7598bc:;
			{
				return false;;
			}
		}
		_match_end_1bc759801:;
	};
	return true;;
}



inline void _1ac8481d5_float32(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1a8d04e26_Const>* _15228_c) {
	jule::F64 _1539_x = _1a8d07ad8_AsF64((*(_15228_c)).ptr());;
	if (_1ac847e2c_ftoaSpecialCases(_self_, &(_1539_x))) {
		return;;
	};
	{
		
		if ((_1539_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bc75d0eb:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1539_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bc75cd43:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bc75cccc:;
			{
				_1ac85a5c1_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1539_x, 32LL);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1bc75ca9b:;
	};
}



inline void _1ac84848d_float64(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1a8d04e26_Const>* _17128_c) {
	jule::F64 _1729_x = _1a8d07ad8_AsF64((*(_17128_c)).ptr());;
	if (_1ac847e2c_ftoaSpecialCases(_self_, &(_1729_x))) {
		return;;
	};
	{
		
		if ((_1729_x == jule::MAX_F64)) {
			_case_begin_1bc761682:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1729_x == jule::MIN_F64)) {
			_case_begin_1bc761e13:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bc761363:;
			{
				_1ac85a5c1_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1729_x, 64LL);
			}
		}
		_match_end_1bc761132:;
	};
}



inline void _1ac848746_constant(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1a8d04e26_Const> _18932_c) {
	{
		
		if (_1a8d0969a_IsStr(_18932_c.ptr())) {
			_case_begin_1bc763a4c:;
			{
				_1ac847635_string(_self_, &(_18932_c));
			}
		}
		else if (_1a8d09414_IsBool(_18932_c.ptr())) {
			_case_begin_1bc763640:;
			{
				_1ac8478dd_boolean(_self_, _1a8d06d18_ReadBool(_18932_c.ptr()));
			}
		}
		else if (_1a8d09931_IsF64(_18932_c.ptr())) {
			_case_begin_1bc7636b7:;
			{
				{
					
					if ((*(_18932_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1bc766203:;
						{
							_1ac8481d5_float32(_self_, &(_18932_c));
						}
					}
					else {
						_case_begin_1bc765c6e:;
						{
							_1ac84848d_float64(_self_, &(_18932_c));
						}
					}
					_match_end_1bc765bb4:;
				};
			}
		}
		else if (_1a8d08de7_IsI64(_18932_c.ptr())) {
			_case_begin_1bc76373e:;
			{
				_1ac85a8ac_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(_1a8d067eb_ReadI64(_18932_c.ptr())));
			}
		}
		else if (_1a8d0917d_IsU64(_18932_c.ptr())) {
			_case_begin_1bc7637b6:;
			{
				_1ac85ab98_utoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::U64>(_1a8d06a82_ReadU64(_18932_c.ptr())));
			}
		}
		else if (_1a8d09bb7_IsNil(_18932_c.ptr())) {
			_case_begin_1bc764201:;
			{
				_1ac847adb_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bc7635b8:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bc7634ec:;
	};
}



inline void _1ac848b64_divByZeroBinary(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab182e72_Token>* _21336_op, jule::Ptr<_1ab1c119c_OperandExprModel>* _21353_l, jule::Ptr<_1ab1c119c_OperandExprModel>* _21380_r) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21336_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bc76a01a:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bc76a092:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1bc769ea4:;
	};
	if ((!(_1d72610e0_Production))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ac923ed6_locInfo((*(_self_))._field_oc, _21336_op);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1ac84a308_possibleRefExpr(_self_, (*((*(_21353_l))))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_21380_r))))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac848e1c_unsafeBinary(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c1697_BinaryExprModel> _23536_m) {
	if ((((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1ac85b605_isAny(&((*((*(_23536_m))._field_Left))._field_Kind))) {
			if (((!(_1ab2e7603_IsNil((*((*(_23536_m))._field_Right))._field_Kind.ptr()))) && (!(_1ac85b605_isAny(&((*((*(_23536_m))._field_Right))._field_Kind)))))) {
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24521_i = _1ac922a62_pushAnyType((*(_self_))._field_oc, (*((*(_23536_m))._field_Right))._field_Kind);;
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_24521_i));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1ac84a308_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ac84a308_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac921a2d_write((*(_self_))._field_oc, (*((*(_23536_m))._field_Op))._field_Kind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8491c5_binary(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c1697_BinaryExprModel> _26630_m) {
	{
		auto &_match_expr{ (*((*(_26630_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bc77b191:;
			{
				if ((_1ab2ea1e9_Struct((*((*(_26630_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1ac848b64_divByZeroBinary(_self_, &((*(_26630_m))._field_Op), &((*(_26630_m))._field_Left), &((*(_26630_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1bc77b0d6:;
	};
	_1ac848e1c_unsafeBinary(_self_, _26630_m);
}



inline void _1ac84947d_var(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab2853a4_Var> _27827_m) {
	if ((*(_27827_m))._field_Binded) {
		jule::Ptr<_1ab19798c_Directive> _28013_d = _1ac93dcae_findDirective(&((*(_27827_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28013_d != nullptr)) {
			_1ac921cd6_writeBytes((*(_self_))._field_oc, _1ac92d8c5_concatAllParts((*(_28013_d))._field_Args));
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ac862a4b_var(&((*((*(_self_))._field_oc))._field_Buf), _27827_m);
}



inline void _1ac849736_structureIns(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1bc1ed_StructIns> _28936_m) {
	_1ac93525b_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _28936_m);
}



inline void _1ac8499de_unary(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c1a71_UnaryExprModel> _29329_m) {
	{
		auto &_match_expr{ (*((*(_29329_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bc7822eb:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1ac84a308_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bc782373:;
			{
				if ((_1d72610e0_Production || (_1ab2e8e0c_Sptr((*((*(_29329_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1bc782230;
				};
				_1ac84a308_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_29329_m))._field_Op));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1bc782230:;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac921a2d_write((*(_self_))._field_oc, (*((*(_29329_m))._field_Op))._field_Kind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ac849c97_structureLit(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c2445_StructLitExprModel> _31736_m) {
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__1ac862474_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_31736_m))._field_Strct));
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31736_m))._field_Args.len() > 0LL)) {
		_julec_label_1bc78c03c:;
		{
			auto expr = &((*((*(_31736_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc78c16e:;
			if (it != expr_end) {
				jule::I64 _33017_i = it - expr->begin();
				jule::Ptr<_1ab1bb64d_FieldIns> _33020_f = *it;
				{
					{
						auto expr = &((*(_31736_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc78cee9:;
						if (it != expr_end) {
							jule::Ptr<_1ab1c209e_StructArgExprModel> _33129_arg = *it;
							{
								if (((*(_33129_arg))._field_Field == _33020_f)) {
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									static__1ac862760_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_33129_arg))._field_Field))._field_Decl));
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1ac84a308_possibleRefExpr(_self_, (*((*(_33129_arg))._field_Expr))._field_Model);
									if ((((*((*(_31736_m))._field_Strct))._field_Fields.len() - _33017_i) > 1LL)) {
										_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1bc78c16e;
								};
							}
							_iter_next_1bc78cee9:;
							++it;
							goto _iter_begin_1bc78cee9;
						}
						_iter_end_1bc78cee9:;
					};
				}
				_iter_next_1bc78c16e:;
				++it;
				_33017_i++;
				goto _iter_begin_1bc78c16e;
			}
			_iter_end_1bc78c16e:;
		};
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac84a050_allocStructure(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c2742_AllocStructLitExprModel> _34838_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1ac862474_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_34838_m))._field_Lit))._field_Strct));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ac849c97_structureLit(_self_, (*(_34838_m))._field_Lit);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac84a308_possibleRefExpr(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Any _35635_expr) {
	{
		auto &_match_expr{ _35635_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc7954b8:;
			{
				jule::Ptr<_1ab2853a4_Var> _35913_v = _35635_expr.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
				if ((*(_35913_v))._field_Reference) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1ac859180_model(_self_, _35635_expr);
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1bc795463:;
	};
	_1ac859180_model(_self_, _35635_expr);
}



inline void _1ac84a726_castTraitFromTrait(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c2cc5_CastingExprModel>* _37043_m, jule::Ptr<_1ab1e26da_Trait> _37069_t1, jule::Ptr<_1ab1e26da_Trait> _37085_t2) {
	_1ac84a308_possibleRefExpr(_self_, (*((*(_37043_m))))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	static__1ac861ab1_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _37069_t1);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ac923c2d_pushAndWriteMaskMapper((*(_self_))._field_oc, _37069_t1, _37085_t2);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac84a9ce_casting(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c2cc5_CastingExprModel> _38531_m) {
	{
		
		if (_1ac85b605_isAny(&((*(_38531_m))._field_Kind))) {
			_case_begin_1bc79aa95:;
			{
				if (_1ab2e7603_IsNil((*(_38531_m))._field_ExprKind.ptr())) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1ab2e96b0_TypeEnum((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
					_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
					return;;
				};
				jule::I64 _39613_i = _1ac922a62_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_ExprKind);;
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38531_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1bc79c767:;
						{
							jule::Ptr<_1ab2ee0ee_Prim> _40017_prim = _1ab2e8b76_Prim((*(_38531_m))._field_ExprKind.ptr());;
							if (((_40017_prim != nullptr) && _1a8d04222_IsInt((*(_40017_prim))._field_Kind))) {
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1ac932302_prim((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _40017_prim);
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1bc79e604;
							};
							goto _case_begin_1bc79e659;
						}
					}
					else {
						_case_begin_1bc79e659:;
						{
							_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
						}
					}
					_match_end_1bc79e604:;
				};
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_39613_i));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ac85b605_isAny(&((*(_38531_m))._field_ExprKind))) {
			_case_begin_1bc79ab1c:;
			{
				_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1ab2e8e0c_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1ab2e8e0c_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1d72610e0_Production))) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_1ac922a62_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_Kind))));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ab2e9193_Ptr((*(_38531_m))._field_ExprKind.ptr()) != nullptr) || (_1ab2e9193_Ptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc79ab94:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1ab2ea480_Trait((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bc79ac1b:;
			{
				if ((_1ab2ea480_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ac84a726_castTraitFromTrait(_self_, &(_38531_m), _1ab2ea480_Trait((*(_38531_m))._field_Kind.ptr()), _1ab2ea480_Trait((*(_38531_m))._field_ExprKind.ptr()));
					return;;
				};
				_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1ab2e8e0c_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_1ab2e8e0c_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1d72610e0_Production))) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_1ac9238ba_findTypeOffset((*(_self_))._field_oc.ptr(), _1ab2ea480_Trait((*(_38531_m))._field_ExprKind.ptr()), (*(_38531_m))._field_Kind))));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ab2ea480_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc79ac93:;
			{
				_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_1ac9238ba_findTypeOffset((*(_self_))._field_oc.ptr(), _1ab2ea480_Trait((*(_38531_m))._field_Kind.ptr()), (*(_38531_m))._field_ExprKind))));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bc79a952:;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _4779_prim = _1ab2e8b76_Prim((*(_38531_m))._field_Kind.ptr());;
	jule::Ptr<_1ab2ee0ee_Prim> _4789_eprim = _1ab2e8b76_Prim((*(_38531_m))._field_ExprKind.ptr());;
	if ((((_4789_eprim != nullptr) && (_4779_prim != nullptr)) && _1ab302586_IsStr(_4779_prim.ptr()))) {
		if (_1ab3009e6_IsU8(_4789_eprim.ptr())) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ac84a308_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac84ac87_models(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Slice<jule::Any> _49630_args) {
	if ((_49630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7c62a7:;
		if (it != expr_end) {
			jule::I64 _50014_i = it - expr->begin();
			jule::Any _50021_a = *it;
			{
				_1ac84a308_possibleRefExpr(_self_, _50021_a);
				if (((_49630_args.len() - _50014_i) > 1LL)) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1bc7c62a7:;
			++it;
			_50014_i++;
			goto _iter_begin_1bc7c62a7;
		}
		_iter_end_1bc7c62a7:;
	};
}



inline void _1ac84b040_args(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c3677_FnCallExprModel>* _50829_m) {
	jule::I64 _50913_j = 0LL;;
	if (((((*((*((*(_50829_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_50829_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_50829_m))))._field_Func))._field_Params.len() > 0LL) && _1ab1cd055_IsSelf((*((*((*((*(_50829_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_50913_j)++;
	};
	{
		auto expr = &((*((*(_50829_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7c9233:;
		if (it != expr_end) {
			jule::I64 _51413_i = it - expr->begin();
			jule::Any _51416_arg = *it;
			{
				jule::Ptr<_1ab1d1366_ParamIns> _51513_p = (*((*((*(_50829_m))))._field_Func))._field_Params[_50913_j];;
				if ((((*(_51513_p))._field_Decl != nullptr) && (*((*(_51513_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bc7cc027:;
							{
								jule::Ptr<_1ab2853a4_Var> _51921_v = _51416_arg.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
								if ((*(_51921_v))._field_Reference) {
									_1ac859180_model(_self_, _51416_arg);
									goto _julec_label_1bc7d04d1;
								};
							}
						}
						_match_end_1bc7cbec2:;
					};
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ac859180_model(_self_, _51416_arg);
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1bc7d04d1;
				};
				_1ac84a308_possibleRefExpr(_self_, _51416_arg);
				_julec_label_1bc7d04d1:;
				if ((((*((*(_50829_m))))._field_Args.len() - _51413_i) > 1LL)) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_50913_j)++;
			}
			_iter_next_1bc7c9233:;
			++it;
			_51413_i++;
			goto _iter_begin_1bc7c9233;
		}
		_iter_end_1bc7c9233:;
	};
}



inline void _1ac84b2e8_modelForCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Any _53936_expr) {
	{
		auto &_match_expr{ _53936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bc7d1d84:;
			{
				_1ac84e52c_funcIns(_self_, _53936_expr.cast_ptr<_1ab1d2312_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc7d1e0b:;
			{
				jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _54517_ssie = _53936_expr.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54517_ssie))._field_Method != nullptr)) {
					_1ac84e52c_funcIns(_self_, (*(_54517_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1bc7d1d1d:;
	};
	_1ac84a308_possibleRefExpr(_self_, _53936_expr);
}



inline void _1ac84b5a1_pushCallInf(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c3677_FnCallExprModel>* _55432_m) {
	if ((_1d72610e0_Production || (!((*((*((*(_55432_m))))._field_Func))._field_Anon)))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55432_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55432_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1bc7d5849:;
				{
					if ((*((*((*((*((*((*(_55432_m))))._field_Expr.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1bc7d57e4:;
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1ac923ed6_locInfo((*(_self_))._field_oc, &((*((*(_55432_m))))._field_Token));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55432_m))))._field_Args.len() != 0LL)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1ac84b8e2_isWrapped(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c3677_FnCallExprModel>* _57734_m) {
	if ((((!(_1ab1d3797_IsBuiltin((*((*(_57734_m))))._field_Func.ptr()))) && ((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ab1cd055_IsSelf((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1bc7da5da:;
				{
					jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _58121_ssie = (*((*(_57734_m))))._field_Expr.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ab1cd2db_IsRef((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1ab2e8e0c_Sptr((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bc7dc202:;
							{
								goto _match_end_1bc7db498;
							}
						}
						else {
							_case_begin_1bc7db50e:;
							{
								if ((_1ab2ea1e9_Struct((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58121_ssie))._field_Expr))._field_Lvalue))) {
										_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1ac859180_model(_self_, (*((*(_58121_ssie))._field_Expr))._field_Model);
										_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1bc7db498:;
					};
				}
			}
			_match_end_1bc7da585:;
		};
	};
	return false;;
}



inline void _1ac84bb9a_pureFuncCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c3677_FnCallExprModel>* _60137_m) {
	jule::Bool _6029_wrapped = _1ac84b8e2_isWrapped(_self_, _60137_m);;
	_1ac84b2e8_modelForCall(_self_, (*((*(_60137_m))))._field_Expr);
	if ((!(_1ab1d3797_IsBuiltin((*((*(_60137_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60137_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1ac93e177_hasDirective(&((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60137_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc7e36e2:;
					if (it != expr_end) {
						jule::I64 _60826_i = it - expr->begin();
						jule::Ptr<_1ab2e4b3e_InsGeneric> _60833_g = *it;
						{
							_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_60833_g))._field_Kind);
							if ((((*((*((*(_60137_m))))._field_Func))._field_Generics.len() - _60826_i) > 1LL)) {
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1bc7e36e2:;
						++it;
						_60826_i++;
						goto _iter_begin_1bc7e36e2;
					}
					_iter_end_1bc7e36e2:;
				};
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1ac84b5a1_pushCallInf(_self_, _60137_m);
	jule::Bool _61913_locinfo = false;;
	if ((((!(_1ab1d3797_IsBuiltin((*((*(_60137_m))))._field_Func.ptr()))) && ((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1ab1cd055_IsSelf((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1bc7e8e78:;
				{
					jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _62321_ssie = (*((*(_60137_m))))._field_Expr.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1ab1cd2db_IsRef((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1bc7ed91c:;
							{
								_1ac84a308_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1ab2e8e0c_Sptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bc7e9e8a:;
							{
								_1ac84a308_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_1d72610e0_Production))) {
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1ac923ed6_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1bc7e9e24:;
							{
								if ((_1ab2ea1e9_Struct((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62321_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1bc7ea6e9:;
											{
												jule::Ptr<_1ab2853a4_Var> _64229_v = (*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
												if ((*(_64229_v))._field_Reference) {
													goto _match_end_1bc7eac16;
												};
												goto _case_begin_1bc7eac6b;
											}
										}
										else {
											_case_begin_1bc7eac6b:;
											{
												_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1bc7eac16:;
									};
								};
								if (_6029_wrapped) {
									_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1ab2e9193_Ptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1ac859180_model(_self_, (*((*(_62321_ssie))._field_Expr))._field_Model);
								} else {
									_1ac84a308_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1bc7e9dad:;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1bc7e9000:;
				{
					_1ac84a308_possibleRefExpr(_self_, (*((*((*(_60137_m))))._field_Expr.cast_ptr<_1ab1c5877_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_1d72610e0_Production))) {
						_61913_locinfo=true;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1bc7e8e12:;
		};
	};
	_1ac84b040_args(_self_, _60137_m);
	if (_61913_locinfo) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1ac923ed6_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6029_wrapped) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1ac84be53_coFuncCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c3677_FnCallExprModel>* _68735_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1a7c4c7ed_StrBuilder _69013_head = static__1a7c4cb1c_New(32LL);;
	_1a7c573c9_WriteStr(&_69013_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68735_m))))._field_Func))._field_Owner != nullptr)) {
		_1a7c573c9_WriteStr(&_69013_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68735_m))))._field_Args.len() > 0LL)) {
			_1a7c573c9_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68735_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc80eb81:;
		if (it != expr_end) {
			jule::I64 _69813_i = it - expr->begin();
			jule::Any _69816_arg = *it;
			{
				if ((_69813_i > 0LL)) {
					_1a7c573c9_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _69816_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bc8111b0:;
						{
							jule::Ptr<_1ab2853a4_Var> _70421_v = _69816_arg.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
							static__1ac862a4b_var(&(_69013_head), _70421_v);
							goto _iter_next_1bc80eb81;
						}
					}
					_match_end_1bc81091d:;
				};
				jule::Str _70813_name = (jule::Str::lit("_co_arg_", 8) + _1a8ce48e9_Itoa(_69813_i));;
				_1a7c573c9_WriteStr(&_69013_head, _70813_name);
				_1ac9223d0_indent((*(_self_))._field_oc);
				_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Kind);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Decl))._field_Reference) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1ac921a2d_write((*(_self_))._field_oc, _70813_name);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ac84a308_possibleRefExpr(_self_, _69816_arg);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72013_argS = jule::Any(_70813_name, &__jule_any_type4);;
				(*((*(_68735_m))))._field_Args[_69813_i]=(*(((jule::Any*)((&(_72013_argS))))));
			}
			_iter_next_1bc80eb81:;
			++it;
			_69813_i++;
			goto _iter_begin_1bc80eb81;
		}
		_iter_end_1bc80eb81:;
	};
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1a7c57121_Write(&(*((*(_self_))._field_oc))._field_Buf, _1a7c58672_Buf(&_69013_head));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac84bb9a_pureFuncCall(_self_, _68735_m);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac84c2b6_writeUseExpr(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1d2312_FnIns>* _73837_f, jule::Ptr<_1ab2b5c0e_Data> _73852_d) {
	if ((_1ab2ea99c_Tup((*(_73852_d))._field_Kind.ptr()) == nullptr)) {
		_1ac84a308_possibleRefExpr(_self_, (*(_73852_d))._field_Model);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ab1c6d95_TupleExprModel> _74413_tup = (*(_73852_d))._field_Model.cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81);;
	_1ac93b86c_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _1ab2ea99c_Tup((*((*(_73837_f))))._field_Result.ptr()));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc81cb28:;
		if (it != expr_end) {
			jule::I64 _74713_i = it - expr->begin();
			jule::Ptr<_1ab2b5c0e_Data> _74716_data = *it;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_74713_i));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1ac84a308_possibleRefExpr(_self_, (*(_74716_data))._field_Model);
				if ((((*(_74413_tup))._field_Datas.len() - _74713_i) > 1LL)) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bc81cb28:;
			++it;
			_74713_i++;
			goto _iter_begin_1bc81cb28;
		}
		_iter_end_1bc81cb28:;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1ac84c56e_funcCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c3677_FnCallExprModel> _75932_m) {
	if ((*(_75932_m))._field_IsCo) {
		_1ac84be53_coFuncCall(_self_, &(_75932_m));
		return;;
	};
	if (((_1ab1d3797_IsBuiltin((*(_75932_m))._field_Func.ptr()) || (!((*((*((*(_75932_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_75932_m))._field_Except != nullptr) && ((*((*(_75932_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1ac84bb9a_pureFuncCall(_self_, &(_75932_m));
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1ac84bb9a_pureFuncCall(_self_, &(_75932_m));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	if (((*(_75932_m))._field_Except != nullptr)) {
		if ((((*((*(_75932_m))._field_Func))._field_Result == nullptr) || (!((*(_75932_m))._field_Assigned)))) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1ac843d18_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78517_forwarded = _1ac85b072_isForwarded(&((*(_75932_m))._field_Except));;
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78517_forwarded) {
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79021_stmt = (*((*(_75932_m))._field_Except))._field_Stmts[((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79021_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1bc82dcd2:;
					{
						(*((*(_75932_m))._field_Except))._field_Stmts=(*((*(_75932_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL));
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1ac921ed4_addIndent((*(_self_))._field_oc);
						_1ac843a60_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_75932_m))._field_Except));
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ac9223d0_indent((*(_self_))._field_oc);
						_1ac84c2b6_writeUseExpr(_self_, &((*(_75932_m))._field_Func), _79021_stmt.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24));
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ac9221d2_doneIndent((*(_self_))._field_oc);
						_1ac9223d0_indent((*(_self_))._field_oc);
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1bc82ea80:;
					{
						_1ac843d18_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
					}
				}
				_match_end_1bc82ea2a:;
			};
			if (_78517_forwarded) {
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1ac859438_initExpr(_self_, (*((*(_75932_m))._field_Func))._field_Result);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1ac9221d2_doneIndent((*(_self_))._field_oc);
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_75932_m))._field_Token));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ab1ce881_IsVoid((*((*(_75932_m))._field_Func))._field_Decl.ptr())))) {
			_1ac9223d0_indent((*(_self_))._field_oc);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1ac9221d2_doneIndent((*(_self_))._field_oc);
	};
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac84c827_slice(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c3a51_SliceExprModel> _83029_m) {
	if (((*(_83029_m))._field_Elems.len() == 0LL)) {
		_1ac933bd8_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ac933bd8_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1ac84ac87_models(_self_, (*(_83029_m))._field_Elems);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac84cad0_indexing(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c4007_IndexingExprModel> _84232_m) {
	{
		auto &_match_expr{ (*((*(_84232_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc841531:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1d72610e0_Production))) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _85313_s = _1a8d0709e_ReadStr((*((*(_84232_m))._field_Expr))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19).ptr());;
				_1ac85a22a_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _85313_s);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_85313_s.len())));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ac84a308_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bc8414cb:;
	};
	_1ac84a308_possibleRefExpr(_self_, (*((*(_84232_m))._field_Expr))._field_Model);
	{
		
		if (_1d72610e0_Production || (_1ab2e9193_Ptr((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1ab2ea716_Map((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1ac85b33b_isExprComesFromBind(&((*(_84232_m))._field_Expr))) {
			_case_begin_1bc84823b:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1ac84a308_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bc840eae:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1ac84a308_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bc847d73:;
	};
}



inline void _1ac84cd88_unsafeIndexing(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab3db807_UnsafeIndexingExprModel> _88238_m) {
	_1ac84a308_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1d72610e0_Production || (_1ab2e9193_Ptr((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1ab2ea716_Map((*((*((*(_88238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc84d3c8:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1ac84a308_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bc84dede:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1ac84a308_possibleRefExpr(_self_, (*((*((*(_88238_m))._field_Node))._field_Index))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bc84de78:;
	};
}



inline void _1ac84d141_anonFunc(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c43d1_AnonFnExprModel> _89932_m) {
	_1ac936b42_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_89932_m))._field_Func);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1ac92933d_paramsIns((*(_self_))._field_oc, &((*((*(_89932_m))._field_Func))._field_Params));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1ac93646b_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*(_89932_m))._field_Func));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac8440c1_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_89932_m))._field_Func);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac84d3e9_mapExpr(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c4c61_MapExprModel> _91031_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_KeyKind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_91031_m))._field_ValKind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_91031_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_91031_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc85bdcb:;
			if (it != expr_end) {
				jule::I64 _91718_i = it - expr->begin();
				jule::Ptr<_1ab1c47aa_KeyValPairExprModel> _91725_pair = *it;
				{
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1ac84a308_possibleRefExpr(_self_, (*(_91725_pair))._field_Key);
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1ac84a308_possibleRefExpr(_self_, (*(_91725_pair))._field_Val);
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_91031_m))._field_Entries.len() - _91718_i) > 1LL)) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1bc85bdcb:;
				++it;
				_91718_i++;
				goto _iter_begin_1bc85bdcb;
			}
			_iter_end_1bc85bdcb:;
		};
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac84d6a2_slicing(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c52e4_SlicingExprModel> _93131_m) {
	_1ac84a308_possibleRefExpr(_self_, (*(_93131_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1d72610e0_Production))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_93131_m))._field_Token));
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ac84a308_possibleRefExpr(_self_, (*(_93131_m))._field_Left);
	if (((*(_93131_m))._field_Right != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac84a308_possibleRefExpr(_self_, (*(_93131_m))._field_Right);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac84d95a_traitSub(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c5877_TraitSubIdentExprModel> _94732_m) {
	static__1ac861ab1_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_94732_m))._field_Trt);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1ac84a308_possibleRefExpr(_self_, (*(_94732_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	static__1ac8614d9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_94732_m))._field_Method));
}



inline void _1ac84dc13_structureSub(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _95636_m) {
	_1ac84a308_possibleRefExpr(_self_, (*((*(_95636_m))._field_Expr))._field_Model);
	if (((*(_95636_m))._field_Field == nullptr)) {
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1ac862760_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_95636_m))._field_Field))._field_Decl));
}



inline void _1ac84debb_array(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c6a98_ArrayExprModel> _96529_m) {
	_1ac9355be_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_96529_m))._field_Kind);
	if (((*(_96529_m))._field_Elems.len() == 0LL)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_96529_m))._field_Elems.len() == 2LL) && ((*(_96529_m))._field_Elems[1LL] == nullptr))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac84a308_possibleRefExpr(_self_, (*(_96529_m))._field_Elems[0LL]);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1ac84ac87_models(_self_, (*(_96529_m))._field_Elems);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1ac84e274_funcInsCommon(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1d2312_FnIns> _98837_m) {
	_1ac936b42_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _98837_m);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac84e52c_funcIns(_self_, _98837_m);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac84e52c_funcIns(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1d2312_FnIns> _99531_m) {
	if ((((*(_99531_m))._field_Decl != nullptr) && (*((*(_99531_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1ab19798c_Directive> _99713_d = _1ac93dcae_findDirective(&((*((*(_99531_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_99713_d != nullptr)) {
			_1ac921cd6_writeBytes((*(_self_))._field_oc, _1ac92d8c5_concatAllParts((*(_99713_d))._field_Args));
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ac8617c5_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_99531_m));
}



inline void _1ac84e7d5_tuple(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c6d95_TupleExprModel> _100629_m) {
	{
		auto expr = &((*(_100629_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc87b1b4:;
		if (it != expr_end) {
			jule::I64 _100714_i = it - expr->begin();
			jule::Ptr<_1ab2b5c0e_Data> _100721_d = *it;
			{
				_1ac84a308_possibleRefExpr(_self_, (*(_100721_d))._field_Model);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_100629_m))._field_Datas.len() - _100714_i) > 1LL)) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ac9223d0_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1bc87b1b4:;
			++it;
			_100714_i++;
			goto _iter_begin_1bc87b1b4;
		}
		_iter_end_1bc87b1b4:;
	};
}



inline void _1ac84ea8d_newCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c7a22_BuiltinNewCallExprModel> _101731_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_101731_m))._field_Kind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_101731_m))._field_Init != nullptr)) {
		_1ac84a308_possibleRefExpr(_self_, (*(_101731_m))._field_Init);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac84ed46_outCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c726e_BuiltinOutCallExprModel> _102731_m) {
	if (((*(_102731_m))._field_Debug && _1d72610e0_Production)) {
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1ac84a308_possibleRefExpr(_self_, (*(_102731_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8500ee_outlnCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c7648_BuiltinOutlnCallExprModel> _103633_m) {
	if (((*(_103633_m))._field_Debug && _1d72610e0_Production)) {
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1ac84a308_possibleRefExpr(_self_, (*(_103633_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8503a7_panicCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c7deb_BuiltinPanicCallExprModel> _104533_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1ac84a308_possibleRefExpr(_self_, (*(_104533_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_104533_m))._field_Token));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ac850660_assertCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel> _105334_m) {
	if (_1d72610e0_Production) {
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1ac84a308_possibleRefExpr(_self_, (*(_105334_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1ac85a22a_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*(_105334_m))._field_Log);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1ac923ed6_locInfo((*(_self_))._field_oc, &((*(_105334_m))._field_Token));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ac850918_errorCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c9ea8_BuiltinErrorCallExprModel> _106633_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ab1ce881_IsVoid((*((*(_106633_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bc88c945:;
				{
					jule::Ptr<_1ab2853a4_Var> _107117_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
					if ((*(_107117_v))._field_Ident.equal("error", 5)) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1bc88c8e0:;
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1ac93c043_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_106633_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_106633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bc891dde:;
				{
					jule::Ptr<_1ab2853a4_Var> _108317_v = (*((*(_106633_m))._field_Err))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
					if ((*(_108317_v))._field_Ident.equal("error", 5)) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1bc891d89:;
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_1ac84a308_possibleRefExpr(_self_, (*((*(_106633_m))._field_Err))._field_Model);
	jule::I64 _10929_i = _1ac922a62_pushAnyType((*(_self_))._field_oc, (*((*(_106633_m))._field_Err))._field_Kind);;
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_10929_i));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ac850bc1_copyCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c9ace_BuiltinCopyCallExprModel> _109832_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_109832_m))._field_Dest))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1ab2e8b76_Prim((*((*(_109832_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_109832_m))._field_Src))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1ab2e8b76_Prim((*((*(_109832_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac850e79_lenCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c902e_BuiltinLenCallExprModel> _111431_m) {
	_1ac84a308_possibleRefExpr(_self_, (*((*(_111431_m))._field_Expr))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1ac851232_capCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c932b_BuiltinCapCallExprModel> _111931_m) {
	_1ac84a308_possibleRefExpr(_self_, (*((*(_111931_m))._field_Expr))._field_Model);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1ac8514da_deleteCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel> _112434_m) {
	_1ac84a308_possibleRefExpr(_self_, (*((*(_112434_m))._field_Dest))._field_Model);
	if (((*(_112434_m))._field_Key != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1ac84a308_possibleRefExpr(_self_, (*((*(_112434_m))._field_Key))._field_Model);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1ac856600_makeCallSlice(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel>* _113538_m) {
	jule::Ptr<_1ab3035ed_Slc> _113613_slice = _1ab2e9bcc_Slc((*((*(_113538_m))))._field_Kind.ptr());;
	_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_113538_m))))._field_Kind);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_113538_m))))._field_Cap != nullptr)) {
		_1ac84a308_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Cap);
	} else {
		_1ac84a308_possibleRefExpr(_self_, (*((*(_113538_m))))._field_Len);
	};
	if (_1ac93e441_shouldInitialized(&((*(_113613_slice))._field_Elem))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac859438_initExpr(_self_, (*(_113613_slice))._field_Elem);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8568a8_makeCallStr(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel>* _115336_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ac84a308_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Len);
	if (((*((*(_115336_m))))._field_Cap != nullptr)) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac84a308_possibleRefExpr(_self_, (*((*(_115336_m))))._field_Cap);
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac856b61_makeCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel> _116432_m) {
	if ((_1ab2e9bcc_Slc((*(_116432_m))._field_Kind.ptr()) != nullptr)) {
		_1ac856600_makeCallSlice(_self_, &(_116432_m));
		return;;
	};
	_1ac8568a8_makeCallStr(_self_, &(_116432_m));
}



inline void _1ac856e19_pushToSlice(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab3dbc36_PushToSliceExprModel> _117235_m) {
	;
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1ac933bd8_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_117235_m))._field_Elems))._field_ElemKind);
	jule::Bool _118013_ptr = false;;
	{
		auto &_match_expr{ (*(_117235_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc8ac5d0:;
			{
				jule::Ptr<_1ab1c1a71_UnaryExprModel> _118417_u = (*(_117235_m))._field_Dest.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110);;
				if ((_1ab2e9193_Ptr((*((*(_118417_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1ac84a308_possibleRefExpr(_self_, (*((*(_118417_u))._field_Expr))._field_Model);
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_118013_ptr=true;
					goto _match_end_1bc8ae3d4;
				};
				goto _case_begin_1bc8ae439;
			}
		}
		else {
			_case_begin_1bc8ae439:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1ac84a308_possibleRefExpr(_self_, (*(_117235_m))._field_Dest);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1bc8ae3d4:;
	};
	if (((*((*(_117235_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_118013_ptr) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1ac84a308_possibleRefExpr(_self_, (*((*(_117235_m))._field_Elems))._field_Elems[0LL]);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_118013_ptr) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>((*((*(_117235_m))._field_Elems))._field_Elems.len())));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_117235_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8b7882:;
		if (it != expr_end) {
			jule::Any _121821_e = *it;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_118013_ptr) {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1ac84a308_possibleRefExpr(_self_, _121821_e);
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1bc8b7882:;
			++it;
			goto _iter_begin_1bc8b7882;
		}
		_iter_end_1bc8b7882:;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac8571c2_appendToSlice(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab3dc110_AppendToSliceExprModel> _123237_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac84a308_possibleRefExpr(_self_, (*(_123237_m))._field_Dest);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1ac84a308_possibleRefExpr(_self_, (*(_123237_m))._field_Slice);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ac85747a_appendCall(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c8c32_BuiltinAppendCallExprModel> _124034_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1ac84a308_possibleRefExpr(_self_, (*(_124034_m))._field_Dest);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ac84a308_possibleRefExpr(_self_, (*(_124034_m))._field_Elements);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac857733_sizeof(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c5a64_SizeofExprModel> _124830_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1ac84a308_possibleRefExpr(_self_, (*(_124830_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8579db_alignof(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1ca6d4_AlignofExprModel> _125431_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1ac84a308_possibleRefExpr(_self_, (*(_125431_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac857c94_runeLit(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1ca9d1_RuneExprModel> _126027_m) {
	if (((*(_126027_m))._field_Code <= 127LL)) {
		_1a7c57682_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _126317_b = _1ac859b0e_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_126027_m))._field_Code)));;
		if (_126317_b.equal("'", 1)) {
			_1a7c57682_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\\');
		};
		_1a7c573c9_WriteStr(&(*((*(_self_))._field_oc))._field_Buf, _126317_b);
		_1a7c57682_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		return;;
	};
	_1ac85a8ac_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(static_cast<jule::I64>((*(_126027_m))._field_Code)));
}



inline void _1ac85804c_structureStatic(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1c66be_StructStaticIdentExprModel> _127439_m) {
	static__1ac8617c5_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_127439_m))._field_Method));
}



inline void _1ac858305_integratedToStr(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1caccd_IntegratedToStrExprModel> _127839_m) {
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1ac84a308_possibleRefExpr(_self_, (*(_127839_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac8585ad_backendEmit(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1cb1a7_BackendEmitExprModel> _128435_m) {
	if (((*(_128435_m))._field_Exprs.len() == 0LL)) {
		_1ac921a2d_write((*(_self_))._field_oc, (*(_128435_m))._field_Code);
		return;;
	};
	jule::I64 _12899_n = _1a7c58155_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _129013_args = jule::Slice<jule::Any>::alloc((*(_128435_m))._field_Exprs.len(), (*(_128435_m))._field_Exprs.len());;
	{
		auto expr = &((*(_128435_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8c9b80:;
		if (it != expr_end) {
			jule::I64 _129114_i = it - expr->begin();
			jule::Any _129121_expr = *it;
			{
				_1ac84a308_possibleRefExpr(_self_, _129121_expr);
				jule::Slice<jule::U8> _129317_buf = _1a7c58672_Buf(&(*((*(_self_))._field_oc))._field_Buf);;
				_129013_args[_129114_i]=jule::Any(static_cast<jule::Str>(_129317_buf.slice(_12899_n)), &__jule_any_type4);
				{
					_1a7c5892a_SetBuf(&(*((*(_self_))._field_oc))._field_Buf, _129317_buf.slice(0LL, _12899_n));
				};
			}
			_iter_next_1bc8c9b80:;
			++it;
			_129114_i++;
			goto _iter_begin_1bc8c9b80;
		}
		_iter_end_1bc8c9b80:;
	};
	_1ac921a2d_write((*(_self_))._field_oc, _1ab3c735e_Format((*(_128435_m))._field_Code, _129013_args));
}



inline void _1ac858866_free(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab1cb4a4_FreeExprModel> _130028_m) {
	_1ac84a308_possibleRefExpr(_self_, (*(_130028_m))._field_Expr);
	if (_1d726094c_RC) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1ac858b1e_strComp(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab3dab7a_StrCompExprModel> _130931_m) {
	if ((*(_130931_m))._field_NotEq) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13139_s = _1a8d0709e_ReadStr((*(_130931_m))._field_Right.ptr());;
	_1ac84a308_possibleRefExpr(_self_, (*(_130931_m))._field_Left);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1ac85a22a_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _13139_s);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(static_cast<jule::I64>(_13139_s.len())));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_130931_m))._field_NotEq) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ac858dc7_emptyCompare(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab3da350_EmptyCompareExprModel> _132536_m) {
	if ((*(_132536_m))._field_Neg) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac84a308_possibleRefExpr(_self_, (*(_132536_m))._field_Expr);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1ac859180_model(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Any _133429_m) {
	{
		auto &_match_expr{ _133429_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bc8d8870:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, _133429_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bc8d830e:;
			{
				_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _133429_m.cast_ptr<_1ab2e6525_TypeKind>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc8d851d:;
			{
				_1ac848746_constant(_self_, _133429_m.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc8d8584:;
			{
				_1ac84947d_var(_self_, _133429_m.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bc8d860b:;
			{
				_1ac849736_structureIns(_self_, _133429_m.cast_ptr<_1ab1bc1ed_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bc8d8683:;
			{
				_1ac84e274_funcInsCommon(_self_, _133429_m.cast_ptr<_1ab1d2312_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bc8d9365:;
			{
				_1ac848e1c_unsafeBinary(_self_, (*(_133429_m.cast_ptr<_1ab3db50a_UnsafeBinaryExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bc8d93dc:;
			{
				_1ac8491c5_binary(_self_, _133429_m.cast_ptr<_1ab1c1697_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc8d9464:;
			{
				_1ac8499de_unary(_self_, _133429_m.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bc8d94db:;
			{
				_1ac849c97_structureLit(_self_, _133429_m.cast_ptr<_1ab1c2445_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bc8d9563:;
			{
				_1ac84a050_allocStructure(_self_, _133429_m.cast_ptr<_1ab1c2742_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bc8d95da:;
			{
				_1ac84a9ce_casting(_self_, _133429_m.cast_ptr<_1ab1c2cc5_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bc8d9662:;
			{
				_1ac84c56e_funcCall(_self_, _133429_m.cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bc8d96d9:;
			{
				_1ac84c827_slice(_self_, _133429_m.cast_ptr<_1ab1c3a51_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bc8d9761:;
			{
				_1ac84debb_array(_self_, _133429_m.cast_ptr<_1ab1c6a98_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1bc8d97d8:;
			{
				_1ac84cd88_unsafeIndexing(_self_, _133429_m.cast_ptr<_1ab3db807_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc8d9860:;
			{
				_1ac84cad0_indexing(_self_, _133429_m.cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bc8d98d7:;
			{
				_1ac84d141_anonFunc(_self_, _133429_m.cast_ptr<_1ab1c43d1_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bc8d995e:;
			{
				_1ac84d3e9_mapExpr(_self_, _133429_m.cast_ptr<_1ab1c4c61_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bc8d99d6:;
			{
				_1ac84d6a2_slicing(_self_, _133429_m.cast_ptr<_1ab1c52e4_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bc8d9a5d:;
			{
				_1ac84d95a_traitSub(_self_, _133429_m.cast_ptr<_1ab1c5877_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc8d9ad5:;
			{
				_1ac84dc13_structureSub(_self_, _133429_m.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1bc8d9b5c:;
			{
				_1ac84e7d5_tuple(_self_, _133429_m.cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bc8d9bd4:;
			{
				_1ac84ed46_outCall(_self_, _133429_m.cast_ptr<_1ab1c726e_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bc8d9c5b:;
			{
				_1ac8500ee_outlnCall(_self_, _133429_m.cast_ptr<_1ab1c7648_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bc8d9cd3:;
			{
				_1ac84ea8d_newCall(_self_, _133429_m.cast_ptr<_1ab1c7a22_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bc8d9d5a:;
			{
				_1ac8503a7_panicCall(_self_, _133429_m.cast_ptr<_1ab1c7deb_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bc8d9dd2:;
			{
				_1ac850660_assertCall(_self_, _133429_m.cast_ptr<_1ab1c83a2_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bc8d9e59:;
			{
				_1ac850918_errorCall(_self_, _133429_m.cast_ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bc8d9ed1:;
			{
				_1ac856b61_makeCall(_self_, _133429_m.cast_ptr<_1ab1c8858_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bc8da058:;
			{
				_1ac85747a_appendCall(_self_, _133429_m.cast_ptr<_1ab1c8c32_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bc8da0d0:;
			{
				_1ac850bc1_copyCall(_self_, _133429_m.cast_ptr<_1ab1c9ace_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bc8da157:;
			{
				_1ac850e79_lenCall(_self_, _133429_m.cast_ptr<_1ab1c902e_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bc8da1ce:;
			{
				_1ac851232_capCall(_self_, _133429_m.cast_ptr<_1ab1c932b_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bc8da256:;
			{
				_1ac8514da_deleteCall(_self_, _133429_m.cast_ptr<_1ab1c9705_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bc8da2cd:;
			{
				_1ac857733_sizeof(_self_, _133429_m.cast_ptr<_1ab1c5a64_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bc8da355:;
			{
				_1ac8579db_alignof(_self_, _133429_m.cast_ptr<_1ab1ca6d4_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1bc8da3cc:;
			{
				_1ac857c94_runeLit(_self_, _133429_m.cast_ptr<_1ab1ca9d1_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bc8da454:;
			{
				_1ac85804c_structureStatic(_self_, _133429_m.cast_ptr<_1ab1c66be_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bc8da4cb:;
			{
				_1ac858305_integratedToStr(_self_, _133429_m.cast_ptr<_1ab1caccd_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bc8da553:;
			{
				_1ac8585ad_backendEmit(_self_, _133429_m.cast_ptr<_1ab1cb1a7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bc8da5ca:;
			{
				_1ac858866_free(_self_, _133429_m.cast_ptr<_1ab1cb4a4_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bc8da652:;
			{
				_1ac858b1e_strComp(_self_, _133429_m.cast_ptr<_1ab3dab7a_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1bc8da6c9:;
			{
				_1ac84947d_var(_self_, (*(_133429_m.cast_ptr<_1ab3da64c_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bc8da751:;
			{
				_1ac858dc7_emptyCompare(_self_, _133429_m.cast_ptr<_1ab3da350_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1bc8d84a7:;
			{
				_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1bc8d8452:;
	};
}



inline void _1ac859438_initExpr(jule::Ptr<_1ac846eb4_exprCoder> _self_, jule::Ptr<_1ab2e6525_TypeKind> _143132_t) {
	if (_1ab2e83c3_NilCompatible(_143132_t.ptr())) {
		if ((_1ab2e9193_Ptr(_143132_t.ptr()) != nullptr)) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ab3041e2_Tuple> _144113_tup = _1ab2ea99c_Tup(_143132_t.ptr());;
	if ((_144113_tup != nullptr)) {
		_1ac93b86c_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _144113_tup);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_144113_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc9081ca:;
			if (it != expr_end) {
				jule::I64 _144518_i = it - expr->begin();
				jule::Ptr<_1ab2e6525_TypeKind> _144525_tt = *it;
				{
					if ((!(_1ac93e441_shouldInitialized(&(_144525_tt))))) {
						goto _iter_next_1bc9081ca;
					};
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1ac921a2d_write((*(_self_))._field_oc, _1a8ce48e9_Itoa(_144518_i));
					_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1ac859438_initExpr(_self_, _144525_tt);
					if ((((*(_144113_tup))._field_Types.len() - _144518_i) > 1LL)) {
						_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1bc9081ca:;
				++it;
				_144518_i++;
				goto _iter_begin_1bc9081ca;
			}
			_iter_end_1bc9081ca:;
		};
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1ab1e4de6_Enum> _146013_enm = _1ab2e9429_Enum(_143132_t.ptr());;
	if ((_146013_enm != nullptr)) {
		_1ac859180_model(_self_, (*((*((*((*(_146013_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _14659_prim = _1ab2e8b76_Prim(_143132_t.ptr());;
	if ((_14659_prim != nullptr)) {
		if (_1a8d0482c_IsNum((*(_14659_prim))._field_Kind)) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1ab302300_IsBool(_14659_prim.ptr())) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1ab302586_IsStr(_14659_prim.ptr())) {
			_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ab2e9946_Arr(_143132_t.ptr()) != nullptr)) {
		jule::Ptr<_1ab30591e_Arr> _147717_arr = _1ab2e9946_Arr(_143132_t.ptr());;
		_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac859438_initExpr(_self_, (*(_147717_arr))._field_Elem);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _148413_s = _1ab2ea1e9_Struct(_143132_t.ptr());;
	if ((((_148413_s != nullptr) && (*((*(_148413_s))._field_Decl))._field_Binded) && (_1ac93dcae_findDirective(&((*((*(_148413_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1ac936ea5_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _143132_t);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1ac846eb4_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac85c606_TestCoder> static__1ac85ca46_New(jule::Ptr<_1ac921379_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1ac85c606_TestCoder>(_1ac85c606_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ac85cccc_findTestingPackage(jule::Ptr<_1ac85c606_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc91832d:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1bc91832d:;
			++it;
			goto _iter_begin_1bc91832d;
		}
		_iter_end_1bc91832d:;
	};
	return nullptr;;
}



inline void _1ac85d085_appendTest(jule::Ptr<_1ac85c606_TestCoder> _self_, jule::Ptr<_1ab1d2312_FnIns> _4434_f) {
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac85d7c2_callTmReset(_self_);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1ac85a22a_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1ac9223d0_indent((*(_self_))._field_oc);
	static__1ac8617c5_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_4434_f));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1ac85d33d_appendPackageTests(jule::Ptr<_1ac85c606_TestCoder> _self_, jule::Ptr<_1ab2459c4_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc91eb92:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc9205dd:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _6125_f = *it;
						{
							if (_1ac93e177_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1ac85d085_appendTest(_self_, (*(_6125_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1bc9205dd:;
						++it;
						goto _iter_begin_1bc9205dd;
					}
					_iter_end_1bc9205dd:;
				};
			}
			_iter_next_1bc91eb92:;
			++it;
			goto _iter_begin_1bc91eb92;
		}
		_iter_end_1bc91eb92:;
	};
}



inline jule::Bool _1ac85d5c4_readyTestingPackage(jule::Ptr<_1ac85c606_TestCoder> _self_) {
	jule::Ptr<_1ab242a9d_ImportInfo> _7013_p = _1ac85cccc_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1ab243c7a_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1ab1bd265_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1ab1bd265_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1ab1bd265_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1ac85d7c2_callTmReset(jule::Ptr<_1ac85c606_TestCoder> _self_) {
	static__1ac8614d9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmReset));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ac85d9c0_callTmFailed(jule::Ptr<_1ac85c606_TestCoder> _self_) {
	static__1ac8614d9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmFailed));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ac85dbbd_callTmSkipped(jule::Ptr<_1ac85c606_TestCoder> _self_) {
	static__1ac8614d9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmSkipped));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ac85ddbb_Serialize(jule::Ptr<_1ac85c606_TestCoder> _self_) {
	_1ac92cece_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1ac92ccd1_end((*(_self_))._field_oc);
	});;
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	if ((!(_1ac85d5c4_readyTestingPackage(_self_)))) {
		_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1ac9221d2_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1a7c4c7ed_StrBuilder _11813_tb = static__1a7c4cb1c_New(40LL);;
	_1ac93525b_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &(_11813_tb), (*(_self_))._field_t);
	_1ac9329c8_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _1a7c58672_Buf(&_11813_tb));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1ac921cd6_writeBytes((*(_self_))._field_oc, _1a7c58672_Buf(&_11813_tb));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1ac921ed4_addIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1ac85d9c0_callTmFailed(_self_);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1ac85dbbd_callTmSkipped(_self_);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1ac85d33d_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1ac9221d2_doneIndent((*(_self_))._field_oc);
	_1ac9223d0_indent((*(_self_))._field_oc);
	_1ac921a2d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1ac85c606_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1ac860906_writeIdentTo(_1a7c4c7ed_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc93a350:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1bc93a691;
				};
			}
			_iter_next_1bc93a350:;
			++it;
			goto _iter_begin_1bc93a350;
		}
		_iter_end_1bc93a350:;
	};
	_1a7c573c9_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1bc93a691:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3451_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc93b708:;
		if (it != expr_end) {
			jule::I32 _4516_r = *it;
			{
				if ((_4516_r < 128LL)) {
					_1a7c57682_WriteByte(_3433_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4516_r)));
					goto _iter_next_1bc93b708;
				};
				_1a7c573c9_WriteStr(_3433_buf, _1a8ce4630_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4516_r)), 15LL));
			}
			_iter_next_1bc93b708:;
			++it;
			goto _iter_begin_1bc93b708;
		}
		_iter_end_1bc93b708:;
	};
}



inline void static__1ac860c9c_toOut(_1a7c4c7ed_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_1a7c57682_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_1a7c573c9_WriteStr(_6226_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6255_addr)), 15LL));
		_1a7c57682_WriteByte(_6226_buf, '_');
	};
	static__1ac860906_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1ac8611ed_toLocal(_1a7c4c7ed_StrBuilder* _7728_buf, jule::I64 _7745_row, jule::I64 _7755_col, jule::Str* _7766_ident) {
	_1a7c57682_WriteByte(_7728_buf, '_');
	_1a7c573c9_WriteStr(_7728_buf, _1a8ce48e9_Itoa(_7745_row));
	_1a7c573c9_WriteStr(_7728_buf, _1a8ce48e9_Itoa(_7755_col));
	_1a7c57682_WriteByte(_7728_buf, '_');
	static__1ac860906_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1ac8614d9_func(_1a7c4c7ed_StrBuilder* _8525_buf, jule::Ptr<_1ab1ce40d_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1bc488013:;
			{
				_1a7c573c9_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1bc488079:;
			{
				_1a7c573c9_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1ab1ceb17_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1bc488288:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_1a7c573c9_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1bc4ac246:;
	};
	static__1ac860c9c_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8543_f)))));
}



inline void static__1ac8617c5_funcIns(_1a7c4c7ed_StrBuilder* _10128_buf, jule::Ptr<_1ab1d2312_FnIns>* _10146_f) {
	if (_1ab1d3797_IsBuiltin((*(_10146_f)).ptr())) {
		_1a7c573c9_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_1a7c573c9_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*((*((*(_10146_f))))._field_Decl))._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1ac8614d9_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1ac860c9c_toOut(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_10146_f)))));
}



inline void static__1ac861ab1_traitDecl(_1a7c4c7ed_StrBuilder* _11630_buf, jule::Ptr<_1ab1e26da_Trait> _11647_t) {
	static__1ac860c9c_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11647_t)));
}



inline void static__1ac861d9c_param(_1a7c4c7ed_StrBuilder* _12026_buf, jule::Ptr<_1ab1cc939_Param>* _12044_p) {
	if ((_1ab185b9a_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1ab1858d1_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1ab1cd055_IsSelf((*(_12044_p)).ptr())) {
		_1a7c573c9_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1ac8611ed_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1ac8611ed_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1ac862188_structure(_1a7c4c7ed_StrBuilder* _13530_buf, jule::Ptr<_1ab1b9470_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1ac93e177_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1a7c573c9_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_1a7c573c9_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1ac860c9c_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_13548_s)))));
}



inline void static__1ac862474_structureIns(_1a7c4c7ed_StrBuilder* _14633_buf, jule::Ptr<_1ab1bc1ed_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1ac862188_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1ac860c9c_toOut(_14633_buf, (*((*((*(_14651_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14651_s)))));
}



inline void static__1ac862760_field(_1a7c4c7ed_StrBuilder* _15426_buf, jule::Ptr<_1ab1b657c_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_1a7c573c9_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_1a7c573c9_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1ac860906_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1ac862a4b_var(_1a7c4c7ed_StrBuilder* _16424_buf, jule::Ptr<_1ab2853a4_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1bc4c4bed:;
			{
				_1a7c573c9_WriteStr(_16424_buf, (*(_16445_v))._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1bc4c4c64:;
			{
				_1a7c573c9_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1bc4c4cca:;
			{
				_1a7c573c9_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1bc4c4d41:;
			{
				_1a7c573c9_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1bc4c5748:;
			{
				_1a7c573c9_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1a7c573c9_WriteStr(_16424_buf, _1a8ce48e9_Itoa((*(_16445_v))._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1bc4c57ae:;
			{
				static__1ac8611ed_toLocal(_16424_buf, (*((*(_16445_v))._field_Token))._field_Row, (*((*(_16445_v))._field_Token))._field_Column, &((*(_16445_v))._field_Ident));
			}
		}
		else {
			_case_begin_1bc4c4b87:;
			{
				static__1ac860c9c_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_16445_v)));
			}
		}
		_match_end_1bc4c4abb:;
	};
}



inline void static__1ac862d37_iterBegin(_1a7c4c7ed_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_1a7c573c9_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_1a7c573c9_WriteStr(_18630_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18647_it)), 15LL));
}



inline void static__1ac863123_iterEnd(_1a7c4c7ed_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_1a7c573c9_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_1a7c573c9_WriteStr(_19128_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19145_it)), 15LL));
}



inline void static__1ac86340e_iterNext(_1a7c4c7ed_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_1a7c573c9_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_1a7c573c9_WriteStr(_19629_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19646_it)), 15LL));
}



inline void static__1ac8636ea_label(_1a7c4c7ed_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_1a7c573c9_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_1a7c573c9_WriteStr(_20126_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20143_u)), 15LL));
}



inline void static__1ac8639d6_matchEnd(_1a7c4c7ed_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_1a7c573c9_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_1a7c573c9_WriteStr(_20629_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20646_m)), 15LL));
}



inline void static__1ac863cc2_caseBegin(_1a7c4c7ed_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_1a7c573c9_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_1a7c573c9_WriteStr(_21130_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21147_c)), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8603c8_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac91e861_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac91ee38_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac920312_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac930d6c_Str(_1ac9309e8_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ac9311ad_Equal(jule::Ptr<_1ac9309e8_customType> _self_, jule::Ptr<_1ab2e6525_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9309e8_customType _Src) {
	_Stream << _1ac930d6c_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ac9315dc_typeCoder> static__1ac931b2b_new(jule::Ptr<_1ac921379_ObjectCoder>* _6624_oc) {
	jule::Ptr<_1ac9315dc_typeCoder> _6713_tc = jule::new_ptr<_1ac9315dc_typeCoder>(_1ac9315dc_typeCoder{._field_oc=(*(_6624_oc)), });;
	(*(_6713_tc))._field_rc=static__1ac939e86_new(&(_6713_tc));
	return _6713_tc;;
}



inline void _1ac931e8e_toType(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _7330_buf, jule::Str _7351_id) {
	if ((!_7351_id.equal("uintptr", 7))) {
		_7351_id=_1a8ce6a94_RealKindOf(_7351_id);
	};
	_1a7c573c9_WriteStr(_7330_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7351_id[0LL]) && (_7351_id[0LL] <= 122LLU))) {
		_1a7c57682_WriteByte(_7330_buf, static_cast<jule::U8>((_7351_id[0LL] - 32LLU)));
	} else {
		_1a7c57682_WriteByte(_7330_buf, _7351_id[0LL]);
	};
	_1a7c573c9_WriteStr(_7330_buf, _7351_id.slice(1LL));
}



inline void _1ac932302_prim(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _8728_buf, jule::Ptr<_1ab2ee0ee_Prim> _8745_p) {
	_1ac931e8e_toType(_self_, _8728_buf, (*(_8745_p))._field_Kind);
}



inline void _1ac932665_tuple(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _9229_buf, jule::Ptr<_1ab3041e2_Tuple> _9250_t) {
	_1a7c573c9_WriteStr(_9229_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9250_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbb8d1a:;
		if (it != expr_end) {
			jule::I64 _9414_i = it - expr->begin();
			jule::Ptr<_1ab2e6525_TypeKind> _9421_tk = *it;
			{
				_1ac936ea5_kind(_self_, _9229_buf, _9421_tk);
				if ((((*(_9250_t))._field_Types.len() - _9414_i) > 1LL)) {
					_1a7c57682_WriteByte(_9229_buf, ',');
				};
			}
			_iter_next_1bcbb8d1a:;
			++it;
			_9414_i++;
			goto _iter_begin_1bcbb8d1a;
		}
		_iter_end_1bcbb8d1a:;
	};
	_1a7c57682_WriteByte(_9229_buf, '>');
}



inline void _1ac9329c8_asSptr(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _10430_buf, jule::Slice<jule::U8> _10447_elem) {
	_1a7c573c9_WriteStr(_10430_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a7c57121_Write(_10430_buf, _10447_elem);
	_1a7c57682_WriteByte(_10430_buf, '>');
}



inline void _1ac932d3b_sptr(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _11128_buf, jule::Ptr<_1ab302b2a_Sptr> _11149_sptr) {
	_1a7c573c9_WriteStr(_11128_buf, jule::Str::lit("jule::Ptr<", 10));
	_1ac936ea5_kind(_self_, _11128_buf, (*(_11149_sptr))._field_Elem);
	_1a7c57682_WriteByte(_11128_buf, '>');
}



inline void _1ac93319e_ptr(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _11827_buf, jule::Ptr<_1ab3063e2_Ptr> _11848_p) {
	;
	if (_1ab306e2b_IsUnsafe(_11848_p.ptr())) {
		_1a7c573c9_WriteStr(_11827_buf, jule::Str::lit("void*", 5));
	} else {
		_1ac936ea5_kind(_self_, _11827_buf, (*(_11848_p))._field_Elem);
		_1a7c573c9_WriteStr(_11827_buf, jule::Str::lit("*", 1));
	};
}



inline void _1ac933512_enumDecl(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _12932_buf, jule::Ptr<_1ab1e4de6_Enum> _12953_e) {
	_1ac936ea5_kind(_self_, _12932_buf, (*((*(_12953_e))._field_Kind))._field_Kind);
}



inline void _1ac933875_typeEnumDecl(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _13436_buf, jule::Ptr<_1ab1e6601_TypeEnum> _13457_e) {
	_1a7c573c9_WriteStr(_13436_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1ac933bd8_asSlice(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _13831_buf, jule::Ptr<_1ab2e6525_TypeKind> _13852_elem) {
	_1a7c573c9_WriteStr(_13831_buf, jule::Str::lit("jule::Slice<", 12));
	_1ac936ea5_kind(_self_, _13831_buf, _13852_elem);
	_1a7c57682_WriteByte(_13831_buf, '>');
}



inline void _1ac93404b_slice(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _14529_buf, jule::Ptr<_1ab3035ed_Slc> _14550_s) {
	_1ac933bd8_asSlice(_self_, _14529_buf, (*(_14550_s))._field_Elem);
}



inline void _1ac9343ae_mapType(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _15031_buf, jule::Ptr<_1ab304c92_Map> _15052_m) {
	_1a7c573c9_WriteStr(_15031_buf, jule::Str::lit("jule::Map<", 10));
	_1ac936ea5_kind(_self_, _15031_buf, (*(_15052_m))._field_Key);
	_1a7c57682_WriteByte(_15031_buf, ',');
	_1ac936ea5_kind(_self_, _15031_buf, (*(_15052_m))._field_Val);
	_1a7c57682_WriteByte(_15031_buf, '>');
}



inline void _1ac934a85_traitDecl(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _16533_buf, jule::Ptr<_1ab1e26da_Trait> _16550_t) {
	_1a7c573c9_WriteStr(_16533_buf, jule::Str::lit("jule::Trait<", 12));
	static__1ac861ab1_traitDecl(_16533_buf, _16550_t);
	_1a7c57682_WriteByte(_16533_buf, '>');
}



inline void _1ac934de8_structure(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _17233_buf, jule::Ptr<_1ab1b9470_Struct> _17250_s) {
	static__1ac862188_structure(_17233_buf, &(_17250_s));
}



inline void _1ac93525b_structureIns(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _17736_buf, jule::Ptr<_1ab1bc1ed_StructIns> _17757_s) {
	if ((!((*((*(_17757_s))._field_Decl))._field_Binded))) {
		static__1ac862474_structureIns(_17736_buf, &(_17757_s));
		return;;
	};
	jule::Ptr<_1ab19798c_Directive> _1829_d = _1ac93dcae_findDirective(&((*((*(_17757_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1829_d != nullptr)) {
		_1a7c57121_Write(_17736_buf, _1ac92d8c5_concatAllParts((*(_1829_d))._field_Args));
		_1a7c573c9_WriteStr(_17736_buf, jule::Str::lit("::", 2));
	};
	static__1ac862474_structureIns(_17736_buf, &(_17757_s));
	if (((*(_17757_s))._field_Generics.len() > 0LL)) {
		_1a7c57682_WriteByte(_17736_buf, '<');
		{
			auto expr = &((*(_17757_s))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcbc8511:;
			if (it != expr_end) {
				jule::I64 _19018_i = it - expr->begin();
				jule::Ptr<_1ab2e4b3e_InsGeneric> _19025_g = *it;
				{
					_1ac936ea5_kind(_self_, _17736_buf, (*(_19025_g))._field_Kind);
					if ((((*(_17757_s))._field_Generics.len() - _19018_i) > 1LL)) {
						_1a7c57682_WriteByte(_17736_buf, ',');
					};
				}
				_iter_next_1bcbc8511:;
				++it;
				_19018_i++;
				goto _iter_begin_1bcbc8511;
			}
			_iter_end_1bcbc8511:;
		};
		_1a7c57682_WriteByte(_17736_buf, '>');
	};
}



inline void _1ac9355be_array(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _20129_buf, jule::Ptr<_1ab30591e_Arr> _20150_a) {
	_1a7c573c9_WriteStr(_20129_buf, jule::Str::lit("jule::Array<", 12));
	_1ac936ea5_kind(_self_, _20129_buf, (*(_20150_a))._field_Elem);
	_1a7c57682_WriteByte(_20129_buf, ',');
	_1a7c573c9_WriteStr(_20129_buf, _1a8ce48e9_Itoa((*(_20150_a))._field_N));
	_1a7c57682_WriteByte(_20129_buf, '>');
}



inline void _1ac935c95_paramIns(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _22432_buf, jule::Ptr<_1ab1d1366_ParamIns>* _22454_p) {
	if ((*((*((*(_22454_p))))._field_Decl))._field_Variadic) {
		_1a7c573c9_WriteStr(_22432_buf, jule::Str::lit("jule::Slice<", 12));
		_1ac936ea5_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
		_1a7c57682_WriteByte(_22432_buf, '>');
	} else {
		_1ac936ea5_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
	};
	if ((*((*((*(_22454_p))))._field_Decl))._field_Reference) {
		_1a7c57682_WriteByte(_22432_buf, '*');
	};
}



inline void _1ac93646b_funcInsResult(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _25637_s, jule::Ptr<_1ab1d2312_FnIns>* _25657_f) {
	if (_1ab1ce881_IsVoid((*((*(_25657_f))))._field_Decl.ptr())) {
		if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
			_1a7c573c9_WriteStr(_25637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1a7c573c9_WriteStr(_25637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_25657_f))))._field_Decl))._field_Exceptional) {
		_1a7c573c9_WriteStr(_25637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1ac93c043_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
		_1a7c57682_WriteByte(_25637_s, '>');
		return;;
	};
	_1ac93c043_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
}



inline void _1ac9367ce_anonFunc(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _27432_buf, jule::Ptr<_1ab1d2312_FnIns> _27453_f) {
	if ((((*(_27453_f))._field_Result != nullptr) && (_1ab2ea99c_Tup((*(_27453_f))._field_Result.ptr()) != nullptr))) {
		_1ac922d1a_pushResultIns((*(_self_))._field_oc, &(_27453_f));
	};
	_1ac93646b_funcInsResult(_self_, _27432_buf, &(_27453_f));
	_1a7c57682_WriteByte(_27432_buf, '(');
	if (((*(_27453_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_27453_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcbd99ea:;
			if (it != expr_end) {
				jule::I64 _28118_i = it - expr->begin();
				jule::Ptr<_1ab1d1366_ParamIns> _28125_param = *it;
				{
					if (_1ab1cd055_IsSelf((*(_28125_param))._field_Decl.ptr())) {
						goto _iter_next_1bcbd99ea;
					};
					_1ac935c95_paramIns(_self_, _27432_buf, &(_28125_param));
					if ((((*(_27453_f))._field_Params.len() - _28118_i) > 1LL)) {
						_1a7c57682_WriteByte(_27432_buf, ',');
					};
				}
				_iter_next_1bcbd99ea:;
				++it;
				_28118_i++;
				goto _iter_begin_1bcbd99ea;
			}
			_iter_end_1bcbd99ea:;
		};
	} else {
		_1a7c573c9_WriteStr(_27432_buf, jule::Str::lit("void", 4));
	};
	_1a7c57682_WriteByte(_27432_buf, ')');
}



inline void _1ac936b42_func(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _29728_buf, jule::Ptr<_1ab1d2312_FnIns> _29749_f) {
	_1a7c573c9_WriteStr(_29728_buf, jule::Str::lit("jule::Fn<", 9));
	_1ac9367ce_anonFunc(_self_, _29728_buf, _29749_f);
	_1a7c57682_WriteByte(_29728_buf, '>');
}



inline void _1ac936ea5_kind(_1ac9315dc_typeCoder* _self_, _1a7c4c7ed_StrBuilder* _30428_buf, jule::Ptr<_1ab2e6525_TypeKind> _30449_k) {
	{
		
		if ((_1ab2ea1e9_Struct(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbddd1d:;
			{
				_1ac93525b_structureIns(_self_, _30428_buf, _1ab2ea1e9_Struct(_30449_k.ptr()));
				return;;
			}
		}
		else if (_1ab2e736c_Binded(_30449_k.ptr())) {
			_case_begin_1bcbddd95:;
			{
				_1a7c573c9_WriteStr(_30428_buf, (*(_30449_k))._field_BindIdent);
				return;;
			}
		}
		else if ((_1ab2e8b76_Prim(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbdde1c:;
			{
				_1ac932302_prim(_self_, _30428_buf, _1ab2e8b76_Prim(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2ea99c_Tup(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbdde94:;
			{
				_1ac932665_tuple(_self_, _30428_buf, _1ab2ea99c_Tup(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2e8e0c_Sptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde01b:;
			{
				_1ac932d3b_sptr(_self_, _30428_buf, _1ab2e8e0c_Sptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2e9193_Ptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde093:;
			{
				_1ac93319e_ptr(_self_, _30428_buf, _1ab2e9193_Ptr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2e9429_Enum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde11a:;
			{
				_1ac933512_enumDecl(_self_, _30428_buf, _1ab2e9429_Enum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2e96b0_TypeEnum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde192:;
			{
				_1ac933875_typeEnumDecl(_self_, _30428_buf, _1ab2e96b0_TypeEnum(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2e9bcc_Slc(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde219:;
			{
				_1ac93404b_slice(_self_, _30428_buf, _1ab2e9bcc_Slc(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2ea716_Map(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde291:;
			{
				_1ac9343ae_mapType(_self_, _30428_buf, _1ab2ea716_Map(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2ea480_Trait(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde318:;
			{
				_1ac934a85_traitDecl(_self_, _30428_buf, _1ab2ea480_Trait(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2e9946_Arr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde390:;
			{
				_1ac9355be_array(_self_, _30428_buf, _1ab2e9946_Arr(_30449_k.ptr()));
				return;;
			}
		}
		else if ((_1ab2e9e63_Fn(_30449_k.ptr()) != nullptr)) {
			_case_begin_1bcbde417:;
			{
				_1ac936b42_func(_self_, _30428_buf, _1ab2e9e63_Fn(_30449_k.ptr()));
				return;;
			}
		}
		_match_end_1bcbddb42:;
	};
	{
		auto &_match_expr{ (*(_30449_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1bcbde4c2:;
			{
				_1a7c573c9_WriteStr(_30428_buf, (*((*(_30449_k))._field_Kind.cast_ptr<_1ac9309e8_customType>(27)))._field_kind);
			}
		}
		else {
			_case_begin_1bcbe7c06:;
			{
				_1a7c573c9_WriteStr(_30428_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1bcbe7ba1:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9315dc_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac9399ad_resultCoder> static__1ac939e86_new(jule::Ptr<_1ac9315dc_typeCoder>* _37124_tc) {
	return jule::new_ptr<_1ac9399ad_resultCoder>(_1ac9399ad_resultCoder{._field_tc=(*(_37124_tc))});;
}



inline void _1ac93a2e9_ptr(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _37527_s, jule::Ptr<_1ab3063e2_Ptr> _37546_p) {
	_1a7c573c9_WriteStr(_37527_s, jule::Str::lit("p", 1));
	_1ac93bbd0_codeMut(_self_, _37527_s, &((*(_37546_p))._field_Elem));
}



inline void _1ac93a65c_sptr(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _38028_s, jule::Ptr<_1ab302b2a_Sptr> _38047_p) {
	_1a7c573c9_WriteStr(_38028_s, jule::Str::lit("x", 1));
	_1ac93bbd0_codeMut(_self_, _38028_s, &((*(_38047_p))._field_Elem));
}



inline void _1ac93a9c0_mapType(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _38531_s, jule::Ptr<_1ab304c92_Map> _38550_p) {
	_1a7c573c9_WriteStr(_38531_s, jule::Str::lit("m", 1));
	_1ac93bbd0_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Key));
	_1ac93bbd0_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Val));
}



inline void _1ac93ad33_slice(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _39129_s, jule::Ptr<_1ab3035ed_Slc> _39148_slc) {
	_1a7c573c9_WriteStr(_39129_s, jule::Str::lit("s", 1));
	_1ac93bbd0_codeMut(_self_, _39129_s, &((*(_39148_slc))._field_Elem));
}



inline void _1ac93b196_arr(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _39627_s, jule::Ptr<_1ab30591e_Arr> _39646_arr) {
	_1a7c573c9_WriteStr(_39627_s, jule::Str::lit("a", 1));
	_1a7c573c9_WriteStr(_39627_s, _1a8ce4630_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_39646_arr))._field_N)), 16LL));
	_1ac93bbd0_codeMut(_self_, _39627_s, &((*(_39646_arr))._field_Elem));
}



inline void _1ac93b509_func(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _40228_s, jule::Ptr<_1ab1d2312_FnIns> _40247_f) {
	_1a7c573c9_WriteStr(_40228_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40247_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc003a1:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d1366_ParamIns> _40421_p = *it;
			{
				if ((*((*(_40421_p))._field_Decl))._field_Reference) {
					_1a7c573c9_WriteStr(_40228_s, jule::Str::lit("r", 1));
				};
				_1ac93bbd0_codeMut(_self_, _40228_s, &((*(_40421_p))._field_Kind));
			}
			_iter_next_1bcc003a1:;
			++it;
			goto _iter_begin_1bcc003a1;
		}
		_iter_end_1bcc003a1:;
	};
	if (((*(_40247_f))._field_Result != nullptr)) {
		_1ac93bbd0_codeMut(_self_, _40228_s, &((*(_40247_f))._field_Result));
	};
}



inline void _1ac93b86c_tup(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _41527_s, jule::Ptr<_1ab3041e2_Tuple> _41546_tup) {
	{
		auto expr = &((*(_41546_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc02a46:;
		if (it != expr_end) {
			jule::Ptr<_1ab2e6525_TypeKind> _41621_t = *it;
			{
				_1a7c573c9_WriteStr(_41527_s, jule::Str::lit("__jule_tuple_", 13));
				_1ac93bbd0_codeMut(_self_, _41527_s, &(_41621_t));
			}
			_iter_next_1bcc02a46:;
			++it;
			goto _iter_begin_1bcc02a46;
		}
		_iter_end_1bcc02a46:;
	};
}



inline void _1ac93bbd0_codeMut(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _42231_s, jule::Ptr<_1ab2e6525_TypeKind>* _42251_t) {
	{
		auto &_match_expr{ (*((*(_42251_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1bcc03cab:;
			{
				_1ac93a2e9_ptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab3063e2_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1bcc04174:;
			{
				_1ac93a65c_sptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab302b2a_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1bcc041da:;
			{
				_1ac93a9c0_mapType(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab304c92_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1bcc04251:;
			{
				_1ac93ad33_slice(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab3035ed_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1bcc042c8:;
			{
				_1ac93b196_arr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab30591e_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1bcc0475c:;
			{
				_1ac93b509_func(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab1d2312_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1bcc047d4:;
			{
				jule::Ptr<_1ab1e4de6_Enum> _43713_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab1e4de6_Enum>(3);;
				static__1ac860c9c_toOut(_42231_s, (*(_43713_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43713_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bcc0485b:;
			{
				jule::Ptr<_1ab1e6601_TypeEnum> _44013_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab1e6601_TypeEnum>(4);;
				static__1ac860c9c_toOut(_42231_s, (*(_44013_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44013_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1bcc048d3:;
			{
				jule::Ptr<_1ab1bc1ed_StructIns> _44317_si = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab1bc1ed_StructIns>(0);;
				static__1ac862474_structureIns(_42231_s, &(_44317_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1bcc0495a:;
			{
				jule::Ptr<_1ab1e26da_Trait> _44617_trt = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab1e26da_Trait>(2);;
				static__1ac861ab1_traitDecl(_42231_s, _44617_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1bcc049d2:;
			{
				_1a7c573c9_WriteStr(_42231_s, (*((*((*(_42251_t))))._field_Kind.cast_ptr<_1ab2ee0ee_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1bcc04a59:;
			{
				_1ac93b86c_tup(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ab3041e2_Tuple>(23));
			}
		}
		else {
			_case_begin_1bcc0410d:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:453:13"));;
			}
		}
		_match_end_1bcc040a8:;
	};
}



inline void _1ac93c043_codeMut1(_1ac9399ad_resultCoder* _self_, _1a7c4c7ed_StrBuilder* _45732_s, jule::Ptr<_1ab2e6525_TypeKind>* _45752_t) {
	jule::Ptr<_1ab3041e2_Tuple> _45813_tup = _1ab2ea99c_Tup((*(_45752_t)).ptr());;
	if ((_45813_tup != nullptr)) {
		_1ac93b86c_tup(_self_, _45732_s, _45813_tup);
	} else {
		_1ac936ea5_kind((*(_self_))._field_tc.ptr(), _45732_s, (*(_45752_t)));
	};
}



inline jule::Slice<jule::U8> _1ac93c351_code(_1ac9399ad_resultCoder* _self_, jule::Ptr<_1ab2e6525_TypeKind>* _46628_t) {
	_1a7c4c7ed_StrBuilder _46713_s = static__1a7c4cb1c_New(20LL);;
	_1ac93bbd0_codeMut(_self_, &(_46713_s), _46628_t);
	return _1a7c58672_Buf(&_46713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9399ad_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bcc104b0_Name(_1bcc10669_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc10955_What(_1bcc10669_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc10a98_Reset(_1bcc10669_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc10bdb_Short(_1bcc10669_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc10669_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bcc13b12_Name(_1bcc13eca_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc13c55_What(_1bcc13eca_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc142b6_Reset(_1bcc13eca_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc14409_Short(_1bcc13eca_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc13eca_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bcc1730d_Name(_1bcc176c6_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc17451_What(_1bcc176c6_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc179b2_Reset(_1bcc176c6_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc17b05_Short(_1bcc176c6_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc176c6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bcc1aa4d_Name(_1bcc1ae16_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc1ab91_What(_1bcc1ae16_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc1b202_Reset(_1bcc1ae16_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc1b345_Short(_1bcc1ae16_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc1ae16_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bcc1e249_Name(_1bcc1e612_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc1e38c_What(_1bcc1e612_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc1e8ed_Reset(_1bcc1e612_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc1ea41_Short(_1bcc1e612_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc1e612_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac9a552e_FlagSet> static__1ac9a581a_New(void) {
	return jule::new_ptr<_1ac9a552e_FlagSet>(_1ac9a552e_FlagSet{._field_flags=jule::Slice<jule::Trait<_1ac9a397d_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1ac9a397d_CommonFlag> _1ac9a5c8d_FindFlag(_1ac9a552e_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc28d9c:;
		if (it != expr_end) {
			jule::Trait<_1ac9a397d_CommonFlag> _7221_flag = *it;
			{
				if ((_1ac9a397d_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ac972a18_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1bcc28d9c:;
			++it;
			goto _iter_begin_1bcc28d9c;
		}
		_iter_end_1bcc28d9c:;
	};
	return nullptr;;
}



inline jule::Trait<_1ac9a397d_CommonFlag> _1ac9a60ce_FindFlagShort(_1ac9a552e_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc2a6a6:;
		if (it != expr_end) {
			jule::Trait<_1ac9a397d_CommonFlag> _8221_flag = *it;
			{
				if ((_1ac9a397d_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ac972bb1_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1bcc2a6a6:;
			++it;
			goto _iter_begin_1bcc2a6a6;
		}
		_iter_end_1bcc2a6a6:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ac9a66a6_Parse(_1ac9a552e_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1ac9a7eb0_argParser _11613_ap = _1ac9a7eb0_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1ac9a94ab_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_1bcc1e612_Flag> _1bcc8e682_addFlagCommon(_1ac9a552e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1ac9a5c8d_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1ac9a60ce_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1bcc1e612_Flag> _14013_flag = jule::new_ptr<_1bcc1e612_Flag>(_1bcc1e612_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1ac9a397d_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1ac9a397d_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1bcc1ae16_Flag> _1bcc96678_addFlagCommon(_1ac9a552e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1ac9a5c8d_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1ac9a60ce_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1bcc1ae16_Flag> _14013_flag = jule::new_ptr<_1bcc1ae16_Flag>(_1bcc1ae16_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1ac9a397d_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1ac9a397d_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _1bcc8c361_AddVar(_1ac9a552e_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1bcc1e612_Flag> _16813_flag = _1bcc8e682_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}

inline void _1bcc9439b_AddVar(_1ac9a552e_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1bcc1ae16_Flag> _16813_flag = _1bcc96678_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9a552e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1bcc325ae_parseInteger(_1ac9a7eb0_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1bcc35062:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a7c37497_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bcc355d4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a7c37497_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bcc353b4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a7c37497_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bcc3542a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1bcc34c32:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bcc34bbb:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bcc34b00:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bcc39e68_parseInteger(_1ac9a7eb0_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1bcc3c8c7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a7c37497_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bcc3ce49:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a7c37497_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bcc3cc29:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a7c37497_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bcc3cc90:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1bcc3c597:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bcc3c531:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bcc3c465:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ac9a87c9_getData(_1ac9a7eb0_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1ac9a8a4e_processFlag(_1ac9a7eb0_argParser* _self_, jule::Trait<_1ac9a397d_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bcc2e7cb:;
			{
				jule::Ptr<_1bcc1ae16_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1bcc1ae16_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*(_21217_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1bcc2e776:;
	};
	jule::Str _2179_data = _1ac9a87c9_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ac9a397d_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1ac972a18_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bcc316ac:;
			{
				jule::Ptr<_1bcc10669_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1bcc10669_Flag>(0);;
				jule::Bool _22527_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1bcc325ae_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _22565_s, jule::I64 _22573_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1a8cd2e37_ParseInt(_22565_s, _22573_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ac9a397d_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1ac972a18_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1bcc31723:;
			{
				jule::Ptr<_1bcc13eca_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1bcc13eca_Flag>(1);;
				jule::Bool _23328_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bcc39e68_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23366_s, jule::I64 _23374_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1a8cd2981_ParseUint(_23366_s, _23374_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ac9a397d_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1ac972a18_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1bcc31789:;
			{
				jule::Ptr<_1bcc176c6_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1bcc176c6_Flag>(2);;
				(*((*(_24017_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _1a8cd9878_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1ac9a397d_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1ac972a18_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bcc31800:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1bcc1e612_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_1bcc30d93:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ac9a8d07_singleDash(_1ac9a7eb0_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2539_rarg = static_cast<jule::Slice<jule::I32>>((*(_24930_arg))).slice(1LL);;
	{
		auto expr = &(_2539_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc44857:;
		if (it != expr_end) {
			jule::I32 *_25416_r = it;
			{
				jule::Trait<_1ac9a397d_CommonFlag> _25517_flag = _1ac9a60ce_FindFlagShort(&(*(_self_))._field_set, (*(_25416_r)));;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_25416_r)))), &__jule_any_type4));
				};
				({
					auto except = _1ac9a8a4e_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1bcc44857:;
			++it;
			goto _iter_begin_1bcc44857;
		}
		_iter_end_1bcc44857:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ac9a90b0_doubleDash(_1ac9a7eb0_argParser* _self_, jule::Str* _26430_arg) {
	if (((*(_26430_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1ac9a397d_CommonFlag> _26813_flag = _1ac9a5c8d_FindFlag(&(*(_self_))._field_set, (*(_26430_arg)).slice(2LL));;
	if ((_26813_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1ac9a8a4e_processFlag(_self_, &(_26813_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ac9a92ad_tryArg(_1ac9a7eb0_argParser* _self_) {
	jule::Str _2769_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2769_arg[0LL] == '-')) {
		if (((_2769_arg.len() > 1LL) && (_2769_arg[1LL] == '-'))) {
			({
				auto except = _1ac9a90b0_doubleDash(_self_, &(_2769_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ac9a8d07_singleDash(_self_, &(_2769_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2769_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ac9a94ab_parse(_1ac9a7eb0_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1ac9a92ad_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1bcc4b3b9:;
	}
	_iter_end_1bcc4b3b9:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9a7eb0_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac921379_ObjectCoder> static__1ac921775_New(jule::Ptr<_1abd36b36_IR>* _9424_ir, _1ac91e861_SerializationInfo _9433_info) {
	jule::Ptr<_1ac921379_ObjectCoder> _9513_oc = jule::new_ptr<_1ac921379_ObjectCoder>(_1ac921379_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	(*(_9513_oc))._field_ec=static__1ac84737c_new(&(_9513_oc));
	(*(_9513_oc))._field_sc=static__1ac83d450_new(&(_9513_oc));
	(*(_9513_oc))._field_tc=static__1ac931b2b_new(&(_9513_oc));
	return _9513_oc;;
}



inline void _1ac921a2d_write(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Str _10525_s) {
	_1a7c573c9_WriteStr(&(*(_self_))._field_Buf, _10525_s);
}



inline void _1ac921cd6_writeBytes(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Slice<jule::U8> _10930_b) {
	_1a7c57121_Write(&(*(_self_))._field_Buf, _10930_b);
}



inline void _1ac921ed4_addIndent(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1ac9221d2_doneIndent(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1ac9223d0_indent(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1a7c57121_Write(&(*(_self_))._field_Buf, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1ac922721_findAnyType(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab2e6525_TypeKind>* _12836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4ea1a7:;
		if (it != expr_end) {
			jule::I64 _12914_i = it - expr->begin();
			jule::Ptr<_1ab2e6525_TypeKind> _12921_at = *it;
			{
				if (_1ab2e6c2e_Equal(_12921_at, (*(_12836_t)))) {
					return _12914_i;;
				};
			}
			_iter_next_1bc4ea1a7:;
			++it;
			_12914_i++;
			goto _iter_begin_1bc4ea1a7;
		}
		_iter_end_1bc4ea1a7:;
	};
	return -1LL;;
}



inline jule::I64 _1ac922a62_pushAnyType(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab2e6525_TypeKind> _13735_t) {
	if ((_1ab2e9429_Enum(_13735_t.ptr()) != nullptr)) {
		_13735_t=(*((*(_1ab2e9429_Enum(_13735_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _14113_i = _1ac922721_findAnyType(_self_, &(_13735_t));;
	if ((_14113_i != -1LL)) {
		return _14113_i;;
	};
	_14113_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13735_t); };
	jule::Str _1479_si = _1a8ce48e9_Itoa(_14113_i);;
	if ((_1ab2e8e0c_Sptr(_13735_t.ptr()) != nullptr)) {
		_1a7c4c7ed_StrBuilder _14917_elemKind = static__1a7c4cb1c_New(40LL);;
		_1ac936ea5_kind((*(_self_))._field_tc.ptr(), &(_14917_elemKind), (*(_1ab2e8e0c_Sptr(_13735_t.ptr())))._field_Elem);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1a7c57121_Write(&(*(_self_))._field_anyObj, _1a7c58672_Buf(&_14917_elemKind));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1ac9329c8_asSptr((*(_self_))._field_tc.ptr(), &((*(_self_))._field_anyObj), _1a7c58672_Buf(&_14917_elemKind));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17613_comparable = _1ab2e7b20_Comparable(_13735_t.ptr());;
		_1a7c4c7ed_StrBuilder _17717_kindB = static__1a7c4cb1c_New(40LL);;
		_1ac936ea5_kind((*(_self_))._field_tc.ptr(), &(_17717_kindB), _13735_t);
		jule::Slice<jule::U8> _17913_kind = _1a7c58672_Buf(&_17717_kindB);;
		if (_1d785a51e_BytesStr(_17913_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1ab2e68dd_Str(_13735_t.ptr()));
		};
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1a7c57121_Write(&(*(_self_))._field_anyObj, _17913_kind);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17613_comparable) {
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1a7c57121_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_1a7c57121_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1ab2e9193_Ptr(_13735_t.ptr()) == nullptr)) {
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_1a7c57121_Write(&(*(_self_))._field_anyObj, _17913_kind);
		} else {
			_1a7c57121_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17613_comparable) {
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17613_comparable) {
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1a7c57121_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _14113_i;;
}



inline void _1ac922d1a_pushResultIns(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1d2312_FnIns>* _24738_f) {
	jule::Str _2489_s = static_cast<jule::Str>(_1ac93c351_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24738_f))))._field_Result)));;
	jule::Bool _24912_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2489_s, nullptr, &(_24912_ok));
	if (_24912_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2489_s]=false;
	_1a7c573c9_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_1a7c573c9_WriteStr(&(*(_self_))._field_resultDecls, _2489_s);
	_1a7c573c9_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1ab2ea99c_Tup((*((*(_24738_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc51b0a7:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_1ab2e6525_TypeKind> _25721_t = *it;
			{
				_1a7c57682_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_1ac936ea5_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_resultDecls), _25721_t);
				_1a7c57682_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_1a7c573c9_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1a7c573c9_WriteStr(&(*(_self_))._field_resultDecls, _1a8ce48e9_Itoa(_25714_i));
				_1a7c573c9_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bc51b0a7:;
			++it;
			_25714_i++;
			goto _iter_begin_1bc51b0a7;
		}
		_iter_end_1bc51b0a7:;
	};
	_1a7c573c9_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1ac9230c3_pushResult(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1ce40d_Fn>* _26835_f) {
	if ((_1ab1ce881_IsVoid((*(_26835_f)).ptr()) || ((*((*((*(_26835_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27213_n = (*((*(_26835_f))))._field_Instances.len();;
	if (((*((*(_26835_f))))._field_Generics.len() == 0LL)) {
		_27213_n=1LL;
	};
	{
		auto expr = (*((*(_26835_f))))._field_Instances.slice(0LL, _27213_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc5212dd:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _27621_ins = *it;
			{
				_1ac922d1a_pushResultIns(_self_, &(_27621_ins));
			}
			_iter_next_1bc5212dd:;
			++it;
			goto _iter_begin_1bc5212dd;
		}
		_iter_end_1bc5212dd:;
	};
}



inline jule::I64 _1ac9234be_findTypeOffsetS(_1ac921379_ObjectCoder* _self_, jule::Ptr<_1ab1e26da_Trait> _28130_t, jule::Ptr<_1ab1bc1ed_StructIns> _28145_s) {
	if (((*(_28130_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5227c8:;
		if (it != expr_end) {
			jule::Ptr<_1ac91ee38_traitHash> *_28516_hash = it;
			{
				if ((((*((*(_28516_hash))))._field_t == _28130_t) && ((*((*(_28516_hash))))._field_s == _28145_s))) {
					return (*((*(_28516_hash))))._field_i;;
				};
			}
			_iter_next_1bc5227c8:;
			++it;
			goto _iter_begin_1bc5227c8;
		}
		_iter_end_1bc5227c8:;
	};
	return -1LL;;
}



inline jule::I64 _1ac9238ba_findTypeOffset(_1ac921379_ObjectCoder* _self_, jule::Ptr<_1ab1e26da_Trait> _29329_t, jule::Ptr<_1ab2e6525_TypeKind> _29344_k) {
	if (((*(_29329_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _29717_s = nullptr;;
	if ((_1ab2e8e0c_Sptr(_29344_k.ptr()) != nullptr)) {
		_29344_k=(*(_1ab2e8e0c_Sptr(_29344_k.ptr())))._field_Elem;
	};
	_29717_s=_1ab2ea1e9_Struct(_29344_k.ptr());
	if ((_29717_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1ac9234be_findTypeOffsetS(_self_, _29329_t, _29717_s));;
}



inline void _1ac923c2d_pushAndWriteMaskMapper(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1e26da_Trait> _30846_t1, jule::Ptr<_1ab1e26da_Trait> _30862_t2) {
	_1a7c4c7ed_StrBuilder _30913_ident = static__1a7c4cb1c_New(32LL);;
	_1a7c573c9_WriteStr(&_30913_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1a7c573c9_WriteStr(&_30913_ident, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30862_t2))), 15LL));
	_1a7c573c9_WriteStr(&_30913_ident, jule::Str::lit("_to_", 4));
	_1a7c573c9_WriteStr(&_30913_ident, _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30846_t1))), 15LL));
	_1a7c57121_Write(&(*(_self_))._field_Buf, _1a7c58672_Buf(&_30913_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc527b41:;
		if (it != expr_end) {
			_1ac920312_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30846_t1) && (_31716_m._field_t2 == _30862_t2))) {
					return;;
				};
			}
			_iter_next_1bc527b41:;
			++it;
			goto _iter_begin_1bc527b41;
		}
		_iter_end_1bc527b41:;
	};
	{ jule::Slice<_1ac920312_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1ac920312_traitCast{._field_t1=_30846_t1, ._field_t2=_30862_t2}); };
	;
	_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_1a7c57682_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_1a7c57121_Write(&(*(_self_))._field_anyObj, _1a7c58672_Buf(&_30913_ident));
	_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30846_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc52b1b6:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &((*(_30862_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc52c2d8:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b9470_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &((*(_33621_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bc52d141:;
									if (it != expr_end) {
										jule::Ptr<_1ab1bc1ed_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34025_i1 = _1ac9234be_findTypeOffsetS(_self_.ptr(), _30846_t1, _33933_s1i);;
											jule::I64 _34125_i2 = _1ac9234be_findTypeOffsetS(_self_.ptr(), _30862_t2, _33933_s1i);;
											_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1a8ce48e9_Itoa(_34125_i2));
											_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1a8ce48e9_Itoa(_34025_i1));
											_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1bc52d141:;
										++it;
										goto _iter_begin_1bc52d141;
									}
									_iter_end_1bc52d141:;
								};
							};
						}
						_iter_next_1bc52c2d8:;
						++it;
						goto _iter_begin_1bc52c2d8;
					}
					_iter_end_1bc52c2d8:;
				};
			}
			_iter_next_1bc52b1b6:;
			++it;
			goto _iter_begin_1bc52b1b6;
		}
		_iter_end_1bc52b1b6:;
	};
	_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, _1a8ce48e9_Itoa(0LL));
	_1a7c573c9_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1ac923ed6_locInfo(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab182e72_Token>* _35728_t) {
	jule::Str *_35810_loc = &((*((*((*(_35728_t))))._field_File))._field_Path);;
	if (_1d72610e0_Production) {
		{
			
			if (_1a7c37497_HasPrefix((*(_35810_loc)), _1a7e1590b_PathStdlib)) {
				_case_begin_1bc5335a8:;
				{
					_1ac859dea_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1a7c5b664_Dir(_1a7e1590b_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1a7c37497_HasPrefix((*(_35810_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1bc53361e:;
				{
					_1ac859dea_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_1a7c5b664_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1bc533124:;
				{
					_1ac859dea_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
				}
			}
			_match_end_1bc533058:;
		};
	} else {
		_1ac859dea_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
	};
	_1ac921a2d_write(_self_, jule::Str::lit(":", 1));
	_1ac921a2d_write(_self_, _1a8ce48e9_Itoa((*((*(_35728_t))))._field_Row));
	_1ac921a2d_write(_self_, jule::Str::lit(":", 1));
	_1ac921a2d_write(_self_, _1a8ce48e9_Itoa((*((*(_35728_t))))._field_Column));
}



inline void _1ac9241d4_head(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac916dca_Time _3849_time = static__1ac917491_Now();;
	_1ac916704_AbsTime _3859_abs = _1ac918b79_Abs(&_3849_time);;
	_1ac921a2d_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1ac921a2d_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1ac921a2d_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
	_1ac921a2d_write(_self_, jule::Str::lit("// Date: ", 9));
	_1ac921a2d_write(_self_, _1a8ce4267_FmtUint(_3859_abs._field_Day, 10LL));
	_1ac921a2d_write(_self_, jule::Str::lit("/", 1));
	_1ac921a2d_write(_self_, _1a8ce4267_FmtUint(_3859_abs._field_Month, 10LL));
	_1ac921a2d_write(_self_, jule::Str::lit("/", 1));
	_1ac921a2d_write(_self_, _1a8ce4267_FmtUint(_3859_abs._field_Year, 10LL));
	_1ac921a2d_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ac921a2d_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1ac921a2d_write(_self_, jule::Str::lit(" ", 1));
	_1ac921a2d_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1d72610e0_Production) {
		_1ac921a2d_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1d726094c_RC))) {
		_1ac921a2d_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1d7260d26_Safety))) {
		_1ac921a2d_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ac9243d2_links(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1ac921a2d_write(_self_, _1a7e16225_PathApi);
	_1ac921a2d_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1ac9243d2_links(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc53ecac:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!((*(_42216_used))._field_Binded))) {
						_case_begin_1bc540a6b:;
						{
							goto _iter_next_1bc53ecac;
						}
					}
					else if (_1a7ce8514_IsStdHeaderPath((*(_42216_used))._field_Path)) {
						_case_begin_1bc540ae3:;
						{
							_1ac921a2d_write(_self_, jule::Str::lit("#include ", 9));
							_1ac921a2d_write(_self_, (*(_42216_used))._field_Path);
							_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1a7ce87de_IsValidHeaderExt(_1a7c5ac3a_Ext((*(_42216_used))._field_Path))) {
						_case_begin_1bc540b6a:;
						{
							_1ac921a2d_write(_self_, jule::Str::lit("#include \"", 10));
							_1ac921a2d_write(_self_, (*(_42216_used))._field_Path);
							_1ac921a2d_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1bc54094a:;
				};
			}
			_iter_next_1bc53ecac:;
			++it;
			goto _iter_begin_1bc53ecac;
		}
		_iter_end_1bc53ecac:;
	};
}



inline void _1ac92468a_prepareStructure(_1ac921379_ObjectCoder* _self_, jule::Ptr<_1ab1b9470_Struct>* _43840_s) {
	{
		auto expr = &((*((*(_43840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc542d04:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bc1ed_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &((*(_43921_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc544421:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _44025_m = *it;
						{
							if ((*(_44025_m))._field_Statically) {
								goto _iter_next_1bc544421;
							};
							{
								auto expr = &((*(_44025_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc5452ce:;
								if (it != expr_end) {
									jule::Ptr<_1ab1d2312_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1ab1d1366_ParamIns> _44525_p = (*(_44429_mins))._field_Params[0LL];;
										_1a7c4c7ed_StrBuilder _44625_kind = static__1a7c4cb1c_New(40LL);;
										_1ac936ea5_kind((*(_self_))._field_tc.ptr(), &(_44625_kind), (*(_44525_p))._field_Kind);
										if ((!(_1ab1cd2db_IsRef((*(_44525_p))._field_Decl.ptr())))) {
											_1a7c573c9_WriteStr(&_44625_kind, jule::Str::lit("*", 1));
										};
										_1a7c57682_WriteByte(&_44625_kind, 0LLU);
										(*(_44525_p))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ac9309e8_customType>(_1ac9309e8_customType{._field_kind=_1d785a7d8_StrFromBytes(_1a7c58672_Buf(&_44625_kind).slice(0LL, (_1a7c58155_Len(&_44625_kind) - 1LL)))}), 27)});
									}
									_iter_next_1bc5452ce:;
									++it;
									goto _iter_begin_1bc5452ce;
								}
								_iter_end_1bc5452ce:;
							};
						}
						_iter_next_1bc544421:;
						++it;
						goto _iter_begin_1bc544421;
					}
					_iter_end_1bc544421:;
				};
			}
			_iter_next_1bc542d04:;
			++it;
			goto _iter_begin_1bc542d04;
		}
		_iter_end_1bc542d04:;
	};
}



inline void _1ac924888_prepareStructures(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc54592d:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _46321_s = *it;
			{
				if (((*(_46321_s))._field_Token != nullptr)) {
					_1ac92468a_prepareStructure(_self_.ptr(), &(_46321_s));
				};
			}
			_iter_next_1bc54592d:;
			++it;
			goto _iter_begin_1bc54592d;
		}
		_iter_end_1bc54592d:;
	};
}



inline void _1ac924b41_iterPackages(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)> _47032_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc549558:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _47121_used = *it;
			{
				if ((!((*(_47121_used))._field_Binded))) {
					_47032_f(&((*(_47121_used))._field_Package));
				};
			}
			_iter_next_1bc549558:;
			++it;
			goto _iter_begin_1bc549558;
		}
		_iter_end_1bc549558:;
	};
	_47032_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1ac924d3e_buildTraitMap(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac924b41_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)>([=](jule::Ptr<_1ab2459c4_Package>* _48035_pkg) mutable -> void {
		_1ac92d5b7_iterFiles(_48035_pkg, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)>([=](jule::Ptr<_1ab2b0863_SymbolTable>* _48136_file) mutable -> void {
			{
				auto expr = &((*((*(_48136_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bc54da9b:;
				if (it != expr_end) {
					jule::Ptr<_1ab1e26da_Trait> _48229_t = *it;
					{
						if (((*(_48229_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_48229_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1ac91ee38_traitHash> _48729_hash = jule::new_ptr<_1ac91ee38_traitHash>(_1ac91ee38_traitHash{._field_t=_48229_t, ._field_s=nullptr, ._field_i=0LL});;
							_1a7c4c7ed_StrBuilder _49229_b = static__1a7c4cb1c_New(static_cast<jule::I64>((*(_48229_t))._field_Ident.len()));;
							static__1ac860906_writeIdentTo(&(_49229_b), &((*(_48229_t))._field_Ident));
							(*(_48729_hash))._field_ti=_1a7c57bc1_Str(&_49229_b);
							{ jule::Slice<jule::Ptr<_1ac91ee38_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48729_hash); };
							goto _iter_next_1bc54da9b;
						};
						jule::I64 _49825_i = 0LL;;
						{
							auto expr = &((*(_48229_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bc54e4b4:;
							if (it != expr_end) {
								jule::Ptr<_1ab1b9470_Struct> _49933_s = *it;
								{
									{
										auto expr = &((*(_49933_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bc553067:;
										if (it != expr_end) {
											jule::Ptr<_1ab1bc1ed_StructIns> _50037_ins = *it;
											{
												jule::Ptr<_1ac91ee38_traitHash> _50133_hash = jule::new_ptr<_1ac91ee38_traitHash>(_1ac91ee38_traitHash{._field_t=_48229_t, ._field_s=_50037_ins, ._field_i=_49825_i});;
												_1a7c4c7ed_StrBuilder _50633_b = static__1a7c4cb1c_New(static_cast<jule::I64>((*(_48229_t))._field_Ident.len()));;
												static__1ac860906_writeIdentTo(&(_50633_b), &((*(_48229_t))._field_Ident));
												(*(_50133_hash))._field_ti=_1a7c57bc1_Str(&_50633_b);
												{ jule::Slice<jule::Ptr<_1ac91ee38_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_50133_hash); };
												(_49825_i)++;
											}
											_iter_next_1bc553067:;
											++it;
											goto _iter_begin_1bc553067;
										}
										_iter_end_1bc553067:;
									};
								}
								_iter_next_1bc54e4b4:;
								++it;
								goto _iter_begin_1bc54e4b4;
							}
							_iter_end_1bc54e4b4:;
						};
						_1ac92e365_pushMethodsFromInherits(&(_48229_t), &(_48229_t));
					}
					_iter_next_1bc54da9b:;
					++it;
					goto _iter_begin_1bc54da9b;
				}
				_iter_end_1bc54da9b:;
			};
		}));
	}));
}



inline void _1ac92503c_traitDecls(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac924b41_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)>([=](jule::Ptr<_1ab2459c4_Package>* _52235_pkg) mutable -> void {
		_1ac92d5b7_iterFiles(_52235_pkg, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)>([=](jule::Ptr<_1ab2b0863_SymbolTable>* _52336_file) mutable -> void {
			{
				auto expr = &((*((*(_52336_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bc556c80:;
				if (it != expr_end) {
					jule::Ptr<_1ab1e26da_Trait> _52429_t = *it;
					{
						if (((*(_52429_t))._field_Token == nullptr)) {
							return;;
						};
						_1ac9223d0_indent(_self_);
						_1ac921a2d_write(_self_, jule::Str::lit("struct ", 7));
						static__1ac861ab1_traitDecl(&((*(_self_))._field_Buf), _52429_t);
						_1ac921a2d_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1bc556c80:;
					++it;
					goto _iter_begin_1bc556c80;
				}
				_iter_end_1bc556c80:;
			};
		}));
	}));
}



inline void _1ac9252e5_structurePlainDecl(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1b9470_Struct>* _53743_s) {
	{
		auto expr = &((*((*(_53743_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc54e3b5:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bc1ed_StructIns> _53821_ins = *it;
			{
				_1ac921a2d_write(_self_, jule::Str::lit("struct ", 7));
				static__1ac862474_structureIns(&((*(_self_))._field_Buf), &(_53821_ins));
				_1ac921a2d_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bc54e3b5:;
			++it;
			goto _iter_begin_1bc54e3b5;
		}
		_iter_end_1bc54e3b5:;
	};
}



inline void _1ac9254e3_structurePlainDecls(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc55905c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _54621_s = *it;
			{
				if (((*(_54621_s))._field_Token != nullptr)) {
					_1ac9252e5_structurePlainDecl(_self_, &(_54621_s));
				};
			}
			_iter_next_1bc55905c:;
			++it;
			goto _iter_begin_1bc55905c;
		}
		_iter_end_1bc55905c:;
	};
}



inline void _1ac92579b_fieldDecl(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1bb64d_FieldIns>* _55334_f) {
	_1ac936ea5_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_55334_f))))._field_Kind);
	_1ac921a2d_write(_self_, jule::Str::lit(" ", 1));
	static__1ac862760_field(&((*(_self_))._field_Buf), &((*((*(_55334_f))))._field_Decl));
	if (((*((*(_55334_f))))._field_Default == nullptr)) {
		if (_1ac93e441_shouldInitialized(&((*((*(_55334_f))))._field_Kind))) {
			_1ac921a2d_write(_self_, jule::Str::lit(" = ", 3));
			_1ac859438_initExpr((*(_self_))._field_ec, (*((*(_55334_f))))._field_Kind);
		};
	} else {
		_1ac921a2d_write(_self_, jule::Str::lit(" = ", 3));
		_1ac84a308_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_55334_f))))._field_Default))._field_Model);
	};
	_1ac921a2d_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ac925a54_structureDestructor(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _57144_s) {
	;
	jule::Ptr<_1ab1ce40d_Fn> _5749_disposeMethod = _1ab1bd265_FindMethod((*(_57144_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57513_disposed = static__1ab286806_Dispose(_5749_disposeMethod);;
	if ((!(_57513_disposed))) {
		return;;
	};
	_1ac921a2d_write(_self_, jule::Str::lit("~", 1));
	static__1ac862474_structureIns(&((*(_self_))._field_Buf), _57144_s);
	_1ac921a2d_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1ac8614d9_func(&((*(_self_))._field_Buf), &(_5749_disposeMethod));
	_1ac921a2d_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1ac925db7_structureOperatorEq(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Slice<jule::U8> _58739_ident, jule::Ptr<_1ab1bc1ed_StructIns>* _58759_s) {
	if ((!((*((*(_58759_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58759_s))))._field_Operators._field_Eq != nullptr)) {
		_1ac926648_structureOperator(_self_, _58739_ident, &((*((*(_58759_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1ac9223d0_indent(_self_);
	if (_1ab3ed709_Inline) {
		_1ac921a2d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ac921a2d_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1ac921cd6_writeBytes(_self_, _58739_ident);
	_1ac921a2d_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58759_s))))._field_Fields.len() > 0LL)) {
		_1ac921ed4_addIndent(_self_);
		_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
		_1ac9223d0_indent(_self_);
		_1ac921a2d_write(_self_, jule::Str::lit("return ", 7));
		_1ac921ed4_addIndent(_self_);
		jule::Bool _61017_writed = false;;
		{
			auto expr = &((*((*(_58759_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc56805a:;
			if (it != expr_end) {
				jule::Ptr<_1ab1bb64d_FieldIns> _61125_f = *it;
				{
					jule::Ptr<_1ab1bc1ed_StructIns> _61317_strct = _1ab2ea1e9_Struct((*(_61125_f))._field_Kind.ptr());;
					if ((((_61317_strct != nullptr) && ((*(_61317_strct))._field_Decl != nullptr)) && (*((*(_61317_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1bc56805a;
					};
					if (_61017_writed) {
						_1ac921a2d_write(_self_, jule::Str::lit(" &&", 3));
					};
					_61017_writed=true;
					_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
					_1ac9223d0_indent(_self_);
					_1ac921a2d_write(_self_, jule::Str::lit("this->", 6));
					_1a7c4c7ed_StrBuilder _62421_fIdent = static__1a7c4cb1c_New(static_cast<jule::I64>((*((*(_61125_f))._field_Decl))._field_Ident.len()));;
					static__1ac862760_field(&(_62421_fIdent), &((*(_61125_f))._field_Decl));
					_1ac921cd6_writeBytes(_self_, _1a7c58672_Buf(&_62421_fIdent));
					_1ac921a2d_write(_self_, jule::Str::lit(" == _other.", 11));
					_1ac921cd6_writeBytes(_self_, _1a7c58672_Buf(&_62421_fIdent));
				}
				_iter_next_1bc56805a:;
				++it;
				goto _iter_begin_1bc56805a;
			}
			_iter_end_1bc56805a:;
		};
		_1ac9221d2_doneIndent(_self_);
		if ((!(_61017_writed))) {
			_1ac921a2d_write(_self_, jule::Str::lit("true", 4));
		};
		_1ac921a2d_write(_self_, jule::Str::lit(";\n", 2));
		_1ac9221d2_doneIndent(_self_);
		_1ac9223d0_indent(_self_);
		_1ac921a2d_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ac921a2d_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ac92622a_structureOperatorNotEq(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Slice<jule::U8> _64442_ident, jule::Ptr<_1ab1bc1ed_StructIns>* _64462_s) {
	if ((!((*((*(_64462_s))))._field_Comparable))) {
		return;;
	};
	_1ac9223d0_indent(_self_);
	if (_1ab3ed709_Inline) {
		_1ac921a2d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ac921a2d_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1ac921cd6_writeBytes(_self_, _64442_ident);
	_1ac921a2d_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ac926648_structureOperator(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Slice<jule::U8> _65837_ident, jule::Ptr<_1ab1d2312_FnIns>* _65857_f, jule::Str _65868_op) {
	if (((*(_65857_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6639_unary = ((*((*(_65857_f))))._field_Params.len() == 1LL);;
	jule::Bool _6649_assignment = _1ab1ce881_IsVoid((*((*(_65857_f))))._field_Decl.ptr());;
	_1ac9223d0_indent(_self_);
	if (_1ab3ed709_Inline) {
		_1ac921a2d_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6649_assignment) {
		_1ac921cd6_writeBytes(_self_, _65837_ident);
		_1ac921a2d_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1ab2e8b76_Prim((*((*(_65857_f))))._field_Result.ptr()) == nullptr)) {
			_1ac921cd6_writeBytes(_self_, _65837_ident);
		} else {
			_1ac921a2d_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1ac921a2d_write(_self_, jule::Str::lit(" operator", 9));
	_1ac921a2d_write(_self_, _65868_op);
	_1ac921a2d_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6639_unary))) {
		jule::Ptr<_1ab1d1366_ParamIns> _68617_p = (*((*(_65857_f))))._field_Params[1LL];;
		_1ac935c95_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_68617_p));
		_1ac921a2d_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1ac921a2d_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6649_assignment))) {
		_1ac921a2d_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1ac8617c5_funcIns(&((*(_self_))._field_Buf), _65857_f);
	if ((!(_6639_unary))) {
		_1ac921a2d_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6649_assignment) {
			_1ac921a2d_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1ac921a2d_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ac921a2d_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ac926901_structureOperators(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _70743_s) {
	_1a7c4c7ed_StrBuilder _70813_sb = static__1a7c4cb1c_New(40LL);;
	static__1ac862474_structureIns(&(_70813_sb), _70743_s);
	jule::Slice<jule::U8> _7109_ident = _1a7c58672_Buf(&_70813_sb);;
	_1ac925db7_structureOperatorEq(_self_, _7109_ident, _70743_s);
	_1ac92622a_structureOperatorNotEq(_self_, _7109_ident, _70743_s);
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1ac926648_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1ac926ba9_structureInsDecl(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _74841_s) {
	{
		auto expr = &((*((*(_74841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc58b6aa:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _74921_m = *it;
			{
				if (_1ac92e8e8_isHeadDecl(&(_74921_m))) {
					_1ac928150_funcDecl(_self_, &(_74921_m), false);
				};
			}
			_iter_next_1bc58b6aa:;
			++it;
			goto _iter_begin_1bc58b6aa;
		}
		_iter_end_1bc58b6aa:;
	};
	_1ac921a2d_write(_self_, jule::Str::lit("struct ", 7));
	static__1ac862474_structureIns(&((*(_self_))._field_Buf), _74841_s);
	_1ac921a2d_write(_self_, jule::Str::lit(" {\n", 3));
	_1ac921ed4_addIndent(_self_);
	{
		auto expr = &((*((*(_74841_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc58d091:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bb64d_FieldIns> _76021_f = *it;
			{
				_1ac9223d0_indent(_self_);
				_1ac92579b_fieldDecl(_self_, &(_76021_f));
				_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1bc58d091:;
			++it;
			goto _iter_begin_1bc58d091;
		}
		_iter_end_1bc58d091:;
	};
	_1ac9223d0_indent(_self_);
	_1ac925a54_structureDestructor(_self_, _74841_s);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac926901_structureOperators(_self_, _74841_s);
	_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
	_1ac9221d2_doneIndent(_self_);
	_1ac9223d0_indent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("};", 2));
}



inline void _1ac926e62_structureDecl(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1b9470_Struct>* _77838_s) {
	{
		auto expr = &((*((*(_77838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc591ca9:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bc1ed_StructIns> _77921_ins = *it;
			{
				_1ac926ba9_structureInsDecl(_self_, &(_77921_ins));
			}
			_iter_next_1bc591ca9:;
			++it;
			goto _iter_begin_1bc591ca9;
		}
		_iter_end_1bc591ca9:;
	};
}



inline void _1ac927160_structureDecls(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc592617:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _78521_s = *it;
			{
				if (((*(_78521_s))._field_Token != nullptr)) {
					_1ac926e62_structureDecl(_self_, &(_78521_s));
					_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1bc592617:;
			++it;
			goto _iter_begin_1bc592617;
		}
		_iter_end_1bc592617:;
	};
}



inline void _1ac92735d_structureMethodDecls(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5935b3:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _79421_s = *it;
			{
				if (((*(_79421_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_79421_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc595609:;
						if (it != expr_end) {
							jule::Ptr<_1ab1bc1ed_StructIns> _79629_ins = *it;
							{
								{
									auto expr = &((*(_79629_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bc596055:;
									if (it != expr_end) {
										jule::Ptr<_1ab1ce40d_Fn> _79733_m = *it;
										{
											if ((!(_1ac92e8e8_isHeadDecl(&(_79733_m))))) {
												_1ac9230c3_pushResult(_self_, &(_79733_m));
												_1ac928150_funcDecl(_self_, &(_79733_m), false);
											};
										}
										_iter_next_1bc596055:;
										++it;
										goto _iter_begin_1bc596055;
									}
									_iter_end_1bc596055:;
								};
							}
							_iter_next_1bc595609:;
							++it;
							goto _iter_begin_1bc595609;
						}
						_iter_end_1bc595609:;
					};
				};
			}
			_iter_next_1bc5935b3:;
			++it;
			goto _iter_begin_1bc5935b3;
		}
		_iter_end_1bc5935b3:;
	};
}



inline void _1ac927616_paramsDecls(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>* _80936_params) {
	if (((*(_80936_params)).len() == 0LL)) {
		_1ac921a2d_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1ac921a2d_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80936_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc595d57:;
		if (it != expr_end) {
			jule::I64 _81614_i = it - expr->begin();
			jule::Ptr<_1ab1d1366_ParamIns> _81621_p = *it;
			{
				_1ac935c95_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_81621_p));
				if ((((*(_80936_params)).len() - _81614_i) > 1LL)) {
					_1ac921a2d_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bc595d57:;
			++it;
			_81614_i++;
			goto _iter_begin_1bc595d57;
		}
		_iter_end_1bc595d57:;
	};
	_1ac921a2d_write(_self_, jule::Str::lit(")", 1));
}



inline void _1ac927979_funcHead(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1d2312_FnIns>* _82633_f, jule::Bool _82644_ptr) {
	if ((((!(_82644_ptr)) && _1ab3ed709_Inline) && (!(_1ab1ced9d_IsEntryPoint((*((*(_82633_f))))._field_Decl.ptr()))))) {
		_1ac921a2d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ac93646b_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _82633_f);
	if (_82644_ptr) {
		_1ac921a2d_write(_self_, jule::Str::lit("(*", 2));
		static__1ac8617c5_funcIns(&((*(_self_))._field_Buf), _82633_f);
		_1ac921a2d_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1ac921a2d_write(_self_, jule::Str::lit(" ", 1));
		static__1ac8617c5_funcIns(&((*(_self_))._field_Buf), _82633_f);
	};
}



inline void _1ac927cdc_funcDeclIns(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1d2312_FnIns>* _84136_f, jule::Bool _84147_ptr) {
	_1ac9223d0_indent(_self_);
	_1ac927979_funcHead(_self_, _84136_f, _84147_ptr);
	_1ac927616_paramsDecls(_self_, &((*((*(_84136_f))))._field_Params));
	_1ac921a2d_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1ac928150_funcDecl(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1ce40d_Fn>* _84833_f, jule::Bool _84841_ptr) {
	{
		auto expr = &((*((*(_84833_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb32bb8:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _84921_c = *it;
			{
				_1ac927cdc_funcDeclIns(_self_, &(_84921_c), _84841_ptr);
			}
			_iter_next_1bcb32bb8:;
			++it;
			goto _iter_begin_1bcb32bb8;
		}
		_iter_end_1bcb32bb8:;
	};
}



inline void _1ac92856d_funcDeclTrait(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1e26da_Trait>* _85438_t, jule::Ptr<_1ab1ce40d_Fn>* _85454_f, jule::Bool _85462_ptr) {
	{
		auto expr = &((*((*(_85454_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb3404e:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _85521_c = *it;
			{
				jule::Ptr<_1ab2e6525_TypeKind> _85617_k = (*((*(_85521_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_85521_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_85438_t)), 2)});
				_1ac927cdc_funcDeclIns(_self_, &(_85521_c), _85462_ptr);
				(*((*(_85521_c))._field_Params[0LL]))._field_Kind=_85617_k;
			}
			_iter_next_1bcb3404e:;
			++it;
			goto _iter_begin_1bcb3404e;
		}
		_iter_end_1bcb3404e:;
	};
}



inline void _1ac92876b_funcDecls(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac924b41_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)>([=](jule::Ptr<_1ab2459c4_Package>* _86435_pkg) mutable -> void {
		_1ac92d5b7_iterFiles(_86435_pkg, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)>([=](jule::Ptr<_1ab2b0863_SymbolTable>* _86536_file) mutable -> void {
			{
				auto expr = &((*((*(_86536_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bcb38718:;
				if (it != expr_end) {
					jule::Ptr<_1ab1ce40d_Fn> _86629_f = *it;
					{
						if (((!((*(_86629_f))._field_Binded)) && ((*(_86629_f))._field_Token != nullptr))) {
							_1ac9230c3_pushResult(_self_, &(_86629_f));
							_1ac928150_funcDecl(_self_, &(_86629_f), false);
						};
					}
					_iter_next_1bcb38718:;
					++it;
					goto _iter_begin_1bcb38718;
				}
				_iter_end_1bcb38718:;
			};
		}));
	}));
}



inline void _1ac928ace_traitDataTypeMethods(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1e26da_Trait>* _87645_owner, jule::Ptr<_1ab1e26da_Trait>* _87665_t) {
	{
		auto expr = &((*((*(_87665_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb383b6:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _87721_m = *it;
			{
				jule::Ptr<_1ab1d2312_FnIns> _87817_ins = (*(_87721_m))._field_Instances[0LL];;
				jule::Ptr<_1ab1d1366_ParamIns> _87917_p = (*(_87817_ins))._field_Params[0LL];;
				(*(_87917_p))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_87665_t)), 2)});
				{
					auto expr = (*(_87817_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1bcb3c1ab:;
					if (it != expr_end) {
						jule::I64 _88318_i = it - expr.begin();
						jule::Ptr<_1ab1d1366_ParamIns> _88325_ip = *it;
						{
							if (_1ab185b9a_IsAnonIdent((*((*(_88325_ip))._field_Decl))._field_Ident)) {
								(*((*(_88325_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _1a8ce48e9_Itoa(_88318_i));
							};
						}
						_iter_next_1bcb3c1ab:;
						++it;
						_88318_i++;
						goto _iter_begin_1bcb3c1ab;
					}
					_iter_end_1bcb3c1ab:;
				};
				if ((!(_1d72610e0_Production))) {
					jule::Ptr<_1ab1d1366_ParamIns> _88921_lp = (*(_87817_ins))._field_Params[((*(_87817_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88921_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1bcb41996:;
							{
								goto _match_end_1bcb3ec2a;
							}
						}
						else {
							_case_begin_1bcb3ec80:;
							{
								{ jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>> &__jule_push_dest = (*(_87817_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1ab1d1366_ParamIns>(_1ab1d1366_ParamIns{._field_Decl=jule::new_ptr<_1ab1cc939_Param>(_1ab1cc939_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ac9309e8_customType>(_1ac9309e8_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1bcb3ec2a:;
					};
				};
				_1ac9230c3_pushResult(_self_, &(_87721_m));
				_1ac92856d_funcDeclTrait(_self_, _87645_owner, &(_87721_m), true);
			}
			_iter_next_1bcb383b6:;
			++it;
			goto _iter_begin_1bcb383b6;
		}
		_iter_end_1bcb383b6:;
	};
}



inline void _1ac928ccc_traitDataTypes(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac924b41_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)>([=](jule::Ptr<_1ab2459c4_Package>* _91235_pkg) mutable -> void {
		_1ac92d5b7_iterFiles(_91235_pkg, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)>([=](jule::Ptr<_1ab2b0863_SymbolTable>* _91336_file) mutable -> void {
			{
				auto expr = &((*((*(_91336_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bcb43921:;
				if (it != expr_end) {
					jule::Ptr<_1ab1e26da_Trait> _91429_t = *it;
					{
						if (((*(_91429_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_91429_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1bcb43921;
						};
						_1ac921a2d_write(_self_, jule::Str::lit("struct ", 7));
						static__1ac861ab1_traitDecl(&((*(_self_))._field_Buf), _91429_t);
						_1ac921a2d_write(_self_, jule::Str::lit("MptrData", 8));
						_1ac921a2d_write(_self_, jule::Str::lit(" {\n", 3));
						_1ac921ed4_addIndent(_self_);
						_1ac928ace_traitDataTypeMethods(_self_, &(_91429_t), &(_91429_t));
						_1ac9221d2_doneIndent(_self_);
						_1ac9223d0_indent(_self_);
						_1ac921a2d_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1bcb43921:;
					++it;
					goto _iter_begin_1bcb43921;
				}
				_iter_end_1bcb43921:;
			};
		}));
	}));
}



inline void _1ac929085_paramIns(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1d1366_ParamIns>* _93533_p) {
	_1ac935c95_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _93533_p);
	_1ac921a2d_write(_self_, jule::Str::lit(" ", 1));
	static__1ac861d9c_param(&((*(_self_))._field_Buf), &((*((*(_93533_p))))._field_Decl));
}



inline void _1ac92933d_paramsIns(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>* _94134_params) {
	if (((*(_94134_params)).len() == 0LL)) {
		_1ac921a2d_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1ac921a2d_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _94134_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb4878e:;
		if (it != expr_end) {
			jule::I64 _94714_i = it - expr->begin();
			jule::Ptr<_1ab1d1366_ParamIns> _94721_p = *it;
			{
				_1ac929085_paramIns(_self_, &(_94721_p));
				if ((((*(_94134_params)).len() - _94714_i) > 1LL)) {
					_1ac921a2d_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bcb4878e:;
			++it;
			_94714_i++;
			goto _iter_begin_1bcb4878e;
		}
		_iter_end_1bcb4878e:;
	};
	_1ac921a2d_write(_self_, jule::Str::lit(")", 1));
}



inline void _1ac9296a1_varInitExpr(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab2853a4_Var>* _95636_v, jule::Fn<void(void)> _95645_init) {
	if ((*((*(_95636_v))))._field_Statically) {
		_1ac921a2d_write(_self_, jule::Str::lit("static ", 7));
	};
	_1ac936ea5_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*((*(_95636_v))))._field_Kind))._field_Kind);
	_1ac921a2d_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95636_v))))._field_Reference) {
		_1ac921a2d_write(_self_, jule::Str::lit("*", 1));
	};
	static__1ac862a4b_var(&((*(_self_))._field_Buf), (*(_95636_v)));
	if ((_95645_init != nullptr)) {
		_1ac921a2d_write(_self_, jule::Str::lit(" = ", 3));
		_95645_init();
	};
	_1ac921a2d_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ac929959_var(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab2853a4_Var> _97427_v) {
	if (_1ab1858d1_IsIgnoreIdent((*(_97427_v))._field_Ident)) {
		return;;
	};
	if ((((*(_97427_v))._field_Value != nullptr) && ((*((*(_97427_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_97427_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_97427_v))._field_Reference) {
				_1ac9296a1_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ac921a2d_write(_self_, jule::Str::lit("&(", 2));
					_1ac859180_model((*(_self_))._field_ec, (*((*((*(_97427_v))._field_Value))._field_Data))._field_Model);
					_1ac921a2d_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1ac9296a1_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ac84a308_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_97427_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1ac9296a1_varInitExpr(_self_, &(_97427_v), nullptr);
		return;;
	};
	if ((*(_97427_v))._field_Reference) {
		_1ac9296a1_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac921a2d_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1ac93e441_shouldInitialized(&((*((*(_97427_v))._field_Kind))._field_Kind))) {
		_1ac9296a1_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ac859438_initExpr((*(_self_))._field_ec, (*((*(_97427_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1ac9296a1_varInitExpr(_self_, &(_97427_v), nullptr);
}



inline void _1ac929c12_funcIns(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1d2312_FnIns>* _100532_f) {
	_1ac927979_funcHead(_self_, _100532_f, false);
	_1ac92933d_paramsIns(_self_, &((*((*(_100532_f))))._field_Params));
	_1ac921a2d_write(_self_, jule::Str::lit(" ", 1));
	_1ac8440c1_funcScope((*(_self_))._field_sc, (*(_100532_f)));
	if (((*((*(_100532_f))))._field_Scope != nullptr)) {
		_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ac929eba_func(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1ce40d_Fn>* _101529_f) {
	{
		auto expr = &((*((*(_101529_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb5a927:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _101621_ins = *it;
			{
				_1ac929c12_funcIns(_self_, &(_101621_ins));
			}
			_iter_next_1bcb5a927:;
			++it;
			goto _iter_begin_1bcb5a927;
		}
		_iter_end_1bcb5a927:;
	};
}



inline void _1ac92a32d_funcTrait(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ac91ee38_traitHash>* _102134_hash, jule::Ptr<_1ab1ce40d_Fn>* _102157_f) {
	jule::Str _10229_ident = (*((*(_102157_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102157_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb5c1ba:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d2312_FnIns> _102321_ins = *it;
			{
				(*(_102321_ins))._field_Scope=nullptr;
				_1a7c4c7ed_StrBuilder _102617_s = static__1a7c4cb1c_New(static_cast<jule::I64>((((((*((*(_102157_f))))._field_Ident.len() + _10229_ident.len()) + (*((*(_102134_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_1a7c573c9_WriteStr(&_102617_s, _10229_ident);
				_1a7c57682_WriteByte(&_102617_s, '_');
				_1a7c573c9_WriteStr(&_102617_s, (*((*(_102134_hash))))._field_ti);
				_1a7c57682_WriteByte(&_102617_s, '_');
				_1a7c573c9_WriteStr(&_102617_s, _1a8ce48e9_Itoa((*((*(_102134_hash))))._field_i));
				(*((*(_102157_f))))._field_Ident=_1a7c57bc1_Str(&_102617_s);
				jule::Ptr<_1ab2e6525_TypeKind> _103517_k = (*((*(_102321_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_102321_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*((*(_102134_hash))))._field_t, 2)});
				_1ac929c12_funcIns(_self_, &(_102321_ins));
				(*((*(_102321_ins))._field_Params[0LL]))._field_Kind=_103517_k;
			}
			_iter_next_1bcb5c1ba:;
			++it;
			goto _iter_begin_1bcb5c1ba;
		}
		_iter_end_1bcb5c1ba:;
	};
	(*((*(_102157_f))))._field_Ident=_10229_ident;
}



inline void _1ac92a691_traitWrapper(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1ce40d_Fn>* _104337_m, jule::Ptr<_1ac91ee38_traitHash>* _104350_hash) {
	_1ac92a32d_funcTrait(_self_, _104350_hash, _104337_m);
	if (((*((*(_104350_hash))))._field_s == nullptr)) {
		if (_1d72610e0_Production) {
			_1ac921a2d_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1ac921a2d_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10559_ptr = (!(_1ab1cd2db_IsRef((*((*(_104337_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1ab1ce40d_Fn> _105713_sm = _1ab1bd265_FindMethod((*((*(_104350_hash))))._field_s.ptr(), (*((*(_104337_m))))._field_Ident, false);;
	if (((_105713_sm == nullptr) || ((*(_105713_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1ac921ed4_addIndent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("{\n", 2));
	_1ac9223d0_indent(_self_);
	if (((*(_105713_sm))._field_Exceptional || (!(_1ab1ce881_IsVoid(_105713_sm.ptr()))))) {
		_1ac921a2d_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1ac8614d9_func(&((*(_self_))._field_Buf), &(_105713_sm));
	_1ac921a2d_write(_self_, jule::Str::lit("(", 1));
	if (_10559_ptr) {
		_1ac921a2d_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1ac93525b_structureIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_104350_hash))))._field_s);
		_1ac921a2d_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_1d72610e0_Production))) {
			_1ac921a2d_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1ac921a2d_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1ac921a2d_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1ac934de8_structure((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*(_105713_sm))._field_Owner);
		_1ac921a2d_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_104337_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bcb6878c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1cc939_Param> _108316_mp = *it;
			{
				_1ac921a2d_write(_self_, jule::Str::lit(", ", 2));
				static__1ac861d9c_param(&((*(_self_))._field_Buf), &(_108316_mp));
			}
			_iter_next_1bcb6878c:;
			++it;
			goto _iter_begin_1bcb6878c;
		}
		_iter_end_1bcb6878c:;
	};
	_1ac921a2d_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1ac9221d2_doneIndent(_self_);
}



inline void _1ac92a88e_traitWrappers(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb6d4b7:;
		if (it != expr_end) {
			jule::Ptr<_1ac91ee38_traitHash> _109221_hash = *it;
			{
				{
					auto expr = &((*((*(_109221_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcb6dde1:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _109325_m = *it;
						{
							_1ac92a691_traitWrapper(_self_, &(_109325_m), &(_109221_hash));
						}
						_iter_next_1bcb6dde1:;
						++it;
						goto _iter_begin_1bcb6dde1;
					}
					_iter_end_1bcb6dde1:;
				};
			}
			_iter_next_1bcb6d4b7:;
			++it;
			goto _iter_begin_1bcb6d4b7;
		}
		_iter_end_1bcb6d4b7:;
	};
}



inline void _1ac92ac02_traitDataMethods(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1e26da_Trait>* _109941_t, jule::Ptr<_1ac91ee38_traitHash>* _109953_hash) {
	{
		auto expr = &((*((*(_109941_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb6e9d5:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _110021_m = *it;
			{
				_1a7c4c7ed_StrBuilder _110117_mIdent = static__1a7c4cb1c_New(static_cast<jule::I64>((*(_110021_m))._field_Ident.len()));;
				static__1ac8614d9_func(&(_110117_mIdent), &(_110021_m));
				_1ac9223d0_indent(_self_);
				_1ac921a2d_write(_self_, jule::Str::lit(".", 1));
				_1ac921cd6_writeBytes(_self_, _1a7c58672_Buf(&_110117_mIdent));
				_1ac921a2d_write(_self_, jule::Str::lit("=", 1));
				_1ac921cd6_writeBytes(_self_, _1a7c58672_Buf(&_110117_mIdent));
				_1ac921a2d_write(_self_, jule::Str::lit("_", 1));
				_1ac921a2d_write(_self_, (*((*(_109953_hash))))._field_ti);
				_1ac921a2d_write(_self_, jule::Str::lit("_", 1));
				_1ac921a2d_write(_self_, _1a8ce48e9_Itoa((*((*(_109953_hash))))._field_i));
				_1ac921a2d_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1bcb6e9d5:;
			++it;
			goto _iter_begin_1bcb6e9d5;
		}
		_iter_end_1bcb6e9d5:;
	};
}



inline void _1ac92b065_traitData(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ac91ee38_traitHash>* _111634_hash, jule::Ptr<_1ab1e26da_Trait>* _111657_old) {
	if (((*((*((*(_111634_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_1a7c4c7ed_StrBuilder _112013_ident = static__1a7c4cb1c_New(static_cast<jule::I64>((*((*((*(_111634_hash))))._field_t))._field_Ident.len()));;
	static__1ac861ab1_traitDecl(&(_112013_ident), (*((*(_111634_hash))))._field_t);
	if (((*((*(_111634_hash))))._field_t != (*(_111657_old)))) {
		if (((*(_111657_old)) != nullptr)) {
			_1ac9221d2_doneIndent(_self_);
			_1ac9223d0_indent(_self_);
			_1ac921a2d_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1ac921a2d_write(_self_, jule::Str::lit("static ", 7));
		_1ac921cd6_writeBytes(_self_, _1a7c58672_Buf(&_112013_ident));
		_1ac921a2d_write(_self_, jule::Str::lit("MptrData ", 9));
		_1ac921cd6_writeBytes(_self_, _1a7c58672_Buf(&_112013_ident));
		_1ac921a2d_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_111657_old))=(*((*(_111634_hash))))._field_t;
		_1ac921ed4_addIndent(_self_);
	};
	_1ac9223d0_indent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("{\n", 2));
	_1ac921ed4_addIndent(_self_);
	_1ac92ac02_traitDataMethods(_self_, &((*((*(_111634_hash))))._field_t), _111634_hash);
	_1ac9221d2_doneIndent(_self_);
	_1ac9223d0_indent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1ac92b263_traitDatas(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	jule::Ptr<_1ab1e26da_Trait> _114617_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb7b5e6:;
		if (it != expr_end) {
			jule::Ptr<_1ac91ee38_traitHash> _114721_hash = *it;
			{
				_1ac92b065_traitData(_self_, &(_114721_hash), &(_114617_old));
			}
			_iter_next_1bcb7b5e6:;
			++it;
			goto _iter_begin_1bcb7b5e6;
		}
		_iter_end_1bcb7b5e6:;
	};
	if ((_114617_old != nullptr)) {
		_1ac9221d2_doneIndent(_self_);
		_1ac9223d0_indent(_self_);
		_1ac921a2d_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1ac92b461_globals(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb7d472:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _115821_v = *it;
			{
				_1ac936ea5_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_115821_v))._field_Kind))._field_Kind);
				_1ac921a2d_write(_self_, jule::Str::lit(" ", 1));
				static__1ac862a4b_var(&((*(_self_))._field_Buf), _115821_v);
				_1ac921a2d_write(_self_, jule::Str::lit(" = ", 3));
				_1ac859180_model((*(_self_))._field_ec, (*((*((*(_115821_v))._field_Value))._field_Data))._field_Model);
				_1ac921a2d_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bcb7d472:;
			++it;
			goto _iter_begin_1bcb7d472;
		}
		_iter_end_1bcb7d472:;
	};
}



inline void _1ac92b65e_decls(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac92503c_traitDecls(_self_);
	_1ac9254e3_structurePlainDecls(_self_);
	_1ac927160_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_1a7c58155_Len(&(*(_self_))._field_Buf));
	_1ac92735d_structureMethodDecls(_self_);
	_1ac92876b_funcDecls(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac928ccc_traitDataTypes(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac92a88e_traitWrappers(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac92b263_traitDatas(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_1a7c58155_Len(&(*(_self_))._field_Buf));
	_1ac92b461_globals(_self_);
}



inline void _1ac92b917_structureMethods(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _118641_s) {
	{
		auto expr = &((*((*(_118641_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb861e4:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _118721_f = *it;
			{
				_1ac929eba_func(_self_, &(_118721_f));
				_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bcb861e4:;
			++it;
			goto _iter_begin_1bcb861e4;
		}
		_iter_end_1bcb861e4:;
	};
}



inline void _1ac92bbc0_structureOstream(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _119341_s) {
	_1ac9223d0_indent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1ac862474_structureIns(&((*(_self_))._field_Buf), _119341_s);
	_1ac921a2d_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1ac921ed4_addIndent(_self_);
	_1ac9223d0_indent(_self_);
	jule::Ptr<_1ab1ce40d_Fn> _120113_fts = _1ab1bd265_FindMethod((*(_119341_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1ab286ac0_Str(_120113_fts)) {
		_1ac921a2d_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1ac8614d9_func(&((*(_self_))._field_Buf), &(_120113_fts));
		_1ac921a2d_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1ac921a2d_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1ac859dea_cstrBytes(&((*(_self_))._field_Buf), (*((*((*(_119341_s))))._field_Decl))._field_Ident);
		_1ac921a2d_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_119341_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcb8ac43:;
			if (it != expr_end) {
				jule::I64 _121118_i = it - expr->begin();
				jule::Ptr<_1ab1bb64d_FieldIns> _121125_f = *it;
				{
					_1ac9223d0_indent(_self_);
					_1ac921a2d_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1ac859dea_cstrBytes(&((*(_self_))._field_Buf), (*((*(_121125_f))._field_Decl))._field_Ident);
					_1ac921a2d_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1ab1bc1ed_StructIns> _121817_strct = _1ab2ea1e9_Struct((*(_121125_f))._field_Kind.ptr());;
					if ((((_121817_strct != nullptr) && ((*(_121817_strct))._field_Decl != nullptr)) && (*((*(_121817_strct))._field_Decl))._field_Binded)) {
						_1ac921a2d_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1ac862760_field(&((*(_self_))._field_Buf), &((*(_121125_f))._field_Decl));
						_1ac921a2d_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1ac921a2d_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1ac862760_field(&((*(_self_))._field_Buf), &((*(_121125_f))._field_Decl));
					};
					if (((_121118_i + 1LL) < (*((*(_119341_s))))._field_Fields.len())) {
						_1ac921a2d_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1ac921a2d_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1bcb8ac43:;
				++it;
				_121118_i++;
				goto _iter_begin_1bcb8ac43;
			}
			_iter_end_1bcb8ac43:;
		};
		_1ac9223d0_indent(_self_);
		_1ac921a2d_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1ac9223d0_indent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1ac9221d2_doneIndent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("}", 1));
}



inline void _1ac92be78_structureIns(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _124437_s) {
	_1ac92b917_structureMethods(_self_, _124437_s);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac92bbc0_structureOstream(_self_, _124437_s);
}



inline void _1ac92c231_structure(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab1b9470_Struct>* _125034_s) {
	{
		auto expr = &((*((*(_125034_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb95478:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bc1ed_StructIns> _125121_ins = *it;
			{
				_1ac92be78_structureIns(_self_, &(_125121_ins));
				_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bcb95478:;
			++it;
			goto _iter_begin_1bcb95478;
		}
		_iter_end_1bcb95478:;
	};
}



inline void _1ac92c42e_structures(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb95cc5:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b9470_Struct> _125821_s = *it;
			{
				if (((*(_125821_s))._field_Token != nullptr)) {
					_1ac92c231_structure(_self_, &(_125821_s));
					_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1bcb95cc5:;
			++it;
			goto _iter_begin_1bcb95cc5;
		}
		_iter_end_1bcb95cc5:;
	};
}



inline void _1ac92c62c_funcs(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac924b41_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)>([=](jule::Ptr<_1ab2459c4_Package>* _126735_pkg) mutable -> void {
		_1ac92d5b7_iterFiles(_126735_pkg, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)>([=](jule::Ptr<_1ab2b0863_SymbolTable>* _126836_file) mutable -> void {
			{
				auto expr = &((*((*(_126836_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bcb9a03d:;
				if (it != expr_end) {
					jule::Ptr<_1ab1ce40d_Fn> _126929_f = *it;
					{
						if (((!(_1d7260683_Test)) && _1ac93e177_hasDirective(&((*(_126929_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1bcb9a03d;
						};
						if (((!((*(_126929_f))._field_Binded)) && ((*(_126929_f))._field_Token != nullptr))) {
							_1ac929eba_func(_self_, &(_126929_f));
							_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1bcb9a03d:;
					++it;
					goto _iter_begin_1bcb9a03d;
				}
				_iter_end_1bcb9a03d:;
			};
		}));
	}));
}



inline void _1ac92c8d5_pushInit(jule::Ptr<_1ac921379_ObjectCoder> _self_, jule::Ptr<_1ab2459c4_Package>* _128233_pkg) {
	_1ac92d5b7_iterFiles(_128233_pkg, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)>([=](jule::Ptr<_1ab2b0863_SymbolTable>* _128332_file) mutable -> void {
		{
			auto expr = &((*((*(_128332_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcb9cace:;
			if (it != expr_end) {
				jule::Ptr<_1ab1ce40d_Fn> _128420_f = *it;
				{
					if ((*(_128420_f))._field_Ident.equal("init", 4)) {
						_1ac9223d0_indent(_self_);
						static__1ac8614d9_func(&((*(_self_))._field_Buf), &(_128420_f));
						_1ac921a2d_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1bcb9cace:;
				++it;
				goto _iter_begin_1bcb9cace;
			}
			_iter_end_1bcb9cace:;
		};
	}));
}



inline void _1ac92cad3_initCaller(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac921a2d_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1ac921ed4_addIndent(_self_);
	_1ac924b41_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ab2459c4_Package>*)>([=](jule::Ptr<_1ab2459c4_Package>* _129735_pkg) mutable -> void {
		_1ac92c8d5_pushInit(_self_, _129735_pkg);
	}));
	_1ac9221d2_doneIndent(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1ac92ccd1_end(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac921a2d_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1d7260683_Test) {
		_1ac921a2d_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1ac921a2d_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ac92cece_serializeHead(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac924888_prepareStructures(_self_);
	_1ac924d3e_buildTraitMap(_self_);
	_1ac9241d4_head(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
	_1ac92b65e_decls(_self_);
	if ((_1a7c58155_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _133217_head = jule::Slice<jule::U8>::alloc(0LL, (_1a7c58155_Len(&(*(_self_))._field_Buf) + _1a7c58155_Len(&(*(_self_))._field_resultDecls)), 0);;
		(_133217_head).append(_1a7c58672_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_headPos));;
		(_133217_head).append(_1a7c58672_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_1a7c58155_Len(&(*(_self_))._field_resultDecls);
		(_133217_head).append(_1a7c58672_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_headPos));;
		{
			_1a7c5892a_SetBuf(&(*(_self_))._field_Buf, _133217_head);
		};
	};
	_1ac921a2d_write(_self_, jule::Str::lit("\n", 1));
	_1ac92c42e_structures(_self_);
	_1ac92c62c_funcs(_self_);
	_1ac92cad3_initCaller(_self_);
	_1ac921a2d_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_1a7c58155_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _134717_head = jule::Slice<jule::U8>::alloc(0LL, (_1a7c58155_Len(&(*(_self_))._field_Buf) + _1a7c58155_Len(&(*(_self_))._field_anyObj)), 0);;
		(_134717_head).append(_1a7c58672_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_declPos));;
		(_134717_head).append(_1a7c58672_Buf(&(*(_self_))._field_anyObj));;
		(_134717_head).append(_1a7c58672_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_declPos));;
		{
			_1a7c5892a_SetBuf(&(*(_self_))._field_Buf, _134717_head);
		};
	};
}



inline void _1ac92d1cc_Serialize(jule::Ptr<_1ac921379_ObjectCoder> _self_) {
	_1ac92cece_serializeHead(_self_);
	_1ac92ccd1_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ac921379_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abe635ae_ObjectDeadCode> static__1abe63a54_new(jule::Ptr<_1abd36b36_IR>* _3424_ir) {
	return jule::new_ptr<_1abe635ae_ObjectDeadCode>(_1abe635ae_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1bbd05474_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab1e26da_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab1e26da_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bbd071e0:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1bbd06ee2:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd06db0:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bbd06db0:;
			++it;
			_5213_i++;
			goto _iter_begin_1bbd06db0;
		}
		_iter_end_1bbd06db0:;
	};
	return false;;
}

inline jule::Bool _1bbd0aec4_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab1d2312_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bbd0ca75:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1bbd0c9ba:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd0d04d:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bbd0d04d:;
			++it;
			_5213_i++;
			goto _iter_begin_1bbd0d04d;
		}
		_iter_end_1bbd0d04d:;
	};
	return false;;
}

inline jule::Bool _1bbd11c88_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab1bc1ed_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab1bc1ed_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bbd167d7:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1bbd16650:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd171de:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bbd171de:;
			++it;
			_5213_i++;
			goto _iter_begin_1bbd171de;
		}
		_iter_end_1bbd171de:;
	};
	return false;;
}

inline jule::Bool _1bbd19158_isLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab2853a4_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bbd1aca3:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1bbd1ab82:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd1b248:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bbd1b248:;
			++it;
			_5213_i++;
			goto _iter_begin_1bbd1b248;
		}
		_iter_end_1bbd1b248:;
	};
	return false;;
}



inline void _1bbd0583c_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab1e26da_Trait> _6035_t) {
	{
		
{
			_case_begin_1bbd09401:;
			{
				{ jule::Slice<jule::Ptr<_1ab1e26da_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bbd09203:;
	};
}

inline void _1bbd0b359_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab1d2312_FnIns> _6035_t) {
	{
		
{
			_case_begin_1bbd10418:;
			{
				{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bbd102e7:;
	};
}

inline void _1bbd12393_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab1bc1ed_StructIns> _6035_t) {
	{
		
{
			_case_begin_1bbd13b8b:;
			{
				{ jule::Slice<jule::Ptr<_1ab1bc1ed_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bbd13a04:;
	};
}

inline void _1bbd19521_pushLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab2853a4_Var> _6035_t) {
	{
		
{
			_case_begin_1bbd1d349:;
			{
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1bbd1d28e:;
	};
}



inline void _1abe93de7_setReferencesAsLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab1d54d0_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7713_i = 0LL;;
	for (; (_7713_i < _1ab1d5bc8_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1ab1d6019_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1bbd041dc:;
					{
						jule::Ptr<_1ab1e26da_Trait> _8221_t = _7917_ref.cast_ptr<_1ab1e26da_Trait>(&__jule_any_type10);;
						if (_1bbd05474_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1bbd033d9;
						};
						_1bbd0583c_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bbd04dad:;
							if (it != expr_end) {
								jule::Ptr<_1ab1ce40d_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bbd06145:;
										if (it != expr_end) {
											jule::Ptr<_1ab1d2312_FnIns> _8833_mins = *it;
											{
												if (_1bbd0aec4_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1bbd06145;
												};
												_1bbd0b359_pushLive(_self_, _8833_mins);
												_1abe93de7_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1bbd06145:;
											++it;
											goto _iter_begin_1bbd06145;
										}
										_iter_end_1bbd06145:;
									};
								}
								_iter_next_1bbd04dad:;
								++it;
								goto _iter_begin_1bbd04dad;
							}
							_iter_end_1bbd04dad:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1bbd04253:;
					{
						jule::Ptr<_1ab1d2312_FnIns> _9721_f = _7917_ref.cast_ptr<_1ab1d2312_FnIns>(&__jule_any_type7);;
						if (_1bbd0aec4_isLive(_self_, &(_9721_f))) {
							goto _match_end_1bbd04132;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1bbd11c88_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1bbd12393_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1abe93de7_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1bbd0b359_pushLive(_self_, _9721_f);
						_1abe93de7_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1bbd042b9:;
					{
						jule::Ptr<_1ab2853a4_Var> _11021_v = _7917_ref.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8);;
						if (_1bbd19158_isLive(_self_, &(_11021_v))) {
							goto _match_end_1bbd04132;
						};
						_1bbd19521_pushLive(_self_, _11021_v);
						_1abe93de7_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1bbd04330:;
					{
						jule::Ptr<_1ab1bc1ed_StructIns> _11721_s = _7917_ref.cast_ptr<_1ab1bc1ed_StructIns>(&__jule_any_type9);;
						if (_1bbd11c88_isLive(_self_, &(_11721_s))) {
							goto _match_end_1bbd04132;
						};
						_1bbd12393_pushLive(_self_, _11721_s);
						_1abe93de7_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bbd1eb53:;
							if (it != expr_end) {
								jule::Ptr<_1ab1ce40d_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bbd212e7:;
										if (it != expr_end) {
											jule::Ptr<_1ab1d2312_FnIns> _12433_ins = *it;
											{
												if (_1bbd0aec4_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1bbd212e7;
												};
												if (_1abe96aba_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1bbd0b359_pushLive(_self_, _12433_ins);
													_1abe93de7_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1bbd212e7:;
											++it;
											goto _iter_begin_1bbd212e7;
										}
										_iter_end_1bbd212e7:;
									};
								}
								_iter_next_1bbd1eb53:;
								++it;
								goto _iter_begin_1bbd1eb53;
							}
							_iter_end_1bbd1eb53:;
						};
					}
				}
				_match_end_1bbd04132:;
			};
		}
	_iter_next_1bbd033d9:;
	}
	_iter_end_1bbd033d9:;;
}



inline void _1abe941a0_inits(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab2459c4_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd18663:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd21b44:;
					if (it != expr_end) {
						jule::Ptr<_1ab1ce40d_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ab1d2312_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1abe93de7_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1bbd21b44:;
						++it;
						goto _iter_begin_1bbd21b44;
					}
					_iter_end_1bbd21b44:;
				};
			}
			_iter_next_1bbd18663:;
			++it;
			goto _iter_begin_1bbd18663;
		}
		_iter_end_1bbd18663:;
	};
}



inline void _1abe94458_collectLivePackage(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab2459c4_Package>* _15343_pkg) {
	_1abe941a0_inits(_self_, _15343_pkg);
	if (_1d7260683_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bbd25ad2:;
			if (it != expr_end) {
				jule::Ptr<_1ab2b0863_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bbd2652d:;
						if (it != expr_end) {
							jule::Ptr<_1ab1ce40d_Fn> _16029_f = *it;
							{
								if (_1abe96702_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1ab1d2312_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1abe93de7_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1bbd2652d:;
							++it;
							goto _iter_begin_1bbd2652d;
						}
						_iter_end_1bbd2652d:;
					};
				}
				_iter_next_1bbd25ad2:;
				++it;
				goto _iter_begin_1bbd25ad2;
			}
			_iter_end_1bbd25ad2:;
		};
	};
}



inline void _1abe94656_collectLive(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd271dd:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1abe94458_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1bbd271dd:;
			++it;
			goto _iter_begin_1bbd271dd;
		}
		_iter_end_1bbd271dd:;
	};
	_1abe94458_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1ab1ce40d_Fn> _18013_main = _1ab247058_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1ab1d2312_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1ab1d2312_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1abe93de7_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1abe9490e_removeDeadGlobals(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab2853a4_Var>>* _18642_vars) {
	jule::I64 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1ab2853a4_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1bbd19158_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1bbd2c8ca;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1bbd2c8ca:;
	}
	_iter_end_1bbd2c8ca:;;
}



inline void _1abe94bb7_removeDeadFns(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>* _19838_funcs) {
	jule::I64 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1ab1ce40d_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I64 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ab1d2312_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1bbd0aec4_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1bbd302c3;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1bbd302c3:;
			}
			_iter_end_1bbd302c3:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1bbd2e4d1;
			};
			(_19913_i)++;
		}
	_iter_next_1bbd2e4d1:;
	}
	_iter_end_1bbd2e4d1:;;
}



inline void _1abe94e70_removeDeadStructs(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab1b9470_Struct>>* _21942_structs) {
	jule::I64 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1ab1b9470_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I64 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1ab1bc1ed_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1abe94bb7_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1bbd11c88_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1bbd34074;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1bbd34074:;
			}
			_iter_end_1bbd34074:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1bbd33271;
			};
			(_22013_i)++;
		}
	_iter_next_1bbd33271:;
	}
	_iter_end_1bbd33271:;;
}



inline void _1abe95228_removeDeadTraits(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ab1e26da_Trait>>* _24141_traits) {
	jule::I64 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1ab1e26da_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1bbd05474_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1bbd37a7d;
			};
			jule::I64 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1ab1b9470_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1bbd3840d;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1bbd3840d:;
			}
			_iter_end_1bbd3840d:;;
			(_24213_i)++;
		}
	_iter_next_1bbd37a7d:;
	}
	_iter_end_1bbd37a7d:;;
}



inline void _1abe954d1_removeDeadsFile(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab2b0863_SymbolTable>* _26240_file) {
	_1abe94bb7_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1abe94e70_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1abe95228_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1abe9490e_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1abe95789_removeDeadsPackage(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_, jule::Ptr<_1ab2459c4_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd3d149:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _27021_file = *it;
			{
				_1abe954d1_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1bbd3d149:;
			++it;
			goto _iter_begin_1bbd3d149;
		}
		_iter_end_1bbd3d149:;
	};
}



inline void _1abe95987_removeDeads(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd3d9a7:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1abe95789_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1bbd3d9a7:;
			++it;
			goto _iter_begin_1bbd3d9a7;
		}
		_iter_end_1bbd3d9a7:;
	};
	_1abe95789_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1abe95b85_elimanate(jule::Ptr<_1abe635ae_ObjectDeadCode> _self_) {
	_1abe94656_collectLive(_self_);
	_1abe95987_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1abe635ae_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1abd36b36_IR__jule_tuple_s_1a7d05a93_Log static__1abd37098_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1abd36b36_IR__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	jule::Ptr<_1abd34172_JuleImporter> _2813_importer = static__1abd3456d_New(_1abd38a7d_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1ab1965b2_Ast>> _2913_files;;
	jule::Slice<_1a7d05a93_Log> _2924_logs;;
	({
		__jule_tuple_sx_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abd35a58_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab2459c4_Package> _3913_pkg;;
	({
		__jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1ab317700_AnalyzePackage(_2913_files, jule::Trait<_1ab23eb88_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd36b36_IR> _4413_ir = jule::new_ptr<_1abd36b36_IR>(_1abd36b36_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1abd34804_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1abd3886e_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1abd37582_appendStructs(_1abd36b36_IR* _self_, jule::Ptr<_1ab2459c4_Package>* _5633_p, jule::Slice<jule::Ptr<_1ab1b9470_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcba89b:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbcbb2b4:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b9470_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1ab1b9470_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1bbcbb2b4:;
						++it;
						goto _iter_begin_1bbcbb2b4;
					}
					_iter_end_1bbcbb2b4:;
				};
			}
			_iter_next_1bbcba89b:;
			++it;
			goto _iter_begin_1bbcba89b;
		}
		_iter_end_1bbcba89b:;
	};
}



inline jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _1abd37818_GetAllStructures(_1abd36b36_IR* _self_) {
	jule::Slice<jule::Ptr<_1ab1b9470_Struct>> _6917_buffer = nullptr;;
	_1abd37582_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcbc2c6:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1abd37582_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1bbcbc2c6:;
			++it;
			goto _iter_begin_1bbcbc2c6;
		}
		_iter_end_1bbcbc2c6:;
	};
	return _6917_buffer;;
}



inline void _1abd37b7b_appendGlobals(_1abd36b36_IR* _self_, jule::Ptr<_1ab2459c4_Package>* _7933_p, jule::Slice<jule::Ptr<_1ab2853a4_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcbdb79:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbcbe592:;
					if (it != expr_end) {
						jule::Ptr<_1ab2853a4_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1bbcbe592:;
						++it;
						goto _iter_begin_1bbcbe592;
					}
					_iter_end_1bbcbe592:;
				};
			}
			_iter_next_1bbcbdb79:;
			++it;
			goto _iter_begin_1bbcbdb79;
		}
		_iter_end_1bbcbdb79:;
	};
}



inline jule::Slice<jule::Ptr<_1ab2853a4_Var>> _1abd37e12_GetAllGlobals(_1abd36b36_IR* _self_) {
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _9217_buffer = nullptr;;
	_1abd37b7b_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcbed12:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1abd37b7b_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1bbcbed12:;
			++it;
			goto _iter_begin_1bbcbed12;
		}
		_iter_end_1bbcbed12:;
	};
	return _9217_buffer;;
}



inline void _1abd38110_Order(_1abd36b36_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1abd37818_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1abd37e12_GetAllGlobals(_self_);
	static__1abd39ee1_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1abd3a222_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1abd36b36_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab1bc572_Str(_1ab1bc1ed_StructIns* _self_) {
	_1a7c4c7ed_StrBuilder _23913_kind = static__1a7c4cb1c_New(32LL);;
	_1a7c573c9_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1a7c57682_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bae0c538:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1ab2e4b3e_InsGeneric> *_24320_g = it;
				{
					_1a7c573c9_WriteStr(&_23913_kind, _1ab2e68dd_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1a7c57682_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1bae0c538:;
				++it;
				_24317_i++;
				goto _iter_begin_1bae0c538;
			}
			_iter_end_1bae0c538:;
		};
		_1a7c57682_WriteByte(&_23913_kind, ']');
	};
	return _1a7c57bc1_Str(&_23913_kind);;
}



inline jule::Bool _1ab1bc8b3_Equal(jule::Ptr<_1ab1bc1ed_StructIns> _self_, jule::Ptr<_1ab2e6525_TypeKind> _25521_other) {
	jule::Ptr<_1ab1bc1ed_StructIns> _2569_s = _1ab2ea1e9_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1ab2e6c2e_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1bae11b58:;
	}
	_iter_end_1bae11b58:;;
	return true;;
}



inline jule::Bool _1ab1bcd69_Same(_1ab1bc1ed_StructIns* _self_, jule::Ptr<_1ab1bc1ed_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae139c3:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1ab2e4b3e_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1ab2e4b3e_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1ab2e6c2e_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bae139c3:;
			++it;
			_28713_i++;
			goto _iter_begin_1bae139c3;
		}
		_iter_end_1bae139c3:;
	};
	return true;;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab1bd265_FindMethod(_1ab1bc1ed_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae17004:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1bae17004:;
			++it;
			goto _iter_begin_1bae17004;
		}
		_iter_end_1bae17004:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1bb64d_FieldIns> _1ab1bd5a6_FindField(_1ab1bc1ed_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae18324:;
		if (it != expr_end) {
			jule::Ptr<_1ab1bb64d_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1bae18324:;
			++it;
			goto _iter_begin_1bae18324;
		}
		_iter_end_1bae18324:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab1bd8e7_FindStatic(_1ab1bc1ed_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae19545:;
		if (it != expr_end) {
			jule::Ptr<_1ab2853a4_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1bae19545:;
			++it;
			goto _iter_begin_1bae19545;
		}
		_iter_end_1bae19545:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1bc1ed_StructIns _Src) {
	_Stream << _1ab1bc572_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a7dad4db_Cmd> static__1a7dad909_New(jule::Str _2619_path) {
	return jule::new_ptr<_1a7dad4db_Cmd>(_1a7dad4db_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1a7dadb07_Spawn(_1a7dad4db_Cmd* _self_) {
	({
		auto except = _1a7e13b5c_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1a7dae08b_Wait(_1a7dad4db_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1a7e140e1_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1a7e13b5c_spawn(_1a7dad4db_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _809_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_1d7b1d194_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_1d7b26323_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
		_1d7b26323_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1ad7b3db9:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ad7b3270:;
			{
				_1d7b26323_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9617_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9617_args[0LL]=_809_path;
				(_9617_args).append((*(_self_))._field_Args);;
				({
					auto except = _1a7e13909_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_1a7e136c8_execvp(&(_809_path), &(_9617_args));
				jule::Str _10113_code = _1a7e0e76d_Itoa(static_cast<jule::I64>(_1d7a78c7b_GetLastErrno()));;
				{
					_1d7b26752_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), (&(_10113_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10113_code.len())));
				};
				_1d7b26323_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				_1a7e15400_Exit(1LL);
			}
		}
		else {
			_case_begin_1ad7ad9da:;
			{
				_1d7b26323_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10813_n = _1d7b25e7c_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_1d7b26323_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				if ((_10813_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11217_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a7e05962_AtoiBp((&(_10721_buf[0LL])), _10813_n);
						_11217_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_1a7e14883_processErrorFromCode(_11217_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1ad7b1081:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1a7e140e1_wait(_1a7dad4db_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I64 _13213_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13213_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_1a7e14ad6_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13213_stat)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7dad4db_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _1d7acd000_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1d7b0d87c_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
			}
		_iter_next_1ac9d6e78:;
		}
		_iter_end_1ac9d6e78:;;
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1ac9d91ab:;
		}
		_iter_end_1ac9d91ab:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::I64 _1d7a78c7b_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1d7b1d194_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _1d7b1d518_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _1d7b1d947_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _1d7b1dcbb_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _1d7b1e2b6_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _1d7b1e580_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _1d7b1e849_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _1d7b20251_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _1d7b2051a_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _1d7b207d4_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _1d7b25e7c_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _1d7b26323_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _1d7b26752_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _1d7b26983_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _1d784e49c_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1aca3bc14_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _1d785a255_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1aca3bc14_Slice((&(_4113_s[0LL])), static_cast<jule::I64>(_4113_s.len()));;
}



inline jule::Str _1d785a51e_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1d784e49c_Str((&(_5013_b[0LL])), static_cast<jule::I64>(_5013_b.len()));;
}



inline jule::Str _1d785a7d8_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::Slice<jule::U8> _1d785aaa2_BytesFromStr(jule::Str _6117_s) {
	jule::Slice<jule::U8> _629_b = _1d785a255_StrBytes(_6117_s);;
	{
		if (_6117_s.buffer.ref != nullptr) {
			_629_b.data.ref = _6117_s.buffer.ref;
			_629_b.data.add_ref();
		};
	};
	return _629_b;;
}



inline jule::I64 _1d785b520_getLastOsError(void) {
	jule::I64 _305_err = _1d7a78c7b_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aca44c94:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aca44656:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1aca446cd:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1aca44755:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aca449b9:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aca44a30:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aca44a96:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1aca445ce:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1aca44579:;
	};
}



inline jule::Slice<jule::Str> _1d7884988_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1d7884e2d_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _1d7885879_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _1d7885879_getwd(void) {
	jule::U8* _119_buff = _1d7b1dcbb_Getcwd(nullptr, 0LLU);;
	if ((_119_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_1d785b520_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _155_pwd = _1d7b0d87c_BytePtrToStr(_119_buff);;
	{
		_1d7acd000_Free(_119_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _155_pwd);;
}



inline jule::Bool _1a7a84a64_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1a7ae4ba1__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1a7aed2a3_isExcludingLatin(_1a7a8dcc1_Letter, _7613_r);;
}



inline jule::Bool _1a7aec626_is16(jule::Slice<_1a7aea888_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aac96d1c:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1a7aea888_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aac96d1c:;
				++it;
				_19313_i++;
				goto _iter_begin_1aac96d1c;
			}
			_iter_end_1aac96d1c:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_1a7aea888_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1aac959a8:;
	}
	_iter_end_1aac959a8:;;
	return false;;
}



inline jule::Bool _1a7aec99a_is32(jule::Slice<_1a7aeadb6_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aac99d75:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1a7aeadb6_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aac99d75:;
				++it;
				_23013_i++;
				goto _iter_begin_1aac99d75;
			}
			_iter_end_1aac99d75:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_1a7aeadb6_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1aac99c32:;
	}
	_iter_end_1aac99c32:;;
	return false;;
}



inline jule::Bool _1a7aed2a3_isExcludingLatin(jule::Ptr<_1a7aeb36c_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1a7aea888_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _1a7aec626_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1a7aeadb6_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _1a7aec99a_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1a7aed56c_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1a7ae4ba1__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1a7aed2a3_isExcludingLatin(_1a7a95327_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1a7be6ac7_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _1a7be592d_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_1a7be5eb1_acceptRange _1965_accept = _1a7be62be_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a7be6e18_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _1a7be592d_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_1a7be5eb1_acceptRange _2435_accept = _1a7be62be_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a7be71d2_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2805_end = _27619_p.len();;
	jule::I64 _2819_start = (_2805_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_2819_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2899_lim = (_2805_end - 4LL);;
	if ((_2899_lim < 0LL)) {
		_2899_lim=0LL;
	};
	(_2819_start)--;
	for (; (_2819_start >= _2899_lim); (_2819_start)--) {
		{
			if (_1a7be8c0b_RuneStart(_27619_p[_2819_start])) {
				goto _iter_end_1aace1d23;
			};
		}
	_iter_next_1aace1d23:;
	}
	_iter_end_1aace1d23:;;
	if ((_2819_start < 0LL)) {
		_2819_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune(_27619_p.slice(_2819_start, _2805_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_2819_start + __jule_func_result.__jule_result_arg1) != _2805_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1a7be803a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1a7be83ae_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1a7be83ae_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1aad06046:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1aad06365:;
			{
				_41242_r=128LL;
				goto _case_begin_1aad03ecd;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1aad03ecd:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1aad03e67:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1aad03e01:;
	};
}



inline jule::I64 _1a7be8942_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1aad10050;
			};
			jule::U8 _4829_x = _1a7be592d_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1aad10050;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1aad10050;
			};
			_1a7be5eb1_acceptRange _4929_accept = _1a7be62be_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1aad10050:;
	}
	_iter_end_1aad10050:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7be8c0b_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1a7c23b26_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad307ce:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1aad307ce:;
			++it;
			_399_i++;
			goto _iter_begin_1aad307ce;
		}
		_iter_end_1aad307ce:;
	};
	return -1LL;;
}



inline jule::I64 _1a7c361cc_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _545_first = (&(_5017_s[0LL]));;
	jule::U8* _559_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_559_it >= _545_first); (_559_it)--) {
		{
			{
				if (((*(_559_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_559_it - _545_first))));;
				};
			};
		}
	_iter_next_1aad3224d:;
	}
	_iter_end_1aad3224d:;;
	return -1LL;;
}



inline jule::I64 _1a7c36573_FindByteStr(jule::Str _6716_s, jule::U8 _6724_b) {
	return static_cast<jule::I64>(_1a7c23b26_FindByte(_1d785a255_StrBytes(_6716_s), _6724_b));;
}



inline jule::I64 _1a7c368e7_FindLastByteStr(jule::Str _7220_s, jule::U8 _7228_b) {
	return static_cast<jule::I64>(_1a7c361cc_FindLastByte(_1d785a255_StrBytes(_7220_s), _7228_b));;
}



inline jule::Str _1a7c36ba0_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_1a7c4c7ed_StrBuilder _209_ss = static__1a7c4cb1c_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_1a7c573c9_WriteStr(&_209_ss, _1211_s);
		}
	_iter_next_1aad50ee7:;
	}
	_iter_end_1aad50ee7:;;
	_1a7c57682_WriteByte(&_209_ss, 0LLU);
	return _1d785a7d8_StrFromBytes(_1a7c58672_Buf(&_209_ss).slice(0LL, (_1a7c58155_Len(&_209_ss) - 1LL)));;
}



inline jule::Bool _1a7c37123_hasPrefix(jule::Str* _2815_s, jule::Str* _2824_sub, jule::I64 _2838_start) {
	if ((((*(_2824_sub)).len() == 0LL) || (((*(_2815_s)).len() - _2838_start) < (*(_2824_sub)).len()))) {
		return false;;
	};
	jule::I64 _339_i = 0LL;;
	for (; (_339_i < (*(_2824_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_339_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2838_start + 1LL));
		_339_i = ___jule_assign_arg;
		_2838_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2815_s))[_2838_start] != (*(_2824_sub))[_339_i])) {
				return false;;
			};
		}
	_iter_next_1aad5469e:;
	}
	_iter_end_1aad5469e:;;
	return true;;
}



inline jule::Bool _1a7c37497_HasPrefix(jule::Str _4314_s, jule::Str _4322_sub) {
	return _1a7c37123_hasPrefix(&(_4314_s), &(_4322_sub), 0LL);;
}



inline jule::Bool _1a7c3794d_hasSuffix(jule::Str* _4715_s, jule::Str* _4724_sub, jule::I64 _4738_start) {
	if ((((*(_4724_sub)).len() == 0LL) || (((*(_4715_s)).len() - _4738_start) < (*(_4724_sub)).len()))) {
		return false;;
	};
	_4738_start=static_cast<jule::I64>(((*(_4715_s)).len() - _4738_start));
	jule::I64 _539_i = 0LL;;
	for (; (_539_i < (*(_4724_sub)).len()); (_539_i)++) {
		{
			if (((*(_4715_s))[((_4738_start - _539_i) - 1LL)] != (*(_4724_sub))[(((*(_4724_sub)).len() - _539_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1aad564e7:;
	}
	_iter_end_1aad564e7:;;
	return true;;
}



inline jule::Bool _1a7c37c8e_HasSuffix(jule::Str _6314_s, jule::Str _6322_sub) {
	return _1a7c3794d_hasSuffix(&(_6314_s), &(_6322_sub), 0LL);;
}



inline jule::I64 _1a7c381bd_FindAt(jule::Str _7111_s, jule::Str _7119_sub, jule::I64 _7133_i) {
	if ((((_7133_i < 0LL) || (_7111_s.len() < _7119_sub.len())) || (_7119_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7133_i < _7111_s.len()); (_7133_i)++) {
		{
			if (_1a7c37123_hasPrefix(&(_7111_s), &(_7119_sub), _7133_i)) {
				return _7133_i;;
			};
		}
	_iter_next_1aad593c9:;
	}
	_iter_end_1aad593c9:;;
	return -1LL;;
}



inline jule::I64 _1a7c38542_Find(jule::Str _869_s, jule::Str _8617_sub) {
	return static_cast<jule::I64>(_1a7c381bd_FindAt(_869_s, _8617_sub, 0LL));;
}



inline jule::I64 _1a7c38a81_FindLastAt(jule::Str _9415_s, jule::Str _9423_sub, jule::I64 _9433_i) {
	jule::I64 _959_j = ((_9433_i - _9423_sub.len()) + 1LL);;
	if (((((_9423_sub.len() == 0LL) || (_9433_i < 0LL)) || (_9433_i >= _9415_s.len())) || (_959_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1aad5c6eb:;
	for (; (_959_j >= 0LL); (_959_j)--) {
		{
			jule::I64 _10113_k = _959_j;;
			jule::I64 _10213_z = 0LL;;
			for (; (_10213_z < _9423_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10113_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10213_z + 1LL));
				_10113_k = ___jule_assign_arg;
				_10213_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9415_s[_10113_k] != _9423_sub[_10213_z])) {
						goto _iter_next_1aad5c366;
					};
				}
			_iter_next_1aad5d4dd:;
			}
			_iter_end_1aad5d4dd:;;
			return _959_j;;
		}
	_iter_next_1aad5c366:;
	}
	_iter_end_1aad5c366:;;
	return -1LL;;
}



inline jule::I64 _1a7c38e05_FindLast(jule::Str _11613_s, jule::Str _11621_sub) {
	return static_cast<jule::I64>(_1a7c38a81_FindLastAt(_11613_s, _11621_sub, static_cast<jule::I64>((_11613_s.len() - 1LL))));;
}



inline jule::I64 _1a7c3a654_FindLastByte(jule::Str _18017_s, jule::U8 _18025_b) {
	return static_cast<jule::I64>(_1a7c368e7_FindLastByteStr(_18017_s, _18025_b));;
}



inline jule::I64 _1a7c3ab82_FindRune(jule::Str _18713_s, jule::I32 _18721_r) {
	jule::I64 _1889_i = 0LL;;
	while ((_1889_i < _18713_s.len())) {
		{
			jule::I32 _1909_br = 0;;
			jule::I64 _19013_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6e18_DecodeRuneStr(_18713_s.slice(_1889_i));
				_1909_br = __jule_assign_result.__jule_result_arg0;
				_19013_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18721_r == _1909_br)) {
				return _1889_i;;
			};
			_1889_i+=_19013_n;
		}
	_iter_next_1aad65e0d:;
	}
	_iter_end_1aad65e0d:;;
	return -1LL;;
}



inline jule::I64 _1a7c3b37a_FindAny(jule::Str _21812_s, jule::Str _21820_runes) {
	jule::I64 _2199_i = 0LL;;
	while ((_2199_i < _21812_s.len())) {
		{
			jule::I32 _2219_r = 0;;
			jule::I64 _22112_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6e18_DecodeRuneStr(_21812_s.slice(_2199_i));
				_2219_r = __jule_assign_result.__jule_result_arg0;
				_22112_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a7c3ab82_FindRune(_21820_runes, _2219_r) != -1LL)) {
				return _2199_i;;
			};
			_2199_i+=_22112_n;
		}
	_iter_next_1aad6943e:;
	}
	_iter_end_1aad6943e:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1a7c3bb2d_Split(jule::Str _24910_s, jule::Str _24918_sub, jule::I64 _24932_n) {
	jule::I64 _2509_cap = _24932_n;;
	if ((_24932_n < 0LL)) {
		_2509_cap=16LLU;
	};
	jule::Slice<jule::Str> _2549_parts = jule::Slice<jule::Str>::alloc(0LL, _2509_cap);;
	if ((_24932_n == 0LL)) {
		return _2549_parts;;
	};
	if ((_24932_n < 0LL)) {
		_24932_n=static_cast<jule::I64>(_24910_s.len());
	};
	jule::I64 _2619_i = 0LL;;
	for (; (_24932_n > 0LL); (_24932_n)--) {
		{
			jule::I64 _2639_j = _1a7c381bd_FindAt(_24910_s, _24918_sub, _2619_i);;
			if ((_2639_j == -1LL)) {
				goto _iter_end_1aad6e895;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2549_parts; __jule_push_dest.push(_24910_s.slice(_2619_i, _2639_j)); };
			_2619_i=static_cast<jule::I64>((_2639_j + _24918_sub.len()));
		}
	_iter_next_1aad6e895:;
	}
	_iter_end_1aad6e895:;;
	if (((_24932_n > 0LL) && (_2619_i < _24910_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2549_parts; __jule_push_dest.push(_24910_s.slice(_2619_i)); };
	};
	return _2549_parts;;
}



inline jule::Bool _1a7c3bea2_Contains(jule::Str _27713_s, jule::Str _27721_sub) {
	return (_1a7c381bd_FindAt(_27713_s, _27721_sub, 0LL) != -1LL);;
}



inline jule::Bool _1a7c3ca1e_ContainsAny(jule::Str _29216_s, jule::Str _29224_runes) {
	return (_1a7c3b37a_FindAny(_29216_s, _29224_runes) != -1LL);;
}



inline jule::I64 _1a7c3cd93_Count(jule::Str _29810_s, jule::Str _29818_sub) {
	if ((_29818_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _3029_n = 0LL;;
	jule::I64 _3039_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3059_j = _1a7c381bd_FindAt(_29810_s, _29818_sub, _3039_i);;
			if ((_3059_j == -1LL)) {
				goto _iter_end_1ad728933;
			};
			(_3029_n)++;
			_3039_i=static_cast<jule::I64>((_3059_j + _29818_sub.len()));
		}
	_iter_next_1ad728933:;
	}
	_iter_end_1ad728933:;;
	return _3029_n;;
}



inline jule::Str _1a7c3d37c_Replace(jule::Str _31812_s, jule::Str _31820_sub, jule::Str _31830_new, jule::I64 _31844_n) {
	if (((_31844_n == 0LL) || (_31820_sub == _31830_new))) {
		return _31812_s;;
	};
	jule::I64 _3235_m = _1a7c3cd93_Count(_31812_s, _31820_sub);;
	if ((_3235_m == 0LL)) {
		return _31812_s;;
	};
	if (((_31844_n < 0LL) || (_3235_m < _31844_n))) {
		_31844_n=_3235_m;
	};
	_1a7c4c7ed_StrBuilder _3319_ss = static__1a7c4cb1c_New(static_cast<jule::I64>(((_31812_s.len() + (_31844_n * (_31830_new.len() - _31820_sub.len()))) + 1LL)));;
	jule::I64 _3329_i = 0LL;;
	for (; (_31844_n > 0LL); (_31844_n)--) {
		{
			jule::I64 _3349_j = _1a7c381bd_FindAt(_31812_s, _31820_sub, _3329_i);;
			if ((_3349_j == -1LL)) {
				goto _iter_end_1ad72c56e;
			};
			_1a7c573c9_WriteStr(&_3319_ss, _31812_s.slice(_3329_i, _3349_j));
			_1a7c573c9_WriteStr(&_3319_ss, _31830_new);
			_3329_i=static_cast<jule::I64>((_3349_j + _31820_sub.len()));
		}
	_iter_next_1ad72c56e:;
	}
	_iter_end_1ad72c56e:;;
	_1a7c573c9_WriteStr(&_3319_ss, _31812_s.slice(_3329_i));
	_1a7c57682_WriteByte(&_3319_ss, 0LLU);
	return _1d785a7d8_StrFromBytes(_1a7c58672_Buf(&_3319_ss).slice(0LL, (_1a7c58155_Len(&_3319_ss) - 1LL)));;
}



inline void _1a7c3e070_trimLeft(jule::Slice<jule::U8>* _37518_s, jule::Str _37529_cutset) {
	jule::I64 _3769_i = 0LL;;
	while ((_3769_i < (*(_37518_s)).len())) {
		{
			jule::I32 _3789_r = 0;;
			jule::I64 _37812_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune((*(_37518_s)).slice(_3769_i));
				_3789_r = __jule_assign_result.__jule_result_arg0;
				_37812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a7c3ab82_FindRune(_37529_cutset, _3789_r) == -1LL)) {
				((*(_37518_s))).mut_slice(_3769_i);;
				return;;
			};
			_3769_i+=_37812_n;
		}
	_iter_next_1ad7336c9:;
	}
	_iter_end_1ad7336c9:;;
	(*(_37518_s))=nullptr;
}



inline jule::Str _1a7c3e3e4_TrimLeft(jule::Str _39013_s, jule::Str _39021_cutset) {
	jule::Slice<jule::U8> _3919_bytes = _1d785a255_StrBytes(_39013_s);;
	_1a7c3e070_trimLeft(&(_3919_bytes), _39021_cutset);
	return static_cast<jule::Str>(_3919_bytes);;
}



inline void _1a7c3a81e_trimRight(jule::Slice<jule::U8>* _39619_s, jule::Str _39630_cutset) {
	jule::I64 _3979_i = (*(_39619_s)).len();;
	while ((_3979_i > 0LL)) {
		{
			jule::I32 _3999_r = 0;;
			jule::I64 _39912_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be71d2_DecodeLastRune((*(_39619_s)).slice(0LL, _3979_i));
				_3999_r = __jule_assign_result.__jule_result_arg0;
				_39912_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a7c3ab82_FindRune(_39630_cutset, _3999_r) == -1LL)) {
				((*(_39619_s))).mut_slice(0LL, _3979_i);;
				return;;
			};
			_3979_i-=_39912_n;
		}
	_iter_next_1ad735db3:;
	}
	_iter_end_1ad735db3:;;
	(*(_39619_s))=nullptr;
}



inline jule::Str _1a7c4000a_Trim(jule::Str _4199_s, jule::Str _41917_cutset) {
	jule::Slice<jule::U8> _4209_bytes = _1d785a255_StrBytes(_4199_s);;
	_1a7c3e070_trimLeft(&(_4209_bytes), _41917_cutset);
	_1a7c3a81e_trimRight(&(_4209_bytes), _41917_cutset);
	return static_cast<jule::Str>(_4209_bytes);;
}



inline jule::Str _1a7c4037e_Join(jule::Slice<jule::Str> _4289_parts, jule::Str _42823_sep) {
	{
		auto _match_expr{ _4289_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ad73925c:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ad7392d4:;
			{
				return _4289_parts[0LL];;
			}
		}
		_match_end_1ad739070:;
	};
	jule::I64 _4359_n = 0LL;;
	{
		auto expr = &(_4289_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7396ad:;
		if (it != expr_end) {
			jule::Str *_43612_part = it;
			{
				_4359_n+=(*(_43612_part)).len();
				(_4359_n)++;
			}
			_iter_next_1ad7396ad:;
			++it;
			goto _iter_begin_1ad7396ad;
		}
		_iter_end_1ad7396ad:;
	};
	_1a7c4c7ed_StrBuilder _4409_s = static__1a7c4cb1c_New(static_cast<jule::I64>((_4359_n + 1LL)));;
	_1a7c573c9_WriteStr(&_4409_s, _4289_parts[0LL]);
	{
		auto expr = _4289_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad73ad52:;
		if (it != expr_end) {
			jule::Str *_44212_part = it;
			{
				_1a7c573c9_WriteStr(&_4409_s, _42823_sep);
				_1a7c573c9_WriteStr(&_4409_s, (*(_44212_part)));
			}
			_iter_next_1ad73ad52:;
			++it;
			goto _iter_begin_1ad73ad52;
		}
		_iter_end_1ad73ad52:;
	};
	_1a7c57682_WriteByte(&_4409_s, 0LLU);
	return _1d785a7d8_StrFromBytes(_1a7c58672_Buf(&_4409_s).slice(0LL, (_1a7c58155_Len(&_4409_s) - 1LL)));;
}



inline jule::Str _1a7c5a0e1_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _1a7c5cde6_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _1a7c5c81e_IsPathSep(_1105_originalPath[0LL])) && _1a7c5c81e_IsPathSep(_1105_originalPath[1LL]))) {
			return _1a7c5a6b8_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _1a7c5c81e_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_1a7c59255_lazyBuff _1289_out = _1a7c59255_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_1a7c59992_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_1a7c5c81e_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1ad74cc10:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _1a7c5c81e_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1ad749745:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _1a7c5c81e_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1ad7497ab:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1ad750c79:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_1a7c5c81e_IsPathSep(static_cast<jule::U8>(_1a7c596d9_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1ad75150a:;
									}
									_iter_end_1ad75150a:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1ad750d01:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_1a7c59992_append(&_1289_out, 47LLU);
									};
									_1a7c59992_append(&_1289_out, '.');
									_1a7c59992_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1ad75099e:;
						};
					}
				}
				else {
					_case_begin_1ad7496ce:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_1a7c59992_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_1a7c5c81e_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_1a7c59992_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1ad74c704:;
						}
						_iter_end_1ad74c704:;;
					}
				}
				_match_end_1ad74939e:;
			};
		}
	_iter_next_1ad747798:;
	}
	_iter_end_1ad747798:;;
	if ((_1289_out._field_w == 0LL)) {
		_1a7c59992_append(&_1289_out, '.');
	};
	return _1a7c5a6b8_FromSlash(_1a7c59c28_string(&_1289_out));;
}



inline jule::Str _1a7c5a6b8_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1a7c5a971_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1a7c5d501_join(_2269_elem);;
}



inline jule::Str _1a7c5ac3a_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_1a7c5c81e_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1ad754882:;
	}
	_iter_end_1ad754882:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1a7c5b004_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7c5d237_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _1a7c5b2bd_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _1a7c5c81e_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1ad756ee4:;
	}
	_iter_end_1ad756ee4:;;
	(_25513_path).mut_slice(_1a7c5b92d_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_1a7c5c81e_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1ad758688:;
	}
	_iter_end_1ad758688:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1a7c5b664_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _1a7c5b92d_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_1a7c5c81e_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1ad75a767:;
	}
	_iter_end_1ad75a767:;;
	jule::Str _2925_dir = _1a7c5a0e1_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _1a7c5b92d_VolumeName(jule::Str _30415_path) {
	return _1a7c5a6b8_FromSlash(_30415_path.slice(0LL, _1a7c5cde6_volumeNameLen(_30415_path)));;
}



inline jule::Bool _1a7c5c81e_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1a7c5cb2c_IsAbs(jule::Str _5310_path) {
	return _1a7c37497_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1a7c5cde6_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1a7c5d237_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1a7c5cb2c_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1a7c5a0e1_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _1d7884e2d_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1a7c5d501_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1a7c5d501_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad763dbe:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _1a7c5a0e1_Clean(_1a7c4037e_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1ad763dbe:;
			++it;
			_749_i++;
			goto _iter_begin_1ad763dbe;
		}
		_iter_end_1ad763dbe:;
	};
	return jule::Str();;
}



inline jule::I64 _1d7b518ae_getLastFsError(void) {
	jule::I64 _725_err = _1d7a78c7b_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ad77176c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ad770e42:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ad77111d:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ad771184:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ad7711ea:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ad771261:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1ad77189e:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ad771915:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ad77197b:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ad7719e2:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ad771a69:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ad771ae1:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ad771b68:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ad771be0:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ad771c67:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ad771cde:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ad771d66:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ad771ddd:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ad771e65:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ad771edc:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ad772064:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ad7720db:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ad772163:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ad7721da:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ad772262:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1ad7722d9:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1ad772361:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1ad7723d8:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1ad7710a7:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ad771052:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a7e05962_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _89_neg = ((*(_722_b)) == '-');;
	if (_89_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1ad796693:;
	}
	_iter_end_1ad796693:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_89_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _1a7e0e76d_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1a7e0ea7b_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_89_x))))));;
	};
	return _1a7e0ea7b_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_89_x)));;
}



inline jule::Str _1a7e0ea7b_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(21LL, 21LL, 0);;
	jule::I64 _219_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU))));
			(_219_i)++;
			_1613_x=_239_q;
		}
	_iter_next_1ad79d249:;
	}
	_iter_end_1ad79d249:;;
	_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1613_x)));
	(_219_i)++;
	{ jule::Slice<jule::U8> &__jule_push_dest = _209_buf; __jule_push_dest.push(0LLU); };
	(_209_buf).mut_slice(0LL, _219_i);;
	_1a7e0ecac_rev(&(_209_buf));
	return _1d785a7d8_StrFromBytes(_209_buf);;
}



inline void _1a7e0ecac_rev(jule::Slice<jule::U8>* _3713_b) {
	jule::I64 _389_i = 0LL;;
	for (; (_389_i < ((*(_3713_b)).len() >> 1LL)); (_389_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3713_b))[(((*(_3713_b)).len() - 1LL) - _389_i)];
				jule::U8 _1___jule_assign_arg = (*(_3713_b))[_389_i];
				(*(_3713_b))[_389_i] = ___jule_assign_arg;
				(*(_3713_b))[(((*(_3713_b)).len() - 1LL) - _389_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1ad7a1d74:;
	}
	_iter_end_1ad7a1d74:;;
}



inline jule::Slice<char*> _1a7e13354_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7bc950:;
		if (it != expr_end) {
			jule::I64 _379_i = it - expr->begin();
			{
				_369_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1ad7bc950:;
			++it;
			_379_i++;
			goto _iter_begin_1ad7bc950;
		}
		_iter_end_1ad7bc950:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _1a7e136c8_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _455_cargv = _1a7e13354_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_455_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _1a7e13909_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7c0920:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I64 _549_i = _1a7c36573_FindByteStr((*(_5312_env)), '=');;
				if ((_549_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5913_key = (*(_5312_env)).slice(0LL, _549_i);;
					if ((((*(_5312_env)).len() - _549_i) == 1LL)) {
						jule::Str _6117_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6617_val = (*(_5312_env)).slice((_549_i + 1LL));;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1ad7c0920:;
			++it;
			goto _iter_begin_1ad7c0920;
		}
		_iter_end_1ad7c0920:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _1a7e14883_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1ad7c12c2:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ad7c0c1c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1ad7c1de9:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1ad7c53b4:;
	};
}



inline jule::I64 _1a7e14ad6_getLastProcessError(void) {
	return _1a7e14883_processErrorFromCode(static_cast<jule::I64>(_1d7a78c7b_GetLastErrno()));;
}



inline void _1a7e15400_Exit(jule::I64 _129_code) {
	_1d7b26983_Exit(_129_code);
}



inline jule::Str _1a7e1560e_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1a7ce8514_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1a7ce87de_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1a7c5edd7_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7ed82c:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ad7ed82c:;
			++it;
			goto _iter_begin_1ad7ed82c;
		}
		_iter_end_1ad7ed82c:;
	};
	return false;;
}



inline jule::Bool _1a7ce8aa8_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1a7ce6600_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7ee83e:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1ad7ee83e:;
			++it;
			goto _iter_begin_1ad7ee83e;
		}
		_iter_end_1ad7ee83e:;
	};
	{
		auto expr = &(_1a7ce68b9_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7edc4a:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1ad7edc4a:;
			++it;
			goto _iter_begin_1ad7edc4a;
		}
		_iter_end_1ad7edc4a:;
	};
	return false;;
}



inline jule::Str _1a7d06005_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1a7d06995_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1a7d06313_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ad8006ca:;
			{
				return _32613_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ad8016ed:;
			{
				return jule::Str::from_byte(_32613_arg.cast<jule::U8>(&__jule_any_type129));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ad801764:;
			{
				return jule::Str::from_rune(_32613_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1ad801126:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1ad8010c1:;
	};
}



inline jule::I64 _1a7d065cc_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8024ce:;
		if (it != expr_end) {
			jule::I64 _3409_i = it - expr->begin();
			jule::U8 *_34012_b = it;
			{
				if (((*(_34012_b)) == '@')) {
					return _3409_i;;
				};
			}
			_iter_next_1ad8024ce:;
			++it;
			_3409_i++;
			goto _iter_begin_1ad8024ce;
		}
		_iter_end_1ad8024ce:;
	};
	return -1LL;;
}



inline jule::Str _1a7d06995_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_1a7c4c7ed_StrBuilder _3499_s = static__1a7c4cb1c_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad803139:;
		if (it != expr_end) {
			jule::Any *_35012_arg = it;
			{
				jule::I64 _3519_i = _1a7d065cc_findNextFmt(_34817_fmt);;
				if ((_3519_i == -1LL)) {
					goto _iter_end_1ad803139;
				};
				_1a7c573c9_WriteStr(&_3499_s, _34817_fmt.slice(0LL, _3519_i));
				_1a7c573c9_WriteStr(&_3499_s, _1a7d06313_argToStr((*(_35012_arg))));
				(_34817_fmt).mut_slice((_3519_i + 1LL));;
			}
			_iter_next_1ad803139:;
			++it;
			goto _iter_begin_1ad803139;
		}
		_iter_end_1ad803139:;
	};
	_1a7c573c9_WriteStr(&_3499_s, _34817_fmt);
	return _1a7c57bc1_Str(&_3499_s);;
}



inline jule::Bool _1a7d0780e_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1a7d08c61_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1a7d0903b_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1a7d09305_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1a7d09646_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1a7d09910_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1a7d09bc9_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1a7d09e93_IsUnix(jule::Str _5511_os) {
	return (_1a7d0903b_IsDarwin(_5511_os) || _1a7d09305_IsLinux(_5511_os));;
}



inline jule::Bool _1a7d0a339_Is32Bit(jule::Str _5812_arch) {
	return _1a7d09646_IsI386(_5812_arch);;
}



inline jule::Bool _1a7d0a603_Is64Bit(jule::Str _6112_arch) {
	return (_1a7d09910_IsAmd64(_6112_arch) || _1a7d09bc9_IsArm64(_6112_arch));;
}



inline void _1a7e168da_init(void) {
	jule::Str _259_path = _1a7e1560e_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1a7e15e17_PathWd=({
			auto except = _1d7884e2d_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1a7e15b5e_PathExec=_1a7c5b664_Dir(_259_path);
		_1a7e1590b_PathStdlib=_1a7c5a971_Join(jule::Slice<jule::Str>::make({_1a7e15b5e_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1a7e16225_PathApi=_1a7c5a971_Join(jule::Slice<jule::Str>::make({_1a7e15b5e_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1a8c859cd_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1a8c8d3cb_Len64(_6119_x)));;
}



inline jule::I64 _1a8c86935_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1a8c8765b_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1a8c87392_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a8c860e9__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1a8c8765b_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a8c866b0__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1a8c8d112_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x)))));
	return __jule_func_result;;
}



inline jule::I64 _1a8c8d3cb_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x)))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a8c8e168_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a8c90972_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1a875b1b8_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a875b4c6_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a875b790_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a875bad1_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a875e188_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ad67dde9:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a8c9879e_IsInf(_4714_f, 0LL) || _1a8c98194_IsNaN(_4714_f)) {
			_case_begin_1ad67de71:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ad67dd1c:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a8c98a68_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1a875b790_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a875bad1_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _1a8c97d86_NaN(void) {
	return static_cast<jule::F64>(_1a875bad1_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1a8c98194_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1a8c9845d_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a875bad1_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1a875bad1_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1a8c9879e_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a8c98a68_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a8c9b043_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a8c9a54d_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a8c98194_IsNaN(_1118_x) || _1a8c9879e_IsInf(_1118_x, 1LL)) {
			_case_begin_1ad56c5e0:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ad56c667:;
			{
				return static_cast<jule::F64>(_1a8c97d86_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ad56c6de:;
			{
				return static_cast<jule::F64>(_1a8c9845d_Inf(-1LL));;
			}
		}
		_match_end_1ad56c524:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a875e188_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _1a8c9b043_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1a875bad1_F64FromBits(static_cast<jule::U64>((_1a875b790_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a8ca2c3c_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1a8c9b043_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1ada09ecd:;
		}
		_iter_end_1ada09ecd:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _1a8ca3545_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a875e188_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1a8c9a54d_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _1a8ccca69_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	jule::Slice<jule::U8> _839_bytes = _1a8ccd152_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1a8cd1584_max(static_cast<jule::I64>(((_7932_prec + 4LL) + 1LL)), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize);;
	{ jule::Slice<jule::U8> &__jule_push_dest = _839_bytes; __jule_push_dest.push(0LLU); };
	return _1d785a7d8_StrFromBytes(_839_bytes.slice(0LL, (_839_bytes.len() - 1LL)));;
}



inline jule::Slice<jule::U8> _1a8ccd152_genericFtoa(jule::Slice<jule::U8> _8820_dst, jule::F64 _8833_val, jule::U8 _8843_fmt, jule::I64 _8858_prec, jule::I64 _8869_bitSize) {
	jule::U64 _899_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a8ccb9be_floatInfo> _9013_flt = nullptr;;
	{
		auto &_match_expr{ _8869_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1adbd2ace:;
			{
				_899_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a875b1b8_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8833_val)))));
				_9013_flt=((jule::Ptr<_1a8ccb9be_floatInfo>)((&(_1a8ccbccc_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1adbd2903:;
			{
				_899_bits=static_cast<jule::U64>(_1a875b790_F64Bits(_8833_val));
				_9013_flt=((jule::Ptr<_1a8ccb9be_floatInfo>)((&(_1a8ccc041_f64info))));
			}
		}
		else {
			_case_begin_1adbd2271:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:99:9"));;
			}
		}
		_match_end_1adbd221b:;
	};
	jule::Bool _1025_neg = ((_899_bits >> ((*(_9013_flt))._field_expbits + (*(_9013_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _1039_exp = (static_cast<jule::I64>((_899_bits >> (*(_9013_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_9013_flt))._field_expbits) - 1LL)));;
	jule::U64 _1049_mant = (_899_bits & ((static_cast<jule::U64>(1LLU) << (*(_9013_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1039_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_9013_flt))._field_expbits) - 1LL)))) {
			_case_begin_1adbd6709:;
			{
				{
					
					if ((_1049_mant != 0LLU)) {
						_case_begin_1adbd84b9:;
						{
							return jule::append(_8820_dst,_1d785a255_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1025_neg) {
						_case_begin_1adbd781a:;
						{
							return jule::append(_8820_dst,_1d785a255_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_1adbd77a4:;
						{
							return jule::append(_8820_dst,_1d785a255_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_1adbd76d8:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1adbd683b:;
			{
				(_1039_exp)++;
			}
		}
		else {
			_case_begin_1adbd5917:;
			{
				_1049_mant|=(static_cast<jule::U64>(1LLU) << (*(_9013_flt))._field_mantbits);
			}
		}
		_match_end_1adbd5a7c:;
	};
	_1039_exp+=(*(_9013_flt))._field_bias;
	if ((_8843_fmt == 'b')) {
		return _1a8cd0682_fmtB(_8820_dst, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	if (((_8843_fmt == 'x') || (_8843_fmt == 'X'))) {
		return _1a8cd0d8b_fmtX(_8820_dst, _8858_prec, _8843_fmt, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	;
	_1a8ccc4d6_decimalSlice _1389_digs = _1a8ccc4d6_decimalSlice{};;
	jule::Bool _1399_ok = false;;
	jule::Bool _1415_shortest = (_8858_prec < 0LL);;
	if (_1415_shortest) {
		_1389_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1a8cdb44b_ryuFtoaShortest(&(_1389_digs), _1049_mant, static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), &((*(_9013_flt))));
		_1399_ok=true;
		{
			auto &_match_expr{ _8843_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1adbdbed4:;
				{
					_8858_prec=static_cast<jule::I64>(_1a8cd1584_max(static_cast<jule::I64>((_1389_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1adbdc04a:;
				{
					_8858_prec=static_cast<jule::I64>(_1a8cd1584_max(static_cast<jule::I64>((_1389_digs._field_nd - _1389_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1adbdc0b1:;
				{
					_8858_prec=_1389_digs._field_nd;
				}
			}
			_match_end_1adbdb1ae:;
		};
	} else if ((_8843_fmt != 'f')) {
		jule::I64 _15813_digits = _8858_prec;;
		{
			auto &_match_expr{ _8843_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1adbddbea:;
				{
					(_15813_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1adbddde8:;
				{
					if ((_8858_prec == 0LL)) {
						_8858_prec=1LL;
					};
					_15813_digits=_8858_prec;
				}
			}
			else {
				_case_begin_1adbddd82:;
				{
					_15813_digits=1LL;
				}
			}
			_match_end_1adbddd2c:;
		};
		if (((_8869_bitSize == 32LL) && (_15813_digits <= 9LL))) {
			_1389_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1a8cda181_ryuFtoaFixed32(&(_1389_digs), static_cast<jule::U32>(static_cast<jule::U32>(_1049_mant)), static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), _15813_digits);
			_1399_ok=true;
		} else if ((_15813_digits <= 18LL)) {
			_1389_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1a8cda626_ryuFtoaFixed64(&(_1389_digs), _1049_mant, static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), _15813_digits);
			_1399_ok=true;
		};
	};
	if ((!(_1399_ok))) {
		return _1a8ccd85b_bigFtoa(_8820_dst, _8858_prec, _8843_fmt, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	return _1a8cce032_fmtDigits(_8820_dst, _1415_shortest, _1025_neg, _1389_digs, _8858_prec, _8843_fmt);;
}



inline jule::Slice<jule::U8> _1a8ccd85b_bigFtoa(jule::Slice<jule::U8> _18816_dst, jule::I64 _18833_prec, jule::U8 _18844_fmt, jule::Bool _18855_neg, jule::U64 _1895_mant, jule::I64 _18916_exp, _1a8ccb9be_floatInfo* _18927_flt) {
	_1a8ce0263_decimal _1909_d = _1a8ce0263_decimal{};;
	_1a8ce061a_assign(&_1909_d, _1895_mant);
	_1a8ce08c3_shift(&_1909_d, static_cast<jule::I64>((_18916_exp - static_cast<jule::I64>((*(_18927_flt))._field_mantbits))));
	_1a8ccc4d6_decimalSlice _1939_digs = _1a8ccc4d6_decimalSlice{};;
	jule::Bool _1945_shortest = (_18833_prec < 0LL);;
	if (_1945_shortest) {
		_1a8cce483_roundShortest(&(_1909_d), _1895_mant, _18916_exp, _18927_flt);
		_1939_digs=_1a8ccc4d6_decimalSlice{._field_d=_1909_d._field_d.slice(0LL), ._field_nd=_1909_d._field_nd, ._field_dp=_1909_d._field_dp, };
		{
			auto &_match_expr{ _18844_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1adbe51a7:;
				{
					_18833_prec=static_cast<jule::I64>((_1939_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1adbe5e88:;
				{
					_18833_prec=static_cast<jule::I64>(_1a8cd1584_max(static_cast<jule::I64>((_1939_digs._field_nd - _1939_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1adbe5eee:;
				{
					_18833_prec=_1939_digs._field_nd;
				}
			}
			_match_end_1adbe5d34:;
		};
	} else {
		{
			auto &_match_expr{ _18844_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1adbe4e87:;
				{
					_1a8ce11dc_round(&_1909_d, static_cast<jule::I64>((_18833_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1adbe500e:;
				{
					_1a8ce11dc_round(&_1909_d, static_cast<jule::I64>((_1909_d._field_dp + _18833_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1adbe5086:;
				{
					if ((_18833_prec == 0LL)) {
						_18833_prec=1LL;
					};
					_1a8ce11dc_round(&_1909_d, _18833_prec);
				}
			}
			_match_end_1adbe7682:;
		};
		_1939_digs=_1a8ccc4d6_decimalSlice{._field_d=_1909_d._field_d.slice(0LL), ._field_nd=_1909_d._field_nd, ._field_dp=_1909_d._field_dp, };
	};
	return _1a8cce032_fmtDigits(_18816_dst, _1945_shortest, _18855_neg, _1939_digs, _18833_prec, _18844_fmt);;
}



inline jule::Slice<jule::U8> _1a8cce032_fmtDigits(jule::Slice<jule::U8> _22518_dst, jule::Bool _22531_shortest, jule::Bool _22547_neg, _1a8ccc4d6_decimalSlice _2265_digs, jule::I64 _22629_prec, jule::U8 _22640_fmt) {
	{
		auto &_match_expr{ _22640_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1adbea9c6:;
			{
				return _1a8ccea27_fmtE(_22518_dst, _22547_neg, _2265_digs, _22629_prec, _22640_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1adbeaa3c:;
			{
				return _1a8cd0011_fmtF(_22518_dst, _22547_neg, _2265_digs, _22629_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1adbeaaa3:;
			{
				jule::I64 _23413_eprec = _22629_prec;;
				if (((_23413_eprec > _2265_digs._field_nd) && (_2265_digs._field_nd >= _2265_digs._field_dp))) {
					_23413_eprec=_2265_digs._field_nd;
				};
				if (_22531_shortest) {
					_23413_eprec=6LL;
				};
				jule::I64 _2449_exp = (_2265_digs._field_dp - 1LL);;
				if (((_2449_exp < -4LL) || (_2449_exp >= _23413_eprec))) {
					if ((_22629_prec > _2265_digs._field_nd)) {
						_22629_prec=_2265_digs._field_nd;
					};
					return _1a8ccea27_fmtE(_22518_dst, _22547_neg, _2265_digs, static_cast<jule::I64>((_22629_prec - 1LL)), static_cast<jule::U8>(((_22640_fmt + 'e') - 'g')));;
				};
				if ((_22629_prec > _2265_digs._field_dp)) {
					_22629_prec=_2265_digs._field_nd;
				};
				return _1a8cd0011_fmtF(_22518_dst, _22547_neg, _2265_digs, static_cast<jule::I64>(_1a8cd1584_max(static_cast<jule::I64>((_22629_prec - _2265_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1adbea8d8:;
	};
	return jule::append(_22518_dst,jule::Slice<jule::U8>::make({'%',_22640_fmt}));;
}



inline void _1a8cce483_roundShortest(_1a8ce0263_decimal* _26323_d, jule::U64 _26335_mant, jule::I64 _26346_exp, _1a8ccb9be_floatInfo* _26357_flt) {
	if ((_26335_mant == 0LLU)) {
		(*(_26323_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2845_minexp = ((*(_26357_flt))._field_bias + 1LL);;
	if (((_26346_exp > _2845_minexp) && ((332LL * ((*(_26323_d))._field_dp - (*(_26323_d))._field_nd)) >= (100LL * (_26346_exp - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)))))) {
		return;;
	};
	_1a8ce0263_decimal _2939_upper = _1a8ce0263_decimal{};;
	_1a8ce061a_assign(&_2939_upper, static_cast<jule::U64>(((_26335_mant << 1LLU) + 1LLU)));
	_1a8ce08c3_shift(&_2939_upper, static_cast<jule::I64>(((_26346_exp - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)) - 1LL)));
	jule::U64 _3039_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3049_explo = 0LL;;
	if (((_26335_mant > (1LLU << (*(_26357_flt))._field_mantbits)) || (_26346_exp == _2845_minexp))) {
		_3039_mantlo=static_cast<jule::U64>((_26335_mant - 1LLU));
		_3049_explo=_26346_exp;
	} else {
		_3039_mantlo=static_cast<jule::U64>(((_26335_mant << 1LLU) - 1LLU));
		_3049_explo=static_cast<jule::I64>((_26346_exp - 1LL));
	};
	_1a8ce0263_decimal _3129_lower = _1a8ce0263_decimal{};;
	_1a8ce061a_assign(&_3129_lower, static_cast<jule::U64>(((_3039_mantlo << 1LLU) + 1LLU)));
	_1a8ce08c3_shift(&_3129_lower, static_cast<jule::I64>(((_3049_explo - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3195_inclusive = ((_26335_mant & 1LL) == 0LLU);;
	jule::U8 _3329_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3369_ui = 0LL;;
	for (; ; (_3369_ui)++) {
		{
			jule::I64 _3419_mi = ((_3369_ui - _2939_upper._field_dp) + (*(_26323_d))._field_dp);;
			if ((_3419_mi >= (*(_26323_d))._field_nd)) {
				goto _iter_end_1adc076d6;
			};
			jule::I64 _3459_li = ((_3369_ui - _2939_upper._field_dp) + _3129_lower._field_dp);;
			jule::U8 _34613_l = static_cast<jule::U8>(48LLU);;
			if (((_3459_li >= 0LL) && (_3459_li < _3129_lower._field_nd))) {
				_34613_l=_3129_lower._field_d[_3459_li];
			};
			jule::U8 _35013_m = static_cast<jule::U8>(48LLU);;
			if ((_3419_mi >= 0LL)) {
				_35013_m=(*(_26323_d))._field_d[_3419_mi];
			};
			jule::U8 _35413_u = static_cast<jule::U8>(48LLU);;
			if ((_3369_ui < _2939_upper._field_nd)) {
				_35413_u=_2939_upper._field_d[_3369_ui];
			};
			jule::Bool _3629_okdown = ((_34613_l != _35013_m) || (_3195_inclusive && ((_3459_li + 1LL) == _3129_lower._field_nd)));;
			{
				
				if (((_3329_upperdelta == 0LLU) && ((_35013_m + 1LLU) < _35413_u))) {
					_case_begin_1adc0c279:;
					{
						_3329_upperdelta=2LLU;
					}
				}
				else if (((_3329_upperdelta == 0LLU) && (_35013_m != _35413_u))) {
					_case_begin_1adc0c2e0:;
					{
						_3329_upperdelta=1LLU;
					}
				}
				else if (((_3329_upperdelta == 1LLU) && ((_35013_m != '9') || (_35413_u != '0')))) {
					_case_begin_1adc0c356:;
					{
						_3329_upperdelta=2LLU;
					}
				}
				_match_end_1adc0c1d0:;
			};
			jule::Bool _3839_okup = ((_3329_upperdelta > 0LLU) && ((_3195_inclusive || (_3329_upperdelta > 1LLU)) || ((_3369_ui + 1LL) < _2939_upper._field_nd)));;
			{
				
				if ((_3629_okdown && _3839_okup)) {
					_case_begin_1adc0ed5e:;
					{
						_1a8ce11dc_round(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				else if (_3629_okdown) {
					_case_begin_1adc0edc5:;
					{
						_1a8ce0b7b_roundDown(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				else if (_3839_okup) {
					_case_begin_1adc0ee3b:;
					{
						_1a8ce0e34_roundUp(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				_match_end_1adc0ecb5:;
			};
		}
	_iter_next_1adc076d6:;
	}
	_iter_end_1adc076d6:;;
}



inline jule::Slice<jule::U8> _1a8ccea27_fmtE(jule::Slice<jule::U8> _40213_dst, jule::Bool _40226_neg, _1a8ccc4d6_decimalSlice _40237_d, jule::I64 _40254_prec, jule::U8 _40265_fmt) {
	if (_40226_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4099_ch = '0';;
	if ((_40237_d._field_nd != 0LL)) {
		_4099_ch=_40237_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_4099_ch); };
	if ((_40254_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('.'); };
		jule::I64 _41813_i = 1LL;;
		jule::I64 _4199_m = _1a8cd1210_min(_40237_d._field_nd, static_cast<jule::I64>((_40254_prec + 1LL)));;
		if ((_41813_i < _4199_m)) {
			(_40213_dst).append(_40237_d._field_d.slice(_41813_i, _4199_m));;
			_41813_i=_4199_m;
		};
		for (; (_41813_i <= _40254_prec); (_41813_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1adc1489c:;
		}
		_iter_end_1adc1489c:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_40265_fmt); };
	jule::I64 _4319_exp = (_40237_d._field_dp - 1LL);;
	if ((_40237_d._field_nd == 0LL)) {
		_4319_exp=0LL;
	};
	if ((_4319_exp < 0LL)) {
		_4099_ch='-';
		_4319_exp=static_cast<jule::I64>((-(_4319_exp)));
	} else {
		_4099_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_4099_ch); };
	{
		
		if ((_4319_exp < 10LL)) {
			_case_begin_1adc18021:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4319_exp) + '0'))); };
			}
		}
		else if ((_4319_exp < 100LL)) {
			_case_begin_1adc168e3:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1adc1687c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4319_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1adc15b45:;
	};
	return _40213_dst;;
}



inline jule::Slice<jule::U8> _1a8cd0011_fmtF(jule::Slice<jule::U8> _45713_dst, jule::Bool _45726_neg, _1a8ccc4d6_decimalSlice _45737_d, jule::I64 _45754_prec) {
	if (_45726_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('-'); };
	};
	if ((_45737_d._field_dp > 0LL)) {
		jule::I64 _46513_m = _1a8cd1210_min(_45737_d._field_nd, _45737_d._field_dp);;
		(_45713_dst).append(_45737_d._field_d.slice(0LL, _46513_m));;
		for (; (_46513_m < _45737_d._field_dp); (_46513_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1adc1a3ca:;
		}
		_iter_end_1adc1a3ca:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('0'); };
	};
	if ((_45754_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('.'); };
		jule::I64 _47613_i = 0LL;;
		for (; (_47613_i < _45754_prec); (_47613_i)++) {
			{
				jule::U8 _47817_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47913_j = (_45737_d._field_dp + _47613_i);;
				if (((0LL <= _47913_j) && (_47913_j < _45737_d._field_nd))) {
					_47817_ch=_45737_d._field_d[_47913_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push(_47817_ch); };
			}
		_iter_next_1adc1bc06:;
		}
		_iter_end_1adc1bc06:;;
	};
	return _45713_dst;;
}



inline jule::Slice<jule::U8> _1a8cd0682_fmtB(jule::Slice<jule::U8> _49013_dst, jule::Bool _49026_neg, jule::U64 _49037_mant, jule::I64 _49052_exp, _1a8ccb9be_floatInfo* _49063_flt) {
	if (_49026_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a8ce5598_fmtBits(_49013_dst, _49037_mant, 10LL, false, true);
		_49013_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('p'); };
	_49052_exp-=static_cast<jule::I64>((*(_49063_flt))._field_mantbits);
	if ((_49052_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a8ce5598_fmtBits(_49013_dst, static_cast<jule::U64>(static_cast<jule::U64>(_49052_exp)), 10LL, (_49052_exp < 0LL), true);
		_49013_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _49013_dst;;
}



inline jule::Slice<jule::U8> _1a8cd0d8b_fmtX(jule::Slice<jule::U8> _51213_dst, jule::I64 _51226_prec, jule::U8 _51237_fmt, jule::Bool _51248_neg, jule::U64 _5139_mant, jule::I64 _51324_exp, _1a8ccb9be_floatInfo* _51335_flt) {
	if ((_5139_mant == 0LLU)) {
		_51324_exp=0LL;
	};
	_5139_mant<<=(60LLU - (*(_51335_flt))._field_mantbits);
	while (((_5139_mant != 0LLU) && ((_5139_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5139_mant<<=1LLU;
			(_51324_exp)--;
		}
	_iter_next_1adc1ed5d:;
	}
	_iter_end_1adc1ed5d:;;
	if (((_51226_prec >= 0LL) && (_51226_prec < 15LL))) {
		jule::U64 _5279_shift = static_cast<jule::U64>((_51226_prec << 2LLU));;
		jule::U64 _5289_extra = ((_5139_mant << _5279_shift) & 1152921504606846975LLU);;
		_5139_mant>>=(60LLU - _5279_shift);
		if (((_5289_extra | (_5139_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5139_mant)++;
		};
		_5139_mant<<=(60LLU - _5279_shift);
		if (((_5139_mant & 2305843009213693952LLU) != 0LLU)) {
			_5139_mant>>=1LLU;
			(_51324_exp)++;
		};
	};
	jule::Str _5419_hex = jule::Str();;
	if ((_51237_fmt == 'X')) {
		_5419_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5419_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51248_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51237_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5139_mant >> 60LLU) & 1LLU))))); };
	_5139_mant<<=4LLU;
	if (((_51226_prec < 0LL) && (_5139_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('.'); };
		while ((_5139_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5419_hex[static_cast<jule::I64>(((_5139_mant >> 60LLU) & 15LLU))]); };
				_5139_mant<<=4LLU;
			}
		_iter_next_1adc2798c:;
		}
		_iter_end_1adc2798c:;;
	} else if ((_51226_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('.'); };
		jule::I64 _56413_i = 0LL;;
		for (; (_56413_i < _51226_prec); (_56413_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5419_hex[static_cast<jule::I64>(((_5139_mant >> 60LLU) & 15LLU))]); };
				_5139_mant<<=4LLU;
			}
		_iter_next_1adc28be1:;
		}
		_iter_end_1adc28be1:;;
	};
	jule::U8 _5729_ch = static_cast<jule::U8>(80LLU);;
	if ((_51237_fmt == _1a8cd20ce_lower(_51237_fmt))) {
		_5729_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5729_ch); };
	if ((_51324_exp < 0LL)) {
		_5729_ch='-';
		_51324_exp=static_cast<jule::I64>((-(_51324_exp)));
	} else {
		_5729_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5729_ch); };
	{
		
		if ((_51324_exp < 100LL)) {
			_case_begin_1adc25ec9:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_51324_exp < 1000LL)) {
			_case_begin_1adc26040:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51324_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1adc2b40d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_51324_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51324_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1adc2a96d:;
	};
	return _51213_dst;;
}



inline jule::I64 _1a8cd1210_min(jule::I64 _5978_a, jule::I64 _59716_b) {
	if ((_5978_a < _59716_b)) {
		return _5978_a;;
	};
	return _59716_b;;
}



inline jule::I64 _1a8cd1584_max(jule::I64 _6048_a, jule::I64 _60416_b) {
	if ((_6048_a > _60416_b)) {
		return _6048_a;;
	};
	return _60416_b;;
}



inline jule::U8 _1a8cd20ce_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1a8862456_ConvError _1a8cd2552_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a8862456_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1adc32722:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1adc32623:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1a8cd20ce_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1adc3416e:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a8cd20ce_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1adc34092:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a8cd20ce_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1adc33c62:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1adc33beb:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1adc33b30:;
					};
				};
			}
		}
		else {
			_case_begin_1adc31aa6:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1adc31e08:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1adc36e52:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1adc37c77:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1adc37c11:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1adc37bab:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1adc37cdd:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1adc39350:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1adc38d00:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc3a098:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1adc3b2ca:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1a8cd20ce_lower(_10912_c)) && (_1a8cd20ce_lower(_10912_c) <= 'z'))) {
						_case_begin_1adc3b1ba:;
						{
							_11013_d=static_cast<jule::U8>(((_1a8cd20ce_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1adc3ace1:;
						{
							goto _iter_next_1adc3a098;
						}
					}
					else {
						_case_begin_1adc3ac7a:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1adc3ac14:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1adc3a098:;
			++it;
			goto _iter_begin_1adc3a098;
		}
		_iter_end_1adc3a098:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a8cd2981_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1a8862456_ConvError __jule_assign_result = _1a8cd2552_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _1a8cd2e37_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1a8862456_ConvError __jule_assign_result = _1a8cd2552_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1a8cd3b2a_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a875bad1_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _1a8c859cd_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c90972_Mul64(_4122_man, _1a8cd4983_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c90972_Mul64(_4122_man, _1a8cd4983_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a875bad1_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a8cd406a_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a875b4c6_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _1a8c859cd_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c90972_Mul64(_11022_man, _1a8cd4983_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c90972_Mul64(_11022_man, _1a8cd4983_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1a875b4c6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1a8cd5db3_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=static_cast<jule::I64>(_4630_s.len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1adc5eb4a:;
	}
	_iter_end_1adc5eb4a:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a8cd61c1_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1adc636cb:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1adc63753;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1adc63753:;
			{
				jule::I64 _8813_caseN = _1a8cd5db3_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a8c9845d_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1adc637ca:;
			{
				if ((_1a8cd5db3_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a8c97d86_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1adc63610:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a8cd648a_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1adc68c97:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1adc6901c:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1adc68e51:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1a8cd20ce_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1adc6e033:;
					{
						goto _iter_next_1adc68703;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1adc6e0aa:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1adc72be6;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1adc68703;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1adc6e132:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1adc68703;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1adc68703;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1a8cd20ce_lower(_1389_c))) && (_1a8cd20ce_lower(_1389_c) <= 'f'))) {
					_case_begin_1adc6e1a9:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1a8cd20ce_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1adc68703;
					}
				}
				_match_end_1adc6de56:;
			};
			goto _iter_end_1adc68703;
		}
	_iter_next_1adc68703:;
	}
	_iter_end_1adc68703:;;
	_julec_label_1adc72be6:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1a8cd20ce_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1adc76b40;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1adc76b40:;
		}
		_iter_end_1adc76b40:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a8cd8019_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1a8ccc041_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1adc80473:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1adc804ea:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a8cd73ae_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1a8cd73ae_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1adc80572:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1a8cd73ae_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1adc7ee23:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a8cd8448_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1a8ccbccc_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1adc84862:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1adc848d9:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a8cd7700_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1a8cd7700_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1adc84961:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1a8cd7700_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1adc84312:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a8862456_ConvError _1a8cd89dc_atofHex(_1a8ccb9be_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a8862456_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1adc88ca6:;
	}
	_iter_end_1adc88ca6:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1adc8a4c2:;
	}
	_iter_end_1adc8a4c2:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1adc8aa44:;
	}
	_iter_end_1adc8aa44:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1a8ccbccc_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1a875b4c6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a875bad1_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a8862456_ConvError _1a8cd8db6_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a8862456_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cd61c1_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cd648a_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a8862456_ConvError __jule_assign_result = _1a8cd89dc_atofHex(&(_1a8ccbccc_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a8cd8448_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a8cd406a_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a8cd406a_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a8ce0263_decimal _6679_d = _1a8ce0263_decimal{};;
	if ((!(_1a8cd6b2d_set(&_6679_d, _1d785a255_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a8cd6e6e_floatBits(&_6679_d, &(_1a8ccbccc_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a875b4c6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError _1a8cd9180_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cd61c1_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cd648a_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a8862456_ConvError __jule_assign_result = _1a8cd89dc_atofHex(&(_1a8ccc041_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a8cd8019_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a8cd3b2a_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a8cd3b2a_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a8ce0263_decimal _7249_d = _1a8ce0263_decimal{};;
	if ((!(_1a8cd6b2d_set(&_7249_d, _1d785a255_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a8cd6e6e_floatBits(&_7249_d, &(_1a8ccc041_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a875bad1_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError _1a8cd9504_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a8862456_ConvError __jule_assign_result = _1a8cd8db6_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError __jule_assign_result = _1a8cd9180_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a8cd9878_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a8862456_ConvError __jule_assign_result = _1a8cd9504_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _1a8cda181_ryuFtoaFixed32(_1a8ccc4d6_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _1a8c8d112_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_1a8cdb715_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd0c9_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1a8cdd87c_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1a8cdae73_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1a8cda626_ryuFtoaFixed64(_1a8ccc4d6_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _1a8c8d3cb_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_1a8cdb715_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd508_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1a8cdd87c_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1a8cdae73_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1a8cdae73_formatDecimal(_1a8ccc4d6_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _1a8cda967_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1ba98858c:;
	}
	_iter_end_1ba98858c:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1ba98b062:;
	}
	_iter_end_1ba98b062:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1ab834755:;
	}
	_iter_end_1ab834755:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _1a8cdb44b_ryuFtoaShortest(_1a8ccc4d6_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a8ccb9be_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a8c8765b_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1a8cdc529_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1a8cdbe0d_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1a8cdc529_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_1a8cdb715_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1a8ccbccc_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd0c9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd0c9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd0c9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd508_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd508_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8cdd508_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1a8cdd87c_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_1a8cdd87c_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_1a8cdd87c_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1a8cdc529_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _1a8cdb715_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1a8cdb9ce_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a8cdbe0d_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a8ccb9be_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1a8cdc529_ryuDigits(_1a8ccc4d6_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a8cddb46_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a8cddb46_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a8cddb46_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1a8cdcb9a_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1a8cdcb9a_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1ab852dd3:;
		}
		_iter_end_1ab852dd3:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_1a8cdcb9a_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ab855941:;
	}
	_iter_end_1ab855941:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1ab855534:;
	}
	_iter_end_1ab855534:;;
}



inline void _1a8cdcb9a_ryuDigits32(_1a8ccc4d6_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1ab85826d;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ab85826d:;
	}
	_iter_end_1ab85826d:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1ab85e62b:;
	}
	_iter_end_1ab85e62b:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a8cdd0c9_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1a8cd4983_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c90972_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1a8cdb9ce_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a8cdd508_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1a8cd4983_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a8cdb9ce_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c90972_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c90972_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a8c8e168_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a8cdd87c_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1ab86cabd:;
	}
	_iter_end_1ab86cabd:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1a8cddb46_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1a8ce1ab1_trim(_1a8ce0263_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1ab871242:;
	}
	_iter_end_1ab871242:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1a8ce1d9c_rightShift(_1a8ce0263_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1ab8749d7:;
				}
				_iter_end_1ab8749d7:;;
				goto _iter_end_1ab872e36;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1ab872e36:;
	}
	_iter_end_1ab872e36:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1ab8767ec:;
	}
	_iter_end_1ab8767ec:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_1ab876a83:;
	}
	_iter_end_1ab876a83:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1a8ce1ab1_trim(_28420_a);
}



inline jule::Bool _1a8ce2353_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1ab87a9cc:;
	}
	_iter_end_1ab87a9cc:;;
	return false;;
}



inline void _1a8ce260b_leftShift(_1a8ce0263_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _1a8cdeb69_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1a8ce2353_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1a8cdeb69_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1ab87dda9:;
	}
	_iter_end_1ab87dda9:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1ab87e43c:;
	}
	_iter_end_1ab87e43c:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1a8ce1ab1_trim(_35219_a);
}



inline jule::Bool _1a8ce2980_shouldRoundUp(_1a8ce0263_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1a8ce4267_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((true && (_6112_i < 100LLU)) && (_6120_base == 10LL))) {
		return _1a8ce4c3a_small(static_cast<jule::I64>(static_cast<jule::I64>(_6112_i)));;
	};
	jule::Str _658_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a8ce5598_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _1a8ce4630_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((true && (0LL <= _7211_i)) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1a8ce4c3a_small(static_cast<jule::I64>(static_cast<jule::I64>(_7211_i)));;
	};
	jule::Str _768_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a8ce5598_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7211_i)), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _1a8ce48e9_Itoa(jule::I64 _819_i) {
	return _1a8ce4630_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_819_i)), 10LL);;
}



inline jule::Str _1a8ce4c3a_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1d785a7d8_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1a8ce5004_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1a8ce5598_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=static_cast<jule::U64>((-(_10533_u)));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1ad891eca:;
			{
				;
				jule::U64 _15413_us = static_cast<jule::U64>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U64 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_15613_is));
					}
				_iter_next_1ad893152:;
				}
				_iter_end_1ad893152:;;
				jule::U64 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1649_is));
				};
			}
		}
		else if (_1a8ce5004_isPowerOfTwo(_10541_base)) {
			_case_begin_1ad890946:;
			{
				jule::U64 _1799_shift = (static_cast<jule::U64>(_1a8c86935_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10541_base)))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1819_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1ad89b29d:;
				}
				_iter_end_1ad89b29d:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1ad8908d0:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1ad89133c:;
				}
				_iter_end_1ad89133c:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1ad89087a:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I64 _2175_n = jule::copy((_1119_a), (_1119_a.slice(_1129_i)));;
	_1119_a[_2175_n]=0LLU;
	__jule_func_result.__jule_result_arg1=_1d785a7d8_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _1a8ce6a94_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ad8b434e:;
			{
				return _1a8ce608d_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ad8b43b5:;
			{
				return _1a8ce6357_SysUint;;
			}
		}
		else {
			_case_begin_1ad8b3d10:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1ad8b1538:;
	};
}



inline jule::I64 _1a8ce6d5d_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ad8b54b5:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ad8b55e7:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ad8b565d:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ad8b56c4:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ad8b573a:;
			{
				return _1a8ce5c80_BitSize;;
			}
		}
		else {
			_case_begin_1ad8b50ca:;
			{
				return -1LL;;
			}
		}
		_match_end_1ad8b5064:;
	};
}



inline jule::Str _1a8ce719e_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ad8b7176:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ad8b7a7d:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ad8b7ae4:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ad8b7b5a:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1ad8b761b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad8b75a5:;
	};
}



inline jule::Str _1a8ce7468_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ad8b7e13:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ad8b8d04:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ad8b8d6a:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ad8b8dd1:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1ad8b87a4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad8b873d:;
	};
}



inline jule::Str _1a8ce7732_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1ad8b919a:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ad8ba08b:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1ad8b9a3b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad8b99c5:;
	};
}



inline jule::Bool _1a8ce837b_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1a8cd9878_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1a8ce8645_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ad8bee81:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ad8bd468:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ad8bd3be:;
	};
}



inline jule::I64 _1a8ce890e_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1ad8c0bda:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1ad8c0c95:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1ad8c0d0b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ad8c0239:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ad8c079a:;
	};
}



inline jule::I64 _1a8ce8bc8_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1ad8c2747:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1ad8c2802:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1ad8c2868:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ad8c2208:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ad8c1ceb:;
	};
}



inline void _1a8ce8d4e_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1a7e167a8_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1ad8c3737:;
				{
					_1a8ce5c80_BitSize=64LLU;
					_1a8ce608d_SysInt=jule::Str::lit("i64", 3);
					_1a8ce6357_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1ad8c379d:;
				{
					_1a8ce5c80_BitSize=32LLU;
					_1a8ce608d_SysInt=jule::Str::lit("i32", 3);
					_1a8ce6357_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1ad8c3638:;
		};
	};
}



inline void _1a8ce8ec5_init(void) {
	_1a8ce8d4e_UpdateTarget();
}



inline jule::I64 _1a8cecd31_MinI(jule::Str _6113_k) {
	_6113_k=_1a8ce6a94_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ad8c29de:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ad8c589e:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ad8c5915:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ad8c597b:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1ad8c2b32:;
			{
				return 0LL;;
			}
		}
		_match_end_1ad8c2acc:;
	};
}



inline jule::I64 _1a8ced13e_MaxI(jule::Str _7913_k) {
	_7913_k=_1a8ce6a94_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ad8c5c23:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ad8c6eaa:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ad8c7021:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ad8c7087:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1ad8c663b:;
			{
				return 0LL;;
			}
		}
		_match_end_1ad8c6d45:;
	};
}



inline jule::U64 _1a8ced408_MaxU(jule::Str _9713_k) {
	_9713_k=_1a8ce6a94_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ad8c732e:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ad8c85b6:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ad8c862c:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ad8c8693:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1ad8c7c47:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ad8c8451:;
	};
}



inline jule::F64 _1a8ced639_Min(jule::Str _11512_k) {
	_11512_k=_1a8ce6a94_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1a8cecd31_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ad8cac6c:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ad8ca6a6:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1ad8ca134:;
			{
				return 0LL;;
			}
		}
		_match_end_1ad8ca3ed:;
	};
}



inline jule::F64 _1a8ced903_Max(jule::Str _13312_k) {
	_13312_k=_1a8ce6a94_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1a8ced13e_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _1a8ced408_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ad8cd0d2:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ad8cca1b:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1ad8cc455:;
			{
				return 0LL;;
			}
		}
		_match_end_1ad8cc763:;
	};
}



inline jule::Bool _1a8cedd76_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1a8cee184_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1a8cee44d_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1a8cee78e_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1a8ceea58_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1a8ceed22_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1a8d000db_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1a8d00482_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1a8d0074b_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1a8d00a15_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1a8d00d89_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ad8d3604:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ad8d3912:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ad8d3b87:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ad8d3bed:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ad8d3c64:;
			{
				return _1a8cedd76_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ad8d3cca:;
			{
				return _1a8cee184_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ad8d3dda:;
			{
				return _1a8cee44d_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ad8d3e51:;
			{
				return _1a8cee78e_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ad8d3eb7:;
			{
				return _1a8ceea58_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ad8d402d:;
			{
				return _1a8ceed22_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ad8d40a5:;
			{
				return _1a8d000db_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ad8d412c:;
			{
				return _1a8d00482_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ad8d41a4:;
			{
				return _1a8d0074b_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ad8d422b:;
			{
				return _1a8d00a15_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1ad8d42a3:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1ad8d432a:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1ad8d3769:;
			{
				return false;;
			}
		}
		_match_end_1ad8cc4ee:;
	};
}



inline jule::Bool _1a8d01153_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1a8d0141c_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1a8d016d6_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1a8d019a0_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1a8d01e23_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1a8d021dc_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1a8d024a6_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1a8d02770_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1a8d02ae4_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ad8db3dc:;
			{
				return _1a8d03b4a_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ad8db750:;
			{
				return _1a8d03e58_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ad8db7c7:;
			{
				return _1a8d03e58_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ad8dba2a:;
			{
				return _1a8d01153_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ad8dbaa2:;
			{
				return _1a8d0141c_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ad8dbb29:;
			{
				return _1a8d016d6_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ad8dbba1:;
			{
				return _1a8d019a0_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ad8dbc7d:;
			{
				return _1a8d01e23_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ad8dbd05:;
			{
				return _1a8d021dc_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ad8dbd7c:;
			{
				return _1a8d024a6_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ad8dbe04:;
			{
				return _1a8d02770_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ad8dbe7b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad8db5da:;
			{
				return false;;
			}
		}
		_match_end_1ad8db563:;
	};
}



inline jule::Bool _1a8d03b4a_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1a8d03e58_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1a8d04222_IsInt(jule::Str _4610_k) {
	return (_1a8d03b4a_IsSigInt(_4610_k) || _1a8d03e58_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a8d04563_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1a8d0482c_IsNum(jule::Str _5610_k) {
	return (_1a8d04222_IsInt(_5610_k) || _1a8d04563_IsFloat(_5610_k));;
}



inline jule::Bool _1a8d04ae6_IsSigNum(jule::Str _6113_k) {
	return (_1a8d03b4a_IsSigInt(_6113_k) || _1a8d04563_IsFloat(_6113_k));;
}



inline void _1a8d0de41_lshiftUnsig(_1a8d04e26_Const* _59021_c, _1a8d04e26_Const* _59032_x) {
	jule::U64 _5915_l = _1a8d07852_AsU64(_59021_c);;
	jule::U64 _5925_r = _1a8d07852_AsU64(_59032_x);;
	_1a8d08149_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _1a8d0e271_rshiftUnsig(_1a8d04e26_Const* _59621_c, _1a8d04e26_Const* _59632_x) {
	jule::U64 _5975_l = _1a8d07852_AsU64(_59621_c);;
	jule::U64 _5985_r = _1a8d07852_AsU64(_59632_x);;
	_1a8d08149_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1ab1836ae_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1d7477757_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad993d68:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1ad993d68:;
			++it;
			goto _iter_begin_1ad993d68;
		}
		_iter_end_1ad993d68:;
	};
	return false;;
}



inline jule::Bool _1ab1839bc_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1ab17bd39_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9941cb:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1ad9941cb:;
			++it;
			goto _iter_begin_1ad9941cb;
		}
		_iter_end_1ad9941cb:;
	};
	return false;;
}



inline jule::Bool _1ab1840c7_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1ab184391_IsRawStr(_36410_k)));;
}



inline jule::Bool _1ab184391_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1ab18465a_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1ab185084_IsFloat(jule::Str _38012_k) {
	if (_1a7c37497_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1a7c3ca1e_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1a7c3ca1e_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1ab18534d_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1ab1858d1_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1ab185b9a_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1ab18622d_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1d747745a_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad99b7aa:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1ad99b7aa:;
			++it;
			goto _iter_begin_1ad99b7aa;
		}
		_iter_end_1ad99b7aa:;
	};
	return false;;
}



inline jule::Bool _1ab1866a1_IsLetter(jule::I32 _42913_r) {
	return _1a7a84a64_IsLetter(_42913_r);;
}



inline jule::Bool _1ab186c34_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1ab186eed_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1ab1872b7_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1ab187581_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1ad9a04d4:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1ad9a055b:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1ad9a05d3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad9a0418:;
			{
				return false;;
			}
		}
		_match_end_1ad99e36d:;
	};
}



inline jule::Bool _1ab18784a_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1ab187b14_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1ab17c433_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9a1ddc:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1ad9a1ddc:;
			++it;
			goto _iter_begin_1ad9a1ddc;
		}
		_iter_end_1ad9a1ddc:;
	};
	return false;;
}



inline jule::Bool _1ab187dcd_IsAssignOp(jule::U64 _49515_id) {
	if (_1ab187b14_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1ab17c730_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9a41ca:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1ad9a41ca:;
			++it;
			goto _iter_begin_1ad9a41ca;
		}
		_iter_end_1ad9a41ca:;
	};
	return false;;
}



inline jule::Ptr<_1ab18873b_File> _1ab189ad3_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1ab18873b_File>(_1ab18873b_File{._field_Path=_5715_path, });;
}



inline _1a7d05a93_Log _1ab18b62e_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1ab18873b_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1a7d06005_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1ab18b9e7_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9ae119:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1ad9ae119:;
			++it;
			_1149_i++;
			goto _iter_begin_1ad9ae119;
		}
		_iter_end_1ad9ae119:;
	};
	return true;;
}



inline jule::Str _1ab18bd6b_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1ab186c34_IsDecimal(_1289_b))))) {
				goto _iter_end_1ad9b0eea;
			};
		}
	_iter_next_1ad9b0eea:;
	}
	_iter_end_1ad9b0eea:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1ab18c234_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1ab18bd6b_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1ab18c5a8_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1ad9b3c89:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1ab186c34_IsDecimal(_1689_b)) {
					_case_begin_1ad9b4a04:;
					{
						goto _iter_next_1ad9b387c;
					}
				}
				else if (_1ab18deb1_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1ad9b4a7b:;
					{
						return _1ab18c234_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1ad9b4938:;
					{
						goto _iter_end_1ad9b387c;
					}
				}
				_match_end_1ad9b48d3:;
			};
		}
	_iter_next_1ad9b387c:;
	}
	_iter_end_1ad9b387c:;;
	return jule::Str();;
}



inline jule::Str _1ab18c92c_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1ab18bd6b_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1ab18cca1_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1ab18bd6b_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1ab18d235_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1ab18bd6b_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1ab186c34_IsDecimal(_2019_b))))) {
				goto _iter_end_1ad9b7b4a;
			};
		}
	_iter_next_1ad9b7b4a:;
	}
	_iter_end_1ad9b7b4a:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1ab18d4ee_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1ad9b9bb3:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1ad9ba851:;
					{
						__jule_func_result = _1ab18d235_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1ad9ba8c8:;
					{
						goto _iter_next_1ad9b9c5c;
					}
				}
				else if (_1ab18db3c_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1ad9ba950:;
					{
						__jule_func_result = _1ab18bd6b_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ab186c34_IsDecimal(_2209_b)))) {
					_case_begin_1ad9ba9c7:;
					{
						goto _iter_end_1ad9b9c5c;
					}
				}
				_match_end_1ad9ba785:;
			};
		}
	_iter_next_1ad9b9c5c:;
	}
	_iter_end_1ad9b9c5c:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1ab18d7b8_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1ab18b9e7_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1ab186eed_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1ad9bd865;
			};
		}
	_iter_next_1ad9bd865:;
	}
	_iter_end_1ad9bd865:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1ab18db3c_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1ab18deb1_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1ab18e335_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1ad9c13c3:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1ab186c34_IsDecimal(_2769_b)) {
					_case_begin_1ad9c2380:;
					{
						goto _iter_next_1ad9c168c;
					}
				}
				else if (_1ab18deb1_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1ad9c2407:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ad9c22b4:;
					{
						goto _iter_end_1ad9c168c;
					}
				}
				_match_end_1ad9c225e:;
			};
		}
	_iter_next_1ad9c168c:;
	}
	_iter_end_1ad9c168c:;;
	return false;;
}



inline jule::Bool _1ab18e6a9_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1ad9c36b1:;
			{
				goto _case_begin_1ad9c3738;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1ad9c3738:;
			{
				goto _case_begin_1ad9c37b0;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1ad9c37b0:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad9c35d4:;
			{
				return true;;
			}
		}
		_match_end_1ad9c3518:;
	};
}



inline jule::Bool _1ab18ea2d_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1ad9c542c:;
			{
				goto _case_begin_1ad9c54a4;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1ad9c54a4:;
			{
				goto _case_begin_1ad9c552b;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1ad9c552b:;
			{
				goto _case_begin_1ad9c577e;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1ad9c577e:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad9c5020:;
			{
				return true;;
			}
		}
		_match_end_1ad9c4e54:;
	};
}



inline jule::Str _1ab18eea1_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1ab18d235_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1ab18db3c_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1ab18bd6b_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1ab1872b7_IsOctal(_3399_b))))) {
				goto _iter_end_1ad9c9673;
			};
		}
	_iter_next_1ad9c9673:;
	}
	_iter_end_1ad9c9673:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1ab19026a_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1ad9cd589:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1ab18e6a9_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1ad9ce2b0:;
					{
						__jule_func_result = _1ab18cca1_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab18ea2d_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1ad9ce337:;
					{
						__jule_func_result = _1ab18c92c_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab18deb1_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1ad9ce3ae:;
					{
						__jule_func_result = _1ab18c234_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1ab18e335_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1ad9ce436:;
					{
						__jule_func_result = _1ab18c5a8_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1ab187581_IsHex(_3729_b))))) {
					_case_begin_1ad9ce4ad:;
					{
						goto _iter_end_1ad9cd721;
					}
				}
				_match_end_1ad9ce1d3:;
			};
		}
	_iter_next_1ad9cd721:;
	}
	_iter_end_1ad9cd721:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1ab1905de_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1ab187581_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ad9d1a32:;
	}
	_iter_end_1ad9d1a32:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1ab1908a8_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1ab1905de_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1ab190b72_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1ab1905de_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1ab190e3b_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1ab1905de_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1ab191205_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ab1872b7_IsOctal((*(_42616_txt))[1LL]))) || (!(_1ab1872b7_IsOctal((*(_42616_txt))[2LL])))) || (!(_1ab1872b7_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1a7d05a93_Log> _1ab1961e9_Lex(jule::Ptr<_1ab18873b_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1ab191975_lex _8149_lex = _1ab191975_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1ab19478b_newLine(&_8149_lex);
	_1ab192569_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1ab25e191_FindModuleFile(jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9d7d28:;
		if (it != expr_end) {
			jule::Ptr<_1d779b97c_DirEntry> *_1412_d = it;
			{
				if (((!(_1d77a0c8e_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*((*(_1412_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ba9d7d28:;
			++it;
			goto _iter_begin_1ba9d7d28;
		}
		_iter_end_1ba9d7d28:;
	};
	return false;;
}



inline jule::Str _1ab25e449_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d779b97c_DirEntry>> _2713_dirents = ({
				auto except = static__1a7c5dac8_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ba9d86ec;
				} jule::Slice<jule::Ptr<_1d779b97c_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1ab25e191_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_1a7c5b664_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1ba9d86ec;
			};
		}
	_iter_next_1ba9d86ec:;
	}
	_iter_end_1ba9d86ec:;;
	return jule::Str();;
}



inline jule::Slice<_1a7d05a93_Log> _1ab25e713_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__1d779e276_Read(_1a7c5a971_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1a7d05a93_Log>::make({_1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _1a7c4000a_Trim(_1d785a51e_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1a7d05a93_Log>::make({_1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1ab260093_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6e18_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1a7aed56c_IsUpper(_145_r);;
}



inline jule::Bool _1aa266ee1_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1aa267277_ToRune(jule::Str _2011_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	jule::Slice<jule::U8> _225_bytes = _1d785a255_StrBytes(_2011_lit).slice(1LL, (_2011_lit.len() - 1LL));;
	if (((_225_bytes[0LL] == '\\') && (_225_bytes.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=static_cast<jule::I32>(_1aa267e8c_runeFromEsqSeq(_225_bytes, &(_2413_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune(_225_bytes);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1aa267541_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1aa267882_ToStr(jule::Str _4710_lit) {
	if ((_4710_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4710_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9e5b8d:;
		if (it != expr_end) {
			jule::U8 *_5412_b = it;
			{
				if ((((*(_5412_b)) >= 128LLU) || ((*(_5412_b)) == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1ba9e5b8d;
				};
			}
			_iter_next_1ba9e5b8d:;
			++it;
			goto _iter_begin_1ba9e5b8d;
		}
		_iter_end_1ba9e5b8d:;
	};
	if (_539_isPure) {
		return _4710_lit.slice(1LL, (_4710_lit.len() - 1LL));;
	};
	jule::Slice<jule::U8> _675_bytes = _1d785a255_StrBytes(_4710_lit).slice(1LL, (_4710_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _675_bytes.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _675_bytes.len())) {
		{
			jule::U8 _719_b = _675_bytes[_699_i];;
			if ((_719_b == '\\')) {
				(_689_s).append(_1aa268311_strEsqSeq(_675_bytes, &(_699_i)));;
			} else {
				jule::I32 _7513_r = 0;;
				jule::I64 _7516_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune(_675_bytes.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_1a7be803a_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1ba9e808b:;
	}
	_iter_end_1ba9e808b:;;
	{ jule::Slice<jule::U8> &__jule_push_dest = _689_s; __jule_push_dest.push(0LLU); };
	return _1d785a7d8_StrFromBytes(_689_s.slice(0LL, (_689_s.len() - 1LL)));;
}



inline __jule_tuple_u8__jule_tuple_bool _1aa267b4b_tryBtoaCommonEsq(jule::Slice<jule::U8> _8421_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8421_bytes.len() < 2LL) || (_8421_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8421_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ba9eb1c1:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ba9eb248:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ba9eb2c0:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ba9eb347:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ba9eb3be:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ba9eb446:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ba9eb4bd:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ba9eb545:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ba9eb5bc:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ba9eb644:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ba9eb07d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1aa267e8c_runeFromEsqSeq(jule::Slice<jule::U8> _11419_bytes, jule::I64* _11439_i) {
	jule::U8 _1155_b = 0;;
	jule::Bool _1158_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1aa267b4b_tryBtoaCommonEsq(_11419_bytes.slice((*(_11439_i))));
		_1155_b = __jule_assign_result.__jule_result_arg0;
		_1158_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11439_i)))++;
	if (_1158_ok) {
		((*(_11439_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_1155_b));;
	};
	{
		auto &_match_expr{ _11419_bytes[(*(_11439_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1baa00add:;
			{
				;
				jule::I32 _1259_r = static_cast<jule::I32>(({
					auto except = _1a8cd2981_ParseUint(_1d785a51e_BytesStr(_11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:125:19"));
					(except.result);
				}));;
				(*(_11439_i))+=5LL;
				return _1259_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1baa01094:;
			{
				;
				jule::I32 _1309_r = static_cast<jule::I32>(({
					auto except = _1a8cd2981_ParseUint(_1d785a51e_BytesStr(_11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:130:19"));
					(except.result);
				}));;
				(*(_11439_i))+=9LL;
				return _1309_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1baa00d52:;
			{
				;
				jule::Slice<jule::U8> _1359_seq = _11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 3LL));;
				(*(_11439_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a8cd2981_ParseUint(_1d785a51e_BytesStr(_1359_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:137:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1ba9ee746:;
			{
				;
				jule::Slice<jule::U8> _1409_seq = _11419_bytes.slice((*(_11439_i)), ((*(_11439_i)) + 3LL));;
				(*(_11439_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a8cd2981_ParseUint(_1d785a51e_BytesStr(_1409_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:142:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1ba9ee6e1:;
	};
}



inline jule::Slice<jule::U8> _1aa268311_strEsqSeq(jule::Slice<jule::U8> _14614_bytes, jule::I64* _14634_i) {
	jule::I32 _1475_r = _1aa267e8c_runeFromEsqSeq(_14614_bytes, _14634_i);;
	if ((_1475_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1475_r))});;
	};
	return _1d785aaa2_BytesFromStr(jule::Str::from_rune(_1475_r));;
}



inline jule::I64 _1ab3c401a_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r = 0;;
			jule::I64 _1312_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1baa2c224:;
	}
	_iter_end_1baa2c224:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ab3c438e_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r = 0;;
			jule::I64 _3112_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a7be6ac7_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1baa2ea62:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1baa2ead9:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1baa2e48a:;
			};
		}
	_iter_next_1baa2dcc5:;
	}
	_iter_end_1baa2dcc5:;;
	return nullptr;;
}



inline void _1ab3c467a_FmtByDefault(_1a7c4c7ed_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1a7c573c9_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1baa31091:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ccca69_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type130))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1baa31767:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ccca69_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1baa31239:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4630_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type131)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1baa312a0:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4630_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type132)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1baa318aa:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4630_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1baa31921:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4630_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1baa31987:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type129)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1baa319ed:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1baa31a64:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1baa31aca:;
			{
				_1a7c573c9_WriteStr(_4722_buf, _1a8ce4267_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1baa31b41:;
			{
				_1a7c573c9_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1baa31ba7:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1a7c573c9_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1a7c573c9_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1baa30a85:;
			{
				_1a7c573c9_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1baa2ee3b:;
	};
}



inline void _1ab3c4a98_applyFmtByDefault(_1a7c4c7ed_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1ab3c467a_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1ab3c4ee9_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1a7c4c7ed_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1ab3c4a98_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1a7c573c9_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1a7c57121_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1ab3c533a_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _1d785a255_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1ab3c401a_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_1a7c4c7ed_StrBuilder _1269_buf = static__1a7c4cb1c_New(static_cast<jule::I64>(_11511_fmt.len()));;
	for (; (_1209_i != -1LL); _1209_i=static_cast<jule::I64>(_1ab3c401a_findFormatPrefix(&(_1169_fmtBytes), _1209_i))) {
		{
			_1a7c57121_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1ab3c438e_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1baa3d70d;
			};
			_1ab3c4ee9_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_1a7c57121_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=static_cast<jule::I64>(_1169_fmtBytes.len());
				goto _iter_end_1baa3d70d;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1baa3d70d:;
	}
	_iter_end_1baa3d70d:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_1a7c57121_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _1a7c58672_Buf(&_1269_buf);;
}



inline jule::Str _1ab3c735e_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	jule::Slice<jule::U8> _329_bytes = _1ab3c533a_Format(_3111_fmt, _3121_args);;
	{ jule::Slice<jule::U8> &__jule_push_dest = _329_bytes; __jule_push_dest.push(0LLU); };
	return _1d785a7d8_StrFromBytes(_329_bytes.slice(0LL, (_329_bytes.len() - 1LL)));;
}



inline jule::Bool _1ab1d45de_parameterUsesGenerics(jule::Ptr<_1ab1d1366_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>* _38446_generics) {
	if (_1ab1cd055_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1ab311c7c_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1ab2ed6e7_TypeSymbol> _1ab1d6d61_buildType(jule::Ptr<_1ab198570_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1ab2b6d53_Value> _1ab1d716e_buildExpr(jule::Ptr<_1ab19c8a4_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab1d7438_buildTypeAlias(jule::Ptr<_1ab1b008c_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1ab2e5733_TypeAlias>(_1ab2e5733_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1ab1d6d61_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1ab1b657c_Field> _1ab1d7779_buildField(jule::Ptr<_1ab1b3942_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1ab1b657c_Field>(_1ab1b657c_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1ab1d6d61_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ab1b657c_Field>> _1ab1d7a43_buildFields(jule::Slice<jule::Ptr<_1ab1b3942_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1ab1b657c_Field>> _1359_fields = jule::Slice<jule::Ptr<_1ab1b657c_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae4e624:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b3942_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1b657c_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1ab1d7779_buildField(_13617_decl)); };
			}
			_iter_next_1bae4e624:;
			++it;
			goto _iter_begin_1bae4e624;
		}
		_iter_end_1bae4e624:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1ab1b9470_Struct> _1ab1d7d0c_buildStruct(jule::Ptr<_1ab1b4338_StructDecl> _14220_decl) {
	return jule::new_ptr<_1ab1b9470_Struct>(_1ab1b9470_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1ab1d7a43_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1ab1cc939_Param> _1ab1d80c6_buildParam(jule::Ptr<_1ab1a8ccd_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1ab1cc939_Param>(_1ab1cc939_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1ab1d6d61_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ab1cc939_Param>> _1ab1d846c_buildParams(jule::Slice<jule::Ptr<_1ab1a8ccd_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1ab1cc939_Param>> _1669_params = jule::Slice<jule::Ptr<_1ab1cc939_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae536a0:;
		if (it != expr_end) {
			jule::Ptr<_1ab1a8ccd_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1cc939_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1ab1d80c6_buildParam(_16717_decl)); };
			}
			_iter_next_1bae536a0:;
			++it;
			goto _iter_begin_1bae536a0;
		}
		_iter_end_1bae536a0:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1ab1cc1a8_RetType> _1ab1d8736_buildRetType(jule::Ptr<_1ab19b463_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ab1cc1a8_RetType>(_1ab1cc1a8_RetType{._field_Kind=_1ab1d6d61_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab1d8a00_buildFunc(jule::Ptr<_1ab1aa230_FnDecl> _18318_decl) {
	return jule::new_ptr<_1ab1ce40d_Fn>(_1ab1ce40d_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1ab1d8736_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1ab1d846c_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _1ab1d8cb9_buildMethods(jule::Slice<jule::Ptr<_1ab1aa230_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae58771:;
		if (it != expr_end) {
			jule::Ptr<_1ab1aa230_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1ab1d8a00_buildFunc(_20317_decl)); };
			}
			_iter_next_1bae58771:;
			++it;
			goto _iter_begin_1bae58771;
		}
		_iter_end_1bae58771:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1ab2ed6e7_TypeSymbol>> _1ab1d9083_buildTraitInherits(jule::Slice<jule::Ptr<_1ab198570_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1ab2ed6e7_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1ab2ed6e7_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae598e8:;
		if (it != expr_end) {
			jule::Ptr<_1ab198570_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab2ed6e7_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1ab1d6d61_buildType(_21117_it)); };
			}
			_iter_next_1bae598e8:;
			++it;
			goto _iter_begin_1bae598e8;
		}
		_iter_end_1bae598e8:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab1d934c_buildTrait(jule::Ptr<_1ab1b4a75_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1ab1e26da_Trait>(_1ab1e26da_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1ab1d9083_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1ab1d8cb9_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1ab1e4379_EnumItem> _1ab1d9616_buildEnumItem(jule::Ptr<_1ab1b1b2c_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1ab1e4379_EnumItem>(_1ab1e4379_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1ab1d716e_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>> _1ab1d98d0_buildEnumItems(jule::Slice<jule::Ptr<_1ab1b1b2c_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae5cbb5:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b1b2c_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1e4379_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1ab1d9616_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1bae5cbb5:;
			++it;
			goto _iter_begin_1bae5cbb5;
		}
		_iter_end_1bae5cbb5:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab1d9d53_buildEnum(jule::Ptr<_1ab1b26dd_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1ab1e4de6_Enum>(_1ab1e4de6_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1ab1d6d61_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1ab1d98d0_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1ab1e6029_TypeEnumItem> _1ab1da11c_buildTypeEnumItem(jule::Ptr<_1ab1b3018_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1ab1e6029_TypeEnumItem>(_1ab1e6029_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1ab1d6d61_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>> _1ab1da3d6_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ab1b3018_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae60e82:;
		if (it != expr_end) {
			jule::Ptr<_1ab1b3018_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab1e6029_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1ab1da11c_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1bae60e82:;
			++it;
			goto _iter_begin_1bae60e82;
		}
		_iter_end_1bae60e82:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab1da6a0_buildTypeEnum(jule::Ptr<_1ab1b3678_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1ab1e6601_TypeEnum>(_1ab1e6601_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1ab1da3d6_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab1da969_buildVar(jule::Ptr<_1ab1ab3da_VarDecl> _27817_decl) {
	return jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1ab1d6d61_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1ab1d716e_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1ab1d57cc_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1ab2853a4_Var>> _1ab1dac33_buildVars(jule::Slice<jule::Ptr<_1ab1ab3da_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1ab2853a4_Var>> _2969_vars = jule::Slice<jule::Ptr<_1ab2853a4_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae65805:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ab3da_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1ab1da969_buildVar(_29717_decl)); };
			}
			_iter_next_1bae65805:;
			++it;
			goto _iter_begin_1bae65805;
		}
		_iter_end_1bae65805:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1ab21ad62_Impl> _1ab1daeec_buildImpl(jule::Ptr<_1ab1b51d5_Impl> _30318_decl) {
	return jule::new_ptr<_1ab21ad62_Impl>(_1ab21ad62_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1ab1d8cb9_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1ab1dac33_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2163ac_buildAsComptimeMethodData(jule::Ptr<_1ab1d2312_FnIns>* _142735_f) {
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_142735_f)), 1)}), });;
}



inline jule::Ptr<_1ab242a9d_ImportInfo> _1ab2166ba_findComptimePackage(jule::Ptr<_1ab262e97_Sema>* _143529_s) {
	return _1ab26343c_SelectPackage((*(_143529_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ab242a9d_ImportInfo>)>([=](jule::Ptr<_1ab242a9d_ImportInfo> _143628_pkg) mutable -> jule::Bool {
		return (*(_143628_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab216a3e_buildComptimeTypeInfoData(jule::Ptr<_1ab262e97_Sema>* _144135_s, jule::Ptr<_1ab2e6525_TypeKind>* _144150_t) {
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_1ab2627d2_pushComptimeTypeInfo((*((*(_144135_s))))._field_meta.ptr(), _144150_t), 15)}), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab216c70_buildComptimeValue(jule::Ptr<_1ab2b5c0e_Data>* _144928_d) {
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab2106a3_comptimeValue>(_1ab2106a3_comptimeValue{._field_data=(*(_144928_d))}), 16)}), });;
}



inline jule::Str _1ab219d0b_toStrConstraints(jule::Ptr<_1ab2e4b3e_InsGeneric> _14321_g) {
	_1a7c4c7ed_StrBuilder _1449_sb = static__1a7c4cb1c_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb09bac3:;
		if (it != expr_end) {
			jule::I64 _1459_i = it - expr->begin();
			jule::Ptr<_1ab2e6525_TypeKind> *_14512_c = it;
			{
				_1a7c573c9_WriteStr(&_1449_sb, _1ab2e68dd_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_1a7c573c9_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1bb09bac3:;
			++it;
			_1459_i++;
			goto _iter_begin_1bb09bac3;
		}
		_iter_end_1bb09bac3:;
	};
	return _1a7c57bc1_Str(&_1449_sb);;
}



inline jule::Bool _1ab21a1c4_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ab2e6525_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1bb09c51e:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _1579_prim = _1ab2e8b76_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1a8d04ae6_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1bb09db80:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _1639_prim = _1ab2e8b76_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1a8d03e58_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1bb09dc07:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _1699_prim = _1ab2e8b76_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _1a8d04563_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1bb09de9e:;
			{
				jule::Ptr<_1ab2ee0ee_Prim> _1759_prim = _1ab2e8b76_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _1a8d0482c_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1bb09e015:;
			{
				return _1ab2e7da6_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1bb09e07b:;
			{
				return (!(_1ab2e7da6_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1bb09e0e2:;
			{
				return _1ab2e7b20_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1bb09e202:;
			{
				return _1ab2e813c_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1bb09da5e:;
			{
				return false;;
			}
		}
		_match_end_1bb09d9d7:;
	};
}



inline jule::Bool _1ab21a48d_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ab2181b1_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb0a4a21:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1bb0a4a21:;
			++it;
			goto _iter_begin_1bb0a4a21;
		}
		_iter_end_1bb0a4a21:;
	};
	return false;;
}



inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab21d095_newScopeCheckerBase(jule::Ptr<_1ab262e97_Sema>* _5829_s, jule::Ptr<_1ab1d2312_FnIns> _5843_owner) {
	return jule::new_ptr<_1ab2285bc_scopeChecker>(_1ab2285bc_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1ab2b0863_SymbolTable>(), });;
}



inline jule::Ptr<_1ab2285bc_scopeChecker> _1ab21d45d_newScopeChecker(jule::Ptr<_1ab262e97_Sema>* _6625_s, jule::Ptr<_1ab1d2312_FnIns> _6639_owner) {
	jule::Ptr<_1ab2285bc_scopeChecker> _679_base = _1ab21d095_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab227126_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab2276a9_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1ab227126_scopeLabel> _1ab21d7d2_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ab2285bc_scopeChecker> _7637_scope) {
	jule::Ptr<_1ab227126_scopeLabel> _779_label = _1ab22c0c6_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1ab22c0c6_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1bb0bdd48:;
	}
	_iter_end_1bb0bdd48:;;
	return _779_label;;
}



inline jule::Bool _1ab21db9a_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1ab2212b8_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bb0c07d9:;
			{
				jule::Ptr<_1ab1c3677_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bb0c0850:;
			{
				jule::Ptr<_1ab2b5c0e_Data> _989_d = _9021_Model.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24);;
				return _1ab21db9a_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1bb0c0784:;
	};
	return false;;
}



inline jule::Bool _1ab21e01e_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1ab2212b8_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bb0c2874:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1ab2212b8_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bb0c28da:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1ab2221ed_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bb0c2962:;
			{
				jule::Ptr<_1ab223100_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1ab223100_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1ab21db9a_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bb0c29d9:;
			{
				jule::Ptr<_1ab2226a4_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1ab2226a4_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1ab21db9a_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1ab21db9a_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bb0c2c09:;
			{
				jule::Ptr<_1ab2253ee_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1ab2253ee_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb0c6c0d:;
					if (it != expr_end) {
						jule::Ptr<_1ab226037_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bb0c7c31:;
								if (it != expr_end) {
									jule::Ptr<_1ab2b5c0e_Data> *_12420_expr = it;
									{
										if (_1ab21db9a_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1bb0c7c31:;
									++it;
									goto _iter_begin_1bb0c7c31;
								}
								_iter_end_1bb0c7c31:;
							};
						}
						_iter_next_1bb0c6c0d:;
						++it;
						goto _iter_begin_1bb0c6c0d;
					}
					_iter_end_1bb0c6c0d:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bb0c2c81:;
			{
				jule::Ptr<_1ab221e01_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1ab221e01_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb0c96a0:;
					if (it != expr_end) {
						jule::Ptr<_1ab2216d6_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1ab21db9a_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1bb0c96a0:;
						++it;
						goto _iter_begin_1bb0c96a0;
					}
					_iter_end_1bb0c96a0:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bb0c2d08:;
			{
				jule::Ptr<_1ab2b5c0e_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24);;
				return _1ab21db9a_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1bb0b6659:;
			{
				return false;;
			}
		}
		_match_end_1bb0c2346:;
	};
}



inline jule::I64 _1ab21e393_countMatchType(jule::Ptr<_1ab2253ee_Match>* _14720_m, jule::Ptr<_1ab2e6525_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1ab2e68dd_Str((*(_14732_t)).ptr());;
	_julec_label_1bb0cc50a:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb0cc472:;
		if (it != expr_end) {
			jule::Ptr<_1ab226037_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1bb0cc472;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb0cd4b7:;
					if (it != expr_end) {
						jule::Ptr<_1ab2b5c0e_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1bb0cc472;
							};
							if ((_1495_kind == _1ab2e68dd_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1ab2e6525_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1bb0cd4b7:;
						++it;
						goto _iter_begin_1bb0cd4b7;
					}
					_iter_end_1bb0cd4b7:;
				};
			}
			_iter_next_1bb0cc472:;
			++it;
			goto _iter_begin_1bb0cc472;
		}
		_iter_end_1bb0cc472:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _1ab21e65c_getDatasFromTupleData(jule::Ptr<_1ab2b5c0e_Data>* _17131_d) {
	if ((_1ab2ea99c_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1bb0d2c80:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1ab1c6d95_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1bb0d0442:;
				{
					jule::Ptr<_1ab3041e2_Tuple> _17717_t = _1ab2ea99c_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> _17817_r = jule::Slice<jule::Ptr<_1ab2b5c0e_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb0d1421:;
						if (it != expr_end) {
							jule::Ptr<_1ab2e6525_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1ab2b5c0e_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1bb0d1421:;
							++it;
							goto _iter_begin_1bb0d1421;
						}
						_iter_end_1bb0d1421:;
					};
					return _17817_r;;
				}
			}
			_match_end_1bb0d03dc:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1ab2b5c0e_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1ab220020_checkMut(jule::Ptr<_1ab262e97_Sema>* _20618_s, jule::Ptr<_1ab2b5c0e_Data>* _20629_left, jule::Ptr<_1ab2b5c0e_Data> _20646_right, jule::Ptr<_1ab182e72_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1bb0d6080:;
			{
				_1ab265ad2_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1ab2e7da6_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1bb0d6107:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ab2ea1e9_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ab265ad2_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb0d5eb4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb0d5e09:;
	};
}



inline jule::Bool _1ab220509_checkAssign(jule::Ptr<_1ab262e97_Sema>* _22521_s, jule::Ptr<_1ab2b5c0e_Data>* _22536_left, jule::Ptr<_1ab2b5c0e_Data> _22553_right, jule::Ptr<_1ab182e72_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab1d2312_FnIns> _2265_f = _1ab2e9e63_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1ab265ad2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1ab2b65d3_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1bb0db6e5:;
			{
				_1ab265ad2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1ab265e45_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1bb0db76c:;
			{
				_1ab265ad2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ab220020_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1bb0db7e4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bb0db629:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb0dac99:;
	};
}



inline jule::Bool _1ab2207c3_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bb0dba36:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1ab1a701d_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bb0ddc14:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb0dbe87:;
			{
				return false;;
			}
		}
		_match_end_1bb0dd85c:;
	};
}



inline jule::Bool _1ab220a8c_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1bb0deaa0:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bb0deb16:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1bb0e0d04:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bb0e0c8d:;
						{
							return false;;
						}
					}
					_match_end_1bb0e0c38:;
				};
			}
		}
		else {
			_case_begin_1bb0de880:;
			{
				return false;;
			}
		}
		_match_end_1bb0de82a:;
	};
}



inline jule::Bool _1ab220d56_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb0e0683:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bb0e1288:;
			{
				return false;;
			}
		}
		_match_end_1bb0e02ed:;
	};
}



inline jule::U64 _1ab23a3d1_removeEqFromOp(jule::U64 _216719_op) {
	{
		auto &_match_expr{ _216719_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bb0e15da:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1bb0e2025:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1bb0e208b:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bb0e21ac:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bb0e2223:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1bb0e2289:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1bb0e2311:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1bb0e2388:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1bb0e2454:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1bb0e24ba:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1bb0e1c39:;
			{
				return _216719_op;;
			}
		}
		_match_end_1bb0e1bd4:;
	};
}



inline void _1ab23a612_makeComptimeRange(jule::Ptr<_1ab2b5c0e_Data>* _219627_d) {
	{
		
		if ((_1ab2eaeb9_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb0e57dc:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1e9758_comptimeRange>(_1ab1e9758_comptimeRange{._field_kind=jule::Trait<_1ab1e9538_comptimeRangeKind>(_1ab2eaeb9_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()), 0)}), 5)});
			}
		}
		else if ((_1ab2eb4d6_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb0e527b:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1e9758_comptimeRange>(_1ab1e9758_comptimeRange{._field_kind=jule::Trait<_1ab1e9538_comptimeRangeKind>(_1ab2eb4d6_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()), 2)}), 5)});
			}
		}
		else if ((_1ab2ec2a6_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb0e52e2:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1e9758_comptimeRange>(_1ab1e9758_comptimeRange{._field_kind=jule::Trait<_1ab1e9538_comptimeRangeKind>(_1ab2ec2a6_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()), 4)}), 5)});
			}
		}
		else if ((_1ab2eba03_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb0e5358:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1e9758_comptimeRange>(_1ab1e9758_comptimeRange{._field_kind=jule::Trait<_1ab1e9538_comptimeRangeKind>(_1ab2eba03_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()), 3)}), 5)});
			}
		}
		else if ((_1ab2ec7c3_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb0e53be:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1e9758_comptimeRange>(_1ab1e9758_comptimeRange{._field_kind=jule::Trait<_1ab1e9538_comptimeRangeKind>(_1ab2ec7c3_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()), 1)}), 5)});
			}
		}
		else if ((_1ab2ed30c_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb0e5be9:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab1e9758_comptimeRange>(_1ab1e9758_comptimeRange{._field_kind=jule::Trait<_1ab1e9538_comptimeRangeKind>(_1ab2ed30c_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()), 5)}), 5)});
			}
		}
		else {
			_case_begin_1bb0e4a61:;
			{
				(*((*(_219627_d))))._field_Decl=true;
			}
		}
		_match_end_1bb0e4ec3:;
	};
}



inline jule::Bool _1ab23ab0c_canComptimeMatch(jule::Ptr<_1ab2b5c0e_Data>* _221726_d) {
	if ((!(_1ab2ae8b7_isGoodValueToInfer(_221726_d)))) {
		return false;;
	};
	return (_1ab2b65d3_IsConst((*(_221726_d)).ptr()) || (_1ab2ec53c_comptimeTypeInfo((*((*(_221726_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab240084_findVarInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c2788:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1ab2853a4_Var> _4813_v = _1ab2b1248_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1bb2c2788:;
			++it;
			goto _iter_begin_1bb2c2788;
		}
		_iter_end_1bb2c2788:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab240507_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c3cea:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1ab2e5733_TypeAlias> _6013_ta = _1ab2b1644_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1bb2c3cea:;
			++it;
			goto _iter_begin_1bb2c3cea;
		}
		_iter_end_1bb2c3cea:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1b9470_Struct> _1ab240936_findStructInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c535c:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1ab1b9470_Struct> _7213_s = _1ab2b1a40_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1bb2c535c:;
			++it;
			goto _iter_begin_1bb2c535c;
		}
		_iter_end_1bb2c535c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1ce40d_Fn> _1ab240ddc_findFnInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c68be:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1ab1ce40d_Fn> _8413_f = _1ab2b1e3b_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1bb2c68be:;
			++it;
			goto _iter_begin_1bb2c68be;
		}
		_iter_end_1bb2c68be:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e26da_Trait> _1ab24122d_findTraitInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c6eb8:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1ab1e26da_Trait> _9613_t = _1ab2b227c_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1bb2c6eb8:;
			++it;
			goto _iter_begin_1bb2c6eb8;
		}
		_iter_end_1bb2c6eb8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e4de6_Enum> _1ab2415a2_findEnumInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c9075:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1ab1e4de6_Enum> _10813_e = _1ab2b25bd_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1bb2c9075:;
			++it;
			goto _iter_begin_1bb2c9075;
		}
		_iter_end_1bb2c9075:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab1e6601_TypeEnum> _1ab241926_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2ca3ea:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1ab1e6601_TypeEnum> _12013_e = _1ab2b290e_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1bb2ca3ea:;
			++it;
			goto _iter_begin_1bb2ca3ea;
		}
		_iter_end_1bb2ca3ea:;
	};
	return nullptr;;
}



inline jule::Any _1ab241e65_defByIdentPackage(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2cb9b2:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1ab2b38cc_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1bb2cb9b2:;
			++it;
			goto _iter_begin_1bb2cb9b2;
		}
		_iter_end_1bb2cb9b2:;
	};
	return nullptr;;
}



inline jule::Bool _1ab247e9e_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1a7c37497_HasPrefix((*(_35518_f)), _1a7c5a971_Join(jule::Slice<jule::Str>::make({_1a7e1590b_PathStdlib,_35526_p})));;
}



inline jule::Bool _1ab260637_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb2dc62c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bb2dc693:;
			{
				jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1ab260637_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bb2dc709:;
			{
				jule::Ptr<_1ab1c5877_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1ab1c5877_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1ab260637_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bb2dc781:;
			{
				jule::Ptr<_1ab1c1a71_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1ab2e9193_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ab2e8e0c_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1ab260637_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bb2dc96d:;
			{
				jule::Ptr<_1ab1c4007_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45);;
				return _1ab260637_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1bb2dc5b6:;
			{
				return false;;
			}
		}
		_match_end_1bb2dc154:;
	};
}



inline _1a7d05a93_Log _1ab260b65_compilerErr(jule::Ptr<_1ab182e72_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_1a7d05a93_Log _469_log = _1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_1a7d06005_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1ab18971a_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1ab260ed9_impIsLookupable(jule::Ptr<_1ab242a9d_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1ab245430_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1ab261292_appendRetVars(jule::Slice<jule::Ptr<_1ab2853a4_Var>>* _7123_dest, jule::Ptr<_1ab1d2312_FnIns>* _7142_f) {
	if ((_1ab1ce881_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab2e6525_TypeKind>> _769_types = _1ab1d3511_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2e866b:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _7717_ident = *it;
			{
				if ((_1ab1858d1_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1ab185b9a_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1bb2e866b;
				};
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1bb2e866b:;
			++it;
			_7710_i++;
			goto _iter_begin_1bb2e866b;
		}
		_iter_end_1bb2e866b:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ab26157d_appendParamVars(jule::Slice<jule::Ptr<_1ab2853a4_Var>>* _10125_dest, jule::Ptr<_1ab1d2312_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2ecdce:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d1366_ParamIns> _10617_p = *it;
			{
				if ((_1ab1858d1_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1ab185b9a_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1bb2ecdce;
				};
				jule::Ptr<_1ab2853a4_Var> _11113_v = jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(), ._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()}), });;
				{
					
					if (_1ab1cd055_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1bb302ac6:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ab2e606e_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1ab1cd2db_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1ab1cd2db_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab302b2a_Sptr>(_1ab302b2a_Sptr{._field_Elem=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1bb302598:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab3035ed_Slc>(_1ab3035ed_Slc{._field_Elem=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1bb302246:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1bb302125:;
				};
				{ jule::Slice<jule::Ptr<_1ab2853a4_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1bb2ecdce:;
			++it;
			goto _iter_begin_1bb2ecdce;
		}
		_iter_end_1bb2ecdce:;
	};
}



inline void _1ab261869_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>>* _16134_dest, jule::Ptr<_1ab1d2312_FnIns>* _16159_f) {
	jule::I64 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb30a507:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1ab2e4b3e_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1ab1a577a_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1ab2e5733_TypeAlias>(_1ab2e5733_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1bb30a507:;
			++it;
			_17110_i++;
			goto _iter_begin_1bb30a507;
		}
		_iter_end_1bb30a507:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1ab1bc1ed_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb30d6b4:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1ab2e4b3e_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1ab1a577a_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1ab2e5733_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1ab2e5733_TypeAlias>(_1ab2e5733_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1bb30d6b4:;
				++it;
				_18514_i++;
				goto _iter_begin_1bb30d6b4;
			}
			_iter_end_1bb30d6b4:;
		};
	};
}



inline jule::Ptr<_1ab2b0863_SymbolTable> _1ab261bdd_findFile(jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>* _19918_files, jule::Ptr<_1ab18873b_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb30e473:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1bb30e473:;
			++it;
			goto _iter_begin_1bb30e473;
		}
		_iter_end_1bb30e473:;
	};
	return nullptr;;
}



inline void _1ab262194_pushSuggestion(_1a7d05a93_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_1a7d06005_Logf(_20841_fmt, _20854_args);
}



inline void _1ab28366b_pushImplemented(jule::Ptr<_1ab1e26da_Trait> _286024_t, jule::Ptr<_1ab1b9470_Struct>* _286040_d) {
	_julec_label_1bb31309d:;
	{
		
		if (((*(_286024_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1bb3137b8:;
			{
				{
					auto expr = &((*(_286024_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb314577:;
					if (it != expr_end) {
						jule::Ptr<_1ab1b9470_Struct> _286416_s = *it;
						{
							if ((_286416_s == (*(_286040_d)))) {
								goto _match_end_1bb3132bd;
							};
						}
						_iter_next_1bb314577:;
						++it;
						goto _iter_begin_1bb314577;
					}
					_iter_end_1bb314577:;
				};
				goto _case_begin_1bb313334;
			}
		}
		else {
			_case_begin_1bb313334:;
			{
				{ jule::Slice<jule::Ptr<_1ab1b9470_Struct>> &__jule_push_dest = (*(_286024_t))._field_Implemented; __jule_push_dest.push((*(_286040_d))); };
			}
		}
		_match_end_1bb3132bd:;
	};
	{
		auto expr = &((*(_286024_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb314ec3:;
		if (it != expr_end) {
			jule::Ptr<_1ab2ed6e7_TypeSymbol> _287317_i = *it;
			{
				_1ab28366b_pushImplemented(_1ab2ea480_Trait((*(_287317_i))._field_Kind.ptr()), _286040_d);
			}
			_iter_next_1bb314ec3:;
			++it;
			goto _iter_begin_1bb314ec3;
		}
		_iter_end_1bb314ec3:;
	};
}



inline void _1ab283957_pushImplements(jule::Ptr<_1ab1b9470_Struct>* _287824_s, jule::Ptr<_1ab1e26da_Trait> _287840_t) {
	_julec_label_1bb31605c:;
	{
		
		if (((*((*(_287824_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1bb316777:;
			{
				{
					auto expr = &((*((*(_287824_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb317536:;
					if (it != expr_end) {
						jule::Ptr<_1ab1e26da_Trait> _288216_b = *it;
						{
							if ((_288216_b == _287840_t)) {
								goto _match_end_1bb31627c;
							};
						}
						_iter_next_1bb317536:;
						++it;
						goto _iter_begin_1bb317536;
					}
					_iter_end_1bb317536:;
				};
				goto _case_begin_1bb3162e3;
			}
		}
		else {
			_case_begin_1bb3162e3:;
			{
				{ jule::Slice<jule::Ptr<_1ab1e26da_Trait>> &__jule_push_dest = (*((*(_287824_s))))._field_Implements; __jule_push_dest.push(_287840_t); };
			}
		}
		_match_end_1bb31627c:;
	};
	{
		auto expr = &((*(_287840_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb317e82:;
		if (it != expr_end) {
			jule::Ptr<_1ab2ed6e7_TypeSymbol> _289117_i = *it;
			{
				_1ab283957_pushImplements(_287824_s, _1ab2ea480_Trait((*(_289117_i))._field_Kind.ptr()));
			}
			_iter_next_1bb317e82:;
			++it;
			goto _iter_begin_1bb317e82;
		}
		_iter_end_1bb317e82:;
	};
}



inline jule::Bool _1ab29b3ba_traitHasReferenceReceiver(jule::Ptr<_1ab1e26da_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb5a1e30:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1bb5a1e30;
				};
				jule::Ptr<_1ab1cc939_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1ab1cd2db_IsRef(_349_p.ptr()) && _1ab1cd055_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bb5a1e30:;
			++it;
			goto _iter_begin_1bb5a1e30;
		}
		_iter_end_1bb5a1e30:;
	};
	return false;;
}



inline jule::Bool _1ab29b750_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1ab2b5c0e_Data>* _4233_d) {
	jule::Str _435_value = _1a8ccca69_FmtFloat(static_cast<jule::F64>(_1a8d07ad8_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1a8ce837b_CheckBitFloat(_435_value, static_cast<jule::I64>(_1a8ce6d5d_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1ab29bac4_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1ab2b5c0e_Data>* _4730_d) {
	jule::F64 _485_min = _1a8ced639_Min(_4718_kind);;
	jule::F64 _495_max = _1a8ced903_Max(_4718_kind);;
	{
		
		if (_1a8d09931_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bb5a8c8e:;
			{
				jule::F64 _529_x = _1a8d07335_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a8ca2c3c_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_1a8d0917d_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bb5a8d16:;
			{
				jule::F64 _599_x = _1a8d07ad8_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_1a8d08de7_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1bb5a8d8d:;
			{
				jule::F64 _649_x = _1a8d07ad8_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1bb5a88d7:;
	};
	return false;;
}



inline jule::Bool _1ab29be8c_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1ab2b5c0e_Data>* _7032_d) {
	jule::F64 _715_max = _1a8ced903_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1aa266ee1_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1a8d067eb_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_1a8d09931_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bb5ae800:;
			{
				jule::F64 _789_x = _1a8d07335_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a8ca2c3c_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_1a8d0917d_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bb5ae866:;
			{
				jule::F64 _889_x = _1a8d07ad8_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_1a8d08de7_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1bb5ae8cc:;
			{
				jule::F64 _939_x = _1a8d07ad8_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1bb5adea3:;
	};
	return false;;
}



inline jule::Bool _1ab29c311_intAssignable(jule::Str _9918_kind, jule::Ptr<_1ab2b5c0e_Data>* _9930_d) {
	{
		
		if (_1a8d03b4a_IsSigInt(_9918_kind)) {
			_case_begin_1bb5b44b4:;
			{
				return _1ab29bac4_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1a8d03e58_IsUnsigInt(_9918_kind)) {
			_case_begin_1bb5b453b:;
			{
				return _1ab29be8c_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1bb5b3e20:;
			{
				return false;;
			}
		}
		_match_end_1bb5b3172:;
	};
}



inline void _1ab2a89c1_checkMutRiskOfStructLit(jule::Ptr<_1ab262e97_Sema>* _94433_s, jule::Ptr<_1ab1c2445_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*((*(_94444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb5b4d22:;
		if (it != expr_end) {
			jule::Ptr<_1ab1c209e_StructArgExprModel> *_94512_arg = it;
			{
				if ((*((*((*((*(_94512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1bb5b4d22;
				};
				if (((!((*((*((*(_94512_arg))))._field_Expr))._field_Mutable)) && _1ab2e7da6_Mutable((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1ab265ad2_pushErr((*(_94433_s)).ptr(), (*((*(_94512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1bb5b4d22:;
			++it;
			goto _iter_begin_1bb5b4d22;
		}
		_iter_end_1bb5b4d22:;
	};
}



inline jule::Ptr<_1ab2e6525_TypeKind> _1ab2ae565_lenKind(void) {
	return _1ab3c9a26_primInt;;
}



inline jule::Bool _1ab2ae8b7_isGoodValueToInfer(jule::Ptr<_1ab2b5c0e_Data>* _140824_d) {
	return (!(_1ab2b60b6_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1ab19798c_Directive> _1ab2de573_findDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _420523_directives, jule::Str _420554_d) {
	{
		auto expr = _420523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb71c177:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _420617_dr = *it;
			{
				if (((*((*(_420617_dr))._field_Tag))._field_Kind == _420554_d)) {
					return _420617_dr;;
				};
			}
			_iter_next_1bb71c177:;
			++it;
			goto _iter_begin_1bb71c177;
		}
		_iter_end_1bb71c177:;
	};
	return nullptr;;
}



inline jule::Any _1ab2de93b_findBuiltinsImport(jule::Str* _421424_ident, jule::Ptr<_1ab242a9d_ImportInfo> _421436_imp) {
	return _1ab3cd277_findPackageBuiltinDef(&((*(_421436_imp))._field_LinkPath), _421424_ident);;
}



inline void _1ab2deb6c_fitBitsize(jule::Ptr<_1ab2b5c0e_Data>* _422120_d) {
	jule::Ptr<_1ab2ee0ee_Prim> _42229_prim = _1ab2e8b76_Prim((*((*(_422120_d))))._field_Kind.ptr());;
	jule::I64 _42235_z = _1a8ce6d5d_BitsizeOf(_1ab2ee440_Str(_42229_prim.ptr()));;
	if ((_42235_z == 64LLU)) {
		return;;
	};
	jule::I64 _42289_k = 0LL;;
	{
		
		if (_1a8d08de7_IsI64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1bb720ba3:;
			{
				_42289_k=static_cast<jule::I64>(_1a8ce890e_BitsizeOfInt(static_cast<jule::I64>(_1a8d067eb_ReadI64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_1a8ce719e_IntFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1ab3cbe46_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1a8d0917d_IsU64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1bb720c2a:;
			{
				_42289_k=static_cast<jule::I64>(_1a8ce8bc8_BitsizeOfUint(static_cast<jule::U64>(_1a8d06a82_ReadU64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_1a8ce7468_UintFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1ab3cbe46_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1a8d09931_IsF64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_1bb720ca2:;
			{
				_42289_k=static_cast<jule::I64>(_1a8ce8645_BitsizeOfFloat(static_cast<jule::F64>(_1a8d07335_ReadF64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_1a8ce7732_FloatFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_1ab3cbe46_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1bb720ad7:;
	};
}



inline void _1ab2dee9c_makeStructLitAlloc(jule::Ptr<_1ab2b5c0e_Data>* _425128_d, jule::Ptr<_1ab1c2445_StructLitExprModel>* _425143_lit) {
	(*((*(_425128_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab302b2a_Sptr>(_1ab302b2a_Sptr{._field_Elem=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*((*(_425143_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_425128_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c2742_AllocStructLitExprModel>(_1ab1c2742_AllocStructLitExprModel{._field_Lit=(*(_425143_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1ab2853a4_Var> _1ab2e0321_buildErrorVar(jule::Ptr<_1ab2212b8_Scope>* _426223_s, jule::Ptr<_1ab1a15cd_FnCallExpr>* _426239_fc) {
	return jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Scope=(*(_426223_s)), ._field_Token=(*((*(_426239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>()}), });;
}



inline jule::Any _1ab2e0695_findBuiltinsSema(jule::Str* _427722_ident, jule::Ptr<_1ab262e97_Sema> _427738_s) {
	{
		auto expr = &((*((*(_427738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb72ac57:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _427817_imp = *it;
			{
				if (((*(_427817_imp))._field_ImportAll || _1ab245430_existIdent(_427817_imp.ptr(), (*(_427722_ident))))) {
					jule::Any _428017_def = _1ab2de93b_findBuiltinsImport(_427722_ident, _427817_imp);;
					if ((_428017_def != nullptr)) {
						return _428017_def;;
					};
				};
			}
			_iter_next_1bb72ac57:;
			++it;
			goto _iter_begin_1bb72ac57;
		}
		_iter_end_1bb72ac57:;
	};
	jule::Str _42889_ppath = _1ab188dac_Dir((*((*(_427738_s))._field_file))._field_File.ptr());;
	if (_1a7c37497_HasPrefix(_42889_ppath, _1a7e1590b_PathStdlib)) {
		(_42889_ppath).mut_slice(_1a7e1590b_PathStdlib.len());;
		_42889_ppath=(jule::Str::lit("std", 3) + _1a7c3d37c_Replace(_42889_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1ab3cd277_findPackageBuiltinDef(&(_42889_ppath), _427722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ab2e095e_isOkForShifting(jule::Ptr<_1ab2b5c0e_Data>* _430225_d) {
	if (_1ab2b65d3_IsConst((*(_430225_d)).ptr())) {
		{
			
			if (_1a8d08de7_IsI64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1bb72e62e:;
				{
					return (_1a8d067eb_ReadI64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1a8d0917d_IsU64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1bb72e6a6:;
				{
					return true;;
				}
			}
			else if (_1a8d09931_IsF64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_1bb72e72d:;
				{
					return (_1a8d07335_ReadF64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1bb72e552:;
				{
					return false;;
				}
			}
			_match_end_1bb72e486:;
		};
	};
	jule::Ptr<_1ab2ee0ee_Prim> _43155_prim = _1ab2e8b76_Prim((*((*(_430225_d))))._field_Kind.ptr());;
	return ((_43155_prim != nullptr) && _1a8d04222_IsInt(_1ab2ee440_Str(_43155_prim.ptr())));;
}



inline jule::Bool _1ab2e0d38_isInstancedStruct(jule::Ptr<_1ab1bc1ed_StructIns> _431922_s) {
	return ((*((*(_431922_s))._field_Decl))._field_Generics.len() == (*(_431922_s))._field_Generics.len());;
}



inline jule::Bool _1ab2e11ac_isPtrArithmeticCompatible(jule::Ptr<_1ab2b5c0e_Data>* _432335_l, jule::Ptr<_1ab2b5c0e_Data>* _432350_r) {
	jule::Ptr<_1ab3063e2_Ptr> _43245_ptr = _1ab2e9193_Ptr((*((*(_432350_r))))._field_Kind.ptr());;
	if ((_43245_ptr != nullptr)) {
		return _1ab2e6c2e_Equal((*(_1ab2e9193_Ptr((*((*(_432335_l))))._field_Kind.ptr())))._field_Elem, (*(_43245_ptr))._field_Elem);;
	};
	if (_1ab2b65d3_IsConst((*(_432350_r)).ptr())) {
		return _1ab29c311_intAssignable(jule::Str::lit("int", 3), _432350_r);;
	};
	_1ab29c7ea_typeCompatibilityChecker _43319_tcc = _1ab29c7ea_typeCompatibilityChecker{._field_dest=_1ab3c9a26_primInt, ._field_src=(*((*(_432350_r))))._field_Kind, };;
	return _1ab29deb1_check(&_43319_tcc);;
}



inline void _1ab2e1498_applyCastKindModel(jule::Ptr<_1ab2b5c0e_Data>* _433828_d, jule::Ptr<_1ab2e6525_TypeKind>* _433843_t) {
	(*((*(_433828_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c2cc5_CastingExprModel>(_1ab1c2cc5_CastingExprModel{._field_Expr=(*((*(_433828_d))))._field_Model, ._field_Kind=(*(_433843_t)), ._field_ExprKind=(*((*(_433828_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1ab2e1784_applyCastKind(jule::Ptr<_1ab2b5c0e_Data>* _434623_d, jule::Ptr<_1ab2e6525_TypeKind>* _434638_t) {
	_1ab2e1498_applyCastKindModel(_434623_d, _434638_t);
	(*((*(_434623_d))))._field_Kind=(*(_434638_t));
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2e1993_buildVoidData(void) {
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8728_primVoid, });;
}



inline jule::Str _1ab2e1c5c_checkDataForIntegerIndexing(jule::Ptr<_1ab2b5c0e_Data>* _435737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_435737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1ab2e8b76_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1bb738737:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1a8d04222_IsInt(_1ab2ee440_Str(_1ab2e8b76_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1bb73879d:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1ab2b65d3_IsConst((*(_435737_d)).ptr())) {
			_case_begin_1bb738814:;
			{
				if ((_1a8d07ad8_AsF64((*((*(_435737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ab2e8b76_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr) || _1ab2b65d3_IsConst((*(_435737_d)).ptr()) || (_1a8ce6a94_RealKindOf(_1ab2ee440_Str(_1ab2e8b76_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr())) != _1a8ce6a94_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1bb73888b:;
			{
				_1ab2e1784_applyCastKind(_435737_d, &(_1ab3c9a26_primInt));
			}
		}
		_match_end_1bb7383d5:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1ab2e2048_applyCastModelByEnum(jule::Ptr<_1ab2b5c0e_Data>* _438230_d, jule::Ptr<_1ab1e4de6_Enum> _438244_e) {
	if ((_438244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _43865_p = _1ab2e8b76_Prim((*((*(_438244_e))._field_Kind))._field_Kind.ptr());;
	if (_1ab302586_IsStr(_43865_p.ptr())) {
		return;;
	};
	_1ab2e1498_applyCastKindModel(_438230_d, &((*((*(_438244_e))._field_Kind))._field_Kind));
}



inline void _1ab2e2334_castConstByType(jule::Str* _439321_t, jule::Ptr<_1ab2b5c0e_Data>* _439334_d) {
	{
		
		if (_1a8d03b4a_IsSigInt((*(_439321_t)))) {
			_case_begin_1bb73e496:;
			{
				{
					auto _match_expr{ _1a8ce6d5d_BitsizeOf(_1a8ce6a94_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bb7400ce:;
						{
							_1a8d07d91_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1a8d075bb_AsI64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bb740145:;
						{
							_1a8d07d91_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a8d075bb_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bb7401bc:;
						{
							_1a8d07d91_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a8d075bb_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bb740244:;
						{
							_1a8d07d91_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a8d075bb_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bb73ece3:;
				};
			}
		}
		else if (_1a8d03e58_IsUnsigInt((*(_439321_t)))) {
			_case_begin_1bb73e51d:;
			{
				{
					auto _match_expr{ _1a8ce6d5d_BitsizeOf(_1a8ce6a94_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bb7441c1:;
						{
							_1a8d08149_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1a8d07852_AsU64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bb744237:;
						{
							_1a8d08149_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a8d07852_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bb74429d:;
						{
							_1a8d08149_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a8d07852_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bb744314:;
						{
							_1a8d08149_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a8d07852_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bb73eb5b:;
				};
			}
		}
		else if (_1a8d04563_IsFloat((*(_439321_t)))) {
			_case_begin_1bb73e595:;
			{
				{
					auto _match_expr{ _1a8ce6d5d_BitsizeOf(_1a8ce6a94_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bb74823b:;
						{
							_1a8d08963_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1a8d07ad8_AsF64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bb7482b3:;
						{
							_1a8d08963_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a8d07ad8_AsF64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1bb73ea7e:;
				};
			}
		}
		_match_end_1bb73e375:;
	};
}



inline void _1ab2e27c9_updateModelToGenericIns(jule::Any* _442733_m, jule::Ptr<_1ab1d2312_FnIns>* _442752_f) {
	{
		auto &_match_expr{ (*(_442733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bb747306:;
			{
				(*(_442733_m))=jule::Any((*(_442752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bb7485d2:;
			{
				(*((*(_442733_m)).cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_442752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bb748648:;
			{
				(*((*(_442733_m)).cast_ptr<_1ab1c66be_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_442752_f));
			}
		}
		_match_end_1bb7472a1:;
	};
}



inline jule::Bool _1ab2e2b4d_pushSubIdentFromExpr(jule::Any _443829_expr, jule::Ptr<_1ab198e77_SubIdentTypeDecl>* _443850_t) {
	{
		auto &_match_expr{ _443829_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bb74bb57:;
			{
				jule::Ptr<_1ab19e2ce_IdentExpr> _444113_e = _443829_expr.cast_ptr<_1ab19e2ce_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1ab198b7a_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=(*(_444113_e))._field_Token, ._field_Ident=(*(_444113_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bb74bbbd:;
			{
				jule::Ptr<_1ab1a09b7_SubIdentExpr> _444713_e = _443829_expr.cast_ptr<_1ab1a09b7_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1ab2e2b4d_pushSubIdentFromExpr((*((*(_444713_e))._field_Expr))._field_Kind, _443850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1ab198b7a_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ab198b7a_IdentTypeDecl>(_1ab198b7a_IdentTypeDecl{._field_Token=(*(_444713_e))._field_Ident, ._field_Ident=(*((*(_444713_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1bb74bae1:;
			{
				return false;;
			}
		}
		_match_end_1bb74ba8b:;
	};
	return true;;
}



inline jule::Str _1ab2e2e17_constoa(jule::Ptr<_1a8d04e26_Const>* _446113_c) {
	{
		
		if (_1a8d08de7_IsI64((*(_446113_c)).ptr())) {
			_case_begin_1bb750cb0:;
			{
				return _1a8ce4630_FmtInt(static_cast<jule::I64>(_1a8d067eb_ReadI64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else if (_1a8d0917d_IsU64((*(_446113_c)).ptr())) {
			_case_begin_1bb74c1eb:;
			{
				return _1a8ce4267_FmtUint(static_cast<jule::U64>(_1a8d06a82_ReadU64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1bb74bd66:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb750c38:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab2e328b_evalEnumStatic(jule::Ptr<_1ab1e4de6_Enum>* _447224_enm, jule::Ptr<_1ab1e4379_EnumItem>* _447241_item) {
	jule::Ptr<_1ab2b5c0e_Data> _44739_d = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>((*(_447224_enm)), 3)}), });;
	if (((*(_447241_item)) != nullptr)) {
		(*(_44739_d))._field_Constant=jule::new_ptr<_1a8d04e26_Const>((*((*((*((*((*(_447241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_44739_d))._field_Model=jule::Any((*(_44739_d))._field_Constant, &__jule_any_type19);
		_1ab2e2048_applyCastModelByEnum(&(_44739_d), (*(_447224_enm)));
	};
	return _44739_d;;
}



inline jule::Ptr<_1ab1c2445_StructLitExprModel> _1ab2e3555_isLitBased(jule::Any* _448920_m) {
	{
		auto &_match_expr{ (*(_448920_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bb754489:;
			{
				return (*(_448920_m)).cast_ptr<_1ab1c2445_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bb754500:;
			{
				return (*((*(_448920_m)).cast_ptr<_1ab1c2742_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bb754566:;
			{
				jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _449613_ssi = (*(_448920_m)).cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1ab2e3555_isLitBased(&((*((*(_449613_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bb7545cc:;
			{
				jule::Ptr<_1ab1c2cc5_CastingExprModel> _449913_c = (*(_448920_m)).cast_ptr<_1ab1c2cc5_CastingExprModel>(&__jule_any_type92);;
				return _1ab2e3555_isLitBased(&((*(_449913_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1bb7542be:;
			{
				return nullptr;;
			}
		}
		_match_end_1bb752ca1:;
	};
}



inline void _1ab2e3841_makeImplicitDeref(jule::Ptr<_1ab2b5c0e_Data>* _450627_d, jule::Ptr<_1ab182e72_Token> _450641_baseToken) {
	jule::Ptr<_1ab1c1a71_UnaryExprModel> _45079_unary = jule::new_ptr<_1ab1c1a71_UnaryExprModel>(_1ab1c1a71_UnaryExprModel{._field_Expr=jule::new_ptr<_1ab2b5c0e_Data>((*((*(_450627_d))))), ._field_Op=jule::new_ptr<_1ab182e72_Token>((*(_450641_baseToken)))});;
	(*((*(_45079_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_45079_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_450627_d))))._field_Model=jule::Any(_45079_unary, &__jule_any_type110);
}



inline void _1bab8071d_updateRefer(jule::Ptr<_1ab1d54d0_ReferenceStack> _451723_ref, jule::Ptr<_1ab1d2312_FnIns>* _451746_old, jule::Ptr<_1ab1d2312_FnIns>* _451759_new) {
	{
		auto expr = &((*(_451723_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab81db2:;
		if (it != expr_end) {
			jule::I64 _45189_i = it - expr->begin();
			jule::Any _451812_sym = *it;
			{
				if ((__jule_any_type7_compare(_451812_sym, (*(_451746_old))))) {
					(*(_451723_ref))._field_buffer[_45189_i]=jule::Any((*(_451759_new)), &__jule_any_type7);
				};
			}
			_iter_next_1bab81db2:;
			++it;
			_45189_i++;
			goto _iter_begin_1bab81db2;
		}
		_iter_end_1bab81db2:;
	};
}



inline jule::Bool _1ab311c7c_kindUsesGenerics(jule::Ptr<_1ab2e6525_TypeKind>* _171126_k, jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>* _171141_generics) {
	{
		auto expr = _171141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb2b8b6:;
		if (it != expr_end) {
			jule::Ptr<_1ab1a577a_GenericDecl> *_171212_g = it;
			{
				if (static__1ab31184d_exist(&((*((*(_171212_g))))._field_Ident), _171126_k)) {
					return true;;
				};
			}
			_iter_next_1bbb2b8b6:;
			++it;
			goto _iter_begin_1bbb2b8b6;
		}
		_iter_end_1bbb2b8b6:;
	};
	return false;;
}



inline jule::Bool _1ab312145_hasDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _172122_directives, jule::Str _172153_tag) {
	{
		auto expr = _172122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb2bc90:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _172217_dr = *it;
			{
				if (((*((*(_172217_dr))._field_Tag))._field_Kind == _172153_tag)) {
					return true;;
				};
			}
			_iter_next_1bbb2bc90:;
			++it;
			goto _iter_begin_1bbb2bc90;
		}
		_iter_end_1bbb2bc90:;
	};
	return false;;
}



inline jule::Bool _1ab31240e_canGetPtr(jule::Ptr<_1ab2b5c0e_Data>* _173019_d) {
	{
		
		if ((!((*((*(_173019_d))))._field_Lvalue)) || _1ab2b65d3_IsConst((*(_173019_d)).ptr())) {
			_case_begin_1bbb2d951:;
			{
				return false;;
			}
		}
		else if ((_1ab2e9e63_Fn((*((*(_173019_d))))._field_Kind.ptr()) != nullptr) || (_1ab2e9429_Enum((*((*(_173019_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bbb2d9c8:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bbb2cc80:;
			{
				return true;;
			}
		}
		_match_end_1bbb2d852:;
	};
}



inline jule::Bool _1ab312750_isValidForSptrType(jule::Ptr<_1ab2e6525_TypeKind>* _174228_t) {
	jule::Ptr<_1ab1bc1ed_StructIns> _17439_s = _1ab2ea1e9_Struct((*(_174228_t)).ptr());;
	if ((((_17439_s != nullptr) && ((*(_17439_s))._field_Decl != nullptr)) && (*((*(_17439_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab312a19_isValidForRef(jule::Ptr<_1ab2e6525_TypeKind>* _175123_t) {
	return (_1ab2e9e63_Fn((*(_175123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1ab312cd3_isBuiltinStrConvertable(jule::Ptr<_1ab2e6525_TypeKind>* _175433_t) {
	return ((((!(_1ab2e7889_Void((*(_175433_t)).ptr()))) && (_1ab2e9e63_Fn((*(_175433_t)).ptr()) == nullptr)) && (_1ab2ea99c_Tup((*(_175433_t)).ptr()) == nullptr)) && (!(_1ab2eac33_comptime((*(_175433_t)).ptr()))));;
}



inline jule::Str _1ab31309c_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _175827_tokens) {
	if ((((*(_175827_tokens)).len() == 1LL) && ((*((*(_175827_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17629_n = 0LL;;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb34814:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> *_176312_token = it;
			{
				_17629_n+=(*((*(_176312_token))))._field_Kind.len();
				_17629_n+=2LL;
			}
			_iter_next_1bbb34814:;
			++it;
			goto _iter_begin_1bbb34814;
		}
		_iter_end_1bbb34814:;
	};
	_1a7c4c7ed_StrBuilder _17679_s = static__1a7c4cb1c_New(_17629_n);;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb32537:;
		if (it != expr_end) {
			jule::I64 _17689_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> *_176812_token = it;
			{
				_1a7c573c9_WriteStr(&_17679_s, (*((*(_176812_token))))._field_Kind);
				if ((((*(_175827_tokens)).len() - _17689_i) > 1LL)) {
					_1a7c573c9_WriteStr(&_17679_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1bbb32537:;
			++it;
			_17689_i++;
			goto _iter_begin_1bbb32537;
		}
		_iter_end_1bbb32537:;
	};
	return _1a7c57bc1_Str(&_17679_s);;
}



inline jule::Ptr<_1ab2ee0ee_Prim> _1ab313443_buildPrimType(jule::Str _177718_kind) {
	return jule::new_ptr<_1ab2ee0ee_Prim>(_1ab2ee0ee_Prim{._field_Kind=_177718_kind});;
}



inline void _1ab3139e8_applyImplicitCast(jule::Ptr<_1ab2e6525_TypeKind>* _180527_dest, jule::Ptr<_1ab2b5c0e_Data>* _180549_d) {
	if (_1ab2e7603_IsNil((*((*(_180549_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _18095_destPrim = _1ab2e8b76_Prim((*(_180527_dest)).ptr());;
	jule::Ptr<_1ab2ee0ee_Prim> _18105_prim = _1ab2e8b76_Prim((*((*(_180549_d))))._field_Kind.ptr());;
	if ((_18095_destPrim != nullptr)) {
		if (_1ab30281c_IsAny(_18095_destPrim.ptr())) {
			if (((_18105_prim == nullptr) || (!(_1ab30281c_IsAny(_18105_prim.ptr()))))) {
				_1ab2e1784_applyCastKind(_180549_d, _180527_dest);
			};
			return;;
		};
		if (((((((!(_1ab2e736c_Binded((*((*(_180549_d))))._field_Kind.ptr()))) && (!((*((*((*(_180549_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180549_d))))._field_Lvalue))) && (!(_1ab2b65d3_IsConst((*(_180549_d)).ptr())))) && (_18105_prim != nullptr)) && _1a8d0482c_IsNum((*(_18105_prim))._field_Kind))) {
			_1ab2e1784_applyCastKind(_180549_d, _180527_dest);
		};
		return;;
	};
	jule::Ptr<_1ab1e26da_Trait> _18295_dt = _1ab2ea480_Trait((*(_180527_dest)).ptr());;
	if ((_18295_dt != nullptr)) {
		jule::Ptr<_1ab1e26da_Trait> _18319_bt = _1ab2ea480_Trait((*((*(_180549_d))))._field_Kind.ptr());;
		if (((_18319_bt == nullptr) || (_18319_bt != _18295_dt))) {
			_1ab2e1498_applyCastKindModel(_180549_d, _180527_dest);
			return;;
		};
	};
	if (((_1ab2e96b0_TypeEnum((*(_180527_dest)).ptr()) != nullptr) && (_1ab2e96b0_TypeEnum((*((*(_180549_d))))._field_Kind.ptr()) == nullptr))) {
		_1ab2e1498_applyCastKindModel(_180549_d, _180527_dest);
		return;;
	};
}



inline jule::Bool _1ab313cb2_validTypeForXof(jule::Ptr<_1ab2e6525_TypeKind>* _184425_t) {
	return ((!(_1ab2e7889_Void((*(_184425_t)).ptr()))) && (_1ab2e9e63_Fn((*(_184425_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1ab2b0863_SymbolTable__jule_tuple_s_1a7d05a93_Log _1ab316d4d_buildSymbols(jule::Ptr<_1ab1965b2_Ast>* _1622_ast, jule::Trait<_1ab23eb88_Importer>* _1638_importer, jule::Ptr<_1ab1db5b3_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1ab2b0863_SymbolTable__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	jule::Ptr<_1ab1db5b3_symbolBuilder> _179_sb = jule::new_ptr<_1ab1db5b3_symbolBuilder>(_1ab1db5b3_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1ab1e1aa2_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log _1ab3172c1_analyzePackage(jule::Slice<jule::Ptr<_1ab1965b2_Ast>>* _3024_files, jule::Trait<_1ab23eb88_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc54e1d:;
		if (it != expr_end) {
			jule::Ptr<_1ab1965b2_Ast> _3317_f = *it;
			{
				jule::Ptr<_1ab2b0863_SymbolTable> _3413_table;;
				jule::Slice<_1a7d05a93_Log> _3424_errors;;
				({
					__jule_tuple_x_1ab2b0863_SymbolTable__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1ab316d4d_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1ab2b0863_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1bbc54e1d:;
			++it;
			goto _iter_begin_1bbc54e1d;
		}
		_iter_end_1bbc54e1d:;
	};
	jule::Ptr<_1ab262e97_Sema> _419_sema = jule::new_ptr<_1ab262e97_Sema>(_1ab262e97_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1ab262370_commonSemaMeta>()});;
	_1ab2818ab_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab2459c4_Package> _509_pkg = jule::new_ptr<_1ab2459c4_Package>(_1ab2459c4_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log _1ab317700_AnalyzePackage(jule::Slice<jule::Ptr<_1ab1965b2_Ast>> _7423_files, jule::Trait<_1ab23eb88_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab2459c4_Package> _789_package;;
	jule::Slice<_1a7d05a93_Log> _7822_logs;;
	({
		__jule_tuple_x_1ab2459c4_Package__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1ab3172c1_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1d2312_FnIns> _1ab3c7cee_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1bbc63ba7:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _2820_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3cde59_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1bbc63d61:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _3120_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3ce388_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1bbc63dd8:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _3420_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3ce7b7_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1bbc63e60:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _3720_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3ceda0_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1bbc63ed7:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _4020_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d02ce_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1bbc6423a:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _4320_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d070d_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1bbc642b2:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _4620_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d1126_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1bbc64339:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _4920_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d27ba_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1bbc643b1:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _5220_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d306d_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1bbc6448d:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _5520_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d3986_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1bbc64515:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _5820_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d3db5_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1bbc63cd9:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc608da:;
	};
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab3c810c_primTypeAlias(jule::Ptr<_1ab2e6525_TypeKind>* _6523_k) {
	return jule::new_ptr<_1ab2e5733_TypeAlias>(_1ab2e5733_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1ab2853a4_Var> _1ab3cbc15_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1bbc6bab1:;
			{
				static jule::Ptr<_1ab2853a4_Var> _9620_v = jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(_1ab2ed6e7_TypeSymbol{._field_Kind=_1ab3c841a_primNil}), ._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Constant=static__1a8d0618b_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1bbc6bb27:;
			{
				static jule::Ptr<_1ab2853a4_Var> _11120_v = jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Constant=static__1a8d058e9_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1bbc6bb8d:;
			{
				static jule::Ptr<_1ab2853a4_Var> _12420_v = jule::new_ptr<_1ab2853a4_Var>(_1ab2853a4_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ab3cbe46_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ab2b6d53_Value>(_1ab2b6d53_Value{._field_Data=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Constant=static__1a8d058e9_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1bbc6ba4a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc6aa7c:;
	};
}



inline jule::Ptr<_1ab2e5733_TypeAlias> _1ab3cbe46_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bbc701be:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _14420_t = _1ab3c810c_primTypeAlias(&(_1ab3c89e2_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1bbc71a2d:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _14720_t = _1ab3c810c_primTypeAlias(&(_1ab3c8d00_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1bbc71cc5:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _15020_t = _1ab3c810c_primTypeAlias(&(_1ab3c90b9_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bbc71d3b:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _15320_t = _1ab3c810c_primTypeAlias(&(_1ab3c9383_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bbc71da2:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _15620_t = _1ab3c810c_primTypeAlias(&(_1ab3c964c_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bbc71e18:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _15920_t = _1ab3c810c_primTypeAlias(&(_1ab3c9a26_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bbc72017:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _16220_t = _1ab3c810c_primTypeAlias(&(_1ab3c9ce0_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bbc7207d:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _16520_t = _1ab3c810c_primTypeAlias(&(_1ab3ca0a9_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bbc720e4:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _16820_t = _1ab3c810c_primTypeAlias(&(_1ab3ca63c_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bbc7215a:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _17120_t = _1ab3c810c_primTypeAlias(&(_1ab3cabc0_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bbc721d2:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _17420_t = _1ab3c810c_primTypeAlias(&(_1ab3cae89_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bbc72259:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _17720_t = _1ab3c810c_primTypeAlias(&(_1ab3cb40c_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bbc722d1:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _18020_t = _1ab3c810c_primTypeAlias(&(_1ab3cb6c6_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bbc72358:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _18320_t = _1ab3c810c_primTypeAlias(&(_1ab3cb990_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bbc723d0:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _18620_t = _1ab3c810c_primTypeAlias(&(_1ab3ca906_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bbc72457:;
			{
				static jule::Ptr<_1ab2e5733_TypeAlias> _18920_t = _1ab3c810c_primTypeAlias(&(_1ab3ca373_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1bbc71885:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc70301:;
	};
}



inline jule::Any _1ab3cc210_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1ab2853a4_Var> _1979_v = _1ab3cbc15_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ab1d2312_FnIns> _2019_f = _1ab3c7cee_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1ab2e5733_TypeAlias> _2059_ta = _1ab3cbe46_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1ab3cc4c9_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1bbc7be12:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _21520_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d754a_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1bbc7be78:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _21820_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d7979_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bbc7b7e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc7a5b4:;
	};
}



inline jule::Any _1ab3cc793_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1bbc7d81a:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _22820_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d5e50_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1bbc7d881:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _23120_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d637e_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1bbc7d8e7:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _23420_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d67ad_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bbc7d7a4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc7cde1:;
	};
}



inline jule::Any _1ab3ccb39_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1bbc80c3a:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _24420_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d448c_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1bbc80ca1:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _24720_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d4855_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1bbc80d28:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _25020_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d4c84_builtinCallerStdComptimeLine), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1bbc80da0:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _25320_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d51b3_builtinCallerStdComptimeFile), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1bbc8117a:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _25620_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d55e2_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1bbc81202:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _25920_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d5a21_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bbc80bc4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc80311:;
	};
}



inline jule::Any _1ab3cce03_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident) {
	{
		auto &_match_expr{ (*(_26637_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1bbc8505d:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _26920_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d6bdc_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_26920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1bbc850c4:;
			{
				static jule::Ptr<_1ab1d2312_FnIns> _27220_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_Decl=jule::new_ptr<_1ab1ce40d_Fn>(_1ab1ce40d_Fn{._field_Generics=jule::Slice<jule::Ptr<_1ab1a577a_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3d711b_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bbc84ee7:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc84634:;
	};
}



inline jule::Any _1ab3cd277_findPackageBuiltinDef(jule::Str* _28427_linkPath, jule::Str* _28443_ident) {
	{
		auto &_match_expr{ (*(_28427_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1bbc873a1:;
			{
				return _1ab3ccb39_findBuiltinDefStdComptime(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1bbc87417:;
			{
				return _1ab3cc4c9_findBuiltinDefStdDebug(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1bbc8747d:;
			{
				return _1ab3cc793_findBuiltinDefStdMem(_28443_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1bbc874e4:;
			{
				return _1ab3cce03_findBuiltinDefStdJuleIntegrated(_28443_ident);;
			}
		}
		else {
			_case_begin_1bbc871d6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc87181:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3cd6a6_builtinCallerCommonPlain(jule::Ptr<_1ab2b7903_Eval>* _29934_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _29949_fc, jule::Ptr<_1ab2b5c0e_Data>* _29971_d) {
	jule::Ptr<_1ab1d2312_FnIns> _3009_f = _1ab2e9e63_Fn((*((*(_29971_d))))._field_Kind.ptr());;
	_1ab2a6073_fnCallArgChecker _3029_fcac = _1ab2a6073_fnCallArgChecker{._field_e=(*(_29934_e)), ._field_args=(*((*(_29949_fc))))._field_Args, ._field_errorToken=(*((*(_29949_fc))))._field_Token, ._field_f=_3009_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1ab2a862a_check(&_3029_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1ab1c3677_FnCallExprModel> _3139_model = jule::new_ptr<_1ab1c3677_FnCallExprModel>(_1ab1c3677_FnCallExprModel{._field_Token=(*((*(_29949_fc))))._field_Token, ._field_Func=_3009_f, ._field_Expr=(*((*(_29971_d))))._field_Model, ._field_Args=_3029_fcac._field_argModels, });;
	if (((*(_3009_f))._field_Result == nullptr)) {
		(*(_29971_d))=_1ab2e1993_buildVoidData();
	} else {
		(*(_29971_d))=jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=(*(_3009_f))._field_Result, });
	};
	(*((*(_29971_d))))._field_Model=jule::Any(_3139_model, &__jule_any_type34);
	return (*(_29971_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3cda2a_builtinCallerError(jule::Ptr<_1ab2b7903_Eval>* _33228_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _33243_fc) {
	if (((*((*(_33243_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_33228_e)).ptr(), (*((*(_33243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33243_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _3409_expr = _1ab2d5b63_evalExpr((*(_33228_e)), (*((*(_33243_fc))))._field_Args[0LL]);;
	if ((_3409_expr == nullptr)) {
		return nullptr;;
	};
	if (_1ab2b60b6_IsNil(_3409_expr.ptr())) {
		_1ab2b7e53_pushErr((*(_33228_e)).ptr(), (*((*((*(_33243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab2b5c0e_Data> _3499_d = _1ab2e1993_buildVoidData();;
	(*(_3499_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c9ea8_BuiltinErrorCallExprModel>(_1ab1c9ea8_BuiltinErrorCallExprModel{._field_Err=_3409_expr}), &__jule_any_type23);
	return _3499_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3cde59_builtinCallerOut(jule::Ptr<_1ab2b7903_Eval>* _35426_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _35441_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_35441_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_35426_e)).ptr(), (*((*(_35441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35441_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _3639_expr = _1ab2d5b63_evalExpr((*(_35426_e)), (*((*(_35441_fc))))._field_Args[0LL]);;
	if ((_3639_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab312cd3_isBuiltinStrConvertable(&((*(_3639_expr))._field_Kind))))) {
		_1ab2b7e53_pushErr((*(_35426_e)).ptr(), (*((*((*(_35441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _3739_d = _1ab2e1993_buildVoidData();;
	(*(_3739_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c726e_BuiltinOutCallExprModel>(_1ab1c726e_BuiltinOutCallExprModel{._field_Expr=(*(_3639_expr))._field_Model, }), &__jule_any_type27);
	return _3739_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3ce388_builtinCallerOutln(jule::Ptr<_1ab2b7903_Eval>* _37828_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _37843_fc, jule::Ptr<_1ab2b5c0e_Data>* _37865_d) {
	(*(_37865_d))=_1ab3cde59_builtinCallerOut(_37828_e, _37843_fc, _37865_d);
	if (((*(_37865_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_37865_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c7648_BuiltinOutlnCallExprModel>(_1ab1c7648_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_37865_d))))._field_Model.cast_ptr<_1ab1c726e_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_37865_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3ce7b7_builtinCallerNew(jule::Ptr<_1ab2b7903_Eval>* _39026_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _39041_fc, jule::Ptr<_1ab2b5c0e_Data>* _39063_d) {
	if (((*((*(_39041_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_39026_e)).ptr(), (*((*(_39041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39041_fc))))._field_Args.len() > 2LL)) {
		_1ab2b7e53_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _3999_t = _1ab2d4d4e_evalExprKind((*(_39026_e)), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3999_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3999_t))._field_Decl))) {
		_1ab2b7e53_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ab312750_isValidForSptrType(&((*(_3999_t))._field_Kind))))) {
		jule::Ptr<_1ab1bc1ed_StructIns> _41013_s = _1ab2ea1e9_Struct((*(_3999_t))._field_Kind.ptr());;
		if ((((_41013_s != nullptr) && ((*(_41013_s))._field_Decl != nullptr)) && (*((*(_41013_s))._field_Decl))._field_Binded)) {
			_1ab2b7e53_pushErr((*(_39026_e)).ptr(), (*((*((*(_39041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39063_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab302b2a_Sptr>(_1ab302b2a_Sptr{._field_Elem=(*(_3999_t))._field_Kind}), 21)});
	if (((*((*(_39041_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab2e6525_TypeKind> _42413_old = (*((*(_39026_e))))._field_prefix;;
		(*((*(_39026_e))))._field_prefix=(*(_3999_t))._field_Kind;
		jule::Ptr<_1ab2b5c0e_Data> _42713_init = _1ab2d5b63_evalExpr((*(_39026_e)), (*((*(_39041_fc))))._field_Args[1LL]);;
		(*((*(_39026_e))))._field_prefix=_42413_old;
		if ((_42713_init != nullptr)) {
			jule::Ptr<_1ab182e72_Token> _43217_token = (*((*((*(_39041_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ab271aee_checkValidityForInitExpr((*((*(_39026_e))))._field_s, (!((*((*(_39026_e))))._field_immutable)), false, &((*(_3999_t))._field_Kind), &(_42713_init), &(_43217_token));
			_1ab26d5e0_checkAssignType((*((*(_39026_e))))._field_s, false, &((*(_3999_t))._field_Kind), &(_42713_init), _43217_token);
			(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c7a22_BuiltinNewCallExprModel>(_1ab1c7a22_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, ._field_Init=(*(_42713_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39063_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c7a22_BuiltinNewCallExprModel>(_1ab1c7a22_BuiltinNewCallExprModel{._field_Kind=(*(_3999_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39063_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3ceda0_builtinCallerPanic(jule::Ptr<_1ab2b7903_Eval>* _45228_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _45243_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_45243_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45243_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_45228_e)).ptr(), (*((*((*(_45243_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _4619_expr = _1ab2d5b63_evalExpr((*(_45228_e)), (*((*(_45243_fc))))._field_Args[0LL]);;
	if ((_4619_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ab2e8b76_Prim((*(_4619_expr))._field_Kind.ptr()) == nullptr) || (!(_1ab302586_IsStr(_1ab2e8b76_Prim((*(_4619_expr))._field_Kind.ptr()).ptr()))))) {
		_1ab2b7e53_pushErr((*(_45228_e)).ptr(), (*((*(_45243_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab2b5c0e_Data> _4709_d = _1ab2e1993_buildVoidData();;
	(*(_4709_d))._field_Model=jule::Any(jule::new_ptr<_1ab1c7deb_BuiltinPanicCallExprModel>(_1ab1c7deb_BuiltinPanicCallExprModel{._field_Token=(*((*(_45243_fc))))._field_Token, ._field_Expr=(*(_4619_expr))._field_Model}), &__jule_any_type29);
	return _4709_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d02ce_builtinCallerMake(jule::Ptr<_1ab2b7903_Eval>* _47827_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _47842_fc, jule::Ptr<_1ab2b5c0e_Data>* _47864_d) {
	if (((*((*(_47842_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_47842_fc))))._field_Args.len() == 1LL)) {
			_1ab2b7e53_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ab2b7e53_pushErr((*(_47827_e)).ptr(), (*((*(_47842_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_47842_fc))))._field_Args.len() > 3LL)) {
		_1ab2b7e53_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _4919_t = _1ab2d4d4e_evalExprKind((*(_47827_e)), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4919_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4919_t))._field_Decl))) {
		_1ab2b7e53_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1ab2e9bcc_Slc((*(_4919_t))._field_Kind.ptr()) == nullptr)) {
		_1ab2b7e53_pushErr((*(_47827_e)).ptr(), (*((*((*(_47842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_4919_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_47864_d))))._field_Kind=(*(_4919_t))._field_Kind;
	jule::Ptr<_1ab2b5c0e_Data> _5069_lenExpr = _1ab2d5b63_evalExpr(_1ab26cc3d_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[1LL]);;
	if ((_5069_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1ab2c1b3d_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_5069_lenExpr), (*((*((*(_47842_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ab1c8858_BuiltinMakeCallExprModel> _5139_model = jule::new_ptr<_1ab1c8858_BuiltinMakeCallExprModel>(_1ab1c8858_BuiltinMakeCallExprModel{._field_Kind=(*(_4919_t))._field_Kind, ._field_Len=(*(_5069_lenExpr))._field_Model, });;
	(*((*(_47864_d))))._field_Model=jule::Any(_5139_model, &__jule_any_type114);
	if (((*((*(_47842_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1ab2b5c0e_Data> _51913_capExpr = _1ab2d5b63_evalExpr(_1ab26cc3d_evalp((*((*(_47827_e))))._field_s, (*((*(_47827_e))))._field_lookup, (*(_4919_t))._field_Kind), (*((*(_47842_fc))))._field_Args[2LL]);;
		if ((_51913_capExpr == nullptr)) {
			return (*(_47864_d));;
		};
		_1ab2c1b3d_checkIntegerIndexingByData((*(_47827_e)).ptr(), &(_51913_capExpr), (*((*((*(_47842_fc))))._field_Args[2LL]))._field_Token);
		(*(_5139_model))._field_Cap=(*(_51913_capExpr))._field_Model;
	};
	return (*(_47864_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d070d_builtinCallerAppend(jule::Ptr<_1ab2b7903_Eval>* _52929_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _52944_fc, jule::Ptr<_1ab2b5c0e_Data>* _52966_d) {
	if (((*((*(_52944_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_52944_fc))))._field_Args.len() == 1LL)) {
			_1ab2b7e53_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ab2b7e53_pushErr((*(_52929_e)).ptr(), (*((*(_52944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _5399_t = _1ab2d5b63_evalExpr((*(_52929_e)), (*((*(_52944_fc))))._field_Args[0LL]);;
	if ((_5399_t == nullptr)) {
		return nullptr;;
	};
	if ((_1ab2e9bcc_Slc((*(_5399_t))._field_Kind.ptr()) == nullptr)) {
		_1ab2b7e53_pushErr((*(_52929_e)).ptr(), (*((*((*(_52944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _5499_f = jule::new_ptr<_1ab1d2312_FnIns>(_1ab1d2312_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ab1d1366_ParamIns>>::make({jule::new_ptr<_1ab1d1366_ParamIns>(_1ab1d1366_ParamIns{._field_Decl=jule::new_ptr<_1ab1cc939_Param>(_1ab1cc939_Param{._field_Mutable=true, }), ._field_Kind=(*(_5399_t))._field_Kind}),jule::new_ptr<_1ab1d1366_ParamIns>(_1ab1d1366_ParamIns{._field_Decl=jule::new_ptr<_1ab1cc939_Param>(_1ab1cc939_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1ab2e9bcc_Slc((*(_5399_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5399_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1ab2b5c0e_Data>(jule::Ptr<_1ab2b7903_Eval>*,jule::Ptr<_1ab1a15cd_FnCallExpr>*,jule::Ptr<_1ab2b5c0e_Data>*)>(_1ab3cd6a6_builtinCallerCommonPlain), });;
	(*((*(_52966_d))))._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(_5499_f, 1)});
	(*(_52966_d))=_1ab3cd6a6_builtinCallerCommonPlain(_52929_e, _52944_fc, _52966_d);
	if (((*(_52966_d)) != nullptr)) {
		jule::Ptr<_1ab1c3677_FnCallExprModel> _57313_model = (*((*(_52966_d))))._field_Model.cast_ptr<_1ab1c3677_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_52966_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c8c32_BuiltinAppendCallExprModel>(_1ab1c8c32_BuiltinAppendCallExprModel{._field_Dest=(*(_57313_model))._field_Args[0LL], ._field_Elements=(*(_57313_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_52966_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d0be7_callerCopySlice(jule::Ptr<_1ab2b5c0e_Data>* _58225_dest, jule::Ptr<_1ab2b7903_Eval>* _58243_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _58258_fc, jule::Ptr<_1ab2b5c0e_Data>* _58280_d) {
	if ((!((*((*(_58225_dest))))._field_Mutable))) {
		_1ab2b7e53_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab2b5c0e_Data> _5879_src = _1ab2d5b63_evalExpr((*(_58243_e)), (*((*(_58258_fc))))._field_Args[1LL]);;
	if ((_5879_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab3035ed_Slc> _5919_slc = _1ab2e9bcc_Slc((*(_5879_src))._field_Kind.ptr());;
	if ((_5919_slc != nullptr)) {
		if (((!((*(_5879_src))._field_Mutable)) && _1ab2e7da6_Mutable((*(_5919_slc))._field_Elem.ptr()))) {
			_1ab2b7e53_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1ab2e6c2e_Equal((*((*(_58225_dest))))._field_Kind, (*(_5879_src))._field_Kind)))) {
			_1ab2b7e53_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1ab2ee0ee_Prim> _6019_destPrim = _1ab2e8b76_Prim((*(_1ab2e9bcc_Slc((*((*(_58225_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1ab2ee0ee_Prim> _6029_prim = _1ab2e8b76_Prim((*(_5879_src))._field_Kind.ptr());;
		if (((((_6019_destPrim == nullptr) || (_6029_prim == nullptr)) || (!(_1ab302586_IsStr(_6029_prim.ptr())))) || (!(_1ab3009e6_IsU8(_6019_destPrim.ptr()))))) {
			_1ab2b7e53_pushErr((*(_58243_e)).ptr(), (*((*((*(_58258_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*((*(_58225_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_5879_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58280_d))))._field_Kind=_1ab2ae565_lenKind();
	(*((*(_58280_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c9ace_BuiltinCopyCallExprModel>(_1ab1c9ace_BuiltinCopyCallExprModel{._field_Dest=(*(_58225_dest)), ._field_Src=_5879_src}), &__jule_any_type31);
	return (*(_58280_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d1126_builtinCallerCopy(jule::Ptr<_1ab2b7903_Eval>* _61627_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _61642_fc, jule::Ptr<_1ab2b5c0e_Data>* _61664_d) {
	if (((*((*(_61642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61642_fc))))._field_Args.len() == 1LL)) {
			_1ab2b7e53_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ab2b7e53_pushErr((*(_61627_e)).ptr(), (*((*(_61642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61642_fc))))._field_Args.len() > 2LL)) {
		_1ab2b7e53_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _6299_dest = _1ab2d5b63_evalExpr((*(_61627_e)), (*((*(_61642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6299_dest == nullptr)) {
			_case_begin_1bba36271:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_6299_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba36e42:;
			{
				return _1ab3d0be7_callerCopySlice(&(_6299_dest), _61627_e, _61642_fc, _61664_d);;
			}
		}
		else {
			_case_begin_1bba35dca:;
			{
				_1ab2b7e53_pushErr((*(_61627_e)).ptr(), (*((*((*(_61642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bba34428:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d149a_callerLenSlice(jule::Ptr<_1ab2b5c0e_Data>* _64124_expr, jule::Ptr<_1ab2b5c0e_Data>* _64142_d) {
	(*((*(_64142_d))))._field_Kind=_1ab2ae565_lenKind();
	(*((*(_64142_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c902e_BuiltinLenCallExprModel>(_1ab1c902e_BuiltinLenCallExprModel{._field_Expr=(*(_64124_expr))}), &__jule_any_type115);
	return (*(_64142_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d181e_callerLenMap(jule::Ptr<_1ab2b5c0e_Data>* _64922_expr, jule::Ptr<_1ab2b5c0e_Data>* _64940_d) {
	(*((*(_64940_d))))._field_Kind=_1ab2ae565_lenKind();
	(*((*(_64940_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c902e_BuiltinLenCallExprModel>(_1ab1c902e_BuiltinLenCallExprModel{._field_Expr=(*(_64922_expr))}), &__jule_any_type115);
	return (*(_64940_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d1b93_callerLenArr(jule::Ptr<_1ab2b5c0e_Data>* _65722_expr, jule::Ptr<_1ab2b5c0e_Data>* _65740_d) {
	(*((*(_65740_d))))._field_Kind=_1ab2ae565_lenKind();
	(*((*(_65740_d))))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1ab2e9946_Arr((*((*(_65722_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_65740_d))))._field_Model=jule::Any((*((*(_65740_d))))._field_Constant, &__jule_any_type19);
	return (*(_65740_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d2017_callerLenStr(jule::Ptr<_1ab2b5c0e_Data>* _66422_expr, jule::Ptr<_1ab2b5c0e_Data>* _66440_d) {
	(*((*(_66440_d))))._field_Kind=_1ab2ae565_lenKind();
	if (_1ab2b65d3_IsConst((*(_66422_expr)).ptr())) {
		(*((*(_66440_d))))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a8d0709e_ReadStr((*((*(_66422_expr))))._field_Constant.ptr()).len())));
		(*((*(_66440_d))))._field_Model=jule::Any((*((*(_66440_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66440_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c902e_BuiltinLenCallExprModel>(_1ab1c902e_BuiltinLenCallExprModel{._field_Expr=(*(_66422_expr))}), &__jule_any_type115);
	};
	return (*(_66440_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d238b_callerLenComptime(jule::Ptr<_1ab2b5c0e_Data>* _67727_d, jule::I64 _67737_n) {
	(*((*(_67727_d))))._field_Kind=_1ab2ae565_lenKind();
	(*((*(_67727_d))))._field_Constant=static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67737_n)));
	(*((*(_67727_d))))._field_Model=jule::Any((*((*(_67727_d))))._field_Constant, &__jule_any_type19);
	return (*(_67727_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d27ba_builtinCallerLen(jule::Ptr<_1ab2b7903_Eval>* _68426_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _68441_fc, jule::Ptr<_1ab2b5c0e_Data>* _68463_d) {
	if (((*((*(_68441_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_68426_e)).ptr(), (*((*(_68441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68441_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _6929_dest = _1ab2d5822_evalExpr1((*(_68426_e)), (*((*(_68441_fc))))._field_Args[0LL]);;
	{
		
		if ((_6929_dest == nullptr)) {
			_case_begin_1bba433b0:;
			{
				return nullptr;;
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba44081:;
			{
				return _1ab3d149a_callerLenSlice(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1ab2e9946_Arr((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba440e7:;
			{
				return _1ab3d1b93_callerLenArr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1ab2ea716_Map((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba4415d:;
			{
				return _1ab3d181e_callerLenMap(&(_6929_dest), _68463_d);;
			}
		}
		else if (((_1ab2e8b76_Prim((*(_6929_dest))._field_Kind.ptr()) != nullptr) && _1ab302586_IsStr(_1ab2e8b76_Prim((*(_6929_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1bba43080:;
			{
				return _1ab3d2017_callerLenStr(&(_6929_dest), _68463_d);;
			}
		}
		else if ((_1ab2eaeb9_comptimeStructFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba430e6:;
			{
				return _1ab3d238b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ab2eaeb9_comptimeStructFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ab2eb4d6_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba4315c:;
			{
				return _1ab3d238b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ab2eb4d6_comptimeEnumFields((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ab2ec2a6_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba431c3:;
			{
				return _1ab3d238b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ab2ec2a6_comptimeTypeInfos((*(_6929_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1ab2eba03_comptimeParams((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba44229:;
			{
				return _1ab3d238b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ab2eba03_comptimeParams((*(_6929_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1ab2ec7c3_comptimeStatics((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba44290:;
			{
				return _1ab3d238b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ab2ec7c3_comptimeStatics((*(_6929_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1ab2ed30c_comptimeFiles((*(_6929_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba44306:;
			{
				return _1ab3d238b_callerLenComptime(_68463_d, static_cast<jule::I64>((*(_1ab2ed30c_comptimeFiles((*(_6929_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1bba43019:;
			{
				_1ab2b7e53_pushErr((*(_68426_e)).ptr(), (*((*((*(_68441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bba41567:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d2b3e_callerCapSlice(jule::Ptr<_1ab2b5c0e_Data>* _72224_expr, jule::Ptr<_1ab2b5c0e_Data>* _72242_d) {
	(*((*(_72242_d))))._field_Kind=_1ab2ae565_lenKind();
	(*((*(_72242_d))))._field_Model=jule::Any(jule::new_ptr<_1ab1c932b_BuiltinCapCallExprModel>(_1ab1c932b_BuiltinCapCallExprModel{._field_Expr=(*(_72224_expr))}), &__jule_any_type116);
	return (*(_72242_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d306d_builtinCallerCap(jule::Ptr<_1ab2b7903_Eval>* _73026_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _73041_fc, jule::Ptr<_1ab2b5c0e_Data>* _73063_d) {
	if (((*((*(_73041_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_73026_e)).ptr(), (*((*(_73041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73041_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _7389_dest = _1ab2d5b63_evalExpr((*(_73026_e)), (*((*(_73041_fc))))._field_Args[0LL]);;
	{
		
		if ((_7389_dest == nullptr)) {
			_case_begin_1bba531a0:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7389_dest))._field_Decl) {
			_case_begin_1bba53d71:;
			{
				_1ab2b7e53_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_7389_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba53dd7:;
			{
				return _1ab3d2b3e_callerCapSlice(&(_7389_dest), _73063_d);;
			}
		}
		else {
			_case_begin_1bba52d09:;
			{
				_1ab2b7e53_pushErr((*(_73026_e)).ptr(), (*((*((*(_73041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bba51357:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d3557_callerDeleteMap(jule::Ptr<_1ab2b7903_Eval>* _75325_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _75340_fc, jule::Ptr<_1ab2b5c0e_Data>* _75362_expr, jule::Ptr<_1ab2b5c0e_Data>* _75380_d) {
	if ((!((*((*(_75362_expr))))._field_Mutable))) {
		_1ab2b7e53_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75380_d))=_1ab2e1993_buildVoidData();
	jule::Ptr<_1ab1c9705_BuiltinDeleteCallExprModel> _7589_model = jule::new_ptr<_1ab1c9705_BuiltinDeleteCallExprModel>(_1ab1c9705_BuiltinDeleteCallExprModel{._field_Dest=(*(_75362_expr)), });;
	if (((*((*(_75340_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab2b5c0e_Data> _76213_key = _1ab2d5b63_evalExpr((*(_75325_e)), (*((*(_75340_fc))))._field_Args[1LL]);;
		{
			
			if ((_76213_key == nullptr)) {
				_case_begin_1bba59c34:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76213_key))._field_Decl) {
				_case_begin_1bba58826:;
				{
					_1ab2b7e53_pushErr((*(_75325_e)).ptr(), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1bba587b0:;
				{
					;
					jule::Ptr<_1ab2e6525_TypeKind> _77117_keyType = (*(_1ab2ea716_Map((*((*(_75362_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1ab26d5e0_checkAssignType((*((*(_75325_e))))._field_s, false, &(_77117_keyType), &(_76213_key), (*((*((*(_75340_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1bba58749:;
		};
		(*(_7589_model))._field_Key=_76213_key;
	};
	(*((*(_75380_d))))._field_Model=jule::Any(_7589_model, &__jule_any_type32);
	return (*(_75380_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d3986_builtinCallerDelete(jule::Ptr<_1ab2b7903_Eval>* _78229_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _78244_fc, jule::Ptr<_1ab2b5c0e_Data>* _78266_d) {
	if (((*((*(_78244_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_78229_e)).ptr(), (*((*(_78244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78244_fc))))._field_Args.len() > 2LL)) {
		_1ab2b7e53_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _7909_dest = _1ab2d5b63_evalExpr((*(_78229_e)), (*((*(_78244_fc))))._field_Args[0LL]);;
	{
		
		if ((_7909_dest == nullptr)) {
			_case_begin_1bba60b6e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7909_dest))._field_Decl) {
			_case_begin_1bba61840:;
			{
				_1ab2b7e53_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ab2ea716_Map((*(_7909_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bba618a6:;
			{
				return _1ab3d3557_callerDeleteMap(_78229_e, _78244_fc, &(_7909_dest), _78266_d);;
			}
		}
		else {
			_case_begin_1bba607c8:;
			{
				_1ab2b7e53_pushErr((*(_78229_e)).ptr(), (*((*((*(_78244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bba5dd26:;
	};
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d3db5_builtinCallerAssert(jule::Ptr<_1ab2b7903_Eval>* _80529_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _80544_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_80544_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80544_fc))))._field_Args.len() > 2LL)) {
		_1ab2b7e53_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _8149_expr = _1ab2d5b63_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[0LL]);;
	if ((_8149_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ab2e8b76_Prim((*(_8149_expr))._field_Kind.ptr()) == nullptr) || (!(_1ab302300_IsBool(_1ab2e8b76_Prim((*(_8149_expr))._field_Kind.ptr()).ptr()))))) {
		_1ab2b7e53_pushErr((*(_80529_e)).ptr(), (*((*(_80544_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab1c83a2_BuiltinAssertCallExprModel> _8239_model = jule::new_ptr<_1ab1c83a2_BuiltinAssertCallExprModel>(_1ab1c83a2_BuiltinAssertCallExprModel{._field_Token=(*((*(_80544_fc))))._field_Token, ._field_Expr=(*(_8149_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80544_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ab2b5c0e_Data> _83113_log = _1ab2d5b63_evalExpr((*(_80529_e)), (*((*(_80544_fc))))._field_Args[1LL]);;
		if ((_83113_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1ab2b65d3_IsConst(_83113_log.ptr()))) || (_1ab2e8b76_Prim((*(_83113_log))._field_Kind.ptr()) == nullptr)) || (!(_1ab302586_IsStr(_1ab2e8b76_Prim((*(_83113_log))._field_Kind.ptr()).ptr()))))) {
			_1ab2b7e53_pushErr((*(_80529_e)).ptr(), (*((*((*(_80544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_83113_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8239_model))._field_Log=_1a8d0709e_ReadStr((*(_83113_log))._field_Constant.ptr());
	};
	jule::Ptr<_1ab2b5c0e_Data> _8449_d = _1ab2e1993_buildVoidData();;
	(*(_8449_d))._field_Model=jule::Any(_8239_model, &__jule_any_type30);
	return _8449_d;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d448c_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ab2b7903_Eval>* _84940_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _84955_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_84955_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_84940_e)).ptr(), (*((*(_84955_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_84955_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _8589_d = _1ab2d4d4e_evalExprKind((*(_84940_e)), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8589_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _8625_f = _1ab2e9e63_Fn((*(_8589_d))._field_Kind.ptr());;
	if ((_8625_f != nullptr)) {
		if (_1ab1d3797_IsBuiltin(_8625_f.ptr())) {
			_1ab2b7e53_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8625_f))._field_Generics.len() != (*((*(_8625_f))._field_Decl))._field_Generics.len())) {
			_1ab2b7e53_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1ab1bc1ed_StructIns> _8735_s = _1ab2ea1e9_Struct((*(_8589_d))._field_Kind.ptr());;
	if (((_8735_s != nullptr) && ((*(_8735_s))._field_Generics.len() != (*((*(_8735_s))._field_Decl))._field_Generics.len()))) {
		_1ab2b7e53_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1ab2eac33_comptime((*(_8589_d))._field_Kind.ptr())) {
		_1ab2b7e53_pushErr((*(_84940_e)).ptr(), (*((*((*(_84955_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_8589_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216a3e_buildComptimeTypeInfoData(&((*((*(_84940_e))))._field_s), &((*(_8589_d))._field_Kind));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d4855_builtinCallerStdComptimeValueOf(jule::Ptr<_1ab2b7903_Eval>* _88541_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _88556_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_88556_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_88541_e)).ptr(), (*((*(_88556_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88556_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _8939_d = _1ab2d5b63_evalExpr((*(_88541_e)), (*((*(_88556_fc))))._field_Args[0LL]);;
	if ((_8939_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab2ae8b7_isGoodValueToInfer(&(_8939_d))))) {
		_1ab2b7e53_pushErr((*(_88541_e)).ptr(), (*((*((*(_88556_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_8939_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab216c70_buildComptimeValue(&(_8939_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d4c84_builtinCallerStdComptimeLine(jule::Ptr<_1ab2b7903_Eval>* _90538_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _90553_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_90553_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_90538_e)).ptr(), (*((*((*(_90553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a8d04e26_Const> _9099_constant = static__1a8d05366_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_90553_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c9a26_primInt, ._field_Model=jule::Any(_9099_constant, &__jule_any_type19), ._field_Constant=_9099_constant});;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d51b3_builtinCallerStdComptimeFile(jule::Ptr<_1ab2b7903_Eval>* _91738_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _91753_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_91753_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_91738_e)).ptr(), (*((*((*(_91753_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab2145ec_comptimeFile>(_1ab2145ec_comptimeFile{._field_file=(*((*((*(_91738_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d55e2_builtinCallerStdComptimeFiles(jule::Ptr<_1ab2b7903_Eval>* _93039_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _93054_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_93054_fc))))._field_Args.len() > 0LL)) {
		_1ab2b7e53_pushErr((*(_93039_e)).ptr(), (*((*((*(_93054_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=jule::new_ptr<_1ab2e6525_TypeKind>(_1ab2e6525_TypeKind{._field_Kind=jule::Trait<_1ab2e606e_Kind>(jule::new_ptr<_1ab213002_comptimeFiles>(_1ab213002_comptimeFiles{._field_files=(*((*((*(_93039_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d5a21_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ab2b7903_Eval>* _94343_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _94358_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_94358_fc))))._field_Args.len() > 2LL)) {
		_1ab2b7e53_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 0LL)) {
		_1ab2b7e53_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_94358_fc))))._field_Args.len() == 1LL)) {
		_1ab2b7e53_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bba8adec:;
			{
				goto _match_end_1bba89901;
			}
		}
		else {
			_case_begin_1bba89967:;
			{
				_1ab2b7e53_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ab2b82b6_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bba89901:;
	};
	jule::Ptr<_1ab182e72_Token> _9649_ident = (*((*((*((*(_94358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1ab19e2ce_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_94343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bba8c32c:;
			{
				goto _match_end_1bba8be53;
			}
		}
		else {
			_case_begin_1bba8bea8:;
			{
				_1ab2b7e53_pushErr((*(_94343_e)).ptr(), (*((*(_94358_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1bba8be53:;
	};
	jule::Ptr<_1ab2285bc_scopeChecker> _9739_sc = (*((*(_94343_e))))._field_lookup.cast_ptr<_1ab2285bc_scopeChecker>(0);;
	jule::Ptr<_1ab2e5733_TypeAlias> _9749_alias = jule::new_ptr<_1ab2e5733_TypeAlias>(_1ab2e5733_TypeAlias{._field_Scope=(*(_9739_sc))._field_tree, ._field_Public=_1ab260093_IsPub((*(_9649_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9649_ident, ._field_Ident=(*(_9649_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1ab2ed6e7_TypeSymbol>(), });;
	jule::Ptr<_1ab2b5c0e_Data> _9849_t = _1ab2d5190_eval1((*(_94343_e)), (*((*(_94358_fc))))._field_Args[1LL]);;
	if ((_9849_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9849_t))._field_Decl) {
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_9849_t))._field_Kind;
	} else {
		jule::Ptr<_1ab209191_comptimeTypeInfo> _99113_cti = _1ab2ec53c_comptimeTypeInfo((*(_9849_t))._field_Kind.ptr());;
		if ((_99113_cti == nullptr)) {
			_1ab2b7e53_pushErr((*(_94343_e)).ptr(), (*((*((*(_94358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ab2b82b6_pushSuggestion((*(_94343_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9749_alias))._field_Kind))._field_Kind=(*(_99113_cti))._field_base;
	};
	_1ab22cd74_checkTypeAlias(_9739_sc, &(_9749_alias));
	return _1ab2e1993_buildVoidData();;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d5e50_builtinCallerStdMemSizeOf(jule::Ptr<_1ab2b7903_Eval>* _100335_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _100350_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	jule::Ptr<_1ab2b5c0e_Data> _10049_result = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c964c_primUint, });;
	if (((*((*(_100350_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_100335_e)).ptr(), (*((*(_100350_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10049_result;;
	};
	if (((*((*(_100350_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _10169_d = _1ab2d4d4e_evalExprKind((*(_100335_e)), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10169_d == nullptr)) {
		return _10049_result;;
	};
	if ((!(_1ab313cb2_validTypeForXof(&((*(_10169_d))._field_Kind))))) {
		_1ab2b7e53_pushErr((*(_100335_e)).ptr(), (*((*((*(_100350_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_10169_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10049_result))._field_Model=jule::Any(jule::new_ptr<_1ab1c5a64_SizeofExprModel>(_1ab1c5a64_SizeofExprModel{._field_Expr=(*(_10169_d))._field_Model}), &__jule_any_type117);
	return _10049_result;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d637e_builtinCallerStdMemAlignOf(jule::Ptr<_1ab2b7903_Eval>* _102836_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _102851_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	jule::Ptr<_1ab2b5c0e_Data> _10299_result = jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c964c_primUint, });;
	if (((*((*(_102851_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_102836_e)).ptr(), (*((*(_102851_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10299_result;;
	};
	if (((*((*(_102851_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _10419_d = _1ab2d4d4e_evalExprKind((*(_102836_e)), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10419_d == nullptr)) {
		return _10299_result;;
	};
	if ((!(_1ab313cb2_validTypeForXof(&((*(_10419_d))._field_Kind))))) {
		_1ab2b7e53_pushErr((*(_102836_e)).ptr(), (*((*((*(_102851_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ab2e68dd_Str((*(_10419_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10299_result))._field_Model=jule::Any(jule::new_ptr<_1ab1ca6d4_AlignofExprModel>(_1ab1ca6d4_AlignofExprModel{._field_Expr=(*(_10419_d))._field_Model}), &__jule_any_type118);
	return _10299_result;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d67ad_builtinCallerStdMemFree(jule::Ptr<_1ab2b7903_Eval>* _105333_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _105348_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_105348_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_105333_e)).ptr(), (*((*(_105348_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_105348_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _10629_d = _1ab2d5b63_evalExpr((*(_105333_e)), (*((*(_105348_fc))))._field_Args[0LL]);;
	if ((_10629_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab2e8659_PerformsRC((*(_10629_d))._field_Kind.ptr())))) {
		_1ab2b7e53_pushErr((*(_105333_e)).ptr(), (*((*((*(_105348_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab2b5c0e_Data> _10719_result = _1ab2e1993_buildVoidData();;
	(*(_10719_result))._field_Model=jule::Any(jule::new_ptr<_1ab1cb4a4_FreeExprModel>(_1ab1cb4a4_FreeExprModel{._field_Expr=(*(_10629_d))._field_Model}), &__jule_any_type33);
	return _10719_result;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d6bdc_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ab2b7903_Eval>* _107645_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _107660_fc, jule::Ptr<_1ab2b5c0e_Data>* ) {
	if (((*((*(_107660_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_107645_e)).ptr(), (*((*(_107660_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107660_fc))))._field_Args.len() > 1LL)) {
		_1ab2b7e53_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ab2b5c0e_Data> _10859_d = _1ab2d5b63_evalExpr((*(_107645_e)), (*((*(_107660_fc))))._field_Args[0LL]);;
	if ((_10859_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ab312cd3_isBuiltinStrConvertable(&((*(_10859_d))._field_Kind))))) {
		_1ab2b7e53_pushErr((*(_107645_e)).ptr(), (*((*((*(_107660_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab2b5c0e_Data>(_1ab2b5c0e_Data{._field_Kind=_1ab3c8d00_primStr, ._field_Model=jule::Any(jule::new_ptr<_1ab1caccd_IntegratedToStrExprModel>(_1ab1caccd_IntegratedToStrExprModel{._field_Expr=(*(_10859_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d711b_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ab2b7903_Eval>* _110344_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _110359_fc, jule::Ptr<_1ab2b5c0e_Data>* _110381_d) {
	if ((!(_1ab2b8948_isUnsafe((*(_110344_e)).ptr())))) {
		_1ab2b7e53_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_110359_fc))))._field_Args.len() < 1LL)) {
		_1ab2b7e53_pushErr((*(_110344_e)).ptr(), (*((*(_110359_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _11139_argd = _1ab2d5b63_evalExpr((*(_110344_e)), (*((*(_110359_fc))))._field_Args[0LL]);;
	if ((_11139_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ab2e8b76_Prim((*(_11139_argd))._field_Kind.ptr()) == nullptr) || (!(_1ab302586_IsStr(_1ab2e8b76_Prim((*(_11139_argd))._field_Kind.ptr()).ptr()))))) {
		_1ab2b7e53_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ab2e68dd_Str((*(_11139_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1ab2b65d3_IsConst(_11139_argd.ptr()))) || (!(_1a8d0969a_IsStr((*(_11139_argd))._field_Constant.ptr()))))) {
		_1ab2b7e53_pushErr((*(_110344_e)).ptr(), (*((*((*(_110359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab2b5c0e_Data> _11289_r = _1ab2e1993_buildVoidData();;
	jule::Ptr<_1ab1d2312_FnIns> _11309_f = _1ab2e9e63_Fn((*((*(_110381_d))))._field_Kind.ptr());;
	if (((*(_11309_f))._field_Generics.len() > 0LL)) {
		(*(_11289_r))._field_Kind=(*((*(_11309_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1ab1cb1a7_BackendEmitExprModel> _11359_model = jule::new_ptr<_1ab1cb1a7_BackendEmitExprModel>(_1ab1cb1a7_BackendEmitExprModel{._field_Code=_1a8d0709e_ReadStr((*(_11139_argd))._field_Constant.ptr()), });;
	if (((*((*(_110359_fc))))._field_Args.len() > 1LL)) {
		(*(_11359_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_110359_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_110359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bbab6158:;
			if (it != expr_end) {
				jule::Ptr<_1ab19c8a4_Expr> _114121_arg = *it;
				{
					_11139_argd=_1ab2d5190_eval1((*(_110344_e)), _114121_arg);
					if ((_11139_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11359_model))._field_Exprs; __jule_push_dest.push((*(_11139_argd))._field_Model); };
				}
				_iter_next_1bbab6158:;
				++it;
				goto _iter_begin_1bbab6158;
			}
			_iter_end_1bbab6158:;
		};
	};
	(*(_11289_r))._field_Model=jule::Any(_11359_model, &__jule_any_type25);
	return _11289_r;;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d754a_builtinCallerStdDebugOut(jule::Ptr<_1ab2b7903_Eval>* _115434_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _115449_fc, jule::Ptr<_1ab2b5c0e_Data>* _115471_d) {
	(*(_115471_d))=_1ab3cde59_builtinCallerOut(_115434_e, _115449_fc, _115471_d);
	if (((*(_115471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_115471_d))))._field_Model.cast_ptr<_1ab1c726e_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_115471_d));;
}



inline jule::Ptr<_1ab2b5c0e_Data> _1ab3d7979_builtinCallerStdDebugOutln(jule::Ptr<_1ab2b7903_Eval>* _116336_e, jule::Ptr<_1ab1a15cd_FnCallExpr>* _116351_fc, jule::Ptr<_1ab2b5c0e_Data>* _116373_d) {
	(*(_116373_d))=_1ab3ce388_builtinCallerOutln(_116336_e, _116351_fc, _116373_d);
	if (((*(_116373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_116373_d))))._field_Model.cast_ptr<_1ab1c7648_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_116373_d));;
}



inline jule::Ptr<_1abca8503_FileInfo> _1abcebe1a_ParseFile(jule::Ptr<_1ab18873b_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abca8503_FileInfo> _279_finf = jule::new_ptr<_1abca8503_FileInfo>();;
	({
		__jule_tuple_x_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log __jule_assign_result = _1abcec4e2_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log _1abcec4e2_parseFileset(jule::Ptr<_1ab18873b_File> _5521_f) {
	__jule_tuple_x_1ab1965b2_Ast__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	jule::Ptr<_1abd1cd5e_parser> _569_p = jule::new_ptr<_1abd1cd5e_parser>();;
	_1abd2dc71_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab1a8591_ScopeTree> _1abcece82_newScope(void) {
	return jule::new_ptr<_1ab1a8591_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1abced317_isSt(jule::Ptr<_1ab182e72_Token> _499_current, jule::Ptr<_1ab182e72_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1abced68b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ab182e72_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1ab1839bc_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1abceda54_nextStPos(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1ab182e72_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bbe1100d:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1abced68b_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1abced317_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1bbe10b56;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1bbe0e957;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bbe11074:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1abced317_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1bbe10b56;
							};
						};
						goto _iter_next_1bbe0e957;
					}
				}
				_match_end_1bbe10ea8:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1bbe0e957;
			};
			if ((_709_i > _6833_start)) {
				if (_1abced68b_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1bbe0e957;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1abced317_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1abced317_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1bbe0e957;
			};
			_julec_label_1bbe10b56:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1bbe0e957:;
	}
	_iter_end_1bbe0e957:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_bool _1abceddc8_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1ab182e72_Token>> _13028_tokens) {
	__jule_tuple_sx_1ab182e72_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1abceda54_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ab182e72_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1ab182e72_Token__jule_tuple_bool __jule_assign_result = _1abceddc8_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1abcee208_stmt>> _1abcee5b0_splitStmts(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1abcee208_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1abcee208_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ab182e72_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_1ab182e72_Token__jule_tuple_bool __jule_assign_result = _1abceddc8_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1abcee208_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1abcee208_stmt>(_1abcee208_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1bbe1a9c9:;
	}
	_iter_end_1bbe1a9c9:;;
	return _1539_stmts;;
}



inline jule::Bool _1abd17c16_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1abd18024_isTypeRange(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbed4e4a:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1ab182e72_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bbed82a0:;
						if (it != expr_end) {
							jule::Ptr<_1ab182e72_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1bbed8d72:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1bbed82a0;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1bbed8de9:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1bbed82a0;
										}
									}
									_match_end_1bbed8ca6:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1abd17c16_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1bbed82a0:;
							++it;
							goto _iter_begin_1bbed82a0;
						}
						_iter_end_1bbed82a0:;
					};
					return true;;
				};
				if ((!(_1abd17c16_isTypeOp(&((*(_89412_token))._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1bbed4e4a:;
			++it;
			_8949_i++;
			goto _iter_begin_1bbed4e4a;
		}
		_iter_end_1bbed4e4a:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ab182e72_Token>> _1abd182dd_getBlockExpr(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbedab21:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1bbedba34:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bbedbaab:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1bbedb946;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bbedbb33:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bbedbbaa:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1bbedb946:;
				};
			}
			_iter_next_1bbedab21:;
			++it;
			_9289_i++;
			goto _iter_begin_1bbedab21;
		}
		_iter_end_1bbedab21:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token _1abd186a6_splitDelim(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbededcd:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bbee0bd1:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1bbededcd;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bbee0c58:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1bbee0cd0:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1ab182e72_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1ab182e72_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1bbee0b04:;
				};
			}
			_iter_next_1bbededcd:;
			++it;
			_9599_i++;
			goto _iter_begin_1bbededcd;
		}
		_iter_end_1bbededcd:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1abd18970_findLowestPrecOp(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbee4102:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1bbee4e49:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1bbee4ec1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bbee4ec1:;
						{
							(_9919_braceN)++;
							goto _iter_next_1bbee4102;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bbee5048:;
						{
							(_9919_braceN)--;
							goto _iter_next_1bbee4102;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1bbee50c0:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1bbee4102;
						}
					}
					_match_end_1bbee4d5b:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1bbee6533:;
						{
							goto _iter_next_1bbee4102;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1bbee65aa:;
						{
							goto _iter_next_1bbee4102;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1bbee6632:;
						{
							goto _iter_next_1bbee4102;
						}
					}
					else if ((!(_1ab1839bc_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1bbee66a9:;
						{
							goto _iter_next_1bbee4102;
						}
					}
					_match_end_1bbee62d0:;
				};
				jule::Ptr<_1ab182e72_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1ab1836ae_IsUnaryOp((*(_10229_left))._field_Id) || ((*(_10229_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1bbee4102;
				};
				if (((_9939_i > 1LL) && ((*(_10229_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1ab182e72_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1bbee4102;
						};
					};
				};
				jule::U8 _10399_p = _1ab1832e6_Prec((*(_99312_token)).ptr());;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1bbee4102:;
			++it;
			_9939_i++;
			goto _iter_begin_1bbee4102;
		}
		_iter_end_1bbee4102:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1ab19e2ce_IdentExpr> _1abd18c39_buildIdentExpr(jule::Ptr<_1ab182e72_Token>* _104824_token) {
	return jule::new_ptr<_1ab19e2ce_IdentExpr>(_1ab19e2ce_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_int _1abd19003_getRangeExprTokens(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _105628_tokens) {
	__jule_tuple_sx_1ab182e72_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1ab182e72_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bbeed6e4:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bbeed76b:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1bbeed67d:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1bbeec99b:;
	}
	_iter_end_1bbeec99b:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1abd19d17_checkAssignTokens(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ab18784a_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06138e:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bc061e72:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bc061ee9:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1bc061da6:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1bc062d85:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1bc062deb:;
						{
							goto _iter_next_1bc06138e;
						}
					}
					else if (_1ab187dcd_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1bc062e73:;
						{
							return true;;
						}
					}
					_match_end_1bc062cdb:;
				};
			}
			_iter_next_1bc06138e:;
			++it;
			goto _iter_begin_1bc06138e;
		}
		_iter_end_1bc06138e:;
	};
	return false;;
}



inline _1a7d05a93_Log _1abd1b016_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1ab18873b_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1a7d06005_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1ab182e72_Token>> _1abd1b511_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1ab182e72_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ab182e72_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1ab182e72_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1bc06830d:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1bc068385:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1bc068297:;
			};
		}
	_iter_next_1bc0674d8:;
	}
	_iter_end_1bc0674d8:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token _1abd1b7ca_rangeLast(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _9919_tokens) {
	__jule_tuple_sx_1ab182e72_Token__jule_tuple_sx_1ab182e72_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1ab182e72_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bc06c510:;
					{
						(_1099_braceN)++;
						goto _iter_next_1bc06b872;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bc06c587:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1bc06c499:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1bc06b872:;
	}
	_iter_end_1bc06b872:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log _1abd1bc81_parts(jule::Slice<jule::Ptr<_1ab182e72_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1ab182e72_Token__jule_tuple_s_1a7d05a93_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> _14213_parts = nullptr;;
	jule::Slice<_1a7d05a93_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06a1de:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1ab182e72_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bc0718ee:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1bc06a1de;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bc071976:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1bc071833:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1bc06a1de;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_1a7d05a93_Log _16617_err = _1abd1b016_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1a7d05a93_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1bc06a1de:;
			++it;
			_1479_i++;
			goto _iter_begin_1bc06a1de;
		}
		_iter_end_1bc06a1de:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ab182e72_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1ab182e72_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1abd1c04a_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1bc074c43:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1bc074ca9:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1bc074d20:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1bc074bcc:;
			{
				return _18320_left;;
			}
		}
		_match_end_1bc070b0c:;
	};
}



inline _1a7d05a93_Log _1abd1c479_compilerErr(jule::Ptr<_1ab182e72_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_1a7d06005_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1ab18971a_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1abd1c820_pushSuggestion(_1a7d05a93_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_1a7d06005_Logf(_20741_fmt, _20754_args);
}



inline jule::Ptr<_1ab198570_TypeDecl> _1abd2e777_buildVoidType(void) {
	return jule::new_ptr<_1ab198570_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab4cbb8e_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1bc238a1c:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d08c61_IsWindows(_1a7e164de_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1bc238a83:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d0903b_IsDarwin(_1a7e164de_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1bc238764:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d09305_IsLinux(_1a7e164de_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1bc2387ca:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d09e93_IsUnix(_1a7e164de_Os);
			}
		}
		else {
			_case_begin_1bc238214:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bc238654:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab4cbcd2_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1bc23ac94:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d09646_IsI386(_1a7e167a8_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1bc23a975:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d09910_IsAmd64(_1a7e167a8_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1bc23a9db:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d09bc9_IsArm64(_1a7e167a8_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1bc23aa52:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d0a603_Is64Bit(_1a7e167a8_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1bc23aab8:;
			{
				__jule_func_result.__jule_result_arg0=_1a7d0a339_Is32Bit(_1a7e167a8_Arch);
			}
		}
		else {
			_case_begin_1bc23a425:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bc23a865:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab4e6769_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1a7c5b2bd_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _1a7c5ac3a_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _1a7c3a654_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab4cbb8e_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab4cbcd2_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_1a7c3a654_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab4cbb8e_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab4cbcd2_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab4cbcd2_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab4cbb8e_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab4cbb8e_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1ab4e78e1_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1a7e164de_Os); };
	if (_1a7d09e93_IsUnix(_1a7e164de_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ab4e7b66_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1a7e167a8_Arch); };
	if (_1a7d0a603_Is64Bit(_1a7e167a8_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1a7d0a339_Is32Bit(_1a7e167a8_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ab4e7e52_initVars(jule::Slice<jule::Str>* _5518_vars, _1ab4e75c2_CompileInfo* _5532_info) {
	_1ab4e78e1_setOsVars(_5518_vars);
	_1ab4e7b66_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bc245d8c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bc245e14:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1bc245d37:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bc24709c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bc247113:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bc24718a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1bc2472cd:;
	};
}



inline jule::Slice<jule::U8> _1abd338ad_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1d779e276_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1a7e15400_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1a7d05a93_Log _1abd33b88_flatCompilerErr(jule::Str _4120_text) {
	return _1a7d05a93_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1abd384a6_pushPasses(jule::Ptr<_1ab2459c4_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcae9a0:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _11217_f = *it;
			{
				_julec_label_1bbcb0363:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbcb052d:;
					if (it != expr_end) {
						_1ab1d69ed_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1bbcb052d;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bbcb1474:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1bbcb052d;
										};
									}
									_iter_next_1bbcb1474:;
									++it;
									goto _iter_begin_1bbcb1474;
								}
								_iter_end_1bbcb1474:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1bbcb052d:;
						++it;
						goto _iter_begin_1bbcb052d;
					}
					_iter_end_1bbcb052d:;
				};
			}
			_iter_next_1bbcae9a0:;
			++it;
			goto _iter_begin_1bbcae9a0;
		}
		_iter_end_1bbcae9a0:;
	};
}



inline jule::Slice<jule::Str> _1abd3886e_getAllUniquePasses(jule::Ptr<_1ab2459c4_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1ab242a9d_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1abd384a6_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcb2ab3:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1abd384a6_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1bbcb2ab3:;
			++it;
			goto _iter_begin_1bbcb2ab3;
		}
		_iter_end_1bbcb2ab3:;
	};
	return _12913_passes;;
}



inline _1ab4e75c2_CompileInfo _1abd38a7d_buildCompileInfo(void) {
	_1ab4e75c2_CompileInfo _1429_info = _1ab4e75c2_CompileInfo{._field_Prod=_1d72610e0_Production, ._field_Test=_1d7260683_Test, };;
	{
		auto &_match_expr{ _1d725d780_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bbcb4015:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bbcb408c:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1bbcb3de4:;
	};
	{
		auto &_match_expr{ _1d725ed69_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bbcb270b:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bbcb4455:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bbcb44bb:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1bbcb4b81:;
	};
	return _1429_info;;
}



inline void _1abe95eb5_EliminateDefines(jule::Ptr<_1abd36b36_IR>* _29026_ir) {
	jule::Ptr<_1abe635ae_ObjectDeadCode> _2919_ocd = static__1abe63a54_new(_29026_ir);;
	_1abe95b85_elimanate(_2919_ocd);
}



inline jule::Ptr<_1ab19798c_Directive> _1abe9637d_findDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcee43a:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1bbcee43a:;
			++it;
			goto _iter_begin_1bbcee43a;
		}
		_iter_end_1bbcee43a:;
	};
	return nullptr;;
}



inline jule::Bool _1abe96702_hasDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1abe9637d_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1abe96aba_isTraitMethod(jule::Ptr<_1ab1bc1ed_StructIns>* _31123_owner, jule::Ptr<_1ab1d2312_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd0067d:;
		if (it != expr_end) {
			jule::Ptr<_1ab1e26da_Trait> _31217_t = *it;
			{
				if ((_1ab1e3389_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1bbd0067d:;
			++it;
			goto _iter_begin_1bbd0067d;
		}
		_iter_end_1bbd0067d:;
	};
	return false;;
}



inline void _1abe9aabe_eliminateDeadCodeOfScope(jule::Ptr<_1ab2212b8_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1ab223b5b_Label>> _2425_labels = jule::Slice<jule::Ptr<_1ab223b5b_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1ab224035_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1ab224035_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1abe978bd_scopeDeadCode> _2449_sdc = jule::new_ptr<_1abe978bd_scopeDeadCode>(_1abe978bd_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ab223b5b_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ab224035_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1abe9a78e_optimizeStmts(_2449_sdc);
	};
}



inline void _1abe9ad44_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ab1ce40d_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd417ac:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd445b2:;
					if (it != expr_end) {
						jule::Ptr<_1ab1d2312_FnIns> _25621_ins = *it;
						{
							_1abe9aabe_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1bbd445b2:;
						++it;
						goto _iter_begin_1bbd445b2;
					}
					_iter_end_1bbd445b2:;
				};
			}
			_iter_next_1bbd417ac:;
			++it;
			goto _iter_begin_1bbd417ac;
		}
		_iter_end_1bbd417ac:;
	};
}



inline void _1abe9b075_eliminateFunctionsScopePackage(jule::Ptr<_1ab2459c4_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd443d6:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _26317_f = *it;
			{
				_1abe9ad44_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1bbd443d6:;
			++it;
			goto _iter_begin_1bbd443d6;
		}
		_iter_end_1bbd443d6:;
	};
}



inline void _1abe9b32d_eliminateScopePackage(jule::Ptr<_1ab2459c4_Package>* _26831_pkg) {
	_1abe9b075_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1abe9b55e_EliminateScopes(jule::Ptr<_1abd36b36_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1ab242a9d_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1abe9b32d_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1bbd4621d:;
	}
	_iter_end_1bbd4621d:;;
	_1abe9b32d_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1ab3d7c21_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1ab3d80a6_equalConst(jule::Ptr<_1a8d04e26_Const> _2115_l, jule::Ptr<_1a8d04e26_Const> _2126_r) {
	{
		
		if (_1a8d08de7_IsI64(_2115_l.ptr())) {
			_case_begin_1bc2ed719:;
			{
				return (_1a8d08de7_IsI64(_2126_r.ptr()) && (_1a8d067eb_ReadI64(_2115_l.ptr()) == _1a8d067eb_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_1a8d0917d_IsU64(_2115_l.ptr())) {
			_case_begin_1bc2ed791:;
			{
				return (_1a8d0917d_IsU64(_2126_r.ptr()) && (_1a8d06a82_ReadU64(_2115_l.ptr()) == _1a8d06a82_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_1a8d09931_IsF64(_2115_l.ptr())) {
			_case_begin_1bc2eda49:;
			{
				return (_1a8d09931_IsF64(_2126_r.ptr()) && (_1a8d07335_ReadF64(_2115_l.ptr()) == _1a8d07335_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_1a8d0969a_IsStr(_2115_l.ptr())) {
			_case_begin_1bc2edab0:;
			{
				return (_1a8d0969a_IsStr(_2126_r.ptr()) && (_1a8d0709e_ReadStr(_2115_l.ptr()) == _1a8d0709e_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_1a8d09414_IsBool(_2115_l.ptr())) {
			_case_begin_1bc2edb26:;
			{
				return (_1a8d09414_IsBool(_2126_r.ptr()) && (_1a8d06d18_ReadBool(_2115_l.ptr()) == _1a8d06d18_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_1a8d09bb7_IsNil(_2115_l.ptr())) {
			_case_begin_1bc2edb8c:;
			{
				return _1a8d09bb7_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1bc2ed609:;
			{
				return false;;
			}
		}
		_match_end_1bc2ecdbc:;
	};
}



inline jule::Bool _1ab3d842a_equalCasting(jule::Ptr<_1ab1c2cc5_CastingExprModel> _4017_l, jule::Ptr<_1ab1c2cc5_CastingExprModel> _4039_r) {
	if ((!(_1ab2e6c2e_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1ab3d9360_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1ab3d87e3_equalUnary(jule::Ptr<_1ab1c1a71_UnaryExprModel> _4715_l, jule::Ptr<_1ab1c1a71_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1ab3d9360_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1ab3d8b67_equalIndexing(jule::Ptr<_1ab1c4007_IndexingExprModel> _5418_l, jule::Ptr<_1ab1c4007_IndexingExprModel> _5441_r) {
	return (_1ab3d9360_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1ab3d9360_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1ab3d8edb_equalBinary(jule::Ptr<_1ab1c1697_BinaryExprModel> _5916_l, jule::Ptr<_1ab1c1697_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5937_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5937_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1ab3d9360_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5937_r))._field_Left))._field_Model) && _1ab3d9360_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5937_r))._field_Right))._field_Model));;
}



inline jule::Bool _1ab3d9360_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1ab3d7c21_typeData(&(_7016_l)) != _1ab3d7c21_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc30c6e5:;
			{
				return (_7016_l.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc30c76c:;
			{
				jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1ab3d9360_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc30c7e4:;
			{
				return _1ab3d80a6_equalConst(_7016_l.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bc30ca03:;
			{
				return _1ab3d842a_equalCasting(_7016_l.cast_ptr<_1ab1c2cc5_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1ab1c2cc5_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc30ca69:;
			{
				return _1ab3d87e3_equalUnary(_7016_l.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc30cad0:;
			{
				return _1ab3d8b67_equalIndexing(_7016_l.cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1ab1c4007_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bc30cb46:;
			{
				return _1ab3d8edb_equalBinary(_7016_l.cast_ptr<_1ab1c1697_BinaryExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1ab1c1697_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1bc30c67e:;
			{
				return false;;
			}
		}
		_match_end_1bc30c580:;
	};
}



inline jule::Bool _1ab3e2621_isStdPackage(jule::Str* _46318_f, jule::Str _46326_p) {
	return _1a7c37497_HasPrefix((*(_46318_f)), _1a7c5a971_Join(jule::Slice<jule::Str>::make({_1a7e1590b_PathStdlib,_46326_p})));;
}



inline jule::Bool _1ab3e292e_isConstantValidConditionalCase(jule::Ptr<_1ab2216d6_If>* _46736_i) {
	{
		auto &_match_expr{ (*((*(_46736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc313157:;
			{
				jule::Ptr<_1a8d04e26_Const> _4709_c = (*((*(_46736_i))))._field_Expr.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
				return (_1a8d09414_IsBool(_4709_c.ptr()) && _1a8d06d18_ReadBool(_4709_c.ptr()));;
			}
		}
		_match_end_1bc313102:;
	};
	return false;;
}



inline jule::Bool _1ab3e2be8_isUnreachableExpr(jule::Any* _47623_expr) {
	{
		auto &_match_expr{ (*(_47623_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bc313e38:;
			{
				jule::Ptr<_1a8d04e26_Const> _4799_c = (*(_47623_expr)).cast_ptr<_1a8d04e26_Const>(&__jule_any_type19);;
				return (_1a8d09414_IsBool(_4799_c.ptr()) && (!(_1a8d06d18_ReadBool(_4799_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bc313e9e:;
			{
				jule::Ptr<_1ab1c1697_BinaryExprModel> _4829_m = (*(_47623_expr)).cast_ptr<_1ab1c1697_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_4829_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1ab3e2be8_isUnreachableExpr(&((*((*(_4829_m))._field_Left))._field_Model)) || _1ab3e2be8_isUnreachableExpr(&((*((*(_4829_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1bc31329a:;
	};
	return false;;
}



inline jule::Bool _1ab3e3039_isConstantValidMatchCase(jule::Ptr<_1ab226037_Case>* _49130_case) {
	{
		auto expr = &((*((*(_49130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc314b4d:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b5c0e_Data> *_49212_expr = it;
			{
				if (((_1ab2b65d3_IsConst((*(_49212_expr)).ptr()) && _1a8d09414_IsBool((*((*(_49212_expr))))._field_Constant.ptr())) && _1a8d06d18_ReadBool((*((*(_49212_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bc314b4d:;
			++it;
			goto _iter_begin_1bc314b4d;
		}
		_iter_end_1bc314b4d:;
	};
	return false;;
}



inline jule::Bool _1ab3e3303_isUnreachableConditionalCase(jule::Ptr<_1ab2216d6_If>* _50034_i) {
	return _1ab3e2be8_isUnreachableExpr(&((*((*(_50034_i))))._field_Expr));;
}



inline jule::Bool _1ab3e35bc_isUnreachableMatchCase(jule::Ptr<_1ab226037_Case>* _50428_case) {
	{
		auto expr = &((*((*(_50428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc31926d:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b5c0e_Data> *_50512_expr = it;
			{
				if ((!(_1ab3e2be8_isUnreachableExpr(&((*((*(_50512_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1bc31926d:;
			++it;
			goto _iter_begin_1bc31926d;
		}
		_iter_end_1bc31926d:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ab3ebc02_checkForBitShiftOpt(jule::Ptr<_1ab1c119c_OperandExprModel>* _55325_l, jule::Ptr<_1ab1c119c_OperandExprModel>* _55348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1a8d04222_IsInt(_1ab2e68dd_Str((*((*(_55325_l))))._field_Kind.ptr())))) || (!(_1a8d04222_IsInt(_1ab2e68dd_Str((*((*(_55348_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1a8d07852_AsU64((*((*(_55348_r))))._field_Model.cast_ptr<_1a8d04e26_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _5615_j = _1a8ca3545_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _5625_z = static_cast<jule::U64>(_5615_j);;
	if ((static_cast<jule::F64>(_5625_z) != _5615_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _5625_z;
	return __jule_func_result;;
}



inline jule::Bool _1ab3ec0ba_areSameLvalueExprModel(jule::Any* _57028_l, jule::Any* _57043_r) {
	{
		auto &_match_expr{ (*(_57028_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc285904:;
			{
				return ((*(_57043_r)) == (*(_57028_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc28596a:;
			{
				{
					auto &_match_expr{ (*(_57043_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1bc2863a5:;
						{
							goto _match_end_1bc285d11;
						}
					}
					else {
						_case_begin_1bc2865a3:;
						{
							return false;;
						}
					}
					_match_end_1bc285d11:;
				};
				jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _5839_lsi = (*(_57028_l)).cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1ab1c6218_StructSubIdentExprModel> _5849_rsi = (*(_57043_r)).cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_5839_lsi))._field_Field != (*(_5849_rsi))._field_Field)) {
					return false;;
				};
				return _1ab3ec0ba_areSameLvalueExprModel(&((*((*(_5839_lsi))._field_Expr))._field_Model), &((*((*(_5849_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bc2859d1:;
			{
				{
					auto &_match_expr{ (*(_57043_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1bc288a5b:;
						{
							jule::Ptr<_1ab1c1a71_UnaryExprModel> _59613_ul = (*(_57028_l)).cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1ab1c1a71_UnaryExprModel> _59713_ur = (*(_57043_r)).cast_ptr<_1ab1c1a71_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_59613_ul))._field_Op))._field_Id != (*((*(_59713_ur))._field_Op))._field_Id) || ((*((*(_59613_ul))._field_Op))._field_Kind != (*((*(_59713_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1ab3ec0ba_areSameLvalueExprModel(&((*((*(_59613_ul))._field_Expr))._field_Model), &((*((*(_59713_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1bc288a06:;
				};
			}
		}
		_match_end_1bc2851c8:;
	};
	return false;;
}



inline void _1ab3ee8d6_PushOptLevel(jule::I64 _2917_level) {
	jule::Bool _305_l1 = (_2917_level >= static_cast<jule::I64>(1LL));;
	_1ab3ec791_Copy=_305_l1;
	_1ab3eca9e_Deadcode=_305_l1;
	_1ab3ecd68_Append=_305_l1;
	_1ab3ed176_Math=_305_l1;
	_1ab3ed440_Access=_305_l1;
	_1ab3ed709_Inline=_305_l1;
	_1ab3ed9c3_Ptr=_305_l1;
	_1ab3edd9c_Cond=_305_l1;
	_1ab3ee166_Str=_305_l1;
	_1ab3ee430_Slice=_305_l1;
	_1ab3ee6e9_Assign=_305_l1;
}



inline void _1abea59b9_detectEnabled(void) {
	_1abea36ba_exprEnabled=(((_1ab3ed9c3_Ptr || _1ab3ed176_Math) || _1ab3ed440_Access) || _1ab3edd9c_Cond);
	_1abea39c8_scopeEnabled=(((((_1ab3edd9c_Cond || _1ab3ecd68_Append) || _1ab3ec791_Copy) || _1ab3ee166_Str) || _1ab3ee430_Slice) || _1ab3ee6e9_Assign);
}



inline void _1abece52b_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1a7e15400_Exit(1LL);
}



inline jule::U64 _1ac918eba_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1ac844489_isCopyOptimizable(jule::Ptr<_1ab2b5c0e_Data>* _86523_expr) {
	if ((!((*((*(_86523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_86523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bc3b6ace:;
			{
				return false;;
			}
		}
		_match_end_1bc3b6a79:;
	};
	return true;;
}



inline jule::Bool _1ac844852_isIterCopyOptimizable(jule::Ptr<_1ab2b5c0e_Data>* _87627_expr, jule::Ptr<_1ab2853a4_Var>* _87641_v) {
	if (((!((*((*(_87627_expr))))._field_Lvalue)) && (!(_1ab2e7da6_Mutable((*((*(_87627_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_87641_v))))._field_Mutable)) && (!((*((*(_87627_expr))))._field_Mutable)));;
}



inline jule::Str _1ac859801_decomposeCommonEsq(jule::U8 _149623_b) {
	{
		auto &_match_expr{ _149623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bc73e93a:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bc74009a:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bc73eb05:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bc73eb6b:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bc73ebd2:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bc73ec48:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bc740265:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bc7402cb:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bc740342:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bc7403a8:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1bc73ea8e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bc735359:;
	};
}



inline jule::Str _1ac859b0e_sbtoa(jule::U8 _152310_b) {
	if ((_152310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_152310_b < 128LLU)) {
		jule::Str _15289_seq = _1ac859801_decomposeCommonEsq(_152310_b);;
		if (!(_15289_seq).empty()) {
			return _15289_seq;;
		};
		if (((32LL <= _152310_b) && (_152310_b <= 126LLU))) {
			return jule::Str::from_byte(_152310_b);;
		};
	};
	jule::Str _15365_seq = _1a8ce4267_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_152310_b)), 8LL);;
	if ((_15365_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15365_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15365_seq);;
}



inline void _1ac859dea_cstrBytes(_1a7c4c7ed_StrBuilder* _154319_s, jule::Str _154334_ctx) {
	{
		auto expr = &(_154334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc745138:;
		if (it != expr_end) {
			jule::U8 *_154412_b = it;
			{
				_1a7c573c9_WriteStr(_154319_s, _1ac859b0e_sbtoa((*(_154412_b))));
			}
			_iter_next_1bc745138:;
			++it;
			goto _iter_begin_1bc745138;
		}
		_iter_end_1bc745138:;
	};
}



inline void _1ac85a22a_cstrLit(_1a7c4c7ed_StrBuilder* _154917_s, jule::Str _154932_ctx) {
	_1a7c57682_WriteByte(_154917_s, '\"');
	_1ac859dea_cstrBytes(_154917_s, _154932_ctx);
	_1a7c57682_WriteByte(_154917_s, '\"');
}



inline void _1ac85a5c1_ftoa(_1a7c4c7ed_StrBuilder* _155514_s, jule::F64 _155529_f, jule::I64 _155537_bitsize) {
	if ((_155537_bitsize != 32LL)) {
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::I64>(_155529_f)))) {
			_1ac85a8ac_itoa(_155514_s, static_cast<jule::I64>(static_cast<jule::I64>(_155529_f)));
			return;;
		};
		if ((_155529_f == static_cast<jule::F64>(static_cast<jule::U64>(_155529_f)))) {
			_1ac85ab98_utoa(_155514_s, static_cast<jule::U64>(static_cast<jule::U64>(_155529_f)));
			return;;
		};
	};
	jule::Str _15665_m = _1a8ccca69_FmtFloat(_155529_f, 'f', -1LL, _155537_bitsize);;
	_1a7c573c9_WriteStr(_155514_s, _15665_m);
	if ((!(_1a7c3bea2_Contains(_15665_m, jule::Str::lit(".", 1))))) {
		_1a7c573c9_WriteStr(_155514_s, jule::Str::lit(".0", 2));
	};
}



inline void _1ac85a8ac_itoa(_1a7c4c7ed_StrBuilder* _157314_s, jule::I64 _157329_x) {
	{
		
		if ((_157329_x == jule::MAX_I64)) {
			_case_begin_1bc7493b2:;
			{
				_1a7c573c9_WriteStr(_157314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_157329_x == jule::MIN_I64)) {
			_case_begin_1bc749439:;
			{
				_1a7c573c9_WriteStr(_157314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1bc7492a2:;
	};
	_1a7c573c9_WriteStr(_157314_s, _1a8ce4630_FmtInt(_157329_x, 10LL));
	if (_1a7d0a603_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1a7c57682_WriteByte(_157314_s, 'L');
	};
	_1a7c57682_WriteByte(_157314_s, 'L');
}



inline void _1ac85ab98_utoa(_1a7c4c7ed_StrBuilder* _159014_s, jule::U64 _159029_x) {
	{
		
		if ((_159029_x == jule::MAX_U64)) {
			_case_begin_1bc74b53a:;
			{
				_1a7c573c9_WriteStr(_159014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1bc74b43b:;
	};
	_1a7c573c9_WriteStr(_159014_s, _1a8ce4267_FmtUint(_159029_x, 10LL));
	if (_1a7d0a603_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1a7c57682_WriteByte(_159014_s, 'L');
	};
	_1a7c573c9_WriteStr(_159014_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1ac85b072_isForwarded(jule::Ptr<_1ab2212b8_Scope>* _160417_s) {
	jule::Any _16055_last = (*((*(_160417_s))))._field_Stmts[((*((*(_160417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16055_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc74d84a:;
			{
				{
					auto &_match_expr{ (*(_16055_last.cast_ptr<_1ab2b5c0e_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1bc74e6b4:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bc74e64d:;
						{
							return false;;
						}
					}
					_match_end_1bc74e5e8:;
				};
			}
		}
		else {
			_case_begin_1bc74d949:;
			{
				return true;;
			}
		}
		_match_end_1bc74ce54:;
	};
}



inline jule::Bool _1ac85b33b_isExprComesFromBind(jule::Ptr<_1ab2b5c0e_Data>* _161925_d) {
	{
		auto &_match_expr{ (*((*(_161925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc74ee12:;
			{
				return (*((*((*(_161925_d))))._field_Model.cast_ptr<_1ab2853a4_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bc74ee78:;
			{
				return (*((*((*((*((*(_161925_d))))._field_Model.cast_ptr<_1ab1c6218_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1bc74ed9b:;
			{
				return false;;
			}
		}
		_match_end_1bc74ed46:;
	};
}



inline jule::Bool _1ac85b605_isAny(jule::Ptr<_1ab2e6525_TypeKind>* _163115_t) {
	if ((_1ab2e96b0_TypeEnum((*(_163115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ab2ee0ee_Prim> _16355_prim = _1ab2e8b76_Prim((*(_163115_t)).ptr());;
	return ((_16355_prim != nullptr) && _1ab30281c_IsAny(_16355_prim.ptr()));;
}



inline void _1ac92d5b7_iterFiles(jule::Ptr<_1ab2459c4_Package>* _136119_pkg, jule::Fn<void(jule::Ptr<_1ab2b0863_SymbolTable>*)> _136134_f) {
	{
		auto expr = &((*((*(_136119_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4ce9e9:;
		if (it != expr_end) {
			jule::Ptr<_1ab2b0863_SymbolTable> _136217_file = *it;
			{
				_136134_f(&(_136217_file));
			}
			_iter_next_1bc4ce9e9:;
			++it;
			goto _iter_begin_1bc4ce9e9;
		}
		_iter_end_1bc4ce9e9:;
	};
}



inline jule::Slice<jule::U8> _1ac92d8c5_concatAllParts(jule::Slice<jule::Ptr<_1ab182e72_Token>> _136819_parts) {
	jule::I64 _13699_n = 0LL;;
	{
		auto expr = &(_136819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4d0896:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> *_137012_part = it;
			{
				_13699_n+=(*((*(_137012_part))))._field_Kind.len();
			}
			_iter_next_1bc4d0896:;
			++it;
			goto _iter_begin_1bc4d0896;
		}
		_iter_end_1bc4d0896:;
	};
	if ((_13699_n == 0LL)) {
		return nullptr;;
	};
	_1a7c4c7ed_StrBuilder _13769_s = static__1a7c4cb1c_New(_13699_n);;
	{
		auto expr = &(_136819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4d028b:;
		if (it != expr_end) {
			jule::Ptr<_1ab182e72_Token> *_137712_p = it;
			{
				_1a7c573c9_WriteStr(&_13769_s, (*((*(_137712_p))))._field_Kind);
			}
			_iter_next_1bc4d028b:;
			++it;
			goto _iter_begin_1bc4d028b;
		}
		_iter_end_1bc4d028b:;
	};
	return _1a7c58672_Buf(&_13769_s);;
}



inline jule::Bool _1ac92dc49_containsTraitMethod(jule::Ptr<_1ab1e26da_Trait>* _138429_t, jule::Str* _138441_ident) {
	{
		auto expr = &((*((*(_138429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4d2b2e:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _138512_m = *it;
			{
				if (((*(_138512_m))._field_Ident == (*(_138441_ident)))) {
					return true;;
				};
			}
			_iter_next_1bc4d2b2e:;
			++it;
			goto _iter_begin_1bc4d2b2e;
		}
		_iter_end_1bc4d2b2e:;
	};
	return false;;
}



inline void _1ac92e079_pushMethodsFromInherit(jule::Ptr<_1ab1e26da_Trait>* _139632_dest, jule::Ptr<_1ab1e26da_Trait>* _139651_src) {
	_1ac92e365_pushMethodsFromInherits(_139632_dest, _139651_src);
	{
		auto expr = &((*((*(_139651_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4d3d3e:;
		if (it != expr_end) {
			jule::Ptr<_1ab1ce40d_Fn> _139817_m = *it;
			{
				if ((!(_1ac92dc49_containsTraitMethod(_139632_dest, &((*(_139817_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1ab1ce40d_Fn>> &__jule_push_dest = (*((*(_139632_dest))))._field_Methods; __jule_push_dest.push(_139817_m); };
				};
			}
			_iter_next_1bc4d3d3e:;
			++it;
			goto _iter_begin_1bc4d3d3e;
		}
		_iter_end_1bc4d3d3e:;
	};
}



inline void _1ac92e365_pushMethodsFromInherits(jule::Ptr<_1ab1e26da_Trait>* _140733_dest, jule::Ptr<_1ab1e26da_Trait>* _140752_src) {
	{
		auto expr = &((*((*(_140752_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc4d46e1:;
		if (it != expr_end) {
			jule::Ptr<_1ab2ed6e7_TypeSymbol> _140817_inh = *it;
			{
				jule::Ptr<_1ab1e26da_Trait> _140913_t2 = _1ab2ea480_Trait((*(_140817_inh))._field_Kind.ptr());;
				_1ac92e079_pushMethodsFromInherit(_140733_dest, &(_140913_t2));
			}
			_iter_next_1bc4d46e1:;
			++it;
			goto _iter_begin_1bc4d46e1;
		}
		_iter_end_1bc4d46e1:;
	};
}



inline jule::Bool _1ac92e62e_isOpMethod(jule::Ptr<_1ab1ce40d_Fn>* _141516_m) {
	if ((((*((*(_141516_m))))._field_Generics.len() > 0LL) || ((*((*(_141516_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _14195_mi = (*((*(_141516_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ac92e8e8_isHeadDecl(jule::Ptr<_1ab1ce40d_Fn>* _143120_m) {
	if ((((*((*(_143120_m))))._field_Generics.len() > 0LL) || ((*((*(_143120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1ac92e62e_isOpMethod(_143120_m)) {
		return true;;
	};
	jule::Ptr<_1ab1d2312_FnIns> _14389_mi = (*((*(_143120_m))))._field_Instances[0LL];;
	;
	return static__1ab286806_Dispose(_1ab1bd265_FindMethod((*(_14389_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1ab19798c_Directive> _1ac93dcae_findDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _47423_directives, jule::Str _47454_tag) {
	{
		auto expr = _47423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbac8be:;
		if (it != expr_end) {
			jule::Ptr<_1ab19798c_Directive> _47517_dr = *it;
			{
				if (((*((*(_47517_dr))._field_Tag))._field_Kind == _47454_tag)) {
					return _47517_dr;;
				};
			}
			_iter_next_1bcbac8be:;
			++it;
			goto _iter_begin_1bcbac8be;
		}
		_iter_end_1bcbac8be:;
	};
	return nullptr;;
}



inline jule::Bool _1ac93e177_hasDirective(jule::Slice<jule::Ptr<_1ab19798c_Directive>>* _48418_directives, jule::Str _48449_tag) {
	return (_1ac93dcae_findDirective(&((*(_48418_directives))), _48449_tag) != nullptr);;
}



inline jule::Bool _1ac93e441_shouldInitialized(jule::Ptr<_1ab2e6525_TypeKind>* _49127_t) {
	jule::Ptr<_1ab2ee0ee_Prim> _4925_prim = _1ab2e8b76_Prim((*(_49127_t)).ptr());;
	if ((_4925_prim != nullptr)) {
		return ((!(_1ab30281c_IsAny(_4925_prim.ptr()))) && (!(_1ab302586_IsStr(_4925_prim.ptr()))));;
	};
	{
		
		if ((_1ab2e8e0c_Sptr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1bcbb06e6:;
			{
				return false;;
			}
		}
		else if ((_1ab2ea716_Map((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1bcbb075c:;
			{
				return false;;
			}
		}
		else if ((_1ab2e9bcc_Slc((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1bcbb07d4:;
			{
				return false;;
			}
		}
		else if ((_1ab2ea480_Trait((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1bcbb085b:;
			{
				return false;;
			}
		}
		else if ((_1ab2e9e63_Fn((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1bcbb08d3:;
			{
				return false;;
			}
		}
		else if ((_1ab2e9946_Arr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1bcbb095a:;
			{
				jule::Ptr<_1ab30591e_Arr> _50813_arr = _1ab2e9946_Arr((*(_49127_t)).ptr());;
				return _1ac93e441_shouldInitialized(&((*(_50813_arr))._field_Elem));;
			}
		}
		else if ((_1ab2ea1e9_Struct((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1bcbb09d2:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bcbae98c:;
			{
				return true;;
			}
		}
		_match_end_1bcbae76c:;
	};
}



inline void _1a7e198ee_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1a7e19b74_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1a7e198ee_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _1a7e19712_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1a7e19712_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc58c23:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1bcc58c23:;
			++it;
			goto _iter_begin_1bcc58c23;
		}
		_iter_end_1bcc58c23:;
	};
	_1a7c4c7ed_StrBuilder _499_s = static__1a7c4cb1c_New(32LL);;
	;
	{
		auto expr = &(_1a7e19712_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc5a51b:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1a7c573c9_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_1a7c573c9_WriteStr(&_499_s, _1a7c36ba0_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_1a7c573c9_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1a7c57682_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1bcc5a51b:;
			++it;
			_519_i++;
			goto _iter_begin_1bcc5a51b;
		}
		_iter_end_1bcc5a51b:;
	};
	jule::outln(_499_s);
}



inline void _1a7e19da5_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1a7e198ee_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _1a7e1a0a3_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1a7e1a229_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1a7e1a45a_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1a7e198ee_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1bcc616cb:;
			{
				_1a7e1a0a3_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1bcc615dd:;
			{
				_1a7e1a229_toolDistarch();
			}
		}
		else {
			_case_begin_1bcc6006a:;
			{
				_1a7e198ee_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1bcc6119d:;
	};
}



inline void _1a7e1a68b_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1a7e198ee_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _1d725d780_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _1d725ed69_CppStd));
}



inline void _1a7e1a999_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1a7e198ee_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1bcc64dd8:;
			{
				({
					auto except = static__1d779e61c_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1a7e198ee_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bcc63997:;
			{
				_1a7e198ee_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1bcc64910:;
	};
}



inline jule::Bool _1a7e1ac63_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1bcc65c96:;
			{
				_1a7e19b74_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1bcc65d1d:;
			{
				_1a7e19da5_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1bcc65d95:;
			{
				_1a7e1a45a_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1bcc65e1c:;
			{
				_1a7e1a68b_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1bcc66428:;
			{
				_1a7e1a999_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bcc65c30:;
			{
				return false;;
			}
		}
		_match_end_1bcc65614:;
	};
	return true;;
}



inline void _1a7e1add9_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _1d7884988_Args();;
	if ((_1899_args.len() < 2LL)) {
		_1a7e1add9_showInfo();
		return;;
	};
	if (_1a7e1ac63_processCommand(&(_1899_args))) {
		return;;
	};
	_1ac9b3c57_compileCommand(&(_1899_args));
}



inline void _1ac9aabe9_init(void) {
	_1d725d780_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1d779d7c5_File> _1ac9aaec4_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _1a7c5b664_Dir((*(_4316_path)));;
	({
		auto except = static__1d779c54e_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__1a7c5dd09_Create(_445_dir);
				if (!except.ok()) {
					_1abece52b_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d779deac_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1abece52b_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ac9ab14a_clearObjects(void) {
	({
		auto except = static__1d7b52492_Remove(_1ac9b220b_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1a7c5e03a_Remove(_1ac9aa48a_OutDir);
}



inline void _1ac9ab47a_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1a7dad4db_Cmd> _739_cmd = static__1a7dad909_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_1a7c3bb2d_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1a7dadb07_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bcc6c781:;
					{
						static__1abecbbaa_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bcc6c066:;
					{
						static__1abecbbaa_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bcc6c275:;
					{
						static__1abecbbaa_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1bcc6c1cb:;
			};
			_1abece52b_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _1a7dae08b_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1d725d780_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1abecbbaa_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1abece52b_Throw(jule::Str());
	};
	_1ac9ab14a_clearObjects();
}



inline jule::Bool _1ac9ab744_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _1a7c3a654_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1a7ce8aa8_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1ac9ab975_pushCompCmdClang(_1a7c4c7ed_StrBuilder* _10726_cmd) {
	_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1d725ed69_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bcc71323:;
			{
				_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bcc70366:;
			{
				_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bcc71455:;
			{
				_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bcc712bd:;
	};
	_1a7c57682_WriteByte(_10726_cmd, ' ');
	if (_1d72610e0_Production) {
		_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1a7c573c9_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1ac9abba6_pushCompCmdGcc(_1a7c4c7ed_StrBuilder* _13324_cmd) {
	_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1d725ed69_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bcc744e1:;
			{
				_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bcc72a2d:;
			{
				_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bcc72a94:;
			{
				_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bcc7448b:;
	};
	_1a7c57682_WriteByte(_13324_cmd, ' ');
	if (_1d72610e0_Production) {
		_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1a7c573c9_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1ac9b20b8_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1abd36b36_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_1d725eb16_CompilerPath);;
	_1a7c4c7ed_StrBuilder _1619_cmd = static__1a7c4cb1c_New(64LL);;
	{
		auto &_match_expr{ _1d725d780_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bcc7746c:;
			{
				_1ac9abba6_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bcc77967:;
			{
				_1ac9ab975_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1bcc7767b:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc77bdc:;
		if (it != expr_end) {
			jule::Ptr<_1ab242a9d_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1ac9ab744_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_1a7c573c9_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_1a7c57682_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1bcc77bdc:;
			++it;
			goto _iter_begin_1bcc77bdc;
		}
		_iter_end_1bcc77bdc:;
	};
	if (!(_1ac9aaa40_Out).empty()) {
		_1a7c573c9_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_1a7c573c9_WriteStr(&_1619_cmd, _1ac9aaa40_Out);
		_1a7c57682_WriteByte(&_1619_cmd, ' ');
	};
	_1a7c573c9_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc7a7c2:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1a7c57682_WriteByte(&_1619_cmd, ' ');
				_1a7c573c9_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1bcc7a7c2:;
			++it;
			goto _iter_begin_1bcc7a7c2;
		}
		_iter_end_1bcc7a7c2:;
	};
	if (_1a7e164de_Os.equal("windows", 7)) {
		_1a7c573c9_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _1a7c57bc1_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1ac9b220b_getCompilePath(void) {
	return _1a7c5a971_Join(jule::Slice<jule::Str>::make({_1ac9aa48a_OutDir,_1ac9aa776_OutName}));;
}



inline void _1ac9b23d7_applyTargetIndependentOptimizations(jule::Ptr<_1abd36b36_IR>* _20545_ir) {
	jule::Ptr<_1abea3bd7_Optimizer> _2069_opt = static__1abea415a_New(_20545_ir);;
	_1abea5744_Optimize(_2069_opt.ptr());
}



inline void _1ac9b255d_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1d725d780_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bcc7ce67:;
			{
				_1abece52b_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bcc7cbae:;
			{
				if ((_1d725eb16_CompilerPath).empty()) {
					_1d725eb16_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bcc7cc25:;
			{
				if ((_1d725eb16_CompilerPath).empty()) {
					_1d725eb16_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bcc7cb48:;
			{
				_1abece52b_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1d725d780_Compiler));
			}
		}
		_match_end_1bcc7cab0:;
	};
}



inline void _1ac9b278e_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1abece52b_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1ac9b29c0_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1abece52b_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1ac9b2c01_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1abece52b_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _1a7c3bb2d_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1abece52b_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1ac9b29c0_checkTargetOs(_2535_os);
		_1a7e164de_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1ac9b278e_checkTargetArch(_2539_arch);
		_1a7e167a8_Arch=_2539_arch;
	};
	_1a8ce8d4e_UpdateTarget();
}



inline void _1ac9b2e32_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1abece52b_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1bcc84b50:;
			{
				goto _match_end_1bcc842ae;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1bcc84842:;
			{
				_1ab3ee8d6_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1bcc844bd:;
			{
				_1abece52b_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1bcc842ae:;
	};
}



inline void _1ac9b32b7_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1d725ed69_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bcc848ca:;
			{
				goto _match_end_1bcc85139;
			}
		}
		else {
			_case_begin_1bcc85337:;
			{
				_1abece52b_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1d725ed69_CppStd));
			}
		}
		_match_end_1bcc85139:;
	};
}



inline jule::Slice<jule::Str> _1ac9b352b_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1ac9a552e_FlagSet> _2969_fs = static__1ac9a581a_New();;
	_1bcc8c361_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1bcc8c361_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1bcc8c361_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ac9aaa40_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d7260100_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d72603b9_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1bcc8c361_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d725d780_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1bcc8c361_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d725eb16_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d72610e0_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d726094c_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d7260d26_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1bcc8c361_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d725ed69_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ec791_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3eca9e_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ecd68_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ed176_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ed440_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ed709_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ed9c3_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3edd9c_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ee166_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ee430_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1bcc9439b_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab3ee6e9_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	jule::Slice<jule::Str> _3219_content = ({
		auto except = _1ac9a66a6_Parse(_2969_fs.ptr(), (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1abece52b_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1ac9b255d_checkCompilerFlag();
	_1ac9b32b7_checkCppStdFlag();
	_1ac9b2c01_checkTargetFlag(&(_2949_target));
	_1ac9b2e32_checkOptFlag(&(_2939_opt));
	return _3219_content;;
}



inline void _1ac9b375c_setupSemaFlags(jule::I64* _33424_flags) {
	if (_1d7260100_Shadowing) {
		(*(_33424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1abd36b36_IR> _1ac9b3a26_buildIr(jule::Slice<jule::Str>* _34013_args) {
	jule::Slice<jule::Str> _3415_content = _1ac9b352b_checkFlags(_34013_args);;
	jule::I64 _3439_semaFlags = static_cast<jule::I64>(0LL);;
	_1ac9b375c_setupSemaFlags(&(_3439_semaFlags));
	if ((_3415_content.len() == 0LL)) {
		_1abece52b_Throw(_1a7d06005_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3415_content.len() > 1LL)) {
		_1abece52b_Throw((jule::Str::lit("undefined content: ", 19) + _3415_content[1LL]));
	};
	jule::Str _3519_path;;
	jule::Bool _35115_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7c5b004_Abs(_3415_content[0LL]);
		_3519_path = __jule_assign_result.__jule_result_arg0;
		_35115_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35115_ok))) {
		_1abece52b_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1d77a08b5_Status> _3575_inf = ({
		auto except = static__1d779c54e_Of(_1a7e1590b_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1abece52b_Throw(_1a7d06005_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1d77a08b5_Status>(nullptr);});
	});;
	if ((!(_1d77a0c8e_IsDir(_3575_inf.ptr())))) {
		_1abece52b_Throw(_1a7d06005_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1abd36b36_IR> _3659_ir;;
	jule::Slice<_1a7d05a93_Log> _36513_logs;;
	({
		__jule_tuple_x_1abd36b36_IR__jule_tuple_s_1a7d05a93_Log __jule_assign_result = static__1abd37098_Build(_3519_path, _3439_semaFlags);
		_3659_ir = __jule_assign_result.__jule_result_arg0;
		_36513_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3659_ir == nullptr) && (_36513_logs == nullptr))) {
		_1abece52b_Throw(_1a7d06005_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3519_path, &__jule_any_type4)})));
	};
	if ((_36513_logs != nullptr)) {
		static__1abecda58_PrintLogs(&(_36513_logs));
		_1abece52b_Throw(jule::Str());
	};
	return _3659_ir;;
}



inline void _1ac9b3c57_compileCommand(jule::Slice<jule::Str>* _38024_args) {
	((*(_38024_args))).mut_slice(1LL);;
	if ((*(_38024_args))[0LL].equal("test", 4)) {
		_1d7260683_Test=true;
		((*(_38024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1abd36b36_IR> _3869_ir = _1ac9b3a26_buildIr(_38024_args);;
	;
	if ((!(_1d7260683_Test))) {
		jule::Ptr<_1ab1ce40d_Fn> _39113_main = _1ab247058_FindFn((*(_3869_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39113_main == nullptr)) {
			_1abece52b_Throw(_1a7d06005_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1ac9b23d7_applyTargetIndependentOptimizations(&(_3869_ir));
	_1abd38110_Order(_3869_ir.ptr());
	jule::Str _4025_compPath = _1ac9b220b_getCompilePath();;
	jule::Str _4035_compiler;;
	jule::Str _40315_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ac9b20b8_genCompileCmd(_4025_compPath, &(_3869_ir));
		_4035_compiler = __jule_assign_result.__jule_result_arg0;
		_40315_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ac921379_ObjectCoder> _4059_oc = static__1ac921775_New(&(_3869_ir), _1ac91e861_SerializationInfo{._field_Compiler=_4035_compiler, ._field_CompilerCommand=_40315_compilerCmd});;
	if (_1d7260683_Test) {
		jule::Ptr<_1ac85c606_TestCoder> _41013_tc = static__1ac85ca46_New(&(_4059_oc));;
		_1ac85ddbb_Serialize(_41013_tc);
	} else {
		_1ac92d1cc_Serialize(_4059_oc);
	};
	jule::Ptr<_1d779d7c5_File> _4169_file = _1ac9aaec4_openOutput(&(_4025_compPath));;
	({
		auto except = _1d7b52926_Write(_4169_file.ptr(), _1a7c58672_Buf(&(*(_4059_oc))._field_Buf));
		if (!except.ok()) {
			_1abece52b_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1d779ed59_Close(_4169_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:420:5"));
	});
	if ((!(_1d72603b9_Transpilation))) {
		_1ac9ab47a_compileIr(_4035_compiler, _40315_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1a7e168da_init();
	_1a8ce8ec5_init();
	_1ac9aabe9_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}