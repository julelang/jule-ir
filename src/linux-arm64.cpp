// Auto generated by JuleC.
// JuleC version: jule0.0.10 @master
// Date: 27/3/2024 23.14 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   

struct _21ec846ad_Reader {};
struct _21ec84bb9_Writer {};
struct _21ec853d4_WriterCloser {};
struct _21ec85ca8_Stream {};
struct _21eb471a8_Importer {};
struct _21ec05bd4_Kind {};
struct _21ec23a48_Lookup {};
struct _220dee393_CommonFlag {};

struct _21c2d5294_FoldPair;


struct _21c2d5838_CaseRange;


struct _21c2d5d88_Range16;


struct _21c2d642c_Range32;


struct _21c2d697c_RangeTable;


struct _2368b5519_accept_range;


struct _2368be776_LazyBuff;


struct _235a1da19_DirEntry;


struct _235a1ec7e_Directory;


struct _235a41113_File;


struct _235a75ae8_Status;


struct _21c384552_Cmd;


struct _21c348b32_Log;


struct _21c627dde_Token;


struct _21c62e038_File;


struct _21c631766_KindPair;


struct _21c638097_Lex;


struct _21c4cc2b0_Ast;


struct _21c5ec545_NamespaceTypeDecl;


struct _21c5c6e48_SptrTypeDecl;


struct _21c5a1c25_SlcTypeDecl;


struct _21c515c99_TupleTypeDecl;


struct _21c52b199_PtrTypeDecl;


struct _21c486ac7_ArrTypeDecl;


struct _21c4d770a_MapTypeDecl;


struct _21c4d792a_RetTypeDecl;


struct _21c4d808a_TupleExpr;


struct _21c63d410_CastExpr;


struct _21c63e1d0_StructLit;


struct _21c6411e3_ScopeTree;


struct _21c6448ab_Conditional;


struct _21c64866d_Impl;


struct _21cb7e09e_FileInfo;


struct _21cb7e2be_PackageInfo;


struct _21cb81876_Stmt;


struct _21cb82327_ScopeParser;


struct _21cb95ec8_CallData;


struct _21cb97727_ExprBuilder;


struct _21cba92b6_Parser;


struct _21cbbdb9e_TypeBuilder;


struct _21e68dda9_FloatInfo;


struct _21e223b3c_DecimalSlice;


struct _21ea2cbe8_LeftCheat;


struct _21ea2ce18_Decimal;


struct _21ea9d450_Const;


struct _21ec83239_FileStream;


struct _21ec86171_ByteStream;


struct _21ec88c34_Scanner;


struct _21dd02188_Operators;


struct _21dd05be7_FieldIns;


struct _21dd08854_OperandExprModel;


struct _21dd097de_StructArgExprModel;


struct _21dd09c40_StructLitExprModel;


struct _21dd0a12a_AllocStructLitExprModel;


struct _21dd0b68c_SliceExprModel;


struct _21dd0c13d_AnonFnExprModel;


struct _21dd0c58e_KeyValPairExprModel;


struct _21dd0cade_MapExprModel;


struct _21dd0e85a_StructStaticIdentExprModel;


struct _21dd0ec89_ArrayExprModel;


struct _21dd100db_CommonIdentExprModel;


struct _21dd10b03_TupleExprModel;


struct _21dd110dc_BuiltinOutCallExprModel;


struct _21dd115a4_BuiltinOutlnCallExprModel;


struct _21dd1196c_BuiltinCloneCallExprModel;


struct _21dd11e34_BuiltinNewCallExprModel;


struct _21dd13078_BuiltinMakeCallExprModel;


struct _21dd13540_BuiltinAppendCallExprModel;


struct _21dd13a07_BuiltinErrorCallExprModel;


struct _21dd13d37_SizeofExprModel;


struct _21dd144db_AlignofExprModel;


struct _21dd147a5_RuneExprModel;


struct _21dd14b18_IntegratedToStrExprModel;


struct _21dd15146_TernaryExprModel;


struct _21dd15597_BackendEmitExprModel;


struct _21dd158e9_FreeExprModel;


struct _21dd16ac6_RetType;


struct _21dd1badc_ParamIns;


struct _21dd1cc42_FnIns;


struct _21dd264ba_ReferenceStack;


struct _21dd2c0a3_SymbolBuilder;


struct _21de24992_Impl;


struct _21eb1472a_Scope;


struct _235bb50ab_If;


struct _21eb2c28c_Else;


struct _21eb2c4ac_Conditional;


struct _21eb2c6cc_InfIter;


struct _21eb2c8ec_WhileIter;


struct _21eb2cb1c_RangeIter;


struct _21eb2cd3c_ContSt;


struct _21eb2d05c_BreakSt;


struct _21eb2d27c_Label;


struct _21eb2d49c_GotoSt;


struct _21eb2d6bc_Postfix;


struct _21eb2db0c_MultiAssign;


struct _21eb2dd2c_Match;


struct _21eb2e27d_Case;


struct _21eb2e49d_FallSt;


struct _21eb2e6bd_RetSt;


struct _21eb2eb0d_ScopeGoto;


struct _21eb2ed2d_ScopeChecker;


struct _21eb43094_DirectiveChecker;


struct _21eb4d269_Package;


struct _21eb5443a_Sema;


struct _21eb720b2_MissingRetChecker;


struct _21eb74306_IterRelation;


struct _21eb7622b_FuncPattern;


struct _21ebb2135_RangeChecker;


struct _21ebb6c0b_SymbolTable;


struct _21ebbd053_Data;


struct _21ebbe362_Value;


struct _21ebc00aa_Eval;


struct _21ebe0c68_UnaryEval;


struct _21ec06223_TypeKind;


struct _21ec0aa85_TypeSymbol;


struct _21ec0b58b_Prim;


struct _21ec103e7_Sptr;


struct _21ec10eca_Slc;


struct _21ec11b46_Tuple;


struct _21ec128b1_Map;


struct _21ec13692_Arr;


struct _21ec14275_Ptr;


struct _21ec16ed1_Referencer;


struct _21c483200_CompileInfo;


struct _21c4878b9_DirectiveEval;


struct _21cc7b410_JuleImporter;


struct _21cd1eccd_OrderedDefines;


struct _21cd6bee5_DefineOrderer;


struct _21cd7c19d_ScopeDeadCode;


struct _21d0a7d8a_AnsiEscape;


struct _21d159c61_Logger;


struct _2202406c4_UnsafeBinopExprModel;


struct _2202408e4_UnsafeIndexingExprModel;


struct _220240c57_PushToSliceExprModel;


struct _2202417c4_StrInsertBeginExprModel;


struct _220242d25_ScopeOptimizer;


struct _220249403_ExprOptimizer;


struct _220252b04_Optimizer;


struct _220dc5e6e_AbsTime;


struct _220dc6722_Time;


struct _220dc8b64_Duration;


struct _2200e5326_TestCoder;


struct _220151b8a_ScopeCoder;


struct _2201e99be_ExprCoder;


struct _22026188d_DeriveCoder;


struct _22026374c_IdentCoder;


struct _220da8b44_SerializationInfo;


struct _220d89141_TraitHash;


struct _220dd6897_CustomType;


struct _220dd7414_TypeCoder;


struct _220dee78e_Flag_0;

struct _220dee78e_Flag_1;

struct _220dee78e_Flag_2;

struct _220dee78e_Flag_3;

struct _220dee78e_Flag_4;


struct _220e00b7a_FlagSet;


struct _21c4d84db_LitExpr;


struct _21c4d870b_UnsafeExpr;


struct _21c4d892b_CoExpr;


struct _21c4d8b4b_IdentExpr;


struct _21c4d8d6b_UnaryExpr;


struct _21cba5180_AssignInfo;


struct _21c4d908b_VariadicExpr;


struct _21c525490_Directive;


struct _21c63d630_NsSelectionExpr;


struct _21c63d850_SubIdentExpr;


struct _21c63da70_BinopExpr;


struct _21c63dc90_FnCallExpr;


struct _21eb2d8dc_Assign;


struct _21c63deb0_FieldExprPair;


struct _21c5d253b_TypeDecl;


struct _21c63e400_BraceLit;


struct _21c63e620_KeyValPair;


struct _21dc10607_Field;


struct _21eb2e8dd_ScopeLabel;


struct _21c63e840_SliceExpr;


struct _21dd03266_Struct;


struct _21c4d82aa_IndexingExpr;


struct _21eb49c8d_ImportInfo;


struct _21dd06742_StructIns;


struct _21c63eed3_SlicingExpr;


struct _21dd08de8_BinopExprModel;


struct _21dd09349_UnaryExprModel;


struct _21eb75615_Var;


struct _21c640203_TernaryExpr;


struct _21eba4e2a_TypeCompatibilityChecker;


struct _21eba6778_AssignTypeChecker;


struct _21eba8549_DynamicTypeAnnotation;


struct _21ebabbbd_FnCallArgChecker;


struct _21ebaee24_StructLitChecker;


struct _21c640423_GenericDecl;


struct _21ebb4995_RetTypeChecker;


struct _21c640643_LabelSt;


struct _21dd0a757_CastingExprModel;


struct _21dd0b23b_FnCallExprModel;


struct _21c640863_GotoSt;


struct _21dd0bbdc_IndexingExprModel;


struct _21ebe7de6_BinaryEval;


struct _21ec05288_TypeAlias;


struct _21c640a83_FallSt;


struct _21c640ca3_AssignLeft;


struct _21c640ec3_AssignSt;


struct _21dd0d23d_SlicingExprModel;


struct _21dd0d88c_TraitSubIdentExprModel;


struct _21dd0e294_StructSubIdentExprModel;


struct _21c529e9a_IdentTypeDecl;


struct _21c641413_ParamDecl;


struct _21c641633_FnDecl;


struct _21dd107c3_CommonSubIdentExprModel;


struct _21ec17e27_TypeChecker;


struct _21c64205c_VarDecl;


struct _21c6423c0_RetSt;


struct _21c6428ba_Iter;


struct _21ccec4b4_IR;


struct _21c642e3c_WhileKind;


struct _21c643558_RangeKind;


struct _21dd123eb_BuiltinPanicCallExprModel;


struct _21dd129b2_BuiltinAssertCallExprModel;


struct _21c6438bb_BreakSt;


struct _21c643c2e_ContSt;


struct _21c64413b_If;


struct _21c64449e_Else;


struct _2202412da_MutSlicingExprModel;


struct _21c4d7b4a_Expr;


struct _21c644ea5_TypeAliasDecl;


struct _21c6453b2_Case;


struct _21c645912_MatchCase;


struct _21c6460a5_UseDecl;


struct _21c6464b2_EnumItemDecl;


struct _21c646d0e_EnumDecl;


struct _21dd17423_Param;


struct _21dd19249_Fn;


struct _21c64756d_FieldDecl;


struct _21c647c11_StructDecl;


struct _21c6481b7_TraitDecl;


struct _21dd27b09_Pass;


struct _21c4d7d6a_UseExpr;


struct _220d8cc38_ObjectCoder;


struct _21deee929_Trait;


struct _21dd39e29_EnumItem;


struct _21ddb6aee_Enum;


struct _21c523c63_Node;


struct _220e03b39_ArgParser;

struct _21c2d5294_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_21c2d5294_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_21c2d5294_FoldPair(void) = default;

	inline bool operator==(_21c2d5294_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_21c2d5294_FoldPair _other) { return !this->operator==(_other); }


};
struct _21c2d5838_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_21c2d5838_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_21c2d5838_CaseRange(void) = default;

	inline bool operator==(_21c2d5838_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_21c2d5838_CaseRange _other) { return !this->operator==(_other); }


};
struct _21c2d5d88_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_21c2d5d88_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_21c2d5d88_Range16(void) = default;

	inline bool operator==(_21c2d5d88_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_21c2d5d88_Range16 _other) { return !this->operator==(_other); }


};
struct _21c2d642c_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_21c2d642c_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_21c2d642c_Range32(void) = default;

	inline bool operator==(_21c2d642c_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_21c2d642c_Range32 _other) { return !this->operator==(_other); }


};
struct _21c2d697c_RangeTable {
	jule::Slice<_21c2d5d88_Range16> _field_r16 = jule::Slice<_21c2d5d88_Range16>();
	jule::Slice<_21c2d642c_Range32> _field_r32 = jule::Slice<_21c2d642c_Range32>();
	jule::I64 _field_latin_offset = jule::I64();


	_21c2d697c_RangeTable(jule::Slice<_21c2d5d88_Range16> __param_r16, jule::Slice<_21c2d642c_Range32> __param_r32, jule::I64 __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_21c2d697c_RangeTable(void) = default;

	inline bool operator==(_21c2d697c_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_21c2d697c_RangeTable _other) { return !this->operator==(_other); }


};
struct _2368b5519_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_2368b5519_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_2368b5519_accept_range(void) = default;

	inline bool operator==(_2368b5519_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_2368b5519_accept_range _other) { return !this->operator==(_other); }


};
inline jule::U8 _235b4dd58_index(_2368be776_LazyBuff*,jule::I64);
inline void _235b66799_append(_2368be776_LazyBuff*,jule::U8);
inline jule::Str _235b6c0c9_string(_2368be776_LazyBuff*);
struct _2368be776_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();


	_2368be776_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::I64 __param_w, jule::Str __param_vol_and_path, jule::I64 __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_2368be776_LazyBuff(void) = default;

	inline bool operator==(_2368be776_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_2368be776_LazyBuff _other) { return !this->operator==(_other); }


};
struct _235a1da19_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_235a75ae8_Status> _field_stat = jule::Ptr<_235a75ae8_Status>();


	_235a1da19_DirEntry(jule::Str __param_name, jule::Ptr<_235a75ae8_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_235a1da19_DirEntry(void) = default;

	inline bool operator==(_235a1da19_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_235a1da19_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_235a1da19_DirEntry>>> static__235b24ec7_read(jule::Str);
inline jule::VoidExceptional static__235b27716_create(jule::Str);
inline jule::VoidExceptional static__235b2b792_remove(jule::Str);
struct _235a1ec7e_Directory {
	

	_235a1ec7e_Directory(void) = default;

	inline bool operator==(_235a1ec7e_Directory _other) { return true; }

	inline bool operator!=(_235a1ec7e_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_235a41113_File>> static__235a20686_open(jule::Str,jule::I64,jule::I64);
inline jule::VoidExceptional static__235a27160_remove(jule::Str);
inline jule::Exceptional<jule::I64> _235a3735c_write(_235a41113_File*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _235a38eda_read(_235a41113_File*,jule::Slice<jule::U8>);
inline jule::Ptr<_235a41113_File> static__235a32ed4_new(jule::U64);
inline jule::Exceptional<jule::Ptr<_235a41113_File>> static__235a20ec2_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__235a2b97d_read(jule::Str);
inline jule::VoidExceptional static__235a2c594_write(jule::Str,jule::Slice<jule::U8>,jule::I64);
inline jule::Exceptional<jule::I64> _235a30652_seek(_235a41113_File*,jule::I64,jule::I64);
inline jule::VoidExceptional _235a3847e_close(_235a41113_File*);
struct _235a41113_File {
	jule::U64 _field_handle = jule::U64();


	_235a41113_File(jule::U64 __param_handle): _field_handle(__param_handle) {}

	

	_235a41113_File(void) = default;

	inline bool operator==(_235a41113_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_235a41113_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_235a75ae8_Status>> static__235a252a1_of(jule::Str);
inline jule::Bool _235a3a11d_is_dir(_235a75ae8_Status*);
inline jule::Bool _235a75d18_is_reg(_235a75ae8_Status*);
struct _235a75ae8_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();


	_235a75ae8_Status(jule::U64 __param_mode, jule::U64 __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_235a75ae8_Status(void) = default;

	inline bool operator==(_235a75ae8_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_235a75ae8_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21c384552_Cmd> static__21c3849e7_new(jule::Str);
inline jule::Exceptional<jule::I64> _21c384cc2_spawn(_21c384552_Cmd*);
inline jule::Exceptional<jule::I64> _21c388006___spawn(_21c384552_Cmd*);
struct _21c384552_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_21c384552_Cmd(jule::Str __param_path, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field_path(__param_path), _field_args(__param_args), _field_env(__param_env) {}

	

	_21c384552_Cmd(void) = default;

	inline bool operator==(_21c384552_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_21c384552_Cmd _other) { return !this->operator==(_other); }


};
struct _21c348b32_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_21c348b32_Log(jule::I64 __param_kind, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_21c348b32_Log(void) = default;

	inline bool operator==(_21c348b32_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_21c348b32_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _21c628340_prec(_21c627dde_Token*);
struct _21c627dde_Token {
	jule::Ptr<_21c62e038_File> _field_file = jule::Ptr<_21c62e038_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;


	_21c627dde_Token(jule::Ptr<_21c62e038_File> __param_file, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_kind, jule::U64 __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_21c627dde_Token(void) = default;

	inline bool operator==(_21c627dde_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_21c627dde_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c62e4ab_is_ok(_21c62e038_File*);
inline void _21c62e7ca_fill(_21c62e038_File*,jule::Slice<jule::U8>);
inline jule::Str _21c62eaa5_dir(_21c62e038_File*);
inline jule::Str _21c62ed80_name(_21c62e038_File*);
inline jule::U64 _21c63015a_addr(_21c62e038_File*);
inline jule::Str _21c630512_get_row(_21c62e038_File*,jule::I64);
struct _21c62e038_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<_21c627dde_Token> _field_tokens = jule::Slice<_21c627dde_Token>();


	_21c62e038_File(jule::Str __param_path, jule::Slice<jule::U8> __param_data, jule::Slice<_21c627dde_Token> __param_tokens): _field_path(__param_path), _field_data(__param_data), _field_tokens(__param_tokens) {}

	

	_21c62e038_File(void) = default;

	inline bool operator==(_21c62e038_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_21c62e038_File _other) { return !this->operator==(_other); }


};
struct _21c631766_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;


	_21c631766_KindPair(jule::Str __param_kind, jule::U64 __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_21c631766_KindPair(void) = default;

	inline bool operator==(_21c631766_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_21c631766_KindPair _other) { return !this->operator==(_other); }


};
inline void _21c638718_push_err(_21c638097_Lex*,jule::Str,jule::Slice<jule::Any>);
inline void _21c638b14_push_err_tok(_21c638097_Lex*,_21c627dde_Token&,jule::Str);
inline void _21c638d56_lex(_21c638097_Lex*);
inline jule::Str _21c63920d_id(_21c638097_Lex*,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _21c6394d8_resume(_21c638097_Lex*);
inline void _21c639807_lex_line_comment(_21c638097_Lex*,_21c627dde_Token&);
inline void _21c639b26_lex_range_comment(_21c638097_Lex*,_21c627dde_Token&);
inline jule::Str _21c639ecd_num(_21c638097_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _21c63a385_escape_seq(_21c638097_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _21c63a819_get_rune(_21c638097_Lex*,jule::Slice<jule::U8>&,jule::Bool);
inline jule::Str _21c63abc1_lex_rune(_21c638097_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _21c63ae9b_lex_str(_21c638097_Lex*);
inline jule::Bool _21c63b276_is_first_token_of_line(_21c638097_Lex*);
inline void _21c63b4b8_new_line(_21c638097_Lex*);
inline jule::Bool _21c63bb06_is_op(_21c638097_Lex*,jule::Slice<jule::U8>&,jule::Str,jule::U64,_21c627dde_Token&);
inline jule::Bool _21c63c08a_lex_basic_ops(_21c638097_Lex*,jule::Slice<jule::U8>,_21c627dde_Token&);
inline jule::Bool _21c63c51e_lex_id(_21c638097_Lex*,jule::Slice<jule::U8>&,_21c627dde_Token&);
inline jule::Bool _21c63c9a3_lex_num(_21c638097_Lex*,jule::Slice<jule::U8>&,_21c627dde_Token&);
inline _21c627dde_Token _21c63cc7d_token(_21c638097_Lex*);
struct _21c638097_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<_21c627dde_Token> _field_tokens = jule::Slice<_21c627dde_Token>();
	jule::Ptr<_21c62e038_File> _field_file = jule::Ptr<_21c62e038_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_21c348b32_Log> _field_errors = jule::Slice<_21c348b32_Log>();


	_21c638097_Lex(jule::I64 __param_mode, jule::Slice<_21c627dde_Token> __param_tokens, jule::Ptr<_21c62e038_File> __param_file, jule::I64 __param_pos, jule::I64 __param_column, jule::I64 __param_row, jule::Slice<_21c348b32_Log> __param_errors): _field_mode(__param_mode), _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_21c638097_Lex(void) = default;

	inline bool operator==(_21c638097_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_21c638097_Lex _other) { return !this->operator==(_other); }


};
struct _21c4cc2b0_Ast {
	jule::Ptr<_21c62e038_File> _field_file = jule::Ptr<_21c62e038_File>();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Slice<jule::Ptr<_21c6460a5_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_21c6460a5_UseDecl>>();
	jule::Slice<_21c523c63_Node> _field_nodes = jule::Slice<_21c523c63_Node>();


	_21c4cc2b0_Ast(jule::Ptr<_21c62e038_File> __param_file, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_21c6460a5_UseDecl>> __param_use_decls, jule::Slice<_21c523c63_Node> __param_nodes): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_nodes(__param_nodes) {}

	

	_21c4cc2b0_Ast(void) = default;

	inline bool operator==(_21c4cc2b0_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_21c4cc2b0_Ast _other) { return !this->operator==(_other); }


};
struct _21c5ec545_NamespaceTypeDecl {
	jule::Slice<_21c627dde_Token> _field_idents = jule::Slice<_21c627dde_Token>();
	jule::Ptr<_21c529e9a_IdentTypeDecl> _field_kind = jule::Ptr<_21c529e9a_IdentTypeDecl>();


	_21c5ec545_NamespaceTypeDecl(jule::Slice<_21c627dde_Token> __param_idents, jule::Ptr<_21c529e9a_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_21c5ec545_NamespaceTypeDecl(void) = default;

	inline bool operator==(_21c5ec545_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21c5ec545_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _21c5c6e48_SptrTypeDecl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_elem = jule::Ptr<_21c5d253b_TypeDecl>();


	_21c5c6e48_SptrTypeDecl(jule::Ptr<_21c5d253b_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_21c5c6e48_SptrTypeDecl(void) = default;

	inline bool operator==(_21c5c6e48_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_21c5c6e48_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _21c5a1c25_SlcTypeDecl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_elem = jule::Ptr<_21c5d253b_TypeDecl>();


	_21c5a1c25_SlcTypeDecl(jule::Ptr<_21c5d253b_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_21c5a1c25_SlcTypeDecl(void) = default;

	inline bool operator==(_21c5a1c25_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_21c5a1c25_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _21c515c99_TupleTypeDecl {
	jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>();


	_21c515c99_TupleTypeDecl(jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_21c515c99_TupleTypeDecl(void) = default;

	inline bool operator==(_21c515c99_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_21c515c99_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c5ee613_is_unsafe(_21c52b199_PtrTypeDecl*);
struct _21c52b199_PtrTypeDecl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_elem = jule::Ptr<_21c5d253b_TypeDecl>();


	_21c52b199_PtrTypeDecl(jule::Ptr<_21c5d253b_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_21c52b199_PtrTypeDecl(void) = default;

	inline bool operator==(_21c52b199_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_21c52b199_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c601ca8_auto_sized(_21c486ac7_ArrTypeDecl*);
struct _21c486ac7_ArrTypeDecl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_elem = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21c4d7b4a_Expr> _field_size = jule::Ptr<_21c4d7b4a_Expr>();


	_21c486ac7_ArrTypeDecl(jule::Ptr<_21c5d253b_TypeDecl> __param_elem, jule::Ptr<_21c4d7b4a_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_21c486ac7_ArrTypeDecl(void) = default;

	inline bool operator==(_21c486ac7_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_21c486ac7_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _21c4d770a_MapTypeDecl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_key = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21c5d253b_TypeDecl> _field_val = jule::Ptr<_21c5d253b_TypeDecl>();


	_21c4d770a_MapTypeDecl(jule::Ptr<_21c5d253b_TypeDecl> __param_key, jule::Ptr<_21c5d253b_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_21c4d770a_MapTypeDecl(void) = default;

	inline bool operator==(_21c4d770a_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_21c4d770a_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _21c4d792a_RetTypeDecl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Slice<_21c627dde_Token> _field_idents = jule::Slice<_21c627dde_Token>();


	_21c4d792a_RetTypeDecl(jule::Ptr<_21c5d253b_TypeDecl> __param_kind, jule::Slice<_21c627dde_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_21c4d792a_RetTypeDecl(void) = default;

	inline bool operator==(_21c4d792a_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_21c4d792a_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _21c4d808a_TupleExpr {
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_expr = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();


	_21c4d808a_TupleExpr(jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_21c4d808a_TupleExpr(void) = default;

	inline bool operator==(_21c4d808a_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c4d808a_TupleExpr _other) { return !this->operator==(_other); }


};
struct _21c63d410_CastExpr {
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c63d410_CastExpr(jule::Ptr<_21c5d253b_TypeDecl> __param_kind, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_21c63d410_CastExpr(void) = default;

	inline bool operator==(_21c63d410_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c63d410_CastExpr _other) { return !this->operator==(_other); }


};
struct _21c63e1d0_StructLit {
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();


	_21c63e1d0_StructLit(jule::Ptr<_21c5d253b_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_21c63e1d0_StructLit(void) = default;

	inline bool operator==(_21c63e1d0_StructLit _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21c63e1d0_StructLit _other) { return !this->operator==(_other); }


};
struct _21c6411e3_ScopeTree {
	jule::Ptr<_21c6411e3_ScopeTree> _field_parent = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_21c523c63_Node> _field_stmts = jule::Slice<_21c523c63_Node>();


	_21c6411e3_ScopeTree(jule::Ptr<_21c6411e3_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<_21c523c63_Node> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_21c6411e3_ScopeTree(void) = default;

	inline bool operator==(_21c6411e3_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_21c6411e3_ScopeTree _other) { return !this->operator==(_other); }


};
struct _21c6448ab_Conditional {
	jule::Ptr<_21c64413b_If> _field_head = jule::Ptr<_21c64413b_If>();
	jule::Slice<jule::Ptr<_21c64413b_If>> _field_tail = jule::Slice<jule::Ptr<_21c64413b_If>>();
	jule::Ptr<_21c64449e_Else> _field_default = jule::Ptr<_21c64449e_Else>();


	_21c6448ab_Conditional(jule::Ptr<_21c64413b_If> __param_head, jule::Slice<jule::Ptr<_21c64413b_If>> __param_tail, jule::Ptr<_21c64449e_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_21c6448ab_Conditional(void) = default;

	inline bool operator==(_21c6448ab_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21c6448ab_Conditional _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c63ea60_is_trait_impl(_21c64866d_Impl*);
inline jule::Bool _21c63ebc5_is_struct_impl(_21c64866d_Impl*);
struct _21c64866d_Impl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_base = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21c5d253b_TypeDecl> _field_dest = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Slice<jule::Ptr<_21c641633_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_21c641633_FnDecl>>();
	jule::Slice<jule::Ptr<_21c64205c_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_21c64205c_VarDecl>>();


	_21c64866d_Impl(jule::Ptr<_21c5d253b_TypeDecl> __param_base, jule::Ptr<_21c5d253b_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_21c641633_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_21c64205c_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_21c64866d_Impl(void) = default;

	inline bool operator==(_21c64866d_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_21c64866d_Impl _other) { return !this->operator==(_other); }


};
struct _21cb7e09e_FileInfo {
	jule::Ptr<_21c4cc2b0_Ast> _field_ast = jule::Ptr<_21c4cc2b0_Ast>();
	jule::Slice<_21c348b32_Log> _field_errors = jule::Slice<_21c348b32_Log>();


	_21cb7e09e_FileInfo(jule::Ptr<_21c4cc2b0_Ast> __param_ast, jule::Slice<_21c348b32_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_21cb7e09e_FileInfo(void) = default;

	inline bool operator==(_21cb7e09e_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_21cb7e09e_FileInfo _other) { return !this->operator==(_other); }


};
struct _21cb7e2be_PackageInfo {
	jule::Slice<jule::Ptr<_21cb7e09e_FileInfo>> _field_files = jule::Slice<jule::Ptr<_21cb7e09e_FileInfo>>();


	_21cb7e2be_PackageInfo(jule::Slice<jule::Ptr<_21cb7e09e_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_21cb7e2be_PackageInfo(void) = default;

	inline bool operator==(_21cb7e2be_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_21cb7e2be_PackageInfo _other) { return !this->operator==(_other); }


};
struct _21cb81876_Stmt {
	jule::Slice<_21c627dde_Token> _field_tokens = jule::Slice<_21c627dde_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_21cb81876_Stmt(jule::Slice<_21c627dde_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_21cb81876_Stmt(void) = default;

	inline bool operator==(_21cb81876_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_21cb81876_Stmt _other) { return !this->operator==(_other); }


};
inline void _21cb82a20_stop(_21cb82327_ScopeParser*);
inline jule::Bool _21cb82cea_stopped(_21cb82327_ScopeParser*);
inline jule::Bool _21cb830c5_finished(_21cb82327_ScopeParser*);
inline jule::Bool _21cb833a0_is_last_st(_21cb82327_ScopeParser*);
inline void _21cb8379b_push_err(_21cb82327_ScopeParser*,_21c627dde_Token,jule::Str);
inline void _21cb83b97_push_suggestion(_21cb82327_ScopeParser*,jule::Str,jule::Slice<jule::Any>);
inline void _21cb83eb6_insert_as_next(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21cb81876_Stmt> _21cb84291_next(_21cb82327_ScopeParser*);
inline jule::Ptr<_21c6411e3_ScopeTree> _21cb84648_build_scope(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb84a00_build_var_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb84da7_build_ret_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cb8525e_build_while_next_iter(_21cb82327_ScopeParser*,jule::Ptr<_21cb81876_Stmt>&);
inline jule::Ptr<_21c642e3c_WhileKind> _21cb85616_build_while_iter_kind(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cb85a12_get_range_kind_keys_tokens(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c64205c_VarDecl> _21cb85da8_build_range_kind_key(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Slice<jule::Ptr<_21c64205c_VarDecl>> _21cb86260_build_range_kind_keys(_21cb82327_ScopeParser*,jule::Slice<jule::Slice<_21c627dde_Token>>&);
inline void _21cb866a0_setup_range_kind_keys_plain(_21cb82327_ScopeParser*,jule::Ptr<_21c643558_RangeKind>&,jule::Slice<_21c627dde_Token>&);
inline void _21cb86ace_setup_range_kind_keys_explicit(_21cb82327_ScopeParser*,jule::Ptr<_21c643558_RangeKind>&,jule::Slice<_21c627dde_Token>&);
inline void _21cb8bd26_setup_range_kind_keys(_21cb82327_ScopeParser*,jule::Ptr<_21c643558_RangeKind>&,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c643558_RangeKind> _21cb8c387_build_range_iter_kind(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&,jule::Slice<_21c627dde_Token>&,_21c627dde_Token&);
inline jule::Any _21cb8c81b_build_common_iter_kind(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&,_21c627dde_Token&);
inline jule::Any _21cb8cbc3_build_common_iter(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cb8d07a_buid_iter_st(_21cb82327_ScopeParser*,jule::Ptr<_21cb81876_Stmt>&);
inline jule::Any _21cb8d432_build_break_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb8d7d9_build_cont_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c64413b_If> _21cb8db91_build_if(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c64449e_Else> _21cb8e048_build_else(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb8e400_build_if_else_chain(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cb8e7a7_build_co_call_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cb8eb5e_build_goto_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb90016_build_fall_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb903bd_build_type_alias_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline void _21cb90973_push_case_expr(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>,_21c627dde_Token,jule::Bool,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>&);
inline jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _21cb90e07_build_case_exprs(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&,jule::Bool);
inline jule::Ptr<_21c6411e3_ScopeTree> _21cb912ae_build_case_scope(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline std::tuple<jule::Ptr<_21c6453b2_Case>,jule::Bool> _21cb91743_build_case(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&,jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_21c6453b2_Case>>,jule::Ptr<_21c64449e_Else>> _21cb91bc7_build_cases(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>,jule::Bool);
inline jule::Ptr<_21c645912_MatchCase> _21cb9207e_build_match_case(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c6411e3_ScopeTree> _21cb92436_build_scope_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c640643_LabelSt> _21cb927dd_build_label_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline std::tuple<jule::Any,jule::Bool> _21cb92b95_build_id_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21cba5180_AssignInfo> _21cb9304c_build_assign_info(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c640ca3_AssignLeft> _21cb93404_build_assign_l(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>> _21cb937ab_build_assign_ls(_21cb82327_ScopeParser*,jule::Slice<jule::Slice<_21c627dde_Token>>&);
inline std::tuple<jule::Ptr<_21c640ec3_AssignSt>,jule::Bool> _21cb93b63_build_plain_assign(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline std::tuple<jule::Ptr<_21c640ec3_AssignSt>,jule::Bool> _21cb9401a_build_decl_assign(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>);
inline std::tuple<jule::Ptr<_21c640ec3_AssignSt>,jule::Bool> _21cb943c2_build_assign_st(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb94779_build_use_expr(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb94b31_build_st(_21cb82327_ScopeParser*,jule::Ptr<_21cb81876_Stmt>&);
inline void _21cb9502c_build(_21cb82327_ScopeParser*,jule::Slice<_21c627dde_Token>&,jule::Ptr<_21c6411e3_ScopeTree>&);
struct _21cb82327_ScopeParser {
	jule::Ptr<_21cba92b6_Parser> _field_p = jule::Ptr<_21cba92b6_Parser>();
	jule::Ptr<_21c6411e3_ScopeTree> _field_s = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Slice<jule::Ptr<_21cb81876_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_21cb81876_Stmt>>();
	jule::I64 _field_pos = jule::I64();


	_21cb82327_ScopeParser(jule::Ptr<_21cba92b6_Parser> __param_p, jule::Ptr<_21c6411e3_ScopeTree> __param_s, jule::Slice<jule::Ptr<_21cb81876_Stmt>> __param_stmts, jule::I64 __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_21cb82327_ScopeParser(void) = default;

	inline bool operator==(_21cb82327_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_21cb82327_ScopeParser _other) { return !this->operator==(_other); }


};
struct _21cb95ec8_CallData {
	jule::Slice<_21c627dde_Token> _field_expr_tokens = jule::Slice<_21c627dde_Token>();
	jule::Slice<_21c627dde_Token> _field_args_tokens = jule::Slice<_21c627dde_Token>();
	jule::Slice<_21c627dde_Token> _field_generics_tokens = jule::Slice<_21c627dde_Token>();


	_21cb95ec8_CallData(jule::Slice<_21c627dde_Token> __param_expr_tokens, jule::Slice<_21c627dde_Token> __param_args_tokens, jule::Slice<_21c627dde_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_21cb95ec8_CallData(void) = default;

	inline bool operator==(_21cb95ec8_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_21cb95ec8_CallData _other) { return !this->operator==(_other); }


};
inline void _21cb98140_push_err(_21cb97727_ExprBuilder*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline void _21cb9853b_push_suggestion(_21cb97727_ExprBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_21c4d808a_TupleExpr> _21cb988e3_build_tuple(_21cb97727_ExprBuilder*,jule::Slice<jule::Slice<_21c627dde_Token>>&);
inline jule::Ptr<_21c4d84db_LitExpr> _21cb98c9a_build_lit(_21cb97727_ExprBuilder*,_21c627dde_Token);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cb99152_build_primitive_type(_21cb97727_ExprBuilder*,_21c627dde_Token&);
inline jule::Any _21cb99509_build_single(_21cb97727_ExprBuilder*,_21c627dde_Token);
inline jule::Ptr<_21c4d8b4b_IdentExpr> _21cb998b1_build_cpp_linked_ident(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c4d8d6b_UnaryExpr> _21cb99c68_build_unary(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c63d850_SubIdentExpr> _21cb9a120_build_obj_sub_ident(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c63d630_NsSelectionExpr> _21cb9a4c7_build_ns_sub_ident(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cb9a87e_build_type(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb9ac36_build_sub_ident(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c4d908b_VariadicExpr> _21cb9b0dd_build_variadic(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cb9b495_build_op_right(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c4d7b4a_Expr> _21cb9b891_build_between_parentheses(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c63d410_CastExpr> _21cb9bc37_try_build_cast(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline void _21cb9c210_push_arg(_21cb97727_ExprBuilder*,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>&,jule::Slice<_21c627dde_Token>,_21c627dde_Token);
inline jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _21cb9c5b7_build_args(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _21cb9c96e_build_call_generics(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c63dc90_FnCallExpr> _21cb9ce03_build_fn_call(_21cb97727_ExprBuilder*,_21c627dde_Token&,jule::Ptr<_21cb95ec8_CallData>&);
inline jule::Any _21cb9d2ee_build_parentheses_range(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c4d870b_UnsafeExpr> _21cb9d695_build_unsafe_expr(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c641633_FnDecl> _21cb9da4c_build_anon_fn(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cb9de04_build_unsafe(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline void _21cb9e3cc_push_range_lit_part(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>,_21c627dde_Token,jule::Slice<jule::Slice<_21c627dde_Token>>&);
inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cb9e7c8_get_brace_range_lit_expr_parts(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c63deb0_FieldExprPair> _21cb9eb6e_build_field_expr_pair(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c4d7b4a_Expr> _21cba0026_build_struct_lit_expr(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _21cba03cd_build_struct_lit_exprs(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c63e1d0_StructLit> _21cba07c9_build_typed_struct_literal(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c4d7b4a_Expr> _21cba0b70_build_brace_lit_part(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c63e400_BraceLit> _21cba1027_build_brace_lit(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cba13ce_build_brace_range(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cba1786_get_enumerable_parts(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c63e840_SliceExpr> _21cba1b3d_build_slice(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c4d82aa_IndexingExpr> _21cba219e_build_indexing(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>,jule::Slice<_21c627dde_Token>,_21c627dde_Token);
inline jule::Ptr<_21c63eed3_SlicingExpr> _21cba27dc_build_slicing(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&,jule::Slice<_21c627dde_Token>&,jule::I64&,_21c627dde_Token&);
inline jule::Any _21cba2b94_build_bracket_range(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cba304b_build_ternary(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cba3403_build_data(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c63da70_BinopExpr> _21cba3887_build_binop(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&,jule::I64);
inline jule::Any _21cba3c3e_build(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Any _21cba40e6_build_kind(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c4d7b4a_Expr> _21cba449d_build_from_tokens(_21cb97727_ExprBuilder*,jule::Slice<_21c627dde_Token>);
struct _21cb97727_ExprBuilder {
	jule::Ptr<_21cba92b6_Parser> _field_p = jule::Ptr<_21cba92b6_Parser>();


	_21cb97727_ExprBuilder(jule::Ptr<_21cba92b6_Parser> __param_p): _field_p(__param_p) {}

	

	_21cb97727_ExprBuilder(void) = default;

	inline bool operator==(_21cb97727_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_21cb97727_ExprBuilder _other) { return !this->operator==(_other); }


};
inline void _21cba965c_stop(_21cba92b6_Parser*);
inline jule::Bool _21cba9937_stopped(_21cba92b6_Parser*);
inline void _21cba9e10_push_err(_21cba92b6_Parser*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline void _21cbaa30b_push_suggestion(_21cba92b6_Parser*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_21c4d7b4a_Expr> _21cbaa6b3_build_expr(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c525490_Directive> _21cbaaa6a_build_directive(_21cba92b6_Parser*,jule::Slice<_21c627dde_Token>);
inline void _21cbaad89_push_directive(_21cba92b6_Parser*,jule::Ptr<_21c525490_Directive>);
inline jule::Ptr<_21c6411e3_ScopeTree> _21cbab241_build_scope(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline std::tuple<jule::Ptr<_21c5d253b_TypeDecl>,jule::Bool> _21cbab7a2___build_type(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&,jule::I64*,jule::Bool);
inline std::tuple<jule::Ptr<_21c5d253b_TypeDecl>,jule::Bool> _21cbabd13_build_type(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&,jule::I64*,jule::Bool);
inline jule::Ptr<_21c644ea5_TypeAliasDecl> _21cbac1ba_build_type_alias_decl(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline void _21cbac60a_build_var_type_and_expr(jule::Ptr<_21cba92b6_Parser>,jule::Ptr<_21c64205c_VarDecl>&,jule::Slice<_21c627dde_Token>&);
inline void _21cbac9e5_build_var_common(jule::Ptr<_21cba92b6_Parser>,jule::Ptr<_21c64205c_VarDecl>&,jule::Slice<_21c627dde_Token>);
inline void _21cbacebd_build_var_begin(_21cba92b6_Parser*,jule::Ptr<_21c64205c_VarDecl>&,jule::Ptr<jule::I64>,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c64205c_VarDecl> _21cbad375_build_var(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c640423_GenericDecl> _21cbad72c_build_generic(_21cba92b6_Parser*,jule::Slice<_21c627dde_Token>&);
inline jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _21cbadbb1_build_generics(_21cba92b6_Parser*,jule::Slice<_21c627dde_Token>&,_21c627dde_Token&);
inline jule::Ptr<_21c641413_ParamDecl> _21cbae068_build_self_param(_21cba92b6_Parser*,jule::Slice<_21c627dde_Token>);
inline void _21cbae541_param_type_begin(_21cba92b6_Parser*,jule::Ptr<_21c641413_ParamDecl>&,jule::I64&,jule::Slice<_21c627dde_Token>&);
inline void _21cbae93c_build_param_type(jule::Ptr<_21cba92b6_Parser>,jule::Ptr<_21c641413_ParamDecl>&,jule::Slice<_21c627dde_Token>&);
inline void _21cbaed38_param_body_id(_21cba92b6_Parser*,jule::Ptr<_21c641413_ParamDecl>,_21c627dde_Token);
inline void _21cbb0311_build_param_body(jule::Ptr<_21cba92b6_Parser>,jule::Ptr<_21c641413_ParamDecl>&,jule::Ptr<jule::I64>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c641413_ParamDecl> _21cbb06b8_build_param(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline void _21cbb09d7_check_params(_21cba92b6_Parser*,jule::Slice<jule::Ptr<_21c641413_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_21c641413_ParamDecl>> _21cbb0e6b_build_params(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&,jule::Bool);
inline std::tuple<jule::Ptr<_21c4d792a_RetTypeDecl>,jule::Bool> _21cbb1400_build_multi_ret_type(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&,jule::I64&);
inline std::tuple<jule::Ptr<_21c4d792a_RetTypeDecl>,jule::Bool> _21cbb1884_build_ret_type(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&,jule::I64&);
inline jule::Ptr<_21c641633_FnDecl> _21cbb1de5_build_fn_prototype(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&,jule::I64&,jule::Bool);
inline jule::Ptr<_21c641633_FnDecl> _21cbb2456_build_fn(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&,jule::Bool,jule::Bool);
inline jule::Slice<_21c627dde_Token> _21cbb280d_get_use_decl_selectors(_21cba92b6_Parser*,jule::Slice<_21c627dde_Token>);
inline void _21cbb2c09_build_cpp_use_decl(_21cba92b6_Parser*,jule::Ptr<_21c6460a5_UseDecl>&,jule::Slice<_21c627dde_Token>&);
inline void _21cbb3105_build_std_use_decl(_21cba92b6_Parser*,jule::Ptr<_21c6460a5_UseDecl>&,jule::Slice<_21c627dde_Token>);
inline void _21cbb3501_build_ident_use_decl(_21cba92b6_Parser*,jule::Ptr<_21c6460a5_UseDecl>&,jule::Slice<_21c627dde_Token>);
inline void _21cbb38ec_parse_use_decl(_21cba92b6_Parser*,jule::Ptr<_21c6460a5_UseDecl>&,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c6460a5_UseDecl> _21cbb3d81_build_use_decl(_21cba92b6_Parser*,jule::Slice<_21c627dde_Token>,jule::Bool);
inline jule::Ptr<_21c4d7b4a_Expr> _21cbb4315_build_enum_item_expr(jule::Ptr<_21cba92b6_Parser>,jule::Ptr<jule::I64>,jule::Slice<_21c627dde_Token>&);
inline jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>> _21cbb46bc_build_enum_items(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c646d0e_EnumDecl> _21cbb4a74_build_enum_decl(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c64756d_FieldDecl> _21cbb4e2b_build_field(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Slice<jule::Ptr<_21c64756d_FieldDecl>> _21cbb5327_build_struct_decl_fields(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c647c11_StructDecl> _21cbb56bd_build_struct_decl(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline void _21cbb59dc_check_method_receiver(_21cba92b6_Parser*,jule::Ptr<_21c641633_FnDecl>&);
inline jule::Slice<jule::Ptr<_21c641633_FnDecl>> _21cbb5d94_build_trait_methods(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c6481b7_TraitDecl> _21cbb624b_build_trait_decl(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c641633_FnDecl> _21cbb6603_build_cpp_link_fn(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c64205c_VarDecl> _21cbb69aa_build_cpp_link_var(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c647c11_StructDecl> _21cbb6d62_build_cpp_link_struct(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c644ea5_TypeAliasDecl> _21cbb725d_build_cpp_link_type_alias(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Ptr<_21c6460a5_UseDecl> _21cbb7604_build_cpp_link_use(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cbb79ab_build_cpp_link(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c641633_FnDecl> _21cbb7d63_get_method(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline void _21cbb825e_parse_impl_body(jule::Ptr<_21cba92b6_Parser>,jule::Ptr<_21c64866d_Impl>&,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c64866d_Impl> _21cbb8616_build_impl(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline jule::Any _21cbb89bd_build_node_data(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline void _21cbb8cdc_check_directive(_21cba92b6_Parser*,_21c523c63_Node&);
inline void _21cbb91d8_apply_fn_meta(_21cba92b6_Parser*,jule::Ptr<_21c641633_FnDecl>&,jule::Bool);
inline void _21cbb95d4_apply_meta(_21cba92b6_Parser*,_21c523c63_Node&,jule::Bool);
inline void _21cbb9903_check_use_decl(_21cba92b6_Parser*,_21c523c63_Node&);
inline std::tuple<jule::Bool,jule::Any> _21cbb9cee_build_general_scope_node_data(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>);
inline _21c523c63_Node _21cbba195_parse_node(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline void _21cbba4b4_append_node(jule::Ptr<_21cba92b6_Parser>,jule::Slice<_21c627dde_Token>&);
inline void _21cbbaa69_remove_range(_21cba92b6_Parser*,jule::I64,jule::Str,jule::Slice<_21c627dde_Token>&,jule::Slice<jule::I64>&);
inline void _21cbbb086_push_wrong_order_close_err(_21cba92b6_Parser*,_21c627dde_Token&,jule::Slice<_21c627dde_Token>&,jule::Slice<jule::I64>&);
inline void _21cbbb62a_push_range_close(_21cba92b6_Parser*,_21c627dde_Token,jule::Str,jule::Slice<_21c627dde_Token>&,jule::Slice<jule::I64>&);
inline void _21cbbb949_check_ranges(_21cba92b6_Parser*,jule::Slice<_21c627dde_Token>&);
inline void _21cbbbc68_parse(jule::Ptr<_21cba92b6_Parser>,jule::Ptr<_21c62e038_File>&);
struct _21cba92b6_Parser {
	jule::Ptr<_21c4cc2b0_Ast> _field_ast = jule::Ptr<_21c4cc2b0_Ast>();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Slice<_21c348b32_Log> _field_errors = jule::Slice<_21c348b32_Log>();


	_21cba92b6_Parser(jule::Ptr<_21c4cc2b0_Ast> __param_ast, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_directives, jule::Slice<_21c348b32_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_errors(__param_errors) {}

	

	_21cba92b6_Parser(void) = default;

	inline bool operator==(_21cba92b6_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_21cba92b6_Parser _other) { return !this->operator==(_other); }


};
inline void _21cbbe353_push_err(_21cbbdb9e_TypeBuilder*,_21c627dde_Token,jule::Str);
inline void _21cbbe74e_push_suggestion(_21cbbdb9e_TypeBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbea29_build_prim(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbed04_build_namespace(_21cbbdb9e_TypeBuilder*);
inline jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _21cbc00ce_build_generics(_21cbbdb9e_TypeBuilder*);
inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cbc03a9_ident_generics(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc0684_build_ident(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc095e_build_cpp_link(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc0c39_build_fn(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc1014_build_ptr(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc12de_build_sptr(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc15b9_build_op(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc1894_build_slc(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc1b6e_build_arr(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc2103_build_map(_21cbbdb9e_TypeBuilder*,jule::I64,jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc23cd_build_enumerable(_21cbbdb9e_TypeBuilder*);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc26a8_step(_21cbbdb9e_TypeBuilder*);
inline std::tuple<jule::Ptr<_21c5d253b_TypeDecl>,jule::Bool> _21cbc2983_build(_21cbbdb9e_TypeBuilder*);
struct _21cbbdb9e_TypeBuilder {
	jule::Ptr<_21cba92b6_Parser> _field_p = jule::Ptr<_21cba92b6_Parser>();
	jule::Slice<_21c627dde_Token> _field_tokens = jule::Slice<_21c627dde_Token>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_21cbbdb9e_TypeBuilder(jule::Ptr<_21cba92b6_Parser> __param_p, jule::Slice<_21c627dde_Token> __param_tokens, jule::I64* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_21cbbdb9e_TypeBuilder(void) = default;

	inline bool operator==(_21cbbdb9e_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_21cbbdb9e_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _21e68dda9_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();


	_21e68dda9_FloatInfo(jule::U64 __param_mantbits, jule::U64 __param_expbits, jule::I64 __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_21e68dda9_FloatInfo(void) = default;

	inline bool operator==(_21e68dda9_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_21e68dda9_FloatInfo _other) { return !this->operator==(_other); }


};
struct _21e223b3c_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();


	_21e223b3c_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_21e223b3c_DecimalSlice(void) = default;

	inline bool operator==(_21e223b3c_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_21e223b3c_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _21ea2cbe8_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();


	_21ea2cbe8_LeftCheat(jule::I64 __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_21ea2cbe8_LeftCheat(void) = default;

	inline bool operator==(_21ea2cbe8_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_21ea2cbe8_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _21e5a61bc_set(_21ea2ce18_Decimal*,jule::Str);
inline std::tuple<jule::U64,jule::Bool> _21e2516b4_float_bits(_21ea2ce18_Decimal*,_21e68dda9_FloatInfo&);
inline void _21ea2d138_assign(_21ea2ce18_Decimal*,jule::U64);
inline void _21ea2d29d_shift(_21ea2ce18_Decimal*,jule::I64);
inline void _21ea2d413_round_down(_21ea2ce18_Decimal*,jule::I64);
inline void _21ea2d578_round_up(_21ea2ce18_Decimal*,jule::I64);
inline void _21ea2d6dd_round(_21ea2ce18_Decimal*,jule::I64);
inline jule::U64 _21ea2d853_rounded_integer(_21ea2ce18_Decimal*);
struct _21ea2ce18_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_21ea2ce18_Decimal(jule::Array<jule::U8,800> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_21ea2ce18_Decimal(void) = default;

	inline bool operator==(_21ea2ce18_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_21ea2ce18_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21ea9d450_Const> static__21ea9d670_new_i64(jule::I64);
inline jule::Ptr<_21ea9d450_Const> static__21ea9d7d5_new_u64(jule::U64);
inline jule::Ptr<_21ea9d450_Const> static__21ea9d9c2_new_bool(jule::Bool);
inline jule::Ptr<_21ea9d450_Const> static__21ea9dbae_new_str(jule::Str);
inline jule::Ptr<_21ea9d450_Const> static__21ea9de34_new_f64(jule::F64);
inline jule::Ptr<_21ea9d450_Const> static__21ea9e165_new_nil(void);
inline jule::I64 _21ea9e7c5_read_i64(_21ea9d450_Const*);
inline jule::U64 _21ea9eaa0_read_u64(_21ea9d450_Const*);
inline jule::Bool _21ea9ed7a_read_bool(_21ea9d450_Const*);
inline jule::Str _21eaa0155_read_str(_21ea9d450_Const*);
inline jule::F64 _21eaa0430_read_f64(_21ea9d450_Const*);
inline jule::I64 _21eaa070a_as_i64(_21ea9d450_Const*);
inline jule::U64 _21eaa09d5_as_u64(_21ea9d450_Const*);
inline jule::F64 _21eaa0cb0_as_f64(_21ea9d450_Const*);
inline void _21eaa10ce_set_i64(_21ea9d450_Const*,jule::I64);
inline void _21eaa13ed_set_u64(_21ea9d450_Const*,jule::U64);
inline void _21eaa171c_set_bool(_21ea9d450_Const*,jule::Bool);
inline void _21eaa1a3b_set_str(_21ea9d450_Const*,jule::Str);
inline void _21eaa1d5a_set_f64(_21ea9d450_Const*,jule::F64);
inline void _21eaa209c_set_nil(_21ea9d450_Const*);
inline jule::Bool _21eaa2377_is_i64(_21ea9d450_Const*);
inline jule::Bool _21eaa2652_is_u64(_21ea9d450_Const*);
inline jule::Bool _21eaa292c_is_bool(_21ea9d450_Const*);
inline jule::Bool _21eaa2c07_is_str(_21ea9d450_Const*);
inline jule::Bool _21eaa2ed2_is_f64(_21ea9d450_Const*);
inline jule::Bool _21eaa32ac_is_nil(_21ea9d450_Const*);
inline jule::Bool _21eaa3664_are_same_types(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa3a1b_and(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa3dc3_or(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa427a_eq(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa4632_lt(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa49d9_lt_eq(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa4d91_gt(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa5248_gt_eq(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa5600_add(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa59a7_sub(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa5d5e_mul(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa6216_div(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa65bd_mod(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa6975_bitwise_and(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa6d2c_bitwise_or(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa71d4_xor(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa758b_lshift(_21ea9d450_Const*,_21ea9d450_Const);
inline jule::Bool _21eaa7943_rshift(_21ea9d450_Const*,_21ea9d450_Const);
struct _21ea9d450_Const {
	jule::Any _field_data = jule::Any();


	_21ea9d450_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_21ea9d450_Const(void) = default;

	inline jule::Bool operator==(_21ea9d450_Const _other) { return _21eaa427a_eq(this, _other); }

	inline bool operator!=(_21ea9d450_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_21ea9d450_Const _other) { return _21eaa4d91_gt(this, _other); }

	inline jule::Bool operator>=(_21ea9d450_Const _other) { return _21eaa5248_gt_eq(this, _other); }

	inline jule::Bool operator<(_21ea9d450_Const _other) { return _21eaa4632_lt(this, _other); }

	inline jule::Bool operator<=(_21ea9d450_Const _other) { return _21eaa49d9_lt_eq(this, _other); }


};
inline jule::Ptr<_21ec83239_FileStream> static__21ec83459_new(jule::Ptr<_235a41113_File>);
inline jule::Exceptional<jule::I64> _21ec836bd_read(_21ec83239_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _21ec839ba_write(_21ec83239_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::Slice<jule::U8>> _21ec83d83_read_line(_21ec83239_FileStream*);
struct _21ec83239_FileStream {
	jule::Ptr<_235a41113_File> _field_buff = jule::Ptr<_235a41113_File>();


	_21ec83239_FileStream(jule::Ptr<_235a41113_File> __param_buff): _field_buff(__param_buff) {}

	

	_21ec83239_FileStream(void) = default;

	inline bool operator==(_21ec83239_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_21ec83239_FileStream _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::I64> _21ec868ad_read(_21ec86171_ByteStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _21ec86c65_write(_21ec86171_ByteStream*,jule::Slice<jule::U8>);
inline jule::Ptr<_21ec86171_ByteStream> static__21ec870a6_new(void);
inline jule::Bool _21ec87381_data(_21ec86171_ByteStream*);
inline void _21ec875c3_fit(_21ec86171_ByteStream*);
struct _21ec86171_ByteStream {
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();


	_21ec86171_ByteStream(jule::Slice<jule::U8> __param_buff): _field_buff(__param_buff) {}

	

	_21ec86171_ByteStream(void) = default;

	inline bool operator==(_21ec86171_ByteStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_21ec86171_ByteStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21ec88c34_Scanner> static__21ec891c9_new(jule::Trait<_21ec846ad_Reader>);
inline jule::Ptr<_21ec88c34_Scanner> static__21ec894d7_newf(jule::Ptr<_235a41113_File>);
inline void _21ec8984a_reset(_21ec88c34_Scanner*);
inline jule::Slice<jule::U8> _21ec89b25_bytes(_21ec88c34_Scanner*);
inline jule::Str _21ec89e00_text(_21ec88c34_Scanner*);
inline jule::Exceptional<jule::Bool> _21ec8a1ca_scan(_21ec88c34_Scanner*);
struct _21ec88c34_Scanner {
	jule::Trait<_21ec846ad_Reader> _field_r = jule::Trait<_21ec846ad_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_21ec88c34_Scanner(jule::Trait<_21ec846ad_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_21ec88c34_Scanner(void) = default;

	inline bool operator==(_21ec88c34_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_21ec88c34_Scanner _other) { return !this->operator==(_other); }


};
struct _21dd02188_Operators {
	jule::Ptr<_21dd1cc42_FnIns> _field_eq = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_gt = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_gt_eq = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_lt = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_lt_eq = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_shl = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_shr = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_add = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_sub = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_div = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_mul = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_mod = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_bit_and = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_bit_or = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_bit_xor = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_neg = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_pos = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_bit_not = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_add_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_sub_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_div_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_mul_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_mod_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_shl_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_shr_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_bit_or_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_bit_and_assign = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1cc42_FnIns> _field_bit_xor_assign = jule::Ptr<_21dd1cc42_FnIns>();


	_21dd02188_Operators(jule::Ptr<_21dd1cc42_FnIns> __param_eq, jule::Ptr<_21dd1cc42_FnIns> __param_gt, jule::Ptr<_21dd1cc42_FnIns> __param_gt_eq, jule::Ptr<_21dd1cc42_FnIns> __param_lt, jule::Ptr<_21dd1cc42_FnIns> __param_lt_eq, jule::Ptr<_21dd1cc42_FnIns> __param_shl, jule::Ptr<_21dd1cc42_FnIns> __param_shr, jule::Ptr<_21dd1cc42_FnIns> __param_add, jule::Ptr<_21dd1cc42_FnIns> __param_sub, jule::Ptr<_21dd1cc42_FnIns> __param_div, jule::Ptr<_21dd1cc42_FnIns> __param_mul, jule::Ptr<_21dd1cc42_FnIns> __param_mod, jule::Ptr<_21dd1cc42_FnIns> __param_bit_and, jule::Ptr<_21dd1cc42_FnIns> __param_bit_or, jule::Ptr<_21dd1cc42_FnIns> __param_bit_xor, jule::Ptr<_21dd1cc42_FnIns> __param_neg, jule::Ptr<_21dd1cc42_FnIns> __param_pos, jule::Ptr<_21dd1cc42_FnIns> __param_bit_not, jule::Ptr<_21dd1cc42_FnIns> __param_add_assign, jule::Ptr<_21dd1cc42_FnIns> __param_sub_assign, jule::Ptr<_21dd1cc42_FnIns> __param_div_assign, jule::Ptr<_21dd1cc42_FnIns> __param_mul_assign, jule::Ptr<_21dd1cc42_FnIns> __param_mod_assign, jule::Ptr<_21dd1cc42_FnIns> __param_shl_assign, jule::Ptr<_21dd1cc42_FnIns> __param_shr_assign, jule::Ptr<_21dd1cc42_FnIns> __param_bit_or_assign, jule::Ptr<_21dd1cc42_FnIns> __param_bit_and_assign, jule::Ptr<_21dd1cc42_FnIns> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_21dd02188_Operators(void) = default;

	inline bool operator==(_21dd02188_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_21dd02188_Operators _other) { return !this->operator==(_other); }


};
struct _21dd05be7_FieldIns {
	jule::Ptr<_21dc10607_Field> _field_decl = jule::Ptr<_21dc10607_Field>();
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21ebbd053_Data> _field_default = jule::Ptr<_21ebbd053_Data>();


	_21dd05be7_FieldIns(jule::Ptr<_21dc10607_Field> __param_decl, jule::Ptr<_21ec06223_TypeKind> __param_kind, jule::Ptr<_21ebbd053_Data> __param_default): _field_decl(__param_decl), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_21dd05be7_FieldIns(void) = default;

	inline bool operator==(_21dd05be7_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21dd05be7_FieldIns _other) { return !this->operator==(_other); }


};
struct _21dd08854_OperandExprModel {
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Any _field_model = jule::Any();


	_21dd08854_OperandExprModel(jule::Ptr<_21ec06223_TypeKind> __param_kind, jule::Any __param_model): _field_kind(__param_kind), _field_model(__param_model) {}

	

	_21dd08854_OperandExprModel(void) = default;

	inline bool operator==(_21dd08854_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_21dd08854_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _21dd097de_StructArgExprModel {
	jule::Ptr<_21dd05be7_FieldIns> _field_field = jule::Ptr<_21dd05be7_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_21dd097de_StructArgExprModel(jule::Ptr<_21dd05be7_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_21dd097de_StructArgExprModel(void) = default;

	inline bool operator==(_21dd097de_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21dd097de_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _21dd09c40_StructLitExprModel {
	jule::Ptr<_21dd06742_StructIns> _field_strct = jule::Ptr<_21dd06742_StructIns>();
	jule::Slice<jule::Ptr<_21dd097de_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_21dd097de_StructArgExprModel>>();


	_21dd09c40_StructLitExprModel(jule::Ptr<_21dd06742_StructIns> __param_strct, jule::Slice<jule::Ptr<_21dd097de_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_21dd09c40_StructLitExprModel(void) = default;

	inline bool operator==(_21dd09c40_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_21dd09c40_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0a12a_AllocStructLitExprModel {
	jule::Ptr<_21dd09c40_StructLitExprModel> _field_lit = jule::Ptr<_21dd09c40_StructLitExprModel>();


	_21dd0a12a_AllocStructLitExprModel(jule::Ptr<_21dd09c40_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_21dd0a12a_AllocStructLitExprModel(void) = default;

	inline bool operator==(_21dd0a12a_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_21dd0a12a_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0b68c_SliceExprModel {
	jule::Ptr<_21ec06223_TypeKind> _field_elem_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_21dd0b68c_SliceExprModel(jule::Ptr<_21ec06223_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_21dd0b68c_SliceExprModel(void) = default;

	inline bool operator==(_21dd0b68c_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_21dd0b68c_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0c13d_AnonFnExprModel {
	jule::Ptr<_21dd1cc42_FnIns> _field_func = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_21dd0c13d_AnonFnExprModel(jule::Ptr<_21dd1cc42_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_21dd0c13d_AnonFnExprModel(void) = default;

	inline bool operator==(_21dd0c13d_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_21dd0c13d_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0c58e_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_21dd0c58e_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_21dd0c58e_KeyValPairExprModel(void) = default;

	inline bool operator==(_21dd0c58e_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_21dd0c58e_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0cade_MapExprModel {
	jule::Ptr<_21ec06223_TypeKind> _field_key_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21ec06223_TypeKind> _field_val_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Slice<jule::Ptr<_21dd0c58e_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_21dd0c58e_KeyValPairExprModel>>();


	_21dd0cade_MapExprModel(jule::Ptr<_21ec06223_TypeKind> __param_key_kind, jule::Ptr<_21ec06223_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_21dd0c58e_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_21dd0cade_MapExprModel(void) = default;

	inline bool operator==(_21dd0cade_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_21dd0cade_MapExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0e85a_StructStaticIdentExprModel {
	jule::Ptr<_21dd06742_StructIns> _field_structure = jule::Ptr<_21dd06742_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_21dd1cc42_FnIns> _field_method = jule::Ptr<_21dd1cc42_FnIns>();


	_21dd0e85a_StructStaticIdentExprModel(jule::Ptr<_21dd06742_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_21dd1cc42_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_21dd0e85a_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_21dd0e85a_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_21dd0e85a_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0ec89_ArrayExprModel {
	jule::Ptr<_21ec13692_Arr> _field_kind = jule::Ptr<_21ec13692_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_21dd0ec89_ArrayExprModel(jule::Ptr<_21ec13692_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_21dd0ec89_ArrayExprModel(void) = default;

	inline bool operator==(_21dd0ec89_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_21dd0ec89_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _21dd100db_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_21dd100db_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_21dd100db_CommonIdentExprModel(void) = default;

	inline bool operator==(_21dd100db_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21dd100db_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _21dd10b03_TupleExprModel {
	jule::Slice<jule::Ptr<_21ebbd053_Data>> _field_datas = jule::Slice<jule::Ptr<_21ebbd053_Data>>();


	_21dd10b03_TupleExprModel(jule::Slice<jule::Ptr<_21ebbd053_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_21dd10b03_TupleExprModel(void) = default;

	inline bool operator==(_21dd10b03_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_21dd10b03_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _21dd110dc_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_21dd110dc_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_21dd110dc_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_21dd110dc_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_21dd110dc_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd115a4_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_21dd115a4_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_21dd115a4_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_21dd115a4_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_21dd115a4_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd1196c_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_21dd1196c_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21dd1196c_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_21dd1196c_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21dd1196c_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd11e34_BuiltinNewCallExprModel {
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Any _field_init = jule::Any();


	_21dd11e34_BuiltinNewCallExprModel(jule::Ptr<_21ec06223_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_21dd11e34_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_21dd11e34_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_21dd11e34_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd13078_BuiltinMakeCallExprModel {
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_21dd13078_BuiltinMakeCallExprModel(jule::Ptr<_21ec06223_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_21dd13078_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_21dd13078_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_21dd13078_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd13540_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_21dd13540_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_21dd13540_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_21dd13540_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_21dd13540_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd13a07_BuiltinErrorCallExprModel {
	jule::Ptr<_21dd1cc42_FnIns> _field_func = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Any _field_err = jule::Any();


	_21dd13a07_BuiltinErrorCallExprModel(jule::Ptr<_21dd1cc42_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_21dd13a07_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_21dd13a07_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_21dd13a07_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd13d37_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_21dd13d37_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21dd13d37_SizeofExprModel(void) = default;

	inline bool operator==(_21dd13d37_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21dd13d37_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _21dd144db_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_21dd144db_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21dd144db_AlignofExprModel(void) = default;

	inline bool operator==(_21dd144db_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21dd144db_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _21dd147a5_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_21dd147a5_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_21dd147a5_RuneExprModel(void) = default;

	inline bool operator==(_21dd147a5_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_21dd147a5_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _21dd14b18_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_21dd14b18_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21dd14b18_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_21dd14b18_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21dd14b18_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _21dd15146_TernaryExprModel {
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_21dd15146_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_21dd15146_TernaryExprModel(void) = default;

	inline bool operator==(_21dd15146_TernaryExprModel _other) {
		return 
			this->_field_condition == _other._field_condition &&
			this->_field_true_expr == _other._field_true_expr &&
			this->_field_false_expr == _other._field_false_expr;
	}

	inline bool operator!=(_21dd15146_TernaryExprModel _other) { return !this->operator==(_other); }


};
struct _21dd15597_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_21dd15597_BackendEmitExprModel(jule::Str __param_code, jule::Slice<jule::Any> __param_exprs): _field_code(__param_code), _field_exprs(__param_exprs) {}

	

	_21dd15597_BackendEmitExprModel(void) = default;

	inline bool operator==(_21dd15597_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21dd15597_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _21dd158e9_FreeExprModel {
	jule::Any _field_expr = jule::Any();


	_21dd158e9_FreeExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21dd158e9_FreeExprModel(void) = default;

	inline bool operator==(_21dd158e9_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21dd158e9_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _21dd16ac6_RetType {
	jule::Ptr<_21ec0aa85_TypeSymbol> _field_kind = jule::Ptr<_21ec0aa85_TypeSymbol>();
	jule::Slice<_21c627dde_Token> _field_idents = jule::Slice<_21c627dde_Token>();


	_21dd16ac6_RetType(jule::Ptr<_21ec0aa85_TypeSymbol> __param_kind, jule::Slice<_21c627dde_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_21dd16ac6_RetType(void) = default;

	inline bool operator==(_21dd16ac6_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_21dd16ac6_RetType _other) { return !this->operator==(_other); }


};
inline jule::Str _21dd1c02c_to_str(_21dd1badc_ParamIns*);
struct _21dd1badc_ParamIns {
	jule::Ptr<_21dd17423_Param> _field_decl = jule::Ptr<_21dd17423_Param>();
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();


	_21dd1badc_ParamIns(jule::Ptr<_21dd17423_Param> __param_decl, jule::Ptr<_21ec06223_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_21dd1badc_ParamIns(void) = default;

	inline bool operator==(_21dd1badc_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21dd1badc_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _21dd1d11b_to_str(_21dd1cc42_FnIns*);
inline jule::Bool _21dd1d4c3_equals(jule::Ptr<_21dd1cc42_FnIns>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Bool _21dd1d8be_is_builtin(_21dd1cc42_FnIns*);
inline jule::Bool _21dd1db99_is_anon(_21dd1cc42_FnIns*);
inline jule::Bool _21dd1e051_same(_21dd1cc42_FnIns*,jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Str _21dd1e408_get_kind_str(_21dd1cc42_FnIns*,jule::Bool);
struct _21dd1cc42_FnIns {
	jule::Ptr<_21dd06742_StructIns> _field_owner = jule::Ptr<_21dd06742_StructIns>();
	jule::Ptr<_21dd19249_Fn> _field_decl = jule::Ptr<_21dd19249_Fn>();
	jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_21ec06223_TypeKind>>();
	jule::Slice<jule::Ptr<_21dd1badc_ParamIns>> _field_params = jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>();
	jule::Ptr<_21ec06223_TypeKind> _field_result = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();
	jule::Ptr<_21dd264ba_ReferenceStack> _field_references = jule::Ptr<_21dd264ba_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)> _field_caller = jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();


	_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns> __param_owner, jule::Ptr<_21dd19249_Fn> __param_decl, jule::Slice<jule::Ptr<_21ec06223_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_21dd1badc_ParamIns>> __param_params, jule::Ptr<_21ec06223_TypeKind> __param_result, jule::Ptr<_21eb1472a_Scope> __param_scope, jule::Ptr<_21dd264ba_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)> __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {}

	

	_21dd1cc42_FnIns(void) = default;

	inline bool operator==(_21dd1cc42_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_21dd1cc42_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21dd264ba_ReferenceStack> static__21dd2672e_new(void);
inline jule::I64 _21dd26b2a_len(_21dd264ba_ReferenceStack*);
inline jule::Any _21dd26ed2_at(_21dd264ba_ReferenceStack*,jule::I64);
inline void _21dd27301_push(_21dd264ba_ReferenceStack*,jule::Any);
inline jule::Bool _21dd276a8_exist_0(_21dd264ba_ReferenceStack*,jule::Ptr<_21eb75615_Var>);
inline jule::Bool _21dd276a8_exist_1(_21dd264ba_ReferenceStack*,jule::Ptr<_21dd1cc42_FnIns>);
struct _21dd264ba_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_21dd264ba_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_21dd264ba_ReferenceStack(void) = default;

	inline bool operator==(_21dd264ba_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_21dd264ba_ReferenceStack _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21dd2c0a3_SymbolBuilder> _21dd2c6d0_get_root(jule::Ptr<_21dd2c0a3_SymbolBuilder>);
inline void _21dd2cba8_push_err(_21dd2c0a3_SymbolBuilder*,_21c627dde_Token&,jule::Str,jule::Slice<jule::Any>);
inline void _21dd2d181_push_err_text(_21dd2c0a3_SymbolBuilder*,_21c627dde_Token&,jule::Str,jule::Slice<jule::Any>);
inline void _21dd2d57c_push_suggestion(_21dd2c0a3_SymbolBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21dd2d945_check_cpp_use_decl_path(_21dd2c0a3_SymbolBuilder*,jule::Ptr<_21c6460a5_UseDecl>&);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2dd30_build_cpp_header_import(_21dd2c0a3_SymbolBuilder*,jule::Ptr<_21c6460a5_UseDecl>&);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2e1c6_build_std_import(_21dd2c0a3_SymbolBuilder*,jule::Ptr<_21c6460a5_UseDecl>&);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2e57d_build_ident_import(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Ptr<_21c6460a5_UseDecl>&);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2e935_build_import(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Ptr<_21c6460a5_UseDecl>&);
inline jule::Bool _21dd2ed31_check_duplicate_use_decl(_21dd2c0a3_SymbolBuilder*,jule::Ptr<_21eb49c8d_ImportInfo>&);
inline void _21dd3021b_impl_import_selections(_21dd2c0a3_SymbolBuilder*,jule::Ptr<_21eb49c8d_ImportInfo>&,jule::Ptr<_21c6460a5_UseDecl>&);
inline jule::Str _21dd305c3_get_as_link_path(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Str);
inline void _21dd30a9b_push_cycle_error(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Ptr<_21dd2c0a3_SymbolBuilder>&,jule::Str,jule::Str&);
inline void _21dd31074_push_cross_cycle_error(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Ptr<_21dd2c0a3_SymbolBuilder>&,jule::Ptr<_21eb49c8d_ImportInfo>&,_21c627dde_Token&);
inline jule::Bool _21dd31508_check_import_cycles(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Ptr<_21eb49c8d_ImportInfo>,jule::Ptr<_21c6460a5_UseDecl>&);
inline void _21dd31a25_check_package_accessibility(_21dd2c0a3_SymbolBuilder*,jule::Ptr<_21c6460a5_UseDecl>&,jule::Str&,jule::Str&);
inline jule::Bool _21dd31e98_import_package(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Ptr<_21eb49c8d_ImportInfo>&,jule::Ptr<_21c6460a5_UseDecl>&);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd32350_import_use_decl(jule::Ptr<_21dd2c0a3_SymbolBuilder>,jule::Ptr<_21c6460a5_UseDecl>&);
inline void _21dd32592_import_use_decls(jule::Ptr<_21dd2c0a3_SymbolBuilder>);
inline void _21dd328b1_append_node(_21dd2c0a3_SymbolBuilder*,_21c523c63_Node&);
inline void _21dd32b03_append_nodes(_21dd2c0a3_SymbolBuilder*);
inline void _21dd32e22_push_directive_pass(_21dd2c0a3_SymbolBuilder*,jule::Ptr<_21c525490_Directive>&);
inline void _21dd33164_append_top_directives(_21dd2c0a3_SymbolBuilder*);
inline void _21dd333a6_build(jule::Ptr<_21dd2c0a3_SymbolBuilder>);
struct _21dd2c0a3_SymbolBuilder {
	jule::Ptr<_21dd2c0a3_SymbolBuilder> _field_owner = jule::Ptr<_21dd2c0a3_SymbolBuilder>();
	jule::Trait<_21eb471a8_Importer> _field_importer = jule::Trait<_21eb471a8_Importer>();
	jule::Slice<_21c348b32_Log> _field_errors = jule::Slice<_21c348b32_Log>();
	jule::Ptr<_21c4cc2b0_Ast> _field_ast = jule::Ptr<_21c4cc2b0_Ast>();
	jule::Ptr<_21ebb6c0b_SymbolTable> _field_table = jule::Ptr<_21ebb6c0b_SymbolTable>();


	_21dd2c0a3_SymbolBuilder(jule::Ptr<_21dd2c0a3_SymbolBuilder> __param_owner, jule::Trait<_21eb471a8_Importer> __param_importer, jule::Slice<_21c348b32_Log> __param_errors, jule::Ptr<_21c4cc2b0_Ast> __param_ast, jule::Ptr<_21ebb6c0b_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {}

	

	_21dd2c0a3_SymbolBuilder(void) = default;

	inline bool operator==(_21dd2c0a3_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_21dd2c0a3_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Bool _21e0e6966_is_trait_impl(_21de24992_Impl*);
inline jule::Bool _21e134c4b_is_struct_impl(_21de24992_Impl*);
struct _21de24992_Impl {
	jule::Ptr<_21c5d253b_TypeDecl> _field_base = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21c5d253b_TypeDecl> _field_dest = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Slice<jule::Ptr<_21dd19249_Fn>> _field_methods = jule::Slice<jule::Ptr<_21dd19249_Fn>>();
	jule::Slice<jule::Ptr<_21eb75615_Var>> _field_statics = jule::Slice<jule::Ptr<_21eb75615_Var>>();


	_21de24992_Impl(jule::Ptr<_21c5d253b_TypeDecl> __param_base, jule::Ptr<_21c5d253b_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_21dd19249_Fn>> __param_methods, jule::Slice<jule::Ptr<_21eb75615_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_21de24992_Impl(void) = default;

	inline bool operator==(_21de24992_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_21de24992_Impl _other) { return !this->operator==(_other); }


};
struct _21eb1472a_Scope {
	jule::Ptr<_21eb1472a_Scope> _field_parent = jule::Ptr<_21eb1472a_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_21eb1472a_Scope(jule::Ptr<_21eb1472a_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_21eb1472a_Scope(void) = default;

	inline bool operator==(_21eb1472a_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_21eb1472a_Scope _other) { return !this->operator==(_other); }


};
struct _235bb50ab_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();


	_235bb50ab_If(jule::Any __param_expr, jule::Ptr<_21eb1472a_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_235bb50ab_If(void) = default;

	inline bool operator==(_235bb50ab_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_235bb50ab_If _other) { return !this->operator==(_other); }


};
struct _21eb2c28c_Else {
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();


	_21eb2c28c_Else(jule::Ptr<_21eb1472a_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_21eb2c28c_Else(void) = default;

	inline bool operator==(_21eb2c28c_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21eb2c28c_Else _other) { return !this->operator==(_other); }


};
struct _21eb2c4ac_Conditional {
	jule::Slice<jule::Ptr<_235bb50ab_If>> _field_elifs = jule::Slice<jule::Ptr<_235bb50ab_If>>();
	jule::Ptr<_21eb2c28c_Else> _field_default = jule::Ptr<_21eb2c28c_Else>();


	_21eb2c4ac_Conditional(jule::Slice<jule::Ptr<_235bb50ab_If>> __param_elifs, jule::Ptr<_21eb2c28c_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_21eb2c4ac_Conditional(void) = default;

	inline bool operator==(_21eb2c4ac_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21eb2c4ac_Conditional _other) { return !this->operator==(_other); }


};
struct _21eb2c6cc_InfIter {
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();


	_21eb2c6cc_InfIter(jule::Ptr<_21eb1472a_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_21eb2c6cc_InfIter(void) = default;

	inline bool operator==(_21eb2c6cc_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21eb2c6cc_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eb03a05_is_while_next(_21eb2c8ec_WhileIter*);
struct _21eb2c8ec_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();


	_21eb2c8ec_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_21eb1472a_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_21eb2c8ec_WhileIter(void) = default;

	inline bool operator==(_21eb2c8ec_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21eb2c8ec_WhileIter _other) { return !this->operator==(_other); }


};
struct _21eb2cb1c_RangeIter {
	jule::Ptr<_21ebbd053_Data> _field_expr = jule::Ptr<_21ebbd053_Data>();
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();
	jule::Ptr<_21eb75615_Var> _field_key_a = jule::Ptr<_21eb75615_Var>();
	jule::Ptr<_21eb75615_Var> _field_key_b = jule::Ptr<_21eb75615_Var>();


	_21eb2cb1c_RangeIter(jule::Ptr<_21ebbd053_Data> __param_expr, jule::Ptr<_21eb1472a_Scope> __param_scope, jule::Ptr<_21eb75615_Var> __param_key_a, jule::Ptr<_21eb75615_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_21eb2cb1c_RangeIter(void) = default;

	inline bool operator==(_21eb2cb1c_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_21eb2cb1c_RangeIter _other) { return !this->operator==(_other); }


};
struct _21eb2cd3c_ContSt {
	jule::U64 _field_it = jule::U64();


	_21eb2cd3c_ContSt(jule::U64 __param_it): _field_it(__param_it) {}

	

	_21eb2cd3c_ContSt(void) = default;

	inline bool operator==(_21eb2cd3c_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_21eb2cd3c_ContSt _other) { return !this->operator==(_other); }


};
struct _21eb2d05c_BreakSt {
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_mtch = jule::U64();


	_21eb2d05c_BreakSt(jule::U64 __param_it, jule::U64 __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_21eb2d05c_BreakSt(void) = default;

	inline bool operator==(_21eb2d05c_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_21eb2d05c_BreakSt _other) { return !this->operator==(_other); }


};
struct _21eb2d27c_Label {
	jule::Str _field_ident = jule::Str();


	_21eb2d27c_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_21eb2d27c_Label(void) = default;

	inline bool operator==(_21eb2d27c_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21eb2d27c_Label _other) { return !this->operator==(_other); }


};
struct _21eb2d49c_GotoSt {
	jule::Str _field_ident = jule::Str();


	_21eb2d49c_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_21eb2d49c_GotoSt(void) = default;

	inline bool operator==(_21eb2d49c_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21eb2d49c_GotoSt _other) { return !this->operator==(_other); }


};
struct _21eb2d6bc_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_21eb2d6bc_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_21eb2d6bc_Postfix(void) = default;

	inline bool operator==(_21eb2d6bc_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_21eb2d6bc_Postfix _other) { return !this->operator==(_other); }


};
struct _21eb2db0c_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_21eb2db0c_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_21eb2db0c_MultiAssign(void) = default;

	inline bool operator==(_21eb2db0c_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_21eb2db0c_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eb04b38_is_generic_type_match(_21eb2dd2c_Match*);
struct _21eb2dd2c_Match {
	jule::Ptr<_21ebbd053_Data> _field_expr = jule::Ptr<_21ebbd053_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_21eb2e27d_Case>> _field_cases = jule::Slice<jule::Ptr<_21eb2e27d_Case>>();
	jule::Ptr<_21eb2e27d_Case> _field_default = jule::Ptr<_21eb2e27d_Case>();


	_21eb2dd2c_Match(jule::Ptr<_21ebbd053_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_21eb2e27d_Case>> __param_cases, jule::Ptr<_21eb2e27d_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_21eb2dd2c_Match(void) = default;

	inline bool operator==(_21eb2dd2c_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21eb2dd2c_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eb062bb_is_default(_21eb2e27d_Case*);
struct _21eb2e27d_Case {
	jule::Ptr<_21eb2dd2c_Match> _field_owner = jule::Ptr<_21eb2dd2c_Match>();
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();
	jule::Slice<jule::Ptr<_21ebbd053_Data>> _field_exprs = jule::Slice<jule::Ptr<_21ebbd053_Data>>();
	jule::Ptr<_21eb2e27d_Case> _field_next = jule::Ptr<_21eb2e27d_Case>();


	_21eb2e27d_Case(jule::Ptr<_21eb2dd2c_Match> __param_owner, jule::Ptr<_21eb1472a_Scope> __param_scope, jule::Slice<jule::Ptr<_21ebbd053_Data>> __param_exprs, jule::Ptr<_21eb2e27d_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_21eb2e27d_Case(void) = default;

	inline bool operator==(_21eb2e27d_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_21eb2e27d_Case _other) { return !this->operator==(_other); }


};
struct _21eb2e49d_FallSt {
	jule::U64 _field_dest_case = jule::U64();


	_21eb2e49d_FallSt(jule::U64 __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_21eb2e49d_FallSt(void) = default;

	inline bool operator==(_21eb2e49d_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_21eb2e49d_FallSt _other) { return !this->operator==(_other); }


};
struct _21eb2e6bd_RetSt {
	jule::Ptr<_21dd1cc42_FnIns> _field_func = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Slice<jule::Ptr<_21eb75615_Var>> _field_vars = jule::Slice<jule::Ptr<_21eb75615_Var>>();
	jule::Any _field_expr = jule::Any();


	_21eb2e6bd_RetSt(jule::Ptr<_21dd1cc42_FnIns> __param_func, jule::Slice<jule::Ptr<_21eb75615_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_21eb2e6bd_RetSt(void) = default;

	inline bool operator==(_21eb2e6bd_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21eb2e6bd_RetSt _other) { return !this->operator==(_other); }


};
struct _21eb2eb0d_ScopeGoto {
	jule::Ptr<_21c640863_GotoSt> _field_gt = jule::Ptr<_21c640863_GotoSt>();
	jule::Ptr<_21eb2ed2d_ScopeChecker> _field_scope = jule::Ptr<_21eb2ed2d_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();


	_21eb2eb0d_ScopeGoto(jule::Ptr<_21c640863_GotoSt> __param_gt, jule::Ptr<_21eb2ed2d_ScopeChecker> __param_scope, jule::I64 __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_21eb2eb0d_ScopeGoto(void) = default;

	inline bool operator==(_21eb2eb0d_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_21eb2eb0d_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eabd481_find_package(_21eb2ed2d_ScopeChecker*,jule::Str);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb3004d_select_package(_21eb2ed2d_ScopeChecker*,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>);
inline jule::Ptr<_21eb75615_Var> _21eb301b3_find_var(_21eb2ed2d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_21ec05288_TypeAlias> _21eb30328_find_type_alias(_21eb2ed2d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd03266_Struct> _21eb3048d_find_struct(_21eb2ed2d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd19249_Fn> _21eb307ac_find_fn(_21eb2ed2d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_21deee929_Trait> _21eb30b64_find_trait(_21eb2ed2d_ScopeChecker*,jule::Str);
inline jule::Ptr<_21ddb6aee_Enum> _21eb3101b_find_enum(_21eb2ed2d_ScopeChecker*,jule::Str);
inline jule::Bool _21eb313b2_is_unsafe(jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline jule::Bool _21eb3168c_is_root(_21eb2ed2d_ScopeChecker*);
inline void _21eb318ce_stop(_21eb2ed2d_ScopeChecker*);
inline jule::Bool _21eb31ba9_stopped(_21eb2ed2d_ScopeChecker*);
inline jule::Bool _21eb31e84_is_deferred(jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb3225e_get_root(jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb32539_get_hard_root(jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline jule::Ptr<_21eb2d27c_Label> _21eb328e1_find_label(_21eb2ed2d_ScopeChecker*,jule::Str);
inline jule::Ptr<_21eb2e8dd_ScopeLabel> _21eb32c98_find_label_scope(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Str);
inline jule::Ptr<_21eb2e8dd_ScopeLabel> _21eb33150_find_label_all(_21eb2ed2d_ScopeChecker*,jule::Str);
inline jule::Bool _21eb335d4_is_duplicated_ident(_21eb2ed2d_ScopeChecker*,jule::U64,jule::Str);
inline void _21eb33903_check_var_decl(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c64205c_VarDecl>);
inline void _21eb33c22_check_type_alias_decl(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c644ea5_TypeAliasDecl>);
inline jule::Ptr<_21eb1472a_Scope> _21eb33eec_get_child(_21eb2ed2d_ScopeChecker*);
inline void _21eb344c5_check_child_ssc(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6411e3_ScopeTree>&,jule::Ptr<_21eb1472a_Scope>&,jule::Ptr<_21eb2ed2d_ScopeChecker>&);
inline jule::Ptr<_21eb1472a_Scope> _21eb34959_check_child_sc(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6411e3_ScopeTree>&,jule::Ptr<_21eb2ed2d_ScopeChecker>&);
inline jule::Ptr<_21eb1472a_Scope> _21eb34d11_check_child(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6411e3_ScopeTree>&);
inline void _21eb35130_check_anon_scope(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6411e3_ScopeTree>);
inline void _21eb3552b_process_error_call(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>&,_21c627dde_Token);
inline void _21eb3584a_check_expr(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c4d7b4a_Expr>);
inline void _21eb35b69_check_co_expr(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c4d892b_CoExpr>);
inline jule::Ptr<_235bb50ab_If> _21eb36021_check_if(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c64413b_If>);
inline jule::Ptr<_21eb2c28c_Else> _21eb363c8_check_else(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c64449e_Else>);
inline void _21eb366e7_check_conditional(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6448ab_Conditional>);
inline jule::Ptr<_21eb1472a_Scope> _21eb36c58_check_iter_scope_sc(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::U64,jule::Ptr<_21c6411e3_ScopeTree>,jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline jule::Ptr<_21eb1472a_Scope> _21eb371dc_check_iter_scope(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::U64,jule::Ptr<_21c6411e3_ScopeTree>&);
inline void _21eb3750b_check_inf_iter(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6428ba_Iter>&);
inline void _21eb3782a_check_while_iter(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6428ba_Iter>&);
inline void _21eb37b49_check_range_iter(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6428ba_Iter>&);
inline void _21eb37e68_check_iter(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6428ba_Iter>);
inline jule::Bool _21eb38320_check_valid_cont_label(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::U64);
inline jule::Bool _21eb3871b_check_valid_break_label(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::U64);
inline jule::Ptr<_21eb2cd3c_ContSt> _21eb38ab2_check_cont_valid_scope(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c643c2e_ContSt>);
inline void _21eb38dd1_check_cont(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c643c2e_ContSt>);
inline void _21eb39200_check_label(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640643_LabelSt>);
inline void _21eb3951e_push_goto(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640863_GotoSt>);
inline void _21eb3983d_check_postfix(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640ec3_AssignSt>);
inline jule::Bool _21eb39be5_is_new_assign_ident(_21eb2ed2d_ScopeChecker*,jule::Str);
inline jule::Bool _21eb3a29a_check_structure_assign_op(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21dd06742_StructIns>&,jule::Ptr<_21c640ec3_AssignSt>&,jule::Ptr<_21ebbd053_Data>&);
inline void _21eb3a5a8_check_single_assign(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640ec3_AssignSt>&);
inline void _21eb3aca1___process_end_part_of_multi_assign(_21eb2ed2d_ScopeChecker*,jule::Ptr<_21eb2db0c_MultiAssign>,jule::Ptr<_21c640ec3_AssignSt>,jule::Ptr<_21c640ca3_AssignLeft>,jule::Ptr<_21ebbd053_Data>,jule::Ptr<_21ebbd053_Data>);
inline void _21eb3b08c_check_ret_multi_assign(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640ec3_AssignSt>&);
inline void _21eb3b3ab_check_multi_assign(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640ec3_AssignSt>&);
inline void _21eb3b6ca_check_assign_st(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640ec3_AssignSt>);
inline jule::Ptr<_21eb1472a_Scope> _21eb3bb5e_check_case_scope(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21eb2e27d_Case>&,jule::Ptr<_21c6411e3_ScopeTree>&);
inline jule::Ptr<_21eb2e27d_Case> _21eb3c29c_check_case(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21eb2dd2c_Match>,jule::I64,jule::Ptr<_21c6453b2_Case>,jule::Ptr<_21ebbd053_Data>);
inline void _21eb3c775_check_cases(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c645912_MatchCase>&,jule::Ptr<_21eb2dd2c_Match>,jule::Ptr<_21ebbd053_Data>);
inline jule::Ptr<_21eb2e27d_Case> _21eb3cc09_check_default(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21eb2dd2c_Match>,jule::Ptr<_21c64449e_Else>);
inline void _21eb3d028_check_comptime_panic(_21eb2ed2d_ScopeChecker*,jule::Ptr<_21eb1472a_Scope>&);
inline void _21eb3d424_push_type_match(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21eb2dd2c_Match>,jule::Ptr<_21c645912_MatchCase>&);
inline void _21eb3d743_check_type_match(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c645912_MatchCase>&);
inline void _21eb3da62_check_common_match(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c645912_MatchCase>&);
inline void _21eb3dd81_check_match(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c645912_MatchCase>);
inline void _21eb3e1a0_check_fall(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c640a83_FallSt>);
inline jule::Ptr<_21eb2d05c_BreakSt> _21eb3e557_check_break_with_label(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6438bb_BreakSt>);
inline jule::Ptr<_21eb2d05c_BreakSt> _21eb3e90e_check_plain_break(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6438bb_BreakSt>);
inline void _21eb3ec2d_check_break(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6438bb_BreakSt>);
inline void _21eb4004c_check_ret(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6423c0_RetSt>);
inline void _21eb4036b_check_use_expr(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c4d7d6a_UseExpr>);
inline void _21eb4068a_check_node(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Any&);
inline void _21eb408cc_check_result(jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline void _21eb40b1e_check_tree(jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline void _21eb4101a_check_goto(_21eb2ed2d_ScopeChecker*,jule::Ptr<_21eb2eb0d_ScopeGoto>&,jule::Ptr<_21eb2e8dd_ScopeLabel>&);
inline void _21eb4125c_check_gotos(_21eb2ed2d_ScopeChecker*);
inline void _21eb4149e_check_labels(_21eb2ed2d_ScopeChecker*);
inline void _21eb416e1_check_vars(_21eb2ed2d_ScopeChecker*);
inline void _21eb41933_check_aliases(_21eb2ed2d_ScopeChecker*);
inline void _21eb41d2e_check(jule::Ptr<_21eb2ed2d_ScopeChecker>,jule::Ptr<_21c6411e3_ScopeTree>&,jule::Ptr<_21eb1472a_Scope>&);
inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb42109_new_child_checker(jule::Ptr<_21eb2ed2d_ScopeChecker>);
struct _21eb2ed2d_ScopeChecker {
	jule::Ptr<_21c627dde_Token> _field_called_from = jule::Ptr<_21c627dde_Token>();
	jule::Ptr<_21eb5443a_Sema> _field_s = jule::Ptr<_21eb5443a_Sema>();
	jule::Ptr<_21dd1cc42_FnIns> _field_owner = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21eb2ed2d_ScopeChecker> _field_parent = jule::Ptr<_21eb2ed2d_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_21ebb6c0b_SymbolTable> _field_table = jule::Ptr<_21ebb6c0b_SymbolTable>();
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();
	jule::Ptr<_21c6411e3_ScopeTree> _field_tree = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Ptr<_21ec06223_TypeKind> _field_result = jule::Ptr<_21ec06223_TypeKind>();
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_cse = jule::U64();
	jule::Ptr<jule::Slice<jule::Ptr<_21eb2e8dd_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_21eb2e8dd_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_21eb2eb0d_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_21eb2eb0d_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();


	_21eb2ed2d_ScopeChecker(jule::Ptr<_21c627dde_Token> __param_called_from, jule::Ptr<_21eb5443a_Sema> __param_s, jule::Ptr<_21dd1cc42_FnIns> __param_owner, jule::Ptr<_21eb2ed2d_ScopeChecker> __param_parent, jule::I64 __param_child_index, jule::Ptr<_21ebb6c0b_SymbolTable> __param_table, jule::Ptr<_21eb1472a_Scope> __param_scope, jule::Ptr<_21c6411e3_ScopeTree> __param_tree, jule::Ptr<_21ec06223_TypeKind> __param_result, jule::U64 __param_it, jule::U64 __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_21eb2e8dd_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_21eb2eb0d_ScopeGoto>>> __param_gotos, jule::I64 __param_i): _field_called_from(__param_called_from), _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {}

	

	_21eb2ed2d_ScopeChecker(void) = default;

	inline bool operator==(_21eb2ed2d_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_21eb2ed2d_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _21eb4357d_check_cdef(_21eb43094_DirectiveChecker*,jule::Ptr<_21c525490_Directive>&);
inline void _21eb4389c_check_typedef(_21eb43094_DirectiveChecker*,jule::Ptr<_21c525490_Directive>&);
inline void _21eb43bbb_check_derive(_21eb43094_DirectiveChecker*,jule::Ptr<_21c525490_Directive>&);
inline void _21eb43eda_check_namespace(_21eb43094_DirectiveChecker*,jule::Ptr<_21c525490_Directive>&);
inline void _21eb44309_check_deprecated(_21eb43094_DirectiveChecker*,jule::Ptr<_21c525490_Directive>&);
inline void _21eb44628_check_test(_21eb43094_DirectiveChecker*,jule::Ptr<_21c525490_Directive>&);
inline void _21eb44947_check_directive(_21eb43094_DirectiveChecker*,jule::Ptr<_21c525490_Directive>&);
inline void _21eb44b89_check(_21eb43094_DirectiveChecker*);
struct _21eb43094_DirectiveChecker {
	jule::Ptr<_21eb5443a_Sema> _field_s = jule::Ptr<_21eb5443a_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_21c525490_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_21c525490_Directive>>>();
	jule::Any _field_o = jule::Any();


	_21eb43094_DirectiveChecker(jule::Ptr<_21eb5443a_Sema> __param_s, jule::Ptr<jule::Slice<jule::Ptr<_21c525490_Directive>>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_21eb43094_DirectiveChecker(void) = default;

	inline bool operator==(_21eb43094_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_21eb43094_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4d7ca_find_package(_21eb4d269_Package*,jule::Str);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4db82_select_package(_21eb4d269_Package*,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>);
inline jule::Ptr<_21eb75615_Var> _21eb4e116_find_var(_21eb4d269_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_21ec05288_TypeAlias> _21eb4e59a_find_type_alias(_21eb4d269_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd03266_Struct> _21eb4ea2e_find_struct(_21eb4d269_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd19249_Fn> _21eb4eeb3_find_fn(_21eb4d269_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_21deee929_Trait> _21eb5036a_find_trait(_21eb4d269_Package*,jule::Str);
inline jule::Ptr<_21ddb6aee_Enum> _21eb50722_find_enum(_21eb4d269_Package*,jule::Str);
struct _21eb4d269_Package {
	jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>();


	_21eb4d269_Package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_21eb4d269_Package(void) = default;

	inline bool operator==(_21eb4d269_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_21eb4d269_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb549e0_find_package(_21eb5443a_Sema*,jule::Str);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb54d97_select_package(_21eb5443a_Sema*,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>);
inline jule::Ptr<_21eb75615_Var> _21eb5532b_find_var(_21eb5443a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_21ec05288_TypeAlias> _21eb557b0_find_type_alias(_21eb5443a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd03266_Struct> _21eb55c44_find_struct(_21eb5443a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd19249_Fn> _21eb561c8_find_fn(_21eb5443a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_21deee929_Trait> _21eb56580_find_trait(_21eb5443a_Sema*,jule::Str);
inline jule::Ptr<_21ddb6aee_Enum> _21eb56937_find_enum(_21eb5443a_Sema*,jule::Str);
inline jule::Bool _21eb56daa_is_flag(_21eb5443a_Sema*,jule::I64);
inline void _21eb571c9_set_current_file(_21eb5443a_Sema*,jule::Ptr<_21ebb6c0b_SymbolTable>);
inline void _21eb576a2_push_err(_21eb5443a_Sema*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline void _21eb57a9d_push_suggestion(_21eb5443a_Sema*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21eb58032_is_accessible_define(_21eb5443a_Sema*,jule::Bool,_21c627dde_Token);
inline jule::Bool _21eb58593_is_duplicated_ident(_21eb5443a_Sema*,jule::U64,jule::Str,jule::Bool);
inline void _21eb5898e_check_directives(jule::Ptr<_21eb5443a_Sema>,jule::Slice<jule::Ptr<_21c525490_Directive>>&,jule::Any);
inline jule::Bool _21eb59000_check_generic_quantity(_21eb5443a_Sema*,jule::I64,jule::I64,_21c627dde_Token);
inline jule::Bool _21eb594c8_is_duplicated_import_selection(_21eb5443a_Sema*,jule::U64,jule::Str);
inline jule::Any _21eb5994b_get_import_def(_21eb5443a_Sema*,jule::Str,jule::Ptr<_21eb49c8d_ImportInfo>&);
inline jule::Bool _21eb59d47_check_import_selections(_21eb5443a_Sema*,jule::Ptr<_21eb49c8d_ImportInfo>&);
inline jule::Bool _21eb5a232_is_use_alias_duplication(_21eb5443a_Sema*,jule::Ptr<_21eb49c8d_ImportInfo>&);
inline jule::Bool _21eb5a5c8_check_import(_21eb5443a_Sema*,jule::Ptr<_21eb49c8d_ImportInfo>&);
inline void _21eb5a81a_check_imports(_21eb5443a_Sema*);
inline void _21eb5aa5c_impl_file_impls(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb5ac9e_impl_impls(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb5aee1_check_enums(jule::Ptr<_21eb5443a_Sema>);
inline jule::Bool _21eb5b552_check_type_with_refers(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ec0aa85_TypeSymbol>&,jule::Trait<_21ec23a48_Lookup>,jule::Ptr<_21ec16ed1_Referencer>);
inline jule::Bool _21eb5b9d6_check_type(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ec0aa85_TypeSymbol>&,jule::Trait<_21ec23a48_Lookup>);
inline jule::Ptr<_21ec06223_TypeKind> _21eb5beae_build_type_with_generics(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21c5d253b_TypeDecl>&,jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>);
inline jule::Ptr<_21ec06223_TypeKind> _21eb5c355_build_type(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21c5d253b_TypeDecl>&);
inline jule::Ptr<_21ec06223_TypeKind> _21eb5c70c_select_type(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21c5d253b_TypeDecl>&);
inline jule::Ptr<_21ebc00aa_Eval> _21eb5cc6d_evalpd(jule::Ptr<_21eb5443a_Sema>,jule::Trait<_21ec23a48_Lookup>,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21eb75615_Var>);
inline jule::Ptr<_21ebc00aa_Eval> _21eb5d202_evalp(jule::Ptr<_21eb5443a_Sema>,jule::Trait<_21ec23a48_Lookup>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Ptr<_21ebc00aa_Eval> _21eb5d5a9_eval(jule::Ptr<_21eb5443a_Sema>,jule::Trait<_21ec23a48_Lookup>);
inline jule::Bool _21eb5dbe7_check_assign_type(jule::Ptr<_21eb5443a_Sema>,jule::Bool,jule::Ptr<_21ec06223_TypeKind>&,jule::Ptr<_21ebbd053_Data>&,_21c627dde_Token);
inline jule::Bool _21eb5e29c_check_type_compatibility(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ec06223_TypeKind>&,jule::Ptr<_21ec06223_TypeKind>&,_21c627dde_Token&);
inline jule::Ptr<_21ec06223_TypeKind> _21eb5e764_build_non_generic_type_kind(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21c5d253b_TypeDecl>&,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>&);
inline void _21eb5eab6_build_fn_non_generic_type_kinds(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Ptr<_21dd1cc42_FnIns> _21eb5eea1_get_trait_check_fn_kind(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd19249_Fn>&);
inline jule::Bool _21eb60347_reload_fn_ins_types(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Bool _21eb6091e_check_ref_validity_for_init_expr(jule::Ptr<_21eb5443a_Sema>,jule::Bool,jule::Ptr<_21ebbd053_Data>&,_21c627dde_Token&);
inline jule::Bool _21eb6117d_check_validity_for_init_expr(jule::Ptr<_21eb5443a_Sema>,jule::Bool,jule::Bool,jule::Ptr<_21ec06223_TypeKind>&,jule::Ptr<_21ebbd053_Data>&,_21c627dde_Token&);
inline jule::Bool _21eb61612_check_type_alias_decl_kind(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ec05288_TypeAlias>&,jule::Trait<_21ec23a48_Lookup>);
inline void _21eb619ec_check_type_alias_decl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ec05288_TypeAlias>&,jule::Trait<_21ec23a48_Lookup>);
inline void _21eb61d60_check_type_alias_decl_dup(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ec05288_TypeAlias>&);
inline jule::Bool _21eb62129_check_type_alias_decls(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb62448_check_enum_items_dup(_21eb5443a_Sema*,jule::Ptr<_21ddb6aee_Enum>);
inline void _21eb62767_check_enum_items_str(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ddb6aee_Enum>&);
inline void _21eb62a86_check_enum_items_int(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ddb6aee_Enum>&);
inline void _21eb62da5_check_enum_decl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21ddb6aee_Enum>&);
inline jule::Bool _21eb63180_check_enum_decls(jule::Ptr<_21eb5443a_Sema>);
inline jule::Bool _21eb63537_check_decl_generics(_21eb5443a_Sema*,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>&);
inline jule::Bool _21eb63933_check_fn_decl_params_dup(_21eb5443a_Sema*,jule::Ptr<_21dd19249_Fn>&);
inline jule::Bool _21eb63d1d_check_fn_decl_result_dup(_21eb5443a_Sema*,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb6412b_check_fn_decl_types(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb6448e_check_fn_decl_prototype(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb647e1_check_trait_decl_method(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb64b43_check_trait_decl_methods(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21deee929_Trait>&);
inline void _21eb64e51_check_trait_decl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21deee929_Trait>&);
inline jule::Bool _21eb6522b_check_trait_decls(jule::Ptr<_21eb5443a_Sema>);
inline jule::Bool _21eb65704_check_trait_impl_methods(_21eb5443a_Sema*,jule::Ptr<_21deee929_Trait>&,jule::Ptr<_21de24992_Impl>&);
inline jule::Bool _21eb65b77_impl_to_struct(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&,jule::Ptr<_21de24992_Impl>&);
inline void _21eb65e96_impl_trait(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21de24992_Impl>&);
inline void _21eb662b5_impl_struct(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21de24992_Impl>&);
inline void _21eb665d4_impl_impl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21de24992_Impl>&);
inline void _21eb669d0_check_var_decl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21eb75615_Var>&,jule::Trait<_21ec23a48_Lookup>);
inline void _21eb66cee_check_global_var_decl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21eb75615_Var>&);
inline jule::Bool _21eb670c9_check_global_decls(jule::Ptr<_21eb5443a_Sema>);
inline jule::Bool _21eb675a2_check_struct_trait_impl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&,jule::Ptr<_21deee929_Trait>&);
inline jule::Bool _21eb67948_check_struct_impls(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&);
inline jule::Bool _21eb67d00_check_struct_fields(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&);
inline jule::Bool _21eb681eb_check_struct_decl_methods(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&);
inline void _21eb68509_check_struct_decl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&);
inline jule::Bool _21eb687d4_check_struct_decls(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb68b03_check_fn_decl(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd19249_Fn>&);
inline jule::Bool _21eb68dcd_check_fn_decls(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb693a6_push_cycle_error(_21eb5443a_Sema*,jule::Ptr<_21dd03266_Struct>&,jule::Ptr<_21dd03266_Struct>&,jule::Str&);
inline jule::Bool _21eb69917_check_cross_cycle(_21eb5443a_Sema*,jule::Ptr<_21dd03266_Struct>&,jule::Ptr<_21dd03266_Struct>&,jule::Str&);
inline jule::Bool _21eb69ede_check_struct_derive_illegal_cycles(_21eb5443a_Sema*,jule::Str,jule::Ptr<_21dd03266_Struct>&,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21eb6a3a7_check_struct_ins_derive_clone(_21eb5443a_Sema*,jule::Ptr<_21dd06742_StructIns>);
inline jule::Bool _21eb6a792_check_struct_derive_clone(_21eb5443a_Sema*,jule::Ptr<_21dd03266_Struct>&);
inline jule::Bool _21eb6aa5b_check_file_derives(_21eb5443a_Sema*);
inline void _21eb6ac9d_check_package_derives(_21eb5443a_Sema*);
inline void _21eb6aee0_check_package_decls(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb6b430_check_data_for_type_inference(_21eb5443a_Sema*,jule::Ptr<_21ebbd053_Data>&,_21c627dde_Token&);
inline void _21eb6b73d_check_var(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21eb75615_Var>&);
inline void _21eb6bb39_check_type_var(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21eb75615_Var>&,jule::Trait<_21ec23a48_Lookup>);
inline void _21eb6bd7b_check_global_types(jule::Ptr<_21eb5443a_Sema>);
inline jule::Ptr<_21dd1cc42_FnIns> _21eb6c310_ready_to_check_fn(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd06742_StructIns>&,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb6c70b_check_type_method(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd06742_StructIns>&,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb6ca2a_check_field_defaults(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Ptr<_21dd1cc42_FnIns> _21eb6d08b_check_struct_ins_op(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd06742_StructIns>&,jule::Ptr<_21dd19249_Fn>&,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>);
inline void _21eb6d3aa_check_struct_ins(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd06742_StructIns>&);
inline void _21eb6d6c9_check_type_struct(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&);
inline void _21eb6d91b_check_struct_types(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb6dc7e_check_struct_ins_operators(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd06742_StructIns>);
inline void _21eb6e0d1_check_type_struct_operators(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd03266_Struct>&);
inline void _21eb6e356_check_struct_types_operators(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb6e664_check_rets(_21eb5443a_Sema*,jule::Ptr<_21dd1cc42_FnIns>&);
inline void _21eb6ea60_check_fn_ins_sc(_21eb5443a_Sema*,jule::Ptr<_21dd1cc42_FnIns>&,jule::Ptr<_21eb2ed2d_ScopeChecker>&);
inline void _21eb6ee5b_check_fn_ins_caller(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd1cc42_FnIns>&,jule::Ptr<_21c627dde_Token>);
inline void _21eb7027a_check_fn_ins(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd1cc42_FnIns>&);
inline void _21eb70599_check_type_fn(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb708b8_check_test_fn(_21eb5443a_Sema*,jule::Ptr<_21dd1cc42_FnIns>&);
inline void _21eb70bd7_precheck_type_fn(jule::Ptr<_21eb5443a_Sema>,jule::Ptr<_21dd19249_Fn>&);
inline void _21eb70e29_precheck_fn_types(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb7116b_check_fn_types(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb713ad_check_package_types(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb71600_set_file_sema_fields(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb71842_set_sema_fields(jule::Ptr<_21eb5443a_Sema>);
inline void _21eb71b61_check(jule::Ptr<_21eb5443a_Sema>,jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&);
struct _21eb5443a_Sema {
	jule::Slice<_21c348b32_Log> _field_errors = jule::Slice<_21c348b32_Log>();
	jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>();
	jule::Ptr<_21ebb6c0b_SymbolTable> _field_file = jule::Ptr<_21ebb6c0b_SymbolTable>();
	jule::I64 _field_flags = 0LL;


	_21eb5443a_Sema(jule::Slice<_21c348b32_Log> __param_errors, jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>> __param_files, jule::Ptr<_21ebb6c0b_SymbolTable> __param_file, jule::I64 __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {}

	

	_21eb5443a_Sema(void) = default;

	inline bool operator==(_21eb5443a_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_21eb5443a_Sema _other) { return !this->operator==(_other); }


};
inline _21eb720b2_MissingRetChecker static__21eb724ad_new(void);
inline jule::Bool _21eb72832_check_conditional(_21eb720b2_MissingRetChecker*,jule::Ptr<_21eb2c4ac_Conditional>);
inline jule::Bool _21eb72bd9_check_match(_21eb720b2_MissingRetChecker*,jule::Ptr<_21eb2dd2c_Match>);
inline jule::Bool _21eb73091_check_inf_iter(_21eb720b2_MissingRetChecker*,jule::Ptr<_21eb2c6cc_InfIter>);
inline jule::Bool _21eb73448_check_scope(_21eb720b2_MissingRetChecker*,jule::Ptr<_21eb1472a_Scope>);
inline jule::Bool _21eb73800_check(_21eb720b2_MissingRetChecker*,jule::Ptr<_21eb1472a_Scope>);
struct _21eb720b2_MissingRetChecker {
	jule::Slice<jule::U64> _field_breaked = jule::Slice<jule::U64>();
	jule::Bool _field_falled = jule::Bool();


	_21eb720b2_MissingRetChecker(jule::Slice<jule::U64> __param_breaked, jule::Bool __param_falled): _field_breaked(__param_breaked), _field_falled(__param_falled) {}

	

	_21eb720b2_MissingRetChecker(void) = default;

	inline bool operator==(_21eb720b2_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_21eb720b2_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _21eb74306_IterRelation {
	jule::Ptr<_21eb75615_Var> _field_range = jule::Ptr<_21eb75615_Var>();


	_21eb74306_IterRelation(jule::Ptr<_21eb75615_Var> __param_range): _field_range(__param_range) {}

	

	_21eb74306_IterRelation(void) = default;

	inline bool operator==(_21eb74306_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_21eb74306_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool static__21eb76913_dispose(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb76c21_to_str(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7710b_logical(jule::Ptr<_21dd19249_Fn>&,jule::Str);
inline jule::Bool static__21eb77419_eq(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb77727_gt(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb77a35_gt_eq(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb77d43_lt(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb78151_lt_eq(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7853b_result(jule::Ptr<_21dd19249_Fn>&,jule::Str);
inline jule::Bool static__21eb78849_shl(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb78b57_shr(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb78e65_add(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb79273_sub(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb79581_div(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7988e_mul(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb79b9c_mod(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb79eaa_bit_and(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7a2b8_bit_or(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7a5c6_bit_xor(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7a9b1_unary(jule::Ptr<_21dd19249_Fn>&,jule::Str);
inline jule::Bool static__21eb7acbe_neg(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7b0cc_pos(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7b3da_bit_not(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7b7c5_assign(jule::Ptr<_21dd19249_Fn>&,jule::Str);
inline jule::Bool static__21eb7bad3_add_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7bde1_sub_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7c1ee_div_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7c50c_mul_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7c81a_mod_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7cb28_shl_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7ce36_shr_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7d244_bit_or_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7d552_bit_and_assign(jule::Ptr<_21dd19249_Fn>);
inline jule::Bool static__21eb7d860_bit_xor_assign(jule::Ptr<_21dd19249_Fn>);
struct _21eb7622b_FuncPattern {
	

	_21eb7622b_FuncPattern(void) = default;

	inline bool operator==(_21eb7622b_FuncPattern _other) { return true; }

	inline bool operator!=(_21eb7622b_FuncPattern _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21eb75615_Var> _21ebb2674_build_var(_21ebb2135_RangeChecker*,jule::Ptr<_21c64205c_VarDecl>&);
inline void _21ebb28b6_set_size_key(_21ebb2135_RangeChecker*);
inline void _21ebb2dd3_check_range_expr_validity(_21ebb2135_RangeChecker*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21eb75615_Var>&,jule::Ptr<_21ec06223_TypeKind>&);
inline void _21ebb3114_check_slice(_21ebb2135_RangeChecker*);
inline void _21ebb3356_check_array(_21ebb2135_RangeChecker*);
inline void _21ebb3598_check_map_key_a(_21ebb2135_RangeChecker*);
inline void _21ebb37da_check_map_key_b(_21ebb2135_RangeChecker*);
inline void _21ebb3a2c_check_map(_21ebb2135_RangeChecker*);
inline void _21ebb3c6e_check_str(_21ebb2135_RangeChecker*);
inline jule::Bool _21ebb4049_check(_21ebb2135_RangeChecker*);
struct _21ebb2135_RangeChecker {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _field_sc = jule::Ptr<_21eb2ed2d_ScopeChecker>();
	jule::Ptr<_21c643558_RangeKind> _field_rang = jule::Ptr<_21c643558_RangeKind>();
	jule::Ptr<_21eb2cb1c_RangeIter> _field_kind = jule::Ptr<_21eb2cb1c_RangeIter>();
	jule::Ptr<_21ebbd053_Data> _field_d = jule::Ptr<_21ebbd053_Data>();


	_21ebb2135_RangeChecker(jule::Ptr<_21eb2ed2d_ScopeChecker> __param_sc, jule::Ptr<_21c643558_RangeKind> __param_rang, jule::Ptr<_21eb2cb1c_RangeIter> __param_kind, jule::Ptr<_21ebbd053_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_21ebb2135_RangeChecker(void) = default;

	inline bool operator==(_21ebb2135_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_21ebb2135_RangeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ebb72b1_find_package(_21ebb6c0b_SymbolTable*,jule::Str);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ebb7668_select_package(_21ebb6c0b_SymbolTable*,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>);
inline jule::Ptr<_21eb75615_Var> _21ebb7aec_find_var(_21ebb6c0b_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_21ec05288_TypeAlias> _21ebb8081_find_type_alias(_21ebb6c0b_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd03266_Struct> _21ebb8515_find_struct(_21ebb6c0b_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd19249_Fn> _21ebb8999_find_fn(_21ebb6c0b_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_21deee929_Trait> _21ebb8d51_find_trait(_21ebb6c0b_SymbolTable*,jule::Str);
inline jule::Ptr<_21ddb6aee_Enum> _21ebb9208_find_enum(_21ebb6c0b_SymbolTable*,jule::Str);
inline jule::Ptr<_21eb75615_Var> _21ebb988a___find_var(_21ebb6c0b_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Ptr<_21ec05288_TypeAlias> _21ebb9deb___find_type_alias(_21ebb6c0b_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Any _21ebba380_def_by_ident(_21ebb6c0b_SymbolTable*,jule::Str,jule::Bool);
inline jule::Bool _21ebba8e1_is_duplicated_ident(_21ebb6c0b_SymbolTable*,jule::U64,jule::Str,jule::Bool);
struct _21ebb6c0b_SymbolTable {
	jule::Ptr<_21c62e038_File> _field_file = jule::Ptr<_21c62e038_File>();
	jule::Slice<_21dd27b09_Pass> _field_passes = jule::Slice<_21dd27b09_Pass>();
	jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>>();
	jule::Slice<jule::Ptr<_21eb75615_Var>> _field_vars = jule::Slice<jule::Ptr<_21eb75615_Var>>();
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>();
	jule::Slice<jule::Ptr<_21dd03266_Struct>> _field_structs = jule::Slice<jule::Ptr<_21dd03266_Struct>>();
	jule::Slice<jule::Ptr<_21dd19249_Fn>> _field_funcs = jule::Slice<jule::Ptr<_21dd19249_Fn>>();
	jule::Slice<jule::Ptr<_21deee929_Trait>> _field_traits = jule::Slice<jule::Ptr<_21deee929_Trait>>();
	jule::Slice<jule::Ptr<_21ddb6aee_Enum>> _field_enums = jule::Slice<jule::Ptr<_21ddb6aee_Enum>>();
	jule::Slice<jule::Ptr<_21de24992_Impl>> _field_impls = jule::Slice<jule::Ptr<_21de24992_Impl>>();


	_21ebb6c0b_SymbolTable(jule::Ptr<_21c62e038_File> __param_file, jule::Slice<_21dd27b09_Pass> __param_passes, jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_21eb75615_Var>> __param_vars, jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_21dd03266_Struct>> __param_structs, jule::Slice<jule::Ptr<_21dd19249_Fn>> __param_funcs, jule::Slice<jule::Ptr<_21deee929_Trait>> __param_traits, jule::Slice<jule::Ptr<_21ddb6aee_Enum>> __param_enums, jule::Slice<jule::Ptr<_21de24992_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_21ebb6c0b_SymbolTable(void) = default;

	inline bool operator==(_21ebb6c0b_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_21ebb6c0b_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _21ebbd4a4_is_nil(_21ebbd053_Data*);
inline jule::Bool _21ebbd77e_is_void(_21ebbd053_Data*);
inline jule::Bool _21ebbda59_is_const(_21ebbd053_Data*);
inline jule::Bool _21ebbde11_good_operand(_21ebbd053_Data*,jule::Ptr<_21ebbd053_Data>&);
struct _21ebbd053_Data {
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21ec06223_TypeKind> _field_cast_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_21ea9d450_Const> _field_constant = jule::Ptr<_21ea9d450_Const>();


	_21ebbd053_Data(jule::Ptr<_21ec06223_TypeKind> __param_kind, jule::Ptr<_21ec06223_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_21ea9d450_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_21ebbd053_Data(void) = default;

	inline bool operator==(_21ebbd053_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_cast_kind == _other._field_cast_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_21ebbd053_Data _other) { return !this->operator==(_other); }


};
struct _21ebbe362_Value {
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21ebbd053_Data> _field_data = jule::Ptr<_21ebbd053_Data>();


	_21ebbe362_Value(jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Ptr<_21ebbd053_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_21ebbe362_Value(void) = default;

	inline bool operator==(_21ebbe362_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_21ebbe362_Value _other) { return !this->operator==(_other); }


};
inline void _21ebc0693_push_err(_21ebc00aa_Eval*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline void _21ebc0a8e_push_suggestion(_21ebc00aa_Eval*,jule::Str,jule::Slice<jule::Any>);
inline void _21ebc0cd1_allow_builtin(_21ebc00aa_Eval*);
inline void _21ebc1023_disallow_builtin(_21ebc00aa_Eval*);
inline jule::Bool _21ebc12ed_is_unsafe(_21ebc00aa_Eval*);
inline jule::Bool _21ebc15c8_is_global(_21ebc00aa_Eval*);
inline jule::Bool _21ebc1980_apply_numeric_prefix(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc1c5a_lit_nil(_21ebc00aa_Eval*);
inline jule::Ptr<_21ebbd053_Data> _21ebc2112_lit_str(_21ebc00aa_Eval*,jule::Ptr<_21c4d84db_LitExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc24b9_lit_bool(_21ebc00aa_Eval*,jule::Ptr<_21c4d84db_LitExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc2871_lit_rune(_21ebc00aa_Eval*,jule::Ptr<_21c4d84db_LitExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc2c28_lit_float(_21ebc00aa_Eval*,jule::Ptr<_21c4d84db_LitExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc30d0_lit_int(_21ebc00aa_Eval*,jule::Ptr<_21c4d84db_LitExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc3487_lit_num(_21ebc00aa_Eval*,jule::Ptr<_21c4d84db_LitExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc383e_eval_lit(_21ebc00aa_Eval*,jule::Ptr<_21c4d84db_LitExpr>);
inline jule::Any _21ebc3be6_find_builtins(_21ebc00aa_Eval*,jule::Str);
inline jule::Any _21ebc417a_get_def(_21ebc00aa_Eval*,jule::Str,jule::Bool);
inline void _21ebc4499_push_reference(_21ebc00aa_Eval*,jule::Ptr<_21dd264ba_ReferenceStack>&);
inline void _21ebc47b8_push_reference_to_fn(_21ebc00aa_Eval*,jule::Ptr<_21dd1cc42_FnIns>&);
inline void _21ebc4ad7_push_reference_to_var(_21ebc00aa_Eval*,jule::Ptr<_21eb75615_Var>&);
inline void _21ebc4e4a_push_reference_to_struct(_21ebc00aa_Eval*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Ptr<_21ebbd053_Data> _21ebc52e1___eval_enum(_21ebc00aa_Eval*,jule::Ptr<_21ddb6aee_Enum>);
inline jule::Ptr<_21ebbd053_Data> _21ebc5775_eval_enum(_21ebc00aa_Eval*,jule::Ptr<_21ddb6aee_Enum>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebc5b2c___eval_struct(_21ebc00aa_Eval*,jule::Ptr<_21dd06742_StructIns>);
inline jule::Ptr<_21ebbd053_Data> _21ebc60b1_eval_struct(_21ebc00aa_Eval*,jule::Ptr<_21dd06742_StructIns>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebc6468_eval_fn_ins(_21ebc00aa_Eval*,jule::Ptr<_21dd1cc42_FnIns>);
inline void _21ebc6864_check_deprecated(_21ebc00aa_Eval*,jule::Slice<jule::Ptr<_21c525490_Directive>>&,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebc6ce8_eval_fn(_21ebc00aa_Eval*,jule::Ptr<_21dd19249_Fn>,_21c627dde_Token);
inline void _21ebc7315_push_illegal_cycle_error(_21ebc00aa_Eval*,jule::Ptr<_21eb75615_Var>&,jule::Ptr<_21eb75615_Var>&,jule::Str&);
inline jule::Bool _21ebc7788_check_cross_cycle(_21ebc00aa_Eval*,jule::Ptr<_21eb75615_Var>&,jule::Str&);
inline jule::Bool _21ebc7c1c_check_illegal_cycles(_21ebc00aa_Eval*,jule::Ptr<_21eb75615_Var>&,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebc81a1_eval_var(_21ebc00aa_Eval*,jule::Ptr<_21eb75615_Var>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebc8635_eval_type_alias(_21ebc00aa_Eval*,jule::Ptr<_21ec05288_TypeAlias>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebc8ab9_eval_def(_21ebc00aa_Eval*,jule::Any,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebc8e71_eval_ident(_21ebc00aa_Eval*,jule::Ptr<_21c4d8b4b_IdentExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebc9328_eval_unary(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c4d8d6b_UnaryExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebc96d0_eval_variadic(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c4d908b_VariadicExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebc9a87_eval_unsafe(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c4d870b_UnsafeExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebc9e3e_eval_arr(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63e840_SliceExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebca3c3_eval_exp_slc(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63e840_SliceExpr>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Ptr<_21ebbd053_Data> _21ebca77a_eval_slice_expr(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63e840_SliceExpr>);
inline void _21ebcabba_check_integer_indexing_by_data(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,_21c627dde_Token);
inline void _21ebcb182_indexing_ptr(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline void _21ebcb65a_indexing_arr(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline void _21ebcbb33_indexing_slc(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline void _21ebcc10b_indexing_map(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline void _21ebcc5d4_indexing_str(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline void _21ebccaac_to_indexing(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline jule::Bool _21ebcd085_push_generics_from_index_data(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c529e9a_IdentTypeDecl>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebcd54c_eval_ident_decl_from_indexing(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c4d82aa_IndexingExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebcd8e3_eval_indexing(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c4d82aa_IndexingExpr>);
inline std::tuple<jule::Ptr<_21ebbd053_Data>,jule::Ptr<_21ebbd053_Data>> _21ebcdc9a_eval_slicing_exprs(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63eed3_SlicingExpr>&);
inline void _21ebce0b9_slicing_arr(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebce592_slicing_str(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebceb47_check_slicing(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21c63eed3_SlicingExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ebceeee_eval_slicing(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63eed3_SlicingExpr>);
inline void _21ebd04c7_cast_ptr(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd09a0_cast_struct(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd0e78_cast_ref(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd1451_cast_slc(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd184c_cast_str(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd1d25_cast_int(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd22ed_cast_num(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd27c6_cast_prim(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline void _21ebd2bc2_cast_constant(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ebd3277_eval_cast_by_type_n_data(_21ebc00aa_Eval*,jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd361d_eval_cast(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63d410_CastExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebd39c5_eval_ns_selection(_21ebc00aa_Eval*,jule::Ptr<_21c63d630_NsSelectionExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebd407a_eval_struct_lit_explicit(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21dd06742_StructIns>,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd4421_eval_struct_lit(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63e1d0_StructLit>);
inline jule::Ptr<_21ebbd053_Data> _21ebd47c8_eval_type(_21ebc00aa_Eval*,jule::Ptr<_21c5d253b_TypeDecl>);
inline void _21ebd4bc4_call_type_fn(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _21ebd5158_check_fn_call_generics(_21ebc00aa_Eval*,jule::Ptr<_21dd1cc42_FnIns>,jule::Ptr<_21c63dc90_FnCallExpr>);
inline void _21ebd5554_call_builtin_fn(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebd5994_check_fn_of_concurrent_call(_21ebc00aa_Eval*,jule::Ptr<_21dd1cc42_FnIns>&,_21c627dde_Token);
inline void _21ebd5ea0_process_exceptional_handler(_21ebc00aa_Eval*,jule::Ptr<_21dd1cc42_FnIns>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebd638a_call_fn(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ebd6742_eval_fn_call(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63dc90_FnCallExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebd6bc6_eval_enum_static(_21ebc00aa_Eval*,jule::Ptr<_21ddb6aee_Enum>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd715a_eval_struct_static(_21ebc00aa_Eval*,jule::Ptr<_21dd06742_StructIns>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd76bb_eval_trait_sub_ident(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,jule::Ptr<_21deee929_Trait>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd7d09_eval_struct_sub_ident(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,jule::Ptr<_21dd06742_StructIns>,jule::Ptr<_21c63d850_SubIdentExpr>,jule::Bool);
inline jule::Ptr<_21ebbd053_Data> _21ebd828d_eval_slice_sub_ident(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd8722_eval_array_sub_ident(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd8ba6_eval_map_sub_ident(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd913a_eval_str_sub_ident(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd94e2_eval_int_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd9899_eval_uint_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebd9c51_eval_i8_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebda108_eval_i16_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebda4b0_eval_i32_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebda867_eval_i64_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdac1e_eval_u8_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdb0c6_eval_u16_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdb47d_eval_u32_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdb835_eval_u64_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdbbdc_eval_f32_type_tatic(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdc094_eval_f64_type_static(_21ebc00aa_Eval*,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdc528_eval_prim_static(_21ebc00aa_Eval*,jule::Str,_21c627dde_Token);
inline jule::Ptr<_21ebbd053_Data> _21ebdc9ac_eval_type_static(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,jule::Ptr<_21c63d850_SubIdentExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebdce41_eval_obj_sub_ident(_21ebc00aa_Eval*,jule::Ptr<_21ebbd053_Data>,jule::Ptr<_21c63d850_SubIdentExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebdd2e8_eval_sub_ident(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63d850_SubIdentExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebdd6a0_eval_tuple(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c4d808a_TupleExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebddb34_eval_map(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21ec128b1_Map>,jule::Ptr<_21c63e400_BraceLit>);
inline jule::Ptr<_21ebbd053_Data> _21ebddedb_eval_brace_lit(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63e400_BraceLit>);
inline jule::Ptr<_21ebbd053_Data> _21ebde393_eval_anon_fn(_21ebc00aa_Eval*,jule::Ptr<_21c641633_FnDecl>);
inline jule::Ptr<_21ebbd053_Data> _21ebde74a_eval_binop(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c63da70_BinopExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebdeb02_eval_ternary(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c640203_TernaryExpr>);
inline jule::Ptr<_21ebbd053_Data> _21ebdeea9_eval_expr_kind(jule::Ptr<_21ebc00aa_Eval>,jule::Any);
inline jule::Ptr<_21ebbd053_Data> _21ebe0361_eval(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c4d7b4a_Expr>);
inline jule::Ptr<_21ebbd053_Data> _21ebe0718_eval_expr(jule::Ptr<_21ebc00aa_Eval>,jule::Ptr<_21c4d7b4a_Expr>);
struct _21ebc00aa_Eval {
	jule::Ptr<_21eb5443a_Sema> _field_s = jule::Ptr<_21eb5443a_Sema>();
	jule::Trait<_21ec23a48_Lookup> _field_lookup = jule::Trait<_21ec23a48_Lookup>();
	jule::Ptr<_21ec06223_TypeKind> _field_prefix = jule::Ptr<_21ec06223_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_21eb75615_Var> _field_owner = jule::Ptr<_21eb75615_Var>();
	jule::Ptr<_21dd05be7_FieldIns> _field_field = jule::Ptr<_21dd05be7_FieldIns>();
	jule::Bool _field_arg = jule::Bool();


	_21ebc00aa_Eval(jule::Ptr<_21eb5443a_Sema> __param_s, jule::Trait<_21ec23a48_Lookup> __param_lookup, jule::Ptr<_21ec06223_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_21eb75615_Var> __param_owner, jule::Ptr<_21dd05be7_FieldIns> __param_field, jule::Bool __param_arg): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner), _field_field(__param_field), _field_arg(__param_arg) {}

	

	_21ebc00aa_Eval(void) = default;

	inline bool operator==(_21ebc00aa_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_21ebc00aa_Eval _other) { return !this->operator==(_other); }


};
inline _21ebe0c68_UnaryEval static__21ebe1285_new(jule::Ptr<_21ebc00aa_Eval>);
inline void _21ebe14c7_minus(_21ebe0c68_UnaryEval*);
inline void _21ebe1719_plus(_21ebe0c68_UnaryEval*);
inline void _21ebe195b_caret(_21ebe0c68_UnaryEval*);
inline void _21ebe1b9d_excl(_21ebe0c68_UnaryEval*);
inline void _21ebe1de0_star(_21ebe0c68_UnaryEval*);
inline void _21ebe6e8e_amper(_21ebe0c68_UnaryEval*);
inline void _21ebe71d1_type_decl(_21ebe0c68_UnaryEval*);
inline void _21ebe7423_eval_data(_21ebe0c68_UnaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebe7797_eval(_21ebe0c68_UnaryEval*,jule::Ptr<_21c4d8d6b_UnaryExpr>);
struct _21ebe0c68_UnaryEval {
	jule::Ptr<_21ebc00aa_Eval> _field_e = jule::Ptr<_21ebc00aa_Eval>();
	jule::Ptr<_21ebbd053_Data> _field_d = jule::Ptr<_21ebbd053_Data>();
	jule::Ptr<_21c4d8d6b_UnaryExpr> _field_u = jule::Ptr<_21c4d8d6b_UnaryExpr>();


	_21ebe0c68_UnaryEval(jule::Ptr<_21ebc00aa_Eval> __param_e, jule::Ptr<_21ebbd053_Data> __param_d, jule::Ptr<_21c4d8d6b_UnaryExpr> __param_u): _field_e(__param_e), _field_d(__param_d), _field_u(__param_u) {}

	

	_21ebe0c68_UnaryEval(void) = default;

	inline bool operator==(_21ebe0c68_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_21ebe0c68_UnaryEval _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec06641_to_str(_21ec06223_TypeKind*);
inline jule::Bool _21ec069e8_equals(jule::Ptr<_21ec06223_TypeKind>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Bool _21ec07004_cpp_linked(_21ec06223_TypeKind*);
inline jule::Bool _21ec072ce_is_nil(_21ec06223_TypeKind*);
inline jule::Bool _21ec075a9_void(_21ec06223_TypeKind*);
inline jule::Bool _21ec07884_mutable(_21ec06223_TypeKind*);
inline jule::Bool _21ec07b5e_nil_compatible(_21ec06223_TypeKind*);
inline jule::Bool _21ec07e39_performs_rc(_21ec06223_TypeKind*);
inline jule::Bool _21ec08214_supports_cloning(_21ec06223_TypeKind*);
inline jule::Bool _21ec084de_variadicable(_21ec06223_TypeKind*);
inline jule::Ptr<_21ec0b58b_Prim> _21ec087b9_prim(_21ec06223_TypeKind*);
inline jule::Ptr<_21ec103e7_Sptr> _21ec08a94_sptr(_21ec06223_TypeKind*);
inline jule::Ptr<_21ec14275_Ptr> _21ec08d6e_ptr(_21ec06223_TypeKind*);
inline jule::Ptr<_21ddb6aee_Enum> _21ec09149_enm(_21ec06223_TypeKind*);
inline jule::Ptr<_21ec13692_Arr> _21ec09424_arr(_21ec06223_TypeKind*);
inline jule::Ptr<_21ec10eca_Slc> _21ec096ee_slc(_21ec06223_TypeKind*);
inline jule::Ptr<_21dd1cc42_FnIns> _21ec099c9_fnc(_21ec06223_TypeKind*);
inline jule::Ptr<_21dd06742_StructIns> _21ec09ca4_strct(_21ec06223_TypeKind*);
inline jule::Ptr<_21deee929_Trait> _21ec0a07e_trt(_21ec06223_TypeKind*);
inline jule::Ptr<_21ec128b1_Map> _21ec0a359_map(_21ec06223_TypeKind*);
inline jule::Ptr<_21ec11b46_Tuple> _21ec0a634_tup(_21ec06223_TypeKind*);
struct _21ec06223_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_21ec05bd4_Kind> _field_kind = jule::Trait<_21ec05bd4_Kind>();


	_21ec06223_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_21ec05bd4_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {}

	

	_21ec06223_TypeKind(void) = default;

	inline bool operator==(_21ec06223_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21ec06223_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _21ec0aee7_checked(_21ec0aa85_TypeSymbol*);
inline void _21ec0b239_remove_kind(_21ec0aa85_TypeSymbol*);
struct _21ec0aa85_TypeSymbol {
	jule::Ptr<_21c5d253b_TypeDecl> _field_decl = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();


	_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl> __param_decl, jule::Ptr<_21ec06223_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_21ec0aa85_TypeSymbol(void) = default;

	inline bool operator==(_21ec0aa85_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21ec0aa85_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec0b965_to_str(_21ec0b58b_Prim*);
inline jule::Bool _21ec0bd1c_equals(jule::Ptr<_21ec0b58b_Prim>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Bool _21ec0c2e5_is_i8(_21ec0b58b_Prim*);
inline jule::Bool _21ec0c5c0_is_i16(_21ec0b58b_Prim*);
inline jule::Bool _21ec0c89a_is_i32(_21ec0b58b_Prim*);
inline jule::Bool _21ec0cb75_is_i64(_21ec0b58b_Prim*);
inline jule::Bool _21ec0ce50_is_u8(_21ec0b58b_Prim*);
inline jule::Bool _21ec0d22a_is_u16(_21ec0b58b_Prim*);
inline jule::Bool _21ec0d505_is_u32(_21ec0b58b_Prim*);
inline jule::Bool _21ec0d7d0_is_u64(_21ec0b58b_Prim*);
inline jule::Bool _21ec0daaa_is_f32(_21ec0b58b_Prim*);
inline jule::Bool _21ec0dd85_is_f64(_21ec0b58b_Prim*);
inline jule::Bool _21ec0e160_is_int(_21ec0b58b_Prim*);
inline jule::Bool _21ec0e43a_is_uint(_21ec0b58b_Prim*);
inline jule::Bool _21ec0e715_is_uintptr(_21ec0b58b_Prim*);
inline jule::Bool _21ec0e9e0_is_bool(_21ec0b58b_Prim*);
inline jule::Bool _21ec0ecba_is_str(_21ec0b58b_Prim*);
inline jule::Bool _21ec10095_is_any(_21ec0b58b_Prim*);
struct _21ec0b58b_Prim {
	jule::Str _field_kind = jule::Str();


	_21ec0b58b_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_21ec0b58b_Prim(void) = default;

	inline bool operator==(_21ec0b58b_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21ec0b58b_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec107c1_to_str(_21ec103e7_Sptr*);
inline jule::Bool _21ec10b78_equals(jule::Ptr<_21ec103e7_Sptr>,jule::Ptr<_21ec06223_TypeKind>);
struct _21ec103e7_Sptr {
	jule::Ptr<_21ec06223_TypeKind> _field_elem = jule::Ptr<_21ec06223_TypeKind>();


	_21ec103e7_Sptr(jule::Ptr<_21ec06223_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_21ec103e7_Sptr(void) = default;

	inline bool operator==(_21ec103e7_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_21ec103e7_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec1143c_to_str(_21ec10eca_Slc*);
inline jule::Bool _21ec117e4_equals(jule::Ptr<_21ec10eca_Slc>,jule::Ptr<_21ec06223_TypeKind>);
struct _21ec10eca_Slc {
	jule::Ptr<_21ec06223_TypeKind> _field_elem = jule::Ptr<_21ec06223_TypeKind>();


	_21ec10eca_Slc(jule::Ptr<_21ec06223_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_21ec10eca_Slc(void) = default;

	inline bool operator==(_21ec10eca_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_21ec10eca_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec120a8_to_str(_21ec11b46_Tuple*);
inline jule::Bool _21ec12460_equals(jule::Ptr<_21ec11b46_Tuple>,jule::Ptr<_21ec06223_TypeKind>);
struct _21ec11b46_Tuple {
	jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _field_types = jule::Slice<jule::Ptr<_21ec06223_TypeKind>>();


	_21ec11b46_Tuple(jule::Slice<jule::Ptr<_21ec06223_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_21ec11b46_Tuple(void) = default;

	inline bool operator==(_21ec11b46_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_21ec11b46_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec12c8a_to_str(_21ec128b1_Map*);
inline jule::Bool _21ec13142_equals(jule::Ptr<_21ec128b1_Map>,jule::Ptr<_21ec06223_TypeKind>);
struct _21ec128b1_Map {
	jule::Ptr<_21ec06223_TypeKind> _field_key = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21ec06223_TypeKind> _field_val = jule::Ptr<_21ec06223_TypeKind>();


	_21ec128b1_Map(jule::Ptr<_21ec06223_TypeKind> __param_key, jule::Ptr<_21ec06223_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_21ec128b1_Map(void) = default;

	inline bool operator==(_21ec128b1_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_21ec128b1_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec13a6b_to_str(_21ec13692_Arr*);
inline jule::Bool _21ec13e23_equals(jule::Ptr<_21ec13692_Arr>,jule::Ptr<_21ec06223_TypeKind>);
struct _21ec13692_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_21ec06223_TypeKind> _field_elem = jule::Ptr<_21ec06223_TypeKind>();


	_21ec13692_Arr(jule::Bool __param_auto, jule::I64 __param_n, jule::Ptr<_21ec06223_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_21ec13692_Arr(void) = default;

	inline bool operator==(_21ec13692_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_21ec13692_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _21ec1464e_to_str(_21ec14275_Ptr*);
inline jule::Bool _21ec14a06_equals(jule::Ptr<_21ec14275_Ptr>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Bool _21ec14dbe_is_unsafe(_21ec14275_Ptr*);
struct _21ec14275_Ptr {
	jule::Ptr<_21ec06223_TypeKind> _field_elem = jule::Ptr<_21ec06223_TypeKind>();


	_21ec14275_Ptr(jule::Ptr<_21ec06223_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_21ec14275_Ptr(void) = default;

	inline bool operator==(_21ec14275_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_21ec14275_Ptr _other) { return !this->operator==(_other); }


};
struct _21ec16ed1_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_21ec16ed1_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_21ec16ed1_Referencer(void) = default;

	inline bool operator==(_21ec16ed1_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_21ec16ed1_Referencer _other) { return !this->operator==(_other); }


};
struct _21c483200_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);


	_21c483200_CompileInfo(jule::Bool __param_prod, jule::Bool __param_test, jule::Str __param_compiler, jule::Str __param_cpp_std): _field_prod(__param_prod), _field_test(__param_test), _field_compiler(__param_compiler), _field_cpp_std(__param_cpp_std) {}

	

	_21c483200_CompileInfo(void) = default;

	inline bool operator==(_21c483200_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_21c483200_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _21c48b26e_push_err(_21c4878b9_DirectiveEval*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<_21c627dde_Token>> _21c48c506_split_operans(_21c4878b9_DirectiveEval*,jule::Str,jule::Slice<_21c627dde_Token>&);
inline jule::Bool _21c49374e_eval_directive_ident(_21c4878b9_DirectiveEval*,jule::Str);
inline jule::Bool _21c488612_eval_directive_part(_21c4878b9_DirectiveEval*,jule::Slice<_21c627dde_Token>);
inline jule::Bool _21c496d3a_eval(_21c4878b9_DirectiveEval*);
struct _21c4878b9_DirectiveEval {
	jule::Slice<_21c348b32_Log> _field_logs = jule::Slice<_21c348b32_Log>();
	jule::Ptr<_21c525490_Directive> _field_d = jule::Ptr<_21c525490_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_21c4878b9_DirectiveEval(jule::Slice<_21c348b32_Log> __param_logs, jule::Ptr<_21c525490_Directive> __param_d, jule::Slice<jule::Str> __param_vars): _field_logs(__param_logs), _field_d(__param_d), _field_vars(__param_vars) {}

	

	_21c4878b9_DirectiveEval(void) = default;

	inline bool operator==(_21c4878b9_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_21c4878b9_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21cc7b410_JuleImporter> static__21cbeeaae_new(_21c483200_CompileInfo);
inline jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> _21cc76284_all_packages(_21cc7b410_JuleImporter*);
inline void _21cc77e67_set_mod_path(_21cc7b410_JuleImporter*,jule::Str);
inline jule::Str _21cc79a90_get_mod_path(_21cc7b410_JuleImporter*);
inline jule::Str _21ccae0ad_mod_by_id(_21cc7b410_JuleImporter*,jule::I64);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ccb2567_get_import(_21cc7b410_JuleImporter*,jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>,jule::Slice<_21c348b32_Log>> _21ccb7ea7_import_package(_21cc7b410_JuleImporter*,jule::Str,jule::Bool);
inline void _21cceb419_imported(_21cc7b410_JuleImporter*,jule::Ptr<_21eb49c8d_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_21c348b32_Log>> _21cd52e32_is_pass_build_directives(_21cc7b410_JuleImporter*,jule::Ptr<_21c4cc2b0_Ast>&);
struct _21cc7b410_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_21cc7b410_JuleImporter(jule::Slice<jule::Str> __param_mods, jule::Str __param_mod, jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> __param_pkgs, jule::Slice<jule::Str> __param_vars): _field_mods(__param_mods), _field_mod(__param_mod), _field_pkgs(__param_pkgs), _field_vars(__param_vars) {}

	

	_21cc7b410_JuleImporter(void) = default;

	inline bool operator==(_21cc7b410_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_21cc7b410_JuleImporter _other) { return !this->operator==(_other); }


};
struct _21cd1eccd_OrderedDefines {
	jule::Slice<jule::Ptr<_21dd03266_Struct>> _field_structs = jule::Slice<jule::Ptr<_21dd03266_Struct>>();


	_21cd1eccd_OrderedDefines(jule::Slice<jule::Ptr<_21dd03266_Struct>> __param_structs): _field_structs(__param_structs) {}

	

	_21cd1eccd_OrderedDefines(void) = default;

	inline bool operator==(_21cd1eccd_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_21cd1eccd_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool static__21cd9764c_is_common_ordered_0(jule::Slice<jule::Ptr<_21dd03266_Struct>>&,jule::Ptr<_21dd03266_Struct>);
inline void static__21cd9beae_order_common_0(jule::Slice<jule::Ptr<_21dd03266_Struct>>&);
inline void static__21cde539d_order_structures(jule::Slice<jule::Ptr<_21dd03266_Struct>>&);
struct _21cd6bee5_DefineOrderer {
	

	_21cd6bee5_DefineOrderer(void) = default;

	inline bool operator==(_21cd6bee5_DefineOrderer _other) { return true; }

	inline bool operator!=(_21cd6bee5_DefineOrderer _other) { return !this->operator==(_other); }


};
inline void _21d3427ea_optimize_child(jule::Ptr<_21cd7c19d_ScopeDeadCode>,jule::Ptr<_21eb1472a_Scope>&);
inline void _21d0b99a1_eliminate_followed(_21cd7c19d_ScopeDeadCode*);
inline void _21d0eac24_optimize_stmt(jule::Ptr<_21cd7c19d_ScopeDeadCode>,jule::Any);
inline void _21d109d98_optimize_stmts(jule::Ptr<_21cd7c19d_ScopeDeadCode>);
struct _21cd7c19d_ScopeDeadCode {
	jule::Ptr<_21cd7c19d_ScopeDeadCode> _field_parent = jule::Ptr<_21cd7c19d_ScopeDeadCode>();
	jule::Ptr<_21eb1472a_Scope> _field_s = jule::Ptr<_21eb1472a_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();


	_21cd7c19d_ScopeDeadCode(jule::Ptr<_21cd7c19d_ScopeDeadCode> __param_parent, jule::Ptr<_21eb1472a_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::I64 __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {}

	

	_21cd7c19d_ScopeDeadCode(void) = default;

	inline bool operator==(_21cd7c19d_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_21cd7c19d_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline void static__21c3c6693_reset(void);
inline void static__21d12a6b0_print(jule::Str,jule::Str);
struct _21d0a7d8a_AnsiEscape {
	

	_21d0a7d8a_AnsiEscape(void) = default;

	inline bool operator==(_21d0a7d8a_AnsiEscape _other) { return true; }

	inline bool operator!=(_21d0a7d8a_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__21d155c7e_log_flat(_21c348b32_Log&);
inline void static__21d156d3a_log_error(_21c348b32_Log&);
inline void static__21d15b7bd_log(_21c348b32_Log&);
inline void static__21d15eb78_print_logs(jule::Slice<_21c348b32_Log>&);
struct _21d159c61_Logger {
	

	_21d159c61_Logger(void) = default;

	inline bool operator==(_21d159c61_Logger _other) { return true; }

	inline bool operator!=(_21d159c61_Logger _other) { return !this->operator==(_other); }


};
struct _2202406c4_UnsafeBinopExprModel {
	jule::Ptr<_21dd08de8_BinopExprModel> _field_node = jule::Ptr<_21dd08de8_BinopExprModel>();


	_2202406c4_UnsafeBinopExprModel(jule::Ptr<_21dd08de8_BinopExprModel> __param_node): _field_node(__param_node) {}

	

	_2202406c4_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_2202406c4_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_2202406c4_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _2202408e4_UnsafeIndexingExprModel {
	jule::Ptr<_21dd0bbdc_IndexingExprModel> _field_node = jule::Ptr<_21dd0bbdc_IndexingExprModel>();


	_2202408e4_UnsafeIndexingExprModel(jule::Ptr<_21dd0bbdc_IndexingExprModel> __param_node): _field_node(__param_node) {}

	

	_2202408e4_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_2202408e4_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_2202408e4_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _220240c57_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_21dd0b68c_SliceExprModel> _field_elems = jule::Ptr<_21dd0b68c_SliceExprModel>();


	_220240c57_PushToSliceExprModel(jule::Any __param_dest, jule::Ptr<_21dd0b68c_SliceExprModel> __param_elems): _field_dest(__param_dest), _field_elems(__param_elems) {}

	

	_220240c57_PushToSliceExprModel(void) = default;

	inline bool operator==(_220240c57_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_220240c57_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _2202417c4_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();


	_2202417c4_StrInsertBeginExprModel(jule::Any __param_dest, jule::Any __param_expr): _field_dest(__param_dest), _field_expr(__param_expr) {}

	

	_2202417c4_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_2202417c4_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_2202417c4_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220242d25_ScopeOptimizer> static__220243342_new(jule::Ptr<_21eb1472a_Scope>);
inline void _220243661_set_current_stmt(_220242d25_ScopeOptimizer*,jule::Any);
inline void _220243980_optimize_data(_220242d25_ScopeOptimizer*,jule::Ptr<_21ebbd053_Data>);
inline void _220243c9e_optimize_var(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb75615_Var>);
inline void _2202440bd_optimize_conditional(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2c4ac_Conditional>);
inline void _2202443dc_optimize_match(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2dd2c_Match>);
inline void _22024470b_optimize_range_iter(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2cb1c_RangeIter>);
inline void _220244a2a_optimize_while_iter(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2c8ec_WhileIter>);
inline jule::Bool _220244dd2_substr(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2d8dc_Assign>);
inline jule::Bool _220245289_str_insert(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2d8dc_Assign>);
inline jule::Bool _220245641_str_assign(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2d8dc_Assign>);
inline void _220245960_optimize_assign(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2d8dc_Assign>);
inline void _220245c7e_optimize_multi_assign(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2db0c_MultiAssign>);
inline void _22024609d_optimize_ret(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb2e6bd_RetSt>);
inline void _2202463bc_optimize_stmt(_220242d25_ScopeOptimizer*,jule::Any);
inline void _2202466db_optimize_child(_220242d25_ScopeOptimizer*,jule::Ptr<_21eb1472a_Scope>);
inline void _22024692d_optimize(_220242d25_ScopeOptimizer*);
struct _220242d25_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();


	_220242d25_ScopeOptimizer(jule::I64 __param_i, jule::Ptr<_21eb1472a_Scope> __param_scope): _field_i(__param_i), _field_scope(__param_scope) {}

	

	_220242d25_ScopeOptimizer(void) = default;

	inline bool operator==(_220242d25_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_220242d25_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__220249975_optimize(jule::Any&);
inline jule::Bool _220249d2c_str_cond(_220249403_ExprOptimizer*,jule::Ptr<_21dd08de8_BinopExprModel>);
inline void _22024a14b_binary(_220249403_ExprOptimizer*,jule::Ptr<_21dd08de8_BinopExprModel>);
inline void _22024a46a_unary(_220249403_ExprOptimizer*,jule::Ptr<_21dd09349_UnaryExprModel>);
inline void _22024a789_structure_lit(_220249403_ExprOptimizer*,jule::Ptr<_21dd09c40_StructLitExprModel>);
inline void _22024aaa8_alloc_structure(_220249403_ExprOptimizer*,jule::Ptr<_21dd0a12a_AllocStructLitExprModel>);
inline void _22024adc7_casting(_220249403_ExprOptimizer*,jule::Ptr<_21dd0a757_CastingExprModel>);
inline void _22024b1e6_args(_220249403_ExprOptimizer*,jule::Slice<jule::Any>);
inline void _22024b515_scope(_220249403_ExprOptimizer*,jule::Ptr<_21eb1472a_Scope>&);
inline void _22024b834_func_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd0b23b_FnCallExprModel>);
inline void _22024bb53_slice(_220249403_ExprOptimizer*,jule::Ptr<_21dd0b68c_SliceExprModel>);
inline void _22024be72_array(_220249403_ExprOptimizer*,jule::Ptr<_21dd0ec89_ArrayExprModel>);
inline void _22024c291_indexing(_220249403_ExprOptimizer*,jule::Ptr<_21dd0bbdc_IndexingExprModel>);
inline void _22024c5b0_anon_func(_220249403_ExprOptimizer*,jule::Ptr<_21dd0c13d_AnonFnExprModel>);
inline void _22024c8ce_map(_220249403_ExprOptimizer*,jule::Ptr<_21dd0cade_MapExprModel>);
inline void _22024cbed_slicing(_220249403_ExprOptimizer*,jule::Ptr<_21dd0d23d_SlicingExprModel>);
inline void _22024d01c_trait_sub(_220249403_ExprOptimizer*,jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>);
inline void _22024d33b_structure_sub(_220249403_ExprOptimizer*,jule::Ptr<_21dd0e294_StructSubIdentExprModel>);
inline void _22024d65a_common_sub(_220249403_ExprOptimizer*,jule::Ptr<_21dd107c3_CommonSubIdentExprModel>);
inline void _22024d979_tuple(_220249403_ExprOptimizer*,jule::Ptr<_21dd10b03_TupleExprModel>);
inline void _22024dc98_new_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd11e34_BuiltinNewCallExprModel>);
inline void _22024e0b7_out_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>);
inline void _22024e3d6_outln_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>);
inline void _22024e705_panic_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>);
inline void _22024ea24_assert_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel>);
inline void _22024ed43_error_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>);
inline void _220250162_make_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd13078_BuiltinMakeCallExprModel>);
inline void _220250481_append_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>);
inline void _2202507a0_clone_call(_220249403_ExprOptimizer*,jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel>);
inline void _220250abe_sizeof(_220249403_ExprOptimizer*,jule::Ptr<_21dd13d37_SizeofExprModel>);
inline void _220250ddd_alignof(_220249403_ExprOptimizer*,jule::Ptr<_21dd144db_AlignofExprModel>);
inline void _22025120c_integrated_to_str(_220249403_ExprOptimizer*,jule::Ptr<_21dd14b18_IntegratedToStrExprModel>);
inline void _22025152b_ternary(_220249403_ExprOptimizer*,jule::Ptr<_21dd15146_TernaryExprModel>);
inline void _22025176d_do(_220249403_ExprOptimizer*);
struct _220249403_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();


	_220249403_ExprOptimizer(jule::Ptr<jule::Any> __param_model): _field_model(__param_model) {}

	

	_220249403_ExprOptimizer(void) = default;

	inline bool operator==(_220249403_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_220249403_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220252b04_Optimizer> static__220252ebc_new(jule::Ptr<_21ccec4b4_IR>&);
inline void _2202532db_optimize_global(_220252b04_Optimizer*,jule::Ptr<_21eb75615_Var>&);
inline void _22025360a_optimize_function(_220252b04_Optimizer*,jule::Ptr<_21dd19249_Fn>&);
inline void _220253929_optimize_struct(_220252b04_Optimizer*,jule::Ptr<_21dd03266_Struct>&);
inline void _220253c48_optimize_globals(_220252b04_Optimizer*,jule::Ptr<_21eb4d269_Package>&);
inline void _220254067_optimize_functions(_220252b04_Optimizer*,jule::Ptr<_21eb4d269_Package>&);
inline void _220254386_optimize_structs(_220252b04_Optimizer*,jule::Ptr<_21eb4d269_Package>&);
inline void _2202546a5_optimize_package(_220252b04_Optimizer*,jule::Ptr<_21eb4d269_Package>&);
inline void _2202548e7_optimize(_220252b04_Optimizer*);
struct _220252b04_Optimizer {
	jule::Ptr<_21ccec4b4_IR> _field_ir = jule::Ptr<_21ccec4b4_IR>();


	_220252b04_Optimizer(jule::Ptr<_21ccec4b4_IR> __param_ir): _field_ir(__param_ir) {}

	

	_220252b04_Optimizer(void) = default;

	inline bool operator==(_220252b04_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_220252b04_Optimizer _other) { return !this->operator==(_other); }


};
inline jule::U64 _220dc63c0_unix(_220dc5e6e_AbsTime*);
struct _220dc5e6e_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();


	_220dc5e6e_AbsTime(jule::U64 __param_day, jule::U64 __param_week_day, jule::U64 __param_year_day, jule::U64 __param_month, jule::U64 __param_year, jule::U64 __param_second, jule::U64 __param_minute, jule::U64 __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_220dc5e6e_AbsTime(void) = default;

	inline bool operator==(_220dc5e6e_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_220dc5e6e_AbsTime _other) { return !this->operator==(_other); }


};
inline _220dc6722_Time static__220dc6b2e_unix(jule::U64);
inline _220dc6722_Time static__220dc6d60_now(void);
inline jule::U64 _220dc7327_unix(_220dc6722_Time*);
inline jule::U64 _220dc7602_day(_220dc6722_Time*);
inline jule::U64 _220dc78cc_month(_220dc6722_Time*);
inline jule::U64 _220dc7ba7_year(_220dc6722_Time*);
inline jule::U64 _220dc7e82_second(_220dc6722_Time*);
inline jule::U64 _220dc825c_minute(_220dc6722_Time*);
inline jule::U64 _220dc8537_hour(_220dc6722_Time*);
inline _220dc5e6e_AbsTime _220dc8812_abs(_220dc6722_Time*);
struct _220dc6722_Time {
	jule::U64 _field_sec = jule::U64();


	_220dc6722_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_220dc6722_Time(void) = default;

	inline bool operator==(_220dc6722_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_220dc6722_Time _other) { return !this->operator==(_other); }


};
inline jule::I64 static__220dc9109_nanoseconds(jule::I64);
inline jule::I64 static__220dc9417_microseconds(jule::I64);
inline jule::I64 static__220dc9725_milliseconds(jule::I64);
inline jule::I64 static__220dc9a33_seconds(jule::I64);
inline jule::I64 static__220dc9d41_minutes(jule::I64);
inline jule::I64 static__220dca14e_hours(jule::I64);
struct _220dc8b64_Duration {
	

	_220dc8b64_Duration(void) = default;

	inline bool operator==(_220dc8b64_Duration _other) { return true; }

	inline bool operator!=(_220dc8b64_Duration _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2200e5326_TestCoder> static__220143c59_new(jule::Ptr<_220d8cc38_ObjectCoder>&);
inline jule::Ptr<_21eb49c8d_ImportInfo> _220143dbe_find_testing_package(_2200e5326_TestCoder*);
inline void _2201441aa_append_test(_2200e5326_TestCoder*,jule::Str&,jule::Ptr<_21dd1cc42_FnIns>);
inline void _220144496_append_package_tests(_2200e5326_TestCoder*,jule::Str&,jule::Ptr<_21eb4d269_Package>&);
inline jule::Bool _220144683_ready_testing_package(_2200e5326_TestCoder*);
inline jule::Str _2201448b4_call_tm_reset(_2200e5326_TestCoder*);
inline jule::Str _220144b5b_call_tm_failed(_2200e5326_TestCoder*);
inline jule::Str _220144e36_call_tm_skipped(_2200e5326_TestCoder*);
inline void _220145255_serialize(_2200e5326_TestCoder*,jule::Str&);
struct _2200e5326_TestCoder {
	jule::Ptr<_21dd06742_StructIns> _field_t = jule::Ptr<_21dd06742_StructIns>();
	jule::Ptr<_21dd19249_Fn> _field_tm_reset = jule::Ptr<_21dd19249_Fn>();
	jule::Ptr<_21dd19249_Fn> _field_tm_failed = jule::Ptr<_21dd19249_Fn>();
	jule::Ptr<_21dd19249_Fn> _field_tm_skipped = jule::Ptr<_21dd19249_Fn>();
	jule::Ptr<_220d8cc38_ObjectCoder> _field_oc = jule::Ptr<_220d8cc38_ObjectCoder>();


	_2200e5326_TestCoder(jule::Ptr<_21dd06742_StructIns> __param_t, jule::Ptr<_21dd19249_Fn> __param_tm_reset, jule::Ptr<_21dd19249_Fn> __param_tm_failed, jule::Ptr<_21dd19249_Fn> __param_tm_skipped, jule::Ptr<_220d8cc38_ObjectCoder> __param_oc): _field_t(__param_t), _field_tm_reset(__param_tm_reset), _field_tm_failed(__param_tm_failed), _field_tm_skipped(__param_tm_skipped), _field_oc(__param_oc) {}

	

	_2200e5326_TestCoder(void) = default;

	inline bool operator==(_2200e5326_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_2200e5326_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220151b8a_ScopeCoder> static__220198176_new(jule::Ptr<_220d8cc38_ObjectCoder>&);
inline jule::Str _220148b2c_range_index_iter(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2cb1c_RangeIter>&);
inline jule::Str _2201a76c4_range_hashmap_iter(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2cb1c_RangeIter>&);
inline jule::Str _22014a9db_if_case(_220151b8a_ScopeCoder*,jule::Ptr<_235bb50ab_If>);
inline jule::Str _22014d23b_conditional(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2c4ac_Conditional>);
inline jule::Str _22019c60e_inf_iter(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2c6cc_InfIter>);
inline jule::Str _2201a1723_while_iter(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2c8ec_WhileIter>);
inline jule::Str _2201a3b32_range_iter(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2cb1c_RangeIter>);
inline jule::Str _2201b78b0_cont(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2cd3c_ContSt>);
inline jule::Str _2201c7eb9_label(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2d27c_Label>);
inline jule::Str _2201cd5da_goto_st(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2d49c_GotoSt>);
inline jule::Str _2201d45ad_postfix(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2d6bc_Postfix>);
inline jule::Str _220233024_assign(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2d8dc_Assign>);
inline jule::Str _220236478_multi_assign(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2db0c_MultiAssign>);
inline jule::Str _2201aadae_match_expr(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2dd2c_Match>&);
inline jule::Str _2201cad35_case(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2dd2c_Match>,jule::Ptr<_21eb2e27d_Case>);
inline jule::Str _2201eeb17_match_st(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2dd2c_Match>);
inline jule::Str _220153c03_fall_st(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2e49d_FallSt>);
inline jule::Str _2201745a3_break_st(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2d05c_BreakSt>);
inline jule::Str _220177d8c_ret_with_vars(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2e6bd_RetSt>);
inline jule::Str _22018b400_ret_tuple(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2e6bd_RetSt>);
inline jule::Str _22018c0b0_ret_with_exprs(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2e6bd_RetSt>);
inline jule::Str _2201c92c8_ret_st(_220151b8a_ScopeCoder*,jule::Ptr<_21eb2e6bd_RetSt>);
inline jule::Str _2201ca021_ret_with_defaults(_220151b8a_ScopeCoder*,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Str _2201d14ab_var(_220151b8a_ScopeCoder*,jule::Ptr<_21eb75615_Var>);
inline jule::Str _2201dd287_st(_220151b8a_ScopeCoder*,jule::Any);
inline jule::Str _2201e2c5e_scope(_220151b8a_ScopeCoder*,jule::Ptr<_21eb1472a_Scope>);
inline jule::Str _2201e3b2d_func_scope(_220151b8a_ScopeCoder*,jule::Ptr<_21dd1cc42_FnIns>);
struct _220151b8a_ScopeCoder {
	jule::Ptr<_220d8cc38_ObjectCoder> _field_oc = jule::Ptr<_220d8cc38_ObjectCoder>();


	_220151b8a_ScopeCoder(jule::Ptr<_220d8cc38_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_220151b8a_ScopeCoder(void) = default;

	inline bool operator==(_220151b8a_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_220151b8a_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2201e99be_ExprCoder> static__22014a18e_new(jule::Ptr<_220d8cc38_ObjectCoder>&);
inline jule::Str _2201ea77d_string(_2201e99be_ExprCoder*,jule::Ptr<_21ea9d450_Const>&);
inline jule::Str _2201eb53c_boolean(_2201e99be_ExprCoder*,jule::Ptr<_21ea9d450_Const>&);
inline jule::Str _220200871_nil_lit(_2201e99be_ExprCoder*);
inline jule::Str _220201586_ftoa_special_cases(_2201e99be_ExprCoder*,jule::F64&);
inline jule::Str _22020329c_float32(_2201e99be_ExprCoder*,jule::Ptr<_21ea9d450_Const>&);
inline jule::Str _220237c93_float64(_2201e99be_ExprCoder*,jule::Ptr<_21ea9d450_Const>&);
inline jule::Str _220239668_constant(_2201e99be_ExprCoder*,jule::Ptr<_21ea9d450_Const>,jule::Bool);
inline jule::Str _2201a8021_div_by_zero_binary(_2201e99be_ExprCoder*,_21c627dde_Token&,jule::Ptr<_21dd08854_OperandExprModel>&,jule::Ptr<_21dd08854_OperandExprModel>&);
inline jule::Str _22022d22d_unsafe_binary(_2201e99be_ExprCoder*,jule::Ptr<_21dd08de8_BinopExprModel>);
inline jule::Str _220149941_binary(_2201e99be_ExprCoder*,jule::Ptr<_21dd08de8_BinopExprModel>);
inline jule::Str _22022ce0e_var(_2201e99be_ExprCoder*,jule::Ptr<_21eb75615_Var>);
inline jule::Str _22023b03d_structure(_2201e99be_ExprCoder*,jule::Ptr<_21dd03266_Struct>);
inline jule::Str _2201decd3_structure_ins(_2201e99be_ExprCoder*,jule::Ptr<_21dd06742_StructIns>);
inline jule::Str _2201dee48_unary(_2201e99be_ExprCoder*,jule::Ptr<_21dd09349_UnaryExprModel>);
inline jule::Str _220146a2b_cpp_structure_lit(_2201e99be_ExprCoder*,jule::Ptr<_21dd09c40_StructLitExprModel>);
inline jule::Str _220146b91_structure_lit(_2201e99be_ExprCoder*,jule::Ptr<_21dd09c40_StructLitExprModel>);
inline jule::Str _220197054_alloc_structure(_2201e99be_ExprCoder*,jule::Ptr<_21dd0a12a_AllocStructLitExprModel>);
inline jule::Str _2201971b9_casting(_2201e99be_ExprCoder*,jule::Ptr<_21dd0a757_CastingExprModel>);
inline jule::Str _220147e8e_args(_2201e99be_ExprCoder*,jule::Slice<jule::Any>);
inline jule::Str _220148104_model_for_call(_2201e99be_ExprCoder*,jule::Any);
inline void _2201a6b8a_push_call_inf(_2201e99be_ExprCoder*,jule::Str&,jule::Ptr<_21dd0b23b_FnCallExprModel>&);
inline jule::Str _2201a6dcc_pure_func_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd0b23b_FnCallExprModel>&);
inline jule::Str _2201a7284_func_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd0b23b_FnCallExprModel>);
inline jule::Str _220254b28_slice(_2201e99be_ExprCoder*,jule::Ptr<_21dd0b68c_SliceExprModel>);
inline jule::Str _220254ed0_indexing(_2201e99be_ExprCoder*,jule::Ptr<_21dd0bbdc_IndexingExprModel>);
inline jule::Str _220255387_unsafe_indexing(_2201e99be_ExprCoder*,jule::Ptr<_2202408e4_UnsafeIndexingExprModel>);
inline jule::Str _22025573e_anon_func(_2201e99be_ExprCoder*,jule::Ptr<_21dd0c13d_AnonFnExprModel>);
inline jule::Str _220255ae6_map(_2201e99be_ExprCoder*,jule::Ptr<_21dd0cade_MapExprModel>);
inline jule::Str _220255e9d_slicing(_2201e99be_ExprCoder*,jule::Ptr<_21dd0d23d_SlicingExprModel>);
inline jule::Str _220256355_trait_sub(_2201e99be_ExprCoder*,jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>);
inline jule::Str _22025670c_structure_sub(_2201e99be_ExprCoder*,jule::Ptr<_21dd0e294_StructSubIdentExprModel>);
inline jule::Str _220256ab4_common_ident(_2201e99be_ExprCoder*,jule::Ptr<_21dd100db_CommonIdentExprModel>);
inline jule::Str _220256e6b_common_sub(_2201e99be_ExprCoder*,jule::Ptr<_21dd107c3_CommonSubIdentExprModel>);
inline jule::Str _220257323_array(_2201e99be_ExprCoder*,jule::Ptr<_21dd0ec89_ArrayExprModel>);
inline jule::Str _2202576ca_func_ins_common(_2201e99be_ExprCoder*,jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Str _220257a82_func_ins(_2201e99be_ExprCoder*,jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Str _220257e39_tuple(_2201e99be_ExprCoder*,jule::Ptr<_21dd10b03_TupleExprModel>);
inline jule::Str _2202582e1_new_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd11e34_BuiltinNewCallExprModel>);
inline jule::Str _220258698_out_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>);
inline jule::Str _220258a50_outln_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>);
inline jule::Str _220258e07_panic_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>);
inline jule::Str _2202592ae_assert_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel>);
inline jule::Str _220259666_error_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>);
inline jule::Str _220259a1d_make_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd13078_BuiltinMakeCallExprModel>);
inline jule::Str _220259dc5_push_to_slice(_2201e99be_ExprCoder*,jule::Ptr<_220240c57_PushToSliceExprModel>);
inline jule::Str _22025a27c_append_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>);
inline jule::Str _22025a634_clone_call(_2201e99be_ExprCoder*,jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel>);
inline jule::Str _22025a9db_sizeof(_2201e99be_ExprCoder*,jule::Ptr<_21dd13d37_SizeofExprModel>);
inline jule::Str _22025ad93_alignof(_2201e99be_ExprCoder*,jule::Ptr<_21dd144db_AlignofExprModel>);
inline jule::Str _22025b24a_rune_lit(_2201e99be_ExprCoder*,jule::Ptr<_21dd147a5_RuneExprModel>);
inline jule::Str _22025b602_structure_static(_2201e99be_ExprCoder*,jule::Ptr<_21dd0e85a_StructStaticIdentExprModel>);
inline jule::Str _22025b9a9_integrated_to_str(_2201e99be_ExprCoder*,jule::Ptr<_21dd14b18_IntegratedToStrExprModel>);
inline jule::Str _22025bd61_ternary(_2201e99be_ExprCoder*,jule::Ptr<_21dd15146_TernaryExprModel>);
inline jule::Str _22025c218_backend_emit(_2201e99be_ExprCoder*,jule::Ptr<_21dd15597_BackendEmitExprModel>);
inline jule::Str _22025c5c0_free(_2201e99be_ExprCoder*,jule::Ptr<_21dd158e9_FreeExprModel>);
inline jule::Str _22025c977_mut_slicing(_2201e99be_ExprCoder*,jule::Ptr<_2202412da_MutSlicingExprModel>);
inline jule::Str _22025cd2e_str_insert_begin(_2201e99be_ExprCoder*,jule::Ptr<_2202417c4_StrInsertBeginExprModel>);
inline jule::Str _22025d1d6_model(_2201e99be_ExprCoder*,jule::Any);
inline jule::Str _22025d58d_expr(_2201e99be_ExprCoder*,jule::Any);
inline jule::Str _22025d945_val(_2201e99be_ExprCoder*,jule::Ptr<_21ebbe362_Value>);
inline jule::Str _22025dcec_init_expr(_2201e99be_ExprCoder*,jule::Ptr<_21ec06223_TypeKind>);
struct _2201e99be_ExprCoder {
	jule::Ptr<_220d8cc38_ObjectCoder> _field_oc = jule::Ptr<_220d8cc38_ObjectCoder>();


	_2201e99be_ExprCoder(jule::Ptr<_220d8cc38_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_2201e99be_ExprCoder(void) = default;

	inline bool operator==(_2201e99be_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_2201e99be_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__220261c34_clone_func_decl(jule::Ptr<_21dd03266_Struct>&);
inline jule::Str static__220262042_clone_func_def(jule::Ptr<_21dd03266_Struct>&);
struct _22026188d_DeriveCoder {
	

	_22026188d_DeriveCoder(void) = default;

	inline bool operator==(_22026188d_DeriveCoder _other) { return true; }

	inline bool operator!=(_22026188d_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__220263b59_to_ident(jule::Str);
inline jule::Str static__220263e67_addr(jule::U64);
inline jule::Str static__220264352_to_out(jule::Str,jule::U64);
inline jule::Str static__220264819_to_local(jule::I64,jule::I64,jule::Str);
inline jule::Str static__220264b27_func(jule::Ptr<_21dd19249_Fn>&);
inline jule::Str static__220264e35_func_ins(jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Str static__220265243_trait_decl(jule::Ptr<_21deee929_Trait>);
inline jule::Str static__220265551_param(jule::Ptr<_21dd17423_Param>&);
inline jule::Str static__22026585e_structure(jule::Ptr<_21dd03266_Struct>&);
inline jule::Str static__220265b6c_structure_ins(jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str static__220265e7a_field(jule::Ptr<_21dc10607_Field>&);
inline jule::Str static__220266288_var(jule::Ptr<_21eb75615_Var>);
inline jule::Str static__220266596_iter_begin(jule::U64);
inline jule::Str static__2202668a4_iter_end(jule::U64);
inline jule::Str static__220266bb2_iter_next(jule::U64);
inline jule::Str static__220266ec0_label(jule::Str);
inline jule::Str static__2202672cd_match_end(jule::U64);
inline jule::Str static__2202675db_case_begin(jule::U64);
struct _22026374c_IdentCoder {
	

	_22026374c_IdentCoder(void) = default;

	inline bool operator==(_22026374c_IdentCoder _other) { return true; }

	inline bool operator!=(_22026374c_IdentCoder _other) { return !this->operator==(_other); }


};
struct _220da8b44_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();


	_220da8b44_SerializationInfo(jule::Str __param_compiler, jule::Str __param_compiler_command): _field_compiler(__param_compiler), _field_compiler_command(__param_compiler_command) {}

	

	_220da8b44_SerializationInfo(void) = default;

	inline bool operator==(_220da8b44_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_220da8b44_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _220d89141_TraitHash {
	jule::Ptr<_21deee929_Trait> _field_t = jule::Ptr<_21deee929_Trait>();
	jule::Ptr<_21dd06742_StructIns> _field_s = jule::Ptr<_21dd06742_StructIns>();
	jule::I64 _field_i = jule::I64();


	_220d89141_TraitHash(jule::Ptr<_21deee929_Trait> __param_t, jule::Ptr<_21dd06742_StructIns> __param_s, jule::I64 __param_i): _field_t(__param_t), _field_s(__param_s), _field_i(__param_i) {}

	

	_220d89141_TraitHash(void) = default;

	inline bool operator==(_220d89141_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_220d89141_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _220dd6d09_to_str(_220dd6897_CustomType*);
inline jule::Bool _220dd71b1_equals(jule::Ptr<_220dd6897_CustomType>,jule::Ptr<_21ec06223_TypeKind>);
struct _220dd6897_CustomType {
	jule::Str _field_kind = jule::Str();


	_220dd6897_CustomType(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_220dd6897_CustomType(void) = default;

	inline bool operator==(_220dd6897_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_220dd6897_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__220dd7997_to_type(jule::Str);
inline jule::Str static__220dd7ca5_prim(jule::Ptr<_21ec0b58b_Prim>);
inline jule::Str static__220dd80b3_tuple(jule::Ptr<_21ec11b46_Tuple>);
inline jule::Str static__220dd83c1_as_sptr(jule::Str);
inline jule::Str static__220dd86ce_as_ptr(jule::Str);
inline jule::Str static__220dd89dc_sptr(jule::Ptr<_21ec103e7_Sptr>);
inline jule::Str static__220dd8cea_ptr(jule::Ptr<_21ec14275_Ptr>);
inline jule::Str static__220dd9108_enum_decl(jule::Ptr<_21ddb6aee_Enum>);
inline jule::Str static__220dd9416_as_slice(jule::Ptr<_21ec06223_TypeKind>);
inline jule::Str static__220dd9724_slice(jule::Ptr<_21ec10eca_Slc>);
inline jule::Str static__220dd9a32_map(jule::Ptr<_21ec128b1_Map>);
inline jule::Str static__220dd9d40_trait_ident(jule::Str);
inline jule::Str static__220dda14d_trait_decl(jule::Ptr<_21deee929_Trait>);
inline jule::Str static__220dda45b_structure(jule::Ptr<_21dd03266_Struct>);
inline jule::Str static__220dda769_structure_ins(jule::Ptr<_21dd06742_StructIns>);
inline jule::Str static__220ddaa77_array(jule::Ptr<_21ec13692_Arr>);
inline jule::Str static__220ddad85_param(jule::Ptr<_21dd17423_Param>&);
inline jule::Str static__220ddb193_param_ins(jule::Ptr<_21dd1badc_ParamIns>&);
inline jule::Str static__220ddb4a1_func_result(jule::Ptr<_21dd19249_Fn>&);
inline jule::Str static__220ddb7ae_func_ins_result(jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Str static__220ddbabc_anon_func(jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Str static__220ddbdca_func(jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Str static__220ddc1d8_kind(jule::Ptr<_21ec06223_TypeKind>);
struct _220dd7414_TypeCoder {
	

	_220dd7414_TypeCoder(void) = default;

	inline bool operator==(_220dd7414_TypeCoder _other) { return true; }

	inline bool operator!=(_220dd7414_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _230595b4b_name(_220dee78e_Flag_0*);
inline jule::Str _230595cb1_what(_220dee78e_Flag_0*);
inline void _230595e26_reset(_220dee78e_Flag_0*);
inline jule::I32 _23059608b_short(_220dee78e_Flag_0*);
struct _220dee78e_Flag_0 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();


	_220dee78e_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::I64 __param__default, jule::Str __param__what, jule::Ptr<jule::I64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_220dee78e_Flag_0(void) = default;

	inline bool operator==(_220dee78e_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_220dee78e_Flag_0 _other) { return !this->operator==(_other); }


};inline jule::Str _230598e7e_name(_220dee78e_Flag_1*);
inline jule::Str _230596212_what(_220dee78e_Flag_1*);
inline void _230597895_reset(_220dee78e_Flag_1*);
inline jule::I32 _230598bd7_short(_220dee78e_Flag_1*);
struct _220dee78e_Flag_1 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();


	_220dee78e_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::U64 __param__default, jule::Str __param__what, jule::Ptr<jule::U64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_220dee78e_Flag_1(void) = default;

	inline bool operator==(_220dee78e_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_220dee78e_Flag_1 _other) { return !this->operator==(_other); }


};inline jule::Str _23059c48d_name(_220dee78e_Flag_2*);
inline jule::Str _230599721_what(_220dee78e_Flag_2*);
inline void _23059ada4_reset(_220dee78e_Flag_2*);
inline jule::I32 _23059c1e6_short(_220dee78e_Flag_2*);
struct _220dee78e_Flag_2 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_220dee78e_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_220dee78e_Flag_2(void) = default;

	inline bool operator==(_220dee78e_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_220dee78e_Flag_2 _other) { return !this->operator==(_other); }


};inline jule::Str _23059cc96_name(_220dee78e_Flag_3*);
inline jule::Str _2305a09e1_what(_220dee78e_Flag_3*);
inline void _23059e407_reset(_220dee78e_Flag_3*);
inline jule::I32 _2305a0749_short(_220dee78e_Flag_3*);
struct _220dee78e_Flag_3 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_220dee78e_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_220dee78e_Flag_3(void) = default;

	inline bool operator==(_220dee78e_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_220dee78e_Flag_3 _other) { return !this->operator==(_other); }


};inline jule::Str _2305a4000_name(_220dee78e_Flag_4*);
inline jule::Str _2305a1283_what(_220dee78e_Flag_4*);
inline void _2305a2916_reset(_220dee78e_Flag_4*);
inline jule::I32 _2305a3c58_short(_220dee78e_Flag_4*);
struct _220dee78e_Flag_4 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_220dee78e_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_220dee78e_Flag_4(void) = default;

	inline bool operator==(_220dee78e_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_220dee78e_Flag_4 _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220e00b7a_FlagSet> static__220e00e99_new(void);
inline jule::Trait<_220dee393_CommonFlag> _220e0150a_find_flag(_220e00b7a_FlagSet*,jule::Str);
inline jule::Trait<_220dee393_CommonFlag> _220e018b2_find_flag_short(_220e00b7a_FlagSet*,jule::I32);
inline jule::Slice<jule::Trait<_220dee393_CommonFlag>> _220e01b8c_flags(_220e00b7a_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _220e02044_parse(_220e00b7a_FlagSet*,jule::Slice<jule::Str>);
inline void _220e02286_reset(_220e00b7a_FlagSet*);
inline jule::Ptr<_220dee78e_Flag_4> _220e027e7_add_flag_common_0(_220e00b7a_FlagSet*,jule::Str,jule::I32,jule::Str);
inline jule::Ptr<_220dee78e_Flag_3> _220e027e7_add_flag_common_1(_220e00b7a_FlagSet*,jule::Str,jule::I32,jule::Str);
inline void _220e034da_add_var_0(_220e00b7a_FlagSet*,jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);
inline void _220e034da_add_var_1(_220e00b7a_FlagSet*,jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
struct _220e00b7a_FlagSet {
	jule::Slice<jule::Trait<_220dee393_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_220dee393_CommonFlag>>();


	_220e00b7a_FlagSet(jule::Slice<jule::Trait<_220dee393_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_220e00b7a_FlagSet(void) = default;

	inline bool operator==(_220e00b7a_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_220e00b7a_FlagSet _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c4e59b0_is_nil(_21c4d84db_LitExpr*);
struct _21c4d84db_LitExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_value = jule::Str();


	_21c4d84db_LitExpr(_21c627dde_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_21c4d84db_LitExpr(void) = default;

	inline bool operator==(_21c4d84db_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_21c4d84db_LitExpr _other) { return !this->operator==(_other); }


};
struct _21c4d870b_UnsafeExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c4d870b_UnsafeExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21c4d870b_UnsafeExpr(void) = default;

	inline bool operator==(_21c4d870b_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c4d870b_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _21c4d892b_CoExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c4d892b_CoExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21c4d892b_CoExpr(void) = default;

	inline bool operator==(_21c4d892b_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c4d892b_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c57727d_is_self(_21c4d8b4b_IdentExpr*);
struct _21c4d8b4b_IdentExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_21c4d8b4b_IdentExpr(_21c627dde_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_21c4d8b4b_IdentExpr(void) = default;

	inline bool operator==(_21c4d8b4b_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_21c4d8b4b_IdentExpr _other) { return !this->operator==(_other); }


};
struct _21c4d8d6b_UnaryExpr {
	_21c627dde_Token _field_op = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c4d8d6b_UnaryExpr(_21c627dde_Token __param_op, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_21c4d8d6b_UnaryExpr(void) = default;

	inline bool operator==(_21c4d8d6b_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c4d8d6b_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _21cba5180_AssignInfo {
	jule::Slice<_21c627dde_Token> _field_l = jule::Slice<_21c627dde_Token>();
	jule::Slice<_21c627dde_Token> _field_r = jule::Slice<_21c627dde_Token>();
	_21c627dde_Token _field_setter = _21c627dde_Token();
	jule::Bool _field_ok = jule::Bool();


	_21cba5180_AssignInfo(jule::Slice<_21c627dde_Token> __param_l, jule::Slice<_21c627dde_Token> __param_r, _21c627dde_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_21cba5180_AssignInfo(void) = default;

	inline bool operator==(_21cba5180_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_21cba5180_AssignInfo _other) { return !this->operator==(_other); }


};
struct _21c4d908b_VariadicExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c4d908b_VariadicExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21c4d908b_VariadicExpr(void) = default;

	inline bool operator==(_21c4d908b_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c4d908b_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _21c525490_Directive {
	_21c627dde_Token _field_tag = _21c627dde_Token();
	jule::Slice<_21c627dde_Token> _field_args = jule::Slice<_21c627dde_Token>();


	_21c525490_Directive(_21c627dde_Token __param_tag, jule::Slice<_21c627dde_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_21c525490_Directive(void) = default;

	inline bool operator==(_21c525490_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_21c525490_Directive _other) { return !this->operator==(_other); }


};
struct _21c63d630_NsSelectionExpr {
	jule::Slice<_21c627dde_Token> _field_ns = jule::Slice<_21c627dde_Token>();
	_21c627dde_Token _field_ident = _21c627dde_Token();


	_21c63d630_NsSelectionExpr(jule::Slice<_21c627dde_Token> __param_ns, _21c627dde_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_21c63d630_NsSelectionExpr(void) = default;

	inline bool operator==(_21c63d630_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21c63d630_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _21c63d850_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	_21c627dde_Token _field_ident = _21c627dde_Token();


	_21c63d850_SubIdentExpr(jule::Bool __param_is_self, jule::Ptr<_21c4d7b4a_Expr> __param_expr, _21c627dde_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_21c63d850_SubIdentExpr(void) = default;

	inline bool operator==(_21c63d850_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21c63d850_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _21c63da70_BinopExpr {
	jule::Ptr<_21c4d7b4a_Expr> _field_left = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c4d7b4a_Expr> _field_right = jule::Ptr<_21c4d7b4a_Expr>();
	_21c627dde_Token _field_op = _21c627dde_Token();


	_21c63da70_BinopExpr(jule::Ptr<_21c4d7b4a_Expr> __param_left, jule::Ptr<_21c4d7b4a_Expr> __param_right, _21c627dde_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_21c63da70_BinopExpr(void) = default;

	inline bool operator==(_21c63da70_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_21c63da70_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c52a880_unhandled(_21c63dc90_FnCallExpr*);
inline jule::Bool _21c4d92ab_ignored(_21c63dc90_FnCallExpr*);
struct _21c63dc90_FnCallExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>();
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_args = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();
	jule::Ptr<_21c6411e3_ScopeTree> _field_exception = jule::Ptr<_21c6411e3_ScopeTree>();


	_21c63dc90_FnCallExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_args, jule::Ptr<_21c6411e3_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_21c63dc90_FnCallExpr(void) = default;

	inline bool operator==(_21c63dc90_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_21c63dc90_FnCallExpr _other) { return !this->operator==(_other); }


};
struct _21eb2d8dc_Assign {
	jule::Ptr<_21dd08854_OperandExprModel> _field_l = jule::Ptr<_21dd08854_OperandExprModel>();
	jule::Ptr<_21dd08854_OperandExprModel> _field_r = jule::Ptr<_21dd08854_OperandExprModel>();
	_21c627dde_Token _field_op = _21c627dde_Token();


	_21eb2d8dc_Assign(jule::Ptr<_21dd08854_OperandExprModel> __param_l, jule::Ptr<_21dd08854_OperandExprModel> __param_r, _21c627dde_Token __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_21eb2d8dc_Assign(void) = default;

	inline bool operator==(_21eb2d8dc_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_21eb2d8dc_Assign _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c4ec6ed_is_targeted(_21c63deb0_FieldExprPair*);
struct _21c63deb0_FieldExprPair {
	_21c627dde_Token _field_field = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c63deb0_FieldExprPair(_21c627dde_Token __param_field, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_21c63deb0_FieldExprPair(void) = default;

	inline bool operator==(_21c63deb0_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c63deb0_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _21c5d253b_TypeDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_kind = jule::Any();


	_21c5d253b_TypeDecl(_21c627dde_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_21c5d253b_TypeDecl(void) = default;

	inline bool operator==(_21c5d253b_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21c5d253b_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c4edbe9_is_empty(_21c63e400_BraceLit*);
struct _21c63e400_BraceLit {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();


	_21c63e400_BraceLit(_21c627dde_Token __param_token, jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_21c63e400_BraceLit(void) = default;

	inline bool operator==(_21c63e400_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21c63e400_BraceLit _other) { return !this->operator==(_other); }


};
struct _21c63e620_KeyValPair {
	jule::Ptr<_21c4d7b4a_Expr> _field_key = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c4d7b4a_Expr> _field_val = jule::Ptr<_21c4d7b4a_Expr>();
	_21c627dde_Token _field_colon = _21c627dde_Token();


	_21c63e620_KeyValPair(jule::Ptr<_21c4d7b4a_Expr> __param_key, jule::Ptr<_21c4d7b4a_Expr> __param_val, _21c627dde_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_21c63e620_KeyValPair(void) = default;

	inline bool operator==(_21c63e620_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_21c63e620_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21dd05be7_FieldIns> _21dd0097d_instance(jule::Ptr<_21dc10607_Field>);
struct _21dc10607_Field {
	jule::Ptr<_21dd03266_Struct> _field_owner = jule::Ptr<_21dd03266_Struct>();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21ec0aa85_TypeSymbol> _field_kind = jule::Ptr<_21ec0aa85_TypeSymbol>();
	jule::Ptr<_21c4d7b4a_Expr> _field_default = jule::Ptr<_21c4d7b4a_Expr>();


	_21dc10607_Field(jule::Ptr<_21dd03266_Struct> __param_owner, _21c627dde_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_21ec0aa85_TypeSymbol> __param_kind, jule::Ptr<_21c4d7b4a_Expr> __param_default): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_21dc10607_Field(void) = default;

	inline bool operator==(_21dc10607_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21dc10607_Field _other) { return !this->operator==(_other); }


};
struct _21eb2e8dd_ScopeLabel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21eb2d27c_Label> _field_label = jule::Ptr<_21eb2d27c_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_21eb2ed2d_ScopeChecker> _field_scope = jule::Ptr<_21eb2ed2d_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_21eb2e8dd_ScopeLabel(_21c627dde_Token __param_token, jule::Ptr<_21eb2d27c_Label> __param_label, jule::I64 __param_pos, jule::Ptr<_21eb2ed2d_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_21eb2e8dd_ScopeLabel(void) = default;

	inline bool operator==(_21eb2e8dd_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_21eb2e8dd_ScopeLabel _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c50e2d1_is_empty(_21c63e840_SliceExpr*);
struct _21c63e840_SliceExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();


	_21c63e840_SliceExpr(_21c627dde_Token __param_token, jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_21c63e840_SliceExpr(void) = default;

	inline bool operator==(_21c63e840_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21c63e840_SliceExpr _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21dd06742_StructIns> _21dd0370b_instance(jule::Ptr<_21dd03266_Struct>);
inline jule::Ptr<_21dd06742_StructIns> _21dd03ab3_append_instance(_21dd03266_Struct*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Ptr<_21dd19249_Fn> _21dd04047_find_method(_21dd03266_Struct*,jule::Str,jule::Bool);
inline jule::Ptr<_21eb75615_Var> _21dd043ee_find_static(_21dd03266_Struct*,jule::Str);
inline jule::Ptr<_21dc10607_Field> _21dd047a6_find_field(_21dd03266_Struct*,jule::Str);
inline jule::Bool _21dd04b5d_is_implements(_21dd03266_Struct*,jule::Ptr<_21deee929_Trait>);
inline jule::Bool _21dd05015_is_derives(_21dd03266_Struct*,jule::Str);
inline jule::Bool _21dd053bc_is_uses(_21dd03266_Struct*,jule::Ptr<_21dd03266_Struct>);
inline jule::Bool _21dd05697_has_ref_accessible(_21dd03266_Struct*);
struct _21dd03266_Struct {
	jule::Ptr<_21eb5443a_Sema> _field_sema = jule::Ptr<_21eb5443a_Sema>();
	jule::Slice<jule::Ptr<_21dd03266_Struct>> _field_depends = jule::Slice<jule::Ptr<_21dd03266_Struct>>();
	jule::Slice<jule::Ptr<_21dd03266_Struct>> _field_uses = jule::Slice<jule::Ptr<_21dd03266_Struct>>();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_21dc10607_Field>> _field_fields = jule::Slice<jule::Ptr<_21dc10607_Field>>();
	jule::Slice<jule::Ptr<_21dd19249_Fn>> _field_methods = jule::Slice<jule::Ptr<_21dd19249_Fn>>();
	jule::Slice<jule::Ptr<_21eb75615_Var>> _field_statics = jule::Slice<jule::Ptr<_21eb75615_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21c640423_GenericDecl>>();
	jule::Slice<jule::Ptr<_21deee929_Trait>> _field_implements = jule::Slice<jule::Ptr<_21deee929_Trait>>();
	jule::Slice<jule::Ptr<_21dd06742_StructIns>> _field_instances = jule::Slice<jule::Ptr<_21dd06742_StructIns>>();


	_21dd03266_Struct(jule::Ptr<_21eb5443a_Sema> __param_sema, jule::Slice<jule::Ptr<_21dd03266_Struct>> __param_depends, jule::Slice<jule::Ptr<_21dd03266_Struct>> __param_uses, _21c627dde_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_21dc10607_Field>> __param_fields, jule::Slice<jule::Ptr<_21dd19249_Fn>> __param_methods, jule::Slice<jule::Ptr<_21eb75615_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_directives, jule::Slice<jule::Ptr<_21c640423_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_21deee929_Trait>> __param_implements, jule::Slice<jule::Ptr<_21dd06742_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {}

	

	_21dd03266_Struct(void) = default;

	inline bool operator==(_21dd03266_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_21dd03266_Struct _other) { return !this->operator==(_other); }


};
struct _21c4d82aa_IndexingExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c4d7b4a_Expr> _field_index = jule::Ptr<_21c4d7b4a_Expr>();


	_21c4d82aa_IndexingExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Ptr<_21c4d7b4a_Expr> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_21c4d82aa_IndexingExpr(void) = default;

	inline bool operator==(_21c4d82aa_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_21c4d82aa_IndexingExpr _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4a343_find_package(_21eb49c8d_ImportInfo*,jule::Str);
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4a6ea_select_package(_21eb49c8d_ImportInfo*,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>);
inline jule::Ptr<_21eb75615_Var> _21eb4ab7e_find_var(_21eb49c8d_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_21ec05288_TypeAlias> _21eb4b113_find_type_alias(_21eb49c8d_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd03266_Struct> _21eb4b597_find_struct(_21eb49c8d_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd19249_Fn> _21eb4ba2b_find_fn(_21eb49c8d_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_21deee929_Trait> _21eb4bdd3_find_trait(_21eb49c8d_ImportInfo*,jule::Str);
inline jule::Ptr<_21ddb6aee_Enum> _21eb4c28a_find_enum(_21eb49c8d_ImportInfo*,jule::Str);
inline jule::Bool _21eb4c752_is_lookupable(_21eb49c8d_ImportInfo*,jule::Str);
inline jule::Bool _21eb4cb09_exist_ident(_21eb49c8d_ImportInfo*,jule::Str);
inline jule::Bool _21eb4ce28_is_accessible_via_selection(_21eb49c8d_ImportInfo*);
struct _21eb49c8d_ImportInfo {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_21c627dde_Token> _field_selected = jule::Slice<_21c627dde_Token>();
	jule::Ptr<_21eb4d269_Package> _field_package = jule::Ptr<_21eb4d269_Package>();
	jule::I64 _field_mod_id = jule::I64();


	_21eb49c8d_ImportInfo(_21c627dde_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_21c627dde_Token> __param_selected, jule::Ptr<_21eb4d269_Package> __param_package, jule::I64 __param_mod_id): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package), _field_mod_id(__param_mod_id) {}

	

	_21eb49c8d_ImportInfo(void) = default;

	inline bool operator==(_21eb49c8d_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_21eb49c8d_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Str _21dd06b60_to_str(_21dd06742_StructIns*);
inline jule::Bool _21dd07017_equals(jule::Ptr<_21dd06742_StructIns>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Bool _21dd074ce_same(_21dd06742_StructIns*,jule::Ptr<_21dd06742_StructIns>);
inline jule::Ptr<_21dd19249_Fn> _21dd07963_find_method(_21dd06742_StructIns*,jule::Str,jule::Bool);
inline jule::Ptr<_21dd05be7_FieldIns> _21dd07d1a_find_field(_21dd06742_StructIns*,jule::Str);
struct _21dd06742_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_21dd03266_Struct> _field_decl = jule::Ptr<_21dd03266_Struct>();
	jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_21ec06223_TypeKind>>();
	jule::Slice<jule::Ptr<_21dd05be7_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_21dd05be7_FieldIns>>();
	jule::Slice<jule::Ptr<_21dd19249_Fn>> _field_methods = jule::Slice<jule::Ptr<_21dd19249_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_21dd264ba_ReferenceStack> _field_references = jule::Ptr<_21dd264ba_ReferenceStack>();
	_21dd02188_Operators _field_operators = _21dd02188_Operators();


	_21dd06742_StructIns(jule::Bool __param_checked, jule::Ptr<_21dd03266_Struct> __param_decl, jule::Slice<jule::Ptr<_21ec06223_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_21dd05be7_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_21dd19249_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_21dd264ba_ReferenceStack> __param_references, _21dd02188_Operators __param_operators): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references), _field_operators(__param_operators) {}

	

	_21dd06742_StructIns(void) = default;

	inline bool operator==(_21dd06742_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_21dd06742_StructIns _other) { return !this->operator==(_other); }


};
struct _21c63eed3_SlicingExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c4d7b4a_Expr> _field_start = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c4d7b4a_Expr> _field_to = jule::Ptr<_21c4d7b4a_Expr>();


	_21c63eed3_SlicingExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Ptr<_21c4d7b4a_Expr> __param_start, jule::Ptr<_21c4d7b4a_Expr> __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_21c63eed3_SlicingExpr(void) = default;

	inline bool operator==(_21c63eed3_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_21c63eed3_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _21dd08de8_BinopExprModel {
	jule::Ptr<_21dd08854_OperandExprModel> _field_left = jule::Ptr<_21dd08854_OperandExprModel>();
	jule::Ptr<_21dd08854_OperandExprModel> _field_right = jule::Ptr<_21dd08854_OperandExprModel>();
	_21c627dde_Token _field_op = _21c627dde_Token();


	_21dd08de8_BinopExprModel(jule::Ptr<_21dd08854_OperandExprModel> __param_left, jule::Ptr<_21dd08854_OperandExprModel> __param_right, _21c627dde_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_21dd08de8_BinopExprModel(void) = default;

	inline bool operator==(_21dd08de8_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_21dd08de8_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _21dd09349_UnaryExprModel {
	jule::Ptr<_21ebbd053_Data> _field_expr = jule::Ptr<_21ebbd053_Data>();
	_21c627dde_Token _field_op = _21c627dde_Token();


	_21dd09349_UnaryExprModel(jule::Ptr<_21ebbd053_Data> __param_expr, _21c627dde_Token __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_21dd09349_UnaryExprModel(void) = default;

	inline bool operator==(_21dd09349_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_21dd09349_UnaryExprModel _other) { return !this->operator==(_other); }


};
inline jule::Bool _21eb75a33_is_initialized(_21eb75615_Var*);
inline jule::Bool _21eb75d0d_is_type_inferred(_21eb75615_Var*);
struct _21eb75615_Var {
	jule::Ptr<_21eb1472a_Scope> _field_scope = jule::Ptr<_21eb1472a_Scope>();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_21ec0aa85_TypeSymbol> _field_kind = jule::Ptr<_21ec0aa85_TypeSymbol>();
	jule::Ptr<_21ebbe362_Value> _field_value = jule::Ptr<_21ebbe362_Value>();
	jule::Ptr<_21dd264ba_ReferenceStack> _field_references = jule::Ptr<_21dd264ba_ReferenceStack>();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Ptr<_21eb74306_IterRelation> _field_iter_relation = jule::Ptr<_21eb74306_IterRelation>();
	jule::Slice<jule::Ptr<_21eb75615_Var>> _field_depends = jule::Slice<jule::Ptr<_21eb75615_Var>>();


	_21eb75615_Var(jule::Ptr<_21eb1472a_Scope> __param_scope, _21c627dde_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ptr<_21ec0aa85_TypeSymbol> __param_kind, jule::Ptr<_21ebbe362_Value> __param_value, jule::Ptr<_21dd264ba_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_directives, jule::Ptr<_21eb74306_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_21eb75615_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_21eb75615_Var(void) = default;

	inline bool operator==(_21eb75615_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_21eb75615_Var _other) { return !this->operator==(_other); }


};
struct _21c640203_TernaryExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_condition = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c4d7b4a_Expr> _field_true_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c4d7b4a_Expr> _field_false_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c640203_TernaryExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_condition, jule::Ptr<_21c4d7b4a_Expr> __param_true_expr, jule::Ptr<_21c4d7b4a_Expr> __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_21c640203_TernaryExpr(void) = default;

	inline bool operator==(_21c640203_TernaryExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_condition == _other._field_condition &&
			this->_field_true_expr == _other._field_true_expr &&
			this->_field_false_expr == _other._field_false_expr;
	}

	inline bool operator!=(_21c640203_TernaryExpr _other) { return !this->operator==(_other); }


};
inline void _21eba54be_push_err(_21eba4e2a_TypeCompatibilityChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21eba5799_check_trait(_21eba4e2a_TypeCompatibilityChecker*);
inline jule::Bool _21eba5a74_check_ptr(_21eba4e2a_TypeCompatibilityChecker*);
inline jule::Bool _21eba5d4e_check_prim(_21eba4e2a_TypeCompatibilityChecker*);
inline jule::Bool _21eba6129_check(_21eba4e2a_TypeCompatibilityChecker*);
struct _21eba4e2a_TypeCompatibilityChecker {
	jule::Ptr<_21eb5443a_Sema> _field_s = jule::Ptr<_21eb5443a_Sema>();
	jule::Ptr<_21ec06223_TypeKind> _field_dest = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21ec06223_TypeKind> _field_src = jule::Ptr<_21ec06223_TypeKind>();
	_21c627dde_Token _field_error_token = _21c627dde_Token();


	_21eba4e2a_TypeCompatibilityChecker(jule::Ptr<_21eb5443a_Sema> __param_s, jule::Ptr<_21ec06223_TypeKind> __param_dest, jule::Ptr<_21ec06223_TypeKind> __param_src, _21c627dde_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_21eba4e2a_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_21eba4e2a_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_21eba4e2a_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _21eba6cb7_push_err(_21eba6778_AssignTypeChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21eba7092_check_validity(_21eba6778_AssignTypeChecker*);
inline jule::Bool _21eba736c_check_const(_21eba6778_AssignTypeChecker*);
inline jule::Bool _21eba7647_is_prim(_21eba6778_AssignTypeChecker*);
inline jule::Bool _21eba7922_check_compatibility(_21eba6778_AssignTypeChecker*);
inline jule::Bool _21eba7bec_check(_21eba6778_AssignTypeChecker*);
struct _21eba6778_AssignTypeChecker {
	jule::Ptr<_21eb5443a_Sema> _field_s = jule::Ptr<_21eb5443a_Sema>();
	jule::Ptr<_21ec06223_TypeKind> _field_dest = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21ebbd053_Data> _field_d = jule::Ptr<_21ebbd053_Data>();
	_21c627dde_Token _field_error_token = _21c627dde_Token();


	_21eba6778_AssignTypeChecker(jule::Ptr<_21eb5443a_Sema> __param_s, jule::Ptr<_21ec06223_TypeKind> __param_dest, jule::Ptr<_21ebbd053_Data> __param_d, _21c627dde_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_21eba6778_AssignTypeChecker(void) = default;

	inline bool operator==(_21eba6778_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_21eba6778_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _21eba8ba9_push_generic(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&,jule::I64);
inline jule::Bool _21eba902d_annotate_prim(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21eba93d5_annotate_slc(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21eba9869_check_map_key(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21eba9c21_annotate_map(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ebaa0c8_annotate_fn(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ebaa480_annotate_ptr(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ebaa837_annotate_sptr(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ebaabde_annotate_any(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ebab096_annotate_kind(_21eba8549_DynamicTypeAnnotation*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ebab371_annotate(_21eba8549_DynamicTypeAnnotation*);
struct _21eba8549_DynamicTypeAnnotation {
	jule::Ptr<_21ebc00aa_Eval> _field_e = jule::Ptr<_21ebc00aa_Eval>();
	jule::Ptr<_21dd1cc42_FnIns> _field_f = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd1badc_ParamIns> _field_p = jule::Ptr<_21dd1badc_ParamIns>();
	jule::Ptr<_21ebbd053_Data> _field_a = jule::Ptr<_21ebbd053_Data>();
	_21c627dde_Token _field_error_token = _21c627dde_Token();
	jule::Ptr<_21ec06223_TypeKind>* _field_k = nullptr;


	_21eba8549_DynamicTypeAnnotation(jule::Ptr<_21ebc00aa_Eval> __param_e, jule::Ptr<_21dd1cc42_FnIns> __param_f, jule::Ptr<_21dd1badc_ParamIns> __param_p, jule::Ptr<_21ebbd053_Data> __param_a, _21c627dde_Token __param_error_token, jule::Ptr<_21ec06223_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_21eba8549_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_21eba8549_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_21eba8549_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _21ebac32d_push_err_token(_21ebabbbd_FnCallArgChecker*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline void _21ebac729_push_err(_21ebabbbd_FnCallArgChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_21dd1badc_ParamIns>> _21ebaca04_get_params(_21ebabbbd_FnCallArgChecker*);
inline jule::Bool _21ebacdab_check_counts(_21ebabbbd_FnCallArgChecker*,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>&);
inline jule::Bool _21ebad41c_check_arg(_21ebabbbd_FnCallArgChecker*,jule::Ptr<_21dd1badc_ParamIns>&,jule::Ptr<_21ebbd053_Data>&,_21c627dde_Token&);
inline jule::Bool _21ebad8a1_push(_21ebabbbd_FnCallArgChecker*,jule::Ptr<_21dd1badc_ParamIns>&,jule::Ptr<_21c4d7b4a_Expr>);
inline jule::Bool _21ebadd35_push_variadic(_21ebabbbd_FnCallArgChecker*,jule::Ptr<_21dd1badc_ParamIns>&,jule::I64);
inline jule::Bool _21ebae1dc_check_args(_21ebabbbd_FnCallArgChecker*,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>&);
inline jule::Bool _21ebae50b_check_dynamic_type_annotation(_21ebabbbd_FnCallArgChecker*);
inline jule::Bool _21ebae7c5_check(_21ebabbbd_FnCallArgChecker*);
struct _21ebabbbd_FnCallArgChecker {
	jule::Ptr<_21ebc00aa_Eval> _field_e = jule::Ptr<_21ebc00aa_Eval>();
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_args = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();
	_21c627dde_Token _field_error_token = _21c627dde_Token();
	jule::Ptr<_21dd1cc42_FnIns> _field_f = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_21ebabbbd_FnCallArgChecker(jule::Ptr<_21ebc00aa_Eval> __param_e, jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_args, _21c627dde_Token __param_error_token, jule::Ptr<_21dd1cc42_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_21ebabbbd_FnCallArgChecker(void) = default;

	inline bool operator==(_21ebabbbd_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_21ebabbbd_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _21ebb0540_push_err(_21ebaee24_StructLitChecker*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline void _21ebb093b_push_suggestion(_21ebaee24_StructLitChecker*,jule::Str,jule::Slice<jule::Any>);
inline void _21ebb0e14_push_match(_21ebaee24_StructLitChecker*,jule::Ptr<_21dd05be7_FieldIns>&,jule::Ptr<_21ebbd053_Data>&,_21c627dde_Token&);
inline void _21ebb1310_check_pair(_21ebaee24_StructLitChecker*,jule::Ptr<_21c63deb0_FieldExprPair>&,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>&);
inline jule::Bool _21ebb16b7_ready_exprs(_21ebaee24_StructLitChecker*,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>&);
inline void _21ebb19d6_check(_21ebaee24_StructLitChecker*,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>&);
struct _21ebaee24_StructLitChecker {
	jule::Ptr<_21ebc00aa_Eval> _field_e = jule::Ptr<_21ebc00aa_Eval>();
	_21c627dde_Token _field_error_token = _21c627dde_Token();
	jule::Ptr<_21dd06742_StructIns> _field_s = jule::Ptr<_21dd06742_StructIns>();
	jule::Slice<jule::Ptr<_21dd097de_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_21dd097de_StructArgExprModel>>();


	_21ebaee24_StructLitChecker(jule::Ptr<_21ebc00aa_Eval> __param_e, _21c627dde_Token __param_error_token, jule::Ptr<_21dd06742_StructIns> __param_s, jule::Slice<jule::Ptr<_21dd097de_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_21ebaee24_StructLitChecker(void) = default;

	inline bool operator==(_21ebaee24_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_21ebaee24_StructLitChecker _other) { return !this->operator==(_other); }


};
struct _21c640423_GenericDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();


	_21c640423_GenericDecl(_21c627dde_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_21c640423_GenericDecl(void) = default;

	inline bool operator==(_21c640423_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21c640423_GenericDecl _other) { return !this->operator==(_other); }


};
inline void _21ebb4e3a_prepare_types(_21ebb4995_RetTypeChecker*);
inline void _21ebb5259_prepare_exprs(_21ebb4995_RetTypeChecker*,jule::Ptr<_21c4d7b4a_Expr>&);
inline void _21ebb549b_ret_vars(_21ebb4995_RetTypeChecker*);
inline void _21ebb56dd_check_exprs(_21ebb4995_RetTypeChecker*);
inline jule::Bool _21ebb5a95_check(_21ebb4995_RetTypeChecker*,jule::Ptr<_21c4d7b4a_Expr>&);
struct _21ebb4995_RetTypeChecker {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _field_sc = jule::Ptr<_21eb2ed2d_ScopeChecker>();
	jule::Ptr<_21dd1cc42_FnIns> _field_f = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _field_types = jule::Slice<jule::Ptr<_21ec06223_TypeKind>>();
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();
	jule::Slice<jule::Ptr<_21eb75615_Var>> _field_vars = jule::Slice<jule::Ptr<_21eb75615_Var>>();
	_21c627dde_Token _field_error_token = _21c627dde_Token();
	jule::Any _field_model = jule::Any();


	_21ebb4995_RetTypeChecker(jule::Ptr<_21eb2ed2d_ScopeChecker> __param_sc, jule::Ptr<_21dd1cc42_FnIns> __param_f, jule::Slice<jule::Ptr<_21ec06223_TypeKind>> __param_types, jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_exprs, jule::Slice<jule::Ptr<_21eb75615_Var>> __param_vars, _21c627dde_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_21ebb4995_RetTypeChecker(void) = default;

	inline bool operator==(_21ebb4995_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_21ebb4995_RetTypeChecker _other) { return !this->operator==(_other); }


};
struct _21c640643_LabelSt {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();


	_21c640643_LabelSt(_21c627dde_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_21c640643_LabelSt(void) = default;

	inline bool operator==(_21c640643_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21c640643_LabelSt _other) { return !this->operator==(_other); }


};
struct _21dd0a757_CastingExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_21ec06223_TypeKind> _field_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21ec06223_TypeKind> _field_expr_kind = jule::Ptr<_21ec06223_TypeKind>();


	_21dd0a757_CastingExprModel(_21c627dde_Token __param_token, jule::Any __param_expr, jule::Ptr<_21ec06223_TypeKind> __param_kind, jule::Ptr<_21ec06223_TypeKind> __param_expr_kind): _field_token(__param_token), _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_21dd0a757_CastingExprModel(void) = default;

	inline bool operator==(_21dd0a757_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_21dd0a757_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0b23b_FnCallExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21dd1cc42_FnIns> _field_func = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_21eb1472a_Scope> _field_except = jule::Ptr<_21eb1472a_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_21dd0b23b_FnCallExprModel(_21c627dde_Token __param_token, jule::Ptr<_21dd1cc42_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_21eb1472a_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_21dd0b23b_FnCallExprModel(void) = default;

	inline bool operator==(_21dd0b23b_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_21dd0b23b_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _21c640863_GotoSt {
	_21c627dde_Token _field_token = _21c627dde_Token();
	_21c627dde_Token _field_label = _21c627dde_Token();


	_21c640863_GotoSt(_21c627dde_Token __param_token, _21c627dde_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_21c640863_GotoSt(void) = default;

	inline bool operator==(_21c640863_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_21c640863_GotoSt _other) { return !this->operator==(_other); }


};
struct _21dd0bbdc_IndexingExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21ebbd053_Data> _field_expr = jule::Ptr<_21ebbd053_Data>();
	jule::Ptr<_21ebbd053_Data> _field_index = jule::Ptr<_21ebbd053_Data>();


	_21dd0bbdc_IndexingExprModel(_21c627dde_Token __param_token, jule::Ptr<_21ebbd053_Data> __param_expr, jule::Ptr<_21ebbd053_Data> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_21dd0bbdc_IndexingExprModel(void) = default;

	inline bool operator==(_21dd0bbdc_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_21dd0bbdc_IndexingExprModel _other) { return !this->operator==(_other); }


};
inline _21ebe7de6_BinaryEval static__21ebe8512_new_plain(jule::Ptr<_21ebc00aa_Eval>);
inline _21ebe7de6_BinaryEval static__21ebe88ec_new(jule::Ptr<_21ebc00aa_Eval>,_21c627dde_Token);
inline jule::Bool _21ebe8c1b_check_type_compatibility(_21ebe7de6_BinaryEval*);
inline jule::Bool _21ebe904b_check_struct_common_operator_compatibility(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebe9326_eval_nil(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebe9601_eval_enum(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebe98cb_eval_sptr(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebe9ba6_eval_ptr(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebe9e81_eval_arr(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebea25b_eval_slc(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebea536_eval_fn(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebea811_eval_struct(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebeaadb_eval_trait(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebeadb6_eval_any(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebeb191_eval_bool(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebeb46b_eval_str(_21ebe7de6_BinaryEval*);
inline void _21ebeb6ad_set_type_to_greater(_21ebe7de6_BinaryEval*);
inline void _21ebeb999_check_mod_data(_21ebe7de6_BinaryEval*,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebebbdb_mod(_21ebe7de6_BinaryEval*);
inline jule::Bool _21ebec1b4_numbers_are_compatibile(_21ebe7de6_BinaryEval*,jule::Str&,jule::Str&);
inline jule::Ptr<_21ebbd053_Data> _21ebec47d_eval_float(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebec758_eval_int(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebeca33_eval_prim(_21ebe7de6_BinaryEval*);
inline jule::Ptr<_21ebbd053_Data> _21ebecd0d_eval_op(_21ebe7de6_BinaryEval*);
inline void _21ebed12c_eval_const(_21ebe7de6_BinaryEval*,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebed44b_check_data(_21ebe7de6_BinaryEval*,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebed68d_check_datas(_21ebe7de6_BinaryEval*);
inline void _21ebed9ac_set_model(_21ebe7de6_BinaryEval*,jule::Ptr<_21ebbd053_Data>&);
inline void _21ebedccb_post_eval(_21ebe7de6_BinaryEval*,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ebee260_solve_explicit(_21ebe7de6_BinaryEval*,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ebee617_eval(_21ebe7de6_BinaryEval*,jule::Ptr<_21c63da70_BinopExpr>&);
struct _21ebe7de6_BinaryEval {
	jule::Ptr<_21ebc00aa_Eval> _field_e = jule::Ptr<_21ebc00aa_Eval>();
	jule::Ptr<_21ebbd053_Data> _field_l = jule::Ptr<_21ebbd053_Data>();
	jule::Ptr<_21ebbd053_Data> _field_r = jule::Ptr<_21ebbd053_Data>();
	_21c627dde_Token _field_op = _21c627dde_Token();


	_21ebe7de6_BinaryEval(jule::Ptr<_21ebc00aa_Eval> __param_e, jule::Ptr<_21ebbd053_Data> __param_l, jule::Ptr<_21ebbd053_Data> __param_r, _21c627dde_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_21ebe7de6_BinaryEval(void) = default;

	inline bool operator==(_21ebe7de6_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_21ebe7de6_BinaryEval _other) { return !this->operator==(_other); }


};
struct _21ec05288_TypeAlias {
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21ec0aa85_TypeSymbol> _field_kind = jule::Ptr<_21ec0aa85_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>();


	_21ec05288_TypeAlias(jule::Ptr<_21c6411e3_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _21c627dde_Token __param_token, jule::Str __param_ident, jule::Ptr<_21ec0aa85_TypeSymbol> __param_kind, jule::Slice<jule::Any> __param_refers, jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> __param_generics): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_refers(__param_refers), _field_generics(__param_generics) {}

	

	_21ec05288_TypeAlias(void) = default;

	inline bool operator==(_21ec05288_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_21ec05288_TypeAlias _other) { return !this->operator==(_other); }


};
struct _21c640a83_FallSt {
	_21c627dde_Token _field_token = _21c627dde_Token();


	_21c640a83_FallSt(_21c627dde_Token __param_token): _field_token(__param_token) {}

	

	_21c640a83_FallSt(void) = default;

	inline bool operator==(_21c640a83_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_21c640a83_FallSt _other) { return !this->operator==(_other); }


};
struct _21c640ca3_AssignLeft {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c640ca3_AssignLeft(_21c627dde_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_21c640ca3_AssignLeft(void) = default;

	inline bool operator==(_21c640ca3_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c640ca3_AssignLeft _other) { return !this->operator==(_other); }


};
struct _21c640ec3_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_21c627dde_Token _field_setter = _21c627dde_Token();
	jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>>();
	jule::Ptr<_21c4d7b4a_Expr> _field_right = jule::Ptr<_21c4d7b4a_Expr>();


	_21c640ec3_AssignSt(jule::Bool __param_declarative, _21c627dde_Token __param_setter, jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>> __param_left, jule::Ptr<_21c4d7b4a_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_21c640ec3_AssignSt(void) = default;

	inline bool operator==(_21c640ec3_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_21c640ec3_AssignSt _other) { return !this->operator==(_other); }


};
struct _21dd0d23d_SlicingExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_21dd0d23d_SlicingExprModel(_21c627dde_Token __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_21dd0d23d_SlicingExprModel(void) = default;

	inline bool operator==(_21dd0d23d_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_21dd0d23d_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0d88c_TraitSubIdentExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_21dd19249_Fn> _field_method = jule::Ptr<_21dd19249_Fn>();
	jule::Ptr<_21deee929_Trait> _field_trt = jule::Ptr<_21deee929_Trait>();


	_21dd0d88c_TraitSubIdentExprModel(_21c627dde_Token __param_token, jule::Any __param_expr, jule::Ptr<_21dd19249_Fn> __param_method, jule::Ptr<_21deee929_Trait> __param_trt): _field_token(__param_token), _field_expr(__param_expr), _field_method(__param_method), _field_trt(__param_trt) {}

	

	_21dd0d88c_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_21dd0d88c_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_21dd0d88c_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _21dd0e294_StructSubIdentExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21ebbd053_Data> _field_expr = jule::Ptr<_21ebbd053_Data>();
	jule::Ptr<_21ec06223_TypeKind> _field_expr_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Ptr<_21dd1cc42_FnIns> _field_method = jule::Ptr<_21dd1cc42_FnIns>();
	jule::Ptr<_21dd05be7_FieldIns> _field_field = jule::Ptr<_21dd05be7_FieldIns>();


	_21dd0e294_StructSubIdentExprModel(_21c627dde_Token __param_token, jule::Ptr<_21ebbd053_Data> __param_expr, jule::Ptr<_21ec06223_TypeKind> __param_expr_kind, jule::Ptr<_21dd1cc42_FnIns> __param_method, jule::Ptr<_21dd05be7_FieldIns> __param_field): _field_token(__param_token), _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_21dd0e294_StructSubIdentExprModel(void) = default;

	inline bool operator==(_21dd0e294_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_21dd0e294_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c5d7e37_is_prim(_21c529e9a_IdentTypeDecl*);
struct _21c529e9a_IdentTypeDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>();


	_21c529e9a_IdentTypeDecl(_21c627dde_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_21c529e9a_IdentTypeDecl(void) = default;

	inline bool operator==(_21c529e9a_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_21c529e9a_IdentTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c50576c_is_self(_21c641413_ParamDecl*);
inline jule::Bool _21c50c147_is_ref(_21c641413_ParamDecl*);
struct _21c641413_ParamDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_21c641413_ParamDecl(_21c627dde_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_21c5d253b_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_21c641413_ParamDecl(void) = default;

	inline bool operator==(_21c641413_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21c641413_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c4874e0_is_anon(_21c641633_FnDecl*);
struct _21c641633_FnDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21c640423_GenericDecl>>();
	jule::Ptr<_21c4d792a_RetTypeDecl> _field_result = jule::Ptr<_21c4d792a_RetTypeDecl>();
	jule::Slice<jule::Ptr<_21c641413_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_21c641413_ParamDecl>>();


	_21c641633_FnDecl(_21c627dde_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_directives, jule::Ptr<_21c6411e3_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_21c640423_GenericDecl>> __param_generics, jule::Ptr<_21c4d792a_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_21c641413_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_21c641633_FnDecl(void) = default;

	inline bool operator==(_21c641633_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_21c641633_FnDecl _other) { return !this->operator==(_other); }


};
struct _21dd107c3_CommonSubIdentExprModel {
	jule::Ptr<_21ec06223_TypeKind> _field_expr_kind = jule::Ptr<_21ec06223_TypeKind>();
	jule::Any _field_expr = jule::Any();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();


	_21dd107c3_CommonSubIdentExprModel(jule::Ptr<_21ec06223_TypeKind> __param_expr_kind, jule::Any __param_expr, _21c627dde_Token __param_token, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_token(__param_token), _field_ident(__param_ident) {}

	

	_21dd107c3_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_21dd107c3_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21dd107c3_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
inline void _21ec186ec_push_err(_21ec17e27_TypeChecker*,_21c627dde_Token,jule::Str,jule::Slice<jule::Any>);
inline void _21ec1893e_allow_builtin(_21ec17e27_TypeChecker*);
inline void _21ec18b81_disallow_builtin(_21ec17e27_TypeChecker*);
inline jule::Ptr<_21ec0b58b_Prim> _21ec19038_build_prim(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>&);
inline void _21ec19511_push_cycle_error(_21ec17e27_TypeChecker*,jule::Any,jule::Any,jule::Str&);
inline jule::Bool _21ec19995_check_cross_cycle(_21ec17e27_TypeChecker*,jule::Any,jule::Str&);
inline jule::Bool _21ec19e29_check_illegal_cycles(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>&,jule::Any);
inline jule::Trait<_21ec05bd4_Kind> _21ec1a3ad_from_type_alias(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>&,jule::Ptr<_21ec05288_TypeAlias>&);
inline jule::Ptr<_21ddb6aee_Enum> _21ec1a842_from_enum(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>&,jule::Ptr<_21ddb6aee_Enum>&);
inline jule::Ptr<_21deee929_Trait> _21ec1acc6_from_trait(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>&,jule::Ptr<_21deee929_Trait>&);
inline jule::Bool _21ec1b25a_check_struct_ins(_21ec17e27_TypeChecker*,jule::Ptr<_21dd06742_StructIns>&,_21c627dde_Token&);
inline void _21ec1b5bd_append_used_struct_reference(_21ec17e27_TypeChecker*,jule::Ptr<_21dd03266_Struct>&);
inline jule::Ptr<_21dd06742_StructIns> _21ec1ba41_build_struct_instance(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>&,jule::Ptr<_21dd03266_Struct>&);
inline jule::Ptr<_21dd06742_StructIns> _21ec1bec5_from_struct(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>&,jule::Ptr<_21dd03266_Struct>&);
inline jule::Trait<_21ec05bd4_Kind> _21ec1c459_get_def(_21ec17e27_TypeChecker*,jule::Trait<_21ec23a48_Lookup>,jule::Ptr<_21c529e9a_IdentTypeDecl>&);
inline jule::Trait<_21ec05bd4_Kind> _21ec1c811_build_ident(_21ec17e27_TypeChecker*,jule::Ptr<_21c529e9a_IdentTypeDecl>);
inline jule::Ptr<_21ec103e7_Sptr> _21ec1cbb8_build_sptr_from_type(_21ec17e27_TypeChecker*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Ptr<_21ec103e7_Sptr> _21ec1d070_build_sptr(_21ec17e27_TypeChecker*,jule::Ptr<_21c5c6e48_SptrTypeDecl>);
inline jule::Ptr<_21ec14275_Ptr> _21ec1d427_build_ptr_from_type(_21ec17e27_TypeChecker*,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Ptr<_21ec14275_Ptr> _21ec1d7ce_build_ptr(_21ec17e27_TypeChecker*,jule::Ptr<_21c52b199_PtrTypeDecl>);
inline jule::Ptr<_21ec10eca_Slc> _21ec1db86_build_slc(_21ec17e27_TypeChecker*,jule::Ptr<_21c5a1c25_SlcTypeDecl>);
inline jule::Ptr<_21ec13692_Arr> _21ec1e03d_build_arr(_21ec17e27_TypeChecker*,jule::Ptr<_21c486ac7_ArrTypeDecl>);
inline jule::Ptr<_21ec128b1_Map> _21ec1e3e5_build_map(_21ec17e27_TypeChecker*,jule::Ptr<_21c4d770a_MapTypeDecl>);
inline jule::Ptr<_21ec11b46_Tuple> _21ec1e79c_build_tuple(_21ec17e27_TypeChecker*,jule::Ptr<_21c515c99_TupleTypeDecl>);
inline jule::Bool _21ec1eb54_check_fn_types(_21ec17e27_TypeChecker*,jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Ptr<_21dd1cc42_FnIns> _21ec2000b_build_fn(_21ec17e27_TypeChecker*,jule::Ptr<_21c641633_FnDecl>);
inline jule::Trait<_21ec05bd4_Kind> _21ec203b3_build_by_namespace(_21ec17e27_TypeChecker*,jule::Ptr<_21c5ec545_NamespaceTypeDecl>);
inline jule::Ptr<_21ec06223_TypeKind> _21ec2076a_build(_21ec17e27_TypeChecker*,jule::Any&);
inline jule::Ptr<_21ec06223_TypeKind> _21ec20b22_check_decl(_21ec17e27_TypeChecker*,jule::Ptr<_21c5d253b_TypeDecl>&);
inline void _21ec20e41_check(_21ec17e27_TypeChecker*,jule::Ptr<_21ec0aa85_TypeSymbol>&);
struct _21ec17e27_TypeChecker {
	jule::Ptr<_21eb5443a_Sema> _field_s = jule::Ptr<_21eb5443a_Sema>();
	jule::Trait<_21ec23a48_Lookup> _field_lookup = jule::Trait<_21ec23a48_Lookup>();
	jule::Ptr<_21ec16ed1_Referencer> _field_referencer = jule::Ptr<_21ec16ed1_Referencer>();
	_21c627dde_Token _field_error_token = _21c627dde_Token();
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_21c640423_GenericDecl>>();
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_21ec05288_TypeAlias> _field_owner_alias = jule::Ptr<_21ec05288_TypeAlias>();
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();


	_21ec17e27_TypeChecker(jule::Ptr<_21eb5443a_Sema> __param_s, jule::Trait<_21ec23a48_Lookup> __param_lookup, jule::Ptr<_21ec16ed1_Referencer> __param_referencer, _21c627dde_Token __param_error_token, jule::Slice<jule::Ptr<_21c640423_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin, jule::Bool __param_selection, jule::Ptr<_21ec05288_TypeAlias> __param_owner_alias, jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> __param_banned_generics, jule::Bool __param_inscatch): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin), _field_selection(__param_selection), _field_owner_alias(__param_owner_alias), _field_banned_generics(__param_banned_generics), _field_inscatch(__param_inscatch) {}

	

	_21ec17e27_TypeChecker(void) = default;

	inline bool operator==(_21ec17e27_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_21ec17e27_TypeChecker _other) { return !this->operator==(_other); }


};
struct _21c64205c_VarDecl {
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c64205c_VarDecl(jule::Ptr<_21c6411e3_ScopeTree> __param_scope, _21c627dde_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_directives, jule::Ptr<_21c5d253b_TypeDecl> __param_kind, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_21c64205c_VarDecl(void) = default;

	inline bool operator==(_21c64205c_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c64205c_VarDecl _other) { return !this->operator==(_other); }


};
struct _21c6423c0_RetSt {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c6423c0_RetSt(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21c6423c0_RetSt(void) = default;

	inline bool operator==(_21c6423c0_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c6423c0_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c642ada_is_inf(_21c6428ba_Iter*);
struct _21c6428ba_Iter {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();


	_21c6428ba_Iter(_21c627dde_Token __param_token, jule::Any __param_kind, jule::Ptr<_21c6411e3_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_21c6428ba_Iter(void) = default;

	inline bool operator==(_21c6428ba_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21c6428ba_Iter _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_21ccec4b4_IR>,jule::Slice<_21c348b32_Log>> static__21c441004_build(jule::Str,jule::I64);
inline void _21c465677_append_structs(_21ccec4b4_IR*,jule::Ptr<_21eb4d269_Package>&,jule::Slice<jule::Ptr<_21dd03266_Struct>>&);
inline jule::Slice<jule::Ptr<_21dd03266_Struct>> _21cd6532e_get_all_structures(_21ccec4b4_IR*);
inline void _21cd69d06_order(_21ccec4b4_IR*);
struct _21ccec4b4_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_21eb4d269_Package> _field_main = jule::Ptr<_21eb4d269_Package>();
	jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>>();
	_21cd1eccd_OrderedDefines _field_ordered = _21cd1eccd_OrderedDefines();


	_21ccec4b4_IR(jule::Str __param_root, jule::Slice<jule::Str> __param_passes, jule::Ptr<_21eb4d269_Package> __param_main, jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> __param_used, _21cd1eccd_OrderedDefines __param_ordered): _field_root(__param_root), _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_21ccec4b4_IR(void) = default;

	inline bool operator==(_21ccec4b4_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_21ccec4b4_IR _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c64315c_is_while_next(_21c642e3c_WhileKind*);
struct _21c642e3c_WhileKind {
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Any _field_next = jule::Any();
	_21c627dde_Token _field_next_token = _21c627dde_Token();


	_21c642e3c_WhileKind(jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Any __param_next, _21c627dde_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_21c642e3c_WhileKind(void) = default;

	inline bool operator==(_21c642e3c_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_21c642e3c_WhileKind _other) { return !this->operator==(_other); }


};
struct _21c643558_RangeKind {
	_21c627dde_Token _field_in_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c64205c_VarDecl> _field_key_a = jule::Ptr<_21c64205c_VarDecl>();
	jule::Ptr<_21c64205c_VarDecl> _field_key_b = jule::Ptr<_21c64205c_VarDecl>();


	_21c643558_RangeKind(_21c627dde_Token __param_in_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Ptr<_21c64205c_VarDecl> __param_key_a, jule::Ptr<_21c64205c_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_21c643558_RangeKind(void) = default;

	inline bool operator==(_21c643558_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_21c643558_RangeKind _other) { return !this->operator==(_other); }


};
struct _21dd123eb_BuiltinPanicCallExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_expr = jule::Any();


	_21dd123eb_BuiltinPanicCallExprModel(_21c627dde_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21dd123eb_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_21dd123eb_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21dd123eb_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _21dd129b2_BuiltinAssertCallExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();


	_21dd129b2_BuiltinAssertCallExprModel(_21c627dde_Token __param_token, jule::Any __param_expr, jule::Str __param_log): _field_token(__param_token), _field_expr(__param_expr), _field_log(__param_log) {}

	

	_21dd129b2_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_21dd129b2_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_21dd129b2_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _21c6438bb_BreakSt {
	_21c627dde_Token _field_token = _21c627dde_Token();
	_21c627dde_Token _field_label = _21c627dde_Token();


	_21c6438bb_BreakSt(_21c627dde_Token __param_token, _21c627dde_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_21c6438bb_BreakSt(void) = default;

	inline bool operator==(_21c6438bb_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_21c6438bb_BreakSt _other) { return !this->operator==(_other); }


};
struct _21c643c2e_ContSt {
	_21c627dde_Token _field_token = _21c627dde_Token();
	_21c627dde_Token _field_label = _21c627dde_Token();


	_21c643c2e_ContSt(_21c627dde_Token __param_token, _21c627dde_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_21c643c2e_ContSt(void) = default;

	inline bool operator==(_21c643c2e_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_21c643c2e_ContSt _other) { return !this->operator==(_other); }


};
struct _21c64413b_If {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();


	_21c64413b_If(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Ptr<_21c6411e3_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_21c64413b_If(void) = default;

	inline bool operator==(_21c64413b_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21c64413b_If _other) { return !this->operator==(_other); }


};
struct _21c64449e_Else {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();


	_21c64449e_Else(_21c627dde_Token __param_token, jule::Ptr<_21c6411e3_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_21c64449e_Else(void) = default;

	inline bool operator==(_21c64449e_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21c64449e_Else _other) { return !this->operator==(_other); }


};
struct _2202412da_MutSlicingExprModel {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_2202412da_MutSlicingExprModel(_21c627dde_Token __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_2202412da_MutSlicingExprModel(void) = default;

	inline bool operator==(_2202412da_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_2202412da_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _21c4d7b4a_Expr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();


	_21c4d7b4a_Expr(_21c627dde_Token __param_token, jule::Bool __param_range, jule::Any __param_kind): _field_token(__param_token), _field_range(__param_range), _field_kind(__param_kind) {}

	

	_21c4d7b4a_Expr(void) = default;

	inline bool operator==(_21c4d7b4a_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21c4d7b4a_Expr _other) { return !this->operator==(_other); }


};
struct _21c644ea5_TypeAliasDecl {
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();


	_21c644ea5_TypeAliasDecl(jule::Ptr<_21c6411e3_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _21c627dde_Token __param_token, jule::Str __param_ident, jule::Ptr<_21c5d253b_TypeDecl> __param_kind): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_21c644ea5_TypeAliasDecl(void) = default;

	inline bool operator==(_21c644ea5_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21c644ea5_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _21c6453b2_Case {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>();


	_21c6453b2_Case(_21c627dde_Token __param_token, jule::Ptr<_21c6411e3_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_21c6453b2_Case(void) = default;

	inline bool operator==(_21c6453b2_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21c6453b2_Case _other) { return !this->operator==(_other); }


};
struct _21c645912_MatchCase {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();
	jule::Slice<jule::Ptr<_21c6453b2_Case>> _field_cases = jule::Slice<jule::Ptr<_21c6453b2_Case>>();
	jule::Ptr<_21c64449e_Else> _field_default = jule::Ptr<_21c64449e_Else>();


	_21c645912_MatchCase(_21c627dde_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_21c4d7b4a_Expr> __param_expr, jule::Slice<jule::Ptr<_21c6453b2_Case>> __param_cases, jule::Ptr<_21c64449e_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_21c645912_MatchCase(void) = default;

	inline bool operator==(_21c645912_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21c645912_MatchCase _other) { return !this->operator==(_other); }


};
struct _21c6460a5_UseDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_21c627dde_Token> _field_selected = jule::Slice<_21c627dde_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_21c6460a5_UseDecl(_21c627dde_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_21c627dde_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_21c6460a5_UseDecl(void) = default;

	inline bool operator==(_21c6460a5_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_21c6460a5_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c646913_auto_expr(_21c6464b2_EnumItemDecl*);
struct _21c6464b2_EnumItemDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c6464b2_EnumItemDecl(_21c627dde_Token __param_token, jule::Str __param_ident, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_21c6464b2_EnumItemDecl(void) = default;

	inline bool operator==(_21c6464b2_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c6464b2_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c64702e_default_typed(_21c646d0e_EnumDecl*);
struct _21c646d0e_EnumDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>>();


	_21c646d0e_EnumDecl(_21c627dde_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_21c5d253b_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_21c646d0e_EnumDecl(void) = default;

	inline bool operator==(_21c646d0e_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_21c646d0e_EnumDecl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21dd1badc_ParamIns> _21dd17852_instance(jule::Ptr<_21dd17423_Param>);
inline jule::Bool _21dd17b2c_is_self(_21dd17423_Param*);
inline jule::Bool _21dd17e07_is_ref(_21dd17423_Param*);
struct _21dd17423_Param {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_21ec0aa85_TypeSymbol> _field_kind = jule::Ptr<_21ec0aa85_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_21dd17423_Param(_21c627dde_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_21ec0aa85_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_21dd17423_Param(void) = default;

	inline bool operator==(_21dd17423_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21dd17423_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _21dd19711_is_void(_21dd19249_Fn*);
inline jule::Bool _21dd199db_is_method(_21dd19249_Fn*);
inline jule::Bool _21dd19cb6_is_entry_point(_21dd19249_Fn*);
inline jule::Bool _21dd1a091_is_init(_21dd19249_Fn*);
inline jule::Bool _21dd1a36b_is_anon(_21dd19249_Fn*);
inline jule::Bool _21dd1a646_any_var(_21dd19249_Fn*);
inline jule::Bool _21dd1a965_parameters_uses_generics(_21dd19249_Fn*);
inline jule::Bool _21dd1ac2e_result_uses_generics(_21dd19249_Fn*);
inline jule::Ptr<_21dd1cc42_FnIns> _21dd1b009_instance_force(jule::Ptr<_21dd19249_Fn>);
inline jule::Ptr<_21dd1cc42_FnIns> _21dd1b2d4_instance(jule::Ptr<_21dd19249_Fn>);
inline std::tuple<jule::Bool,jule::I64> _21dd1b68b_append_instance(_21dd19249_Fn*,jule::Ptr<_21dd1cc42_FnIns>&);
struct _21dd19249_Fn {
	jule::Ptr<_21eb5443a_Sema> _field_sema = jule::Ptr<_21eb5443a_Sema>();
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Ptr<_21c6411e3_ScopeTree> _field_scope = jule::Ptr<_21c6411e3_ScopeTree>();
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21c640423_GenericDecl>>();
	jule::Ptr<_21dd16ac6_RetType> _field_result = jule::Ptr<_21dd16ac6_RetType>();
	jule::Slice<jule::Ptr<_21dd17423_Param>> _field_params = jule::Slice<jule::Ptr<_21dd17423_Param>>();
	jule::Ptr<_21dd03266_Struct> _field_owner = jule::Ptr<_21dd03266_Struct>();
	jule::Slice<jule::Ptr<_21dd1cc42_FnIns>> _field_instances = jule::Slice<jule::Ptr<_21dd1cc42_FnIns>>();


	_21dd19249_Fn(jule::Ptr<_21eb5443a_Sema> __param_sema, _21c627dde_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_directives, jule::Ptr<_21c6411e3_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_21c640423_GenericDecl>> __param_generics, jule::Ptr<_21dd16ac6_RetType> __param_result, jule::Slice<jule::Ptr<_21dd17423_Param>> __param_params, jule::Ptr<_21dd03266_Struct> __param_owner, jule::Slice<jule::Ptr<_21dd1cc42_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {}

	

	_21dd19249_Fn(void) = default;

	inline bool operator==(_21dd19249_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_21dd19249_Fn _other) { return !this->operator==(_other); }


};
struct _21c64756d_FieldDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21c5d253b_TypeDecl> _field_kind = jule::Ptr<_21c5d253b_TypeDecl>();
	jule::Ptr<_21c4d7b4a_Expr> _field_default = jule::Ptr<_21c4d7b4a_Expr>();


	_21c64756d_FieldDecl(_21c627dde_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_21c5d253b_TypeDecl> __param_kind, jule::Ptr<_21c4d7b4a_Expr> __param_default): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_21c64756d_FieldDecl(void) = default;

	inline bool operator==(_21c64756d_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21c64756d_FieldDecl _other) { return !this->operator==(_other); }


};
struct _21c647c11_StructDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_21c64756d_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_21c64756d_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_21c525490_Directive>> _field_directives = jule::Slice<jule::Ptr<_21c525490_Directive>>();
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21c640423_GenericDecl>>();


	_21c647c11_StructDecl(_21c627dde_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_21c64756d_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_21c525490_Directive>> __param_directives, jule::Slice<jule::Ptr<_21c640423_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics) {}

	

	_21c647c11_StructDecl(void) = default;

	inline bool operator==(_21c647c11_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_21c647c11_StructDecl _other) { return !this->operator==(_other); }


};
struct _21c6481b7_TraitDecl {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_21c641633_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_21c641633_FnDecl>>();


	_21c6481b7_TraitDecl(_21c627dde_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Slice<jule::Ptr<_21c641633_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_methods(__param_methods) {}

	

	_21c6481b7_TraitDecl(void) = default;

	inline bool operator==(_21c6481b7_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_21c6481b7_TraitDecl _other) { return !this->operator==(_other); }


};
struct _21dd27b09_Pass {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_text = jule::Str();


	_21dd27b09_Pass(_21c627dde_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_21dd27b09_Pass(void) = default;

	inline bool operator==(_21dd27b09_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_21dd27b09_Pass _other) { return !this->operator==(_other); }


};
struct _21c4d7d6a_UseExpr {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Ptr<_21c4d7b4a_Expr> _field_expr = jule::Ptr<_21c4d7b4a_Expr>();


	_21c4d7d6a_UseExpr(_21c627dde_Token __param_token, jule::Ptr<_21c4d7b4a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21c4d7d6a_UseExpr(void) = default;

	inline bool operator==(_21c4d7d6a_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21c4d7d6a_UseExpr _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_220d8cc38_ObjectCoder> static__220d8ae01_new(jule::Ptr<_21ccec4b4_IR>&,_220da8b44_SerializationInfo);
inline void _22026e58d_add_indent(_220d8cc38_ObjectCoder*);
inline void _220d82cb6_done_indent(_220d8cc38_ObjectCoder*);
inline jule::Str _220d82623_indent(_220d8cc38_ObjectCoder*);
inline jule::I64 _220dab707_find_type_offset(_220d8cc38_ObjectCoder*,jule::Ptr<_21deee929_Trait>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Str _220dabe33_loc_info(_220d8cc38_ObjectCoder*,_21c627dde_Token&);
inline jule::Str _220d90752_links(_220d8cc38_ObjectCoder*);
inline jule::Str _220dcbeb9_param_ins(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd1badc_ParamIns>&);
inline jule::Str _220dcc12e_param(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd17423_Param>&);
inline jule::Str _220dcc294_params(_220d8cc38_ObjectCoder*,jule::Slice<jule::Ptr<_21dd17423_Param>>&);
inline jule::Str _220dcc409_params_ins(_220d8cc38_ObjectCoder*,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>&);
inline jule::Str _220dcc56e_params_decls(_220d8cc38_ObjectCoder*,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>&);
inline void _220dcc6d4_prepare_structure(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd03266_Struct>&);
inline void _220dcc849_prepare_structures(_220d8cc38_ObjectCoder*);
inline void _220dcc9ae_build_trait_wrapper(_220d8cc38_ObjectCoder*,jule::Ptr<_220d89141_TraitHash>&);
inline void _220dccb24_trait_decl(_220d8cc38_ObjectCoder*,jule::Ptr<_21deee929_Trait>&);
inline void _220dccc89_trait_decls(_220d8cc38_ObjectCoder*,jule::Ptr<_21eb4d269_Package>&);
inline jule::Str _220dccdee_structure_plain_decl(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd03266_Struct>&);
inline jule::Str _220dcd064_structure_plain_decls(_220d8cc38_ObjectCoder*);
inline jule::Str _220dcd1c9_var_init_expr(_220d8cc38_ObjectCoder*,jule::Ptr<_21eb75615_Var>&,jule::Str);
inline jule::Str _220dcd33e_var(_220d8cc38_ObjectCoder*,jule::Ptr<_21eb75615_Var>);
inline jule::Str _220dcd4a4_field_decl(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd05be7_FieldIns>&);
inline jule::Str _220dcd619_structure_constructor(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dcd77e_structure_destructor(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline void _220dcd8e4_structure_operator_eq(_220d8cc38_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_21dd06742_StructIns>&);
inline void _220dcda59_structure_operator_not_eq(_220d8cc38_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_21dd06742_StructIns>&);
inline void _220dcdc46_structure_operator(_220d8cc38_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_21dd1cc42_FnIns>&,jule::Str);
inline jule::Str _220dce0dc_structure_operators(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dce4d8_structure_derive_defs_decls(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dce87e_structure_ins_decl(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dcec36_structure_decl(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd03266_Struct>&);
inline jule::Str _220dd0011_structure_decls(_220d8cc38_ObjectCoder*);
inline jule::Str _220dd0495_func_head(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd1cc42_FnIns>&,jule::Bool);
inline jule::Str _220dd0929_func_decl(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd19249_Fn>&,jule::Bool);
inline jule::Str _220dd0cd1_func_decls(_220d8cc38_ObjectCoder*,jule::Ptr<_21eb4d269_Package>&);
inline void _220dd1023_build_trait_map(_220d8cc38_ObjectCoder*);
inline void _220dd1265_process_traits(_220d8cc38_ObjectCoder*);
inline jule::Str _220dd1540_decls(_220d8cc38_ObjectCoder*);
inline jule::Str _220dd19c4_pkg_globals(_220d8cc38_ObjectCoder*,jule::Ptr<_21eb4d269_Package>&,jule::Str&);
inline jule::Str _220dd1d7b_globals(_220d8cc38_ObjectCoder*,jule::Str&);
inline jule::Str _220dd2233_func(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd19249_Fn>&);
inline jule::Str _220dd25da_pkg_funcs(_220d8cc38_ObjectCoder*,jule::Ptr<_21eb4d269_Package>&);
inline jule::Str _220dd2992_structure_methods(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dd2d49_structure_ostream(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dd3201_structure_derive_defs(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dd35a8_structure_ins(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd06742_StructIns>&);
inline jule::Str _220dd3960_structure(_220d8cc38_ObjectCoder*,jule::Ptr<_21dd03266_Struct>&);
inline jule::Str _220dd3c3a_structures(_220d8cc38_ObjectCoder*);
inline jule::Str _220dd4015_funcs(_220d8cc38_ObjectCoder*);
inline void _220dd4411_push_init(_220d8cc38_ObjectCoder*,jule::Ptr<_21eb4d269_Package>&,jule::Str&);
inline jule::Str _220dd47b8_init_caller(_220d8cc38_ObjectCoder*,jule::Str&);
inline void _220dd4ad7_append_standard(_220d8cc38_ObjectCoder*,jule::Str&);
inline jule::Str _220dd4db2_serialize(_220d8cc38_ObjectCoder*);
struct _220d8cc38_ObjectCoder {
	jule::Ptr<_21ccec4b4_IR> _field_ir = jule::Ptr<_21ccec4b4_IR>();
	_220da8b44_SerializationInfo _field_info = _220da8b44_SerializationInfo();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Str _field_trait_declarations = jule::Str();
	jule::Str _field_trait_wrappers = jule::Str();
	jule::Str _field_trait_data = jule::Str();
	jule::Str _field_trait_data_t = jule::Str();
	jule::Slice<jule::Ptr<_220d89141_TraitHash>> _field_trait_map = jule::Slice<jule::Ptr<_220d89141_TraitHash>>();
	jule::Ptr<_2201e99be_ExprCoder> _field_ec = jule::Ptr<_2201e99be_ExprCoder>();
	jule::Ptr<_220151b8a_ScopeCoder> _field_sc = jule::Ptr<_220151b8a_ScopeCoder>();


	_220d8cc38_ObjectCoder(jule::Ptr<_21ccec4b4_IR> __param_ir, _220da8b44_SerializationInfo __param_info, jule::Str __param_indent_buffer, jule::Str __param_trait_declarations, jule::Str __param_trait_wrappers, jule::Str __param_trait_data, jule::Str __param_trait_data_t, jule::Slice<jule::Ptr<_220d89141_TraitHash>> __param_trait_map, jule::Ptr<_2201e99be_ExprCoder> __param_ec, jule::Ptr<_220151b8a_ScopeCoder> __param_sc): _field_ir(__param_ir), _field_info(__param_info), _field_indent_buffer(__param_indent_buffer), _field_trait_declarations(__param_trait_declarations), _field_trait_wrappers(__param_trait_wrappers), _field_trait_data(__param_trait_data), _field_trait_data_t(__param_trait_data_t), _field_trait_map(__param_trait_map), _field_ec(__param_ec), _field_sc(__param_sc) {}

	

	_220d8cc38_ObjectCoder(void) = default;

	inline bool operator==(_220d8cc38_ObjectCoder _other) {
		return 
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_trait_declarations == _other._field_trait_declarations &&
			this->_field_trait_wrappers == _other._field_trait_wrappers &&
			this->_field_trait_data == _other._field_trait_data &&
			this->_field_trait_data_t == _other._field_trait_data_t &&
			this->_field_trait_map == _other._field_trait_map &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_220d8cc38_ObjectCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _21dd3d59d_to_str(_21deee929_Trait*);
inline jule::Bool _21dd40bdd_equals(jule::Ptr<_21deee929_Trait>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Bool _21dd79c7c_is_builtin(_21deee929_Trait*);
inline jule::Ptr<_21dd19249_Fn> _21dd94deb_find_method(_21deee929_Trait*,jule::Str);
struct _21deee929_Trait {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_21dd19249_Fn>> _field_methods = jule::Slice<jule::Ptr<_21dd19249_Fn>>();
	jule::Slice<jule::Ptr<_21dd03266_Struct>> _field_implemented = jule::Slice<jule::Ptr<_21dd03266_Struct>>();


	_21deee929_Trait(_21c627dde_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Slice<jule::Ptr<_21dd19249_Fn>> __param_methods, jule::Slice<jule::Ptr<_21dd03266_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_21deee929_Trait(void) = default;

	inline bool operator==(_21deee929_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_21deee929_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _21ddd8318_auto_expr(_21dd39e29_EnumItem*);
struct _21dd39e29_EnumItem {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21ebbe362_Value> _field_value = jule::Ptr<_21ebbe362_Value>();


	_21dd39e29_EnumItem(_21c627dde_Token __param_token, jule::Str __param_ident, jule::Ptr<_21ebbe362_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_21dd39e29_EnumItem(void) = default;

	inline bool operator==(_21dd39e29_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_21dd39e29_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _21e0b22e4_to_str(_21ddb6aee_Enum*);
inline jule::Bool _21e0ba2db_equals(jule::Ptr<_21ddb6aee_Enum>,jule::Ptr<_21ec06223_TypeKind>);
inline jule::Ptr<_21dd39e29_EnumItem> _21e0e5ca6_find_item(_21ddb6aee_Enum*,jule::Str);
struct _21ddb6aee_Enum {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_21ec0aa85_TypeSymbol> _field_kind = jule::Ptr<_21ec0aa85_TypeSymbol>();
	jule::Slice<jule::Ptr<_21dd39e29_EnumItem>> _field_items = jule::Slice<jule::Ptr<_21dd39e29_EnumItem>>();


	_21ddb6aee_Enum(_21c627dde_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_21ec0aa85_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_21dd39e29_EnumItem>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_21ddb6aee_Enum(void) = default;

	inline bool operator==(_21ddb6aee_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_21ddb6aee_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _21c550d7d_is_decl(_21c523c63_Node*);
inline jule::Bool _21c5a4596_is_directive(_21c523c63_Node*);
inline jule::Bool _21c5bb6e0_is_impl(_21c523c63_Node*);
inline jule::Bool _21c5c76c9_is_use_decl(_21c523c63_Node*);
struct _21c523c63_Node {
	_21c627dde_Token _field_token = _21c627dde_Token();
	jule::Any _field_data = jule::Any();


	_21c523c63_Node(_21c627dde_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_21c523c63_Node(void) = default;

	inline bool operator==(_21c523c63_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_21c523c63_Node _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _220e04266_parse_integer_0(_220e03b39_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _220e04266_parse_integer_1(_220e03b39_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _220e04541_get_data(_220e03b39_ArgParser*);
inline jule::VoidExceptional _220e04860_process_flag(_220e03b39_ArgParser*,jule::Trait<_220dee393_CommonFlag>&);
inline jule::VoidExceptional _220e04b7e_single_dash(_220e03b39_ArgParser*,jule::Str&);
inline jule::VoidExceptional _220e04e9d_double_dash(_220e03b39_ArgParser*,jule::Str&);
inline jule::VoidExceptional _220e051e0_try_arg(_220e03b39_ArgParser*);
inline jule::VoidExceptional _220e05432_parse(_220e03b39_ArgParser*);
struct _220e03b39_ArgParser {
	_220e00b7a_FlagSet _field_set = _220e00b7a_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();


	_220e03b39_ArgParser(_220e00b7a_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::I64 __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_220e03b39_ArgParser(void) = default;

	inline bool operator==(_220e03b39_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_220e03b39_ArgParser _other) { return !this->operator==(_other); }


};
inline void _2359a5c59_push_opt_level(jule::I64);
inline void _235a95ae6_free(void*);
inline jule::Str _235abcdb5_byte_ptr_to_str(jule::U8*);
inline jule::I64 _235a3ac89_get_last_errno(void);
inline jule::I64 _235a44523_stat(jule::U8*,struct stat*);
inline jule::I64 _235a9276e_open(jule::U8*,jule::I64,jule::I64);
inline jule::U8* _235a7e23e_getcwd(jule::U8*,jule::U64);
inline DIR* _235abd1d4_opendir(jule::U8*);
inline struct dirent* _235abd349_readdir(DIR*);
inline jule::I64 _235abd6e0_closedir(DIR*);
inline jule::I64 _235abdb30_mkdir(jule::U8*,jule::I64);
inline jule::I64 _235abdc95_rmdir(jule::U8*);
inline jule::I64 _235abde0a_unlink(jule::U8*);
inline jule::I64 _235ac03d4_seek(jule::I64,jule::I64,jule::I64);
inline jule::I64 _235ac089b_read(jule::I64,void*,jule::U64);
inline jule::I64 _235ac0c42_close(jule::I64);
inline jule::I64 _235ac1209_write(jule::I64,void*,jule::U64);
inline void _235ac147e_exit(jule::I64);
inline jule::I64 _235b5cc8a_get_last_os_error(void);
inline jule::Slice<jule::Str> _235b5dac1_args(void);
inline jule::Exceptional<jule::Str> _235b5de9a_working_dir(void);
inline jule::Exceptional<jule::Str> _235b5e96d___getwd(void);
inline jule::Slice<jule::U8> _2367dab37_stobs(jule::Str&);
inline jule::Bool _21c2957c6_is_letter(jule::I32);
inline jule::Bool _21c2d7e78_is16(jule::Slice<_21c2d5d88_Range16>,jule::U16);
inline jule::Bool _21c2d8363_is32(jule::Slice<_21c2d642c_Range32>,jule::U32);
inline jule::Bool _21c2d8bc1_is_excluding_latin(jule::Ptr<_21c2d697c_RangeTable>,jule::I32);
inline std::tuple<jule::I32,jule::I64> _2368b6262_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _2368b68c2_decode_last_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _2368b784b_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _2368b7c36_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::I64 _2368b8352_rune_count_str(jule::Str);
inline jule::Bool _2368b8660_rune_start(jule::U8);
inline jule::Str _2368293b2_repeat(jule::Str,jule::I64);
inline jule::Bool _2368395d1__has_prefix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _236849954_has_prefix(jule::Str,jule::Str);
inline jule::Bool _236852187__has_suffix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _23688d1b2_has_suffix(jule::Str,jule::Str);
inline jule::I64 _236819e1e_find_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _2368b9353_find_last_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _2368b94b8_find_last(jule::Str,jule::Str);
inline jule::I64 _2368b9bd3__find_rune(jule::Slice<jule::U8>&,jule::I32);
inline jule::I64 _2368ba1de_find_last_byte(jule::Str,jule::U8);
inline jule::I64 _2368ba794_find_any(jule::Str,jule::Str);
inline jule::Slice<jule::Str> _2368baa6e_split(jule::Str,jule::Str,jule::I64);
inline jule::Bool _2368babd4_contains(jule::Str,jule::Str);
inline jule::Bool _2368bb6a7_contains_any(jule::Str,jule::Str);
inline jule::Str _2368bc136_replace(jule::Str,jule::Str,jule::Str,jule::I64);
inline void _2368bd236__trim_left(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _2368bd5bb_trim_left(jule::Str,jule::Str);
inline void _2368bd91d__trim_right(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _2368be1e3_trim(jule::Str,jule::Str);
inline jule::Str _235b71430_clean(jule::Str);
inline jule::Str _235b7d7c2_from_slash(jule::Str);
inline jule::Str _235b71c27_join(jule::Slice<jule::Str>);
inline jule::Str _235b88975_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _235b9c428_abs(jule::Str);
inline jule::Str _235ba4c8d_base(jule::Str);
inline jule::Str _235ba6432_dir(jule::Str);
inline jule::Str _235baba0e_volume_name(jule::Str);
inline jule::Bool _235bb5d04_is_path_sep(jule::U8);
inline jule::Bool _235ba363d_is_abs(jule::Str);
inline jule::I64 _235ba5cb1_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _2367d2d82___abs(jule::Str);
inline jule::Str _2368be996_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _2368beb0b___join(jule::Slice<jule::Str>);
inline jule::I64 _235a1c573_get_last_fs_error(void);
inline jule::I64 _21c383e03_get_last_process_error(void);
inline jule::Slice<char*> _21c38727a_str_slice_to_cstr_slice(jule::Slice<jule::Str>);
inline jule::I64 _21c3876dc_execvp(jule::Str,jule::Slice<jule::Str>);
inline jule::I64 _21c387ba4_execve(jule::Str,jule::Slice<jule::Str>,jule::Slice<jule::Str>);
inline void _21c388963_exit(jule::I64);
inline jule::Str _21c388b94_executable(void);
inline jule::Bool _236920794_is_std_header_path(jule::Str);
inline jule::Bool _236920909_is_valid_header_ext(jule::Str);
inline jule::Bool _236920ae6_is_valid_cpp_ext(jule::Str);
inline jule::Str _21c34911b_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _21c34946d_arg_to_str(jule::Any);
inline jule::I64 _21c34977b_find_next_fmt(jule::Str);
inline jule::Str _21c349baa_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21c34adba_is_top_directive(jule::Str);
inline jule::Bool _21c34cb36_is_windows(jule::Str);
inline jule::Bool _21c34ce88_is_darwin(jule::Str);
inline jule::Bool _21c34d296_is_linux(jule::Str);
inline jule::Bool _21c34d5e8_is_i386(jule::Str);
inline jule::Bool _21c34d906_is_amd64(jule::Str);
inline jule::Bool _21c34dc14_is_arm64(jule::Str);
inline jule::Bool _21c34e022_is_unix(jule::Str);
inline jule::Bool _21c34e3b8_is_32bit(jule::Str);
inline jule::Bool _21c34e6c6_is_64bit(jule::Str);
inline void _21c35d33e_init(void);
inline jule::Bool _21c628708_is_unary_op(jule::Str);
inline jule::Bool _21c628a5a_is_bin_op(jule::Str);
inline jule::Bool _21c6291ba_is_str(jule::Str);
inline jule::Bool _21c6294c8_is_raw_str(jule::Str);
inline jule::Bool _21c6297d6_is_rune(jule::Str);
inline jule::Bool _21c629e8a_is_bool(jule::Str);
inline jule::Bool _21c62a298_is_float(jule::Str);
inline jule::Bool _21c62a5a6_is_num(jule::Str);
inline jule::Bool _21c62abc2_is_ignore_ident(jule::Str);
inline jule::Bool _21c62aed0_is_anon_ident(jule::Str);
inline jule::Bool _21c62b5eb_is_space(jule::I32);
inline jule::Bool _21c62ba2a_is_letter(jule::I32);
inline jule::Bool _21c62c146_is_decimal(jule::U8);
inline jule::Bool _21c62c454_is_binary(jule::U8);
inline jule::Bool _21c62c762_is_octal(jule::U8);
inline jule::Bool _21c62ca70_is_hex(jule::U8);
inline jule::Bool _21c62cd7d_is_assign(jule::U64);
inline jule::Bool _21c62d18b_is_postfix_op(jule::Str);
inline jule::Bool _21c62d499_is_assign_op(jule::Str);
inline jule::Ptr<_21c62e038_File> _21c6308ca_new_file_set(jule::Str);
inline _21c348b32_Log _21c632404_make_err(jule::I64,jule::I64,jule::Ptr<_21c62e038_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21c632833_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _21c632c1d_float_fmt_e(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c63314c_float_fmt_p(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c633537_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c633922_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c633d0c_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c634280_float_num(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c63458d_common_num(jule::Slice<jule::U8>&);
inline jule::Str _21c63489b_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _21c634c86_is_float_fmt_e(jule::U8,jule::I64);
inline jule::Bool _21c635171_is_float_fmt_p(jule::U8,jule::I64);
inline jule::Bool _21c63555b_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _21c635946_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _21c635d31_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c636260_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _21c63656d_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _21c636958_hex_escape(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _21c636caa_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _21c6370eb_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _21c6373e8_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _21c637706_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_21c348b32_Log> _21c63d223_lex(jule::Ptr<_21c62e038_File>,jule::I64);
inline jule::Bool _21c4a3682_find_module_file(jule::Slice<jule::Ptr<_235a1da19_DirEntry>>&);
inline jule::Str _21c491d79_find_module_file_deep(jule::Str);
inline jule::Slice<_21c348b32_Log> _21c4924c8_check_module_file(jule::Str);
inline jule::Ptr<_21cb7e09e_FileInfo> _21cb7e4de_parse_file(jule::Ptr<_21c62e038_File>);
inline std::tuple<jule::Ptr<_21c4cc2b0_Ast>,jule::Slice<_21c348b32_Log>> _21cb7e841_parse_fileset(jule::Ptr<_21c62e038_File>);
inline jule::Ptr<_21c6411e3_ScopeTree> _21cb80523_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _21cb80798_is_st(_21c627dde_Token,_21c627dde_Token);
inline jule::Bool _21cb80bc7_prev_is_incomplete_expr(jule::Slice<_21c627dde_Token>&,jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _21cb810e5_next_st_pos(jule::Slice<_21c627dde_Token>&,jule::I64);
inline std::tuple<jule::Slice<_21c627dde_Token>,jule::Bool> _21cb814d0_skip_st(jule::I64&,jule::Slice<_21c627dde_Token>);
inline jule::Slice<jule::Ptr<_21cb81876_Stmt>> _21cb81c83_split_stmts(jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21cb95ec8_CallData> _21cb963a2_get_call_data(jule::Slice<_21c627dde_Token>&);
inline jule::Slice<_21c627dde_Token> _21cb96704_get_block_expr(jule::Slice<_21c627dde_Token>&);
inline std::tuple<jule::Slice<_21c627dde_Token>,jule::Slice<_21c627dde_Token>> _21cb96a12_split_colon(jule::Slice<_21c627dde_Token>&);
inline jule::I64 _21cb96d64_find_lowest_prec_op(jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c4d8b4b_IdentExpr> _21cb97172_build_ident_expr(_21c627dde_Token&);
inline std::tuple<jule::Slice<_21c627dde_Token>,jule::I64> _21cb97480_get_range_expr_tokens(jule::Slice<_21c627dde_Token>&);
inline jule::Bool _21cba558c_check_assign_tokens(jule::Slice<_21c627dde_Token>&);
inline _21c348b32_Log _21cba6d74_make_err(jule::I64,jule::I64,jule::Ptr<_21c62e038_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_21c627dde_Token> _21cba7429_range(jule::I64&,jule::Str,jule::Str,jule::Slice<_21c627dde_Token>&);
inline std::tuple<jule::Slice<_21c627dde_Token>,jule::Slice<_21c627dde_Token>> _21cba7737_range_last(jule::Slice<_21c627dde_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_21c627dde_Token>>,jule::Slice<_21c348b32_Log>> _21cba7c43_parts(jule::Slice<_21c627dde_Token>&,jule::U64,jule::Bool);
inline jule::Str _21cba8095_get_close_kind_of_brace(jule::Str);
inline _21c348b32_Log _21cba854b_compiler_err(_21c627dde_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _21cba897a_push_suggestion(_21c348b32_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Str _21cba8d21_tokstoa(jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbce78_build_void_type(void);
inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbd1cb_build_prim_type(_21c627dde_Token);
inline std::tuple<jule::Slice<_21c627dde_Token>,jule::I64> _21cbbd5b6_split_map_range(jule::Slice<_21c627dde_Token>&,jule::I64&);
inline jule::I64 _21e9ecd50_leading_zeros64(jule::U64);
inline jule::I64 _21e9ed8de_trailing_zeros(jule::U64);
inline jule::I64 _21e9ee3a1_trailing_zeros32(jule::U32);
inline jule::I64 _21e9ee6ae_trailing_zeros64(jule::U64);
inline jule::I64 _21ea053c9_len32(jule::U32);
inline jule::I64 _21ea056d7_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _21ea0662d_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _21ea08234_mul64(jule::U64,jule::U64);
inline jule::U32 _21e934957_f32_bits(jule::F32);
inline jule::F32 _21e934b99_f32_from_bits(jule::U32);
inline jule::U64 _21e934ea7_f64_bits(jule::F64);
inline jule::F64 _21e935309_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _21e9375a3_frexp(jule::F64);
inline jule::F64 _21e957b45_nan(void);
inline jule::Bool _21e95a52c_is_nan(jule::F64);
inline jule::F64 _21e95aa7c_inf(jule::I64);
inline jule::Bool _21e96c4a6_is_inf(jule::F64,jule::I64);
inline std::tuple<jule::F64,jule::I64> _21e989803_normalize(jule::F64);
inline jule::F64 _21e980365_log(jule::F64);
inline jule::F64 _21ea0b5bc_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _21ea0d190_modf(jule::F64);
inline jule::F64 _21ea0d624_log2(jule::F64);
inline jule::Str _21e2789d8_fmt_float(jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _21e29451a_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _21e2dd630_big_ftoa(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_21e68dda9_FloatInfo&);
inline jule::Slice<jule::U8> _21e426449_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_21e223b3c_DecimalSlice,jule::I64,jule::U8);
inline void _21e467d92_round_shortest(_21ea2ce18_Decimal&,jule::U64,jule::I64,_21e68dda9_FloatInfo&);
inline jule::Slice<jule::U8> _21e601bc9_fmt_e(jule::Slice<jule::U8>,jule::Bool,_21e223b3c_DecimalSlice,jule::I64,jule::U8);
inline jule::Slice<jule::U8> _21e24e63a_fmt_f(jule::Slice<jule::U8>,jule::Bool,_21e223b3c_DecimalSlice,jule::I64);
inline jule::Slice<jule::U8> _21e294828_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::I64,_21e68dda9_FloatInfo&);
inline jule::Slice<jule::U8> _21e2642cb_fmt_x(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_21e68dda9_FloatInfo&);
inline jule::I64 _21e2cb222_min(jule::I64,jule::I64);
inline jule::I64 _21e413304_max(jule::I64,jule::I64);
inline jule::U8 _21e417b44_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _21e5dd028___parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::U64> _21e69629b_parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::I64> _21e21d609_parse_int(jule::Str,jule::I64,jule::I64);
inline std::tuple<jule::F64,jule::Bool> _21e2e2dd7_eisel_lemire64(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _21e393707_eisel_lemire32(jule::U64,jule::I64,jule::Bool);
inline jule::I64 _21e42b9c1_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _21e22381d_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _21e4eace3_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _21e32d20d_atof64exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _21e5890e5_atof32exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F64,jule::I64> _21e6098c4_atof_hex(jule::Str,_21e68dda9_FloatInfo&,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _21e71ae9c_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _21e7a3a90_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _21e6b41a9_parse_float_prefix(jule::Str,jule::I64);
inline jule::Exceptional<jule::F64> _21e4567a9_parse_float(jule::Str,jule::I64);
inline void _21e469019_ryu_ftoa_fixed32(_21e223b3c_DecimalSlice&,jule::U32,jule::I64,jule::I64);
inline void _21e65910a_ryu_ftoa_fixed64(_21e223b3c_DecimalSlice&,jule::U64,jule::I64,jule::I64);
inline void _21e21e572_format_decimal(_21e223b3c_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::I64);
inline void _21e21e6d7_ryu_ftoa_shortest(_21e223b3c_DecimalSlice&,jule::U64,jule::I64,_21e68dda9_FloatInfo&);
inline jule::I64 _21e205316_mul_by_log2_log10(jule::I64);
inline jule::I64 _21e20547b_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _21e2aa894_compute_bounds(jule::U64,jule::I64,_21e68dda9_FloatInfo&);
inline void _21e2aaa09_ryu_digits(_21e223b3c_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _21ea2c324_ryu_digits32(_21e223b3c_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _21ea2c489_mult64bit_pow10(jule::U32,jule::I64,jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _21ea2c5ee_mult128bit_pow10(jule::U64,jule::I64,jule::I64);
inline jule::Bool _21ea2c764_divisible_by_pow5(jule::U64,jule::I64);
inline std::tuple<jule::U32,jule::U32> _21ea2c8c9_divmod1e9(jule::U64);
inline void _21ea2db2d_trim(_21ea2ce18_Decimal&);
inline void _21ea2dc93_right_shift(_21ea2ce18_Decimal&,jule::U64);
inline jule::Bool _21ea2de08_prefix_is_less_than(jule::Array<jule::U8,800>,jule::I64,jule::Str);
inline void _21ea2e06d_left_shift(_21ea2ce18_Decimal&,jule::U64);
inline jule::Bool _21ea2e1d3_should_round_up(_21ea2ce18_Decimal&,jule::I64);
inline jule::Str _21ea2e502_fmt_uint(jule::U64,jule::I64);
inline jule::Str _21ea2e667_fmt_int(jule::I64,jule::I64);
inline jule::Str _21ea2e7cc_itoa(jule::I64);
inline jule::Str _21ea2e942_small(jule::I64);
inline jule::Bool _21ea2eaa7_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _21ea2ec1c_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline void _21eaa7d50_lshift_unsig(_21ea9d450_Const&,_21ea9d450_Const&);
inline void _21eaa81e6_rshift_unsig(_21ea9d450_Const&,_21ea9d450_Const&);
inline jule::Str _21eb1ea87_real_kind_of(jule::Str);
inline jule::I64 _21eb1ed2e_bitsize_of(jule::Str);
inline jule::Str _21eb2015e_int_from_bits(jule::I64);
inline jule::Str _21eb2046c_uint_from_bits(jule::I64);
inline jule::Str _21eb2077a_float_from_bits(jule::I64);
inline jule::Bool _21eb214c3_check_bit_float(jule::Str,jule::I64);
inline jule::I64 _21eb217d1_bitsize_of_float(jule::F64);
inline jule::I64 _21eb21ade_bitsize_of_int(jule::I64);
inline jule::I64 _21eb21dec_bitsize_of_uint(jule::U64);
inline void _21eb22095_update_target(void);
inline void _21eb2223d_init(void);
inline jule::F64 _21eb24a59_min(jule::Str);
inline jule::F64 _21eb24dab_max(jule::Str);
inline jule::Bool _21eb25384_is_i8_compatible(jule::Str);
inline jule::Bool _21eb256d6_is_i16_compatible(jule::Str);
inline jule::Bool _21eb259e4_is_i32_compatible(jule::Str);
inline jule::Bool _21eb25d46_is_i64_compatible(jule::Str);
inline jule::Bool _21eb26154_is_u8_compatible(jule::Str);
inline jule::Bool _21eb26462_is_u16_compatible(jule::Str);
inline jule::Bool _21eb26770_is_u32_compatible(jule::Str);
inline jule::Bool _21eb26b16_is_u64_compatible(jule::Str);
inline jule::Bool _21eb26e24_is_f32_compatible(jule::Str);
inline jule::Bool _21eb27232_is_f64_compatible(jule::Str);
inline jule::Bool _21eb2761c_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _21eb2792a_is_i16_greater(jule::Str);
inline jule::Bool _21eb27c38_is_i32_greater(jule::Str);
inline jule::Bool _21eb28046_is_i64_greater(jule::Str);
inline jule::Bool _21eb28354_is_u16_greater(jule::Str);
inline jule::Bool _21eb28783_is_u32_greater(jule::Str);
inline jule::Bool _21eb28a91_is_u64_greater(jule::Str);
inline jule::Bool _21eb28d9e_is_f32_greater(jule::Str);
inline jule::Bool _21eb291ac_is_f64_greater(jule::Str);
inline jule::Bool _21eb29597_is_greater(jule::Str,jule::Str);
inline jule::Bool _21eb2aac6_is_sig_int(jule::Str);
inline jule::Bool _21eb2ae28_is_unsig_int(jule::Str);
inline jule::Bool _21eb2b236_is_int(jule::Str);
inline jule::Bool _21eb2b588_is_float(jule::Str);
inline jule::Bool _21eb2b896_is_num(jule::Str);
inline jule::Bool _21eb7ee5a_is_ascii(jule::I32);
inline jule::I32 _21eb80444_to_rune(jule::Slice<jule::U8>);
inline jule::Str _21eba32ad_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _21eba3610_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _21eba391d_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _21eba3d08_rune_from_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::Slice<jule::U8> _21eba41e3_str_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::I64 _21ec7e675_find_format_prefix(jule::Slice<jule::U8>&,jule::I64&);
inline jule::Slice<jule::U8> _21ec5d6ed_get_format_range(jule::I64&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _21ec69dd0_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _21ec5bc4b_apply_fmt_by_default(jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _21ec73c41_apply_fmt(jule::Slice<jule::U8>&,jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _21ec66b79_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _21ec78075_format(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21dd1e89d_kind_uses_generics(jule::Ptr<_21ec06223_TypeKind>,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>&);
inline jule::Bool _21dd1ed21_parameter_uses_generics(jule::Ptr<_21dd17423_Param>&,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>&);
inline jule::Ptr<_21ec0aa85_TypeSymbol> _21dd27ec2_build_type(jule::Ptr<_21c5d253b_TypeDecl>);
inline jule::Ptr<_21ebbe362_Value> _21dd28324_build_expr(jule::Ptr<_21c4d7b4a_Expr>);
inline jule::Ptr<_21ec05288_TypeAlias> _21dd28632_build_type_alias(jule::Ptr<_21c644ea5_TypeAliasDecl>);
inline jule::Ptr<_21dc10607_Field> _21dd28984_build_field(jule::Ptr<_21c64756d_FieldDecl>);
inline jule::Slice<jule::Ptr<_21dc10607_Field>> _21dd28c92_build_fields(jule::Slice<jule::Ptr<_21c64756d_FieldDecl>>&);
inline jule::Ptr<_21dd03266_Struct> _21dd290a0_build_struct(jule::Ptr<_21c647c11_StructDecl>);
inline jule::Ptr<_21dd17423_Param> _21dd293ad_build_param(jule::Ptr<_21c641413_ParamDecl>);
inline jule::Slice<jule::Ptr<_21dd17423_Param>> _21dd29754_build_params(jule::Slice<jule::Ptr<_21c641413_ParamDecl>>&);
inline jule::Ptr<_21dd16ac6_RetType> _21dd29a62_build_ret_type(jule::Ptr<_21c4d792a_RetTypeDecl>);
inline jule::Ptr<_21dd19249_Fn> _21dd29d70_build_fn(jule::Ptr<_21c641633_FnDecl>);
inline jule::Slice<jule::Ptr<_21dd19249_Fn>> _21dd2a17d_build_methods(jule::Slice<jule::Ptr<_21c641633_FnDecl>>&);
inline jule::Ptr<_21deee929_Trait> _21dd2a48b_build_trait(jule::Ptr<_21c6481b7_TraitDecl>);
inline jule::Ptr<_21dd39e29_EnumItem> _21dd2a799_build_enum_item(jule::Ptr<_21c6464b2_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_21dd39e29_EnumItem>> _21dd2aaa7_build_enum_items(jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>>&);
inline jule::Ptr<_21ddb6aee_Enum> _21dd2adb5_build_enum(jule::Ptr<_21c646d0e_EnumDecl>);
inline jule::Ptr<_21eb75615_Var> _21dd2b2e4_build_var(jule::Ptr<_21c64205c_VarDecl>);
inline jule::Slice<jule::Ptr<_21eb75615_Var>> _21dd2b602_build_vars(jule::Slice<jule::Ptr<_21c64205c_VarDecl>>);
inline jule::Ptr<_21de24992_Impl> _21dd2b910_build_impl(jule::Ptr<_21c64866d_Impl>);
inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb06d9e_new_scope_checker_base(jule::Ptr<_21eb5443a_Sema>&,jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21ead1c69_new_scope_checker(jule::Ptr<_21eb5443a_Sema>&,jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Ptr<_21eb2e8dd_ScopeLabel> _21eac4c90_find_label_parent(jule::Str,jule::Ptr<_21eb2ed2d_ScopeChecker>);
inline jule::Bool _21eadbb75_stmt_is_goto_scope(jule::Any&,jule::Ptr<_21eb1472a_Scope>&);
inline jule::I64 _21eb15165_count_match_type(jule::Ptr<_21eb2dd2c_Match>&,jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Slice<jule::Ptr<_21ebbd053_Data>> _21eadccb9_get_datas_from_tuple_data(jule::Ptr<_21ebbd053_Data>&);
inline jule::Slice<jule::Any> _21eae17e5_get_expr_models(jule::Any&);
inline jule::Bool _21eae23c8_check_mut(jule::Ptr<_21eb5443a_Sema>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline jule::Bool _21eae350b_check_assign(jule::Ptr<_21eb5443a_Sema>&,jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ebbd053_Data>,_21c627dde_Token);
inline jule::Bool _21eae6641_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _21eae7224_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _21eae7d07_st_is_def(jule::Any&);
inline jule::Ptr<_21eb75615_Var> _21eb4761a_find_var_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_21ec05288_TypeAlias> _21eb47b6a_find_type_alias_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_21dd03266_Struct> _21eb48121_find_struct_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_21dd19249_Fn> _21eb4862c_find_fn_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_21deee929_Trait> _21eb48a17_find_trait_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&,jule::Str);
inline jule::Ptr<_21ddb6aee_Enum> _21eb48e02_find_enum_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&,jule::Str);
inline jule::Bool _21eb50bb7_is_std_package(jule::Str,jule::Str);
inline jule::Bool _21eb52108_is_valid_model_for_ref(jule::Any&);
inline _21c348b32_Log _21eb52658_compiler_err(_21c627dde_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21eb52a43_imp_is_lookupable(jule::Ptr<_21eb49c8d_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_21eb75615_Var>> _21eb52d95_build_ret_vars(jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Slice<jule::Ptr<_21eb75615_Var>> _21eb531a3_build_param_vars(jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _21eb53505_build_generic_type_aliases(jule::Ptr<_21dd1cc42_FnIns>&);
inline jule::Ptr<_21ebb6c0b_SymbolTable> _21eb538ce_find_file(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>&,jule::Ptr<_21c62e038_File>&);
inline void _21eb53d96_push_suggestion(_21c348b32_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _21eb8092d_get_result_types(jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21eb81b0a_trait_has_reference_receiver(jule::Ptr<_21deee929_Trait>&);
inline jule::Bool _21eb86868_float_assignable(jule::Str,jule::Ptr<_21ebbd053_Data>&);
inline jule::Bool _21eb942c1_sig_assignable(jule::Str,jule::Ptr<_21ebbd053_Data>&);
inline jule::Bool _21eba4479_unsig_assignable(jule::Str,jule::Ptr<_21ebbd053_Data>&);
inline jule::Bool _21eba47ed_int_assignable(jule::Str,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21c525490_Directive> _21ebeeaac_find_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>&,jule::Str);
inline jule::Any _21ebeeedb_find_builtins_import(jule::Str,jule::Ptr<_21eb49c8d_ImportInfo>);
inline void _21ec00261_fit_bitsize(jule::Ptr<_21ebbd053_Data>&);
inline void _21ec00607_make_struct_lit_alloc(jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21dd09c40_StructLitExprModel>&);
inline jule::Ptr<_21eb75615_Var> _21ec009e2_build_error_var(jule::Ptr<_21eb1472a_Scope>&,jule::Ptr<_21c63dc90_FnCallExpr>&);
inline jule::Any _21ec00dcc_find_builtins_sema(jule::Str,jule::Ptr<_21eb5443a_Sema>);
inline jule::Bool _21ec011da_is_ok_for_shifting(jule::Ptr<_21ebbd053_Data>&);
inline jule::Bool _21ec01581_is_instanced_struct(jule::Ptr<_21dd06742_StructIns>);
inline jule::Bool _21ec01905_is_ptr_arithmetic_compatible_int(jule::Ptr<_21ebbd053_Data>&);
inline void _21ec01b47_apply_cast_kind_model(jule::Ptr<_21ebbd053_Data>&);
inline void _21ec01dbc_apply_cast_kind(jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec020ed_build_void_data(void);
inline jule::Str _21ec02450_check_data_for_integer_indexing(jule::Ptr<_21ebbd053_Data>&);
inline void _21ec027d5_apply_cast_model_by_enum(jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21ddb6aee_Enum>);
inline void _21ec02b26_cast_const_by_type(jule::Str&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Bool _21ec045a6_has_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>&,jule::Str);
inline jule::Bool _21ec15287_can_get_ptr(jule::Ptr<_21ebbd053_Data>&);
inline jule::Bool _21ec15595_is_valid_for_sptr_type(jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ec158e7_is_valid_for_ref(jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Bool _21ec15c49_is_builtin_str_convertable(jule::Ptr<_21ec06223_TypeKind>&);
inline jule::Str _21ec1608a_build_link_path_by_tokens(jule::Slice<_21c627dde_Token>&);
inline jule::Ptr<_21ec0b58b_Prim> _21ec16387_build_prim_type(jule::Str);
inline jule::Ptr<_21dd03266_Struct> _21ec1672d_get_struct_from_kind(jule::Ptr<_21ec06223_TypeKind>);
inline jule::Bool _21ec16a3b_is_prim(jule::Str);
inline void _21ec2134d_apply_implicit_cast(jule::Ptr<_21ec06223_TypeKind>&,jule::Ptr<_21ebbd053_Data>&);
inline std::tuple<jule::Ptr<_21ebb6c0b_SymbolTable>,jule::Slice<_21c348b32_Log>> _21ec248d4_build_symbols(jule::Ptr<_21c4cc2b0_Ast>&,jule::Trait<_21eb471a8_Importer>&,jule::Ptr<_21dd2c0a3_SymbolBuilder>);
inline std::tuple<jule::Ptr<_21eb4d269_Package>,jule::Slice<_21c348b32_Log>> _21ec24de0___analyze_package(jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>&,jule::Trait<_21eb471a8_Importer>&,jule::I64&);
inline std::tuple<jule::Ptr<_21eb4d269_Package>,jule::Slice<_21c348b32_Log>> _21ec253a7_analyze_package(jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>,jule::Trait<_21eb471a8_Importer>,jule::I64);
inline jule::Ptr<_21dd1cc42_FnIns> _21ec29d07_find_builtin_fn(jule::Str);
inline jule::Ptr<_21ec05288_TypeAlias> _21ec4ca3e_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_21deee929_Trait> _21ec781da_find_builtin_trait(jule::Str);
inline jule::Any _21ec2ca41_find_builtin_def(jule::Str);
inline jule::Any _21ec2d855_find_builtin_def_std_debug(jule::Str);
inline jule::Any _21ec2e669_find_builtin_def_std_mem(jule::Str);
inline jule::Any _21ec31b44_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _21ec4b4dd_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_21ebbd053_Data> _21ec51306_builtin_caller_common_plain(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec28b91_builtin_caller_common(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec26a90_builtin_caller_common_mut(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec26c05_builtin_caller_error(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&);
inline jule::Ptr<_21ebbd053_Data> _21ec66e54_builtin_caller_out(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec670b9_builtin_caller_outln(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec266d8_builtin_caller_new(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec2684d_builtin_caller_panic(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec67ebb_builtin_caller_make(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec68131_builtin_caller_append(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec68296_builtin_caller_copy(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec6840b_builtin_caller_clone(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8a54e_builtin_caller_assert(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8aa5a_builtin_caller_std_mem_size_of(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8b055_builtin_caller_std_mem_align_of(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8b550_builtin_caller_std_mem_free(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8ba6c_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8c067_builtin_caller_std_jule_integrated_emit(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8c540_builtin_caller_std_debug_out(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline jule::Ptr<_21ebbd053_Data> _21ec8ca3a_builtin_caller_std_debug_outln(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _21c482144_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _21c4822a9_check_arch(jule::Str);
inline jule::Bool _21c48241e_is_pass_file_annotation(jule::Str);
inline void _21c483574_set_os_vars(jule::Slice<jule::Str>&);
inline void _21c48383d_set_arch_vars(jule::Slice<jule::Str>&);
inline void _21c483b90_init_vars(jule::Slice<jule::Str>&,_21c483200_CompileInfo&);
inline jule::Slice<jule::U8> _21cbd812a_read_buff(jule::Str);
inline _21c348b32_Log _21cbdb54b_flat_compiler_err(jule::Str);
inline void _21cd6ad18_push_passes(jule::Ptr<_21eb4d269_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _21cd6e79a_get_all_unique_passes(jule::Ptr<_21eb4d269_Package>&,jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>>);
inline _21c483200_CompileInfo _21cd73ace_build_compile_info(void);
inline jule::Ptr<_21c525490_Directive> _21c3e2e51_find_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>&,jule::Str);
inline jule::Bool _21c3ed91d_has_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>&,jule::Str);
inline jule::Bool _21c3d908a_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _21c41149c_is_dead(jule::Any);
inline void _21ce8485a_drop_ref(jule::Slice<jule::Any>&,jule::I64);
inline jule::Bool _21cea458e_is_all_references_are_dead(jule::Ptr<_21dd264ba_ReferenceStack>);
inline jule::Bool _21ceaad59_is_fn_dead(jule::Ptr<_21dd1cc42_FnIns>);
inline jule::Bool _21d021254_is_var_dead(jule::Ptr<_21eb75615_Var>);
inline jule::Bool _21d0908de_is_struct_dead(jule::Ptr<_21dd06742_StructIns>);
inline jule::Bool _21d09289c_is_trait_dead(jule::Ptr<_21deee929_Trait>);
inline void _21d0a45c3_eliminate_dead_functions(jule::Slice<jule::Ptr<_21dd19249_Fn>>&);
inline void _21d0a6b69_eliminate_dead_globals(jule::Ptr<_21eb4d269_Package>&);
inline void _21d249c85_eliminate_dead_functions_package(jule::Ptr<_21eb4d269_Package>&);
inline void _21d2a5818_keep_alive_init(jule::Ptr<_21eb4d269_Package>&);
inline void _21d32ca9e_eliminate_package(jule::Ptr<_21eb4d269_Package>&);
inline void _21d341013_eliminate_defines(jule::Ptr<_21ccec4b4_IR>&);
inline void _21d1170b4_eliminate_dead_code_of_scope(jule::Ptr<_21eb1472a_Scope>);
inline void _21d118cdb_eliminate_scope_functions(jule::Slice<jule::Ptr<_21dd19249_Fn>>&);
inline void _21d11a65b_eliminate_functions_scope_package(jule::Ptr<_21eb4d269_Package>&);
inline void _21d120a07_eliminate_scope_package(jule::Ptr<_21eb4d269_Package>&);
inline void _21d128108_eliminate_scopes(jule::Ptr<_21ccec4b4_IR>&);
inline void _21d161bbe_throw(jule::Str);
inline jule::Bool _220246dc3_is_std_package(jule::Str,jule::Str);
inline jule::Bool _22024728b_is_constant_valid_conditional_case(jule::Ptr<_235bb50ab_If>&);
inline jule::Bool _220247566_is_unreachable_expr(jule::Any&);
inline jule::Bool _22024790c_is_constant_valid_match_case(jule::Ptr<_21eb2e27d_Case>&);
inline jule::Bool _220247c4d_is_unreachable_conditional_case(jule::Ptr<_235bb50ab_If>&);
inline jule::Bool _22024808e_is_unreachable_match_case(jule::Ptr<_21eb2e27d_Case>&);
inline std::tuple<jule::Bool,jule::U64> _220251c57_check_for_bit_shift_opt(jule::Ptr<_21dd08854_OperandExprModel>&,jule::Ptr<_21dd08854_OperandExprModel>&);
inline jule::U64 _220dcb12d_unix(void);
inline jule::U64 _220dcb518_unix_year_to_seconds(jule::U64,jule::Bool&);
inline jule::U64 _220dcb947_unix_month_to_seconds(jule::U64,jule::Bool);
inline jule::Bool _2201e48dc_is_copy_optimizable(jule::Ptr<_21ebbd053_Data>&);
inline jule::Bool _2201e5cc8_is_iter_copy_optimizable(jule::Ptr<_21ebbd053_Data>&,jule::Ptr<_21eb75615_Var>&);
inline jule::Str _22025e1b5_concat_all_parts(jule::Slice<_21c627dde_Token>);
inline jule::Str _22025e517_decompose_common_esq(jule::U8);
inline jule::Str _22025e825_sbtoa(jule::U8);
inline jule::Str _22025eb77_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _22025ee85_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _220260370_ftoa(jule::F64,jule::I64);
inline jule::Str _22026067d_itoa(jule::I64);
inline jule::Str _220260a24_utoa(jule::U64);
inline jule::Bool _220260d32_is_forwarded(jule::Ptr<_21eb1472a_Scope>&);
inline jule::Bool _220261184_is_builtin_call_has_debuginf(jule::Ptr<_21dd0b23b_FnCallExprModel>&);
inline jule::Bool _220dd527a_is_cpp_header_file(jule::Str);
inline jule::Ptr<_21c525490_Directive> _220dd61d2_find_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>&,jule::Str);
inline jule::Bool _220dd6622_has_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>&,jule::Str);
inline void _2368db5d9_print_error_message(jule::Str);
inline void _23691668b_help(jule::Slice<jule::Str>&);
inline void _2368ed0e0_version(jule::Slice<jule::Str>&);
inline void _2369025de_tool_distos(void);
inline void _23690bb37_tool_distarch(void);
inline void _2369142e3_tool(jule::Slice<jule::Str>&);
inline void _21c37938d_julenv(jule::Slice<jule::Str>&);
inline void _23690e82c_mod(jule::Slice<jule::Str>&);
inline jule::Bool _236910410_process_command(jule::Slice<jule::Str>&);
inline void _236910ee3_show_info(void);
void entry_point(void);
inline void _220de0d9b_init(void);
inline void _220de7237_write_output(jule::Str,jule::Str);
inline void _220e05bd5_clear_objects(void);
inline void _220e064dd_compile_ir(jule::Str,jule::Str);
inline void _220e06653_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _220e067b8_is_cpp_source_file(jule::Str);
inline void _220e0692d_push_comp_cmd_clang(jule::Str&);
inline void _220e06a93_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _220e06c08_gen_compile_cmd(jule::Str,jule::Ptr<_21ccec4b4_IR>&);
inline jule::Str _220e06d6d_get_compile_path(void);
inline void _220e06ed3_apply_target_independent_optimizations(jule::Ptr<_21ccec4b4_IR>&);
inline void _220e07148_check_compiler_flag(void);
inline void _220e072ad_check_target_arch(jule::Str);
inline void _220e07423_check_target_os(jule::Str);
inline void _220e07588_check_target_flag(jule::Str&);
inline void _220e0792e_check_opt_flag(jule::Str&);
inline void _220e07a94_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _220e07c09_check_flags(jule::Slice<jule::Str>&);
inline void _220e07d6e_setup_sema_flags(jule::I64&);
inline jule::Ptr<_21ccec4b4_IR> _220e07ed4_build_ir(jule::Slice<jule::Str>&);
inline void _220e08149_compile_command(jule::Slice<jule::Str>&);


struct _21ec846ad_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_21ec84537_read)(jule::Trait<_21ec846ad_Reader>,jule::Slice<jule::U8>);
};

struct _21ec84bb9_WriterMptrData {
	jule::Exceptional<jule::I64>(*_21ec84a43_write)(jule::Trait<_21ec84bb9_Writer>,jule::Slice<jule::U8>);
};

struct _21ec853d4_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_21ec8501b_write)(jule::Trait<_21ec853d4_WriterCloser>,jule::Slice<jule::U8>);
	jule::VoidExceptional(*_21ec8525d_close)(jule::Trait<_21ec853d4_WriterCloser>);
};

struct _21ec85ca8_StreamMptrData {
	jule::Exceptional<jule::I64>(*_21ec8577a_read)(jule::Trait<_21ec85ca8_Stream>,jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_21ec85b32_write)(jule::Trait<_21ec85ca8_Stream>,jule::Slice<jule::U8>);
};

struct _21eb471a8_ImporterMptrData {
	void(*_21eb45c89_set_mod_path)(jule::Trait<_21eb471a8_Importer>,jule::Str);
	jule::Str(*_21eb46020_get_mod_path)(jule::Trait<_21eb471a8_Importer>);
	jule::Str(*_21eb463c7_mod_by_id)(jule::Trait<_21eb471a8_Importer>,jule::I64);
	jule::Ptr<_21eb49c8d_ImportInfo>(*_21eb4677e_get_import)(jule::Trait<_21eb471a8_Importer>,jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>,jule::Slice<_21c348b32_Log>>(*_21eb46c13_import_package)(jule::Trait<_21eb471a8_Importer>,jule::Str,jule::Bool);
	void(*_21eb47032_imported)(jule::Trait<_21eb471a8_Importer>,jule::Ptr<_21eb49c8d_ImportInfo>);
};

struct _21ec05bd4_KindMptrData {
	jule::Str(*_21ec056a6_to_str)(jule::Trait<_21ec05bd4_Kind>);
	jule::Bool(*_21ec05a5d_equals)(jule::Trait<_21ec05bd4_Kind>,jule::Ptr<_21ec06223_TypeKind>);
};

struct _21ec23a48_LookupMptrData {
	jule::Ptr<_21eb49c8d_ImportInfo>(*_21ec2197a_find_package)(jule::Trait<_21ec23a48_Lookup>,jule::Str);
	jule::Ptr<_21eb49c8d_ImportInfo>(*_21ec21d32_select_package)(jule::Trait<_21ec23a48_Lookup>,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>);
	jule::Ptr<_21eb75615_Var>(*_21ec222b6_find_var)(jule::Trait<_21ec23a48_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_21ec05288_TypeAlias>(*_21ec2274a_find_type_alias)(jule::Trait<_21ec23a48_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_21dd03266_Struct>(*_21ec22bce_find_struct)(jule::Trait<_21ec23a48_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_21dd19249_Fn>(*_21ec23163_find_fn)(jule::Trait<_21ec23a48_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_21deee929_Trait>(*_21ec2351a_find_trait)(jule::Trait<_21ec23a48_Lookup>,jule::Str);
	jule::Ptr<_21ddb6aee_Enum>(*_21ec238c2_find_enum)(jule::Trait<_21ec23a48_Lookup>,jule::Str);
};

struct _220dee393_CommonFlagMptrData {
	jule::Str(*_220dedc66_name)(jule::Trait<_220dee393_CommonFlag>);
	jule::I32(*_220deddcb_short)(jule::Trait<_220dee393_CommonFlag>);
	jule::Str(*_220dee041_what)(jule::Trait<_220dee393_CommonFlag>);
	void(*_220dee22d_reset)(jule::Trait<_220dee393_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _21ec84537_read_0(jule::Trait<_21ec846ad_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _21ec836bd_read(_self_.safe_ptr<_21ec83239_FileStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _21ec84537_read_1(jule::Trait<_21ec846ad_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _21ec868ad_read(_self_.safe_ptr<_21ec86171_ByteStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _21ec84a43_write_0(jule::Trait<_21ec84bb9_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _21ec839ba_write(_self_.safe_ptr<_21ec83239_FileStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _21ec84a43_write_1(jule::Trait<_21ec84bb9_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _21ec86c65_write(_self_.safe_ptr<_21ec86171_ByteStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _21ec8577a_read_0(jule::Trait<_21ec85ca8_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _21ec836bd_read(_self_.safe_ptr<_21ec83239_FileStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _21ec85b32_write_0(jule::Trait<_21ec85ca8_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _21ec839ba_write(_self_.safe_ptr<_21ec83239_FileStream>(), _2428_buff);
}
inline jule::Exceptional<jule::I64> _21ec8577a_read_1(jule::Trait<_21ec85ca8_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _21ec868ad_read(_self_.safe_ptr<_21ec86171_ByteStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _21ec85b32_write_1(jule::Trait<_21ec85ca8_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _21ec86c65_write(_self_.safe_ptr<_21ec86171_ByteStream>(), _2428_buff);
}
inline void _21eb45c89_set_mod_path_0(jule::Trait<_21eb471a8_Importer> _self_,jule::Str _1735_path) {
	_21cc77e67_set_mod_path(_self_.safe_ptr<_21cc7b410_JuleImporter>(), _1735_path);
}
inline jule::Str _21eb46020_get_mod_path_0(jule::Trait<_21eb471a8_Importer> _self_) {
	return _21cc79a90_get_mod_path(_self_.safe_ptr<_21cc7b410_JuleImporter>());
}
inline jule::Str _21eb463c7_mod_by_id_0(jule::Trait<_21eb471a8_Importer> _self_,jule::I64 _2328_id) {
	return _21ccae0ad_mod_by_id(_self_.safe_ptr<_21cc7b410_JuleImporter>(), _2328_id);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4677e_get_import_0(jule::Trait<_21eb471a8_Importer> _self_,jule::Str _2833_path) {
	return _21ccb2567_get_import(_self_.safe_ptr<_21cc7b410_JuleImporter>(), _2833_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>,jule::Slice<_21c348b32_Log>> _21eb46c13_import_package_0(jule::Trait<_21eb471a8_Importer> _self_,jule::Str _3337_path,jule::Bool _3348_update_mod) {
	return _21ccb7ea7_import_package(_self_.safe_ptr<_21cc7b410_JuleImporter>(), _3337_path, _3348_update_mod);
}
inline void _21eb47032_imported_0(jule::Trait<_21eb471a8_Importer> _self_,jule::Ptr<_21eb49c8d_ImportInfo> _3635__0) {
	_21cceb419_imported(_self_.safe_ptr<_21cc7b410_JuleImporter>(), _3635__0);
}
inline jule::Str _21ec056a6_to_str_0(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21dd06b60_to_str(_self_.safe_ptr<_21dd06742_StructIns>());
}
inline jule::Bool _21ec05a5d_equals_0(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21dd07017_equals(_self_.data.as<_21dd06742_StructIns>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_1(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21dd1d11b_to_str(_self_.safe_ptr<_21dd1cc42_FnIns>());
}
inline jule::Bool _21ec05a5d_equals_1(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21dd1d4c3_equals(_self_.data.as<_21dd1cc42_FnIns>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_2(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21dd3d59d_to_str(_self_.safe_ptr<_21deee929_Trait>());
}
inline jule::Bool _21ec05a5d_equals_2(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21dd40bdd_equals(_self_.data.as<_21deee929_Trait>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_3(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21e0b22e4_to_str(_self_.safe_ptr<_21ddb6aee_Enum>());
}
inline jule::Bool _21ec05a5d_equals_3(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21e0ba2db_equals(_self_.data.as<_21ddb6aee_Enum>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_4(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec06641_to_str(_self_.safe_ptr<_21ec06223_TypeKind>());
}
inline jule::Bool _21ec05a5d_equals_4(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec069e8_equals(_self_.data.as<_21ec06223_TypeKind>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_5(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec0b965_to_str(_self_.safe_ptr<_21ec0b58b_Prim>());
}
inline jule::Bool _21ec05a5d_equals_5(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec0bd1c_equals(_self_.data.as<_21ec0b58b_Prim>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_6(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec107c1_to_str(_self_.safe_ptr<_21ec103e7_Sptr>());
}
inline jule::Bool _21ec05a5d_equals_6(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec10b78_equals(_self_.data.as<_21ec103e7_Sptr>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_7(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec1143c_to_str(_self_.safe_ptr<_21ec10eca_Slc>());
}
inline jule::Bool _21ec05a5d_equals_7(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec117e4_equals(_self_.data.as<_21ec10eca_Slc>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_8(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec120a8_to_str(_self_.safe_ptr<_21ec11b46_Tuple>());
}
inline jule::Bool _21ec05a5d_equals_8(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec12460_equals(_self_.data.as<_21ec11b46_Tuple>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_9(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec12c8a_to_str(_self_.safe_ptr<_21ec128b1_Map>());
}
inline jule::Bool _21ec05a5d_equals_9(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec13142_equals(_self_.data.as<_21ec128b1_Map>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_10(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec13a6b_to_str(_self_.safe_ptr<_21ec13692_Arr>());
}
inline jule::Bool _21ec05a5d_equals_10(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec13e23_equals(_self_.data.as<_21ec13692_Arr>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_11(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _21ec1464e_to_str(_self_.safe_ptr<_21ec14275_Ptr>());
}
inline jule::Bool _21ec05a5d_equals_11(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _21ec14a06_equals(_self_.data.as<_21ec14275_Ptr>(), _5926_other);
}
inline jule::Str _21ec056a6_to_str_12(jule::Trait<_21ec05bd4_Kind> _self_) {
	return _220dd6d09_to_str(_self_.safe_ptr<_220dd6897_CustomType>());
}
inline jule::Bool _21ec05a5d_equals_12(jule::Trait<_21ec05bd4_Kind> _self_,jule::Ptr<_21ec06223_TypeKind> _5926_other) {
	return _220dd71b1_equals(_self_.data.as<_220dd6897_CustomType>(), _5926_other);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec2197a_find_package_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _935_ident) {
	return _21eabd481_find_package(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec21d32_select_package_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _1337_selector) {
	return _21eb3004d_select_package(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_21eb75615_Var> _21ec222b6_find_var_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _21eb301b3_find_var(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_21ec05288_TypeAlias> _21ec2274a_find_type_alias_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _21eb30328_find_type_alias(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_21dd03266_Struct> _21ec22bce_find_struct_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _21eb3048d_find_struct(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_21dd19249_Fn> _21ec23163_find_fn_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _21eb307ac_find_fn(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_21deee929_Trait> _21ec2351a_find_trait_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3333_ident) {
	return _21eb30b64_find_trait(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_21ddb6aee_Enum> _21ec238c2_find_enum_0(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3732_ident) {
	return _21eb3101b_find_enum(_self_.safe_ptr<_21eb2ed2d_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec2197a_find_package_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _935_ident) {
	return _21eb4a343_find_package(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec21d32_select_package_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _1337_selector) {
	return _21eb4a6ea_select_package(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_21eb75615_Var> _21ec222b6_find_var_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _21eb4ab7e_find_var(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_21ec05288_TypeAlias> _21ec2274a_find_type_alias_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _21eb4b113_find_type_alias(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_21dd03266_Struct> _21ec22bce_find_struct_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _21eb4b597_find_struct(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_21dd19249_Fn> _21ec23163_find_fn_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _21eb4ba2b_find_fn(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_21deee929_Trait> _21ec2351a_find_trait_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3333_ident) {
	return _21eb4bdd3_find_trait(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_21ddb6aee_Enum> _21ec238c2_find_enum_1(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3732_ident) {
	return _21eb4c28a_find_enum(_self_.safe_ptr<_21eb49c8d_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec2197a_find_package_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _935_ident) {
	return _21eb4d7ca_find_package(_self_.safe_ptr<_21eb4d269_Package>(), _935_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec21d32_select_package_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _1337_selector) {
	return _21eb4db82_select_package(_self_.safe_ptr<_21eb4d269_Package>(), _1337_selector);
}
inline jule::Ptr<_21eb75615_Var> _21ec222b6_find_var_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _21eb4e116_find_var(_self_.safe_ptr<_21eb4d269_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_21ec05288_TypeAlias> _21ec2274a_find_type_alias_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _21eb4e59a_find_type_alias(_self_.safe_ptr<_21eb4d269_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_21dd03266_Struct> _21ec22bce_find_struct_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _21eb4ea2e_find_struct(_self_.safe_ptr<_21eb4d269_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_21dd19249_Fn> _21ec23163_find_fn_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _21eb4eeb3_find_fn(_self_.safe_ptr<_21eb4d269_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_21deee929_Trait> _21ec2351a_find_trait_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3333_ident) {
	return _21eb5036a_find_trait(_self_.safe_ptr<_21eb4d269_Package>(), _3333_ident);
}
inline jule::Ptr<_21ddb6aee_Enum> _21ec238c2_find_enum_2(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3732_ident) {
	return _21eb50722_find_enum(_self_.safe_ptr<_21eb4d269_Package>(), _3732_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec2197a_find_package_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _935_ident) {
	return _21eb549e0_find_package(_self_.safe_ptr<_21eb5443a_Sema>(), _935_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec21d32_select_package_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _1337_selector) {
	return _21eb54d97_select_package(_self_.safe_ptr<_21eb5443a_Sema>(), _1337_selector);
}
inline jule::Ptr<_21eb75615_Var> _21ec222b6_find_var_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _21eb5532b_find_var(_self_.safe_ptr<_21eb5443a_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_21ec05288_TypeAlias> _21ec2274a_find_type_alias_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _21eb557b0_find_type_alias(_self_.safe_ptr<_21eb5443a_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_21dd03266_Struct> _21ec22bce_find_struct_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _21eb55c44_find_struct(_self_.safe_ptr<_21eb5443a_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_21dd19249_Fn> _21ec23163_find_fn_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _21eb561c8_find_fn(_self_.safe_ptr<_21eb5443a_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_21deee929_Trait> _21ec2351a_find_trait_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3333_ident) {
	return _21eb56580_find_trait(_self_.safe_ptr<_21eb5443a_Sema>(), _3333_ident);
}
inline jule::Ptr<_21ddb6aee_Enum> _21ec238c2_find_enum_3(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3732_ident) {
	return _21eb56937_find_enum(_self_.safe_ptr<_21eb5443a_Sema>(), _3732_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec2197a_find_package_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _935_ident) {
	return _21ebb72b1_find_package(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_21eb49c8d_ImportInfo> _21ec21d32_select_package_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _1337_selector) {
	return _21ebb7668_select_package(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_21eb75615_Var> _21ec222b6_find_var_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _21ebb7aec_find_var(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_21ec05288_TypeAlias> _21ec2274a_find_type_alias_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _21ebb8081_find_type_alias(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_21dd03266_Struct> _21ec22bce_find_struct_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _21ebb8515_find_struct(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_21dd19249_Fn> _21ec23163_find_fn_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _21ebb8999_find_fn(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_21deee929_Trait> _21ec2351a_find_trait_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3333_ident) {
	return _21ebb8d51_find_trait(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_21ddb6aee_Enum> _21ec238c2_find_enum_4(jule::Trait<_21ec23a48_Lookup> _self_,jule::Str _3732_ident) {
	return _21ebb9208_find_enum(_self_.safe_ptr<_21ebb6c0b_SymbolTable>(), _3732_ident);
}
inline jule::Str _220dedc66_name_0(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _230595b4b_name(_self_.safe_ptr<_220dee78e_Flag_0>());
}
inline jule::I32 _220deddcb_short_0(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _23059608b_short(_self_.safe_ptr<_220dee78e_Flag_0>());
}
inline jule::Str _220dee041_what_0(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _230595cb1_what(_self_.safe_ptr<_220dee78e_Flag_0>());
}
inline void _220dee22d_reset_0(jule::Trait<_220dee393_CommonFlag> _self_) {
	_230595e26_reset(_self_.safe_ptr<_220dee78e_Flag_0>());
}
inline jule::Str _220dedc66_name_1(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _230598e7e_name(_self_.safe_ptr<_220dee78e_Flag_1>());
}
inline jule::I32 _220deddcb_short_1(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _230598bd7_short(_self_.safe_ptr<_220dee78e_Flag_1>());
}
inline jule::Str _220dee041_what_1(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _230596212_what(_self_.safe_ptr<_220dee78e_Flag_1>());
}
inline void _220dee22d_reset_1(jule::Trait<_220dee393_CommonFlag> _self_) {
	_230597895_reset(_self_.safe_ptr<_220dee78e_Flag_1>());
}
inline jule::Str _220dedc66_name_2(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _23059c48d_name(_self_.safe_ptr<_220dee78e_Flag_2>());
}
inline jule::I32 _220deddcb_short_2(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _23059c1e6_short(_self_.safe_ptr<_220dee78e_Flag_2>());
}
inline jule::Str _220dee041_what_2(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _230599721_what(_self_.safe_ptr<_220dee78e_Flag_2>());
}
inline void _220dee22d_reset_2(jule::Trait<_220dee393_CommonFlag> _self_) {
	_23059ada4_reset(_self_.safe_ptr<_220dee78e_Flag_2>());
}
inline jule::Str _220dedc66_name_3(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _23059cc96_name(_self_.safe_ptr<_220dee78e_Flag_3>());
}
inline jule::I32 _220deddcb_short_3(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _2305a0749_short(_self_.safe_ptr<_220dee78e_Flag_3>());
}
inline jule::Str _220dee041_what_3(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _2305a09e1_what(_self_.safe_ptr<_220dee78e_Flag_3>());
}
inline void _220dee22d_reset_3(jule::Trait<_220dee393_CommonFlag> _self_) {
	_23059e407_reset(_self_.safe_ptr<_220dee78e_Flag_3>());
}
inline jule::Str _220dedc66_name_4(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _2305a4000_name(_self_.safe_ptr<_220dee78e_Flag_4>());
}
inline jule::I32 _220deddcb_short_4(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _2305a3c58_short(_self_.safe_ptr<_220dee78e_Flag_4>());
}
inline jule::Str _220dee041_what_4(jule::Trait<_220dee393_CommonFlag> _self_) {
	return _2305a1283_what(_self_.safe_ptr<_220dee78e_Flag_4>());
}
inline void _220dee22d_reset_4(jule::Trait<_220dee393_CommonFlag> _self_) {
	_2305a2916_reset(_self_.safe_ptr<_220dee78e_Flag_4>());
}


static _21ec846ad_ReaderMptrData _21ec846ad_Reader_mptr_data[] = {
	{
		._21ec84537_read=_21ec84537_read_0,
	},
	{
		._21ec84537_read=_21ec84537_read_1,
	},
};static _21ec84bb9_WriterMptrData _21ec84bb9_Writer_mptr_data[] = {
	{
		._21ec84a43_write=_21ec84a43_write_0,
	},
	{
		._21ec84a43_write=_21ec84a43_write_1,
	},
};static _21ec853d4_WriterCloserMptrData _21ec853d4_WriterCloser_mptr_data[] = {
};static _21ec85ca8_StreamMptrData _21ec85ca8_Stream_mptr_data[] = {
	{
		._21ec8577a_read=_21ec8577a_read_0,
		._21ec85b32_write=_21ec85b32_write_0,
	},
	{
		._21ec8577a_read=_21ec8577a_read_1,
		._21ec85b32_write=_21ec85b32_write_1,
	},
};static _21eb471a8_ImporterMptrData _21eb471a8_Importer_mptr_data[] = {
	{
		._21eb45c89_set_mod_path=_21eb45c89_set_mod_path_0,
		._21eb46020_get_mod_path=_21eb46020_get_mod_path_0,
		._21eb463c7_mod_by_id=_21eb463c7_mod_by_id_0,
		._21eb4677e_get_import=_21eb4677e_get_import_0,
		._21eb46c13_import_package=_21eb46c13_import_package_0,
		._21eb47032_imported=_21eb47032_imported_0,
	},
};static _21ec05bd4_KindMptrData _21ec05bd4_Kind_mptr_data[] = {
	{
		._21ec056a6_to_str=_21ec056a6_to_str_0,
		._21ec05a5d_equals=_21ec05a5d_equals_0,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_1,
		._21ec05a5d_equals=_21ec05a5d_equals_1,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_2,
		._21ec05a5d_equals=_21ec05a5d_equals_2,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_3,
		._21ec05a5d_equals=_21ec05a5d_equals_3,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_4,
		._21ec05a5d_equals=_21ec05a5d_equals_4,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_5,
		._21ec05a5d_equals=_21ec05a5d_equals_5,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_6,
		._21ec05a5d_equals=_21ec05a5d_equals_6,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_7,
		._21ec05a5d_equals=_21ec05a5d_equals_7,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_8,
		._21ec05a5d_equals=_21ec05a5d_equals_8,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_9,
		._21ec05a5d_equals=_21ec05a5d_equals_9,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_10,
		._21ec05a5d_equals=_21ec05a5d_equals_10,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_11,
		._21ec05a5d_equals=_21ec05a5d_equals_11,
	},
	{
		._21ec056a6_to_str=_21ec056a6_to_str_12,
		._21ec05a5d_equals=_21ec05a5d_equals_12,
	},
};static _21ec23a48_LookupMptrData _21ec23a48_Lookup_mptr_data[] = {
	{
		._21ec2197a_find_package=_21ec2197a_find_package_0,
		._21ec21d32_select_package=_21ec21d32_select_package_0,
		._21ec222b6_find_var=_21ec222b6_find_var_0,
		._21ec2274a_find_type_alias=_21ec2274a_find_type_alias_0,
		._21ec22bce_find_struct=_21ec22bce_find_struct_0,
		._21ec23163_find_fn=_21ec23163_find_fn_0,
		._21ec2351a_find_trait=_21ec2351a_find_trait_0,
		._21ec238c2_find_enum=_21ec238c2_find_enum_0,
	},
	{
		._21ec2197a_find_package=_21ec2197a_find_package_1,
		._21ec21d32_select_package=_21ec21d32_select_package_1,
		._21ec222b6_find_var=_21ec222b6_find_var_1,
		._21ec2274a_find_type_alias=_21ec2274a_find_type_alias_1,
		._21ec22bce_find_struct=_21ec22bce_find_struct_1,
		._21ec23163_find_fn=_21ec23163_find_fn_1,
		._21ec2351a_find_trait=_21ec2351a_find_trait_1,
		._21ec238c2_find_enum=_21ec238c2_find_enum_1,
	},
	{
		._21ec2197a_find_package=_21ec2197a_find_package_2,
		._21ec21d32_select_package=_21ec21d32_select_package_2,
		._21ec222b6_find_var=_21ec222b6_find_var_2,
		._21ec2274a_find_type_alias=_21ec2274a_find_type_alias_2,
		._21ec22bce_find_struct=_21ec22bce_find_struct_2,
		._21ec23163_find_fn=_21ec23163_find_fn_2,
		._21ec2351a_find_trait=_21ec2351a_find_trait_2,
		._21ec238c2_find_enum=_21ec238c2_find_enum_2,
	},
	{
		._21ec2197a_find_package=_21ec2197a_find_package_3,
		._21ec21d32_select_package=_21ec21d32_select_package_3,
		._21ec222b6_find_var=_21ec222b6_find_var_3,
		._21ec2274a_find_type_alias=_21ec2274a_find_type_alias_3,
		._21ec22bce_find_struct=_21ec22bce_find_struct_3,
		._21ec23163_find_fn=_21ec23163_find_fn_3,
		._21ec2351a_find_trait=_21ec2351a_find_trait_3,
		._21ec238c2_find_enum=_21ec238c2_find_enum_3,
	},
	{
		._21ec2197a_find_package=_21ec2197a_find_package_4,
		._21ec21d32_select_package=_21ec21d32_select_package_4,
		._21ec222b6_find_var=_21ec222b6_find_var_4,
		._21ec2274a_find_type_alias=_21ec2274a_find_type_alias_4,
		._21ec22bce_find_struct=_21ec22bce_find_struct_4,
		._21ec23163_find_fn=_21ec23163_find_fn_4,
		._21ec2351a_find_trait=_21ec2351a_find_trait_4,
		._21ec238c2_find_enum=_21ec238c2_find_enum_4,
	},
};static _220dee393_CommonFlagMptrData _220dee393_CommonFlag_mptr_data[] = {
	{
		._220dedc66_name=_220dedc66_name_0,
		._220deddcb_short=_220deddcb_short_0,
		._220dee041_what=_220dee041_what_0,
		._220dee22d_reset=_220dee22d_reset_0,
	},
	{
		._220dedc66_name=_220dedc66_name_1,
		._220deddcb_short=_220deddcb_short_1,
		._220dee041_what=_220dee041_what_1,
		._220dee22d_reset=_220dee22d_reset_1,
	},
	{
		._220dedc66_name=_220dedc66_name_2,
		._220deddcb_short=_220deddcb_short_2,
		._220dee041_what=_220dee041_what_2,
		._220dee22d_reset=_220dee22d_reset_2,
	},
	{
		._220dedc66_name=_220dedc66_name_3,
		._220deddcb_short=_220deddcb_short_3,
		._220dee041_what=_220dee041_what_3,
		._220dee22d_reset=_220dee22d_reset_3,
	},
	{
		._220dedc66_name=_220dedc66_name_4,
		._220deddcb_short=_220deddcb_short_4,
		._220dee041_what=_220dee041_what_4,
		._220dee22d_reset=_220dee22d_reset_4,
	},
};

jule::Bool _2359a5011_PRODUCTION;
jule::Bool _2359a5132_OPT_COPY;
jule::Bool _2359a5253_OPT_DEADCODE;
jule::Bool _2359a53eb_OPT_APPEND;
jule::Bool _2359a551c_OPT_MATH;
jule::Bool _2359a563d_OPT_ACCESS;
jule::Bool _2359a575e_OPT_INLINE;
jule::Bool _2359a5990_OPT_PTR;
jule::Bool _2359a5ab1_OPT_COND;
jule::Str _2359a6177_COMPILER;
jule::Str _2359a6375_COMPILER_PATH;
jule::Str _2359a652e_CPP_STD;
jule::Bool _2359a672c_SHADOWING;
jule::Bool _2359a68d6_TRANSPILATION;
jule::Bool _2359a6a90_TEST;
jule::Bool _2359a6c49_RC;
jule::Bool _2359a6e8b_SAFETY;
jule::Ptr<_21c2d697c_RangeTable> _21c297256__L;
jule::Ptr<_21c2d697c_RangeTable> _21c29b975_LETTER;
jule::Array<jule::U8,256> _21c2d1955__PROPERTIES;
jule::Array<jule::U8,256> _2368b4e64_FIRST;
jule::Array<_2368b5519_accept_range,16> _2368b5838_ACCEPT_RANGES;
jule::Array<jule::Str,4> _2359d9a6d_CPP_HEADER_EXTS;
jule::Array<jule::Str,3> _236920552_CPP_EXTS;
jule::Array<jule::Str,1> _236920673_OBJECTIVE_CPP_EXTS;
jule::Array<jule::Str,3> _21c34c63b_DISTOS;
jule::Array<jule::Str,3> _21c34c86c_DISTARCH;
jule::Str _21c35922a_PATH_STDLIB;
jule::Str _21c36c86a_PATH_EXEC;
jule::Str _21c35a539_PATH_WD;
jule::Str _21c35ba79_PATH_API;
jule::Str _21c35c393_OS;
jule::Str _21c3828a2_ARCH;
jule::Array<jule::I32,5> _21c52aeac_SPACES;
jule::Array<jule::Str,6> _21c52a2db_UNARY_OPS;
jule::Array<jule::Str,12> _21c52a40c_BIN_OPS;
jule::Array<jule::Str,2> _21c52a64e_POSTFIX_OPS;
jule::Array<jule::Str,11> _21c620711_ASSING_OPS;
jule::Array<_21c631766_KindPair,47> _21c631a96_KEYWORDS;
jule::Array<_21c631766_KindPair,39> _21c631cc7_BASIC_OPS;
jule::Array<jule::U8,32> _21e9ed27e_DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _21e9ed625_DE_BRUIJN64_TAB;
_21e68dda9_FloatInfo _21e205a0e_F32_INFO;
_21e68dda9_FloatInfo _21e20c263_F64_INFO;
jule::Array<jule::Array<jule::U64,2>,696> _21e290d30_DETAILED_POWS_OF_TEN;
jule::Slice<jule::I64> _21e321b6e_POWTAB;
jule::Slice<jule::F64> _21e2e5eea_F64_POW10;
jule::Slice<jule::F32> _21e32d609_F32_POW10;
jule::Array<jule::U64,20> _21e46917e_U64_POW10;
jule::Slice<_21ea2cbe8_LeftCheat> _21e4262d4_LEFTCHEATS;
jule::I64 _21eb1e438_BIT_SIZE;
jule::Str _21eb1e559_SYS_INT;
jule::Str _21eb1e67a_SYS_UINT;
jule::Slice<jule::Any> _21c3e8330_deads;
jule::Slice<jule::Any> _21c40ac6b_checking;
jule::Any _21c41721c_current;
jule::Any _21c42006b_main_current;
jule::Array<jule::U64,12> _220dc526a_MDAYS;
jule::Array<jule::Array<jule::Str,2>,5> _23691e694_HELP_MAP;
jule::Str _21c3bb358_OUT_DIR;
jule::Str _21c3c4b03_OUT_NAME;
jule::Str _21c3c8189_OUT;





std::ostream &operator<<(std::ostream &_Stream, _21c2d5294_FoldPair _Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c2d5838_CaseRange _Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c2d5d88_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c2d642c_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c2d697c_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2368b5519_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _235b4dd58_index(_2368be776_LazyBuff* _self_,jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	}
	return (*_self_)._field_path[_5424_i];
}



inline void _235b66799_append(_2368be776_LazyBuff* _self_,jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if (((*_self_)._field_w < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_path.len()))) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c)) {
			((*_self_)._field_w)++;
			return;
		}
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_path.len()));
		copy((*_self_)._field_buff,static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w)));
	}
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _235b6c0c9_string(_2368be776_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len + (*_self_)._field_w);
	}
	return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, _2368be776_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _235a1da19_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_235a1da19_DirEntry>>> static__235b24ec7_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_235a1da19_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_235a1da19_DirEntry>>();
	DIR* _1617_dir = _235abd1d4_opendir((&(_1524_path[0LL])));
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_235a1da19_DirEntry>>>(_235a1c573_get_last_fs_error());
	}
	for (;;) {
		{
			struct dirent* _2117_dirent = _235abd349_readdir(_1617_dir);
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_22162227a;
			}
			jule::Str _2517_name = _235abcdb5_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));
			jule::Ptr<_235a75ae8_Status> _2621_stat = ({
				auto except = static__235a252a1_of(_235b71c27_join(jule::Slice<jule::Str>({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_235a1da19_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_235a1da19_DirEntry>>>(except.error);
				} jule::Ptr<_235a75ae8_Status>();});
			});
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_235a1da19_DirEntry>(_235a1da19_DirEntry(_2517_name,_2621_stat)));
		}
	_iter_next_22162227a:;
	}
	_iter_end_22162227a:;
	_235abd6e0_closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_235a1da19_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__235b27716_create(jule::Str _3926_path) {
	if ((_235abdb30_mkdir((&(_3926_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_235a1c573_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional static__235b2b792_remove(jule::Str _5126_path) {
	if ((_235abdc95_rmdir((&(_5126_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_235a1c573_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _235a1ec7e_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_235a41113_File>> static__235a20686_open(jule::Str _1824_path,jule::I64 _1835_flag,jule::I64 _1848_mode) {
	jule::I64 _1913_handle = _235a9276e_open((&(_1824_path[0LL])),static_cast<jule::I64>(_1835_flag),_1848_mode);
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_235a41113_File>>(_235a1c573_get_last_fs_error());
	}
	return jule::Exceptional<jule::Ptr<_235a41113_File>>(jule::Any(),static__235a32ed4_new(static_cast<jule::U64>(static_cast<jule::U64>(_1913_handle))));
}



inline jule::VoidExceptional static__235a27160_remove(jule::Str _3026_path) {
	if ((_235abde0a_unlink((&(_3026_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_235a1c573_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _235a3735c_write(_235a41113_File* _self_,jule::Slice<jule::U8> _4428_buff) {
	jule::I64 _4445_n = jule::I64();
	if ((_4428_buff.len() == 0LL)) {
		_4445_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
	}
	_4445_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_235ac1209_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4428_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4428_buff.len()))))));
	if ((_4445_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_235a1c573_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::I64> _235a38eda_read(_235a41113_File* _self_,jule::Slice<jule::U8> _6531_buff) {
	jule::I64 _6548_n = jule::I64();
	if ((_6531_buff.len() == 0LL)) {
		_6548_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
	}
	_6548_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_235ac089b_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6531_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6531_buff.len()))))));
	if ((_6548_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_235a1c573_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
}



inline jule::Ptr<_235a41113_File> static__235a32ed4_new(jule::U64 _4523_handle) {
	return jule::new_ptr<_235a41113_File>(_235a41113_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_235a41113_File>> static__235a20ec2_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_235a41113_File>>(jule::Any(),({
		auto except = static__235a20686_open(_5526_path,((static_cast<jule::I64>(578LL) | 578LL) | 578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_235a41113_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_235a41113_File>>(except.error);
		} jule::Ptr<_235a41113_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__235a2b97d_read(jule::Str _6724_path) {
	jule::Ptr<_235a75ae8_Status> _6813_s = ({
		auto except = static__235a252a1_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_235a75ae8_Status>();});
	});
	if ((!(_235a75d18_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	}
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_235a41113_File> _7817_f = ({
		auto except = static__235a20686_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_235a41113_File>();});
	});
	__JULE_DEFER({
		({
			auto except = _235a3847e_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));
	jule::I64 _8213_n = ({
		auto except = _235a38eda_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__235a2c594_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::I64 _9150_perm) {
	jule::Ptr<_235a41113_File> _9217_f = ({
		auto except = static__235a20686_open(_9125_path,((static_cast<jule::I64>(577LL) | 577LL) | 577LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_235a41113_File>();});
	});
	({
		auto except = _235a3735c_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _235a3847e_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _235a30652_seek(_235a41113_File* _self_,jule::I64 _10527_offset,jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _235ac03d4_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_235a1c573_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _235a3847e_close(_235a41113_File* _self_) {
	if ((_235ac0c42_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_235a1c573_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _235a41113_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_235a75ae8_Status>> static__235a252a1_of(jule::Str _1122_path) {
	struct stat _1217_handle = (struct stat){};
	jule::I64 _1313_code = _235a44523_stat((&(_1122_path[0LL])),(&(_1217_handle)));
	if ((_1313_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_235a75ae8_Status>>(jule::Any(),jule::new_ptr<_235a75ae8_Status>(_235a75ae8_Status(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1217_handle.st_mode))),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1217_handle.st_size))))));
	}
	return jule::Exceptional<jule::Ptr<_235a75ae8_Status>>(_235a1c573_get_last_fs_error());
}



inline jule::Bool _235a3a11d_is_dir(_235a75ae8_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _235a75d18_is_reg(_235a75ae8_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _235a75ae8_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21c384552_Cmd> static__21c3849e7_new(jule::Str _2023_path) {
	return jule::new_ptr<_21c384552_Cmd>(_21c384552_Cmd(_2023_path,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Exceptional<jule::I64> _21c384cc2_spawn(_21c384552_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _21c388006___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _21c388006___spawn(_21c384552_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	}
	jule::I64 _5013_pid = fork();
	{
		auto &_match_expr{ _5013_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_2216557ec:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_2216565ab:;
			{
				jule::I64 _5517_status = ((((*_self_)._field_env == nullptr)) ? (_21c3876dc_execvp((*_self_)._field_path,(*_self_)._field_args)) : (static_cast<jule::I64>(static_cast<jule::I64>(_21c387ba4_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env)))));
				if ((_5517_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				}
				_21c388963_exit(255LL);
			}
		}
		_match_end_2216564ce:;
	}
	jule::I64 _6513_status = 0LL;
	if ((waitpid(_5013_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_21c383e03_get_last_process_error());
	}
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _21c384552_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c348b32_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _21c628340_prec(_21c627dde_Token* _self_) {
	if ((*_self_)._field_id != static_cast<jule::U64>(7LLU)) {
		return 0LLU;
	}
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_2216e7c02:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_2216e786c:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_2216e78d3:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2216e7949:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_2216e79e3:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_2216e710d:;
			{
				return 0LLU;
			}
		}
		_match_end_2216e741b:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21c627dde_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c62e4ab_is_ok(_21c62e038_File* _self_) {
	({
		auto except = static__235a252a1_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::Ptr<_235a75ae8_Status>();});
	});
	return true;
}



inline void _21c62e7ca_fill(_21c62e038_File* _self_,jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _21c62eaa5_dir(_21c62e038_File* _self_) {
	return _235ba6432_dir((*_self_)._field_path);
}



inline jule::Str _21c62ed80_name(_21c62e038_File* _self_) {
	return _235ba4c8d_base((*_self_)._field_path);
}



inline jule::U64 _21c63015a_addr(_21c62e038_File* _self_) {
	return static_cast<jule::U64>(((jule::U64)((&((*_self_))))));
}



inline jule::Str _21c630512_get_row(_21c62e038_File* _self_,jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;
	jule::I64 _4617_line_start = 0LL;
	jule::I64 _4717_i = 0LL;
	for (; _4717_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.len())); (_4717_i)++) {
		{
			if ((*_self_)._field_data[_4717_i] != '\n') {
				goto _iter_next_2216ee3ce;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_2216ee3ce:;
	}
	_iter_end_2216ee3ce:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _21c62e038_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c631766_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _21c638718_push_err(_21c638097_Lex* _self_,jule::Str _46027_fmt,jule::Slice<jule::Any> _46040_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21c632404_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_46027_fmt,_46040_args));
}



inline void _21c638b14_push_err_tok(_21c638097_Lex* _self_,_21c627dde_Token& _46532_token,jule::Str _46546_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21c632404_make_err(_46532_token._field_row,_46532_token._field_column,(*_self_)._field_file,_46546_fmt,jule::Slice<jule::Any>()));
}



inline void _21c638d56_lex(_21c638097_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_21c63b4b8_new_line(&(*_self_));
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			_21c627dde_Token _47521_token = _21c63cc7d_token(&(*_self_));
			if (_47521_token._field_id != static_cast<jule::U64>(0LLU)) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47521_token);
			}
		}
	_iter_next_22170556c:;
	}
	_iter_end_22170556c:;
}



inline jule::Str _21c63920d_id(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _48422_ln) {
	if ((_48422_ln.len() == 0LL)) {
		return jule::Str();
	}
	jule::I32 _48814_r;
	jule::I64 _48821_i;
	std::tie(_48814_r,_48821_i) = _2368b6262_decode_rune(_48422_ln);
	if ((_48814_r != '_') && (!(_21c62ba2a_is_letter(_48814_r)))) {
		return jule::Str();
	}
	while (_48821_i < static_cast<jule::I64>(static_cast<jule::I64>(_48422_ln.len()))) {
		{
			jule::I32 _49418_pr;
			jule::I64 _49422_n;
			std::tie(_49418_pr,_49422_n) = _2368b6262_decode_rune(_48422_ln.slice(_48821_i));
			if (((_49418_pr != '_') && (!(_21c62c146_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49418_pr)))))) && (!(_21c62ba2a_is_letter(_49418_pr)))) {
				(*_self_)._field_pos+=_48821_i;
				return static_cast<jule::Str>(_48422_ln.slice(0LL,_48821_i));
			}
			_48821_i+=_49422_n;
		}
	_iter_next_2217095c6:;
	}
	_iter_end_2217095c6:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_48422_ln.len());
	return static_cast<jule::Str>(_48422_ln);
}



inline jule::Slice<jule::U8> _21c6394d8_resume(_21c638097_Lex* _self_) {
	jule::I64 _50917_i = (*_self_)._field_pos;
	for (; _50917_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_50917_i)++) {
		{
			jule::I32 _51117_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50917_i]);
			if (_21c62b5eb_is_space(_51117_r)) {
				
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _51117_r };
					
					if (_match_expr == '\n') {
						_case_begin_22170ed5c:;
						{
							_21c63b4b8_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_22170eab5:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_22170e114:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_22170e6ec:;
				}
				goto _iter_next_22170cba1;
			}
			jule::I64 _52321_j = _50917_i;
			for (; _52321_j < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_52321_j)++) {
				{
					if ((*_self_)._field_file.get()._field_data[_52321_j] == '\n') {
						goto _iter_end_22170db19;
					}
				}
			_iter_next_22170db19:;
			}
			_iter_end_22170db19:;
			return (*_self_)._field_file.get()._field_data.slice(_50917_i,_52321_j);
		}
	_iter_next_22170cba1:;
	}
	_iter_end_22170cba1:;
	return nullptr;
}



inline void _21c639807_lex_line_comment(_21c638097_Lex* _self_,_21c627dde_Token& _53540_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if ((_53917_r == '\n') || (_53917_r == '\r')) {
				goto _iter_end_2217130b3;
			}
		}
	_iter_next_2217130b3:;
	}
	_iter_end_2217130b3:;
	if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
		_53540_token._field_id=static_cast<jule::U64>(18LLU);
		_53540_token._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53613_start,(*_self_)._field_pos));
	}
}



inline void _21c639b26_lex_range_comment(_21c638097_Lex* _self_,_21c627dde_Token& _55041_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_55417_r == '\r') {
				goto _iter_next_221717051;
			}
			if (_55417_r == '\n') {
				_21c63b4b8_new_line(&(*_self_));
				goto _iter_next_221717051;
			}
			(*_self_)._field_column+=1LL;
			if (((((*_self_)._field_pos + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/')) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
					_55041_token._field_id=static_cast<jule::U64>(18LLU);
					_55041_token._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55113_start,(*_self_)._field_pos));
				}
				return;
			}
		}
	_iter_next_221717051:;
	}
	_iter_end_221717051:;
	_21c638718_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _21c639ecd_num(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if (_57823_txt[0LL] == '_') {
		_57838_lit = jule::Str();
		return _57838_lit;
	}
	_57838_lit=_21c63656d_hex_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_21c636260_octal_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_21c63489b_binary_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_21c63458d_common_num(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_57838_lit.len());
	return _57838_lit;
}



inline jule::Str _21c63a385_escape_seq(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _60030_txt) {
	jule::Str _60117_seq = jule::Str();
	if ((_60030_txt.len() < 2LL)) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _60030_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_2217243c1:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60030_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2217242d3:;
			{
				_60117_seq=_21c636caa_big_unicode_point_escape(_60030_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_221724008:;
			{
				_60117_seq=_21c6370eb_little_unicode_point_escape(_60030_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_22172406e:;
			{
				_60117_seq=_21c6373e8_hex_byte_escape(_60030_txt);
			}
		}
		else {
			_case_begin_221723766:;
			{
				_60117_seq=_21c637706_byte_escape(_60030_txt);
			}
		}
		_match_end_221723e2b:;
	}
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_21c638718_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*_self_)._field_pos+=static_cast<jule::I64>(_60117_seq.len());
	return _60117_seq;
}



inline jule::Str _21c63a819_get_rune(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _63428_txt,jule::Bool _63441_raw) {
	if ((!(_63441_raw)) && (_63428_txt[0LL] == '\\')) {
		return _21c63a385_escape_seq(&(*_self_), _63428_txt);
	}
	jule::I32 _63914_r;
	jule::I64 _63917_n;
	std::tie(_63914_r,_63917_n) = _2368b6262_decode_rune(_63428_txt);
	(*_self_)._field_pos+=_63917_n;
	return static_cast<jule::Str>(_63914_r);
}



inline jule::Str _21c63abc1_lex_rune(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _64428_txt) {
	jule::Str _64517_run = jule::Str("'", 1);
	((*_self_)._field_column)++;
	jule::I64 _64717_n = 0LL;
	jule::I64 _64817_i = 1LL;
	for (; _64817_i < static_cast<jule::I64>(static_cast<jule::I64>(_64428_txt.len())); (_64817_i)++) {
		{
			if (_64428_txt[_64817_i] == '\r') {
				goto _iter_next_22172b928;
			}
			if (_64428_txt[_64817_i] == '\n') {
				_21c638718_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_21c63b4b8_new_line(&(*_self_));
				return jule::Str();
			}
			jule::Slice<jule::U8> _66017_part = _64428_txt.slice(_64817_i);
			jule::Str _66117_r = _21c63a819_get_rune(&(*_self_), _66017_part,false);
			_64517_run+=_66117_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_2368b8352_rune_count_str(_66117_r));
			if ((_66117_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_22172b928;
			}
			if ((_66117_r.len() > 1LL)) {
				_64817_i+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_66117_r.len())) - 1LL));
			}
			(_64717_n)++;
		}
	_iter_next_22172b928:;
	}
	_iter_end_22172b928:;
	if ((_64717_n == 0LL)) {
		_21c638718_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64717_n > 1LL)) {
		_21c638718_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _64517_run;
}



inline jule::Str _21c63ae9b_lex_str(_21c638097_Lex* _self_) {
	jule::Str _68417_s = jule::Str();
	jule::U8 _68513_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
	((*_self_)._field_pos)++;
	jule::Bool _68713_raw = _68513_mark == '`';
	_68417_s+=static_cast<jule::Str>(_68513_mark);
	((*_self_)._field_column)++;
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			jule::U8 _69217_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_69217_ch == '\r') {
				goto _iter_next_22173407e;
			}
			if (_69217_ch == '\n') {
				_21c63b4b8_new_line(&(*_self_));
				if ((!(_68713_raw))) {
					_21c638718_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _70421_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);
			jule::Str _70517_r = _21c63a819_get_rune(&(*_self_), _70421_part,_68713_raw);
			_68417_s+=_70517_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_2368b8352_rune_count_str(_70517_r));
			if (_69217_ch == _68513_mark) {
				goto _iter_end_22173407e;
			}
		}
	_iter_next_22173407e:;
	}
	_iter_end_22173407e:;
	return _68417_s;
}



inline jule::Bool _21c63b276_is_first_token_of_line(_21c638097_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _21c63b4b8_new_line(_21c638097_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _21c63bb06_is_op(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _72525_txt,jule::Str _72538_kind,jule::U64 _72549_id,_21c627dde_Token& _72567_t) {
	if ((!(_21c632833_bytes_has_prefix(_72525_txt,_72538_kind)))) {
		return false;
	}
	_72567_t._field_kind=_72538_kind;
	_72567_t._field_id=_72549_id;
	(*_self_)._field_pos+=static_cast<jule::I64>(_72538_kind.len());
	return true;
}



inline jule::Bool _21c63c08a_lex_basic_ops(_21c638097_Lex* _self_,jule::Slice<jule::U8> _73632_txt,_21c627dde_Token& _73650_tok) {
	{
		auto &expr = _21c631cc7_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_22173d253:;
		if (it != expr.end()) {
			_21c631766_KindPair &_22173d3a7_pair = *it;
			{
				if (_21c63bb06_is_op(&(*_self_), _73632_txt,_22173d3a7_pair._field_kind,_22173d3a7_pair._field_id,_73650_tok)) {
					return true;
				}
			}
			_iter_next_22173d253:;
			++it;
			goto _iter_begin_22173d253;
		}
		_iter_end_22173d253:;
	}
	return false;
}



inline jule::Bool _21c63c51e_lex_id(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _74626_txt,_21c627dde_Token& _74644_t) {
	jule::Str _74713_lex = _21c63920d_id(&(*_self_), _74626_txt);
	if (_74713_lex.empty()) {
		return false;
	}
	_74644_t._field_kind=_74713_lex;
	_74644_t._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _21c63c9a3_lex_num(_21c638097_Lex* _self_,jule::Slice<jule::U8>& _75727_txt,_21c627dde_Token& _75745_t) {
	jule::Str _75813_lex = _21c639ecd_num(&(*_self_), _75727_txt);
	if (_75813_lex.empty()) {
		return false;
	}
	_75745_t._field_kind=_75813_lex;
	_75745_t._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline _21c627dde_Token _21c63cc7d_token(_21c638097_Lex* _self_) {
	_21c627dde_Token _77017_t = _21c627dde_Token((*_self_)._field_file,jule::I64(),jule::I64(),jule::Str(),static_cast<jule::U64>(0LLU));
	jule::Slice<jule::U8> _77213_txt = _21c6394d8_resume(&(*_self_));
	if ((_77213_txt == nullptr)) {
		return _77017_t;
	}
	_77017_t._field_column=(*_self_)._field_column;
	_77017_t._field_row=(*_self_)._field_row;
	{
		
		if (_21c63c9a3_lex_num(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_221745b62:;
			{
				goto _match_end_2217447a9;
			}
		}
		else if (_77213_txt[0LL] == '\'') {
			_case_begin_221744e08:;
			{
				_77017_t._field_kind=_21c63abc1_lex_rune(&(*_self_), _77213_txt);
				_77017_t._field_id=static_cast<jule::U64>(6LLU);
				return _77017_t;
			}
		}
		else if ((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`')) {
			_case_begin_221744e6e:;
			{
				_77017_t._field_kind=_21c63ae9b_lex_str(&(*_self_));
				_77017_t._field_id=static_cast<jule::U64>(6LLU);
				return _77017_t;
			}
		}
		else if (_21c632833_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_221744ed5:;
			{
				_21c639807_lex_line_comment(&(*_self_), _77017_t);
				return _77017_t;
			}
		}
		else if (_21c632833_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_22174504b:;
			{
				_21c639b26_lex_range_comment(&(*_self_), _77017_t);
				return _77017_t;
			}
		}
		else if (_21c63bb06_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_77017_t) || _21c63bb06_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_77017_t) || _21c63bb06_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_77017_t) || _21c63bb06_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_77017_t) || _21c63bb06_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_77017_t) || _21c63bb06_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_77017_t) || _21c63c08a_lex_basic_ops(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_2217467de:;
			{
				goto _match_end_2217447a9;
			}
		}
		else if (_21c63c51e_lex_id(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_221746855:;
			{
				{
					auto &expr = _21c631a96_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_22174ea7d:;
					if (it != expr.end()) {
						_21c631766_KindPair &_22174ebd2_pair = *it;
						{
							if (_22174ebd2_pair._field_kind == _77017_t._field_kind) {
								_77017_t._field_id=_22174ebd2_pair._field_id;
								goto _iter_end_22174ea7d;
							}
						}
						_iter_next_22174ea7d:;
						++it;
						goto _iter_begin_22174ea7d;
					}
					_iter_end_22174ea7d:;
				}
			}
		}
		else {
			_case_begin_221744d92:;
			{
				jule::I32 _81718_r;
				jule::I64 _81721_sz;
				std::tie(_81718_r,_81721_sz) = _2368b6262_decode_rune(_77213_txt);
				_21c638718_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _77017_t;
			}
		}
		_match_end_2217447a9:;
	}
	(*_self_)._field_column+=static_cast<jule::I64>(_2368b8352_rune_count_str(_77017_t._field_kind));
	return _77017_t;
}







std::ostream &operator<<(std::ostream &_Stream, _21c638097_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4cc2b0_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c5ec545_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c5c6e48_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c5a1c25_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c515c99_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c5ee613_is_unsafe(_21c52b199_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21c52b199_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c601ca8_auto_sized(_21c486ac7_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21c486ac7_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d770a_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d792a_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d808a_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63d410_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63e1d0_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c6411e3_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c6448ab_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c63ea60_is_trait_impl(_21c64866d_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _21c63ebc5_is_struct_impl(_21c64866d_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21c64866d_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21cb7e09e_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21cb7e2be_PackageInfo _Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21cb81876_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _21cb82a20_stop(_21cb82327_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _21cb82cea_stopped(_21cb82327_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _21cb830c5_finished(_21cb82327_ScopeParser* _self_) {
	return (*_self_)._field_pos >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline jule::Bool _21cb833a0_is_last_st(_21cb82327_ScopeParser* _self_) {
	return ((*_self_)._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline void _21cb8379b_push_err(_21cb82327_ScopeParser* _self_,_21c627dde_Token _18927_token,jule::Str _18941_fmt) {
	_21cba9e10_push_err((*_self_)._field_p.ptr(), _18927_token,_18941_fmt,jule::Slice<jule::Any>());
}



inline void _21cb83b97_push_suggestion(_21cb82327_ScopeParser* _self_,jule::Str _19434_fmt,jule::Slice<jule::Any> _19447_args) {
	_21cbaa30b_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,_19447_args);
}



inline void _21cb83eb6_insert_as_next(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_21cb81876_Stmt>(_21cb81876_Stmt(_19838_tokens,jule::Bool()));
}



inline jule::Ptr<_21cb81876_Stmt> _21cb84291_next(_21cb82327_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_21c6411e3_ScopeTree> _21cb84648_build_scope(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _20835_tokens) {
	jule::Ptr<_21c6411e3_ScopeTree> _20917_s = _21cb80523_new_scope();
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_21cb82327_ScopeParser _21117_ssp = _21cb82327_ScopeParser((*_self_)._field_p,jule::Ptr<_21c6411e3_ScopeTree>(),jule::Slice<jule::Ptr<_21cb81876_Stmt>>(),jule::I64());
	_21cb9502c_build(&_21117_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _21cb84a00_build_var_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _21836_tokens) {
	jule::Ptr<_21c64205c_VarDecl> _21917_v = _21cbad375_build_var((*_self_)._field_p, _21836_tokens);
	_21917_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_21917_v);
}



inline jule::Any _21cb84da7_build_ret_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _22435_tokens) {
	jule::Ptr<_21c6423c0_RetSt> _22517_st = jule::new_ptr<_21c6423c0_RetSt>(_21c6423c0_RetSt(_22435_tokens[0LL],jule::Ptr<_21c4d7b4a_Expr>()));
	if ((_22435_tokens.len() > 1LL)) {
		_22435_tokens=_22435_tokens.slice(1LL);
		_22517_st.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _22435_tokens);
	}
	return jule::Any(_22517_st);
}



inline jule::Any _21cb8525e_build_while_next_iter(_21cb82327_ScopeParser* _self_,jule::Ptr<_21cb81876_Stmt>& _23545_s) {
	jule::Ptr<_21c6428ba_Iter> _23617_it = jule::new_ptr<_21c6428ba_Iter>(_21c6428ba_Iter(_23545_s.get()._field_tokens[0LL],jule::Any(),jule::Ptr<_21c6411e3_ScopeTree>()));
	jule::Slice<_21c627dde_Token> _23917_tokens = _23545_s.get()._field_tokens.slice(1LL);
	jule::Ptr<_21c642e3c_WhileKind> _24017_kind = jule::new_ptr<_21c642e3c_WhileKind>(_21c642e3c_WhileKind());
	if ((_23917_tokens.len() > 0LL)) {
		_24017_kind.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _23917_tokens);
	}
	if (_21cb833a0_is_last_st(&(*_self_))) {
		_21cb8379b_push_err(&(*_self_), _23617_it.get()._field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_23917_tokens=_21cb84291_next(&(*_self_)).get()._field_tokens;
	jule::Slice<_21c627dde_Token> _25217_st_tokens = _21cb96704_get_block_expr(_23917_tokens);
	if ((_25217_st_tokens.len() > 0LL)) {
		jule::Ptr<_21cb81876_Stmt> _25421_stmt = jule::new_ptr<_21cb81876_Stmt>(_21cb81876_Stmt(_25217_st_tokens,_23545_s.get()._field_terminated));
		_24017_kind.get()._field_next_token=_25217_st_tokens[0LL];
		_24017_kind.get()._field_next=_21cb94b31_build_st(&(*_self_), _25421_stmt);
	}
	jule::I64 _26217_i = _25217_st_tokens.len();
	jule::Slice<_21c627dde_Token> _26317_block_tokens = _21cba7429_range(_26217_i,jule::Str("{", 1),jule::Str("}", 1),_23917_tokens);
	if ((_26317_block_tokens == nullptr)) {
		_21cb82a20_stop(&(*_self_));
		_21cb8379b_push_err(&(*_self_), _23617_it.get()._field_token,jule::Str("body is not exist", 17));
		_21cb83b97_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_26217_i < static_cast<jule::I64>(static_cast<jule::I64>(_23917_tokens.len()))) {
		_21cb8379b_push_err(&(*_self_), _23917_tokens[_26217_i],jule::Str("invalid syntax", 14));
	}
	_23617_it.get()._field_scope=_21cb84648_build_scope(&(*_self_), _26317_block_tokens);
	_23617_it.get()._field_kind=jule::Any(_24017_kind);
	return jule::Any(_23617_it);
}



inline jule::Ptr<_21c642e3c_WhileKind> _21cb85616_build_while_iter_kind(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _28045_tokens) {
	return jule::new_ptr<_21c642e3c_WhileKind>(_21c642e3c_WhileKind(_21cbaa6b3_build_expr((*_self_)._field_p, _28045_tokens),jule::Any(),_21c627dde_Token()));
}



inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cb85a12_get_range_kind_keys_tokens(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _28650_toks) {
	jule::Slice<jule::Slice<_21c627dde_Token>> _28718_vars;
	jule::Slice<_21c348b32_Log> _28724_errs;
	std::tie(_28718_vars,_28724_errs) = _21cba7c43_parts(_28650_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28724_errs);
	return _28718_vars;
}



inline jule::Ptr<_21c64205c_VarDecl> _21cb85da8_build_range_kind_key(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _29244_tokens) {
	if ((_29244_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_21c64205c_VarDecl> _29617_key = jule::new_ptr<_21c64205c_VarDecl>(_21c64205c_VarDecl(jule::Ptr<_21c6411e3_ScopeTree>(),_29244_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21c5d253b_TypeDecl>(),jule::Ptr<_21c4d7b4a_Expr>()));
	if (_29617_key.get()._field_token._field_id == static_cast<jule::U64>(36LLU)) {
		_29617_key.get()._field_mutable=true;
		if ((_29244_tokens.len() == 1LL)) {
			_21cb8379b_push_err(&(*_self_), _29617_key.get()._field_token,jule::Str("invalid syntax", 14));
		}
		_29617_key.get()._field_token=_29244_tokens[1LL];
	} else if ((_29244_tokens.len() > 1LL)) {
		_21cb8379b_push_err(&(*_self_), _29244_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_29617_key.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cb8379b_push_err(&(*_self_), _29617_key.get()._field_token,jule::Str("invalid syntax", 14));
		_21cb83b97_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_29617_key.get()._field_ident=_29617_key.get()._field_token._field_kind;
	return _29617_key;
}



inline jule::Slice<jule::Ptr<_21c64205c_VarDecl>> _21cb86260_build_range_kind_keys(_21cb82327_ScopeParser* _self_,jule::Slice<jule::Slice<_21c627dde_Token>>& _31745_parts) {
	jule::Slice<jule::Ptr<_21c64205c_VarDecl>> _31817_keys = nullptr;
	{
		auto &expr = _31745_parts;
		auto it = expr.begin();
		_iter_begin_22184ed59:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _22184ee8b_tokens = *it;
			{
				_31817_keys = jule::alloc_for_append(_31817_keys,1);_31817_keys.__push(_21cb85da8_build_range_kind_key(&(*_self_), _22184ee8b_tokens));
			}
			_iter_next_22184ed59:;
			++it;
			goto _iter_begin_22184ed59;
		}
		_iter_end_22184ed59:;
	}
	return _31817_keys;
}



inline void _21cb866a0_setup_range_kind_keys_plain(_21cb82327_ScopeParser* _self_,jule::Ptr<_21c643558_RangeKind>& _32551_rng,jule::Slice<_21c627dde_Token>& _32573_tokens) {
	jule::Slice<jule::Slice<_21c627dde_Token>> _32617_key_tokens = _21cb85a12_get_range_kind_keys_tokens(&(*_self_), _32573_tokens);
	if ((_32617_key_tokens.len() == 0LL)) {
		return;
	}
	if ((_32617_key_tokens.len() > 2LL)) {
		_21cb8379b_push_err(&(*_self_), _32551_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_21c64205c_VarDecl>> _33317_keys = _21cb86260_build_range_kind_keys(&(*_self_), _32617_key_tokens);
	_32551_rng.get()._field_key_a=_33317_keys[0LL];
	if ((_33317_keys.len() > 1LL)) {
		_32551_rng.get()._field_key_b=_33317_keys[1LL];
	}
}



inline void _21cb86ace_setup_range_kind_keys_explicit(_21cb82327_ScopeParser* _self_,jule::Ptr<_21c643558_RangeKind>& _34054_rng,jule::Slice<_21c627dde_Token>& _34076_tokens) {
	jule::I64 _34117_i = 0LL;
	jule::Slice<_21c627dde_Token> _34217_rang = _21cba7429_range(_34117_i,jule::Str("(", 1),jule::Str(")", 1),_34076_tokens);
	if (_34117_i < static_cast<jule::I64>(static_cast<jule::I64>(_34076_tokens.len()))) {
		_21cb8379b_push_err(&(*_self_), _34054_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	}
	_21cb866a0_setup_range_kind_keys_plain(&(*_self_), _34054_rng,_34217_rang);
}



inline void _21cb8bd26_setup_range_kind_keys(_21cb82327_ScopeParser* _self_,jule::Ptr<_21c643558_RangeKind>& _34945_rng,jule::Slice<_21c627dde_Token>& _34967_tokens) {
	if (_34967_tokens[0LL]._field_id == static_cast<jule::U64>(3LLU)) {
		if ((_34967_tokens[0LL]._field_kind != jule::Str("(", 1))) {
			_21cb8379b_push_err(&(*_self_), _34967_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		_21cb86ace_setup_range_kind_keys_explicit(&(*_self_), _34945_rng,_34967_tokens);
		return;
	}
	_21cb866a0_setup_range_kind_keys_plain(&(*_self_), _34945_rng,_34967_tokens);
}



inline jule::Ptr<_21c643558_RangeKind> _21cb8c387_build_range_iter_kind(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _36145_var_tokens,jule::Slice<_21c627dde_Token>& _36214_expr_tokens,_21c627dde_Token& _36241_in_token) {
	jule::Ptr<_21c643558_RangeKind> _36317_rng = jule::new_ptr<_21c643558_RangeKind>(_21c643558_RangeKind(_36241_in_token,jule::Ptr<_21c4d7b4a_Expr>(),jule::Ptr<_21c64205c_VarDecl>(),jule::Ptr<_21c64205c_VarDecl>()));
	if ((_36214_expr_tokens.len() == 0LL)) {
		_21cb8379b_push_err(&(*_self_), _36317_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36317_rng;
	}
	_36317_rng.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _36214_expr_tokens);
	if ((_36145_var_tokens.len() > 0LL)) {
		_21cb8bd26_setup_range_kind_keys(&(*_self_), _36317_rng,_36145_var_tokens);
	}
	return _36317_rng;
}



inline jule::Any _21cb8c81b_build_common_iter_kind(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _37746_tokens,_21c627dde_Token& _37764_err_tok) {
	jule::I64 _37817_brace_n = 0LL;
	{
		auto &expr = _37746_tokens;
		auto it = expr.begin();
		_iter_begin_22185e94b:;
		if (it != expr.end()) {
			jule::I64 _22185e9e5_i = it - expr.begin();
			_21c627dde_Token _22185ec6a_tok = *it;
			{
				if (_22185ec6a_tok._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _22185ec6a_tok._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_221860c38:;
							{
								(_37817_brace_n)++;
								goto _iter_next_22185e94b;
							}
						}
						else {
							_case_begin_2218605c8:;
							{
								(_37817_brace_n)--;
							}
						}
						_match_end_221860908:;
					}
				}
				if ((_37817_brace_n != 0LL)) {
					goto _iter_next_22185e94b;
				}
				{
					auto &_match_expr{ _22185ec6a_tok._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_22186040d:;
						{
							jule::Slice<_21c627dde_Token> _39625_decl_tokens = _37746_tokens.slice(0LL,_22185e9e5_i);
							jule::Slice<_21c627dde_Token> _39725_expr_tokens = _37746_tokens.slice((_22185e9e5_i + 1LL));
							return jule::Any(_21cb8c387_build_range_iter_kind(&(*_self_), _39625_decl_tokens,_39725_expr_tokens,_22185ec6a_tok));
						}
					}
					_match_end_22186172d:;
				}
			}
			_iter_next_22185e94b:;
			++it;
			_22185e9e5_i++;
			goto _iter_begin_22185e94b;
		}
		_iter_end_22185e94b:;
	}
	return jule::Any(_21cb85616_build_while_iter_kind(&(*_self_), _37746_tokens));
}



inline jule::Any _21cb8cbc3_build_common_iter(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _40440_tokens) {
	jule::Ptr<_21c6428ba_Iter> _40517_it = jule::new_ptr<_21c6428ba_Iter>(_21c6428ba_Iter(_40440_tokens[0LL],jule::Any(),jule::Ptr<_21c6411e3_ScopeTree>()));
	_40440_tokens=_40440_tokens.slice(1LL);
	if ((_40440_tokens.len() == 0LL)) {
		_21cb82a20_stop(&(*_self_));
		_21cb8379b_push_err(&(*_self_), _40517_it.get()._field_token,jule::Str("body is not exist", 17));
		_21cb83b97_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_21c627dde_Token> _41517_expr_tokens = _21cb96704_get_block_expr(_40440_tokens);
	if ((_41517_expr_tokens.len() > 0LL)) {
		_40517_it.get()._field_kind=_21cb8c81b_build_common_iter_kind(&(*_self_), _41517_expr_tokens,_40517_it.get()._field_token);
	}
	jule::I64 _41917_i = _41517_expr_tokens.len();
	jule::Slice<_21c627dde_Token> _42017_scope_tokens = _21cba7429_range(_41917_i,jule::Str("{", 1),jule::Str("}", 1),_40440_tokens);
	if ((_42017_scope_tokens == nullptr)) {
		_21cb82a20_stop(&(*_self_));
		_21cb8379b_push_err(&(*_self_), _40517_it.get()._field_token,jule::Str("body is not exist", 17));
		_21cb83b97_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_41917_i < static_cast<jule::I64>(static_cast<jule::I64>(_40440_tokens.len()))) {
		_21cb8379b_push_err(&(*_self_), _40440_tokens[_41917_i],jule::Str("invalid syntax", 14));
	}
	_40517_it.get()._field_scope=_21cb84648_build_scope(&(*_self_), _42017_scope_tokens);
	return jule::Any(_40517_it);
}



inline jule::Any _21cb8d07a_buid_iter_st(_21cb82327_ScopeParser* _self_,jule::Ptr<_21cb81876_Stmt>& _43436_st) {
	if (_43436_st.get()._field_terminated) {
		return _21cb8525e_build_while_next_iter(&(*_self_), _43436_st);
	}
	return _21cb8cbc3_build_common_iter(&(*_self_), _43436_st.get()._field_tokens);
}



inline jule::Any _21cb8d432_build_break_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _44138_tokens) {
	jule::Ptr<_21c6438bb_BreakSt> _44217_brk = jule::new_ptr<_21c6438bb_BreakSt>(_21c6438bb_BreakSt(_44138_tokens[0LL],_21c627dde_Token()));
	if ((_44138_tokens.len() > 1LL)) {
		if (_44138_tokens[1LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_21cb8379b_push_err(&(*_self_), _44138_tokens[1LL],jule::Str("invalid syntax", 14));
			_21cb83b97_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44217_brk.get()._field_label=_44138_tokens[1LL];
			if ((_44138_tokens.len() > 2LL)) {
				_21cb8379b_push_err(&(*_self_), _44138_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44217_brk);
}



inline jule::Any _21cb8d7d9_build_cont_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _45937_tokens) {
	jule::Ptr<_21c643c2e_ContSt> _46017_cont = jule::new_ptr<_21c643c2e_ContSt>(_21c643c2e_ContSt(_45937_tokens[0LL],_21c627dde_Token()));
	if ((_45937_tokens.len() > 1LL)) {
		if (_45937_tokens[1LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_21cb8379b_push_err(&(*_self_), _45937_tokens[1LL],jule::Str("invalid syntax", 14));
			_21cb83b97_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46017_cont.get()._field_label=_45937_tokens[1LL];
			if ((_45937_tokens.len() > 2LL)) {
				_21cb8379b_push_err(&(*_self_), _45937_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_46017_cont);
}



inline jule::Ptr<_21c64413b_If> _21cb8db91_build_if(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _47732_tokens) {
	jule::Ptr<_21c64413b_If> _47817_model = jule::new_ptr<_21c64413b_If>(_21c64413b_If(_47732_tokens[0LL],jule::Ptr<_21c4d7b4a_Expr>(),jule::Ptr<_21c6411e3_ScopeTree>()));
	_47732_tokens=_47732_tokens.slice(1LL);
	jule::Slice<_21c627dde_Token> _48217_expr_tokens = _21cb96704_get_block_expr(_47732_tokens);
	jule::I64 _48317_i = 0LL;
	if ((_48217_expr_tokens.len() == 0LL)) {
		_21cb8379b_push_err(&(*_self_), _47817_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48317_i=static_cast<jule::I64>(_48217_expr_tokens.len());
	}
	jule::Slice<_21c627dde_Token> _48917_scope_tokens = _21cba7429_range(_48317_i,jule::Str("{", 1),jule::Str("}", 1),_47732_tokens);
	if ((_48917_scope_tokens == nullptr)) {
		_21cb82a20_stop(&(*_self_));
		_21cb8379b_push_err(&(*_self_), _47817_model.get()._field_token,jule::Str("body is not exist", 17));
		_21cb83b97_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_48317_i < static_cast<jule::I64>(static_cast<jule::I64>(_47732_tokens.len()))) {
		if (_47732_tokens[_48317_i]._field_id == static_cast<jule::U64>(17LLU)) {
			_47732_tokens=_47732_tokens.slice(_48317_i);
		} else {
			_21cb8379b_push_err(&(*_self_), _47732_tokens[_48317_i],jule::Str("invalid syntax", 14));
			_47732_tokens=nullptr;
		}
	}
	_47817_model.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _48217_expr_tokens);
	_47817_model.get()._field_scope=_21cb84648_build_scope(&(*_self_), _48917_scope_tokens);
	return _47817_model;
}



inline jule::Ptr<_21c64449e_Else> _21cb8e048_build_else(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _50934_tokens) {
	jule::Ptr<_21c64449e_Else> _51017_els = jule::new_ptr<_21c64449e_Else>(_21c64449e_Else(_50934_tokens[0LL],jule::Ptr<_21c6411e3_ScopeTree>()));
	_50934_tokens=_50934_tokens.slice(1LL);
	jule::I64 _51417_i = 0LL;
	jule::Slice<_21c627dde_Token> _51517_scope_tokens = _21cba7429_range(_51417_i,jule::Str("{", 1),jule::Str("}", 1),_50934_tokens);
	if ((_51517_scope_tokens == nullptr)) {
		if (_51417_i < static_cast<jule::I64>(static_cast<jule::I64>(_50934_tokens.len()))) {
			_21cb8379b_push_err(&(*_self_), _51017_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_21cb82a20_stop(&(*_self_));
			_21cb8379b_push_err(&(*_self_), _51017_els.get()._field_token,jule::Str("body is not exist", 17));
			_21cb83b97_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_51417_i < static_cast<jule::I64>(static_cast<jule::I64>(_50934_tokens.len()))) {
		_21cb8379b_push_err(&(*_self_), _50934_tokens[_51417_i],jule::Str("invalid syntax", 14));
	}
	_51017_els.get()._field_scope=_21cb84648_build_scope(&(*_self_), _51517_scope_tokens);
	return _51017_els;
}



inline jule::Any _21cb8e400_build_if_else_chain(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _53342_tokens) {
	jule::Ptr<_21c6448ab_Conditional> _53417_chain = jule::new_ptr<_21c6448ab_Conditional>(_21c6448ab_Conditional(_21cb8db91_build_if(&(*_self_), _53342_tokens),jule::Slice<jule::Ptr<_21c64413b_If>>(),jule::Ptr<_21c64449e_Else>()));
	if ((_53417_chain.get()._field_head == nullptr)) {
		return jule::Any(nullptr);
	}
	while ((_53342_tokens.len() != 0LL)) {
		{
			if (_53342_tokens[0LL]._field_id != static_cast<jule::U64>(17LLU)) {
				goto _iter_end_221884421;
			}
			if ((_53342_tokens.len() > 1LL) && (_53342_tokens[1LL]._field_id == static_cast<jule::U64>(16LLU))) {
				_53342_tokens=_53342_tokens.slice(1LL);
				jule::Ptr<_21c64413b_If> _54625_elif = _21cb8db91_build_if(&(*_self_), _53342_tokens);
				_53417_chain.get()._field_tail = jule::alloc_for_append(_53417_chain.get()._field_tail,1);_53417_chain.get()._field_tail.__push(_54625_elif);
				goto _iter_next_221884421;
			}
			_53417_chain.get()._field_default=_21cb8e048_build_else(&(*_self_), _53342_tokens);
			goto _iter_end_221884421;
		}
	_iter_next_221884421:;
	}
	_iter_end_221884421:;
	return jule::Any(_53417_chain);
}



inline jule::Any _21cb8e7a7_build_co_call_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _55639_tokens) {
	jule::Ptr<_21c4d892b_CoExpr> _55717_c = jule::new_ptr<_21c4d892b_CoExpr>(_21c4d892b_CoExpr(_55639_tokens[0LL],jule::Ptr<_21c4d7b4a_Expr>()));
	_55639_tokens=_55639_tokens.slice(1LL);
	_55717_c.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _55639_tokens);
	return jule::Any(_55717_c);
}



inline jule::Any _21cb8eb5e_build_goto_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _56537_tokens) {
	jule::Ptr<_21c640863_GotoSt> _56617_gt = jule::new_ptr<_21c640863_GotoSt>(_21c640863_GotoSt(_56537_tokens[0LL],_21c627dde_Token()));
	if ((_56537_tokens.len() == 1LL)) {
		_21cb8379b_push_err(&(*_self_), _56617_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if ((_56537_tokens.len() > 2LL)) {
		_21cb8379b_push_err(&(*_self_), _56537_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_21c627dde_Token _57517_ident_token = _56537_tokens[1LL];
	if (_57517_ident_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cb8379b_push_err(&(*_self_), _57517_ident_token,jule::Str("invalid syntax", 14));
		_21cb83b97_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56617_gt);
	}
	_56617_gt.get()._field_label=_57517_ident_token;
	return jule::Any(_56617_gt);
}



inline jule::Any _21cb90016_build_fall_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _58537_tokens) {
	jule::Ptr<_21c640a83_FallSt> _58617_fll = jule::new_ptr<_21c640a83_FallSt>(_21c640a83_FallSt(_58537_tokens[0LL]));
	if ((_58537_tokens.len() > 1LL)) {
		_21cb8379b_push_err(&(*_self_), _58537_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58617_fll);
}



inline jule::Any _21cb903bd_build_type_alias_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _59543_tokens) {
	jule::Ptr<_21c644ea5_TypeAliasDecl> _59617_tad = _21cbac1ba_build_type_alias_decl((*_self_)._field_p, _59543_tokens);
	_59617_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59617_tad);
}



inline void _21cb90973_push_case_expr(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _60137_tokens,_21c627dde_Token _60158_token,jule::Bool _6029_type_match,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>& _60232_exprs) {
	if ((_60137_tokens.len() == 0LL)) {
		return;
	}
	if (_6029_type_match) {
		jule::I64 _60821_i = 0LL;
		jule::Ptr<_21c5d253b_TypeDecl> _60922_t;
		jule::Bool _60925_ok;
		std::tie(_60922_t,_60925_ok) = _21cbabd13_build_type((*_self_)._field_p, _60137_tokens,(&(_60821_i)),true);
		if (_60925_ok) {
			_60232_exprs = jule::alloc_for_append(_60232_exprs,1);_60232_exprs.__push(jule::new_ptr<_21c4d7b4a_Expr>(_21c4d7b4a_Expr(_60158_token,jule::Bool(),jule::Any(jule::Any(_60922_t)))));
			if (_60821_i < static_cast<jule::I64>(static_cast<jule::I64>(_60137_tokens.len()))) {
				_21cb8379b_push_err(&(*_self_), _60137_tokens[_60821_i],jule::Str("invalid syntax", 14));
			}
		}
		return;
	}
	_60232_exprs = jule::alloc_for_append(_60232_exprs,1);_60232_exprs.__push(_21cbaa6b3_build_expr((*_self_)._field_p, _60137_tokens));
}



inline jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _21cb90e07_build_case_exprs(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _62440_tokens,jule::Bool _62457_type_match) {
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _62517_exprs = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>::alloc(0LL,1LL);
	jule::I64 _62717_brace_n = 0LL;
	jule::I64 _62817_j = 0LL;
	{
		auto &expr = _62440_tokens;
		auto it = expr.begin();
		_iter_begin_2218990a1:;
		if (it != expr.end()) {
			jule::I64 _221899bea_i = it - expr.begin();
			_21c627dde_Token _221899e5e_tok = *it;
			{
				if (_221899e5e_tok._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _221899e5e_tok._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_22189ae3d:;
							{
								(_62717_brace_n)++;
							}
						}
						else {
							_case_begin_22189a7cd:;
							{
								(_62717_brace_n)--;
							}
						}
						_match_end_22189ab0d:;
					}
					goto _iter_next_2218990a1;
				} else if ((_62717_brace_n != 0LL)) {
					goto _iter_next_2218990a1;
				}
				{
					
					if ((_221899e5e_tok._field_id == static_cast<jule::U64>(7LLU)) && (_221899e5e_tok._field_kind == jule::Str("|", 1))) {
						_case_begin_22189b933:;
						{
							jule::Slice<_21c627dde_Token> _64521_expr_tokens = _62440_tokens.slice(_62817_j,_221899bea_i);
							if ((_64521_expr_tokens.len() == 0LL)) {
								_21cb8379b_push_err(&(*_self_), _221899e5e_tok,jule::Str("expression missing", 18));
							} else {
								_21cb90973_push_case_expr(&(*_self_), _62440_tokens.slice(_62817_j,_221899bea_i),_221899e5e_tok,_62457_type_match,_62517_exprs);
							}
							_62817_j=static_cast<jule::I64>((_221899bea_i + 1LL));
						}
					}
					else if (_221899e5e_tok._field_id == static_cast<jule::U64>(11LLU)) {
						_case_begin_22189ba32:;
						{
							_21cb90973_push_case_expr(&(*_self_), _62440_tokens.slice(_62817_j,_221899bea_i),_221899e5e_tok,_62457_type_match,_62517_exprs);
							_62440_tokens=_62440_tokens.slice((_221899bea_i + 1LL));
							return _62517_exprs;
						}
					}
					_match_end_22189b180:;
				}
			}
			_iter_next_2218990a1:;
			++it;
			_221899bea_i++;
			goto _iter_begin_2218990a1;
		}
		_iter_end_2218990a1:;
	}
	_21cb8379b_push_err(&(*_self_), _62440_tokens[0LL],jule::Str("invalid syntax", 14));
	_62440_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_21c6411e3_ScopeTree> _21cb912ae_build_case_scope(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _66340_tokens) {
	jule::I64 _66417_n = 0LL;
	for (;;) {
		{
			jule::I64 _66621_i = 0LL;
			jule::Slice<_21c627dde_Token> _66722_next;
			std::tie(_66722_next,std::ignore) = _21cb814d0_skip_st(_66621_i,_66340_tokens.slice(_66417_n));
			if ((_66722_next.len() == 0LL)) {
				goto _iter_end_2218a1b9c;
			}
			_21c627dde_Token _67117_tok = _66722_next[0LL];
			if ((_67117_tok._field_id != static_cast<jule::U64>(7LLU)) || (_67117_tok._field_kind != jule::Str("|", 1))) {
				_66417_n+=_66621_i;
				goto _iter_next_2218a1b9c;
			}
			jule::Slice<_21c627dde_Token> _67621_scope_tokens = _66340_tokens.slice(0LL,_66417_n);
			jule::Ptr<_21c6411e3_ScopeTree> _67721_scope = _21cb84648_build_scope(&(*_self_), _67621_scope_tokens);
			_66340_tokens=_66340_tokens.slice(_66417_n);
			return _67721_scope;
		}
	_iter_next_2218a1b9c:;
	}
	_iter_end_2218a1b9c:;
	jule::Ptr<_21c6411e3_ScopeTree> _68117_scope = _21cb84648_build_scope(&(*_self_), _66340_tokens);
	_66340_tokens=nullptr;
	return _68117_scope;
}



inline std::tuple<jule::Ptr<_21c6453b2_Case>,jule::Bool> _21cb91743_build_case(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _68634_tokens,jule::Bool _68651_type_match) {
	jule::Ptr<_21c6453b2_Case> _68717_c = jule::new_ptr<_21c6453b2_Case>(_21c6453b2_Case(_68634_tokens[0LL],jule::Ptr<_21c6411e3_ScopeTree>(),jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>()));
	_68634_tokens=_68634_tokens.slice(1LL);
	_68717_c.get()._field_exprs=_21cb90e07_build_case_exprs(&(*_self_), _68634_tokens,_68651_type_match);
	_68717_c.get()._field_scope=_21cb912ae_build_case_scope(&(*_self_), _68634_tokens);
	jule::Bool _69313_is_default = (_68717_c.get()._field_exprs.len() == 0LL);
	return std::make_tuple(_68717_c,_69313_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_21c6453b2_Case>>,jule::Ptr<_21c64449e_Else>> _21cb91bc7_build_cases(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _69734_tokens,jule::Bool _69751_type_match) {
	jule::Slice<jule::Ptr<_21c6453b2_Case>> _69817_cases = nullptr;
	jule::Ptr<_21c64449e_Else> _69917_def = nullptr;
	jule::Bool _70017_def_not_last = false;
	while ((_69734_tokens.len() > 0LL)) {
		{
			_21c627dde_Token _70221_tok = _69734_tokens[0LL];
			if ((_70221_tok._field_id != static_cast<jule::U64>(7LLU)) || (_70221_tok._field_kind != jule::Str("|", 1))) {
				_21cb8379b_push_err(&(*_self_), _70221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_2218a9c71;
			}
			jule::Ptr<_21c6453b2_Case> _70722_c;
			jule::Bool _70725_is_default;
			std::tie(_70722_c,_70725_is_default) = _21cb91743_build_case(&(*_self_), _69734_tokens,_69751_type_match);
			if (_70725_is_default) {
				_70722_c.get()._field_token=_70221_tok;
				if ((_69917_def == nullptr)) {
					_69917_def=jule::new_ptr<_21c64449e_Else>(_21c64449e_Else(_70722_c.get()._field_token,_70722_c.get()._field_scope));
				} else {
					_21cb8379b_push_err(&(*_self_), _70221_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70017_def_not_last=_70017_def_not_last || (_69917_def != nullptr);
				_69817_cases = jule::alloc_for_append(_69817_cases,1);_69817_cases.__push(_70722_c);
			}
		}
	_iter_next_2218a9c71:;
	}
	_iter_end_2218a9c71:;
	if (_70017_def_not_last) {
		_21cb8379b_push_err(&(*_self_), _69917_def.get()._field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69817_cases,_69917_def);
}



inline jule::Ptr<_21c645912_MatchCase> _21cb9207e_build_match_case(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _73139_tokens) {
	jule::Ptr<_21c645912_MatchCase> _73217_m = jule::new_ptr<_21c645912_MatchCase>(_21c645912_MatchCase(_73139_tokens[0LL],jule::Bool(),jule::Ptr<_21c4d7b4a_Expr>(),jule::Slice<jule::Ptr<_21c6453b2_Case>>(),jule::Ptr<_21c64449e_Else>()));
	_73139_tokens=_73139_tokens.slice(1LL);
	if ((_73139_tokens.len() > 0LL) && (_73139_tokens[0LL]._field_id == static_cast<jule::U64>(10LLU))) {
		_73217_m.get()._field_type_match=true;
		_73139_tokens=_73139_tokens.slice(1LL);
	}
	jule::Slice<_21c627dde_Token> _74217_expr_tokens = _21cb96704_get_block_expr(_73139_tokens);
	if ((_74217_expr_tokens.len() > 0LL)) {
		_73217_m.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _74217_expr_tokens);
	} else if (_73217_m.get()._field_type_match) {
		_21cb8379b_push_err(&(*_self_), _73217_m.get()._field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _74917_i = _74217_expr_tokens.len();
	jule::Slice<_21c627dde_Token> _75017_block_toks = _21cba7429_range(_74917_i,jule::Str("{", 1),jule::Str("}", 1),_73139_tokens);
	if ((_75017_block_toks == nullptr)) {
		_21cb82a20_stop(&(*_self_));
		_21cb8379b_push_err(&(*_self_), _73217_m.get()._field_token,jule::Str("body is not exist", 17));
		_21cb83b97_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_73217_m.get()._field_cases,_73217_m.get()._field_default) = _21cb91bc7_build_cases(&(*_self_), _75017_block_toks,_73217_m.get()._field_type_match);
	return _73217_m;
}



inline jule::Ptr<_21c6411e3_ScopeTree> _21cb92436_build_scope_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _76237_tokens) {
	jule::Bool _76317_is_unsafe = false;
	jule::Bool _76417_is_deferred = false;
	_21c627dde_Token _76517_token = _76237_tokens[0LL];
	if (_76517_token._field_id == static_cast<jule::U64>(35LLU)) {
		_76317_is_unsafe=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if ((_76237_tokens.len() == 0LL)) {
			_21cb8379b_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_76517_token=_76237_tokens[0LL];
		if (_76517_token._field_id == static_cast<jule::U64>(37LLU)) {
			_76417_is_deferred=true;
			_76237_tokens=_76237_tokens.slice(1LL);
			if ((_76237_tokens.len() == 0LL)) {
				_21cb8379b_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_76517_token._field_id == static_cast<jule::U64>(37LLU)) {
		_76417_is_deferred=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if ((_76237_tokens.len() == 0LL)) {
			_21cb8379b_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::I64 _79117_i = 0LL;
	jule::Slice<_21c627dde_Token> _79217_scope_tokens = _21cba7429_range(_79117_i,jule::Str("{", 1),jule::Str("}", 1),_76237_tokens);
	if ((_79217_scope_tokens == nullptr)) {
		_21cb8379b_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79117_i < static_cast<jule::I64>(static_cast<jule::I64>(_76237_tokens.len()))) {
		_21cb8379b_push_err(&(*_self_), _76237_tokens[_79117_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_21c6411e3_ScopeTree> _79917_scope = _21cb84648_build_scope(&(*_self_), _79217_scope_tokens);
	_79917_scope.get()._field_unsafety=_76317_is_unsafe;
	_79917_scope.get()._field_deferred=_76417_is_deferred;
	return _79917_scope;
}



inline jule::Ptr<_21c640643_LabelSt> _21cb927dd_build_label_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _80538_tokens) {
	jule::Ptr<_21c640643_LabelSt> _80617_lbl = jule::new_ptr<_21c640643_LabelSt>(_21c640643_LabelSt(_80538_tokens[0LL],_80538_tokens[0LL]._field_kind));
	if ((_80538_tokens.len() > 2LL)) {
		_80538_tokens=_80538_tokens.slice(2LL);
		_21cb83eb6_insert_as_next(&(*_self_), _80538_tokens);
	}
	return _80617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _21cb92b95_build_id_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _82035_tokens) {
	jule::Bool _82064_ok = jule::Bool();
	if ((_82035_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82064_ok);
	}
	_21c627dde_Token _82517_token = _82035_tokens[1LL];
	{
		auto &_match_expr{ _82517_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_2218c4241:;
			{
				_82064_ok = true;
				return std::make_tuple(jule::Any(_21cb927dd_build_label_st(&(*_self_), _82035_tokens)),_82064_ok);
			}
		}
		_match_end_2218c4ebc:;
	}
	return std::make_tuple(jule::Any(),_82064_ok);
}



inline jule::Ptr<_21cba5180_AssignInfo> _21cb9304c_build_assign_info(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _83441_tokens) {
	jule::Ptr<_21cba5180_AssignInfo> _83517_info = jule::new_ptr<_21cba5180_AssignInfo>(_21cba5180_AssignInfo(jule::Slice<_21c627dde_Token>(),jule::Slice<_21c627dde_Token>(),_21c627dde_Token(),true));
	jule::I64 _83817_brace_n = 0LL;
	{
		auto &expr = _83441_tokens;
		auto it = expr.begin();
		_iter_begin_2218c72aa:;
		if (it != expr.end()) {
			jule::I64 _2218c7354_i = it - expr.begin();
			_21c627dde_Token _2218c75c9_token = *it;
			{
				if (_2218c75c9_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _2218c75c9_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_2218c85db:;
							{
								(_83817_brace_n)++;
							}
						}
						else {
							_case_begin_2218c7e7b:;
							{
								(_83817_brace_n)--;
							}
						}
						_match_end_2218c82ab:;
					}
				}
				{
					
					if ((_83817_brace_n > 0LL)) {
						_case_begin_2218c883e:;
						{
							goto _iter_next_2218c72aa;
						}
					}
					else if (_2218c75c9_token._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_2218c8bd5:;
						{
							goto _iter_next_2218c72aa;
						}
					}
					else if ((!(_21c62d499_is_assign_op(_2218c75c9_token._field_kind)))) {
						_case_begin_2218c8c5c:;
						{
							goto _iter_next_2218c72aa;
						}
					}
					_match_end_2218c8eb0:;
				}
				_83517_info.get()._field_l=_83441_tokens.slice(0LL,_2218c7354_i);
				if ((_83517_info.get()._field_l.len() == 0LL)) {
					_83517_info.get()._field_ok=false;
				}
				_83517_info.get()._field_setter=_2218c75c9_token;
				if ((_2218c7354_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_83441_tokens.len()))) {
					_83517_info.get()._field_r=nullptr;
					_83517_info.get()._field_ok=_21c62d18b_is_postfix_op(_83517_info.get()._field_setter._field_kind);
					goto _iter_end_2218c72aa;
				}
				_83517_info.get()._field_r=_83441_tokens.slice((_2218c7354_i + 1LL));
				if (_21c62d18b_is_postfix_op(_83517_info.get()._field_setter._field_kind)) {
					if ((_83517_info.get()._field_r.len() > 0LL)) {
						_21cb8379b_push_err(&(*_self_), _83517_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_83517_info.get()._field_r=nullptr;
					}
				}
				goto _iter_end_2218c72aa;
			}
			_iter_next_2218c72aa:;
			++it;
			_2218c7354_i++;
			goto _iter_begin_2218c72aa;
		}
		_iter_end_2218c72aa:;
	}
	return _83517_info;
}



inline jule::Ptr<_21c640ca3_AssignLeft> _21cb93404_build_assign_l(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _88238_tokens) {
	jule::Ptr<_21c640ca3_AssignLeft> _88317_l = jule::new_ptr<_21c640ca3_AssignLeft>(_21c640ca3_AssignLeft(_88238_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_21c4d7b4a_Expr>()));
	if (_88238_tokens[0LL]._field_id == static_cast<jule::U64>(2LLU)) {
		_88317_l.get()._field_ident=_88317_l.get()._field_token._field_kind;
	}
	_88317_l.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _88238_tokens);
	return _88317_l;
}



inline jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>> _21cb937ab_build_assign_ls(_21cb82327_ScopeParser* _self_,jule::Slice<jule::Slice<_21c627dde_Token>>& _89539_parts) {
	jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>> _89617_lefts = nullptr;
	{
		auto &expr = _89539_parts;
		auto it = expr.begin();
		_iter_begin_2218d268e:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _2218d27c1_part = *it;
			{
				jule::Ptr<_21c640ca3_AssignLeft> _89821_l = _21cb93404_build_assign_l(&(*_self_), _2218d27c1_part);
				_89617_lefts = jule::alloc_for_append(_89617_lefts,1);_89617_lefts.__push(_89821_l);
			}
			_iter_next_2218d268e:;
			++it;
			goto _iter_begin_2218d268e;
		}
		_iter_end_2218d268e:;
	}
	return _89617_lefts;
}



inline std::tuple<jule::Ptr<_21c640ec3_AssignSt>,jule::Bool> _21cb93b63_build_plain_assign(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _90542_tokens) {
	jule::Ptr<_21cba5180_AssignInfo> _90617_info = _21cb9304c_build_assign_info(&(*_self_), _90542_tokens);
	if ((!(_90617_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_21c640ec3_AssignSt> _91117_assign = jule::new_ptr<_21c640ec3_AssignSt>(_21c640ec3_AssignSt(jule::Bool(),_90617_info.get()._field_setter,jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>>(),jule::Ptr<_21c4d7b4a_Expr>()));
	jule::Slice<jule::Slice<_21c627dde_Token>> _91518_parts;
	jule::Slice<_21c348b32_Log> _91525_errs;
	std::tie(_91518_parts,_91525_errs) = _21cba7c43_parts(_90617_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_91525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_91525_errs);
		return std::make_tuple(nullptr,false);
	}
	_91117_assign.get()._field_left=_21cb937ab_build_assign_ls(&(*_self_), _91518_parts);
	if ((_90617_info.get()._field_r != nullptr)) {
		_91117_assign.get()._field_right=_21cbaa6b3_build_expr((*_self_)._field_p, _90617_info.get()._field_r);
	}
	return std::make_tuple(_91117_assign,true);
}



inline std::tuple<jule::Ptr<_21c640ec3_AssignSt>,jule::Bool> _21cb9401a_build_decl_assign(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token> _92940_tokens) {
	if ((_92940_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	}
	_92940_tokens=_92940_tokens.slice(1LL);
	_21c627dde_Token _93517_token = _92940_tokens[0LL];
	if ((_93517_token._field_id != static_cast<jule::U64>(3LLU)) || (_93517_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_21c640ec3_AssignSt> _94017_assign = jule::new_ptr<_21c640ec3_AssignSt>(_21c640ec3_AssignSt(true,_21c627dde_Token(),jule::Slice<jule::Ptr<_21c640ca3_AssignLeft>>(),jule::Ptr<_21c4d7b4a_Expr>()));
	jule::I64 _94417_i = 0LL;
	jule::Slice<_21c627dde_Token> _94517_rang = _21cba7429_range(_94417_i,jule::Str("(", 1),jule::Str(")", 1),_92940_tokens);
	if ((_94517_rang == nullptr)) {
		_21cb8379b_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_94417_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_92940_tokens.len()))) {
		_94017_assign.get()._field_setter=_92940_tokens[_94417_i];
		(_94417_i)++;
		jule::Slice<_21c627dde_Token> _95221_expr_tokens = _92940_tokens.slice(_94417_i);
		_94017_assign.get()._field_right=_21cbaa6b3_build_expr((*_self_)._field_p, _95221_expr_tokens);
	}
	jule::Slice<jule::Slice<_21c627dde_Token>> _95718_parts;
	jule::Slice<_21c348b32_Log> _95725_errs;
	std::tie(_95718_parts,_95725_errs) = _21cba7c43_parts(_94517_rang,static_cast<jule::U64>(8LLU),true);
	if ((_95725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_95725_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _95718_parts;
		auto it = expr.begin();
		_iter_begin_2218e1192:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _2218e14e4_part = *it;
			{
				jule::Bool _96421_is_mut = false;
				jule::Bool _96521_is_ref = false;
				_93517_token=_2218e14e4_part[0LL];
				if (_93517_token._field_id == static_cast<jule::U64>(36LLU)) {
					_96421_is_mut=true;
					_2218e14e4_part=_2218e14e4_part.slice(1LL);
					if ((_2218e14e4_part.len() == 0LL)) {
						_21cb8379b_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_2218e1192;
					}
				}
				if ((_2218e14e4_part[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_2218e14e4_part[0LL]._field_kind == jule::Str("&", 1))) {
					_96521_is_ref=true;
					_2218e14e4_part=_2218e14e4_part.slice(1LL);
					if ((_2218e14e4_part.len() == 0LL)) {
						_21cb8379b_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_2218e1192;
					}
				}
				if (((_2218e14e4_part[0LL]._field_id != static_cast<jule::U64>(2LLU)) && (_2218e14e4_part[0LL]._field_id != static_cast<jule::U64>(3LLU))) && (_2218e14e4_part[0LL]._field_kind != jule::Str("(", 1))) {
					_21cb8379b_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
					goto _iter_next_2218e1192;
				}
				jule::Ptr<_21c640ca3_AssignLeft> _99321_l = _21cb93404_build_assign_l(&(*_self_), _2218e14e4_part);
				_99321_l.get()._field_mutable=_96421_is_mut;
				_99321_l.get()._field_reference=_96521_is_ref;
				_94017_assign.get()._field_left = jule::alloc_for_append(_94017_assign.get()._field_left,1);_94017_assign.get()._field_left.__push(_99321_l);
			}
			_iter_next_2218e1192:;
			++it;
			goto _iter_begin_2218e1192;
		}
		_iter_end_2218e1192:;
	}
	return std::make_tuple(_94017_assign,true);
}



inline std::tuple<jule::Ptr<_21c640ec3_AssignSt>,jule::Bool> _21cb943c2_build_assign_st(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _100239_tokens) {
	jule::Ptr<_21c640ec3_AssignSt> _100258_st = jule::Ptr<_21c640ec3_AssignSt>();
	jule::Bool _100273_ok = jule::Bool();
	if ((!(_21cba558c_check_assign_tokens(_100239_tokens)))) {
		_100258_st = nullptr;
		_100273_ok = false;
		return std::make_tuple(_100258_st,_100273_ok);
	}
	{
		auto &_match_expr{ _100239_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2218eb730:;
			{
				std::tie(_100258_st,_100273_ok) = _21cb9401a_build_decl_assign(&(*_self_), _100239_tokens);
			}
		}
		else {
			_case_begin_2218ea696:;
			{
				std::tie(_100258_st,_100273_ok) = _21cb93b63_build_plain_assign(&(*_self_), _100239_tokens);
			}
		}
		_match_end_2218eada0:;
	}
	return std::make_tuple(_100258_st,_100273_ok);
}



inline jule::Any _21cb94779_build_use_expr(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _101738_tokens) {
	if ((_101738_tokens.len() == 1LL)) {
		_21cb8379b_push_err(&(*_self_), _101738_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_21c4d7d6a_UseExpr> _102317_ue = jule::new_ptr<_21c4d7d6a_UseExpr>(_21c4d7d6a_UseExpr(_101738_tokens[0LL],jule::Ptr<_21c4d7b4a_Expr>()));
	_101738_tokens=_101738_tokens.slice(1LL);
	_102317_ue.get()._field_expr=_21cbaa6b3_build_expr((*_self_)._field_p, _101738_tokens);
	return jule::Any(_102317_ue);
}



inline jule::Any _21cb94b31_build_st(_21cb82327_ScopeParser* _self_,jule::Ptr<_21cb81876_Stmt>& _103232_st) {
	_21c627dde_Token _103317_token = _103232_st.get()._field_tokens[0LL];
	if (_103317_token._field_id == static_cast<jule::U64>(2LLU)) {
		jule::Any _103522_s;
		jule::Bool _103525_ok;
		std::tie(_103522_s,_103525_ok) = _21cb92b95_build_id_st(&(*_self_), _103232_st.get()._field_tokens);
		if (_103525_ok) {
			return _103522_s;
		}
	}
	jule::Ptr<_21c640ec3_AssignSt> _104118_s;
	jule::Bool _104121_ok;
	std::tie(_104118_s,_104121_ok) = _21cb943c2_build_assign_st(&(*_self_), _103232_st.get()._field_tokens);
	if (_104121_ok) {
		return jule::Any(_104118_s);
	}
	{
		auto &_match_expr{ _103317_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_221902093:;
			{
				return _21cb94779_build_use_expr(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_2219029de:;
			{
				return _21cb84a00_build_var_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_221902527:;
			{
				return _21cb84da7_build_ret_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_22190258d:;
			{
				return _21cb8d07a_buid_iter_st(&(*_self_), _103232_st);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_221902604:;
			{
				return _21cb8d432_build_break_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_221902c0e:;
			{
				return _21cb8d7d9_build_cont_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_221902c75:;
			{
				return _21cb8e400_build_if_else_chain(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_221902cdb:;
			{
				return _21cb8e7a7_build_co_call_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_221902d52:;
			{
				return _21cb8eb5e_build_goto_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_221902db8:;
			{
				return _21cb90016_build_fall_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_221902e2e:;
			{
				return _21cb903bd_build_type_alias_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_221902ea6:;
			{
				return jule::Any(_21cb9207e_build_match_case(&(*_self_), _103232_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_22190302d:;
			{
				return jule::Any(_21cb92436_build_scope_st(&(*_self_), _103232_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2219030a5:;
			{
				if ((_103317_token._field_kind == jule::Str("{", 1))) {
					return jule::Any(_21cb92436_build_scope_st(&(*_self_), _103232_st.get()._field_tokens));
				}
			}
		}
		_match_end_221902725:;
	}
	jule::Ptr<_21c4d7b4a_Expr> _108217_expr = _21cbaa6b3_build_expr((*_self_)._field_p, _103232_st.get()._field_tokens);
	if ((_108217_expr != nullptr)) {
		return jule::Any(_108217_expr);
	}
	_21cb8379b_push_err(&(*_self_), _103317_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _21cb9502c_build(_21cb82327_ScopeParser* _self_,jule::Slice<_21c627dde_Token>& _109029_tokens,jule::Ptr<_21c6411e3_ScopeTree>& _109051_s) {
	if ((_109051_s == nullptr)) {
		return;
	}
	(*_self_)._field_stmts=_21cb81c83_split_stmts(_109029_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109051_s;
	while ((!(_21cb833a0_is_last_st(&(*_self_)))) && (!(_21cb830c5_finished(&(*_self_))))) {
		{
			jule::Ptr<_21cb81876_Stmt> _109921_st = _21cb84291_next(&(*_self_));
			jule::Any _110021_data = _21cb94b31_build_st(&(*_self_), _109921_st);
			if (_110021_data != jule::Any(jule::Any(nullptr))) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_21c523c63_Node(_109921_st.get()._field_tokens[0LL],_110021_data));
			}
			if (_21cb82cea_stopped(&(*_self_))) {
				goto _iter_end_22190d830;
			}
		}
	_iter_next_22190d830:;
	}
	_iter_end_22190d830:;
}







std::ostream &operator<<(std::ostream &_Stream, _21cb82327_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21cb95ec8_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _21cb98140_push_err(_21cb97727_ExprBuilder* _self_,_21c627dde_Token _22427_token,jule::Str _22441_fmt,jule::Slice<jule::Any> _22454_args) {
	_21cba9e10_push_err((*_self_)._field_p.ptr(), _22427_token,_22441_fmt,_22454_args);
}



inline void _21cb9853b_push_suggestion(_21cb97727_ExprBuilder* _self_,jule::Str _22934_fmt,jule::Slice<jule::Any> _22947_args) {
	_21cbaa30b_push_suggestion((*_self_)._field_p.ptr(), _22934_fmt,_22947_args);
}



inline jule::Ptr<_21c4d808a_TupleExpr> _21cb988e3_build_tuple(_21cb97727_ExprBuilder* _self_,jule::Slice<jule::Slice<_21c627dde_Token>>& _23335_parts) {
	jule::Ptr<_21c4d808a_TupleExpr> _23417_tuple = jule::new_ptr<_21c4d808a_TupleExpr>(_21c4d808a_TupleExpr(jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>::alloc(0LL,static_cast<jule::I64>(_23335_parts.len()))));
	{
		auto &expr = _23335_parts;
		auto it = expr.begin();
		_iter_begin_221915381:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _221915a57_part = *it;
			{
				_23417_tuple.get()._field_expr = jule::alloc_for_append(_23417_tuple.get()._field_expr,1);_23417_tuple.get()._field_expr.__push(_21cba449d_build_from_tokens(&(*_self_), _221915a57_part));
			}
			_iter_next_221915381:;
			++it;
			goto _iter_begin_221915381;
		}
		_iter_end_221915381:;
	}
	return _23417_tuple;
}



inline jule::Ptr<_21c4d84db_LitExpr> _21cb98c9a_build_lit(_21cb97727_ExprBuilder* _self_,_21c627dde_Token _24328_token) {
	return jule::new_ptr<_21c4d84db_LitExpr>(_21c4d84db_LitExpr(_24328_token,_24328_token._field_kind));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cb99152_build_primitive_type(_21cb97727_ExprBuilder* _self_,_21c627dde_Token& _25040_token) {
	return _21cbbd1cb_build_prim_type(_25040_token);
}



inline jule::Any _21cb99509_build_single(_21cb97727_ExprBuilder* _self_,_21c627dde_Token _25435_token) {
	{
		auto &_match_expr{ _25435_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_221918a7c:;
			{
				return jule::Any(_21cb98c9a_build_lit(&(*_self_), _25435_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_221918dac:;
			{
				if ((_25435_token._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_21c4d908b_VariadicExpr>(_21c4d908b_VariadicExpr(_25435_token,jule::Ptr<_21c4d7b4a_Expr>())));
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_221918e23:;
			{
				return jule::Any(_21cb97172_build_ident_expr(_25435_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_221918e9a:;
			{
				return jule::Any(_21cb99152_build_primitive_type(&(*_self_), _25435_token));
			}
		}
		_match_end_221918ce1:;
	}
	_21cb98140_push_err(&(*_self_), _25435_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_21c4d8b4b_IdentExpr> _21cb998b1_build_cpp_linked_ident(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _27546_tokens) {
	if (_27546_tokens[0LL]._field_id != static_cast<jule::U64>(31LLU)) {
		return nullptr;
	} else if (_27546_tokens[1LL]._field_id != static_cast<jule::U64>(20LLU)) {
		_21cb98140_push_err(&(*_self_), _27546_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_21c627dde_Token _28317_token = _27546_tokens[2LL];
	if (_28317_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cb98140_push_err(&(*_self_), _27546_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c4d8b4b_IdentExpr> _28917_expr = _21cb97172_build_ident_expr(_28317_token);
	_28917_expr.get()._field_cpp_linked=true;
	return _28917_expr;
}



inline jule::Ptr<_21c4d8d6b_UnaryExpr> _21cb99c68_build_unary(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _29434_tokens) {
	_21c627dde_Token _29517_op = _29434_tokens[0LL];
	if ((_29434_tokens.len() == 1LL)) {
		_21cb98140_push_err(&(*_self_), _29517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_21c628708_is_unary_op(_29517_op._field_kind)))) {
		_21cb98140_push_err(&(*_self_), _29517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>({jule::Any(_29517_op._field_kind)}));
		return nullptr;
	}
	_29434_tokens=_29434_tokens.slice(1LL);
	return jule::new_ptr<_21c4d8d6b_UnaryExpr>(_21c4d8d6b_UnaryExpr(_29517_op,_21cba449d_build_from_tokens(&(*_self_), _29434_tokens)));
}



inline jule::Ptr<_21c63d850_SubIdentExpr> _21cb9a120_build_obj_sub_ident(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _31542_tokens) {
	jule::I64 _31617_i = (_31542_tokens.len() - 1LL);
	_21c627dde_Token _31717_ident_token = _31542_tokens[_31617_i];
	(_31617_i)--;
	_31542_tokens=_31542_tokens.slice(0LL,_31617_i);
	if ((_31542_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _31717_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_21c63d850_SubIdentExpr>(_21c63d850_SubIdentExpr(jule::Bool(),_21cba449d_build_from_tokens(&(*_self_), _31542_tokens),_31717_ident_token));
}



inline jule::Ptr<_21c63d630_NsSelectionExpr> _21cb9a4c7_build_ns_sub_ident(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _33042_tokens) {
	jule::Ptr<_21c63d630_NsSelectionExpr> _33117_ns = jule::new_ptr<_21c63d630_NsSelectionExpr>(_21c63d630_NsSelectionExpr());
	{
		auto &expr = _33042_tokens;
		auto it = expr.begin();
		_iter_begin_221928c68:;
		if (it != expr.end()) {
			jule::I64 _221928d78_i = it - expr.begin();
			_21c627dde_Token _2219290ed_token = *it;
			{
				if (((_221928d78_i & 1LL) == 0LL)) {
					if (_2219290ed_token._field_id != static_cast<jule::U64>(2LLU)) {
						_21cb98140_push_err(&(*_self_), _2219290ed_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_21cb9853b_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_33117_ns.get()._field_ns = jule::alloc_for_append(_33117_ns.get()._field_ns,1);_33117_ns.get()._field_ns.__push(_2219290ed_token);
				} else if (_2219290ed_token._field_id != static_cast<jule::U64>(23LLU)) {
					_21cb98140_push_err(&(*_self_), _2219290ed_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_21cb9853b_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_221928c68:;
			++it;
			_221928d78_i++;
			goto _iter_begin_221928c68;
		}
		_iter_end_221928c68:;
	}
	_33117_ns.get()._field_ident=_33117_ns.get()._field_ns[(_33117_ns.get()._field_ns.len() - 1LL)];
	_33117_ns.get()._field_ns=_33117_ns.get()._field_ns.slice(0LL,(_33117_ns.get()._field_ns.len() - 1LL));
	return _33117_ns;
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cb9a87e_build_type(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _34934_tokens) {
	jule::I64 _35017_i = 0LL;
	jule::Ptr<_21c5d253b_TypeDecl> _35118_t;
	jule::Bool _35121_ok;
	std::tie(_35118_t,_35121_ok) = _21cbabd13_build_type((*_self_)._field_p, _34934_tokens,(&(_35017_i)),false);
	if ((!(_35121_ok))) {
		_21cb98140_push_err(&(*_self_), _34934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_35017_i < static_cast<jule::I64>(static_cast<jule::I64>(_34934_tokens.len()))) {
		_21cb98140_push_err(&(*_self_), _34934_tokens[_35017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _35118_t;
}



inline jule::Any _21cb9ac36_build_sub_ident(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _36339_tokens) {
	jule::I64 _36413_i = (_36339_tokens.len() - 2LL);
	_21c627dde_Token _36513_token = _36339_tokens[_36413_i];
	{
		auto &_match_expr{ _36513_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_221932d82:;
			{
				return jule::Any(_21cb9a120_build_obj_sub_ident(&(*_self_), _36339_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_2219335e1:;
			{
				return jule::Any(_21cb9a4c7_build_ns_sub_ident(&(*_self_), _36339_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_221933657:;
			{
				if ((_36513_token._field_kind == jule::Str("]", 1))) {
					return jule::Any(_21cb9a87e_build_type(&(*_self_), _36339_tokens));
				}
			}
		}
		_match_end_2219334e2:;
	}
	_21cb98140_push_err(&(*_self_), _36513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_21c4d908b_VariadicExpr> _21cb9b0dd_build_variadic(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _38137_tokens) {
	_21c627dde_Token _38217_token = _38137_tokens[(_38137_tokens.len() - 1LL)];
	_38137_tokens=_38137_tokens.slice(0LL,(_38137_tokens.len() - 1LL));
	return jule::new_ptr<_21c4d908b_VariadicExpr>(_21c4d908b_VariadicExpr(_38217_token,_21cba449d_build_from_tokens(&(*_self_), _38137_tokens)));
}



inline jule::Any _21cb9b495_build_op_right(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _39038_tokens) {
	_21c627dde_Token _39117_token = _39038_tokens[(_39038_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _39117_token._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_221938508:;
			{
				_39038_tokens=_39038_tokens.slice(0LL,(_39038_tokens.len() - 1LL));
				jule::Any _39521_d = _21cba3c3e_build(&(*_self_), _39038_tokens);
				if (_39521_d == jule::Any(jule::Any(nullptr))) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _39521_d };
					
					if (_match_expr.type_is<jule::Ptr<_21c63dc90_FnCallExpr>>()) {
						_case_begin_22193a86d:;
						{
							_39521_d.operator jule::Ptr<_21c63dc90_FnCallExpr>().get()._field_exception=jule::new_ptr<_21c6411e3_ScopeTree>(_21c6411e3_ScopeTree(jule::Ptr<_21c6411e3_ScopeTree>(),jule::Bool(),true,jule::Slice<_21c523c63_Node>()));
							return _39521_d;
						}
					}
					_match_end_22193aa9e:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_221938dee:;
			{
				return jule::Any(_21cb9b0dd_build_variadic(&(*_self_), _39038_tokens));
			}
		}
		_match_end_221938d77:;
	}
	_21cb98140_push_err(&(*_self_), _39117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_21c4d7b4a_Expr> _21cb9b891_build_between_parentheses(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _41348_tokens) {
	_21c627dde_Token _41413_token = _41348_tokens[0LL];
	_41348_tokens=_41348_tokens.slice(1LL,(_41348_tokens.len() - 1LL));
	if ((_41348_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _41413_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c4d7b4a_Expr> _42117_expr = _21cba449d_build_from_tokens(&(*_self_), _41348_tokens);
	_42117_expr.get()._field_range=true;
	return _42117_expr;
}



inline jule::Ptr<_21c63d410_CastExpr> _21cb9bc37_try_build_cast(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _42638_tokens) {
	jule::I64 _42717_range_n = 0LL;
	{
		auto &expr = _42638_tokens;
		auto it = expr.begin();
		_iter_begin_221941764:;
		if (it != expr.end()) {
			jule::I64 _22194180d_i = it - expr.begin();
			_21c627dde_Token _221941a83_token = *it;
			{
				if (_221941a83_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _221941a83_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_221942a51:;
							{
								(_42717_range_n)++;
								goto _iter_next_221941764;
							}
						}
						else {
							_case_begin_2219423e1:;
							{
								(_42717_range_n)--;
							}
						}
						_match_end_221942721:;
					}
				}
				if ((_42717_range_n > 0LL)) {
					goto _iter_next_221941764;
				} else if ((_22194180d_i + 1LL) == static_cast<jule::I64>(static_cast<jule::I64>(_42638_tokens.len()))) {
					return nullptr;
				}
				jule::Slice<_21c627dde_Token> _44721_type_tokens = _42638_tokens.slice(0LL,(_22194180d_i + 1LL));
				jule::Slice<_21c627dde_Token> _44821_expr_tokens = _42638_tokens.slice((_22194180d_i + 1LL));
				if ((_44821_expr_tokens.len() == 0LL)) {
					return nullptr;
				}
				_21c627dde_Token _45517_tok = _44821_expr_tokens[0LL];
				if ((_45517_tok._field_id != static_cast<jule::U64>(3LLU)) || (_45517_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_21c63d410_CastExpr> _46021_cast = jule::new_ptr<_21c63d410_CastExpr>(_21c63d410_CastExpr());
				if ((_44821_expr_tokens.len() == 2LL)) {
					_21cb98140_push_err(&(*_self_), _44821_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_21cb9853b_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if ((_44721_type_tokens.len() == 2LL)) {
					_21cb98140_push_err(&(*_self_), _44721_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_21cb9853b_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_44721_type_tokens=_44721_type_tokens.slice(1LL,(_44721_type_tokens.len() - 1LL));
					jule::I64 _47425_type_index = 0LL;
					jule::Ptr<_21c5d253b_TypeDecl> _47526_t;
					jule::Bool _47529_ok;
					std::tie(_47526_t,_47529_ok) = _21cbabd13_build_type((*_self_)._field_p, _44721_type_tokens,(&(_47425_type_index)),true);
					if (_47529_ok && (_47425_type_index < static_cast<jule::I64>(static_cast<jule::I64>(_44721_type_tokens.len())))) {
						_21cb98140_push_err(&(*_self_), _44721_type_tokens[_47425_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_47529_ok))) {
						return _46021_cast;
					}
					_46021_cast.get()._field_kind=_47526_t;
					if ((_44821_expr_tokens.len() > 2LL)) {
						jule::I64 _48529_j = 0LL;
						_21cba7429_range(_48529_j,jule::Str("(", 1),jule::Str(")", 1),_44821_expr_tokens);
						if (_48529_j < static_cast<jule::I64>(static_cast<jule::I64>(_44821_expr_tokens.len()))) {
							return nullptr;
						}
						_44821_expr_tokens=_44821_expr_tokens.slice(0LL,_48529_j);
						_46021_cast.get()._field_expr=_21cba449d_build_from_tokens(&(*_self_), _44821_expr_tokens);
					}
				}
				return _46021_cast;
			}
			_iter_next_221941764:;
			++it;
			_22194180d_i++;
			goto _iter_begin_221941764;
		}
		_iter_end_221941764:;
	}
	return nullptr;
}



inline void _21cb9c210_push_arg(_21cb97727_ExprBuilder* _self_,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>& _50032_args,jule::Slice<_21c627dde_Token> _50051_tokens,_21c627dde_Token _50068_err_token) {
	if ((_50051_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _50068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_50032_args = jule::alloc_for_append(_50032_args,1);_50032_args.__push(_21cba449d_build_from_tokens(&(*_self_), _50051_tokens));
}



inline jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _21cb9c5b7_build_args(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _50933_tokens) {
	if ((_50933_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _51517_args = nullptr;
	jule::I64 _51617_last = 0LL;
	jule::I64 _51717_range_n = 0LL;
	_50933_tokens=_50933_tokens.slice(1LL,(_50933_tokens.len() - 1LL));
	{
		auto &expr = _50933_tokens;
		auto it = expr.begin();
		_iter_begin_221952d19:;
		if (it != expr.end()) {
			jule::I64 _2219536cc_i = it - expr.begin();
			_21c627dde_Token _2219537ed_token = *it;
			{
				if (_2219537ed_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _2219537ed_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_221954722:;
							{
								(_51717_range_n)++;
							}
						}
						else {
							_case_begin_2219540b2:;
							{
								(_51717_range_n)--;
							}
						}
						_match_end_2219543e2:;
					}
				}
				if ((_51717_range_n > 0LL) || (_2219537ed_token._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_221952d19;
				}
				_21cb9c210_push_arg(&(*_self_), _51517_args,_50933_tokens.slice(_51617_last,_2219536cc_i),_2219537ed_token);
				_51617_last=static_cast<jule::I64>((_2219536cc_i + 1LL));
			}
			_iter_next_221952d19:;
			++it;
			_2219536cc_i++;
			goto _iter_begin_221952d19;
		}
		_iter_end_221952d19:;
	}
	if (_51617_last < static_cast<jule::I64>(static_cast<jule::I64>(_50933_tokens.len()))) {
		if ((_51617_last == 0LL)) {
			if ((_50933_tokens.len() > 0LL)) {
				_21cb9c210_push_arg(&(*_self_), _51517_args,_50933_tokens.slice(_51617_last),_50933_tokens[_51617_last]);
			}
		} else {
			_21cb9c210_push_arg(&(*_self_), _51517_args,_50933_tokens.slice(_51617_last),_50933_tokens[(_51617_last - 1LL)]);
		}
	}
	return _51517_args;
}



inline jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _21cb9c96e_build_call_generics(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _55142_tokens) {
	if ((_55142_tokens.len() == 0LL)) {
		return nullptr;
	}
	_55142_tokens=_55142_tokens.slice(1LL,(_55142_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_21c627dde_Token>> _55718_parts;
	jule::Slice<_21c348b32_Log> _55725_errs;
	std::tie(_55718_parts,_55725_errs) = _21cba7c43_parts(_55142_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _55817_generics = jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_55718_parts.len()));
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_55725_errs);
	{
		auto &expr = _55718_parts;
		auto it = expr.begin();
		_iter_begin_22195a629:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _22195b0db_part = *it;
			{
				if ((_22195b0db_part.len() == 0LL)) {
					goto _iter_next_22195a629;
				}
				jule::I64 _56421_j = 0LL;
				jule::Ptr<_21c5d253b_TypeDecl> _56522_generic;
				std::tie(_56522_generic,std::ignore) = _21cbabd13_build_type((*_self_)._field_p, _22195b0db_part,(&(_56421_j)),true);
				if (_56421_j < static_cast<jule::I64>(static_cast<jule::I64>(_22195b0db_part.len()))) {
					_21cb98140_push_err(&(*_self_), _22195b0db_part[_56421_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_55817_generics = jule::alloc_for_append(_55817_generics,1);_55817_generics.__push(_56522_generic);
			}
			_iter_next_22195a629:;
			++it;
			goto _iter_begin_22195a629;
		}
		_iter_end_22195a629:;
	}
	return _55817_generics;
}



inline jule::Ptr<_21c63dc90_FnCallExpr> _21cb9ce03_build_fn_call(_21cb97727_ExprBuilder* _self_,_21c627dde_Token& _57537_token,jule::Ptr<_21cb95ec8_CallData>& _57556_data) {
	return jule::new_ptr<_21c63dc90_FnCallExpr>(_21c63dc90_FnCallExpr(_57537_token,_21cba449d_build_from_tokens(&(*_self_), _57556_data.get()._field_expr_tokens),_21cb9c96e_build_call_generics(&(*_self_), _57556_data.get()._field_generics_tokens),_21cb9c5b7_build_args(&(*_self_), _57556_data.get()._field_args_tokens),jule::Ptr<_21c6411e3_ScopeTree>()));
}



inline jule::Any _21cb9d2ee_build_parentheses_range(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _58447_tokens) {
	_21c627dde_Token _58517_token = _58447_tokens[0LL];
	{
		auto &_match_expr{ _58517_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_221961861:;
			{
				{
					auto &_match_expr{ _58517_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_2219625ba:;
						{
							jule::Ptr<_21c63d410_CastExpr> _59025_expr = _21cb9bc37_try_build_cast(&(*_self_), _58447_tokens);
							if ((_59025_expr != nullptr)) {
								return jule::Any(_59025_expr);
							}
						}
					}
					_match_end_22196280c:;
				}
			}
		}
		_match_end_221962004:;
	}
	jule::Ptr<_21cb95ec8_CallData> _59717_data = _21cb963a2_get_call_data(_58447_tokens);
	if ((_59717_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_21cb9b891_build_between_parentheses(&(*_self_), _59717_data.get()._field_args_tokens));
	}
	return jule::Any(_21cb9ce03_build_fn_call(&(*_self_), _58517_token,_59717_data));
}



inline jule::Ptr<_21c4d870b_UnsafeExpr> _21cb9d695_build_unsafe_expr(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _60840_tokens) {
	_21c627dde_Token _60917_token = _60840_tokens[0LL];
	_60840_tokens=_60840_tokens.slice(1LL);
	jule::I64 _61117_i = 0LL;
	jule::Slice<_21c627dde_Token> _61217_range_tokens = _21cba7429_range(_61117_i,jule::Str("{", 1),jule::Str("}", 1),_60840_tokens);
	if ((_61217_range_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _60840_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_21c4d870b_UnsafeExpr>(_21c4d870b_UnsafeExpr(_60917_token,_21cba449d_build_from_tokens(&(*_self_), _61217_range_tokens)));
}



inline jule::Ptr<_21c641633_FnDecl> _21cb9da4c_build_anon_fn(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _62337_tokens) {
	jule::Ptr<_21c641633_FnDecl> _62417_f = _21cbb2456_build_fn((*_self_)._field_p, _62337_tokens,false,false);
	if ((!(_21c4874e0_is_anon(_62417_f.ptr())))) {
		_21cb98140_push_err(&(*_self_), _62417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _62417_f;
}



inline jule::Any _21cb9de04_build_unsafe(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _63236_tokens) {
	{
		auto &_match_expr{ _63236_tokens[1LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_22196c5b4:;
			{
				return jule::Any(_21cb9da4c_build_anon_fn(&(*_self_), _63236_tokens));
			}
		}
		else {
			_case_begin_22196ba25:;
			{
				return jule::Any(_21cb9d695_build_unsafe_expr(&(*_self_), _63236_tokens));
			}
		}
		_match_end_22196becb:;
	}
}



inline void _21cb9e3cc_push_range_lit_part(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _64242_part,_21c627dde_Token _6439_error_token,jule::Slice<jule::Slice<_21c627dde_Token>>& _64334_parts) {
	if ((_64242_part.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _6439_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_64334_parts = jule::alloc_for_append(_64334_parts,1);_64334_parts.__push(_64242_part);
}



inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cb9e7c8_get_brace_range_lit_expr_parts(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _65353_tokens) {
	if ((_65353_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_21c627dde_Token>> _65917_parts = nullptr;
	jule::I64 _66117_last = 0LL;
	jule::I64 _66217_range_n = 0LL;
	_65353_tokens=_65353_tokens.slice(1LL,(_65353_tokens.len() - 1LL));
	{
		auto &expr = _65353_tokens;
		auto it = expr.begin();
		_iter_begin_221972366:;
		if (it != expr.end()) {
			jule::I64 _221972c29_i = it - expr.begin();
			_21c627dde_Token _221972d4a_token = *it;
			{
				if (_221972d4a_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _221972d4a_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_221973c6e:;
							{
								(_66217_range_n)++;
							}
						}
						else {
							_case_begin_22197360e:;
							{
								(_66217_range_n)--;
							}
						}
						_match_end_22197393e:;
					}
				}
				if ((_66217_range_n > 0LL) || (_221972d4a_token._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_221972366;
				}
				_21cb9e3cc_push_range_lit_part(&(*_self_), _65353_tokens.slice(_66117_last,_221972c29_i),_221972d4a_token,_65917_parts);
				_66117_last=static_cast<jule::I64>((_221972c29_i + 1LL));
			}
			_iter_next_221972366:;
			++it;
			_221972c29_i++;
			goto _iter_begin_221972366;
		}
		_iter_end_221972366:;
	}
	if (_66117_last < static_cast<jule::I64>(static_cast<jule::I64>(_65353_tokens.len()))) {
		if ((_66117_last == 0LL)) {
			if ((_65353_tokens.len() > 0LL)) {
				_21cb9e3cc_push_range_lit_part(&(*_self_), _65353_tokens.slice(_66117_last),_65353_tokens[_66117_last],_65917_parts);
			}
		} else {
			_21cb9e3cc_push_range_lit_part(&(*_self_), _65353_tokens.slice(_66117_last),_65353_tokens[(_66117_last - 1LL)],_65917_parts);
		}
	}
	return _65917_parts;
}



inline jule::Ptr<_21c63deb0_FieldExprPair> _21cb9eb6e_build_field_expr_pair(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _69544_tokens) {
	if (((_69544_tokens.len() - 2LL) == 0LL)) {
		_21cb98140_push_err(&(*_self_), _69544_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c63deb0_FieldExprPair> _70017_pair = jule::new_ptr<_21c63deb0_FieldExprPair>(_21c63deb0_FieldExprPair(_69544_tokens[0LL],jule::Ptr<_21c4d7b4a_Expr>()));
	_69544_tokens=_69544_tokens.slice(2LL);
	_70017_pair.get()._field_expr=_21cba449d_build_from_tokens(&(*_self_), _69544_tokens);
	return _70017_pair;
}



inline jule::Ptr<_21c4d7b4a_Expr> _21cba0026_build_struct_lit_expr(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _70845_tokens) {
	_21c627dde_Token _70917_token = _70845_tokens[0LL];
	if ((_70917_token._field_id == static_cast<jule::U64>(2LLU)) && (_70845_tokens.len() > 1LL)) {
		_70917_token=_70845_tokens[1LL];
		if (_70917_token._field_id == static_cast<jule::U64>(11LLU)) {
			return jule::new_ptr<_21c4d7b4a_Expr>(_21c4d7b4a_Expr(_70917_token,jule::Bool(),jule::Any(jule::Any(_21cb9eb6e_build_field_expr_pair(&(*_self_), _70845_tokens)))));
		}
	}
	return _21cba449d_build_from_tokens(&(*_self_), _70845_tokens);
}



inline jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _21cba03cd_build_struct_lit_exprs(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _72246_tokens) {
	jule::Slice<jule::Slice<_21c627dde_Token>> _72317_parts = _21cb9e7c8_get_brace_range_lit_expr_parts(&(*_self_), _72246_tokens);
	if ((_72317_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _72817_pairs = jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>::alloc(0LL,static_cast<jule::I64>(_72317_parts.len()));
	{
		auto &expr = _72317_parts;
		auto it = expr.begin();
		_iter_begin_2219804a6:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _221980682_part = *it;
			{
				_72817_pairs = jule::alloc_for_append(_72817_pairs,1);_72817_pairs.__push(_21cba0026_build_struct_lit_expr(&(*_self_), _221980682_part));
			}
			_iter_next_2219804a6:;
			++it;
			goto _iter_begin_2219804a6;
		}
		_iter_end_2219804a6:;
	}
	return _72817_pairs;
}



inline jule::Ptr<_21c63e1d0_StructLit> _21cba07c9_build_typed_struct_literal(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _73549_tokens) {
	jule::I64 _73617_i = 0LL;
	jule::Ptr<_21c5d253b_TypeDecl> _73718_t;
	jule::Bool _73721_ok;
	std::tie(_73718_t,_73721_ok) = _21cbabd13_build_type((*_self_)._field_p, _73549_tokens,(&(_73617_i)),true);
	if ((!(_73721_ok))) {
		return nullptr;
	} else if (_73617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_73549_tokens.len()))) {
		_21cb98140_push_err(&(*_self_), _73549_tokens[_73617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_73549_tokens=_73549_tokens.slice(_73617_i);
	_21c627dde_Token _74613_token = _73549_tokens[0LL];
	if ((_74613_token._field_id != static_cast<jule::U64>(3LLU)) || (_74613_token._field_kind != jule::Str("{", 1))) {
		_21cb98140_push_err(&(*_self_), _74613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_21c63e1d0_StructLit>(_21c63e1d0_StructLit(_73718_t,_21cba03cd_build_struct_lit_exprs(&(*_self_), _73549_tokens)));
}



inline jule::Ptr<_21c4d7b4a_Expr> _21cba0b70_build_brace_lit_part(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _75844_tokens) {
	jule::Slice<_21c627dde_Token> _75918_l;
	jule::Slice<_21c627dde_Token> _75925_r;
	std::tie(_75918_l,_75925_r) = _21cb96a12_split_colon(_75844_tokens);
	if ((_75918_l != nullptr)) {
		return jule::new_ptr<_21c4d7b4a_Expr>(_21c4d7b4a_Expr(_75844_tokens[0LL],jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21c63e620_KeyValPair>(_21c63e620_KeyValPair(_21cba449d_build_from_tokens(&(*_self_), _75918_l),_21cba449d_build_from_tokens(&(*_self_), _75925_r),_75844_tokens[_75918_l.len()]))))));
	}
	return _21cba449d_build_from_tokens(&(*_self_), _75844_tokens);
}



inline jule::Ptr<_21c63e400_BraceLit> _21cba1027_build_brace_lit(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _77439_tokens) {
	jule::Ptr<_21c63e400_BraceLit> _77517_lit = jule::new_ptr<_21c63e400_BraceLit>(_21c63e400_BraceLit(_77439_tokens[0LL],jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>()));
	jule::Slice<jule::Slice<_21c627dde_Token>> _77917_parts = _21cb9e7c8_get_brace_range_lit_expr_parts(&(*_self_), _77439_tokens);
	if ((_77917_parts == nullptr)) {
		return _77517_lit;
	}
	_77517_lit.get()._field_exprs=jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>::alloc(0LL,static_cast<jule::I64>(_77917_parts.len()));
	{
		auto &expr = _77917_parts;
		auto it = expr.begin();
		_iter_begin_221991077:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _2219910bb_part = *it;
			{
				_77517_lit.get()._field_exprs = jule::alloc_for_append(_77517_lit.get()._field_exprs,1);_77517_lit.get()._field_exprs.__push(_21cba0b70_build_brace_lit_part(&(*_self_), _2219910bb_part));
			}
			_iter_next_221991077:;
			++it;
			goto _iter_begin_221991077;
		}
		_iter_end_221991077:;
	}
	return _77517_lit;
}



inline jule::Any _21cba13ce_build_brace_range(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _79241_tokens) {
	jule::Slice<_21c627dde_Token> _79318_expr_tokens;
	jule::I64 _79331_range_n;
	std::tie(_79318_expr_tokens,_79331_range_n) = _21cb97480_get_range_expr_tokens(_79241_tokens);
	{
		
		if ((_79318_expr_tokens.len() == 0LL)) {
			_case_begin_221992dc0:;
			{
				return jule::Any(_21cba1027_build_brace_lit(&(*_self_), _79241_tokens));
			}
		}
		else if ((_79331_range_n > 0LL)) {
			_case_begin_221992e47:;
			{
				_21cb98140_push_err(&(*_self_), _79241_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_221992d59:;
	}
	_21c627dde_Token _80413_else_token = _79318_expr_tokens[(_79318_expr_tokens.len() - 1LL)];
	if (_79318_expr_tokens[(_79318_expr_tokens.len() - 1LL)]._field_id == static_cast<jule::U64>(17LLU)) {
		_79318_expr_tokens=_79318_expr_tokens.slice(0LL,(_79318_expr_tokens.len() - 1LL));
		jule::Any _80721_d = _21cba3c3e_build(&(*_self_), _79318_expr_tokens);
		if (_80721_d == jule::Any(jule::Any(nullptr))) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _80721_d };
			
			if (_match_expr.type_is<jule::Ptr<_21c63dc90_FnCallExpr>>()) {
				_case_begin_2219979a7:;
				{
					_79241_tokens=_79241_tokens.slice((_79318_expr_tokens.len() + 1LL));
					jule::I64 _81425_i = 0LL;
					jule::Slice<_21c627dde_Token> _81525_range_tokens = _21cba7429_range(_81425_i,jule::Str("{", 1),jule::Str("}", 1),_79241_tokens);
					jule::Ptr<_21c63dc90_FnCallExpr> _81625_model = _80721_d.operator jule::Ptr<_21c63dc90_FnCallExpr>();
					if (_21c4d92ab_ignored(_81625_model.ptr())) {
						_21cb98140_push_err(&(*_self_), _80413_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_21cb9853b_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					_81625_model.get()._field_exception=_21cbab241_build_scope((*_self_)._field_p, _81525_range_tokens);
					return _80721_d;
				}
			}
			else {
				_case_begin_221996346:;
				{
					_21cb98140_push_err(&(*_self_), _79318_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_221996676:;
		}
	}
	{
		auto &_match_expr{ _79318_expr_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_22199bb65:;
			{
				return _21cb9de04_build_unsafe(&(*_self_), _79241_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_22199bbcb:;
			{
				return jule::Any(_21cb9da4c_build_anon_fn(&(*_self_), _79241_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22199bc42:;
			{
				return jule::Any(_21cba07c9_build_typed_struct_literal(&(*_self_), _79241_tokens));
			}
		}
		else {
			_case_begin_221992c7c:;
			{
				_21cb98140_push_err(&(*_self_), _79318_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_22199ba00:;
	}
}



inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cba1786_get_enumerable_parts(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _84443_tokens) {
	_84443_tokens=_84443_tokens.slice(1LL,(_84443_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_21c627dde_Token>> _84618_parts;
	jule::Slice<_21c348b32_Log> _84625_errors;
	std::tie(_84618_parts,_84625_errors) = _21cba7c43_parts(_84443_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84625_errors);
	return _84618_parts;
}



inline jule::Ptr<_21c63e840_SliceExpr> _21cba1b3d_build_slice(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _85134_tokens) {
	jule::Ptr<_21c63e840_SliceExpr> _85217_slc = jule::new_ptr<_21c63e840_SliceExpr>(_21c63e840_SliceExpr(_85134_tokens[0LL],jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>()));
	jule::Slice<jule::Slice<_21c627dde_Token>> _85617_parts = _21cba1786_get_enumerable_parts(&(*_self_), _85134_tokens);
	if ((_85617_parts.len() == 0LL)) {
		return _85217_slc;
	}
	_85217_slc.get()._field_exprs=jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>::alloc(0LL,static_cast<jule::I64>(_85617_parts.len()));
	{
		auto &expr = _85617_parts;
		auto it = expr.begin();
		_iter_begin_2219a3320:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _2219a3ebe_p = *it;
			{
				if ((_2219a3ebe_p.len() == 0LL)) {
					goto _iter_next_2219a3320;
				}
				_85217_slc.get()._field_exprs = jule::alloc_for_append(_85217_slc.get()._field_exprs,1);_85217_slc.get()._field_exprs.__push(_21cba449d_build_from_tokens(&(*_self_), _2219a3ebe_p));
			}
			_iter_next_2219a3320:;
			++it;
			goto _iter_begin_2219a3320;
		}
		_iter_end_2219a3320:;
	}
	return _85217_slc;
}



inline jule::Ptr<_21c4d82aa_IndexingExpr> _21cba219e_build_indexing(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _87237_expr_tokens,jule::Slice<_21c627dde_Token> _87313_tokens,_21c627dde_Token _87334_error_token) {
	_87313_tokens=_87313_tokens.slice(1LL,(_87313_tokens.len() - 1LL));
	if ((_87313_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _87334_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c4d7b4a_Expr> _87917_expr = _21cba449d_build_from_tokens(&(*_self_), _87237_expr_tokens);
	if ((_87917_expr == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21c4d7b4a_Expr> _88317_index = _21cba449d_build_from_tokens(&(*_self_), _87313_tokens);
	if ((_88317_index == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_21c4d82aa_IndexingExpr>(_21c4d82aa_IndexingExpr(_87334_error_token,_87917_expr,_88317_index));
}



inline jule::Ptr<_21c63eed3_SlicingExpr> _21cba27dc_build_slicing(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _89437_expr_tokens,jule::Slice<_21c627dde_Token>& _89464_slicing_tokens,jule::I64& _89510_colon,_21c627dde_Token& _89527_error_token) {
	jule::Ptr<_21c63eed3_SlicingExpr> _89617_slc = jule::new_ptr<_21c63eed3_SlicingExpr>(_21c63eed3_SlicingExpr(_89527_error_token,_21cba449d_build_from_tokens(&(*_self_), _89437_expr_tokens),jule::Ptr<_21c4d7b4a_Expr>(),jule::Ptr<_21c4d7b4a_Expr>()));
	jule::Slice<_21c627dde_Token> _90117_start_expr_tokens = _89464_slicing_tokens.slice(0LL,_89510_colon);
	if ((_90117_start_expr_tokens.len() > 0LL)) {
		_89617_slc.get()._field_start=_21cba449d_build_from_tokens(&(*_self_), _90117_start_expr_tokens);
	}
	jule::Slice<_21c627dde_Token> _90617_to_expr_tokens = _89464_slicing_tokens.slice((_89510_colon + 1LL));
	if ((_90617_to_expr_tokens.len() > 0LL)) {
		_89617_slc.get()._field_to=_21cba449d_build_from_tokens(&(*_self_), _90617_to_expr_tokens);
	}
	return _89617_slc;
}



inline jule::Any _21cba2b94_build_bracket_range(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _91442_tokens) {
	_21c627dde_Token _91517_error_token = _91442_tokens[0LL];
	jule::Slice<_21c627dde_Token> _91618_expr_tokens;
	jule::I64 _91631_range_n;
	std::tie(_91618_expr_tokens,_91631_range_n) = _21cb97480_get_range_expr_tokens(_91442_tokens);
	{
		
		if ((_91618_expr_tokens.len() == 0LL)) {
			_case_begin_2219ae13e:;
			{
				return jule::Any(_21cba1b3d_build_slice(&(*_self_), _91442_tokens));
			}
		}
		else if ((_91618_expr_tokens.len() == 0LL) || (_91631_range_n > 0LL)) {
			_case_begin_2219ae1b6:;
			{
				_21cb98140_push_err(&(*_self_), _91517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_2219ae073:;
	}
	_91442_tokens=_91442_tokens.slice(_91618_expr_tokens.len());
	jule::I64 _93417_i = 0LL;
	jule::Slice<_21c627dde_Token> _93518_slicing_tokens;
	jule::I64 _93534_colon;
	std::tie(_93518_slicing_tokens,_93534_colon) = _21cbbd5b6_split_map_range(_91442_tokens,_93417_i);
	if ((_93534_colon != -1LL)) {
		return jule::Any(_21cba27dc_build_slicing(&(*_self_), _91618_expr_tokens,_93518_slicing_tokens,_93534_colon,_91517_error_token));
	}
	return jule::Any(_21cba219e_build_indexing(&(*_self_), _91618_expr_tokens,_91442_tokens,_91517_error_token));
}



inline jule::Any _21cba304b_build_ternary(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _94236_tokens) {
	jule::Ptr<_21c640203_TernaryExpr> _94317_ter = jule::new_ptr<_21c640203_TernaryExpr>(_21c640203_TernaryExpr());
	_94317_ter.get()._field_token=_94236_tokens[0LL];
	_94236_tokens=_94236_tokens.slice(1LL);
	jule::Slice<_21c627dde_Token> _94717_expr_tokens = _21cb96704_get_block_expr(_94236_tokens);
	if ((_94717_expr_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _94317_ter.get()._field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	_94317_ter.get()._field_condition=_21cba449d_build_from_tokens(&(*_self_), _94717_expr_tokens);
	jule::I64 _95417_i = _94717_expr_tokens.len();
	jule::Slice<_21c627dde_Token> _95517_true_expr = _21cba7429_range(_95417_i,jule::Str("{", 1),jule::Str("}", 1),_94236_tokens);
	if ((_95517_true_expr == nullptr)) {
		_21cb98140_push_err(&(*_self_), _94317_ter.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	} else if ((_95517_true_expr.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _94236_tokens[_94717_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_95417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_94236_tokens.len()))) {
		_21cb98140_push_err(&(*_self_), _94317_ter.get()._field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	}
	_21c627dde_Token _96913_else_token = _94236_tokens[_95417_i];
	if (_96913_else_token._field_id != static_cast<jule::U64>(17LLU)) {
		_21cb98140_push_err(&(*_self_), _96913_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	}
	(_95417_i)++;
	jule::I64 _97713_j = _95417_i;
	jule::Slice<_21c627dde_Token> _97817_false_expr = _21cba7429_range(_95417_i,jule::Str("{", 1),jule::Str("}", 1),_94236_tokens);
	if ((_97817_false_expr == nullptr)) {
		_21cb98140_push_err(&(*_self_), _96913_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	} else if ((_97817_false_expr.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _94236_tokens[_97713_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_95417_i < static_cast<jule::I64>(static_cast<jule::I64>(_94236_tokens.len()))) {
		_21cb98140_push_err(&(*_self_), _94236_tokens[_95417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_94317_ter.get()._field_true_expr=_21cba449d_build_from_tokens(&(*_self_), _95517_true_expr);
	_94317_ter.get()._field_false_expr=_21cba449d_build_from_tokens(&(*_self_), _97817_false_expr);
	return jule::Any(_94317_ter);
}



inline jule::Any _21cba3403_build_data(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _99734_tokens) {
	{
		auto _match_expr{ _99734_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_2219c152a:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2219c1591:;
			{
				return _21cb99509_build_single(&(*_self_), _99734_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_2219c1607:;
			{
				if (_99734_tokens[0LL]._field_id == static_cast<jule::U64>(31LLU)) {
					return jule::Any(_21cb998b1_build_cpp_linked_ident(&(*_self_), _99734_tokens));
				}
			}
		}
		_match_end_2219c131b:;
	}
	_21c627dde_Token _100917_token = _99734_tokens[0LL];
	{
		auto &_match_expr{ _100917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_2219c3b7b:;
			{
				return _21cba304b_build_ternary(&(*_self_), _99734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2219c3be2:;
			{
				if ((_99734_tokens.len() > 1LL) && (_100917_token._field_kind == jule::Str("*", 1))) {
					_100917_token=_99734_tokens[1LL];
					if ((_100917_token._field_id == static_cast<jule::U64>(1LLU)) || (_100917_token._field_id == static_cast<jule::U64>(35LLU))) {
						return jule::Any(_21cb9a87e_build_type(&(*_self_), _99734_tokens));
					}
				}
				return jule::Any(_21cb99c68_build_unary(&(*_self_), _99734_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2219c3c58:;
			{
				if ((_99734_tokens.len() < 3LL)) {
					goto _match_end_2219c3a6b;
				}
				if ((_99734_tokens.len() > 3LL)) {
					_21c627dde_Token _103021_t = _99734_tokens[(_99734_tokens.len() - 1LL)];
					if ((_103021_t._field_id == static_cast<jule::U64>(3LLU)) && (_103021_t._field_kind == jule::Str(")", 1))) {
						goto _match_end_2219c3a6b;
					}
				}
				_21c627dde_Token _103617_next = _99734_tokens[1LL];
				if ((_103617_next._field_id != static_cast<jule::U64>(3LLU)) || (_103617_next._field_kind != jule::Str("]", 1))) {
					goto _match_end_2219c3a6b;
				}
				return jule::Any(_21cb9a87e_build_type(&(*_self_), _99734_tokens));
			}
		}
		_match_end_2219c3a6b:;
	}
	_100917_token=_99734_tokens[(_99734_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_2219c3cbe:;
			{
				return _21cb9ac36_build_sub_ident(&(*_self_), _99734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2219ca8a8:;
			{
				return jule::Any(_21cb9a87e_build_type(&(*_self_), _99734_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2219ca91e:;
			{
				return _21cb9b495_build_op_right(&(*_self_), _99734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_2219ca985:;
			{
				{
					auto &_match_expr{ _100917_token._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_2219cc899:;
						{
							return _21cb9d2ee_build_parentheses_range(&(*_self_), _99734_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_2219cc932:;
						{
							return _21cba13ce_build_brace_range(&(*_self_), _99734_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_2219cc998:;
						{
							return _21cba2b94_build_bracket_range(&(*_self_), _99734_tokens);
						}
					}
					_match_end_2219cc811:;
				}
			}
		}
		_match_end_2219ca7dc:;
	}
	_21cb98140_push_err(&(*_self_), _100917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_21c63da70_BinopExpr> _21cba3887_build_binop(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _106735_tokens,jule::I64 _106752_i) {
	jule::Slice<_21c627dde_Token> _106817_left_tokens = _106735_tokens.slice(0LL,_106752_i);
	jule::Slice<_21c627dde_Token> _106917_right_tokens = _106735_tokens.slice((_106752_i + 1LL));
	if ((_106817_left_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _106735_tokens[_106752_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_106917_right_tokens.len() == 0LL)) {
		_21cb98140_push_err(&(*_self_), _106735_tokens[_106752_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cb9853b_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_21c63da70_BinopExpr>(_21c63da70_BinopExpr(_21cba449d_build_from_tokens(&(*_self_), _106817_left_tokens),_21cba449d_build_from_tokens(&(*_self_), _106917_right_tokens),_106735_tokens[_106752_i]));
}



inline jule::Any _21cba3c3e_build(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _108729_tokens) {
	jule::I64 _108813_i = _21cb96d64_find_lowest_prec_op(_108729_tokens);
	if ((_108813_i == -1LL)) {
		return _21cba3403_build_data(&(*_self_), _108729_tokens);
	}
	return jule::Any(_21cba3887_build_binop(&(*_self_), _108729_tokens,_108813_i));
}



inline jule::Any _21cba40e6_build_kind(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token>& _109534_tokens) {
	jule::Slice<jule::Slice<_21c627dde_Token>> _109618_parts;
	jule::Slice<_21c348b32_Log> _109625_errors;
	std::tie(_109618_parts,_109625_errors) = _21cba7c43_parts(_109534_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_109625_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_109625_errors);
		return jule::Any(nullptr);
	} else if ((_109618_parts.len() > 1LL)) {
		return jule::Any(_21cb988e3_build_tuple(&(*_self_), _109618_parts));
	}
	return _21cba3c3e_build(&(*_self_), _109534_tokens);
}



inline jule::Ptr<_21c4d7b4a_Expr> _21cba449d_build_from_tokens(_21cb97727_ExprBuilder* _self_,jule::Slice<_21c627dde_Token> _110640_tokens) {
	if ((_110640_tokens.len() == 0LL)) {
		return nullptr;
	}
	return jule::new_ptr<_21c4d7b4a_Expr>(_21c4d7b4a_Expr(_110640_tokens[0LL],jule::Bool(),_21cba40e6_build_kind(&(*_self_), _110640_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, _21cb97727_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _21cba965c_stop(_21cba92b6_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _21cba9937_stopped(_21cba92b6_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _21cba9e10_push_err(_21cba92b6_Parser* _self_,_21c627dde_Token _22827_token,jule::Str _22841_fmt,jule::Slice<jule::Any> _22854_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21cba854b_compiler_err(_22827_token,_22841_fmt,_22854_args));
}



inline void _21cbaa30b_push_suggestion(_21cba92b6_Parser* _self_,jule::Str _23334_fmt,jule::Slice<jule::Any> _23347_args) {
	{
		_21cba897a_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23334_fmt,_23347_args);
	}
}



inline jule::Ptr<_21c4d7b4a_Expr> _21cbaa6b3_build_expr(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _23735_tokens) {
	jule::Ptr<_21cb97727_ExprBuilder> _23817_ep = jule::new_ptr<_21cb97727_ExprBuilder>(_21cb97727_ExprBuilder(_self_));
	jule::Ptr<_21c4d7b4a_Expr> _23917_expr = _21cba449d_build_from_tokens(_23817_ep.ptr(), _23735_tokens);
	return _23917_expr;
}



inline jule::Ptr<_21c525490_Directive> _21cbaaa6a_build_directive(_21cba92b6_Parser* _self_,jule::Slice<_21c627dde_Token> _24338_tokens) {
	if ((_24338_tokens.len() == 1LL)) {
		_21cba9e10_push_err(&(*_self_), _24338_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_24338_tokens[1LL]._field_column != static_cast<jule::I64>(static_cast<jule::I64>((_24338_tokens[0LL]._field_column + 1LL)))) {
		_21cba9e10_push_err(&(*_self_), _24338_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_21c525490_Directive>(_21c525490_Directive(_24338_tokens[1LL],_24338_tokens.slice(2LL)));
}



inline void _21cbaad89_push_directive(_21cba92b6_Parser* _self_,jule::Ptr<_21c525490_Directive> _26037_d) {
	if ((_26037_d == nullptr)) {
		return;
	}
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_2219e3d22:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _2219e4482_pd = *it;
			{
				if (_26037_d.get()._field_tag._field_kind == _2219e4482_pd.get()._field_tag._field_kind) {
					return;
				}
			}
			_iter_next_2219e3d22:;
			++it;
			goto _iter_begin_2219e3d22;
		}
		_iter_end_2219e3d22:;
	}
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26037_d);
}



inline jule::Ptr<_21c6411e3_ScopeTree> _21cbab241_build_scope(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _27436_tokens) {
	jule::Ptr<_21c6411e3_ScopeTree> _27517_s = _21cb80523_new_scope();
	_21cb82327_ScopeParser _27617_sp = _21cb82327_ScopeParser(_self_,jule::Ptr<_21c6411e3_ScopeTree>(),jule::Slice<jule::Ptr<_21cb81876_Stmt>>(),jule::I64());
	_21cb9502c_build(&_27617_sp, _27436_tokens,_27517_s);
	return _27517_s;
}



inline std::tuple<jule::Ptr<_21c5d253b_TypeDecl>,jule::Bool> _21cbab7a2___build_type(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _28344_tokens,jule::I64* _28413_i,jule::Bool _28422_err) {
	_21cbbdb9e_TypeBuilder _28517_tb = _21cbbdb9e_TypeBuilder(_self_,_28344_tokens,_28413_i,_28422_err);
	jule::Ptr<_21c5d253b_TypeDecl> _29118_decl;
	jule::Bool _29124_ok;
	std::tie(_29118_decl,_29124_ok) = _21cbc2983_build(&_28517_tb);
	return std::make_tuple(_29118_decl,_29124_ok);
}



inline std::tuple<jule::Ptr<_21c5d253b_TypeDecl>,jule::Bool> _21cbabd13_build_type(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _29642_tokens,jule::I64* _29713_i,jule::Bool _29722_err) {
	_21c627dde_Token _29813_token = _29642_tokens[(*(_29713_i))];
	jule::Ptr<_21c5d253b_TypeDecl> _29918_t;
	jule::Bool _29921_ok;
	std::tie(_29918_t,_29921_ok) = _21cbab7a2___build_type(_self_, _29642_tokens,_29713_i,_29722_err);
	if (_29722_err && (!(_29921_ok))) {
		_21cba9e10_push_err(_self_.ptr(), _29813_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_29918_t,_29921_ok);
}



inline jule::Ptr<_21c644ea5_TypeAliasDecl> _21cbac1ba_build_type_alias_decl(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _30646_tokens) {
	jule::I64 _30717_i = 1LL;
	if (_30717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c644ea5_TypeAliasDecl> _31217_tad = jule::new_ptr<_21c644ea5_TypeAliasDecl>(_21c644ea5_TypeAliasDecl(jule::Ptr<_21c6411e3_ScopeTree>(),jule::Bool(),jule::Bool(),_30646_tokens[1LL],_30646_tokens[1LL]._field_kind,jule::Ptr<_21c5d253b_TypeDecl>()));
	_21c627dde_Token _31617_token = _30646_tokens[_30717_i];
	if (_31617_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _31617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_30717_i)++;
	if (_30717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _31217_tad;
	}
	_31617_token=_30646_tokens[_30717_i];
	if (_31617_token._field_id != static_cast<jule::U64>(11LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _31217_tad;
	}
	(_30717_i)++;
	if (_30717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _31217_tad;
	}
	jule::Ptr<_21c5d253b_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = _21cbabd13_build_type(_self_, _30646_tokens,(&(_30717_i)),true);
	_31217_tad.get()._field_kind=_33718_t;
	if (_33721_ok && (_30717_i < static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len())))) {
		_21cba9e10_push_err(_self_.ptr(), _30646_tokens[_30717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _31217_tad;
}



inline void _21cbac60a_build_var_type_and_expr(jule::Ptr<_21cba92b6_Parser> _self_,jule::Ptr<_21c64205c_VarDecl>& _34548_v,jule::Slice<_21c627dde_Token>& _34566_tokens) {
	jule::I64 _34617_i = 0LL;
	_21c627dde_Token _34717_tok = _34566_tokens[_34617_i];
	if (_34717_tok._field_id == static_cast<jule::U64>(11LLU)) {
		(_34617_i)++;
		if ((_34617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_34566_tokens.len()))) || ((_34566_tokens[_34617_i]._field_id == static_cast<jule::U64>(7LLU)) && (_34566_tokens[_34617_i]._field_kind == jule::Str("=", 1)))) {
			_21cba9e10_push_err(_self_.ptr(), _34717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_21c5d253b_TypeDecl> _35522_t;
		jule::Bool _35525_ok;
		std::tie(_35522_t,_35525_ok) = _21cbabd13_build_type(_self_, _34566_tokens,(&(_34617_i)),true);
		if (_35525_ok) {
			_34548_v.get()._field_kind=_35522_t;
			if (_34617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_34566_tokens.len()))) {
				return;
			}
			_34717_tok=_34566_tokens[_34617_i];
		}
	}
	if (_34717_tok._field_id == static_cast<jule::U64>(7LLU)) {
		if ((_34717_tok._field_kind != jule::Str("=", 1))) {
			_21cba9e10_push_err(_self_.ptr(), _34717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_21c627dde_Token> _37021_expr_tokens = _34566_tokens.slice((_34617_i + 1LL));
		if ((_37021_expr_tokens.len() == 0LL)) {
			_21cba9e10_push_err(_self_.ptr(), _34717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_34548_v.get()._field_expr=_21cbaa6b3_build_expr(_self_, _37021_expr_tokens);
	} else {
		_21cba9e10_push_err(_self_.ptr(), _34717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _21cbac9e5_build_var_common(jule::Ptr<_21cba92b6_Parser> _self_,jule::Ptr<_21c64205c_VarDecl>& _38141_v,jule::Slice<_21c627dde_Token> _38158_tokens) {
	_38141_v.get()._field_token=_38158_tokens[0LL];
	if (_38141_v.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _38141_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_38141_v.get()._field_ident=_38141_v.get()._field_token._field_kind;
	_38141_v.get()._field_kind=nullptr;
	if ((_38158_tokens.len() > 1LL)) {
		_38158_tokens=_38158_tokens.slice(1LL);
		_21cbac60a_build_var_type_and_expr(_self_, _38141_v,_38158_tokens);
	}
}



inline void _21cbacebd_build_var_begin(_21cba92b6_Parser* _self_,jule::Ptr<_21c64205c_VarDecl>& _39639_v,jule::Ptr<jule::I64> _39656_i,jule::Slice<_21c627dde_Token>& _39666_tokens) {
	_21c627dde_Token _39713_tok = _39666_tokens[(*(_39656_i))];
	{
		auto &_match_expr{ _39713_tok._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_221a15926:;
			{
				_39639_v.get()._field_statically=true;
				goto _case_begin_221a14d87;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_221a14d87:;
			{
				((*(_39656_i)))++;
				if ((*(_39656_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_39666_tokens.len()))) {
					_21cba9e10_push_err(&(*_self_), _39713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_39666_tokens[(*(_39656_i))]._field_id == static_cast<jule::U64>(36LLU)) {
					_39639_v.get()._field_mutable=true;
					((*(_39656_i)))++;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_221a14ded:;
			{
				((*(_39656_i)))++;
				_39639_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_221a14705:;
			{
				_21cba9e10_push_err(&(*_self_), _39713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_221a14d10:;
	}
	if ((*(_39656_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_39666_tokens.len()))) {
		_21cba9e10_push_err(&(*_self_), _39713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_21c64205c_VarDecl> _21cbad375_build_var(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _43033_tokens) {
	jule::Ptr<jule::I64> _43117_i = jule::new_ptr<jule::I64>(0LL);
	jule::Ptr<_21c64205c_VarDecl> _43217_v = jule::new_ptr<_21c64205c_VarDecl>(_21c64205c_VarDecl(jule::Ptr<_21c6411e3_ScopeTree>(),_43033_tokens[(*(_43117_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21c5d253b_TypeDecl>(),jule::Ptr<_21c4d7b4a_Expr>()));
	_21cbacebd_build_var_begin(_self_.ptr(), _43217_v,_43117_i,_43033_tokens);
	if ((*(_43117_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_43033_tokens.len()))) {
		return nullptr;
	}
	_43033_tokens=_43033_tokens.slice((*(_43117_i)));
	if ((_43033_tokens[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_43033_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_43217_v.get()._field_reference=true;
		if ((_43033_tokens.len() == 1LL)) {
			return nullptr;
		}
		_43033_tokens=_43033_tokens.slice(1LL);
	}
	_21cbac9e5_build_var_common(_self_, _43217_v,_43033_tokens);
	return _43217_v;
}



inline jule::Ptr<_21c640423_GenericDecl> _21cbad72c_build_generic(_21cba92b6_Parser* _self_,jule::Slice<_21c627dde_Token>& _45237_tokens) {
	if ((_45237_tokens.len() > 1LL)) {
		_21cba9e10_push_err(&(*_self_), _45237_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21c640423_GenericDecl> _45617_g = jule::new_ptr<_21c640423_GenericDecl>(_21c640423_GenericDecl(_45237_tokens[0LL],jule::Str()));
	if (_45617_g.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(&(*_self_), _45617_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_45617_g.get()._field_ident=_45617_g.get()._field_token._field_kind;
	return _45617_g;
}



inline jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _21cbadbb1_build_generics(_21cba92b6_Parser* _self_,jule::Slice<_21c627dde_Token>& _46738_tokens,_21c627dde_Token& _46756_error_token) {
	if ((_46738_tokens.len() == 0LL)) {
		_21cba9e10_push_err(&(*_self_), _46756_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_21c627dde_Token>> _47318_parts;
	jule::Slice<_21c348b32_Log> _47325_errors;
	std::tie(_47318_parts,_47325_errors) = _21cba7c43_parts(_46738_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47325_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47325_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _47917_generics = jule::Slice<jule::Ptr<_21c640423_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_47318_parts.len()));
	{
		auto &expr = _47318_parts;
		auto it = expr.begin();
		_iter_begin_221a26074:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _221a260b8_part = *it;
			{
				_47917_generics = jule::alloc_for_append(_47917_generics,1);_47917_generics.__push(_21cbad72c_build_generic(&(*_self_), _221a260b8_part));
			}
			_iter_next_221a26074:;
			++it;
			goto _iter_begin_221a26074;
		}
		_iter_end_221a26074:;
	}
	return _47917_generics;
}



inline jule::Ptr<_21c641413_ParamDecl> _21cbae068_build_self_param(_21cba92b6_Parser* _self_,jule::Slice<_21c627dde_Token> _48739_tokens) {
	if ((_48739_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_21c641413_ParamDecl> _49217_param = jule::new_ptr<_21c641413_ParamDecl>(_21c641413_ParamDecl());
	jule::I64 _49517_i = 0LL;
	if (_48739_tokens[_49517_i]._field_id == static_cast<jule::U64>(36LLU)) {
		_49217_param.get()._field_mutable=true;
		(_49517_i)++;
		if (_49517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_48739_tokens.len()))) {
			_21cba9e10_push_err(&(*_self_), _48739_tokens[(_49517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if ((_48739_tokens[_49517_i]._field_kind == jule::Str("&", 1))) {
		_49217_param.get()._field_ident=jule::Str("&", 1);
		(_49517_i)++;
		if (_49517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_48739_tokens.len()))) {
			_21cba9e10_push_err(&(*_self_), _48739_tokens[(_49517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_48739_tokens[_49517_i]._field_id == static_cast<jule::U64>(28LLU)) {
		_49217_param.get()._field_ident+=jule::Str("self", 4);
		_49217_param.get()._field_token=_48739_tokens[_49517_i];
		(_49517_i)++;
		if (_49517_i < static_cast<jule::I64>(static_cast<jule::I64>(_48739_tokens.len()))) {
			_21cba9e10_push_err(&(*_self_), _48739_tokens[_49517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _49217_param;
}



inline void _21cbae541_param_type_begin(_21cba92b6_Parser* _self_,jule::Ptr<_21c641413_ParamDecl>& _52640_param,jule::I64& _52664_i,jule::Slice<_21c627dde_Token>& _52673_tokens) {
	for (; _52664_i < static_cast<jule::I64>(static_cast<jule::I64>(_52673_tokens.len())); (_52664_i)++) {
		{
			_21c627dde_Token _52817_token = _52673_tokens[_52664_i];
			if (_52817_token._field_id != static_cast<jule::U64>(7LLU)) {
				return;
			} else if ((_52817_token._field_kind != jule::Str("...", 3))) {
				return;
			}
			if (_52640_param.get()._field_variadic) {
				_21cba9e10_push_err(&(*_self_), _52817_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_221a2e6a9;
			}
			_52640_param.get()._field_variadic=true;
		}
	_iter_next_221a2e6a9:;
	}
	_iter_end_221a2e6a9:;
}



inline void _21cbae93c_build_param_type(jule::Ptr<_21cba92b6_Parser> _self_,jule::Ptr<_21c641413_ParamDecl>& _54341_param,jule::Slice<_21c627dde_Token>& _54365_tokens) {
	jule::I64 _54417_i = 0LL;
	_21cbae541_param_type_begin(_self_.ptr(), _54341_param,_54417_i,_54365_tokens);
	if (_54417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_54365_tokens.len()))) {
		return;
	}
	std::tie(_54341_param.get()._field_kind,std::ignore) = _21cbabd13_build_type(_self_, _54365_tokens,(&(_54417_i)),true);
	if (_54417_i < static_cast<jule::I64>(static_cast<jule::I64>(_54365_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _54365_tokens[_54417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _21cbaed38_param_body_id(_21cba92b6_Parser* _self_,jule::Ptr<_21c641413_ParamDecl> _55632_param,_21c627dde_Token _55651_token) {
	if (_21c62abc2_is_ignore_ident(_55651_token._field_kind)) {
		_55632_param.get()._field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_55632_param.get()._field_ident=_55651_token._field_kind;
}



inline void _21cbb0311_build_param_body(jule::Ptr<_21cba92b6_Parser> _self_,jule::Ptr<_21c641413_ParamDecl>& _56441_param,jule::Ptr<jule::I64> _56464_i,jule::Slice<_21c627dde_Token> _56477_tokens) {
	_21cbaed38_param_body_id(_self_.ptr(), _56441_param,_56477_tokens[(*(_56464_i))]);
	_21c627dde_Token _56617_tok = _56477_tokens[(*(_56464_i))];
	if (((*(_56464_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_56477_tokens.len()))) {
		return;
	} else if ((((_56477_tokens.len() - (*(_56464_i))) - 1LL) < 2LL)) {
		_21cba9e10_push_err(_self_.ptr(), _56617_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;
	}
	_56617_tok=_56477_tokens[((*(_56464_i)) + 1LL)];
	if (_56617_tok._field_id != static_cast<jule::U64>(11LLU)) {
		_21cbae93c_build_param_type(_self_, _56441_param,_56477_tokens);
		return;
	}
	_56477_tokens=_56477_tokens.slice(((*(_56464_i)) + 2LL));
	_21cbae93c_build_param_type(_self_, _56441_param,_56477_tokens);
}



inline jule::Ptr<_21c641413_ParamDecl> _21cbb06b8_build_param(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _58535_tokens) {
	jule::Ptr<_21c641413_ParamDecl> _58617_param = jule::new_ptr<_21c641413_ParamDecl>(_21c641413_ParamDecl(_58535_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21c5d253b_TypeDecl>(),jule::Str()));
	if (_58617_param.get()._field_token._field_id == static_cast<jule::U64>(36LLU)) {
		_58617_param.get()._field_mutable=true;
		if ((_58535_tokens.len() == 1LL)) {
			_21cba9e10_push_err(_self_.ptr(), _58535_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_58535_tokens=_58535_tokens.slice(1LL);
		_58617_param.get()._field_token=_58535_tokens[0LL];
	}
	if ((_58535_tokens.len() >= 3LL)) {
		if ((_58617_param.get()._field_token._field_id == static_cast<jule::U64>(7LLU)) && (_58617_param.get()._field_token._field_kind == jule::Str("&", 1))) {
			if ((_58535_tokens.len() == 1LL)) {
				_21cba9e10_push_err(_self_.ptr(), _58535_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_58535_tokens[1LL]._field_id == static_cast<jule::U64>(2LLU)) && (_58535_tokens[2LL]._field_id == static_cast<jule::U64>(11LLU))) {
				_58617_param.get()._field_reference=true;
				_58535_tokens=_58535_tokens.slice(1LL);
				_58617_param.get()._field_token=_58535_tokens[0LL];
			}
		}
	}
	if (_58617_param.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_58617_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_21cbae93c_build_param_type(_self_, _58617_param,_58535_tokens);
	} else {
		jule::Ptr<jule::I64> _62221_i = jule::new_ptr<jule::I64>(0LL);
		_21cbb0311_build_param_body(_self_, _58617_param,_62221_i,_58535_tokens);
	}
	return _58617_param;
}



inline void _21cbb09d7_check_params(_21cba92b6_Parser* _self_,jule::Slice<jule::Ptr<_21c641413_ParamDecl>>& _62936_params) {
	{
		auto &expr = _62936_params;
		auto it = expr.begin();
		_iter_begin_221a46193:;
		if (it != expr.end()) {
			jule::Ptr<_21c641413_ParamDecl> _221a46270_param = *it;
			{
				if (_21c50576c_is_self(_221a46270_param.ptr()) || (_221a46270_param.get()._field_kind != nullptr)) {
					goto _iter_next_221a46193;
				}
				if (_221a46270_param.get()._field_token._field_id == static_cast<jule::U64>(0LLU)) {
					_21cba9e10_push_err(&(*_self_), _221a46270_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_221a46270_param.get()._field_kind=jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_221a46270_param.get()._field_token,jule::Any(jule::Any(jule::new_ptr<_21c529e9a_IdentTypeDecl>(_21c529e9a_IdentTypeDecl(_221a46270_param.get()._field_token,_221a46270_param.get()._field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>()))))));
					_221a46270_param.get()._field_ident=jule::Str("<anonymous>", 11);
					_221a46270_param.get()._field_token=_21c627dde_Token();
				}
			}
			_iter_next_221a46193:;
			++it;
			goto _iter_begin_221a46193;
		}
		_iter_end_221a46193:;
	}
}



inline jule::Slice<jule::Ptr<_21c641413_ParamDecl>> _21cbb0e6b_build_params(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _65037_tokens,jule::Bool _65054_method) {
	jule::Slice<jule::Slice<_21c627dde_Token>> _65118_parts;
	jule::Slice<_21c348b32_Log> _65125_errs;
	std::tie(_65118_parts,_65125_errs) = _21cba7c43_parts(_65037_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_65125_errs);
	if ((_65118_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21c641413_ParamDecl>> _65717_params = nullptr;
	if (_65054_method && (_65118_parts.len() > 0LL)) {
		jule::Ptr<_21c641413_ParamDecl> _65921_param = _21cbae068_build_self_param(_self_.ptr(), _65118_parts[0LL]);
		if ((_65921_param != nullptr) && _21c50576c_is_self(_65921_param.ptr())) {
			_65717_params = jule::alloc_for_append(_65717_params,1);_65717_params.__push(_65921_param);
			_65118_parts=_65118_parts.slice(1LL);
		}
	}
	{
		auto &expr = _65118_parts;
		auto it = expr.begin();
		_iter_begin_221a4dcb1:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _221a4dd05_part = *it;
			{
				jule::Ptr<_21c641413_ParamDecl> _66721_param = _21cbb06b8_build_param(_self_, _221a4dd05_part);
				if ((_66721_param != nullptr)) {
					_65717_params = jule::alloc_for_append(_65717_params,1);_65717_params.__push(_66721_param);
				}
			}
			_iter_next_221a4dcb1:;
			++it;
			goto _iter_begin_221a4dcb1;
		}
		_iter_end_221a4dcb1:;
	}
	_21cbb09d7_check_params(_self_.ptr(), _65717_params);
	return _65717_params;
}



inline std::tuple<jule::Ptr<_21c4d792a_RetTypeDecl>,jule::Bool> _21cbb1400_build_multi_ret_type(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _67745_tokens,jule::I64& _67767_i) {
	jule::Ptr<_21c4d792a_RetTypeDecl> _67777_t = jule::Ptr<_21c4d792a_RetTypeDecl>();
	jule::Bool _67794_ok = jule::Bool();
	_67777_t=jule::new_ptr<_21c4d792a_RetTypeDecl>(_21c4d792a_RetTypeDecl());
	(_67767_i)++;
	if (_67767_i >= static_cast<jule::I64>(static_cast<jule::I64>(_67745_tokens.len()))) {
		(_67767_i)--;
		std::tie(_67777_t.get()._field_kind,_67794_ok) = _21cbabd13_build_type(_self_, _67745_tokens,(&(_67767_i)),false);
		return std::make_tuple(_67777_t,_67794_ok);
	}
	(_67767_i)--;
	jule::Slice<_21c627dde_Token> _68717_range_tokens = _21cba7429_range(_67767_i,jule::Str("(", 1),jule::Str(")", 1),_67745_tokens);
	jule::Slice<jule::Slice<_21c627dde_Token>> _68918_parts;
	jule::Slice<_21c348b32_Log> _68925_errs;
	std::tie(_68918_parts,_68925_errs) = _21cba7c43_parts(_68717_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68925_errs);
	if ((_68918_parts.len() == 0LL)) {
		return std::make_tuple(_67777_t,_67794_ok);
	}
	jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _69517_types = jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_68918_parts.len()));
	_67777_t.get()._field_idents=jule::Slice<_21c627dde_Token>::alloc(0LL,static_cast<jule::I64>(_68918_parts.len()));
	{
		auto &expr = _68918_parts;
		auto it = expr.begin();
		_iter_begin_221a55702:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _221a55856_part = *it;
			{
				_21c627dde_Token _69821_token = _221a55856_part[0LL];
				jule::I64 _69921_offset = 0LL;
				if ((_221a55856_part.len() > 1LL)) {
					_69821_token=_221a55856_part[1LL];
					if (_69821_token._field_id == static_cast<jule::U64>(11LLU)) {
						_69921_offset=2LL;
						if ((_221a55856_part.len() < 3LL)) {
							_21cba9e10_push_err(_self_.ptr(), _69821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_221a55702;
						}
					}
				}
				_69821_token=_221a55856_part[0LL];
				if ((_69921_offset == 2LL)) {
					if (_69821_token._field_id != static_cast<jule::U64>(2LLU)) {
					}
					_67777_t.get()._field_idents = jule::alloc_for_append(_67777_t.get()._field_idents,1);_67777_t.get()._field_idents.__push(_69821_token);
				} else {
					_69821_token._field_kind=jule::Str("_", 1);
					_67777_t.get()._field_idents = jule::alloc_for_append(_67777_t.get()._field_idents,1);_67777_t.get()._field_idents.__push(_69821_token);
				}
				jule::Ptr<_21c5d253b_TypeDecl> _72422_tk;
				std::tie(_72422_tk,std::ignore) = _21cbabd13_build_type(_self_, _221a55856_part,(&(_69921_offset)),true);
				if (_69921_offset < static_cast<jule::I64>(static_cast<jule::I64>(_221a55856_part.len()))) {
					_21cba9e10_push_err(_self_.ptr(), _221a55856_part[_69921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_69517_types = jule::alloc_for_append(_69517_types,1);_69517_types.__push(_72422_tk);
			}
			_iter_next_221a55702:;
			++it;
			goto _iter_begin_221a55702;
		}
		_iter_end_221a55702:;
	}
	if ((_69517_types.len() > 1LL)) {
		_67777_t.get()._field_kind=jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_67745_tokens[0LL],jule::Any(jule::Any(jule::new_ptr<_21c515c99_TupleTypeDecl>(_21c515c99_TupleTypeDecl(_69517_types))))));
	} else {
		_67777_t.get()._field_kind=_69517_types[0LL];
	}
	_67794_ok=true;
	return std::make_tuple(_67777_t,_67794_ok);
}



inline std::tuple<jule::Ptr<_21c4d792a_RetTypeDecl>,jule::Bool> _21cbb1884_build_ret_type(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _74739_tokens,jule::I64& _74761_i) {
	jule::Ptr<_21c4d792a_RetTypeDecl> _74771_t = jule::Ptr<_21c4d792a_RetTypeDecl>();
	jule::Bool _74788_ok = jule::Bool();
	_74771_t=jule::new_ptr<_21c4d792a_RetTypeDecl>(_21c4d792a_RetTypeDecl());
	if (_74761_i >= static_cast<jule::I64>(static_cast<jule::I64>(_74739_tokens.len()))) {
		return std::make_tuple(_74771_t,_74788_ok);
	}
	_21c627dde_Token _75317_token = _74739_tokens[_74761_i];
	{
		auto &_match_expr{ _75317_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_221a60a09:;
			{
				if ((_75317_token._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74771_t,_74788_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_221a60a70:;
			{
				if ((_75317_token._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74771_t,_74788_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_221a60ad6:;
			{
				if ((_74761_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_74739_tokens.len()))) {
					_21cba9e10_push_err(_self_.ptr(), _75317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74771_t,_74788_ok);
				}
				(_74761_i)++;
				_75317_token=_74739_tokens[_74761_i];
				if (_75317_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _75317_token._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_221a62e29:;
							{
								std::tie(_74771_t,_74788_ok) = _21cbb1400_build_multi_ret_type(_self_, _74739_tokens,_74761_i);
								return std::make_tuple(_74771_t,_74788_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_221a63c0a:;
							{
								_21cba9e10_push_err(_self_.ptr(), _75317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74771_t,_74788_ok);
							}
						}
						_match_end_221a63b1c:;
					}
				}
				std::tie(_74771_t.get()._field_kind,_74788_ok) = _21cbabd13_build_type(_self_, _74739_tokens,(&(_74761_i)),true);
				return std::make_tuple(_74771_t,_74788_ok);
			}
		}
		_match_end_221a60982:;
	}
	(_74761_i)++;
	_21cba9e10_push_err(_self_.ptr(), _75317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74771_t,_74788_ok);
}



inline jule::Ptr<_21c641633_FnDecl> _21cbb1de5_build_fn_prototype(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _79243_tokens,jule::I64& _79265_i,jule::Bool _79273_method) {
	jule::Ptr<_21c641633_FnDecl> _79317_f = jule::new_ptr<_21c641633_FnDecl>(_21c641633_FnDecl(_79243_tokens[_79265_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21c6411e3_ScopeTree>(),jule::Slice<jule::Ptr<_21c640423_GenericDecl>>(),jule::Ptr<_21c4d792a_RetTypeDecl>(),jule::Slice<jule::Ptr<_21c641413_ParamDecl>>()));
	if (_79317_f.get()._field_token._field_id == static_cast<jule::U64>(38LLU)) {
		_79317_f.get()._field_statically=true;
		(_79265_i)++;
		if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_79317_f.get()._field_token=_79243_tokens[_79265_i];
	}
	if (_79317_f.get()._field_token._field_id == static_cast<jule::U64>(35LLU)) {
		_79317_f.get()._field_unsafety=true;
		(_79265_i)++;
		if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_79317_f.get()._field_token=_79243_tokens[_79265_i];
	}
	(_79265_i)++;
	if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_21c627dde_Token _82613_tok = _79243_tokens[_79265_i];
	if (_82613_tok._field_id == static_cast<jule::U64>(2LLU)) {
		(_79265_i)++;
		if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_79317_f.get()._field_ident=_82613_tok._field_kind;
	} else {
		_79317_f.get()._field_ident=jule::Str("<anonymous>", 11);
	}
	_21c627dde_Token _83813_error_token = _79243_tokens[_79265_i];
	jule::Slice<_21c627dde_Token> _83917_generics_tokens = _21cba7429_range(_79265_i,jule::Str("[", 1),jule::Str("]", 1),_79243_tokens);
	if ((_83917_generics_tokens != nullptr)) {
		_79317_f.get()._field_generics=_21cbadbb1_build_generics(_self_.ptr(), _83917_generics_tokens,_83813_error_token);
	}
	if ((_79243_tokens[_79265_i]._field_kind != jule::Str("(", 1))) {
		_21cba9e10_push_err(_self_.ptr(), _79243_tokens[_79265_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_21c627dde_Token> _84917_params_toks = _21cba7429_range(_79265_i,jule::Str("(", 1),jule::Str(")", 1),_79243_tokens);
	if ((_84917_params_toks.len() > 0LL)) {
		_79317_f.get()._field_params=_21cbb0e6b_build_params(_self_, _84917_params_toks,_79273_method);
	}
	if (_79265_i < static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
		_21c627dde_Token _85517_token = _79243_tokens[_79265_i];
		if ((_85517_token._field_id == static_cast<jule::U64>(7LLU)) && (_85517_token._field_kind == jule::Str("!", 1))) {
			_79317_f.get()._field_exceptional=true;
			(_79265_i)++;
		}
	}
	std::tie(_79317_f.get()._field_result,std::ignore) = _21cbb1884_build_ret_type(_self_, _79243_tokens,_79265_i);
	return _79317_f;
}



inline jule::Ptr<_21c641633_FnDecl> _21cbb2456_build_fn(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _86833_tokens,jule::Bool _86850_method,jule::Bool _86864_prototype) {
	jule::I64 _86917_i = 0LL;
	jule::Ptr<_21c641633_FnDecl> _87017_f = _21cbb1de5_build_fn_prototype(_self_, _86833_tokens,_86917_i,_86850_method);
	if (_86864_prototype) {
		if (_86917_i < static_cast<jule::I64>(static_cast<jule::I64>(_86833_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _86833_tokens[(_86917_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _87017_f;
	} else if ((_87017_f == nullptr)) {
		return _87017_f;
	}
	if (_86917_i >= static_cast<jule::I64>(static_cast<jule::I64>(_86833_tokens.len()))) {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _87017_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_21c627dde_Token> _88617_block_tokens = _21cba7429_range(_86917_i,jule::Str("{", 1),jule::Str("}", 1),_86833_tokens);
	if ((_88617_block_tokens != nullptr)) {
		_87017_f.get()._field_scope=_21cbab241_build_scope(_self_, _88617_block_tokens);
		_87017_f.get()._field_scope.get()._field_unsafety=_87017_f.get()._field_unsafety;
		if (_86917_i < static_cast<jule::I64>(static_cast<jule::I64>(_86833_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _86833_tokens[_86917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _87017_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _87017_f;
}



inline jule::Slice<_21c627dde_Token> _21cbb280d_get_use_decl_selectors(_21cba92b6_Parser* _self_,jule::Slice<_21c627dde_Token> _90245_tokens) {
	jule::I64 _90317_i = 0LL;
	_90245_tokens=_21cba7429_range(_90317_i,jule::Str("{", 1),jule::Str("}", 1),_90245_tokens);
	jule::Slice<jule::Slice<_21c627dde_Token>> _90518_parts;
	jule::Slice<_21c348b32_Log> _90525_errs;
	std::tie(_90518_parts,_90525_errs) = _21cba7c43_parts(_90245_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_90525_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_90525_errs);
		return nullptr;
	}
	jule::Slice<_21c627dde_Token> _91117_selectors = jule::Slice<_21c627dde_Token>::alloc(0LL,static_cast<jule::I64>(_90518_parts.len()));
	{
		auto &expr = _90518_parts;
		auto it = expr.begin();
		_iter_begin_221a80e8b:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _221a813a9_part = *it;
			{
				if ((_221a813a9_part.len() > 1LL)) {
					_21cba9e10_push_err(&(*_self_), _221a813a9_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_21c627dde_Token _91621_tok = _221a813a9_part[0LL];
				if ((_91621_tok._field_id != static_cast<jule::U64>(2LLU)) && (_91621_tok._field_id != static_cast<jule::U64>(28LLU))) {
					_21cba9e10_push_err(&(*_self_), _91621_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_21cbaa30b_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_221a80e8b;
				}
				_91117_selectors = jule::alloc_for_append(_91117_selectors,1);_91117_selectors.__push(_91621_tok);
			}
			_iter_next_221a80e8b:;
			++it;
			goto _iter_begin_221a80e8b;
		}
		_iter_end_221a80e8b:;
	}
	return _91117_selectors;
}



inline void _21cbb2c09_build_cpp_use_decl(_21cba92b6_Parser* _self_,jule::Ptr<_21c6460a5_UseDecl>& _92742_decl,jule::Slice<_21c627dde_Token>& _92759_tokens) {
	if ((_92759_tokens.len() > 1LL)) {
		_21cba9e10_push_err(&(*_self_), _92759_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_21c627dde_Token _93113_token = _92759_tokens[0LL];
	if ((_93113_token._field_id != static_cast<jule::U64>(6LLU)) || ((_93113_token._field_kind[0LL] != '`') && (_93113_token._field_kind[0LL] != '\"'))) {
		_21cba9e10_push_err(&(*_self_), _93113_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_92742_decl.get()._field_cpp_linked=true;
	_92742_decl.get()._field_link_path=_93113_token._field_kind.slice(1LL,(_93113_token._field_kind.len() - 1LL));
	if ((!(_236920794_is_std_header_path(_92742_decl.get()._field_link_path)))) {
		_92742_decl.get()._field_link_path=_235b71c27_join(jule::Slice<jule::Str>({_21c62eaa5_dir(_93113_token._field_file.ptr()),_92742_decl.get()._field_link_path}));
	}
}



inline void _21cbb3105_build_std_use_decl(_21cba92b6_Parser* _self_,jule::Ptr<_21c6460a5_UseDecl>& _94342_decl,jule::Slice<_21c627dde_Token> _94362_tokens) {
	_94342_decl.get()._field_std=true;
	_21c627dde_Token _94617_token = _94362_tokens[0LL];
	if ((_94362_tokens.len() < 3LL)) {
		_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_94362_tokens=_94362_tokens.slice(2LL);
	_94617_token=_94362_tokens[(_94362_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94617_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_221a8c22d:;
			{
				_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_221a8cd44:;
			{
				if ((_94617_token._field_kind != jule::Str("}", 1))) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_21c627dde_Token> _96421_selectors = nullptr;
				std::tie(_94362_tokens,_96421_selectors) = _21cba7737_range_last(_94362_tokens);
				_94342_decl.get()._field_selected=_21cbb280d_get_use_decl_selectors(&(*_self_), _96421_selectors);
				if ((_94362_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94617_token=_94362_tokens[(_94362_tokens.len() - 1LL)];
				if (_94617_token._field_id != static_cast<jule::U64>(23LLU)) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94362_tokens=_94362_tokens.slice(0LL,(_94362_tokens.len() - 1LL));
				if ((_94362_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_221a8cdaa:;
			{
				if ((_94617_token._field_kind != jule::Str("*", 1))) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94362_tokens=_94362_tokens.slice(0LL,(_94362_tokens.len() - 1LL));
				if ((_94362_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94617_token=_94362_tokens[(_94362_tokens.len() - 1LL)];
				if (_94617_token._field_id != static_cast<jule::U64>(23LLU)) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94362_tokens=_94362_tokens.slice(0LL,(_94362_tokens.len() - 1LL));
				if ((_94362_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94342_decl.get()._field_full=true;
			}
		}
		_match_end_221a8cc78:;
	}
	_94342_decl.get()._field_link_path=jule::Str("std::", 5) + _21cba8d21_tokstoa(_94362_tokens);
}



inline void _21cbb3501_build_ident_use_decl(_21cba92b6_Parser* _self_,jule::Ptr<_21c6460a5_UseDecl>& _100744_decl,jule::Slice<_21c627dde_Token> _100764_tokens) {
	_100744_decl.get()._field_std=false;
	_21c627dde_Token _101017_token = _100764_tokens[(_100764_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _101017_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_221a9a25d:;
			{
				_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_221a9a2c4:;
			{
				if ((_101017_token._field_kind != jule::Str("}", 1))) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_21c627dde_Token> _102221_selectors = nullptr;
				std::tie(_100764_tokens,_102221_selectors) = _21cba7737_range_last(_100764_tokens);
				_100744_decl.get()._field_selected=_21cbb280d_get_use_decl_selectors(&(*_self_), _102221_selectors);
				if ((_100764_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_101017_token=_100764_tokens[(_100764_tokens.len() - 1LL)];
				if (_101017_token._field_id != static_cast<jule::U64>(23LLU)) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100764_tokens=_100764_tokens.slice(0LL,(_100764_tokens.len() - 1LL));
				if ((_100764_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_221a9a33a:;
			{
				if ((_101017_token._field_kind != jule::Str("*", 1))) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100764_tokens=_100764_tokens.slice(0LL,(_100764_tokens.len() - 1LL));
				if ((_100764_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_101017_token=_100764_tokens[(_100764_tokens.len() - 1LL)];
				if (_101017_token._field_id != static_cast<jule::U64>(23LLU)) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100764_tokens=_100764_tokens.slice(0LL,(_100764_tokens.len() - 1LL));
				if ((_100764_tokens.len() == 0LL)) {
					_21cba9e10_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100744_decl.get()._field_full=true;
			}
		}
		_match_end_221a9a170:;
	}
	_100744_decl.get()._field_link_path=_21cba8d21_tokstoa(_100764_tokens);
}



inline void _21cbb38ec_parse_use_decl(_21cba92b6_Parser* _self_,jule::Ptr<_21c6460a5_UseDecl>& _107238_decl,jule::Slice<_21c627dde_Token> _107258_tokens) {
	if (_107238_decl.get()._field_cpp_linked) {
		_21cbb2c09_build_cpp_use_decl(&(*_self_), _107238_decl,_107258_tokens);
		return;
	}
	_21c627dde_Token _107817_token = _107258_tokens[0LL];
	if (_107817_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(&(*_self_), _107817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_107258_tokens.len() > 2LL) && (_107258_tokens[1LL]._field_id == static_cast<jule::U64>(12LLU))) {
		_107238_decl.get()._field_alias=_107817_token._field_kind;
		if (_107258_tokens[2LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_21cba9e10_push_err(&(*_self_), _107817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_21cbaa30b_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_107258_tokens=_107258_tokens.slice(2LL);
		_107817_token=_107258_tokens[0LL];
	}
	
	{
		
		if ((_107817_token._field_kind == jule::Str("std", 3))) {
			_case_begin_221aac0d8:;
			{
				_21cbb3105_build_std_use_decl(&(*_self_), _107238_decl,_107258_tokens);
			}
		}
		else {
			_case_begin_221aab758:;
			{
				_21cbb3501_build_ident_use_decl(&(*_self_), _107238_decl,_107258_tokens);
			}
		}
		_match_end_221aab703:;
	}
}



inline jule::Ptr<_21c6460a5_UseDecl> _21cbb3d81_build_use_decl(_21cba92b6_Parser* _self_,jule::Slice<_21c627dde_Token> _110737_tokens,jule::Bool _110754_cpp_linked) {
	jule::Ptr<_21c6460a5_UseDecl> _110817_decl = jule::new_ptr<_21c6460a5_UseDecl>(_21c6460a5_UseDecl(_110737_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_21c627dde_Token>(),_110754_cpp_linked,jule::Bool()));
	if ((_110737_tokens.len() < 2LL)) {
		_21cba9e10_push_err(&(*_self_), _110817_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_110737_tokens=_110737_tokens.slice(1LL);
	_21cbb38ec_parse_use_decl(&(*_self_), _110817_decl,_110737_tokens);
	return _110817_decl;
}



inline jule::Ptr<_21c4d7b4a_Expr> _21cbb4315_build_enum_item_expr(jule::Ptr<_21cba92b6_Parser> _self_,jule::Ptr<jule::I64> _112144_i,jule::Slice<_21c627dde_Token>& _112158_tokens) {
	jule::I64 _112217_brace_n = 0LL;
	jule::I64 _112313_expr_start = (*(_112144_i));
	for (; (*(_112144_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_112158_tokens.len())); ((*(_112144_i)))++) {
		{
			_21c627dde_Token _112517_t = _112158_tokens[(*(_112144_i))];
			if (_112517_t._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _112517_t._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_221ab3210:;
						{
							(_112217_brace_n)++;
							goto _iter_next_221ab1c25;
						}
					}
					else {
						_case_begin_221ab2aa0:;
						{
							(_112217_brace_n)--;
						}
					}
					_match_end_221ab2dd0:;
				}
			}
			if ((_112217_brace_n > 0LL)) {
				goto _iter_next_221ab1c25;
			}
			if ((_112517_t._field_id == static_cast<jule::U64>(8LLU)) || (((*(_112144_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_112158_tokens.len())))) {
				jule::Slice<_21c627dde_Token> _114425_expr_tokens = nullptr;
				if (_112517_t._field_id == static_cast<jule::U64>(8LLU)) {
					_114425_expr_tokens=_112158_tokens.slice(_112313_expr_start,(*(_112144_i)));
				} else {
					_114425_expr_tokens=_112158_tokens.slice(_112313_expr_start);
				}
				return _21cbaa6b3_build_expr(_self_, _114425_expr_tokens);
			}
		}
	_iter_next_221ab1c25:;
	}
	_iter_end_221ab1c25:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>> _21cbb46bc_build_enum_items(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _115641_tokens) {
	jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>> _115717_items = jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::I64> _115817_i = jule::new_ptr<jule::I64>(0LL);
	for (; (*(_115817_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len())); ((*(_115817_i)))++) {
		{
			_21c627dde_Token _116021_t = _115641_tokens[(*(_115817_i))];
			jule::Ptr<_21c6464b2_EnumItemDecl> _116121_item = jule::new_ptr<_21c6464b2_EnumItemDecl>(_21c6464b2_EnumItemDecl());
			_116121_item.get()._field_token=_116021_t;
			if (_116121_item.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
				_21cba9e10_push_err(_self_.ptr(), _116121_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_116121_item.get()._field_ident=_116121_item.get()._field_token._field_kind;
			if ((((*(_115817_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len()))) || (_115641_tokens[((*(_115817_i)) + 1LL)]._field_id == static_cast<jule::U64>(8LLU))) {
				if (((*(_115817_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len()))) {
					((*(_115817_i)))++;
				}
				_115717_items = jule::alloc_for_append(_115717_items,1);_115717_items.__push(_116121_item);
				goto _iter_next_221ab79c8;
			}
			((*(_115817_i)))++;
			_116021_t=_115641_tokens[(*(_115817_i))];
			((*(_115817_i)))++;
			if ((_116021_t._field_id != static_cast<jule::U64>(7LLU)) || (_116021_t._field_kind != jule::Str("=", 1))) {
				_21cba9e10_push_err(_self_.ptr(), _116021_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_221ab79c8;
			}
			if (((*(_115817_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len()))) || (_115641_tokens[(*(_115817_i))]._field_id == static_cast<jule::U64>(8LLU))) {
				_21cba9e10_push_err(_self_.ptr(), _116021_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_221ab79c8;
			}
			_116121_item.get()._field_expr=_21cbb4315_build_enum_item_expr(_self_, _115817_i,_115641_tokens);
			_115717_items = jule::alloc_for_append(_115717_items,1);_115717_items.__push(_116121_item);
		}
	_iter_next_221ab79c8:;
	}
	_iter_end_221ab79c8:;
	return _115717_items;
}



inline jule::Ptr<_21c646d0e_EnumDecl> _21cbb4a74_build_enum_decl(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _119340_tokens) {
	if ((_119340_tokens.len() < 2LL) || (_119340_tokens.len() < 3LL)) {
		_21cba9e10_push_err(_self_.ptr(), _119340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c646d0e_EnumDecl> _119817_e = jule::new_ptr<_21c646d0e_EnumDecl>(_21c646d0e_EnumDecl(_119340_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_21c5d253b_TypeDecl>(),jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>>()));
	if (_119817_e.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _119817_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_119817_e.get()._field_ident=_119817_e.get()._field_token._field_kind;
	jule::I64 _120617_i = 2LL;
	if (_119340_tokens[_120617_i]._field_id == static_cast<jule::U64>(11LLU)) {
		(_120617_i)++;
		if (_120617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_119340_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _119340_tokens[(_120617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _119817_e;
		}
		std::tie(_119817_e.get()._field_kind,std::ignore) = _21cbabd13_build_type(_self_, _119340_tokens,(&(_120617_i)),true);
		if (_120617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_119340_tokens.len()))) {
			_21cba965c_stop(_self_.ptr());
			_21cba9e10_push_err(_self_.ptr(), _119817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _119817_e;
		}
	} else {
		_119817_e.get()._field_kind=nullptr;
	}
	jule::Slice<_21c627dde_Token> _122317_item_tokens = _21cba7429_range(_120617_i,jule::Str("{", 1),jule::Str("}", 1),_119340_tokens);
	if ((_122317_item_tokens == nullptr)) {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _119817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _119817_e;
	} else if (_120617_i < static_cast<jule::I64>(static_cast<jule::I64>(_119340_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _119340_tokens[_120617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_119817_e.get()._field_items=_21cbb46bc_build_enum_items(_self_, _122317_item_tokens);
	return _119817_e;
}



inline jule::Ptr<_21c64756d_FieldDecl> _21cbb4e2b_build_field(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _123635_tokens) {
	jule::Ptr<_21c64756d_FieldDecl> _123717_f = jule::new_ptr<_21c64756d_FieldDecl>(_21c64756d_FieldDecl());
	_123717_f.get()._field_public=_123635_tokens[0LL]._field_id == static_cast<jule::U64>(21LLU);
	if (_123717_f.get()._field_public) {
		if ((_123635_tokens.len() == 1LL)) {
			_21cba9e10_push_err(_self_.ptr(), _123635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_123635_tokens=_123635_tokens.slice(1LL);
	}
	_123717_f.get()._field_mutable=_123635_tokens[0LL]._field_id == static_cast<jule::U64>(36LLU);
	if (_123717_f.get()._field_mutable) {
		if ((_123635_tokens.len() == 1LL)) {
			_21cba9e10_push_err(_self_.ptr(), _123635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_123635_tokens=_123635_tokens.slice(1LL);
	}
	_123717_f.get()._field_token=_123635_tokens[0LL];
	if (_123717_f.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _123717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_123717_f.get()._field_ident=_123717_f.get()._field_token._field_kind;
	if ((_123635_tokens.len() == 1LL)) {
		_21cba9e10_push_err(_self_.ptr(), _123635_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_123635_tokens[1LL]._field_id != static_cast<jule::U64>(11LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _123635_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_123635_tokens=_123635_tokens.slice(2LL);
	jule::I64 _127417_i = 0LL;
	std::tie(_123717_f.get()._field_kind,std::ignore) = _21cbabd13_build_type(_self_, _123635_tokens,(&(_127417_i)),true);
	if (_127417_i < static_cast<jule::I64>(static_cast<jule::I64>(_123635_tokens.len()))) {
		_21c627dde_Token _127717_token = _123635_tokens[_127417_i];
		if ((_127717_token._field_id != static_cast<jule::U64>(7LLU)) || (_127717_token._field_kind != jule::Str("=", 1))) {
			_21cba9e10_push_err(_self_.ptr(), _123635_tokens[_127417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_127417_i)++;
		if (_127417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_123635_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _127717_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		_123635_tokens=_123635_tokens.slice(_127417_i);
		_123717_f.get()._field_default=_21cbaa6b3_build_expr(_self_, _123635_tokens);
	}
	return _123717_f;
}



inline jule::Slice<jule::Ptr<_21c64756d_FieldDecl>> _21cbb5327_build_struct_decl_fields(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _129448_tokens) {
	jule::Slice<jule::Ptr<_21c64756d_FieldDecl>> _129517_fields = nullptr;
	jule::Slice<jule::Ptr<_21cb81876_Stmt>> _129617_stmts = _21cb81c83_split_stmts(_129448_tokens);
	{
		auto &expr = _129617_stmts;
		auto it = expr.begin();
		_iter_begin_221adc49d:;
		if (it != expr.end()) {
			jule::Ptr<_21cb81876_Stmt> _221adc5e1_stmt = *it;
			{
				_129448_tokens=_221adc5e1_stmt.get()._field_tokens;
				jule::Ptr<_21c64756d_FieldDecl> _129921_f = _21cbb4e2b_build_field(_self_, _129448_tokens);
				_129517_fields = jule::alloc_for_append(_129517_fields,1);_129517_fields.__push(_129921_f);
			}
			_iter_next_221adc49d:;
			++it;
			goto _iter_begin_221adc49d;
		}
		_iter_end_221adc49d:;
	}
	return _129517_fields;
}



inline jule::Ptr<_21c647c11_StructDecl> _21cbb56bd_build_struct_decl(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _130542_tokens) {
	if ((_130542_tokens.len() < 3LL)) {
		_21cba9e10_push_err(_self_.ptr(), _130542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _131117_i = 1LL;
	jule::Ptr<_21c647c11_StructDecl> _131217_s = jule::new_ptr<_21c647c11_StructDecl>(_21c647c11_StructDecl(_130542_tokens[_131117_i],jule::Str(),jule::Slice<jule::Ptr<_21c64756d_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Slice<jule::Ptr<_21c640423_GenericDecl>>()));
	if (_131217_s.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _131217_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_131117_i)++;
	if (_131117_i >= static_cast<jule::I64>(static_cast<jule::I64>(_130542_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _130542_tokens[_131117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _131217_s;
	}
	_131217_s.get()._field_ident=_131217_s.get()._field_token._field_kind;
	_21c627dde_Token _132613_error_token = _130542_tokens[_131117_i];
	jule::Slice<_21c627dde_Token> _132717_generics_tokens = _21cba7429_range(_131117_i,jule::Str("[", 1),jule::Str("]", 1),_130542_tokens);
	if ((_132717_generics_tokens != nullptr)) {
		_131217_s.get()._field_generics=_21cbadbb1_build_generics(_self_.ptr(), _132717_generics_tokens,_132613_error_token);
	}
	if (_131117_i >= static_cast<jule::I64>(static_cast<jule::I64>(_130542_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _130542_tokens[(_131117_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _131217_s;
	}
	jule::Slice<_21c627dde_Token> _133717_body_tokens = _21cba7429_range(_131117_i,jule::Str("{", 1),jule::Str("}", 1),_130542_tokens);
	if ((_133717_body_tokens == nullptr)) {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _131217_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _131217_s;
	}
	if (_131117_i < static_cast<jule::I64>(static_cast<jule::I64>(_130542_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _130542_tokens[_131117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_131217_s.get()._field_fields=_21cbb5327_build_struct_decl_fields(_self_, _133717_body_tokens);
	return _131217_s;
}



inline void _21cbb59dc_check_method_receiver(_21cba92b6_Parser* _self_,jule::Ptr<_21c641633_FnDecl>& _135141_f) {
	if (_135141_f.get()._field_statically) {
		if ((_135141_f.get()._field_params.len() > 0LL) && _21c50576c_is_self(_135141_f.get()._field_params[0LL].ptr())) {
			_21cba9e10_push_err(&(*_self_), _135141_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_135141_f.get()._field_params.len() == 0LL)) {
		_21cba9e10_push_err(&(*_self_), _135141_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21c641413_ParamDecl> _136413_param = _135141_f.get()._field_params[0LL];
	if ((!(_21c50576c_is_self(_136413_param.ptr())))) {
		_21cba9e10_push_err(&(*_self_), _135141_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_21c641633_FnDecl>> _21cbb5d94_build_trait_methods(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _137143_tokens) {
	jule::Slice<jule::Ptr<_21c641633_FnDecl>> _137217_methods = nullptr;
	jule::Slice<jule::Ptr<_21cb81876_Stmt>> _137317_stmts = _21cb81c83_split_stmts(_137143_tokens);
	{
		auto &expr = _137317_stmts;
		auto it = expr.begin();
		_iter_begin_221b05461:;
		if (it != expr.end()) {
			jule::Ptr<_21cb81876_Stmt> _221b055a4_stmt = *it;
			{
				_137143_tokens=_221b055a4_stmt.get()._field_tokens;
				if ((_137143_tokens.len() == 0LL)) {
					goto _iter_next_221b05461;
				}
				jule::Bool _138021_is_pub = false;
				if (_137143_tokens[0LL]._field_id == static_cast<jule::U64>(21LLU)) {
					_138021_is_pub=true;
					if ((_137143_tokens.len() == 1LL)) {
						_21cba9e10_push_err(_self_.ptr(), _137143_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_221b05461;
					}
					_137143_tokens=_137143_tokens.slice(1LL);
				}
				jule::Ptr<_21c641633_FnDecl> _139021_f = _21cbb2456_build_fn(_self_, _137143_tokens,true,true);
				if ((_139021_f != nullptr)) {
					if (_21c4874e0_is_anon(_139021_f.ptr())) {
						_21cba9e10_push_err(_self_.ptr(), _139021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					_21cbb59dc_check_method_receiver(_self_.ptr(), _139021_f);
					if ((_139021_f.get()._field_generics.len() > 0LL)) {
						_21cba9e10_push_err(_self_.ptr(), _139021_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_139021_f.get()._field_public=_138021_is_pub;
					_137217_methods = jule::alloc_for_append(_137217_methods,1);_137217_methods.__push(_139021_f);
				}
			}
			_iter_next_221b05461:;
			++it;
			goto _iter_begin_221b05461;
		}
		_iter_end_221b05461:;
	}
	return _137217_methods;
}



inline jule::Ptr<_21c6481b7_TraitDecl> _21cbb624b_build_trait_decl(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _140641_tokens) {
	if ((_140641_tokens.len() < 3LL)) {
		_21cba9e10_push_err(_self_.ptr(), _140641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c6481b7_TraitDecl> _141117_t = jule::new_ptr<_21c6481b7_TraitDecl>(_21c6481b7_TraitDecl(_140641_tokens[1LL],jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_21c641633_FnDecl>>()));
	if (_141117_t.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _141117_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_141117_t.get()._field_ident=_141117_t.get()._field_token._field_kind;
	jule::I64 _141917_i = 2LL;
	jule::Slice<_21c627dde_Token> _142017_body_tokens = _21cba7429_range(_141917_i,jule::Str("{", 1),jule::Str("}", 1),_140641_tokens);
	if ((_142017_body_tokens == nullptr)) {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _141117_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_141917_i < static_cast<jule::I64>(static_cast<jule::I64>(_140641_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _140641_tokens[_141917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_141117_t.get()._field_methods=_21cbb5d94_build_trait_methods(_self_, _142017_body_tokens);
	return _141117_t;
}



inline jule::Ptr<_21c641633_FnDecl> _21cbb6603_build_cpp_link_fn(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _143441_tokens) {
	_143441_tokens=_143441_tokens.slice(1LL);
	jule::Ptr<_21c641633_FnDecl> _143617_f = _21cbb2456_build_fn(_self_, _143441_tokens,false,true);
	if ((_143617_f != nullptr)) {
		if (_21c4874e0_is_anon(_143617_f.ptr())) {
			_21cba9e10_push_err(_self_.ptr(), _143617_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_143617_f.get()._field_cpp_linked=true;
	}
	return _143617_f;
}



inline jule::Ptr<_21c64205c_VarDecl> _21cbb69aa_build_cpp_link_var(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _144642_tokens) {
	_144642_tokens=_144642_tokens.slice(1LL);
	jule::Ptr<_21c64205c_VarDecl> _144817_v = _21cbad375_build_var(_self_, _144642_tokens);
	if ((_144817_v != nullptr)) {
		_144817_v.get()._field_cpp_linked=true;
		if ((_144817_v.get()._field_expr != nullptr)) {
			_21cba9e10_push_err(_self_.ptr(), _144817_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _144817_v;
}



inline jule::Ptr<_21c647c11_StructDecl> _21cbb6d62_build_cpp_link_struct(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _145845_tokens) {
	_145845_tokens=_145845_tokens.slice(1LL);
	jule::Ptr<_21c647c11_StructDecl> _146017_s = _21cbb56bd_build_struct_decl(_self_, _145845_tokens);
	if ((_146017_s != nullptr)) {
		_146017_s.get()._field_cpp_linked=true;
	}
	return _146017_s;
}



inline jule::Ptr<_21c644ea5_TypeAliasDecl> _21cbb725d_build_cpp_link_type_alias(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _146749_tokens) {
	_146749_tokens=_146749_tokens.slice(1LL);
	jule::Ptr<_21c644ea5_TypeAliasDecl> _146917_t = _21cbac1ba_build_type_alias_decl(_self_, _146749_tokens);
	if ((_146917_t != nullptr)) {
		_146917_t.get()._field_cpp_linked=true;
	}
	return _146917_t;
}



inline jule::Ptr<_21c6460a5_UseDecl> _21cbb7604_build_cpp_link_use(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _147642_tokens) {
	if ((_147642_tokens.len() == 1LL)) {
		_21cba9e10_push_err(_self_.ptr(), _147642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_147642_tokens=_147642_tokens.slice(1LL);
	
	return _21cbb3d81_build_use_decl(_self_.ptr(), _147642_tokens,true);
}



inline jule::Any _21cbb79ab_build_cpp_link(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _148739_tokens) {
	_21c627dde_Token _148817_token = _148739_tokens[0LL];
	if ((_148739_tokens.len() == 1LL)) {
		_21cba9e10_push_err(_self_.ptr(), _148817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_148817_token=_148739_tokens[1LL];
	{
		auto &_match_expr{ _148817_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_221b21b53:;
			{
				return jule::Any(_21cbb7604_build_cpp_link_use(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_221b21bb9:;
			{
				return jule::Any(_21cbb6603_build_cpp_link_fn(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_221b21c30:;
			{
				return jule::Any(_21cbb69aa_build_cpp_link_var(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_221b21c96:;
			{
				return jule::Any(_21cbb6d62_build_cpp_link_struct(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_221b22659:;
			{
				return jule::Any(_21cbb725d_build_cpp_link_type_alias(_self_, _148739_tokens));
			}
		}
		else {
			_case_begin_221b21adc:;
			{
				_21cba9e10_push_err(_self_.ptr(), _148817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_221b21a87:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_21c641633_FnDecl> _21cbb7d63_get_method(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _151835_tokens) {
	jule::I64 _151917_i = 0LL;
	_21c627dde_Token _152017_token = _151835_tokens[_151917_i];
	if (_152017_token._field_id == static_cast<jule::U64>(38LLU)) {
		if ((_151917_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_151835_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _152017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_151917_i)++;
		_152017_token=_151835_tokens[_151917_i];
	}
	if (_152017_token._field_id == static_cast<jule::U64>(35LLU)) {
		if ((_151917_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_151835_tokens.len()))) {
			_21cba9e10_push_err(_self_.ptr(), _152017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_151917_i)++;
		_152017_token=_151835_tokens[_151917_i];
	}
	if (_152017_token._field_id != static_cast<jule::U64>(33LLU)) {
		_21cba9e10_push_err(_self_.ptr(), _152017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c641633_FnDecl> _154417_f = _21cbb2456_build_fn(_self_, _151835_tokens,true,false);
	if ((_154417_f != nullptr) && _21c4874e0_is_anon(_154417_f.ptr())) {
		_21cba9e10_push_err(_self_.ptr(), _154417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _154417_f;
}



inline void _21cbb825e_parse_impl_body(jule::Ptr<_21cba92b6_Parser> _self_,jule::Ptr<_21c64866d_Impl>& _155140_ipl,jule::Slice<_21c627dde_Token>& _155157_tokens) {
	jule::Slice<jule::Ptr<_21cb81876_Stmt>> _155217_stmts = _21cb81c83_split_stmts(_155157_tokens);
	{
		auto &expr = _155217_stmts;
		auto it = expr.begin();
		_iter_begin_221b2d258:;
		if (it != expr.end()) {
			jule::Ptr<_21cb81876_Stmt> _221b2d38a_stmt = *it;
			{
				_155157_tokens=_221b2d38a_stmt.get()._field_tokens;
				_21c627dde_Token _155521_token = _155157_tokens[0LL];
				jule::Bool _155621_is_pub = false;
				{
					auto &_match_expr{ _155521_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_221b2e6dd:;
						{
							_21cbaad89_push_directive(_self_.ptr(), _21cbaaa6a_build_directive(_self_.ptr(), _155157_tokens));
							goto _iter_next_221b2d258;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_221b2e754:;
						{
							_155621_is_pub=true;
							if ((_155157_tokens.len() == 1LL)) {
								_21cba9e10_push_err(_self_.ptr(), _155157_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_221b2d258;
							}
							_155157_tokens=_155157_tokens.slice(1LL);
							if ((_155157_tokens.len() > 0LL)) {
								_155521_token=_155157_tokens[0LL];
							}
						}
					}
					_match_end_221b2e666:;
				}
				{
					auto &_match_expr{ _155521_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_221b307ee:;
						{
							jule::Ptr<_21c64205c_VarDecl> _157525_v = _21cbad375_build_var(_self_, _155157_tokens);
							if ((_157525_v != nullptr)) {
								_157525_v.get()._field_public=_155621_is_pub;
								_155140_ipl.get()._field_statics = jule::alloc_for_append(_155140_ipl.get()._field_statics,1);_155140_ipl.get()._field_statics.__push(_157525_v);
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_221b30865:;
						{
							jule::Ptr<_21c641633_FnDecl> _158325_f = _21cbb7d63_get_method(_self_, _155157_tokens);
							if ((_158325_f != nullptr)) {
								_21cbb59dc_check_method_receiver(_self_.ptr(), _158325_f);
								_21cbb91d8_apply_fn_meta(_self_.ptr(), _158325_f,_155621_is_pub);
								_155140_ipl.get()._field_methods = jule::alloc_for_append(_155140_ipl.get()._field_methods,1);_155140_ipl.get()._field_methods.__push(_158325_f);
							}
						}
					}
					else {
						_case_begin_221b2ec2c:;
						{
							_21cba9e10_push_err(_self_.ptr(), _155521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_221b2d258;
						}
					}
					_match_end_221b2ebc7:;
				}
			}
			_iter_next_221b2d258:;
			++it;
			goto _iter_begin_221b2d258;
		}
		_iter_end_221b2d258:;
	}
}



inline jule::Ptr<_21c64866d_Impl> _21cbb8616_build_impl(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _159634_tokens) {
	_21c627dde_Token _159717_token = _159634_tokens[0LL];
	if ((_159634_tokens.len() < 2LL)) {
		_21cba9e10_push_err(_self_.ptr(), _159717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _160317_i = 1LL;
	jule::Ptr<_21c5d253b_TypeDecl> _160518_base;
	jule::Bool _160528_ok;
	std::tie(_160518_base,_160528_ok) = _21cbabd13_build_type(_self_, _159634_tokens,(&(_160317_i)),true);
	if ((!(_160528_ok))) {
		return nullptr;
	}
	if (_160317_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _159717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21c64866d_Impl> _161417_ipl = jule::new_ptr<_21c64866d_Impl>(_21c64866d_Impl(_160518_base,jule::Ptr<_21c5d253b_TypeDecl>(),jule::Slice<jule::Ptr<_21c641633_FnDecl>>(),jule::Slice<jule::Ptr<_21c64205c_VarDecl>>()));
	_159717_token=_159634_tokens[_160317_i];
	if (_159717_token._field_id != static_cast<jule::U64>(12LLU)) {
		if ((_159717_token._field_id == static_cast<jule::U64>(3LLU)) && (_159717_token._field_kind == jule::Str("{", 1))) {
			std::tie(_161417_ipl.get()._field_base,_161417_ipl.get()._field_dest) = std::make_tuple(_161417_ipl.get()._field_dest,_161417_ipl.get()._field_base);
			goto _julec_label_body;
		}
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	(_160317_i)++;
	if (_160317_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_161417_ipl.get()._field_dest,_160528_ok) = _21cbabd13_build_type(_self_, _159634_tokens,(&(_160317_i)),true);
	if ((!(_160528_ok))) {
		return nullptr;
	}
	if (_160317_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_body:;
	jule::Slice<_21c627dde_Token> _165417_body_tokens = _21cba7429_range(_160317_i,jule::Str("{", 1),jule::Str("}", 1),_159634_tokens);
	if ((_165417_body_tokens == nullptr)) {
		_21cba965c_stop(_self_.ptr());
		_21cba9e10_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_160317_i < static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_21cba9e10_push_err(_self_.ptr(), _159634_tokens[_160317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_21cbb825e_parse_impl_body(_self_, _161417_ipl,_165417_body_tokens);
	return _161417_ipl;
}



inline jule::Any _21cbb89bd_build_node_data(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _166840_tokens) {
	_21c627dde_Token _166917_token = _166840_tokens[0LL];
	{
		auto &_match_expr{ _166917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_221b480a8:;
			{
				
				return jule::Any(_21cbb3d81_build_use_decl(_self_.ptr(), _166840_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_221b473d7:;
			{
				jule::Ptr<_21c641633_FnDecl> _167621_f = _21cbb2456_build_fn(_self_, _166840_tokens,false,false);
				if ((_167621_f != nullptr)) {
					_167621_f.get()._field_global=true;
					if (_21c4874e0_is_anon(_167621_f.ptr())) {
						_21cba9e10_push_err(_self_.ptr(), _167621_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_167621_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_221b4744d:;
			{
				return jule::Any(_21cbad375_build_var(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_221b47d33:;
			{
				return jule::Any(_21cbac1ba_build_type_alias_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_221b47d99:;
			{
				return jule::Any(_21cbb4a74_build_enum_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_221b47e10:;
			{
				return jule::Any(_21cbb56bd_build_struct_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_221b47e76:;
			{
				return jule::Any(_21cbb624b_build_trait_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_221b4820c:;
			{
				return jule::Any(_21cbb8616_build_impl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_221b48273:;
			{
				return _21cbb79ab_build_cpp_link(_self_, _166840_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_221b482d9:;
			{
				return jule::Any(_21cbaaa6a_build_directive(_self_.ptr(), _166840_tokens));
			}
		}
		else {
			_case_begin_221b46b23:;
			{
				_21cba9e10_push_err(_self_.ptr(), _166917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_221b472b6:;
	}
}



inline void _21cbb8cdc_check_directive(_21cba92b6_Parser* _self_,_21c523c63_Node& _170935_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _170935_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c525490_Directive>>()) {
			_case_begin_221b51a0c:;
			{
				goto _match_end_221b50d3b;
			}
		}
		else {
			_case_begin_221b513e1:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_21cba9e10_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
				}
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_221b50d3b:;
	}
}



inline void _21cbb91d8_apply_fn_meta(_21cba92b6_Parser* _self_,jule::Ptr<_21c641633_FnDecl>& _172637_f,jule::Bool _172649_is_pub) {
	_172637_f.get()._field_public=_172649_is_pub;
	_172637_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _21cbb95d4_apply_meta(_21cba92b6_Parser* _self_,_21c523c63_Node& _173234_node,jule::Bool _173246_is_pub) {
	{
		auto &_match_expr{ _173234_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c64205c_VarDecl>>()) {
			_case_begin_221b54b97:;
			{
				jule::Ptr<_21c64205c_VarDecl> _173521_v = _173234_node._field_data.operator jule::Ptr<_21c64205c_VarDecl>();
				if ((_173521_v == nullptr)) {
					return;
				}
				_173521_v.get()._field_public=_173246_is_pub;
				_173521_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c641633_FnDecl>>()) {
			_case_begin_221b54c0d:;
			{
				jule::Ptr<_21c641633_FnDecl> _174321_f = _173234_node._field_data.operator jule::Ptr<_21c641633_FnDecl>();
				if ((_174321_f == nullptr)) {
					return;
				}
				_21cbb91d8_apply_fn_meta(&(*_self_), _174321_f,_173246_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c644ea5_TypeAliasDecl>>()) {
			_case_begin_221b54c74:;
			{
				jule::Ptr<_21c644ea5_TypeAliasDecl> _174921_tad = _173234_node._field_data.operator jule::Ptr<_21c644ea5_TypeAliasDecl>();
				if ((_174921_tad == nullptr)) {
					return;
				}
				_174921_tad.get()._field_public=_173246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c646d0e_EnumDecl>>()) {
			_case_begin_221b54cda:;
			{
				jule::Ptr<_21c646d0e_EnumDecl> _175521_ed = _173234_node._field_data.operator jule::Ptr<_21c646d0e_EnumDecl>();
				if ((_175521_ed == nullptr)) {
					return;
				}
				_175521_ed.get()._field_public=_173246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c647c11_StructDecl>>()) {
			_case_begin_221b55060:;
			{
				jule::Ptr<_21c647c11_StructDecl> _176121_sd = _173234_node._field_data.operator jule::Ptr<_21c647c11_StructDecl>();
				if ((_176121_sd == nullptr)) {
					return;
				}
				_176121_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_176121_sd.get()._field_public=_173246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c6481b7_TraitDecl>>()) {
			_case_begin_221b550c6:;
			{
				jule::Ptr<_21c6481b7_TraitDecl> _176921_td = _173234_node._field_data.operator jule::Ptr<_21c6481b7_TraitDecl>();
				if ((_176921_td == nullptr)) {
					return;
				}
				_176921_td.get()._field_public=_173246_is_pub;
			}
		}
		else {
			_case_begin_221b54b31:;
			{
				if (_173246_is_pub) {
					_21cba9e10_push_err(&(*_self_), _173234_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_221b54acb:;
	}
}



inline void _21cbb9903_check_use_decl(_21cba92b6_Parser* _self_,_21c523c63_Node& _178134_node) {
	{
		auto &_match_expr{ _178134_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c6460a5_UseDecl>>()) {
			_case_begin_221b5cd26:;
			{
				goto _match_end_221b5d08a;
			}
		}
		else {
			_case_begin_221b5d0e0:;
			{
				return;
			}
		}
		_match_end_221b5d08a:;
	}
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_21cba9e10_push_err(&(*_self_), _178134_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_21cbaa30b_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _21cbb9cee_build_general_scope_node_data(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token> _179653_st) {
	jule::Bool _179668_is_pub = jule::Bool();
	jule::Any _179682_data = jule::Any();
	if (_179653_st[0LL]._field_id == static_cast<jule::U64>(21LLU)) {
		_179668_is_pub=true;
		_179653_st=_179653_st.slice(1LL);
		if ((_179653_st.len() == 0LL)) {
			_21cba9e10_push_err(_self_.ptr(), _179653_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_179668_is_pub,_179682_data);
		}
	}
	_179682_data=_21cbb89bd_build_node_data(_self_, _179653_st);
	return std::make_tuple(_179668_is_pub,_179682_data);
}



inline _21c523c63_Node _21cbba195_parse_node(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _181135_st) {
	_21c523c63_Node _181217_node = _21c523c63_Node(_181135_st[0LL],jule::Any());
	jule::Bool _181614_is_pub;
	jule::Any _181626_data;
	std::tie(_181614_is_pub,_181626_data) = _21cbb9cee_build_general_scope_node_data(_self_, _181135_st);
	if (_181626_data == jule::Any(jule::Any(nullptr))) {
		return _181217_node;
	}
	_181217_node._field_data=_181626_data;
	_21cbb95d4_apply_meta(_self_.ptr(), _181217_node,_181614_is_pub);
	_21cbb8cdc_check_directive(_self_.ptr(), _181217_node);
	_21cbb9903_check_use_decl(_self_.ptr(), _181217_node);
	return _181217_node;
}



inline void _21cbba4b4_append_node(jule::Ptr<_21cba92b6_Parser> _self_,jule::Slice<_21c627dde_Token>& _182936_st) {
	if ((_182936_st.len() == 0LL)) {
		return;
	}
	_21c523c63_Node _183417_node = _21cbba195_parse_node(_self_, _182936_st);
	if ((_183417_node._field_data == jule::Any(jule::Any(nullptr))) || _21cba9937_stopped(_self_.ptr())) {
		return;
	}
	{
		
		if (_21c5a4596_is_directive(&_183417_node)) {
			_case_begin_221b68c99:;
			{
				_21cbaad89_push_directive(_self_.ptr(), _183417_node._field_data.operator jule::Ptr<_21c525490_Directive>());
			}
		}
		else if (_21c5c76c9_is_use_decl(&_183417_node)) {
			_case_begin_221b68958:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_183417_node._field_data.operator jule::Ptr<_21c6460a5_UseDecl>());
			}
		}
		else if (_21c550d7d_is_decl(&_183417_node) || _21c5bb6e0_is_impl(&_183417_node)) {
			_case_begin_221b689be:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_183417_node);
			}
		}
		else {
			_case_begin_221b688e2:;
			{
				_21cba9e10_push_err(_self_.ptr(), _183417_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_221b680c8:;
	}
}



inline void _21cbbaa69_remove_range(_21cba92b6_Parser* _self_,jule::I64 _185231_i,jule::Str _185239_kind,jule::Slice<_21c627dde_Token>& _185251_tokens,jule::Slice<jule::I64>& _185273_ranges) {
	jule::Str _185313_close = _21cba8095_get_close_kind_of_brace(_185239_kind);
	for (; (_185231_i >= 0LL); (_185231_i)--) {
		{
			_21c627dde_Token _185517_tok = _185251_tokens[_185273_ranges[_185231_i]];
			if (_185517_tok._field_kind != _185313_close) {
				goto _iter_next_221b6d5c8;
			}
			_185273_ranges=jule::append(_185273_ranges.slice(0LL,_185231_i),_185273_ranges.slice((_185231_i + 1LL)));
			goto _iter_end_221b6d5c8;
		}
	_iter_next_221b6d5c8:;
	}
	_iter_end_221b6d5c8:;
}



inline void _21cbbb086_push_wrong_order_close_err(_21cba92b6_Parser* _self_,_21c627dde_Token& _186446_t,jule::Slice<_21c627dde_Token>& _186457_tokens,jule::Slice<jule::I64>& _186475_ranges) {
	{
		auto &_match_expr{ _186457_tokens[_186475_ranges[_186475_ranges.len() - 1LL]]._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_221b714dd:;
			{
				_21cba9e10_push_err(&(*_self_), _186446_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_221b71554:;
			{
				_21cba9e10_push_err(&(*_self_), _186446_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_221b715ba:;
			{
				_21cba9e10_push_err(&(*_self_), _186446_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_221b71455:;
	}
}



inline void _21cbbb62a_push_range_close(_21cba92b6_Parser* _self_,_21c627dde_Token _187535_t,jule::Str _187545_left,jule::Slice<_21c627dde_Token>& _187557_tokens,jule::Slice<jule::I64>& _187579_ranges) {
	jule::I64 _187613_n = _187579_ranges.len();
	if ((_187613_n == 0LL)) {
		{
			auto &_match_expr{ _187535_t._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_221b7506e:;
				{
					_21cba9e10_push_err(&(*_self_), _187535_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_221b750d5:;
				{
					_21cba9e10_push_err(&(*_self_), _187535_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_221b7514b:;
				{
					_21cba9e10_push_err(&(*_self_), _187535_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_221b74ea3:;
		}
		return;
	} else if (_187557_tokens[_187579_ranges[(_187613_n - 1LL)]]._field_kind != _187545_left) {
		_21cbbb086_push_wrong_order_close_err(&(*_self_), _187535_t,_187557_tokens,_187579_ranges);
	}
	_21cbbaa69_remove_range(&(*_self_), static_cast<jule::I64>((_187613_n - 1LL)),_187535_t._field_kind,_187557_tokens,_187579_ranges);
}



inline void _21cbbb949_check_ranges(_21cba92b6_Parser* _self_,jule::Slice<_21c627dde_Token>& _189332_tokens) {
	jule::Slice<jule::I64> _189417_ranges = nullptr;
	{
		auto &expr = _189332_tokens;
		auto it = expr.begin();
		_iter_begin_221b7944c:;
		if (it != expr.end()) {
			jule::I64 _221b7957e_i = it - expr.begin();
			_21c627dde_Token &_221b797d2_token = *it;
			{
				if (_221b797d2_token._field_id != static_cast<jule::U64>(3LLU)) {
					goto _iter_next_221b7944c;
				}
				{
					auto &_match_expr{ _221b797d2_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_221b7a629:;
						{
							_189417_ranges = jule::alloc_for_append(_189417_ranges,1);_189417_ranges.__push(_221b7957e_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_221b7a690:;
						{
							_21cbbb62a_push_range_close(&(*_self_), _221b797d2_token,jule::Str("(", 1),_189332_tokens,_189417_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_221b7a717:;
						{
							_21cbbb62a_push_range_close(&(*_self_), _221b797d2_token,jule::Str("{", 1),_189332_tokens,_189417_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_221b7a77d:;
						{
							_21cbbb62a_push_range_close(&(*_self_), _221b797d2_token,jule::Str("[", 1),_189332_tokens,_189417_ranges);
						}
					}
					_match_end_221b7a5c4:;
				}
			}
			_iter_next_221b7944c:;
			++it;
			_221b7957e_i++;
			goto _iter_begin_221b7944c;
		}
		_iter_end_221b7944c:;
	}
	{
		auto &expr = _189417_ranges;
		auto it = expr.begin();
		_iter_begin_221b79936:;
		if (it != expr.end()) {
			jule::I64 _221b7c928_i = *it;
			{
				_21c627dde_Token _191517_token = _189332_tokens[_221b7c928_i];
				{
					auto &_match_expr{ _191517_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_221b7d929:;
						{
							_21cba9e10_push_err(&(*_self_), _191517_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_221b7d990:;
						{
							_21cba9e10_push_err(&(*_self_), _191517_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_221b7da06:;
						{
							_21cba9e10_push_err(&(*_self_), _191517_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_221b7d891:;
				}
			}
			_iter_next_221b79936:;
			++it;
			goto _iter_begin_221b79936;
		}
		_iter_end_221b79936:;
	}
}



inline void _21cbbbc68_parse(jule::Ptr<_21cba92b6_Parser> _self_,jule::Ptr<_21c62e038_File>& _192730_f) {
	_self_.get()._field_ast=jule::new_ptr<_21c4cc2b0_Ast>(_21c4cc2b0_Ast(_192730_f,jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Slice<jule::Ptr<_21c6460a5_UseDecl>>(),jule::Slice<_21c523c63_Node>()));
	_21cbbb949_check_ranges(_self_.ptr(), _192730_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_21cb81876_Stmt>> _193717_stmts = _21cb81c83_split_stmts(_192730_f.get()._field_tokens);
	jule::I64 _194017_i = 0LL;
	_julec_label_iter:;
	for (; _194017_i < static_cast<jule::I64>(static_cast<jule::I64>(_193717_stmts.len())); (_194017_i)++) {
		{
			jule::Ptr<_21cb81876_Stmt> _194321_stmt = _193717_stmts[_194017_i];
			if ((_194321_stmt.get()._field_tokens.len() == 0LL)) {
				return;
			}
			jule::Any _194825_data;
			std::tie(std::ignore,_194825_data) = _21cbb9cee_build_general_scope_node_data(_self_, _194321_stmt.get()._field_tokens);
			if (_194825_data == jule::Any(jule::Any(nullptr))) {
				goto _iter_end_221b8293e;
			}
			if (_21cba9937_stopped(_self_.ptr())) {
				return;
			}
			{
				auto &_match_expr{ _194825_data };
				
				if (_match_expr.type_is<jule::Ptr<_21c525490_Directive>>()) {
					_case_begin_221b84ee6:;
					{
						jule::Ptr<_21c525490_Directive> _195925_d = _194825_data.operator jule::Ptr<_21c525490_Directive>();
						if ((_195925_d != nullptr) && _21c34adba_is_top_directive(_195925_d.get()._field_tag._field_kind)) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_195925_d);
						} else {
							goto _iter_end_221b8293e;
						}
					}
				}
				else {
					_case_begin_221b84d70:;
					{
						goto _iter_end_221b8293e;
					}
				}
				_match_end_221b84c93:;
			}
		}
	_iter_next_221b8293e:;
	}
	_iter_end_221b8293e:;
	_self_.get()._field_errors=nullptr;
	for (; _194017_i < static_cast<jule::I64>(static_cast<jule::I64>(_193717_stmts.len())); (_194017_i)++) {
		{
			jule::Ptr<_21cb81876_Stmt> _197421_stmt = _193717_stmts[_194017_i];
			_21cbba4b4_append_node(_self_, _197421_stmt.get()._field_tokens);
			if (_21cba9937_stopped(_self_.ptr())) {
				goto _iter_end_221b82ad7;
			}
		}
	_iter_next_221b82ad7:;
	}
	_iter_end_221b82ad7:;
}







std::ostream &operator<<(std::ostream &_Stream, _21cba92b6_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _21cbbe353_push_err(_21cbbdb9e_TypeBuilder* _self_,_21c627dde_Token _7827_token,jule::Str _7841_fmt) {
	if ((*_self_)._field_err) {
		_21cba9e10_push_err((*_self_)._field_p.ptr(), _7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _21cbbe74e_push_suggestion(_21cbbdb9e_TypeBuilder* _self_,jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*_self_)._field_err) {
		_21cbaa30b_push_suggestion((*_self_)._field_p.ptr(), _8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbea29_build_prim(_21cbbdb9e_TypeBuilder* _self_) {
	jule::Ptr<_21c5d253b_TypeDecl> _9217_t = _21cbbd1cb_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);
	((*((*_self_)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbed04_build_namespace(_21cbbdb9e_TypeBuilder* _self_) {
	jule::Ptr<_21c5d253b_TypeDecl> _9817_t = jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl((*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Any()));
	jule::Ptr<_21c5ec545_NamespaceTypeDecl> _10217_nst = jule::new_ptr<_21c5ec545_NamespaceTypeDecl>(_21c5ec545_NamespaceTypeDecl());
	jule::I64 _10317_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			_21c627dde_Token _10521_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (((_10317_n & 1LL) == 0LL)) {
				if (_10521_token._field_id != static_cast<jule::U64>(2LLU)) {
					_21cbbe353_push_err(&(*_self_), _10521_token,jule::Str("invalid syntax", 14));
					_21cbbe74e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10217_nst.get()._field_idents = jule::alloc_for_append(_10217_nst.get()._field_idents,1);_10217_nst.get()._field_idents.__push(_10521_token);
			} else if (_10521_token._field_id != static_cast<jule::U64>(23LLU)) {
				goto _iter_end_221b8d3d9;
			}
			(_10317_n)++;
		}
	_iter_next_221b8d3d9:;
	}
	_iter_end_221b8d3d9:;
	_10217_nst.get()._field_idents=_10217_nst.get()._field_idents.slice(0LL,(_10217_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10217_nst.get()._field_kind=_21cbc0684_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_21c529e9a_IdentTypeDecl>();
	_9817_t.get()._field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _21cbc00ce_build_generics(_21cbbdb9e_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		return nullptr;
	}
	_21c627dde_Token _13113_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_13113_token._field_id != static_cast<jule::U64>(3LLU)) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_21c627dde_Token>> _13617_parts = _21cbc03a9_ident_generics(&(*_self_));
	if ((_13617_parts.len() == 0LL)) {
		_21cbbe353_push_err(&(*_self_), _13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_221b987ac:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _221b98bec_part = *it;
			{
				jule::I64 _14421_j = 0LL;
				jule::Ptr<_21c5d253b_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = _21cbabd13_build_type((*_self_)._field_p, _221b98bec_part,(&(_14421_j)),true);
				if (_14421_j < static_cast<jule::I64>(static_cast<jule::I64>(_221b98bec_part.len()))) {
					_21cbbe353_push_err(&(*_self_), _221b98bec_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);
			}
			_iter_next_221b987ac:;
			++it;
			goto _iter_begin_221b987ac;
		}
		_iter_end_221b987ac:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_21c627dde_Token>> _21cbc03a9_ident_generics(_21cbbdb9e_TypeBuilder* _self_) {
	jule::I64 _15513_first = (*((*_self_)._field_i));
	jule::I64 _15617_range_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			_21c627dde_Token _15817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (_15817_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_221b9c8d2:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_221b9cc56:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_221b9cc01:;
				}
			}
			if ((_15617_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_221b9a0e9;
			}
		}
	_iter_next_221b9a0e9:;
	}
	_iter_end_221b9a0e9:;
	jule::Slice<_21c627dde_Token> _17017_tokens = (*_self_)._field_tokens.slice((_15513_first + 1LL),((*((*_self_)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_21c627dde_Token>> _17118_parts;
	jule::Slice<_21c348b32_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _21cba7c43_parts(_17017_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc0684_build_ident(_21cbbdb9e_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)]._field_id == static_cast<jule::U64>(23LLU))) {
		return _21cbbed04_build_namespace(&(*_self_));
	}
	_21c627dde_Token _18217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_21c529e9a_IdentTypeDecl> _18317_it = jule::new_ptr<_21c529e9a_IdentTypeDecl>(_21c529e9a_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>()));
	((*((*_self_)._field_i)))++;
	_18317_it.get()._field_generics=_21cbc00ce_build_generics(&(*_self_));
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_18217_token,jule::Any(jule::Any(_18317_it))));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc095e_build_cpp_link(_21cbbdb9e_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)]._field_id != static_cast<jule::U64>(20LLU))) {
		_21cbbe353_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_21c5d253b_TypeDecl> _20217_t = _21cbc0684_build_ident(&(*_self_));
	_20217_t.get()._field_kind.operator jule::Ptr<_21c529e9a_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc0c39_build_fn(_21cbbdb9e_TypeBuilder* _self_) {
	_21c627dde_Token _20817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_21c641633_FnDecl> _20917_f = _21cbb1de5_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);
	if ((_20917_f == nullptr)) {
		return nullptr;
	}
	if ((!(_21c4874e0_is_anon(_20917_f.ptr())))) {
		_21cbbe353_push_err(&(*_self_), _20917_f.get()._field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_20817_token,jule::Any(jule::Any(_20917_f))));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc1014_build_ptr(_21cbbdb9e_TypeBuilder* _self_) {
	_21c627dde_Token _22317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_21cbbe353_push_err(&(*_self_), _22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	if ((*_self_)._field_tokens[(*((*_self_)._field_i))]._field_id == static_cast<jule::U64>(35LLU)) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_22317_token,jule::Any(jule::Any(jule::new_ptr<_21c52b199_PtrTypeDecl>(_21c52b199_PtrTypeDecl(nullptr))))));
	}
	jule::Ptr<_21c5d253b_TypeDecl> _24017_elem = _21cbc26a8_step(&(*_self_));
	if ((_24017_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_22317_token,jule::Any(jule::Any(jule::new_ptr<_21c52b199_PtrTypeDecl>(_21c52b199_PtrTypeDecl(_24017_elem))))));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc12de_build_sptr(_21cbbdb9e_TypeBuilder* _self_) {
	_21c627dde_Token _25417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_21cbbe353_push_err(&(*_self_), _25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	jule::Ptr<_21c5d253b_TypeDecl> _26117_elem = _21cbc26a8_step(&(*_self_));
	if ((_26117_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_25417_token,jule::Any(jule::Any(jule::new_ptr<_21c5c6e48_SptrTypeDecl>(_21c5c6e48_SptrTypeDecl(_26117_elem))))));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc15b9_build_op(_21cbbdb9e_TypeBuilder* _self_) {
	_21c627dde_Token _27517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_221bb6302:;
			{
				return _21cbc1014_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_221bb5a3d:;
			{
				return _21cbc12de_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_221bb5aa4:;
			{
				return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_21c627dde_Token(),jule::Any(jule::Any(jule::new_ptr<_21c5c6e48_SptrTypeDecl>(_21c5c6e48_SptrTypeDecl(_21cbc12de_build_sptr(&(*_self_))))))));
			}
		}
		else {
			_case_begin_221bb5103:;
			{
				_21cbbe353_push_err(&(*_self_), _27517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_221bb59b6:;
	}
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc1894_build_slc(_21cbbdb9e_TypeBuilder* _self_) {
	_21c627dde_Token _29717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	((*((*_self_)._field_i)))++;
	jule::Ptr<_21c5d253b_TypeDecl> _29917_elem = _21cbc26a8_step(&(*_self_));
	if ((_29917_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_29717_token,jule::Any(jule::Any(jule::new_ptr<_21c5a1c25_SlcTypeDecl>(_21c5a1c25_SlcTypeDecl(_29917_elem))))));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc1b6e_build_arr(_21cbbdb9e_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_21cbbe353_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	}
	jule::I64 _32013_expr_delta = (*((*_self_)._field_i));
	jule::Ptr<_21c5d253b_TypeDecl> _32217_elem = _21cbc26a8_step(&(*_self_));
	if ((_32217_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21c486ac7_ArrTypeDecl> _32717_arrt = jule::new_ptr<_21c486ac7_ArrTypeDecl>(_21c486ac7_ArrTypeDecl(_32217_elem,jule::Ptr<_21c4d7b4a_Expr>()));
	jule::Slice<_21c627dde_Token> _33117_expr_tokens = (*_self_)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _21cba7737_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,(_33117_expr_tokens.len() - 1LL));
	_21c627dde_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == static_cast<jule::U64>(7LLU))) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt.get()._field_size=_21cbaa6b3_build_expr((*_self_)._field_p, _33117_expr_tokens);
	}
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_33417_token,jule::Any(jule::Any(_32717_arrt))));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc2103_build_map(_21cbbdb9e_TypeBuilder* _self_,jule::I64 _34728_colon,jule::Slice<_21c627dde_Token>& _34745_tokens) {
	_21c627dde_Token _34817_colon_token = (*_self_)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_34745_tokens.len())))) {
		_21cbbe353_push_err(&(*_self_), _34817_colon_token,jule::Str("type missing", 12));
		return nullptr;
	}
	jule::Slice<_21c627dde_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_21c627dde_Token> _35417_val_tokens = _34745_tokens.slice((_34728_colon + 1LL));
	jule::Ptr<_21c4d770a_MapTypeDecl> _35517_mapt = jule::new_ptr<_21c4d770a_MapTypeDecl>(_21c4d770a_MapTypeDecl());
	jule::I64 _35717_j = 0LL;
	jule::Ptr<_21c5d253b_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = _21cbabd13_build_type((*_self_)._field_p, _35317_key_tokens,(&(_35717_j)),(*_self_)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::I64>(static_cast<jule::I64>(_35317_key_tokens.len()))) {
		_21cbbe353_push_err(&(*_self_), _35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt.get()._field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_21c5d253b_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = _21cbabd13_build_type((*_self_)._field_p, _35417_val_tokens,(&(_35717_j)),(*_self_)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::I64>(static_cast<jule::I64>(_35417_val_tokens.len()))) {
		_21cbbe353_push_err(&(*_self_), _35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt.get()._field_val=_36718_valt;
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_34817_colon_token,jule::Any(jule::Any(_35517_mapt))));
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc23cd_build_enumerable(_21cbbdb9e_TypeBuilder* _self_) {
	_21c627dde_Token _38217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((((*((*_self_)._field_i)) + 2LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || (_38217_token._field_id != static_cast<jule::U64>(3LLU))) || (_38217_token._field_kind != jule::Str("[", 1))) {
		_21cbbe353_push_err(&(*_self_), _38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	_38217_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_38217_token._field_id == static_cast<jule::U64>(3LLU)) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return _21cbc1894_build_slc(&(*_self_));
	}
	((*((*_self_)._field_i)))--;
	jule::Slice<_21c627dde_Token> _39618_map_tokens;
	jule::I64 _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _21cbbd5b6_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39630_colon == -1LL)) {
		return _21cbc1b6e_build_arr(&(*_self_));
	}
	return _21cbc2103_build_map(&(*_self_), _39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbc26a8_step(_21cbbdb9e_TypeBuilder* _self_) {
	_21c627dde_Token _40513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_221bd0aad:;
			{
				return _21cbbea29_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_221bd0b24:;
			{
				return _21cbc0684_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_221bd0b8a:;
			{
				return _21cbc095e_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_221bd0c01:;
			{
				return _21cbc0c39_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_221bd187d:;
			{
				return _21cbc15b9_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_221bd18e4:;
			{
				return _21cbc23cd_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_221bcdc10:;
			{
				((*((*_self_)._field_i)))++;
				_21cbbe353_push_err(&(*_self_), _40513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_221bd0a36:;
	}
}



inline std::tuple<jule::Ptr<_21c5d253b_TypeDecl>,jule::Bool> _21cbc2983_build(_21cbbdb9e_TypeBuilder* _self_) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_21c5d253b_TypeDecl> _43517_root = _21cbc26a8_step(&(*_self_));
	if ((_43517_root == nullptr)) {
		_43444_ok = false;
		return std::make_tuple(_21cbbce78_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _21cbbdb9e_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21e68dda9_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21e223b3c_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ea2cbe8_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21e5a61bc_set(_21ea2ce18_Decimal* _self_,jule::Str _23422_s) {
	jule::Bool _23432_ok = jule::Bool();
	jule::I64 _23517_i = 0LL;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if (_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
		return _23432_ok;
	}
	{
		
		if (_23422_s[_23517_i] == '+') {
			_case_begin_2221bd694:;
			{
				(_23517_i)++;
			}
		}
		else if (_23422_s[_23517_i] == '-') {
			_case_begin_2221bdd7b:;
			{
				(*_self_)._field_neg=true;
				(_23517_i)++;
			}
		}
		_match_end_2221bd8d6:;
	}
	jule::Bool _25217_sawdot = false;
	jule::Bool _25317_sawdigits = false;
	for (; _23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len())); (_23517_i)++) {
		{
			{
				
				if (_23422_s[_23517_i] == '_') {
					_case_begin_2221c0ce5:;
					{
						goto _iter_next_2221bd52e;
					}
				}
				else if (_23422_s[_23517_i] == '.') {
					_case_begin_2221c0d6c:;
					{
						if (_25217_sawdot) {
							return _23432_ok;
						}
						_25217_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_2221bd52e;
					}
				}
				else if (('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) {
					_case_begin_2221c0de4:;
					{
						_25317_sawdigits=true;
						if ((_23422_s[_23517_i] == '0') && ((*_self_)._field_nd == 0LL)) {
							((*_self_)._field_dp)--;
							goto _iter_next_2221bd52e;
						}
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23422_s[_23517_i];
							((*_self_)._field_nd)++;
						} else if (_23422_s[_23517_i] != '0') {
							(*_self_)._field_trunc=true;
						}
						goto _iter_next_2221bd52e;
					}
				}
				_match_end_2221c0bc4:;
			}
			goto _iter_end_2221bd52e;
		}
	_iter_next_2221bd52e:;
	}
	_iter_end_2221bd52e:;
	if ((!(_25317_sawdigits))) {
		return _23432_ok;
	}
	if ((!(_25217_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	}
	if ((_23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) && (_21e417b44_lower(_23422_s[_23517_i]) == 'e')) {
		(_23517_i)++;
		if (_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
			return _23432_ok;
		}
		jule::I64 _29821_esign = 1LL;
		if (_23422_s[_23517_i] == '+') {
			(_23517_i)++;
		} else if (_23422_s[_23517_i] == '-') {
			(_23517_i)++;
			_29821_esign=-1LL;
		}
		if (((_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) || (_23422_s[_23517_i] < '0')) || (_23422_s[_23517_i] > '9')) {
			return _23432_ok;
		}
		jule::I64 _30821_e = 0LL;
		for (; (_23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) && ((('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) || (_23422_s[_23517_i] == '_')); (_23517_i)++) {
			{
				if (_23422_s[_23517_i] == '_') {
					goto _iter_next_2221c9903;
				}
				if ((_30821_e < 10000LL)) {
					_30821_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_30821_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_23422_s[_23517_i]))))) - '0');
				}
			}
		_iter_next_2221c9903:;
		}
		_iter_end_2221c9903:;
		(*_self_)._field_dp+=static_cast<jule::I64>(_30821_e * _29821_esign);
	}
	if (_23517_i != static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
		return _23432_ok;
	}
	_23432_ok=true;
	return _23432_ok;
}



inline std::tuple<jule::U64,jule::Bool> _21e2516b4_float_bits(_21ea2ce18_Decimal* _self_,_21e68dda9_FloatInfo& _32830_flt) {
	jule::U64 _32848_b = jule::U64();
	jule::Bool _32856_overflow = jule::Bool();
	jule::I64 _32917_exp = 0LL;
	jule::U64 _33017_mant = 0LLU;
	if (((*_self_)._field_nd == 0LL)) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	}
	if (((*_self_)._field_dp < -330LL)) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	_32917_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35521_n = 0LL;
			if ((*_self_)._field_dp >= static_cast<jule::I64>(static_cast<jule::I64>(_21e321b6e_POWTAB.len()))) {
				_35521_n=27LL;
			} else {
				_35521_n=_21e321b6e_POWTAB[(*_self_)._field_dp];
			}
			_21ea2d29d_shift(&(*_self_), static_cast<jule::I64>((-(_35521_n))));
			_32917_exp+=_35521_n;
		}
	_iter_next_2221d2da1:;
	}
	_iter_end_2221d2da1:;
	while (((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5'))) {
		{
			jule::I64 _36521_n = 0LL;
			if ((-((*_self_)._field_dp)) >= static_cast<jule::I64>(static_cast<jule::I64>(_21e321b6e_POWTAB.len()))) {
				_36521_n=27LL;
			} else {
				_36521_n=_21e321b6e_POWTAB[(-((*_self_)._field_dp))];
			}
			_21ea2d29d_shift(&(*_self_), _36521_n);
			_32917_exp-=_36521_n;
		}
	_iter_next_2221d3544:;
	}
	_iter_end_2221d3544:;
	(_32917_exp)--;
	if (_32917_exp < static_cast<jule::I64>(static_cast<jule::I64>((_32830_flt._field_bias + 1LL)))) {
		jule::I64 _38217_n = (_32830_flt._field_bias + 1LL) - _32917_exp;
		_21ea2d29d_shift(&(*_self_), static_cast<jule::I64>((-(_38217_n))));
		_32917_exp+=_38217_n;
	}
	if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))) {
		goto _julec_label_overflow;
	}
	_21ea2d29d_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(1LL + _32830_flt._field_mantbits)));
	_33017_mant=static_cast<jule::U64>(_21ea2d853_rounded_integer(&(*_self_)));
	if (_33017_mant == static_cast<jule::U64>(static_cast<jule::U64>(2LLU << _32830_flt._field_mantbits))) {
		_33017_mant>>=1LLU;
		(_32917_exp)++;
		if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))) {
			goto _julec_label_overflow;
		}
	}
	if (((_33017_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)))) == 0LLU)) {
		_32917_exp=_32830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_33017_mant=0LLU;
	_32917_exp=static_cast<jule::I64>(static_cast<jule::I64>(((static_cast<jule::U64>(1LLU) << _32830_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_32830_flt._field_bias)))));
	_32856_overflow=true;
	_julec_label_out:;
	jule::U64 _41817_bits = _33017_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)) - 1LLU))));
	_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_32917_exp - _32830_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))))) << _32830_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)) << _32830_flt._field_expbits);
	}
	_32848_b = _41817_bits;
	return std::make_tuple(_32848_b,_32856_overflow);
}



inline void _21ea2d138_assign(_21ea2ce18_Decimal* _self_,jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::I64 _15617_n = 0LL;
	while ((_15229_v > 0LLU)) {
		{
			jule::U64 _15817_v1 = (_15229_v / 10LLU);
			_15229_v-=static_cast<jule::U64>(10LLU * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(static_cast<jule::U8>(_15229_v + '0'));
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_2221e48c9:;
	}
	_iter_end_2221e48c9:;
	(*_self_)._field_nd=0LL;
	(_15617_n)--;
	for (; (_15617_n >= 0LL); (_15617_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_15317_buf[_15617_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_2221e616c:;
	}
	_iter_end_2221e616c:;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_21ea2db2d_trim((*_self_));
}



inline void _21ea2d29d_shift(_21ea2ce18_Decimal* _self_,jule::I64 _17728_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_2221e7ba7:;
		}
		else if ((_17728_k > 0LL)) {
			_case_begin_2221e7c2e:;
			{
				while ((_17728_k > 60LL)) {
					{
						_21ea2e06d_left_shift((*_self_),60LLU);
						_17728_k-=60LL;
					}
				_iter_next_2221e849e:;
				}
				_iter_end_2221e849e:;
				_21ea2e06d_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_17728_k)));
			}
		}
		else if ((_17728_k < 0LL)) {
			_case_begin_2221e7ca6:;
			{
				while ((_17728_k < -60LL)) {
					{
						_21ea2dc93_right_shift((*_self_),60LLU);
						_17728_k+=60LL;
					}
				_iter_next_2221e89ee:;
				}
				_iter_end_2221e89ee:;
				_21ea2dc93_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_17728_k)))));
			}
		}
		_match_end_2221e7aa8:;
	}
}



inline void _21ea2d413_round_down(_21ea2ce18_Decimal* _self_,jule::I64 _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*_self_)._field_nd)) {
		return;
	}
	(*_self_)._field_nd=_19729_nd;
	_21ea2db2d_trim((*_self_));
}



inline void _21ea2d578_round_up(_21ea2ce18_Decimal* _self_,jule::I64 _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*_self_)._field_nd)) {
		return;
	}
	jule::I64 _21217_i = (_20627_nd - 1LL);
	for (; (_21217_i >= 0LL); (_21217_i)--) {
		{
			jule::U8 _21417_c = (*_self_)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*_self_)._field_d[_21217_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_21217_i + 1LL));
				return;
			}
		}
	_iter_next_2221ed927:;
	}
	_iter_end_2221ed927:;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _21ea2d6dd_round(_21ea2ce18_Decimal* _self_,jule::I64 _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*_self_)._field_nd)) {
		return;
	}
	if (_21ea2e1d3_should_round_up((*_self_),_23324_nd)) {
		_21ea2d578_round_up(&(*_self_), _23324_nd);
	} else {
		_21ea2d413_round_down(&(*_self_), _23324_nd);
	}
}



inline jule::U64 _21ea2d853_rounded_integer(_21ea2ce18_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	}
	jule::I64 _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*_self_)._field_dp) && (_25017_i < (*_self_)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_25117_n * 10LLU))) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_d[_25017_i] - '0'))));
		}
	_iter_next_2222018b4:;
	}
	_iter_end_2222018b4:;
	for (; _25017_i < (*_self_)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LLU;
		}
	_iter_next_222205467:;
	}
	_iter_end_222205467:;
	if (_21ea2e1d3_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, _21ea2ce18_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21ea9d450_Const> static__21ea9d670_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_21ea9d450_Const>(_21ea9d450_Const(jule::Any(jule::Any(_1327_x))));
}



inline jule::Ptr<_21ea9d450_Const> static__21ea9d7d5_new_u64(jule::U64 _1527_x) {
	return jule::new_ptr<_21ea9d450_Const>(_21ea9d450_Const(jule::Any(jule::Any(_1527_x))));
}



inline jule::Ptr<_21ea9d450_Const> static__21ea9d9c2_new_bool(jule::Bool _1728_x) {
	return jule::new_ptr<_21ea9d450_Const>(_21ea9d450_Const(jule::Any(jule::Any(_1728_x))));
}



inline jule::Ptr<_21ea9d450_Const> static__21ea9dbae_new_str(jule::Str _1927_x) {
	return jule::new_ptr<_21ea9d450_Const>(_21ea9d450_Const(jule::Any(jule::Any(_1927_x))));
}



inline jule::Ptr<_21ea9d450_Const> static__21ea9de34_new_f64(jule::F64 _2127_x) {
	return jule::new_ptr<_21ea9d450_Const>(_21ea9d450_Const(jule::Any(jule::Any(_2127_x))));
}



inline jule::Ptr<_21ea9d450_Const> static__21ea9e165_new_nil(void) {
	return jule::new_ptr<_21ea9d450_Const>(_21ea9d450_Const(jule::Any(jule::Any(nullptr))));
}



inline jule::I64 _21ea9e7c5_read_i64(_21ea9d450_Const* _self_) {
	if ((!(_21eaa2377_is_i64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _21ea9eaa0_read_u64(_21ea9d450_Const* _self_) {
	if ((!(_21eaa2652_is_u64(&(*_self_))))) {
		return 0LLU;
	}
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _21ea9ed7a_read_bool(_21ea9d450_Const* _self_) {
	if ((!(_21eaa292c_is_bool(&(*_self_))))) {
		return false;
	}
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _21eaa0155_read_str(_21ea9d450_Const* _self_) {
	if ((!(_21eaa2c07_is_str(&(*_self_))))) {
		return jule::Str();
	}
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _21eaa0430_read_f64(_21ea9d450_Const* _self_) {
	if ((!(_21eaa2ed2_is_f64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _21eaa070a_as_i64(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2223d733b:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_2223d73a2:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2223d6c64:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_2223d6b54:;
			{
				return 0LL;
			}
		}
		_match_end_2223d6934:;
	}
}



inline jule::U64 _21eaa09d5_as_u64(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_2223d94c5:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2223d953b:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2223d8ddc:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_2223d8d43:;
			{
				return 0LLU;
			}
		}
		_match_end_2223d8cdd:;
	}
}



inline jule::F64 _21eaa0cb0_as_f64(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2223db65e:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2223db6c5:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_2223db076:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_2223daecc:;
			{
				return 0LL;
			}
		}
		_match_end_2223dae77:;
	}
}



inline void _21eaa10ce_set_i64(_21ea9d450_Const* _self_,jule::I64 _13030_x) {
	(*_self_)._field_data=jule::Any(_13030_x);
}



inline void _21eaa13ed_set_u64(_21ea9d450_Const* _self_,jule::U64 _13230_x) {
	(*_self_)._field_data=jule::Any(_13230_x);
}



inline void _21eaa171c_set_bool(_21ea9d450_Const* _self_,jule::Bool _13431_x) {
	(*_self_)._field_data=jule::Any(_13431_x);
}



inline void _21eaa1a3b_set_str(_21ea9d450_Const* _self_,jule::Str _13630_x) {
	(*_self_)._field_data=jule::Any(_13630_x);
}



inline void _21eaa1d5a_set_f64(_21ea9d450_Const* _self_,jule::F64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _21eaa209c_set_nil(_21ea9d450_Const* _self_) {
	(*_self_)._field_data=jule::Any(nullptr);
}



inline jule::Bool _21eaa2377_is_i64(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2223e2ab6:;
			{
				return true;
			}
		}
		else {
			_case_begin_2223e249a:;
			{
				return false;
			}
		}
		_match_end_2223e2445:;
	}
}



inline jule::Bool _21eaa2652_is_u64(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_2223e3611:;
			{
				return true;
			}
		}
		else {
			_case_begin_2223e2d19:;
			{
				return false;
			}
		}
		_match_end_2223e2e4b:;
	}
}



inline jule::Bool _21eaa292c_is_bool(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_2223e415b:;
			{
				return true;
			}
		}
		else {
			_case_begin_2223e3864:;
			{
				return false;
			}
		}
		_match_end_2223e3996:;
	}
}



inline jule::Bool _21eaa2c07_is_str(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_2223e4ba6:;
			{
				return true;
			}
		}
		else {
			_case_begin_2223e43ae:;
			{
				return false;
			}
		}
		_match_end_2223e44e1:;
	}
}



inline jule::Bool _21eaa2ed2_is_f64(_21ea9d450_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2223e5701:;
			{
				return true;
			}
		}
		else {
			_case_begin_2223e4e09:;
			{
				return false;
			}
		}
		_match_end_2223e503b:;
	}
}



inline jule::Bool _21eaa32ac_is_nil(_21ea9d450_Const* _self_) {
	return (*_self_)._field_data == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _21eaa3664_are_same_types(_21ea9d450_Const* _self_,_21ea9d450_Const _19033_x) {
	{
		
		if (_21eaa2377_is_i64(&(*_self_)) == _21eaa2377_is_i64(&_19033_x)) {
			_case_begin_2223e73e5:;
			{
				return true;
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_)) == _21eaa2652_is_u64(&_19033_x)) {
			_case_begin_2223e74a0:;
			{
				return true;
			}
		}
		else if (_21eaa2ed2_is_f64(&(*_self_)) == _21eaa2ed2_is_f64(&_19033_x)) {
			_case_begin_2223e7527:;
			{
				return true;
			}
		}
		else if (_21eaa292c_is_bool(&(*_self_)) == _21eaa292c_is_bool(&_19033_x)) {
			_case_begin_2223e71c5:;
			{
				return true;
			}
		}
		else if (_21eaa2c07_is_str(&(*_self_)) == _21eaa2c07_is_str(&_19033_x)) {
			_case_begin_2223e723b:;
			{
				return true;
			}
		}
		else if (_21eaa32ac_is_nil(&(*_self_)) == _21eaa32ac_is_nil(&_19033_x)) {
			_case_begin_2223e72a2:;
			{
				return true;
			}
		}
		else {
			_case_begin_2223e6c63:;
			{
				return false;
			}
		}
		_match_end_2223e6bb9:;
	}
}



inline jule::Bool _21eaa3a1b_and(_21ea9d450_Const* _self_,_21ea9d450_Const _21522_x) {
	{
		
		if (_21eaa292c_is_bool(&(*_self_)) && _21eaa292c_is_bool(&_21522_x)) {
			_case_begin_2223eb4b5:;
			{
				return _21ea9ed7a_read_bool(&(*_self_)) && _21ea9ed7a_read_bool(&_21522_x);
			}
		}
		else {
			_case_begin_2223ead88:;
			{
				return false;
			}
		}
		_match_end_2223eacde:;
	}
}



inline jule::Bool _21eaa3dc3_or(_21ea9d450_Const* _self_,_21ea9d450_Const _22621_x) {
	{
		
		if (_21eaa292c_is_bool(&(*_self_)) && _21eaa292c_is_bool(&_22621_x)) {
			_case_begin_2223ed165:;
			{
				return _21ea9ed7a_read_bool(&(*_self_)) || _21ea9ed7a_read_bool(&_22621_x);
			}
		}
		else {
			_case_begin_2223eca38:;
			{
				return false;
			}
		}
		_match_end_2223ec98e:;
	}
}



inline jule::Bool _21eaa427a_eq(_21ea9d450_Const* _self_,_21ea9d450_Const _23721_x) {
	{
		
		if (_21eaa32ac_is_nil(&(*_self_))) {
			_case_begin_2223ee881:;
			{
				return _21eaa32ac_is_nil(&_23721_x);
			}
		}
		else if (_21eaa292c_is_bool(&(*_self_))) {
			_case_begin_2223ee93b:;
			{
				return _21eaa292c_is_bool(&_23721_x) && (_21ea9ed7a_read_bool(&(*_self_)) == _21ea9ed7a_read_bool(&_23721_x));
			}
		}
		else if (_21eaa2c07_is_str(&(*_self_))) {
			_case_begin_2223ee9a2:;
			{
				return _21eaa2c07_is_str(&_23721_x) && (_21eaa0155_read_str(&(*_self_)) == _21eaa0155_read_str(&_23721_x));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_2223ee661:;
			{
				return _21ea9e7c5_read_i64(&(*_self_)) == static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_23721_x)));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_2223ee6c7:;
			{
				return _21ea9eaa0_read_u64(&(*_self_)) == static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_23721_x)));
			}
		}
		else if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_2223ee73d:;
			{
				return _21eaa0430_read_f64(&(*_self_)) == static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_23721_x)));
			}
		}
		else {
			_case_begin_2223ed73c:;
			{
				return false;
			}
		}
		_match_end_2223ed6b5:;
	}
}



inline jule::Bool _21eaa4632_lt(_21ea9d450_Const* _self_,_21ea9d450_Const _26421_x) {
	{
		
		if (_21eaa2c07_is_str(&(*_self_))) {
			_case_begin_222404d92:;
			{
				return _21eaa2c07_is_str(&_26421_x) && (_21eaa0155_read_str(&(*_self_)) < _21eaa0155_read_str(&_26421_x));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222404e6e:;
			{
				return _21ea9e7c5_read_i64(&(*_self_)) < static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_26421_x)));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_222404ed5:;
			{
				return _21ea9eaa0_read_u64(&(*_self_)) < static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_26421_x)));
			}
		}
		else if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_222404b94:;
			{
				return _21eaa0430_read_f64(&(*_self_)) < static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_26421_x)));
			}
		}
		else {
			_case_begin_2224023de:;
			{
				return false;
			}
		}
		_match_end_222403d2a:;
	}
}



inline jule::Bool _21eaa49d9_lt_eq(_21ea9d450_Const* _self_,_21ea9d450_Const _28724_x) {
	{
		
		if (_21eaa2c07_is_str(&(*_self_))) {
			_case_begin_2224089ab:;
			{
				return _21eaa2c07_is_str(&_28724_x) && (_21eaa0155_read_str(&(*_self_)) <= _21eaa0155_read_str(&_28724_x));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222408a88:;
			{
				return _21ea9e7c5_read_i64(&(*_self_)) <= static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_28724_x)));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_222408aee:;
			{
				return _21ea9eaa0_read_u64(&(*_self_)) <= static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_28724_x)));
			}
		}
		else if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_2224087ad:;
			{
				return _21eaa0430_read_f64(&(*_self_)) <= static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_28724_x)));
			}
		}
		else {
			_case_begin_2224051c2:;
			{
				return false;
			}
		}
		_match_end_2223e5d83:;
	}
}



inline jule::Bool _21eaa4d91_gt(_21ea9d450_Const* _self_,_21ea9d450_Const _31021_x) {
	{
		
		if (_21eaa2c07_is_str(&(*_self_))) {
			_case_begin_22240c7c3:;
			{
				return _21eaa2c07_is_str(&_31021_x) && (_21eaa0155_read_str(&(*_self_)) > _21eaa0155_read_str(&_31021_x));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_22240c8a0:;
			{
				return _21ea9e7c5_read_i64(&(*_self_)) > static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_31021_x)));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_22240c916:;
			{
				return _21ea9eaa0_read_u64(&(*_self_)) > static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_31021_x)));
			}
		}
		else if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_22240c5c5:;
			{
				return _21eaa0430_read_f64(&(*_self_)) > static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_31021_x)));
			}
		}
		else {
			_case_begin_222408cdb:;
			{
				return false;
			}
		}
		_match_end_22240abab:;
	}
}



inline jule::Bool _21eaa5248_gt_eq(_21ea9d450_Const* _self_,_21ea9d450_Const _33324_x) {
	{
		
		if (_21eaa2c07_is_str(&(*_self_))) {
			_case_begin_2224113dc:;
			{
				return _21eaa2c07_is_str(&_33324_x) && (_21eaa0155_read_str(&(*_self_)) >= _21eaa0155_read_str(&_33324_x));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_2224114b9:;
			{
				return _21ea9e7c5_read_i64(&(*_self_)) >= static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_33324_x)));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_222411530:;
			{
				return _21ea9eaa0_read_u64(&(*_self_)) >= static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_33324_x)));
			}
		}
		else if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_2224111de:;
			{
				return _21eaa0430_read_f64(&(*_self_)) >= static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_33324_x)));
			}
		}
		else {
			_case_begin_22240cb03:;
			{
				return false;
			}
		}
		_match_end_222407a65:;
	}
}



inline jule::Bool _21eaa5600_add(_21ea9d450_Const* _self_,_21ea9d450_Const _35426_x) {
	{
		
		if (_21eaa2c07_is_str(&(*_self_))) {
			_case_begin_222415248:;
			{
				if ((!(_21eaa2c07_is_str(&_35426_x)))) {
					return false;
				}
				_21eaa1a3b_set_str(&(*_self_), _21eaa0155_read_str(&(*_self_)) + _21eaa0155_read_str(&_35426_x));
			}
		}
		else if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_222415325:;
			{
				_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_35426_x)))));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_22241538b:;
			{
				if (_21eaa2ed2_is_f64(&_35426_x)) {
					_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&_35426_x)))));
				} else {
					_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64(&(*_self_)))) + static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_35426_x)))));
				}
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_22241504a:;
			{
				if (_21eaa2ed2_is_f64(&_35426_x)) {
					_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&_35426_x)))));
				} else {
					_21eaa13ed_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64(&(*_self_)))) + static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_35426_x)))));
				}
			}
		}
		else {
			_case_begin_222414269:;
			{
				return false;
			}
		}
		_match_end_22241470e:;
	}
	return true;
}



inline jule::Bool _21eaa59a7_sub(_21ea9d450_Const* _self_,_21ea9d450_Const _38326_x) {
	{
		
		if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_22241cb79:;
			{
				_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_38326_x)))));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_22241cc67:;
			{
				if (_21eaa2ed2_is_f64(&_38326_x)) {
					_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&_38326_x)))));
				} else {
					_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64(&(*_self_)))) - static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_38326_x)))));
				}
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_22241cccd:;
			{
				if (_21eaa2ed2_is_f64(&_38326_x)) {
					_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&_38326_x)))));
				} else {
					_21eaa13ed_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64(&(*_self_)))) - static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_38326_x)))));
				}
			}
		}
		else {
			_case_begin_22241c54c:;
			{
				return false;
			}
		}
		_match_end_22241b5e5:;
	}
	return true;
}



inline jule::Bool _21eaa5d5e_mul(_21ea9d450_Const* _self_,_21ea9d450_Const _40726_x) {
	{
		
		if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_22242439a:;
			{
				_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&_40726_x)))));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222424488:;
			{
				if (_21eaa2ed2_is_f64(&_40726_x)) {
					_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&_40726_x)))));
				} else {
					_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64(&(*_self_)))) * static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_40726_x)))));
				}
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_2224244ee:;
			{
				if (_21eaa2ed2_is_f64(&_40726_x)) {
					_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&_40726_x)))));
				} else {
					_21eaa13ed_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64(&(*_self_)))) * static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_40726_x)))));
				}
			}
		}
		else {
			_case_begin_222423c6d:;
			{
				return false;
			}
		}
		_match_end_222422c5b:;
	}
	return true;
}



inline jule::Bool _21eaa6216_div(_21ea9d450_Const* _self_,_21ea9d450_Const _43526_x) {
	{
		
		if (_21eaa2ed2_is_f64(&(*_self_))) {
			_case_begin_22242a835:;
			{
				jule::F64 _43817_l = _21eaa0cb0_as_f64(&_43526_x);
				if ((_43817_l == 0LL)) {
					return false;
				}
				_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64(&(*_self_)))),_43817_l)));
			}
		}
		else if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_22242a923:;
			{
				jule::F64 _44417_l = _21eaa0cb0_as_f64(&_43526_x);
				if ((_44417_l == 0LL)) {
					return false;
				}
				_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))),_44417_l)));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_22242a989:;
			{
				jule::F64 _45017_l = _21eaa0cb0_as_f64(&_43526_x);
				if ((_45017_l == 0LL)) {
					return false;
				}
				_21eaa1d5a_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0cb0_as_f64(&(*_self_)))),_45017_l)));
			}
		}
		else {
			_case_begin_22242a208:;
			{
				return false;
			}
		}
		_match_end_2224292c3:;
	}
	return true;
}



inline jule::Bool _21eaa65bd_mod(_21ea9d450_Const* _self_,_21ea9d450_Const _46426_x) {
	{
		
		if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222430a49:;
			{
				jule::I64 _46717_l = _21eaa070a_as_i64(&_46426_x);
				if ((_46717_l == 0LL)) {
					return false;
				}
				_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64(&(*_self_)))),_46717_l)));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_222430b48:;
			{
				jule::U64 _47317_l = _21eaa09d5_as_u64(&_46426_x);
				if ((_47317_l == 0LLU)) {
					return false;
				}
				_21eaa13ed_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64(&(*_self_)))),_47317_l)));
			}
		}
		else {
			_case_begin_22243040b:;
			{
				return false;
			}
		}
		_match_end_222430362:;
	}
	return true;
}



inline jule::Bool _21eaa6975_bitwise_and(_21ea9d450_Const* _self_,_21ea9d450_Const _48634_x) {
	{
		
		if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222434960:;
			{
				_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64(&(*_self_)))) & static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_48634_x)))));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_222434a5e:;
			{
				_21eaa13ed_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64(&(*_self_)))) & static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_48634_x)))));
			}
		}
		else {
			_case_begin_222434322:;
			{
				return false;
			}
		}
		_match_end_222434278:;
	}
	return true;
}



inline jule::Bool _21eaa6d2c_bitwise_or(_21ea9d450_Const* _self_,_21ea9d450_Const _50033_x) {
	{
		
		if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_22243ca12:;
			{
				_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64(&(*_self_)))) | static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_50033_x)))));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_22243cb11:;
			{
				_21eaa13ed_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64(&(*_self_)))) | static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_50033_x)))));
			}
		}
		else {
			_case_begin_22243c3c4:;
			{
				return false;
			}
		}
		_match_end_22243c32a:;
	}
	return true;
}



inline jule::Bool _21eaa71d4_xor(_21ea9d450_Const* _self_,_21ea9d450_Const _51426_x) {
	{
		
		if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222440c57:;
			{
				_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64(&(*_self_)))) ^ static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(&_51426_x)))));
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_222440d56:;
			{
				_21eaa13ed_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64(&(*_self_)))) ^ static_cast<jule::U64>(static_cast<jule::U64>(_21eaa09d5_as_u64(&_51426_x)))));
			}
		}
		else {
			_case_begin_222440619:;
			{
				return false;
			}
		}
		_match_end_222440570:;
	}
	return true;
}



inline jule::Bool _21eaa758b_lshift(_21ea9d450_Const* _self_,_21ea9d450_Const _52829_x) {
	{
		
		if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222444310:;
			{
				jule::I64 _53117_l = _21eaa070a_as_i64(&(*_self_));
				if ((_53117_l < 0LL)) {
					jule::U64 _53321_r = _21eaa09d5_as_u64(&_52829_x);
					_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(_53117_l << _53321_r));
				} else {
					_21eaa7d50_lshift_unsig((*_self_),_52829_x);
				}
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_22244440e:;
			{
				_21eaa7d50_lshift_unsig((*_self_),_52829_x);
			}
		}
		else {
			_case_begin_222443bc2:;
			{
				return false;
			}
		}
		_match_end_222443b28:;
	}
	return true;
}



inline jule::Bool _21eaa7943_rshift(_21ea9d450_Const* _self_,_21ea9d450_Const _54829_x) {
	{
		
		if (_21eaa2377_is_i64(&(*_self_))) {
			_case_begin_222447764:;
			{
				jule::I64 _55117_l = _21eaa070a_as_i64(&(*_self_));
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _21eaa09d5_as_u64(&_54829_x);
					_21eaa10ce_set_i64(&(*_self_), static_cast<jule::I64>(_55117_l >> _55321_r));
				} else {
					_21eaa81e6_rshift_unsig((*_self_),_54829_x);
				}
			}
		}
		else if (_21eaa2652_is_u64(&(*_self_))) {
			_case_begin_222447863:;
			{
				_21eaa81e6_rshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_222447126:;
			{
				return false;
			}
		}
		_match_end_22244707c:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _21ea9d450_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21ec83239_FileStream> static__21ec83459_new(jule::Ptr<_235a41113_File> _1527_f) {
	return jule::new_ptr<_21ec83239_FileStream>(_21ec83239_FileStream(_1527_f));
}



inline jule::Exceptional<jule::I64> _21ec836bd_read(_21ec83239_FileStream* _self_,jule::Slice<jule::U8> _2831_buff) {
	jule::I64 _2848_n = jule::I64();
	_2848_n = static_cast<jule::I64>(({
		auto except = _235a38eda_read((*_self_)._field_buff.ptr(), _2831_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_2848_n);
}



inline jule::Exceptional<jule::I64> _21ec839ba_write(_21ec83239_FileStream* _self_,jule::Slice<jule::U8> _3428_buff) {
	jule::I64 _3445_n = jule::I64();
	_3445_n = static_cast<jule::I64>(({
		auto except = _235a3735c_write((*_self_)._field_buff.ptr(), _3428_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3445_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _21ec83d83_read_line(_21ec83239_FileStream* _self_) {
	
	jule::Slice<jule::U8> _4617_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _4717_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _4917_n = ({
				auto except = _235a38eda_read((*_self_)._field_buff.ptr(), _4717_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::I64();});
			});
			if ((_4917_n == 0LL)) {
				goto _iter_end_2224be940;
			}
			jule::U8 _5417_b = _4717_part[0LL];
			_4617_buff = jule::alloc_for_append(_4617_buff,1);_4617_buff.__push(_5417_b);
			if ((_5417_b == 10LLU)) {
				goto _iter_end_2224be940;
			}
		}
	_iter_next_2224be940:;
	}
	_iter_end_2224be940:;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_4617_buff);
}







std::ostream &operator<<(std::ostream &_Stream, _21ec83239_FileStream _Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::I64> _21ec868ad_read(_21ec86171_ByteStream* _self_,jule::Slice<jule::U8> _2131_buff) {
	jule::I64 _2148_n = jule::I64();
	if ((!(_21ec87381_data(&(*_self_))))) {
		_2148_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_2148_n);
	}
	_2148_n=static_cast<jule::I64>(copy(_2131_buff,(*_self_)._field_buff));
	(*_self_)._field_buff=(*_self_)._field_buff.slice(_2148_n);
	return jule::Exceptional<jule::I64>(jule::Any(), _2148_n);
}



inline jule::Exceptional<jule::I64> _21ec86c65_write(_21ec86171_ByteStream* _self_,jule::Slice<jule::U8> _3228_buff) {
	jule::I64 _3245_n = jule::I64();
	_3245_n=static_cast<jule::I64>(_3228_buff.len());
	(*_self_)._field_buff=jule::append((*_self_)._field_buff,_3228_buff);
	return jule::Exceptional<jule::I64>(jule::Any(), _3245_n);
}



inline jule::Ptr<_21ec86171_ByteStream> static__21ec870a6_new(void) {
	return jule::new_ptr<_21ec86171_ByteStream>();
}



inline jule::Bool _21ec87381_data(_21ec86171_ByteStream* _self_) {
	return ((*_self_)._field_buff.len() != 0LL);
}



inline void _21ec875c3_fit(_21ec86171_ByteStream* _self_) {
	if ((!(_21ec87381_data(&(*_self_))))) {
		(*_self_)._field_buff=nullptr;
		return;
	}
	jule::Slice<jule::U8> _5717_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_buff.len()));
	copy(_5717_buff,(*_self_)._field_buff);
	(*_self_)._field_buff=_5717_buff;
}







std::ostream &operator<<(std::ostream &_Stream, _21ec86171_ByteStream _Src) {
	_Stream << "ByteStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21ec88c34_Scanner> static__21ec891c9_new(jule::Trait<_21ec846ad_Reader> _1627_r) {
	return jule::new_ptr<_21ec88c34_Scanner>(_21ec88c34_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_21ec88c34_Scanner> static__21ec894d7_newf(jule::Ptr<_235a41113_File> _2428_f) {
	return jule::new_ptr<_21ec88c34_Scanner>(_21ec88c34_Scanner(jule::Trait<_21ec846ad_Reader>(static__21ec83459_new(_2428_f), 0),jule::Slice<jule::U8>()));
}



inline void _21ec8984a_reset(_21ec88c34_Scanner* _self_) {
	(*_self_)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _21ec89b25_bytes(_21ec88c34_Scanner* _self_) {
	return (*_self_)._field_b;
}



inline jule::Str _21ec89e00_text(_21ec88c34_Scanner* _self_) {
	return static_cast<jule::Str>((*_self_)._field_b);
}



inline jule::Exceptional<jule::Bool> _21ec8a1ca_scan(_21ec88c34_Scanner* _self_) {
	
	_21ec8984a_reset(&(*_self_));
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _5417_n = ({
				auto except = _21ec846ad_Reader_mptr_data[((*_self_)._field_r).type_offset]._21ec84537_read((*_self_)._field_r, _5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::I64();});
			});
			if ((_5417_n == 0LL)) {
				goto _iter_end_2224cd696;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if ((_6117_b == 10LLU)) {
				goto _iter_end_2224cd696;
			}
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);
		}
	_iter_next_2224cd696:;
	}
	_iter_end_2224cd696:;
	(*_self_)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),(_5217_part[0LL] != 0LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _21ec88c34_Scanner _Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd02188_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd05be7_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd08854_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd097de_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd09c40_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0a12a_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0b68c_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0c13d_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0c58e_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0cade_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0e85a_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0ec89_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd100db_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd10b03_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd110dc_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd115a4_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd1196c_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd11e34_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd13078_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd13540_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd13a07_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd13d37_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd144db_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd147a5_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd14b18_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd15146_TernaryExprModel _Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd15597_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd158e9_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd16ac6_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21dd1c02c_to_str(_21dd1badc_ParamIns* _self_) {
	jule::Str _19217_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_mutable) {
		_19217_s+=jule::Str("mut ", 4);
	}
	if ((*_self_)._field_decl.get()._field_reference) {
		_19217_s+=jule::Str("&_:", 3);
	}
	if (_21dd17b2c_is_self((*_self_)._field_decl.ptr())) {
		if (_21dd17e07_is_ref((*_self_)._field_decl.ptr())) {
			_19217_s+=jule::Str("&", 1);
		}
		_19217_s+=jule::Str("self", 4);
		return _19217_s;
	}
	if ((*_self_)._field_decl.get()._field_variadic) {
		_19217_s+=jule::Str("...", 3);
	}
	if (((*_self_)._field_kind != nullptr)) {
		_19217_s+=_21ec06641_to_str((*_self_)._field_kind.ptr());
	}
	return _19217_s;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd1badc_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21dd1d11b_to_str(_21dd1cc42_FnIns* _self_) {
	
	return _21dd1e408_get_kind_str(&(*_self_), false);
}



inline jule::Bool _21dd1d4c3_equals(jule::Ptr<_21dd1cc42_FnIns> _self_,jule::Ptr<_21ec06223_TypeKind> _24326_other) {
	jule::Ptr<_21dd1cc42_FnIns> _24413_f = _21ec099c9_fnc(_24326_other.ptr());
	if ((_24413_f == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_exceptional != _24413_f.get()._field_decl.get()._field_exceptional) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_unsafety != _24413_f.get()._field_decl.get()._field_unsafety) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_24413_f.get()._field_generics.len()))) {
		return false;
	}
	if (_21dd19711_is_void(_self_.get()._field_decl.ptr()) != _21dd19711_is_void(_24413_f.get()._field_decl.ptr())) {
		return false;
	}
	jule::I64 _26517_i = 0LL;
	for (; _26517_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_26517_i)++) {
		{
			if ((!(_21ec069e8_equals(_self_.get()._field_generics[_26517_i], _24413_f.get()._field_generics[_26517_i])))) {
				return false;
			}
		}
	_iter_next_222652908:;
	}
	_iter_end_222652908:;
	jule::Fn<jule::Bool(jule::Ptr<_21dd1badc_ParamIns>,jule::Ptr<_21dd1badc_ParamIns>)> _27213_check_params = jule::Fn<jule::Bool(jule::Ptr<_21dd1badc_ParamIns>,jule::Ptr<_21dd1badc_ParamIns>)>([=](jule::Ptr<_21dd1badc_ParamIns> _27231_p1,jule::Ptr<_21dd1badc_ParamIns> _27246_p2) mutable -> jule::Bool {
		if (_27231_p1.get()._field_decl.get()._field_mutable != _27246_p2.get()._field_decl.get()._field_mutable) {
			return false;
		}
		if (_21dd17b2c_is_self(_27231_p1.get()._field_decl.ptr())) {
			if ((!(_21dd17b2c_is_self(_27246_p2.get()._field_decl.ptr())))) {
				return false;
			}
			if (_21dd17e07_is_ref(_27231_p1.get()._field_decl.ptr()) != _21dd17e07_is_ref(_27246_p2.get()._field_decl.ptr())) {
				return false;
			}
			return true;
		}
		if (_27231_p1.get()._field_decl.get()._field_reference != _27246_p2.get()._field_decl.get()._field_reference) {
			return false;
		}
		if (_27231_p1.get()._field_decl.get()._field_variadic != _27246_p2.get()._field_decl.get()._field_variadic) {
			return false;
		}
		return _21ec069e8_equals(_27231_p1.get()._field_kind, _27246_p2.get()._field_kind);
	});
	if (_24413_f.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len()))) {
		return false;
	}
	_26517_i=0LL;
	for (; _26517_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len())); (_26517_i)++) {
		{
			if ((!(_27213_check_params(_self_.get()._field_params[_26517_i],_24413_f.get()._field_params[_26517_i])))) {
				return false;
			}
		}
	_iter_next_22265b934:;
	}
	_iter_end_22265b934:;
	if ((!(_21dd19711_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_21ec069e8_equals(_self_.get()._field_result, _24413_f.get()._field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _21dd1d8be_is_builtin(_21dd1cc42_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _21dd1db99_is_anon(_21dd1cc42_FnIns* _self_) {
	return (*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _21dd1a36b_is_anon((*_self_)._field_decl.ptr()));
}



inline jule::Bool _21dd1e051_same(_21dd1cc42_FnIns* _self_,jule::Ptr<_21dd1cc42_FnIns> _33523_f) {
	if (((*_self_)._field_decl != _33523_f.get()._field_decl) || (_33523_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_222661241:;
		if (it != expr.end()) {
			jule::I64 _222662462_i = it - expr.begin();
			jule::Ptr<_21ec06223_TypeKind> &_2226625e9_g = *it;
			{
				if ((!(_21ec069e8_equals(_2226625e9_g, _33523_f.get()._field_generics[_222662462_i])))) {
					return false;
				}
			}
			_iter_next_222661241:;
			++it;
			_222662462_i++;
			goto _iter_begin_222661241;
		}
		_iter_end_222661241:;
	}
	return true;
}



inline jule::Str _21dd1e408_get_kind_str(_21dd1cc42_FnIns* _self_,jule::Bool _35131_ident) {
	jule::Str _35217_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_35217_s+=jule::Str("unsafe ", 7);
	}
	_35217_s+=jule::Str("fn", 2);
	if (_35131_ident && ((*_self_)._field_decl != nullptr)) {
		_35217_s+=jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident;
	}
	if (((*_self_)._field_generics.len() > 0LL)) {
		_35217_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_222665663:;
			if (it != expr.end()) {
				jule::I64 _222665b80_i = it - expr.begin();
				jule::Ptr<_21ec06223_TypeKind> &_222665cd4_t = *it;
				{
					_35217_s+=_21ec06641_to_str(_222665cd4_t.ptr());
					if ((_222665b80_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len()))) {
						_35217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_222665663:;
				++it;
				_222665b80_i++;
				goto _iter_begin_222665663;
			}
			_iter_end_222665663:;
		}
		_35217_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_35217_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_222667a0b:;
			if (it != expr.end()) {
				jule::I64 _222667c70_i = it - expr.begin();
				jule::Ptr<_21c640423_GenericDecl> &_222667eb2_g = *it;
				{
					_35217_s+=_222667eb2_g.get()._field_ident;
					if ((_222667c70_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_decl.get()._field_generics.len()))) {
						_35217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_222667a0b:;
				++it;
				_222667c70_i++;
				goto _iter_begin_222667a0b;
			}
			_iter_end_222667a0b:;
		}
		_35217_s+=jule::Str("]", 1);
	}
	_35217_s+=jule::Str("(", 1);
	jule::I64 _38513_n = (*_self_)._field_params.len();
	if ((_38513_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_22266a49d:;
			if (it != expr.end()) {
				jule::Ptr<_21dd1badc_ParamIns> &_22266a569_p = *it;
				{
					_35217_s+=_21dd1c02c_to_str(_22266a569_p.ptr());
					_35217_s+=jule::Str(",", 1);
				}
				_iter_next_22266a49d:;
				++it;
				goto _iter_begin_22266a49d;
			}
			_iter_end_22266a49d:;
		}
		(_35217_s).mut_slice(0LL,_35217_s.len() - 1LL);
	}
	_35217_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_35217_s+=jule::Str("!", 1);
	}
	if ((!(_21dd19711_is_void((*_self_)._field_decl.ptr())))) {
		_35217_s+=jule::Str(":", 1);
		_35217_s+=_21ec06641_to_str((*_self_)._field_result.ptr());
	}
	return _35217_s;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd1cc42_FnIns _Src) {
	_Stream << _21dd1d11b_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_21dd264ba_ReferenceStack> static__21dd2672e_new(void) {
	return jule::new_ptr<_21dd264ba_ReferenceStack>();
}



inline jule::I64 _21dd26b2a_len(_21dd264ba_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _21dd26ed2_at(_21dd264ba_ReferenceStack* _self_,jule::I64 _5825_i) {
	return (*_self_)._field_buffer[_5825_i];
}



inline void _21dd27301_push(_21dd264ba_ReferenceStack* _self_,jule::Any _6331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_6331_ref);
}



inline jule::Bool _21dd276a8_exist_0(_21dd264ba_ReferenceStack* _self_,jule::Ptr<_21eb75615_Var> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_222c92e6b:;
		if (it != expr.end()) {
			jule::Any &_222c93158_ref = *it;
			{
				if (_222c93158_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_222c92e6b:;
			++it;
			goto _iter_begin_222c92e6b;
		}
		_iter_end_222c92e6b:;
	}
	return false;
}

inline jule::Bool _21dd276a8_exist_1(_21dd264ba_ReferenceStack* _self_,jule::Ptr<_21dd1cc42_FnIns> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_222c95ee6:;
		if (it != expr.end()) {
			jule::Any &_222c961d3_ref = *it;
			{
				if (_222c961d3_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_222c95ee6:;
			++it;
			goto _iter_begin_222c95ee6;
		}
		_iter_end_222c95ee6:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd264ba_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21dd2c0a3_SymbolBuilder> _21dd2c6d0_get_root(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_) {
	jule::Ptr<_21dd2c0a3_SymbolBuilder> _28117_root = _self_;
	while ((_28117_root.get()._field_owner != nullptr)) {
		{
			_28117_root=_28117_root.get()._field_owner;
		}
	_iter_next_222670a47:;
	}
	_iter_end_222670a47:;
	return _28117_root;
}



inline void _21dd2cba8_push_err(_21dd2c0a3_SymbolBuilder* _self_,_21c627dde_Token& _28828_token,jule::Str _28842_fmt,jule::Slice<jule::Any> _28855_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21eb52658_compiler_err(_28828_token,true,_28842_fmt,_28855_args));
}



inline void _21dd2d181_push_err_text(_21dd2c0a3_SymbolBuilder* _self_,_21c627dde_Token& _29233_token,jule::Str _29247_fmt,jule::Slice<jule::Any> _29260_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21eb52658_compiler_err(_29233_token,false,_29247_fmt,_29260_args));
}



inline void _21dd2d57c_push_suggestion(_21dd2c0a3_SymbolBuilder* _self_,jule::Str _29734_fmt,jule::Slice<jule::Any> _29747_args) {
	{
		_21eb53d96_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29734_fmt,_29747_args);
	}
}



inline jule::Bool _21dd2d945_check_cpp_use_decl_path(_21dd2c0a3_SymbolBuilder* _self_,jule::Ptr<_21c6460a5_UseDecl>& _30143_decl) {
	jule::Bool _30161_ok = jule::Bool();
	if (_236920794_is_std_header_path(_30143_decl.get()._field_link_path)) {
		_30161_ok = true;
		return _30161_ok;
	}
	jule::Str _30613_ext = _235b88975_ext(_30143_decl.get()._field_link_path);
	if ((!(_236920909_is_valid_header_ext(_30613_ext))) && (!(_236920ae6_is_valid_cpp_ext(_30613_ext)))) {
		_21dd2cba8_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_30613_ext)}));
		_30161_ok = false;
		return _30161_ok;
	}
	jule::Ptr<_235a75ae8_Status> _31313_info = ({
		auto except = static__235a252a1_of(_30143_decl.get()._field_link_path);
		(except.ok()) ? (except.result) : ({{
			_21dd2cba8_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
			_30161_ok = false;
			return _30161_ok;
			_30161_ok = false;
			return _30161_ok;
		} jule::Ptr<_235a75ae8_Status>();});
	});
	if (_235a3a11d_is_dir(_31313_info.ptr())) {
		_21dd2cba8_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
		_30161_ok = false;
		return _30161_ok;
	}
	_30161_ok = true;
	return _30161_ok;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2dd30_build_cpp_header_import(_21dd2c0a3_SymbolBuilder* _self_,jule::Ptr<_21c6460a5_UseDecl>& _32547_decl) {
	jule::Str _32617_path = _32547_decl.get()._field_link_path;
	if ((!(_236920794_is_std_header_path(_32547_decl.get()._field_link_path)))) {
		jule::Bool _32921_ok = _21dd2d945_check_cpp_use_decl_path(&(*_self_), _32547_decl);
		if ((!(_32921_ok))) {
			return nullptr;
		}
		std::tie(_32617_path,_32921_ok) = _235b9c428_abs(_32547_decl.get()._field_link_path);
		if ((!(_32921_ok))) {
			_21dd2cba8_push_err(&(*_self_), _32547_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32547_decl.get()._field_link_path)}));
		}
	}
	return jule::new_ptr<_21eb49c8d_ImportInfo>(_21eb49c8d_ImportInfo(_32547_decl.get()._field_token,_32617_path,_32547_decl.get()._field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_21c627dde_Token>(),nullptr,jule::I64()));
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2e1c6_build_std_import(_21dd2c0a3_SymbolBuilder* _self_,jule::Ptr<_21c6460a5_UseDecl>& _35240_decl) {
	jule::Str _35317_path = _35240_decl.get()._field_link_path.slice(5LL);
	_35317_path=_2368bc136_replace(_35317_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_35317_path=_235b71c27_join(jule::Slice<jule::Str>({_21c35922a_PATH_STDLIB,_35317_path}));
	jule::Bool _35620_ok;
	std::tie(_35317_path,_35620_ok) = _235b9c428_abs(_35317_path);
	if ((!(_35620_ok))) {
		_21dd2cba8_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_235a75ae8_Status> _36313_info = ({
		auto except = static__235a252a1_of(_35317_path);
		(except.ok()) ? (except.result) : ({{
			_21dd2cba8_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_235a75ae8_Status>();});
	});
	if ((!(_235a3a11d_is_dir(_36313_info.ptr())))) {
		_21dd2cba8_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _37313_i = (_2368b94b8_find_last(_35240_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _37413_ident = _35240_decl.get()._field_link_path.slice(_37313_i);
	return jule::new_ptr<_21eb49c8d_ImportInfo>(_21eb49c8d_ImportInfo(_35240_decl.get()._field_token,_35317_path,_35240_decl.get()._field_link_path,_37413_ident,_35240_decl.get()._field_alias,jule::Bool(),false,true,_35240_decl.get()._field_full,jule::Slice<_21c627dde_Token>(),jule::new_ptr<_21eb4d269_Package>(_21eb4d269_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2e57d_build_ident_import(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Ptr<_21c6460a5_UseDecl>& _39143_decl) {
	jule::Str _39213_mod_path = _21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb46020_get_mod_path(_self_.get()._field_importer);
	if ((_39213_mod_path.len() == 0LL)) {
		_21dd2cba8_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_21dd2d57c_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Str _39917_path = _39143_decl.get()._field_link_path;
	_39917_path=_2368bc136_replace(_39917_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_39917_path=_235b71c27_join(jule::Slice<jule::Str>({_39213_mod_path,_39917_path}));
	jule::Bool _40320_ok;
	std::tie(_39917_path,_40320_ok) = _235b9c428_abs(_39917_path);
	if ((!(_40320_ok))) {
		_21dd2cba8_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_235a75ae8_Status> _41013_info = ({
		auto except = static__235a252a1_of(_39917_path);
		(except.ok()) ? (except.result) : ({{
			_21dd2cba8_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_235a75ae8_Status>();});
	});
	if ((!(_235a3a11d_is_dir(_41013_info.ptr())))) {
		_21dd2cba8_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _42013_i = (_2368b94b8_find_last(_39143_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _42113_ident = _39143_decl.get()._field_link_path.slice(_42013_i);
	return jule::new_ptr<_21eb49c8d_ImportInfo>(_21eb49c8d_ImportInfo(_39143_decl.get()._field_token,_39917_path,_39143_decl.get()._field_link_path,_42113_ident,_39143_decl.get()._field_alias,jule::Bool(),false,false,_39143_decl.get()._field_full,jule::Slice<_21c627dde_Token>(),jule::new_ptr<_21eb4d269_Package>(_21eb4d269_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd2e935_build_import(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Ptr<_21c6460a5_UseDecl>& _43837_decl) {
	{
		
		if (_43837_decl.get()._field_cpp_linked) {
			_case_begin_222692162:;
			{
				return _21dd2dd30_build_cpp_header_import(_self_.ptr(), _43837_decl);
			}
		}
		else if (_43837_decl.get()._field_std) {
			_case_begin_222691b12:;
			{
				return _21dd2e1c6_build_std_import(_self_.ptr(), _43837_decl);
			}
		}
		else {
			_case_begin_222691507:;
			{
				return _21dd2e57d_build_ident_import(_self_, _43837_decl);
			}
		}
		_match_end_22269145d:;
	}
}



inline jule::Bool _21dd2ed31_check_duplicate_use_decl(_21dd2c0a3_SymbolBuilder* _self_,jule::Ptr<_21eb49c8d_ImportInfo>& _44644_pkg) {
	jule::Bool _44664_ok = jule::Bool();
	jule::Ptr<_21eb49c8d_ImportInfo> _44813_lpkg = _21ebb7668_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>([=](jule::Ptr<_21eb49c8d_ImportInfo> _44849_spkg) mutable -> jule::Bool {
		return _44644_pkg.get()._field_path == _44849_spkg.get()._field_path;
	}));
	if ((_44813_lpkg == nullptr)) {
		_44664_ok = true;
		return _44664_ok;
	}
	_21dd2cba8_push_err(&(*_self_), _44644_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>({jule::Any(_44644_pkg.get()._field_link_path)}));
	_21dd2d57c_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44664_ok = false;
	return _44664_ok;
}



inline void _21dd3021b_impl_import_selections(_21dd2c0a3_SymbolBuilder* _self_,jule::Ptr<_21eb49c8d_ImportInfo>& _46046_imp,jule::Ptr<_21c6460a5_UseDecl>& _46069_decl) {
	{
		auto &expr = _46069_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_222697e37:;
		if (it != expr.end()) {
			_21c627dde_Token _222698003_ident = *it;
			{
				if (_21eb4cb09_exist_ident(_46046_imp.ptr(), _222698003_ident._field_kind)) {
					_21dd2cba8_push_err(&(*_self_), _222698003_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>({jule::Any(_222698003_ident._field_kind)}));
					_21dd2d57c_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_222697e37;
				}
				_46046_imp.get()._field_selected = jule::alloc_for_append(_46046_imp.get()._field_selected,1);_46046_imp.get()._field_selected.__push(_222698003_ident);
			}
			_iter_next_222697e37:;
			++it;
			goto _iter_begin_222697e37;
		}
		_iter_end_222697e37:;
	}
}



inline jule::Str _21dd305c3_get_as_link_path(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Str _47240_path) {
	if (_236849954_has_prefix(_47240_path,_21c35922a_PATH_STDLIB)) {
		(_47240_path).mut_slice(_21c35922a_PATH_STDLIB.len());
		return jule::Str("std", 3) + _2368bc136_replace(_47240_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _47814_root;
	std::tie(_47814_root,std::ignore) = _235b9c428_abs(_21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb46020_get_mod_path(_self_.get()._field_importer));
	(_47240_path).mut_slice(_47814_root.len());
	if ((_47240_path[0LL] == 47LLU)) {
		(_47240_path).mut_slice(1LL);
	}
	return _2368bc136_replace(_47240_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _21dd30a9b_push_cycle_error(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Ptr<_21dd2c0a3_SymbolBuilder>& _48637_sb,jule::Str _48657_path,jule::Str& _48673_message) {
	
	jule::Str _48913_refers_to = _21c34911b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_21dd305c3_get_as_link_path(_self_, _21c62eaa5_dir(_48637_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_21dd305c3_get_as_link_path(_self_, _48657_path))}));
	(_48673_message).buffer.insert(0, (((_2368293b2_repeat(jule::Str(" ", 1),4LL) + _48913_refers_to) + jule::Str("\n", 1))));
}



inline void _21dd31074_push_cross_cycle_error(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Ptr<_21dd2c0a3_SymbolBuilder>& _49643_target,jule::Ptr<_21eb49c8d_ImportInfo>& _49668_imp,_21c627dde_Token& _49687_error_token) {
	jule::Str _49717_message = jule::Str();
	_21dd30a9b_push_cycle_error(_self_, _self_,_49668_imp.get()._field_path,_49717_message);
	jule::Ptr<_21dd2c0a3_SymbolBuilder> _50117_owner = _self_.get()._field_owner;
	jule::Ptr<_21dd2c0a3_SymbolBuilder> _50217_old = _self_;
	while ((_50117_owner.get()._field_owner != nullptr)) {
		{
			_21dd30a9b_push_cycle_error(_self_, _50217_old.get()._field_owner,_21c62eaa5_dir(_50217_old.get()._field_table.get()._field_file.ptr()),_49717_message);
			if (_50117_owner.get()._field_owner == _49643_target) {
				_21dd30a9b_push_cycle_error(_self_, _49643_target,_21c62eaa5_dir(_50117_owner.get()._field_table.get()._field_file.ptr()),_49717_message);
				goto _iter_end_2226a4086;
			}
			_50217_old=_50117_owner;
			_50117_owner=_50117_owner.get()._field_owner;
		}
	_iter_next_2226a4086:;
	}
	_iter_end_2226a4086:;
	_21dd2cba8_push_err(_self_.ptr(), _49687_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_49717_message)}));
}



inline jule::Bool _21dd31508_check_import_cycles(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Ptr<_21eb49c8d_ImportInfo> _51939_imp,jule::Ptr<_21c6460a5_UseDecl>& _51958_decl) {
	if (_51939_imp.get()._field_path == _21c62eaa5_dir(_self_.get()._field_table.get()._field_file.ptr())) {
		_21dd2cba8_push_err(_self_.ptr(), _51958_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(_21dd305c3_get_as_link_path(_self_, _51939_imp.get()._field_path))}));
		return false;
	}
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	}
	if (_21c62eaa5_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_21dd31074_push_cross_cycle_error(_self_, _self_.get()._field_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	jule::Ptr<_21dd2c0a3_SymbolBuilder> _53417_owner = _self_.get()._field_owner;
	_julec_label_iter:;
	if (_21c62eaa5_dir(_53417_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_21dd31074_push_cross_cycle_error(_self_, _53417_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	if ((_53417_owner.get()._field_owner != nullptr)) {
		_53417_owner=_53417_owner.get()._field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline void _21dd31a25_check_package_accessibility(_21dd2c0a3_SymbolBuilder* _self_,jule::Ptr<_21c6460a5_UseDecl>& _55547_decl,jule::Str& _55564_mod,jule::Str& _55575_path) {
	if ((_21eb471a8_Importer_mptr_data[((*_self_)._field_importer).type_offset]._21eb46020_get_mod_path((*_self_)._field_importer) != _55564_mod) && _2368babd4_contains(_55575_path,jule::Str("internal", 8))) {
		_21dd2cba8_push_err(&(*_self_), _55547_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _21dd31e98_import_package(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Ptr<_21eb49c8d_ImportInfo>& _56139_imp,jule::Ptr<_21c6460a5_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp.get()._field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	}
	jule::Ptr<_21eb49c8d_ImportInfo> _56617_port = _21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb4677e_get_import(_self_.get()._field_importer, _56139_imp.get()._field_path);
	if ((_56617_port != nullptr)) {
		_56139_imp.get()._field_package=_56617_port.get()._field_package;
		_56139_imp.get()._field_duplicate=true;
		jule::Str _57117_old_mod = _21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb46020_get_mod_path(_self_.get()._field_importer);
		_21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb45c89_set_mod_path(_self_.get()._field_importer, _21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb463c7_mod_by_id(_self_.get()._field_importer, _56139_imp.get()._field_mod_id));
		_21dd31a25_check_package_accessibility(_self_.ptr(), _56162_decl,_57117_old_mod,_56617_port.get()._field_path);
		_21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb45c89_set_mod_path(_self_.get()._field_importer, _57117_old_mod);
	} else {
		if ((!(_21dd31508_check_import_cycles(_self_, _56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		}
		jule::Str _58017_old_mod = _21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb46020_get_mod_path(_self_.get()._field_importer);
		__JULE_DEFER({
			_21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb45c89_set_mod_path(_self_.get()._field_importer, _58017_old_mod);
		});
		if (_56139_imp.get()._field_std) {
			_21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb45c89_set_mod_path(_self_.get()._field_importer, _21c35922a_PATH_STDLIB);
		}
		jule::Slice<jule::Ptr<_21c4cc2b0_Ast>> _58522_asts;
		jule::Slice<_21c348b32_Log> _58532_errors;
		std::tie(_58522_asts,_58532_errors) = _21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb46c13_import_package(_self_.get()._field_importer, _56139_imp.get()._field_path,(!(_56139_imp.get()._field_std)));
		if ((_58532_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
			_56180_ok = false;
			return _56180_ok;
		}
		_21dd31a25_check_package_accessibility(_self_.ptr(), _56162_decl,_58017_old_mod,_56139_imp.get()._field_path);
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_2226b8771:;
			if (it != expr.end()) {
				jule::Ptr<_21c4cc2b0_Ast> _2226b909b_ast = *it;
				{
					jule::Ptr<_21ebb6c0b_SymbolTable> _59425_table = nullptr;
					std::tie(_59425_table,_58532_errors) = _21ec248d4_build_symbols(_2226b909b_ast,_self_.get()._field_importer,_self_);
					if ((_58532_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
						_21dd2d181_push_err_text(_self_.ptr(), _56139_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56139_imp.get()._field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					}
					_56139_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56139_imp.get()._field_package.get()._field_files,1);_56139_imp.get()._field_package.get()._field_files.__push(_59425_table);
				}
				_iter_next_2226b8771:;
				++it;
				goto _iter_begin_2226b8771;
			}
			_iter_end_2226b8771:;
		}
	}
	_21dd3021b_impl_import_selections(_self_.ptr(), _56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21dd32350_import_use_decl(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_,jule::Ptr<_21c6460a5_UseDecl>& _61340_decl) {
	jule::Ptr<_21eb49c8d_ImportInfo> _61417_imp = _21dd2e935_build_import(_self_, _61340_decl);
	if ((_61417_imp == nullptr)) {
		return nullptr;
	}
	jule::Bool _62017_ok = _21dd2ed31_check_duplicate_use_decl(_self_.ptr(), _61417_imp);
	if ((!(_62017_ok))) {
		return nullptr;
	}
	_62017_ok=_21dd31e98_import_package(_self_, _61417_imp,_61340_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61417_imp);
	if (_62017_ok) {
		_21eb471a8_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._21eb47032_imported(_self_.get()._field_importer, _61417_imp);
		return _61417_imp;
	}
	return nullptr;
}



inline void _21dd32592_import_use_decls(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_2226c105e:;
		if (it != expr.end()) {
			jule::Ptr<_21c6460a5_UseDecl> _2226c10d6_decl = *it;
			{
				_21dd32350_import_use_decl(_self_, _2226c10d6_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_2226c105e;
				}
			}
			_iter_next_2226c105e:;
			++it;
			goto _iter_begin_2226c105e;
		}
		_iter_end_2226c105e:;
	}
}



inline void _21dd328b1_append_node(_21dd2c0a3_SymbolBuilder* _self_,_21c523c63_Node& _64535_node) {
	{
		auto &_match_expr{ _64535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c64866d_Impl>>()) {
			_case_begin_2226c299a:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_21dd2b910_build_impl(_64535_node._field_data.operator jule::Ptr<_21c64866d_Impl>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c644ea5_TypeAliasDecl>>()) {
			_case_begin_2226c2a11:;
			{
				jule::Ptr<_21ec05288_TypeAlias> _65021_ta = _21dd28632_build_type_alias(_64535_node._field_data.operator jule::Ptr<_21c644ea5_TypeAliasDecl>());
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65021_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c647c11_StructDecl>>()) {
			_case_begin_2226c2a77:;
			{
				jule::Ptr<_21dd03266_Struct> _65321_srct = _21dd290a0_build_struct(_64535_node._field_data.operator jule::Ptr<_21c647c11_StructDecl>());
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65321_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c641633_FnDecl>>()) {
			_case_begin_2226c2add:;
			{
				jule::Ptr<_21dd19249_Fn> _65621_f = _21dd29d70_build_fn(_64535_node._field_data.operator jule::Ptr<_21c641633_FnDecl>());
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c6481b7_TraitDecl>>()) {
			_case_begin_2226c358e:;
			{
				jule::Ptr<_21deee929_Trait> _65921_t = _21dd2a48b_build_trait(_64535_node._field_data.operator jule::Ptr<_21c6481b7_TraitDecl>());
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_65921_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c64205c_VarDecl>>()) {
			_case_begin_2226c3605:;
			{
				jule::Ptr<_21eb75615_Var> _66221_v = _21dd2b2e4_build_var(_64535_node._field_data.operator jule::Ptr<_21c64205c_VarDecl>());
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66221_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c646d0e_EnumDecl>>()) {
			_case_begin_2226c366b:;
			{
				jule::Ptr<_21ddb6aee_Enum> _66521_e = _21dd2adb5_build_enum(_64535_node._field_data.operator jule::Ptr<_21c646d0e_EnumDecl>());
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66521_e);
			}
		}
		else {
			_case_begin_2226c2934:;
			{
				_21dd2cba8_push_err(&(*_self_), _64535_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_2226c28ce:;
	}
}



inline void _21dd32b03_append_nodes(_21dd2c0a3_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_2226cb72e:;
		if (it != expr.end()) {
			_21c523c63_Node _2226cb92c_node = *it;
			{
				_21dd328b1_append_node(&(*_self_), _2226cb92c_node);
			}
			_iter_next_2226cb72e:;
			++it;
			goto _iter_begin_2226cb72e;
		}
		_iter_end_2226cb72e:;
	}
}



inline void _21dd32e22_push_directive_pass(_21dd2c0a3_SymbolBuilder* _self_,jule::Ptr<_21c525490_Directive>& _67843_d) {
	if ((_67843_d.get()._field_args.len() == 0LL)) {
		_21dd2cba8_push_err(&(*_self_), _67843_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_67843_d.get()._field_args.len() > 1LL)) {
		_21c627dde_Token _68317_arg = _67843_d.get()._field_args[1LL];
		_21dd2cba8_push_err(&(*_self_), _68317_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_21c627dde_Token _68713_arg = _67843_d.get()._field_args[0LL];
	if (_68713_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_21dd2cba8_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_68713_arg._field_kind[0LL] != '\"') {
		_21dd2cba8_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_21dd27b09_Pass(_67843_d.get()._field_tag,_68713_arg._field_kind.slice(1LL,(_68713_arg._field_kind.len() - 1LL))));
}



inline void _21dd33164_append_top_directives(_21dd2c0a3_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_2226d2e2d:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _2226d4171_d = *it;
			{
				{
					auto &_match_expr{ _2226d4171_d.get()._field_tag._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_2226d4539:;
						{
							_21dd32e22_push_directive_pass(&(*_self_), _2226d4171_d);
						}
					}
					_match_end_2226d4935:;
				}
			}
			_iter_next_2226d2e2d:;
			++it;
			goto _iter_begin_2226d2e2d;
		}
		_iter_end_2226d2e2d:;
	}
}



inline void _21dd333a6_build(jule::Ptr<_21dd2c0a3_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_21ebb6c0b_SymbolTable>(_21ebb6c0b_SymbolTable(_self_.get()._field_ast.get()._field_file,jule::Slice<_21dd27b09_Pass>(),jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>>(),jule::Slice<jule::Ptr<_21eb75615_Var>>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Slice<jule::Ptr<_21dd03266_Struct>>(),jule::Slice<jule::Ptr<_21dd19249_Fn>>(),jule::Slice<jule::Ptr<_21deee929_Trait>>(),jule::Slice<jule::Ptr<_21ddb6aee_Enum>>(),jule::Slice<jule::Ptr<_21de24992_Impl>>()));
	_21dd33164_append_top_directives(_self_.ptr());
	_21dd32592_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	_21dd32b03_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21dd2c0a3_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21e0e6966_is_trait_impl(_21de24992_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _21e134c4b_is_struct_impl(_21de24992_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21de24992_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb1472a_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _235bb50ab_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2c28c_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2c4ac_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2c6cc_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eb03a05_is_while_next(_21eb2c8ec_WhileIter* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2c8ec_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2cb1c_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2cd3c_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2d05c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2d27c_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2d49c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2d6bc_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2db0c_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eb04b38_is_generic_type_match(_21eb2dd2c_Match* _self_) {
	return ((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2dd2c_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eb062bb_is_default(_21eb2e27d_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2e27d_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2e49d_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2e6bd_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2eb0d_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eabd481_find_package(_21eb2ed2d_ScopeChecker* _self_,jule::Str _41735_ident) {
	return _21eb549e0_find_package((*_self_)._field_s.ptr(), _41735_ident);
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb3004d_select_package(_21eb2ed2d_ScopeChecker* _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _42737_selector) {
	return _21eb54d97_select_package((*_self_)._field_s.ptr(), _42737_selector);
}



inline jule::Ptr<_21eb75615_Var> _21eb301b3_find_var(_21eb2ed2d_ScopeChecker* _self_,jule::Str _43831_ident,jule::Bool _43843_cpp_linked) {
	
	jule::Ptr<_21eb75615_Var> _44117_v = _21ebb988a___find_var((*_self_)._field_table.ptr(), _43831_ident,_43843_cpp_linked,true);
	if ((_44117_v != nullptr)) {
		return _44117_v;
	}
	jule::Ptr<_21eb2ed2d_ScopeChecker> _44617_parent = (*_self_)._field_parent;
	while ((_44617_parent != nullptr)) {
		{
			_44117_v=_21ebb988a___find_var(_44617_parent.get()._field_table.ptr(), _43831_ident,_43843_cpp_linked,true);
			if ((_44117_v != nullptr)) {
				return _44117_v;
			}
			_44617_parent=_44617_parent.get()._field_parent;
		}
	_iter_next_2226ea709:;
	}
	_iter_end_2226ea709:;
	return _21eb5532b_find_var((*_self_)._field_s.ptr(), _43831_ident,_43843_cpp_linked);
}



inline jule::Ptr<_21ec05288_TypeAlias> _21eb30328_find_type_alias(_21eb2ed2d_ScopeChecker* _self_,jule::Str _46538_ident,jule::Bool _46550_cpp_linked) {
	
	jule::Ptr<_21ec05288_TypeAlias> _46817_ta = _21ebb9deb___find_type_alias((*_self_)._field_table.ptr(), _46538_ident,_46550_cpp_linked,true);
	if ((_46817_ta != nullptr)) {
		return _46817_ta;
	}
	jule::Ptr<_21eb2ed2d_ScopeChecker> _47317_parent = (*_self_)._field_parent;
	while ((_47317_parent != nullptr)) {
		{
			_46817_ta=_21ebb9deb___find_type_alias(_47317_parent.get()._field_table.ptr(), _46538_ident,_46550_cpp_linked,true);
			if ((_46817_ta != nullptr)) {
				return _46817_ta;
			}
			_47317_parent=_47317_parent.get()._field_parent;
		}
	_iter_next_222704c96:;
	}
	_iter_end_222704c96:;
	return _21eb557b0_find_type_alias((*_self_)._field_s.ptr(), _46538_ident,_46550_cpp_linked);
}



inline jule::Ptr<_21dd03266_Struct> _21eb3048d_find_struct(_21eb2ed2d_ScopeChecker* _self_,jule::Str _49034_ident,jule::Bool _49046_cpp_linked) {
	return _21eb55c44_find_struct((*_self_)._field_s.ptr(), _49034_ident,_49046_cpp_linked);
}



inline jule::Ptr<_21dd19249_Fn> _21eb307ac_find_fn(_21eb2ed2d_ScopeChecker* _self_,jule::Str _49930_ident,jule::Bool _49942_cpp_linked) {
	return _21eb561c8_find_fn((*_self_)._field_s.ptr(), _49930_ident,_49942_cpp_linked);
}



inline jule::Ptr<_21deee929_Trait> _21eb30b64_find_trait(_21eb2ed2d_ScopeChecker* _self_,jule::Str _50833_ident) {
	return _21eb56580_find_trait((*_self_)._field_s.ptr(), _50833_ident);
}



inline jule::Ptr<_21ddb6aee_Enum> _21eb3101b_find_enum(_21eb2ed2d_ScopeChecker* _self_,jule::Str _51732_ident) {
	return _21eb56937_find_enum((*_self_)._field_s.ptr(), _51732_ident);
}



inline jule::Bool _21eb313b2_is_unsafe(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _52517_scope = _self_;
	_julec_label_iter:;
	if (_52517_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	}
	if ((_52517_scope.get()._field_parent != nullptr)) {
		_52517_scope=_52517_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _21eb3168c_is_root(_21eb2ed2d_ScopeChecker* _self_) {
	return ((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr);
}



inline void _21eb318ce_stop(_21eb2ed2d_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _21eb31ba9_stopped(_21eb2ed2d_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _21eb31e84_is_deferred(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _55817_scope = _self_;
	_julec_label_iter:;
	if (_55817_scope.get()._field_scope.get()._field_deferred) {
		return true;
	}
	if ((_55817_scope.get()._field_parent != nullptr)) {
		_55817_scope=_55817_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb3225e_get_root(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _57617_root = _self_;
	while ((_57617_root.get()._field_parent != nullptr) && (_57617_root.get()._field_owner == nullptr)) {
		{
			_57617_root=_57617_root.get()._field_parent;
		}
	_iter_next_222714701:;
	}
	_iter_end_222714701:;
	return _57617_root;
}



inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb32539_get_hard_root(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _58617_root = _self_;
	while ((_58617_root.get()._field_parent != nullptr)) {
		{
			_58617_root=_58617_root.get()._field_parent;
		}
	_iter_next_222715ea5:;
	}
	_iter_end_222715ea5:;
	return _58617_root;
}



inline jule::Ptr<_21eb2d27c_Label> _21eb328e1_find_label(_21eb2ed2d_ScopeChecker* _self_,jule::Str _59629_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_222717638:;
		if (it != expr.end()) {
			jule::Any _2227176b0_st = *it;
			{
				{
					auto &_match_expr{ _2227176b0_st };
					
					if (_match_expr.type_is<jule::Ptr<_21eb2d27c_Label>>()) {
						_case_begin_222717d64:;
						{
							jule::Ptr<_21eb2d27c_Label> _60025_label = _2227176b0_st.operator jule::Ptr<_21eb2d27c_Label>();
							if (_60025_label.get()._field_ident == _59629_ident) {
								return _60025_label;
							}
						}
					}
					_match_end_222717d0e:;
				}
			}
			_iter_next_222717638:;
			++it;
			goto _iter_begin_222717638;
		}
		_iter_end_222717638:;
	}
	return nullptr;
}



inline jule::Ptr<_21eb2e8dd_ScopeLabel> _21eb32c98_find_label_scope(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Str _61236_ident) {
	jule::Ptr<_21eb2e8dd_ScopeLabel> _61317_label = _21eb33150_find_label_all(_self_.ptr(), _61236_ident);
	if ((_61317_label != nullptr) && (_61317_label.get()._field_scope == _self_)) {
		return _61317_label;
	}
	return nullptr;
}



inline jule::Ptr<_21eb2e8dd_ScopeLabel> _21eb33150_find_label_all(_21eb2ed2d_ScopeChecker* _self_,jule::Str _62433_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_22271ab9c:;
		if (it != expr.end()) {
			jule::Ptr<_21eb2e8dd_ScopeLabel> _22271b263_lbl = *it;
			{
				if (_22271b263_lbl.get()._field_label.get()._field_ident == _62433_ident) {
					return _22271b263_lbl;
				}
			}
			_iter_next_22271ab9c:;
			++it;
			goto _iter_begin_22271ab9c;
		}
		_iter_end_22271ab9c:;
	}
	return nullptr;
}



inline jule::Bool _21eb335d4_is_duplicated_ident(_21eb2ed2d_ScopeChecker* _self_,jule::U64 _63638_itself,jule::Str _63655_ident) {
	jule::Ptr<_21eb75615_Var> _63713_v = _21eb301b3_find_var(&(*_self_), _63655_ident,false);
	if ((_63713_v != nullptr) && (static_cast<jule::U64>(_63713_v) != _63638_itself)) {
		if ((_63713_v.get()._field_scope == nullptr)) {
			return false;
		}
		return (_63713_v.get()._field_scope == (*_self_)._field_scope) || (!(_21eb56daa_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	jule::Ptr<_21ec05288_TypeAlias> _64513_ta = _21eb30328_find_type_alias(&(*_self_), _63655_ident,false);
	if ((_64513_ta != nullptr) && (static_cast<jule::U64>(_64513_ta) != _63638_itself)) {
		if ((_64513_ta.get()._field_scope == nullptr)) {
			return false;
		}
		return (_64513_ta.get()._field_scope == (*_self_)._field_tree) || (!(_21eb56daa_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	return false;
}



inline void _21eb33903_check_var_decl(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c64205c_VarDecl> _65638_decl) {
	jule::Ptr<_21eb75615_Var> _65717_v = _21dd2b2e4_build_var(_65638_decl);
	_65717_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_65717_v);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_65717_v));
	});
	if (_21eb335d4_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_65717_v)),_65717_v.get()._field_ident)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _65717_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_65717_v.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_21eb318ce_stop(_self_.ptr());
		return;
	}
	_21eb669d0_check_var_decl(_self_.get()._field_s, _65717_v,jule::Trait<_21ec23a48_Lookup>(_self_, 0));
	if ((!(_21eb75d0d_is_type_inferred(_65717_v.ptr()))) && ((_65717_v.get()._field_kind == nullptr) || (_65717_v.get()._field_kind.get()._field_kind == nullptr))) {
		return;
	}
	_21eb6bb39_check_type_var(_self_.get()._field_s, _65717_v,jule::Trait<_21ec23a48_Lookup>(_self_, 0));
}



inline void _21eb33c22_check_type_alias_decl(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c644ea5_TypeAliasDecl> _68045_decl) {
	jule::Ptr<_21ec05288_TypeAlias> _68117_ta = _21dd28632_build_type_alias(_68045_decl);
	if (_21eb335d4_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_68117_ta)),_68117_ta.get()._field_ident)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _68117_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_68117_ta.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_21eb318ce_stop(_self_.ptr());
		return;
	}
	_21eb619ec_check_type_alias_decl(_self_.get()._field_s, _68117_ta,jule::Trait<_21ec23a48_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_68117_ta);
	if ((_68117_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_21eb318ce_stop(_self_.ptr());
	}
}



inline jule::Ptr<_21eb1472a_Scope> _21eb33eec_get_child(_21eb2ed2d_ScopeChecker* _self_) {
	return jule::new_ptr<_21eb1472a_Scope>(_21eb1472a_Scope((*_self_)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _21eb344c5_check_child_ssc(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6411e3_ScopeTree>& _70440_tree,jule::Ptr<_21eb1472a_Scope>& _70463_s,jule::Ptr<_21eb2ed2d_ScopeChecker>& _70479_ssc) {
	_70479_ssc.get()._field_parent=_self_;
	_21eb41d2e_check(_70479_ssc, _70440_tree,_70463_s);
}



inline jule::Ptr<_21eb1472a_Scope> _21eb34959_check_child_sc(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6411e3_ScopeTree>& _70939_tree,jule::Ptr<_21eb2ed2d_ScopeChecker>& _70962_ssc) {
	jule::Ptr<_21eb1472a_Scope> _71017_s = _21eb33eec_get_child(_self_.ptr());
	_21eb344c5_check_child_ssc(_self_, _70939_tree,_71017_s,_70962_ssc);
	return _71017_s;
}



inline jule::Ptr<_21eb1472a_Scope> _21eb34d11_check_child(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6411e3_ScopeTree>& _71536_tree) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _71617_ssc = _21eb42109_new_child_checker(_self_);
	return _21eb34959_check_child_sc(_self_, _71536_tree,_71617_ssc);
}



inline void _21eb35130_check_anon_scope(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6411e3_ScopeTree> _72040_tree) {
	jule::Ptr<_21eb1472a_Scope> _72117_s = _21eb34d11_check_child(_self_, _72040_tree);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_72117_s));
}



inline void _21eb3552b_process_error_call(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>& _72543_m,_21c627dde_Token _72574_err) {
	if (_21eb31e84_is_deferred(_self_)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _72574_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21eb2ed2d_ScopeChecker> _73017_root = _21eb3225e_get_root(_self_);
	if ((!(_73017_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _72574_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_72543_m.get()._field_func=_73017_root.get()._field_owner;
}



inline void _21eb3584a_check_expr(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c4d7b4a_Expr> _73834_expr) {
	jule::Ptr<_21ebc00aa_Eval> _73917_eval = _21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0));
	_73917_eval.get()._field_ignored=true;
	jule::Ptr<_21ebbd053_Data> _74117_d = _21ebe0718_eval_expr(_73917_eval, _73834_expr);
	if ((_74117_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _74117_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>>()) {
			_case_begin_22273e84c:;
			{
				jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel> _74821_m = _74117_d.get()._field_model.operator jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>();
				_21eb3552b_process_error_call(_self_, _74821_m,_73834_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74117_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd15597_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd158e9_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd0b23b_FnCallExprModel>>()) {
			_case_begin_22273e8b3:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74117_d));
			}
		}
		else {
			_case_begin_22273e3b8:;
			{
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _73834_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_22273e7c5:;
	}
}



inline void _21eb35b69_check_co_expr(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c4d892b_CoExpr> _76637_expr) {
	jule::Ptr<_21ebc00aa_Eval> _76717_eval = _21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0));
	_76717_eval.get()._field_ignored=true;
	jule::Ptr<_21ebbd053_Data> _76917_d = _21ebe0718_eval_expr(_76717_eval, _76637_expr.get()._field_expr);
	if ((_76917_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _76917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd0b23b_FnCallExprModel>>()) {
			_case_begin_22274669a:;
			{
				jule::Ptr<_21dd0b23b_FnCallExprModel> _77621_model = _76917_d.get()._field_model.operator jule::Ptr<_21dd0b23b_FnCallExprModel>();
				if (_77621_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_21eb576a2_push_err(_self_.get()._field_s.ptr(), _76637_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				_77621_model.get()._field_is_co=true;
				_21ebd5994_check_fn_of_concurrent_call(_76717_eval.ptr(), _77621_model.get()._field_func,_76637_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76917_d));
			}
		}
		else {
			_case_begin_2227454ac:;
			{
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _76637_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_22274591e:;
	}
}



inline jule::Ptr<_235bb50ab_If> _21eb36021_check_if(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c64413b_If> _79132_i) {
	jule::Ptr<_21eb1472a_Scope> _79217_s = _21eb34d11_check_child(_self_, _79132_i.get()._field_scope);
	jule::Ptr<_21ebbd053_Data> _79417_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _79132_i.get()._field_expr);
	if ((_79417_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21ec0b58b_Prim> _79917_prim = _21ec087b9_prim(_79417_d.get()._field_kind.ptr());
	if ((_79917_prim == nullptr) || (!(_21ec0e9e0_is_bool(_79917_prim.ptr())))) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _79132_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_235bb50ab_If>(_235bb50ab_If(_79417_d.get()._field_model,_79217_s));
}



inline jule::Ptr<_21eb2c28c_Else> _21eb363c8_check_else(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c64449e_Else> _81134_e) {
	return jule::new_ptr<_21eb2c28c_Else>(_21eb2c28c_Else(_21eb34d11_check_child(_self_, _81134_e.get()._field_scope)));
}



inline void _21eb366e7_check_conditional(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6448ab_Conditional> _81741_conditional) {
	jule::Ptr<_21eb2c4ac_Conditional> _81817_c = jule::new_ptr<_21eb2c4ac_Conditional>(_21eb2c4ac_Conditional());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_81817_c));
	_81817_c.get()._field_elifs=jule::Slice<jule::Ptr<_235bb50ab_If>>::alloc(0LL,static_cast<jule::I64>((_81741_conditional.get()._field_tail.len() + 1LL)));
	_81817_c.get()._field_elifs = jule::alloc_for_append(_81817_c.get()._field_elifs,1);_81817_c.get()._field_elifs.__push(_21eb36021_check_if(_self_, _81741_conditional.get()._field_head));
	{
		auto &expr = _81741_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_222754004:;
		if (it != expr.end()) {
			jule::Ptr<_21c64413b_If> _2227531bd_elif = *it;
			{
				_81817_c.get()._field_elifs = jule::alloc_for_append(_81817_c.get()._field_elifs,1);_81817_c.get()._field_elifs.__push(_21eb36021_check_if(_self_, _2227531bd_elif));
			}
			_iter_next_222754004:;
			++it;
			goto _iter_begin_222754004;
		}
		_iter_end_222754004:;
	}
	if ((_81741_conditional.get()._field_default != nullptr)) {
		_81817_c.get()._field_default=_21eb363c8_check_else(_self_, _81741_conditional.get()._field_default);
	}
}



inline jule::Ptr<_21eb1472a_Scope> _21eb36c58_check_iter_scope_sc(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::U64 _83339_it,jule::Ptr<_21c6411e3_ScopeTree> _83356_tree,jule::Ptr<_21eb2ed2d_ScopeChecker> _83378_ssc) {
	_83378_ssc.get()._field_it=_83339_it;
	return _21eb34959_check_child_sc(_self_, _83356_tree,_83378_ssc);
}



inline jule::Ptr<_21eb1472a_Scope> _21eb371dc_check_iter_scope(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::U64 _83836_it,jule::Ptr<_21c6411e3_ScopeTree>& _83854_tree) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _83917_ssc = _21eb42109_new_child_checker(_self_);
	return _21eb36c58_check_iter_scope_sc(_self_, _83836_it,_83854_tree,_83917_ssc);
}



inline void _21eb3750b_check_inf_iter(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6428ba_Iter>& _84339_it) {
	jule::Ptr<_21eb2c6cc_InfIter> _84417_kind = jule::new_ptr<_21eb2c6cc_InfIter>(_21eb2c6cc_InfIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84417_kind));
	_84417_kind.get()._field_scope=_21eb371dc_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_84417_kind)),_84339_it.get()._field_scope);
}



inline void _21eb3782a_check_while_iter(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6428ba_Iter>& _85141_it) {
	jule::Ptr<_21c642e3c_WhileKind> _85217_wh = _85141_it.get()._field_kind.operator jule::Ptr<_21c642e3c_WhileKind>();
	if ((_85217_wh.get()._field_expr == nullptr) && (_85217_wh.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_21eb3750b_check_inf_iter(_self_, _85141_it);
		return;
	}
	jule::Ptr<_21eb2c8ec_WhileIter> _85817_kind = jule::new_ptr<_21eb2c8ec_WhileIter>(_21eb2c8ec_WhileIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_85817_kind));
	_85817_kind.get()._field_scope=_21eb371dc_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_85817_kind)),_85141_it.get()._field_scope);
	if ((_85217_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_21ebbd053_Data> _86521_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _85217_wh.get()._field_expr);
		if ((_86521_d == nullptr)) {
			return;
		}
		jule::Ptr<_21ec0b58b_Prim> _87017_prim = _21ec087b9_prim(_86521_d.get()._field_kind.ptr());
		if ((_87017_prim == nullptr)) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_21ec0e9e0_is_bool(_87017_prim.ptr())))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_85817_kind.get()._field_expr=_86521_d.get()._field_model;
	}
	if (_21c64315c_is_while_next(_85217_wh.ptr())) {
		if ((!(_21eae6641_is_valid_ast_st_for_next_st(_85217_wh.get()._field_next)))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _89017_n = _self_.get()._field_scope.get()._field_stmts.len();
		_21eb4068a_check_node(_self_, _85217_wh.get()._field_next);
		if (_89017_n < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len()))) {
			jule::Any _89325_st = _self_.get()._field_scope.get()._field_stmts[_89017_n];
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_89017_n);
			if ((!(_21eae7224_is_valid_st_for_next_st(_89325_st)))) {
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_85817_kind.get()._field_next=_89325_st;
		}
	}
}



inline void _21eb37b49_check_range_iter(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6428ba_Iter>& _90441_it) {
	jule::Ptr<_21c643558_RangeKind> _90517_rang = _90441_it.get()._field_kind.operator jule::Ptr<_21c643558_RangeKind>();
	jule::Ptr<_21ebbd053_Data> _90717_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _90517_rang.get()._field_expr);
	if ((_90717_d == nullptr)) {
		return;
	}
	jule::Ptr<_21eb2cb1c_RangeIter> _91217_kind = jule::new_ptr<_21eb2cb1c_RangeIter>(_21eb2cb1c_RangeIter(_90717_d,jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21eb75615_Var>(),jule::Ptr<_21eb75615_Var>()));
	_21ebb2135_RangeChecker _91617_rc = _21ebb2135_RangeChecker(_self_,_90517_rang,_91217_kind,_90717_d);
	jule::Bool _92213_ok = _21ebb4049_check(&_91617_rc);
	if ((!(_92213_ok))) {
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_91217_kind));
	jule::Ptr<_21eb2ed2d_ScopeChecker> _92917_ssc = _21eb42109_new_child_checker(_self_);
	if ((_91217_kind.get()._field_key_a != nullptr)) {
		if ((!(_21eb56daa_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _21eb335d4_is_duplicated_ident(_self_.ptr(), 0LLU,_91217_kind.get()._field_key_a.get()._field_ident)) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _91217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_91217_kind.get()._field_key_a.get()._field_ident)}));
			_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92917_ssc.get()._field_table.get()._field_vars,1);_92917_ssc.get()._field_table.get()._field_vars.__push(_91217_kind.get()._field_key_a);
	}
	if ((_91217_kind.get()._field_key_b != nullptr)) {
		if ((!(_21eb56daa_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _21eb335d4_is_duplicated_ident(_self_.ptr(), 0LLU,_91217_kind.get()._field_key_b.get()._field_ident)) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _91217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_91217_kind.get()._field_key_b.get()._field_ident)}));
			_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92917_ssc.get()._field_table.get()._field_vars,1);_92917_ssc.get()._field_table.get()._field_vars.__push(_91217_kind.get()._field_key_b);
	}
	_91217_kind.get()._field_scope=_21eb36c58_check_iter_scope_sc(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_91217_kind)),_90441_it.get()._field_scope,_92917_ssc);
}



inline void _21eb37e68_check_iter(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6428ba_Iter> _95034_it) {
	if (_21c642ada_is_inf(_95034_it.ptr())) {
		_21eb3750b_check_inf_iter(_self_, _95034_it);
		return;
	}
	{
		auto &_match_expr{ _95034_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21c642e3c_WhileKind>>()) {
			_case_begin_2227752de:;
			{
				_21eb3782a_check_while_iter(_self_, _95034_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c643558_RangeKind>>()) {
			_case_begin_222776136:;
			{
				_21eb37b49_check_range_iter(_self_, _95034_it);
			}
		}
		else {
			_case_begin_222775be6:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_222775b91:;
	}
}



inline jule::Bool _21eb38320_check_valid_cont_label(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::U64 _96642_it) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _96717_scope = _self_;
	_julec_label_iter:;
	if (_96717_scope.get()._field_it == _96642_it) {
		return true;
	}
	if ((_96717_scope.get()._field_parent != nullptr)) {
		_96717_scope=_96717_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _21eb3871b_check_valid_break_label(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::U64 _98243_ptr) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _98317_scope = _self_;
	_julec_label_iter:;
	if (_98317_scope.get()._field_it == _98243_ptr) {
		return true;
	}
	if ((_98317_scope.get()._field_cse != 0LLU)) {
		jule::U64 _99117_mtch = static_cast<jule::U64>(((_21eb2e27d_Case*)(_98317_scope.get()._field_cse))->_field_owner);
		if (_99117_mtch == _98243_ptr) {
			return true;
		}
	}
	if ((_98317_scope.get()._field_parent != nullptr)) {
		_98317_scope=_98317_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_21eb2cd3c_ContSt> _21eb38ab2_check_cont_valid_scope(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c643c2e_ContSt> _100542_c) {
	if (_21eb31e84_is_deferred(_self_)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _100542_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_100542_c.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		return jule::new_ptr<_21eb2cd3c_ContSt>(_21eb2cd3c_ContSt());
	}
	jule::Ptr<_21eb2ed2d_ScopeChecker> _101517_scope = _self_;
	_julec_label_iter:;
	{
		
		if (((_101517_scope.get()._field_it == 0LLU) && (_101517_scope.get()._field_parent != nullptr)) && (_101517_scope.get()._field_owner == nullptr)) {
			_case_begin_22278011d:;
			{
				_101517_scope=_101517_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_101517_scope.get()._field_it != 0LLU)) {
			_case_begin_222780195:;
			{
				return jule::new_ptr<_21eb2cd3c_ContSt>(_21eb2cd3c_ContSt(_101517_scope.get()._field_it));
			}
		}
		_match_end_222780074:;
	}
	_21eb576a2_push_err(_self_.get()._field_s.ptr(), _100542_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _21eb38dd1_check_cont(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c643c2e_ContSt> _102930_c) {
	jule::Ptr<_21eb2cd3c_ContSt> _103017_cont = _21eb38ab2_check_cont_valid_scope(_self_, _102930_c);
	if ((_103017_cont == nullptr)) {
		return;
	}
	if (_102930_c.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		jule::Ptr<_21eb2e8dd_ScopeLabel> _103621_label = _21eac4c90_find_label_parent(_102930_c.get()._field_label._field_kind,_self_.get()._field_parent);
		if ((_103621_label == nullptr)) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
			return;
		}
		_103621_label.get()._field_used=true;
		if ((_103621_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_103621_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
			return;
		}
		jule::I64 _104917_i = (_103621_label.get()._field_pos + 1LL);
		if (_104917_i >= static_cast<jule::I64>(static_cast<jule::I64>(_103621_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _105325_st = _103621_label.get()._field_scope.get()._field_scope.get()._field_stmts[_104917_i];
			{
				auto &_match_expr{ _105325_st };
				
				if (_match_expr.type_is<jule::Ptr<_21eb2c6cc_InfIter>>()) {
					_case_begin_22278a6cd:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_21eb2c6cc_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_21eb2cb1c_RangeIter>>()) {
					_case_begin_22278a744:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_21eb2cb1c_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_21eb2c8ec_WhileIter>>()) {
					_case_begin_22278a7aa:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_21eb2c8ec_WhileIter>()));
					}
				}
				else {
					_case_begin_22278a5e0:;
					{
						_21eb576a2_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
					}
				}
				_match_end_22278a58a:;
			}
		}
	}
	if ((_103017_cont.get()._field_it != 0LLU)) {
		if ((!(_21eb38320_check_valid_cont_label(_self_, _103017_cont.get()._field_it)))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_103017_cont));
}



inline void _21eb39200_check_label(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640643_LabelSt> _107635_l) {
	if ((_21eb328e1_find_label(_self_.ptr(), _107635_l.get()._field_ident) != nullptr)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _107635_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_107635_l.get()._field_ident)}));
		return;
	}
	jule::Ptr<_21eb2d27c_Label> _108217_label = jule::new_ptr<_21eb2d27c_Label>(_21eb2d27c_Label(_107635_l.get()._field_ident));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_108217_label));
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_21eb2e8dd_ScopeLabel>>({jule::new_ptr<_21eb2e8dd_ScopeLabel>(_21eb2e8dd_ScopeLabel(_107635_l.get()._field_token,_108217_label,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL))),_self_,jule::Bool()))}));
}



inline void _21eb3951e_push_goto(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640863_GotoSt> _109533_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_21eb2d49c_GotoSt>(_21eb2d49c_GotoSt(_109533_gt.get()._field_label._field_kind))));
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_21eb2eb0d_ScopeGoto>>({jule::new_ptr<_21eb2eb0d_ScopeGoto>(_21eb2eb0d_ScopeGoto(_109533_gt,_self_,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL)))))}));
}



inline void _21eb3983d_check_postfix(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640ec3_AssignSt> _110737_a) {
	if ((_110737_a.get()._field_left.len() > 1LL)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21c4d7b4a_Expr> _111317_expr = _110737_a.get()._field_left[0LL].get()._field_expr;
	jule::Ptr<_21ebbd053_Data> _111417_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _111317_expr);
	if ((_111417_d == nullptr)) {
		return;
	}
	_21eae350b_check_assign(_self_.get()._field_s,_111417_d,nullptr,_110737_a.get()._field_setter);
	if ((_21ec08d6e_ptr(_111417_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21ec14275_Ptr> _112221_ptr = _21ec08d6e_ptr(_111417_d.get()._field_kind.ptr());
		if (_21ec14dbe_is_unsafe(_112221_ptr.ptr())) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110737_a.get()._field_setter._field_kind),jule::Any(_21ec06641_to_str(_111417_d.get()._field_kind.ptr()))}));
			return;
		}
	} else {
		if ((_21ec087b9_prim(_111417_d.get()._field_kind.ptr()) == nullptr) || (!(_21eb2b896_is_num(_21ec087b9_prim(_111417_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110737_a.get()._field_setter._field_kind),jule::Any(_21ec06641_to_str(_111417_d.get()._field_kind.ptr()))}));
			return;
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_21eb2d6bc_Postfix>(_21eb2d6bc_Postfix(_111417_d.get()._field_model,_110737_a.get()._field_setter._field_kind))));
}



inline jule::Bool _21eb39be5_is_new_assign_ident(_21eb2ed2d_ScopeChecker* _self_,jule::Str _114038_ident) {
	if (_21c62abc2_is_ignore_ident(_114038_ident) || _114038_ident.empty()) {
		return false;
	}
	return _21ebba380_def_by_ident((*_self_)._field_table.ptr(), _114038_ident,false) == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _21eb3a29a_check_structure_assign_op(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21dd06742_StructIns>& _114850_s,jule::Ptr<_21c640ec3_AssignSt>& _114870_a,jule::Ptr<_21ebbd053_Data>& _114889_r) {
	jule::Ptr<_21dd1cc42_FnIns> _115117_overload = nullptr;
	{
		auto &_match_expr{ _114870_a.get()._field_setter._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_2227a51cb:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_2227a5242:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_2227a52a8:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_2227a531e:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_2227a6661:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_2227a66c7:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_2227a673d:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_2227a67a4:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_2227a69c4:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_2227a6a3a:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_2227a4b7b:;
			{
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _114870_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114870_a.get()._field_setter._field_kind),jule::Any(_21dd06b60_to_str(_114850_s.ptr()))}));
				return false;
			}
		}
		_match_end_2227a50cc:;
	}
	if ((_115117_overload == nullptr)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _114870_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114870_a.get()._field_setter._field_kind),jule::Any(_21dd06b60_to_str(_114850_s.ptr()))}));
		return false;
	}
	jule::Ptr<_21dd1badc_ParamIns> _118317_p = _115117_overload.get()._field_params[1LL];
	return _21eb5dbe7_check_assign_type(_self_.get()._field_s, _118317_p.get()._field_decl.get()._field_reference,_118317_p.get()._field_kind,_114889_r,_114870_a.get()._field_setter);
}



inline void _21eb3a5a8_check_single_assign(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640ec3_AssignSt>& _118744_a) {
	jule::Ptr<_21ebbd053_Data> _118817_l = nullptr;
	if ((!(_21c62abc2_is_ignore_ident(_118744_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_21c4d7b4a_Expr> _119121_expr = _118744_a.get()._field_left[0LL].get()._field_expr;
		_118817_l=_21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _119121_expr);
		if ((_118817_l == nullptr)) {
			return;
		}
	}
	jule::Ptr<_21ebc00aa_Eval> _119817_eval = (((_118817_l != nullptr)) ? (_21eb5d202_evalp(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0),_118817_l.get()._field_kind)) : (_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0))));
	_119817_eval.get()._field_unsafety=_21eb313b2_is_unsafe(_self_);
	jule::Ptr<_21ebbd053_Data> _120417_r = _21ebe0718_eval_expr(_119817_eval, _118744_a.get()._field_right);
	if ((_120417_r == nullptr)) {
		return;
	}
	if ((_118817_l == nullptr)) {
		if (_21ec075a9_void(_120417_r.get()._field_kind.ptr())) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _118744_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_120417_r));
		return;
	}
	if ((!(_21eae350b_check_assign(_self_.get()._field_s,_118817_l,_120417_r,_118744_a.get()._field_setter)))) {
		return;
	}
	if ((_21ec0a634_tup(_120417_r.get()._field_kind.ptr()) != nullptr)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _118744_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21dd08854_OperandExprModel> _122617_lm = jule::new_ptr<_21dd08854_OperandExprModel>(_21dd08854_OperandExprModel(_118817_l.get()._field_kind,_118817_l.get()._field_model));
	jule::Ptr<_21dd08854_OperandExprModel> _123017_rm = jule::new_ptr<_21dd08854_OperandExprModel>(_21dd08854_OperandExprModel(_120417_r.get()._field_kind,_120417_r.get()._field_model));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_21eb2d8dc_Assign>(_21eb2d8dc_Assign(_122617_lm,_123017_rm,_118744_a.get()._field_setter))));
	if ((_118744_a.get()._field_setter._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_21dd06742_StructIns> _123721_strct = _21ec09ca4_strct(_118817_l.get()._field_kind.ptr());
		if ((_123721_strct != nullptr)) {
			_21eb3a29a_check_structure_assign_op(_self_, _123721_strct,_118744_a,_120417_r);
			return;
		}
		_118744_a.get()._field_setter._field_kind=_118744_a.get()._field_setter._field_kind.slice(0LL,(_118744_a.get()._field_setter._field_kind.len() - 1LL));
		_21ebe7de6_BinaryEval _124421_solver = static__21ebe88ec_new(_119817_eval,_118744_a.get()._field_setter);
		_120417_r=_21ebee260_solve_explicit(&_124421_solver, _118817_l,_120417_r);
		if ((_120417_r == nullptr)) {
			return;
		}
		_118744_a.get()._field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_21eba6778_AssignTypeChecker _125317_checker = _21eba6778_AssignTypeChecker(_self_.get()._field_s,_118817_l.get()._field_kind,_120417_r,_118744_a.get()._field_setter);
	if (_21eba7bec_check(&_125317_checker)) {
		_123017_rm.get()._field_model=_120417_r.get()._field_model;
		_122617_lm.get()._field_model=_118817_l.get()._field_model;
	}
}



inline void _21eb3aca1___process_end_part_of_multi_assign(_21eb2ed2d_ScopeChecker* _self_,jule::Ptr<_21eb2db0c_MultiAssign> _126557_st,jule::Ptr<_21c640ec3_AssignSt> _126613_a,jule::Ptr<_21c640ca3_AssignLeft> _126631_lexpr,jule::Ptr<_21ebbd053_Data> _126655_l,jule::Ptr<_21ebbd053_Data> _126669_r) {
	if (_21c62abc2_is_ignore_ident(_126631_lexpr.get()._field_ident)) {
		if (_21ec075a9_void(_126669_r.get()._field_kind.ptr())) {
			_21eb576a2_push_err((*_self_)._field_s.ptr(), _126613_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_126557_st.get()._field_l = jule::alloc_for_append(_126557_st.get()._field_l,1);_126557_st.get()._field_l.__push(jule::Any(nullptr));
		return;
	}
	if (_126613_a.get()._field_declarative && _21eb39be5_is_new_assign_ident(&(*_self_), _126631_lexpr.get()._field_ident)) {
		if (_21eb335d4_is_duplicated_ident(&(*_self_), 0LLU,_126631_lexpr.get()._field_ident)) {
			_21eb576a2_push_err((*_self_)._field_s.ptr(), _126631_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126631_lexpr.get()._field_ident)}));
			_21eb57a9d_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_21eb318ce_stop(&(*_self_));
			return;
		}
		jule::Ptr<_21eb75615_Var> _128521_v = jule::new_ptr<_21eb75615_Var>(_21eb75615_Var((*_self_)._field_scope,_126631_lexpr.get()._field_token,_126631_lexpr.get()._field_ident,jule::Bool(),jule::Bool(),_126631_lexpr.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_126631_lexpr.get()._field_reference,jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::new_ptr<_21ebbe362_Value>(_21ebbe362_Value(_126613_a.get()._field_right,_126669_r)),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21eb74306_IterRelation>(),jule::Slice<jule::Ptr<_21eb75615_Var>>()));
		_21eb6b73d_check_var((*_self_)._field_s, _128521_v);
		_126557_st.get()._field_l = jule::alloc_for_append(_126557_st.get()._field_l,1);_126557_st.get()._field_l.__push(jule::Any(_128521_v));
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_128521_v);
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_128521_v));
		return;
	}
	if (_126631_lexpr.get()._field_mutable || _126631_lexpr.get()._field_reference) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _126631_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126631_lexpr.get()._field_ident)}));
		_21eb57a9d_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_21eae350b_check_assign((*_self_)._field_s,_126655_l,_126669_r,_126613_a.get()._field_setter)))) {
		return;
	}
	
	_21eb6117d_check_validity_for_init_expr((*_self_)._field_s, _126655_l.get()._field_mutable,false,_126655_l.get()._field_kind,_126669_r,_126613_a.get()._field_setter);
	_21eba6778_AssignTypeChecker _132017_checker = _21eba6778_AssignTypeChecker((*_self_)._field_s,_126655_l.get()._field_kind,_126669_r,_126613_a.get()._field_setter);
	_21eba7bec_check(&_132017_checker);
	_126557_st.get()._field_l = jule::alloc_for_append(_126557_st.get()._field_l,1);_126557_st.get()._field_l.__push(_126655_l.get()._field_model);
}



inline void _21eb3b08c_check_ret_multi_assign(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640ec3_AssignSt>& _133147_a) {
	jule::Ptr<_21ebbd053_Data> _133217_rd = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _133147_a.get()._field_right);
	if ((_133217_rd == nullptr)) {
		return;
	}
	jule::Slice<jule::Ptr<_21ebbd053_Data>> _133717_r = _21eadccb9_get_datas_from_tuple_data(_133217_rd);
	{
		
		if (_133147_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_133717_r.len()))) {
			_case_begin_2227d1d40:;
			{
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _133147_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_133147_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_133717_r.len()))) {
			_case_begin_2227d1db7:;
			{
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _133147_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_2227d1cda:;
	}
	jule::Ptr<_21eb2db0c_MultiAssign> _134917_st = jule::new_ptr<_21eb2db0c_MultiAssign>(_21eb2db0c_MultiAssign(jule::Slice<jule::Any>(),_133217_rd.get()._field_model));
	if ((_21ec0a634_tup(_133217_rd.get()._field_kind.ptr()) == nullptr)) {
		_134917_st.get()._field_r=jule::Any(jule::new_ptr<_21dd10b03_TupleExprModel>(_21dd10b03_TupleExprModel(_133717_r)));
	}
	{
		auto &expr = _133147_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_2227d5b24:;
		if (it != expr.end()) {
			jule::I64 _2227d5b68_i = it - expr.begin();
			{
				jule::Ptr<_21c640ca3_AssignLeft> _135821_lexpr = _133147_a.get()._field_left[_2227d5b68_i];
				jule::Ptr<_21ebbd053_Data> _135921_l = nullptr;
				if ((!(_21c62abc2_is_ignore_ident(_135821_lexpr.get()._field_ident))) && ((!(_133147_a.get()._field_declarative)) || (!(_21eb39be5_is_new_assign_ident(_self_.ptr(), _135821_lexpr.get()._field_ident))))) {
					_135921_l=_21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _135821_lexpr.get()._field_expr);
					if ((_135921_l == nullptr)) {
						goto _iter_next_2227d5b24;
					}
				}
				_21eb3aca1___process_end_part_of_multi_assign(_self_.ptr(), _134917_st,_133147_a,_135821_lexpr,_135921_l,_133717_r[_2227d5b68_i]);
			}
			_iter_next_2227d5b24:;
			++it;
			_2227d5b68_i++;
			goto _iter_begin_2227d5b24;
		}
		_iter_end_2227d5b24:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_134917_st));
}



inline void _21eb3b3ab_check_multi_assign(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640ec3_AssignSt>& _137543_a) {
	{
		auto &_match_expr{ _137543_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21c63dc90_FnCallExpr>>()) {
			_case_begin_2227da772:;
			{
				_21eb3b08c_check_ret_multi_assign(_self_, _137543_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d870b_UnsafeExpr>>()) {
			_case_begin_2227da7d8:;
			{
				{
					auto &_match_expr{ _137543_a.get()._field_right.get()._field_kind.operator jule::Ptr<_21c4d870b_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21c63dc90_FnCallExpr>>()) {
						_case_begin_2227dbdb1:;
						{
							_21eb3b08c_check_ret_multi_assign(_self_, _137543_a);
							return;
						}
					}
					_match_end_2227dbd5b:;
				}
			}
		}
		_match_end_2227da673:;
	}
	jule::Slice<jule::Any> _138817_right = _21eae17e5_get_expr_models(_137543_a.get()._field_right.get()._field_kind);
	{
		
		if (_137543_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_138817_right.len()))) {
			_case_begin_2227dcc80:;
			{
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _137543_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_137543_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_138817_right.len()))) {
			_case_begin_2227dcce6:;
			{
				_21eb576a2_push_err(_self_.get()._field_s.ptr(), _137543_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_2227dcba3:;
	}
	jule::Ptr<_21dd10b03_TupleExprModel> _139917_right_tuple = jule::new_ptr<_21dd10b03_TupleExprModel>(_21dd10b03_TupleExprModel());
	jule::Ptr<_21eb2db0c_MultiAssign> _140117_st = jule::new_ptr<_21eb2db0c_MultiAssign>(_21eb2db0c_MultiAssign(jule::Slice<jule::Any>(),jule::Any(jule::Any(_139917_right_tuple))));
	{
		auto &expr = _137543_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_2227e116d:;
		if (it != expr.end()) {
			jule::I64 _2227e128e_i = it - expr.begin();
			{
				jule::Ptr<_21c640ca3_AssignLeft> _140621_lexpr = _137543_a.get()._field_left[_2227e128e_i];
				jule::Ptr<_21ebbd053_Data> _140721_l = nullptr;
				if ((!(_21c62abc2_is_ignore_ident(_140621_lexpr.get()._field_ident))) && ((!(_137543_a.get()._field_declarative)) || (!(_21eb39be5_is_new_assign_ident(_self_.ptr(), _140621_lexpr.get()._field_ident))))) {
					_140721_l=_21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _140621_lexpr.get()._field_expr);
					if ((_140721_l == nullptr)) {
						goto _iter_next_2227e116d;
					}
				}
				jule::Ptr<_21c4d7b4a_Expr> _141721_expr = jule::new_ptr<_21c4d7b4a_Expr>(_21c4d7b4a_Expr(_137543_a.get()._field_right.get()._field_token,jule::Bool(),_138817_right[_2227e128e_i]));
				jule::Ptr<_21ebc00aa_Eval> _142121_eval = (((_140721_l != nullptr)) ? (_21eb5d202_evalp(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0),_140721_l.get()._field_kind)) : (_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0))));
				jule::Ptr<_21ebbd053_Data> _142621_r = _21ebe0718_eval_expr(_142121_eval, _141721_expr);
				if ((_142621_r == nullptr)) {
					goto _iter_next_2227e116d;
				}
				_139917_right_tuple.get()._field_datas = jule::alloc_for_append(_139917_right_tuple.get()._field_datas,1);_139917_right_tuple.get()._field_datas.__push(_142621_r);
				_21eb3aca1___process_end_part_of_multi_assign(_self_.ptr(), _140117_st,_137543_a,_140621_lexpr,_140721_l,_142621_r);
			}
			_iter_next_2227e116d:;
			++it;
			_2227e128e_i++;
			goto _iter_begin_2227e116d;
		}
		_iter_end_2227e116d:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_140117_st));
}



inline void _21eb3b6ca_check_assign_st(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640ec3_AssignSt> _143939_a) {
	{
		
		if (_21c62d18b_is_postfix_op(_143939_a.get()._field_setter._field_kind)) {
			_case_begin_2227e8d35:;
			{
				_21eb3983d_check_postfix(_self_, _143939_a);
			}
		}
		else if ((_143939_a.get()._field_left.len() == 1LL) && (!(_143939_a.get()._field_declarative))) {
			_case_begin_2227e88b2:;
			{
				_21eb3a5a8_check_single_assign(_self_, _143939_a);
			}
		}
		else {
			_case_begin_2227e853d:;
			{
				_21eb3b3ab_check_multi_assign(_self_, _143939_a);
			}
		}
		_match_end_2227e8494:;
	}
}



inline jule::Ptr<_21eb1472a_Scope> _21eb3bb5e_check_case_scope(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21eb2e27d_Case>& _145037_c,jule::Ptr<_21c6411e3_ScopeTree>& _145052_tree) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _145117_ssc = _21eb42109_new_child_checker(_self_);
	_145117_ssc.get()._field_cse=static_cast<jule::U64>(static_cast<jule::U64>(_145037_c));
	return _21eb34959_check_child_sc(_self_, _145052_tree,_145117_ssc);
}



inline jule::Ptr<_21eb2e27d_Case> _21eb3c29c_check_case(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21eb2dd2c_Match> _145634_m,jule::I64 _145645_i,jule::Ptr<_21c6453b2_Case> _145657_c,jule::Ptr<_21ebbd053_Data> _145687_expr) {
	jule::Ptr<_21eb2e27d_Case> _145717__case = _145634_m.get()._field_cases[_145645_i];
	_145717__case.get()._field_exprs=jule::Slice<jule::Ptr<_21ebbd053_Data>>::alloc(0LL,static_cast<jule::I64>(_145657_c.get()._field_exprs.len()));
	jule::Bool _145917_generic_matched = false;
	jule::Ptr<_21ebc00aa_Eval> _146017_eval = _21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0));
	{
		auto &expr = _145657_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_222800776:;
		if (it != expr.end()) {
			jule::Ptr<_21c4d7b4a_Expr> _222800886_e = *it;
			{
				jule::Ptr<_21ebbd053_Data> _146221_d = _21ebdeea9_eval_expr_kind(_146017_eval, _222800886_e.get()._field_kind);
				if ((_146221_d == nullptr)) {
					goto _iter_next_222800776;
				}
				if (_145634_m.get()._field_type_match) {
					_145717__case.get()._field_exprs = jule::alloc_for_append(_145717__case.get()._field_exprs,1);_145717__case.get()._field_exprs.__push(_146221_d);
					if ((_21eb15165_count_match_type(_145634_m,_146221_d.get()._field_kind) > 1LL)) {
						_21eb576a2_push_err(_self_.get()._field_s.ptr(), _222800886_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_146221_d.get()._field_kind.ptr()))}));
					}
					if (_145687_expr.get()._field_kind.get()._field_generic) {
						_145917_generic_matched=_145917_generic_matched || _21ec069e8_equals(_145687_expr.get()._field_kind, _146221_d.get()._field_kind);
					} else {
						jule::Ptr<_21deee929_Trait> _147425_trt = _21ec0a07e_trt(_145687_expr.get()._field_kind.ptr());
						if ((_147425_trt != nullptr)) {
							_21eb5e29c_check_type_compatibility(_self_.get()._field_s, _145687_expr.get()._field_kind,_146221_d.get()._field_kind,_222800886_e.get()._field_token);
						}
					}
					goto _iter_next_222800776;
				}
				if (_146221_d.get()._field_decl) {
					_21eb576a2_push_err(_self_.get()._field_s.ptr(), _222800886_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_222800776;
				}
				_145717__case.get()._field_exprs = jule::alloc_for_append(_145717__case.get()._field_exprs,1);_145717__case.get()._field_exprs.__push(_146221_d);
				_21eba6778_AssignTypeChecker _149121_checker = _21eba6778_AssignTypeChecker(_self_.get()._field_s,_145687_expr.get()._field_kind,_146221_d,_222800886_e.get()._field_token);
				_21eba7bec_check(&_149121_checker);
			}
			_iter_next_222800776:;
			++it;
			goto _iter_begin_222800776;
		}
		_iter_end_222800776:;
	}
	if (((!(_145634_m.get()._field_type_match)) || (!(_145687_expr.get()._field_kind.get()._field_generic))) || _145917_generic_matched) {
		_145717__case.get()._field_scope=_21eb3bb5e_check_case_scope(_self_, _145717__case,_145657_c.get()._field_scope);
	}
	return _145717__case;
}



inline void _21eb3c775_check_cases(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c645912_MatchCase>& _150536_m,jule::Ptr<_21eb2dd2c_Match> _150555_rm,jule::Ptr<_21ebbd053_Data> _150571_expr) {
	_150555_rm.get()._field_cases=jule::Slice<jule::Ptr<_21eb2e27d_Case>>::alloc(0LL,static_cast<jule::I64>(_150536_m.get()._field_cases.len()));
	{
		auto &expr = _150536_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22280a4ea:;
		if (it != expr.end()) {
			jule::I64 _22280bb5b_i = it - expr.begin();
			{
				jule::Ptr<_21eb2e27d_Case> _150821__case = jule::new_ptr<_21eb2e27d_Case>(_21eb2e27d_Case(_150555_rm,jule::Ptr<_21eb1472a_Scope>(),jule::Slice<jule::Ptr<_21ebbd053_Data>>(),jule::Ptr<_21eb2e27d_Case>()));
				if ((_22280bb5b_i > 0LL)) {
					_150555_rm.get()._field_cases[(_22280bb5b_i - 1LL)].get()._field_next=_150821__case;
				}
				_150555_rm.get()._field_cases = jule::alloc_for_append(_150555_rm.get()._field_cases,1);_150555_rm.get()._field_cases.__push(_150821__case);
			}
			_iter_next_22280a4ea:;
			++it;
			_22280bb5b_i++;
			goto _iter_begin_22280a4ea;
		}
		_iter_end_22280a4ea:;
	}
	if ((_150555_rm.get()._field_default != nullptr) && (_150536_m.get()._field_cases.len() > 0LL)) {
		_150555_rm.get()._field_cases[(_150555_rm.get()._field_cases.len() - 1LL)].get()._field_next=_150555_rm.get()._field_default;
	}
	{
		auto &expr = _150536_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22280e9c7:;
		if (it != expr.end()) {
			jule::I64 _22280ed5c_i = it - expr.begin();
			jule::Ptr<_21c6453b2_Case> _22280eee4_c = *it;
			{
				_21eb3c29c_check_case(_self_, _150555_rm,_22280ed5c_i,_22280eee4_c,_150571_expr);
			}
			_iter_next_22280e9c7:;
			++it;
			_22280ed5c_i++;
			goto _iter_begin_22280e9c7;
		}
		_iter_end_22280e9c7:;
	}
}



inline jule::Ptr<_21eb2e27d_Case> _21eb3cc09_check_default(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21eb2dd2c_Match> _152637_m,jule::Ptr<_21c64449e_Else> _152652_d) {
	jule::Ptr<_21eb2e27d_Case> _152717_def = jule::new_ptr<_21eb2e27d_Case>(_21eb2e27d_Case(_152637_m,jule::Ptr<_21eb1472a_Scope>(),jule::Slice<jule::Ptr<_21ebbd053_Data>>(),jule::Ptr<_21eb2e27d_Case>()));
	_152717_def.get()._field_scope=_21eb3bb5e_check_case_scope(_self_, _152717_def,_152652_d.get()._field_scope);
	return _152717_def;
}



inline void _21eb3d028_check_comptime_panic(_21eb2ed2d_ScopeChecker* _self_,jule::Ptr<_21eb1472a_Scope>& _153440_s) {
	if ((_153440_s.get()._field_stmts.len() != 1LL)) {
		return;
	}
	jule::Any _153913_stmt = _153440_s.get()._field_stmts[0LL];
	{
		auto &_match_expr{ _153913_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_222813d83:;
			{
				jule::Ptr<_21ebbd053_Data> _154217_d = _153913_stmt.operator jule::Ptr<_21ebbd053_Data>();
				{
					auto &_match_expr{ _154217_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>>()) {
						_case_begin_222814c0d:;
						{
							jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel> _154521_m = _154217_d.get()._field_model.operator jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ _154521_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
									_case_begin_222815b76:;
									{
										jule::Ptr<_21ea9d450_Const> _154825_c = _154521_m.get()._field_expr.operator jule::Ptr<_21ea9d450_Const>();
										if (_21eaa2c07_is_str(_154825_c.ptr())) {
											_21eb576a2_push_err((*_self_)._field_s.ptr(), (*((*_self_)._field_called_from)),jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_21eaa0155_read_str(_154825_c.ptr()))}));
										}
									}
								}
								_match_end_222815b21:;
							}
						}
					}
					_match_end_222814ba8:;
				}
			}
		}
		_match_end_222813d2d:;
	}
}



inline void _21eb3d424_push_type_match(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21eb2dd2c_Match> _155739_tm,jule::Ptr<_21c645912_MatchCase>& _155756_m) {
	if (_155739_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _155739_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_2228183a4:;
			if (it != expr.end()) {
				jule::Ptr<_21eb2e27d_Case> _222818470_c = *it;
				{
					if ((_222818470_c.get()._field_scope != nullptr)) {
						_21eb3d028_check_comptime_panic(_self_.ptr(), _222818470_c.get()._field_scope);
						_155739_tm.get()._field_default=_222818470_c;
						_155739_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					}
				}
				_iter_next_2228183a4:;
				++it;
				goto _iter_begin_2228183a4;
			}
			_iter_end_2228183a4:;
		}
		if ((_155756_m.get()._field_default != nullptr)) {
			_155739_tm.get()._field_cases=nullptr;
			_155739_tm.get()._field_default=_21eb3cc09_check_default(_self_, _155739_tm,_155756_m.get()._field_default);
			if ((_155739_tm.get()._field_default != nullptr)) {
				_21eb3d028_check_comptime_panic(_self_.ptr(), _155739_tm.get()._field_default.get()._field_scope);
			}
		}
		return;
	}
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_155739_tm));
}



inline void _21eb3d743_check_type_match(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c645912_MatchCase>& _158241_m) {
	jule::Ptr<_21ebbd053_Data> _158317_d = _21ebe0361_eval(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _158241_m.get()._field_expr);
	if ((_158317_d == nullptr)) {
		return;
	}
	if ((!(_158317_d.get()._field_kind.get()._field_generic)) && (!(((_21ec087b9_prim(_158317_d.get()._field_kind.ptr()) != nullptr) && _21ec10095_is_any(_21ec087b9_prim(_158317_d.get()._field_kind.ptr()).ptr())) || (_21ec0a07e_trt(_158317_d.get()._field_kind.ptr()) != nullptr)))) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _158241_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21eb2dd2c_Match> _159417_tm = jule::new_ptr<_21eb2dd2c_Match>(_21eb2dd2c_Match(_158317_d,true,jule::Slice<jule::Ptr<_21eb2e27d_Case>>(),jule::Ptr<_21eb2e27d_Case>()));
	if ((!(_159417_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_158241_m.get()._field_default != nullptr)) {
		_159417_tm.get()._field_default=_21eb3cc09_check_default(_self_, _159417_tm,_158241_m.get()._field_default);
	}
	_21eb3c775_check_cases(_self_, _158241_m,_159417_tm,_158317_d);
	_21eb3d424_push_type_match(_self_, _159417_tm,_158241_m);
}



inline void _21eb3da62_check_common_match(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c645912_MatchCase>& _160743_m) {
	jule::Ptr<_21ebbd053_Data> _160817_d = nullptr;
	if ((_160743_m.get()._field_expr == nullptr)) {
		_160817_d=jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__21ea9d9c2_new_bool(true)));
		_160817_d.get()._field_model=jule::Any(_160817_d.get()._field_constant);
	} else {
		_160817_d=_21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _160743_m.get()._field_expr);
		if ((_160817_d == nullptr)) {
			return;
		}
	}
	jule::Ptr<_21eb2dd2c_Match> _162217_mc = jule::new_ptr<_21eb2dd2c_Match>(_21eb2dd2c_Match(_160817_d,jule::Bool(),jule::Slice<jule::Ptr<_21eb2e27d_Case>>(),jule::Ptr<_21eb2e27d_Case>()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_162217_mc));
	if ((_160743_m.get()._field_default != nullptr)) {
		_162217_mc.get()._field_default=_21eb3cc09_check_default(_self_, _162217_mc,_160743_m.get()._field_default);
	}
	_21eb3c775_check_cases(_self_, _160743_m,_162217_mc,_160817_d);
}



inline void _21eb3dd81_check_match(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c645912_MatchCase> _163435_m) {
	if (_163435_m.get()._field_type_match) {
		_21eb3d743_check_type_match(_self_, _163435_m);
		return;
	}
	_21eb3da62_check_common_match(_self_, _163435_m);
}



inline void _21eb3e1a0_check_fall(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c640a83_FallSt> _164230_f) {
	if (((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())))) || _21eb31e84_is_deferred(_self_)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _164230_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;
	}
	_21eb2e27d_Case* _165017__case = ((_21eb2e27d_Case*)(_self_.get()._field_cse));
	if ((_165017__case->_field_next == nullptr)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _164230_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_21eb2e49d_FallSt>(_21eb2e49d_FallSt(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_165017__case->_field_next)))))))));
}



inline jule::Ptr<_21eb2d05c_BreakSt> _21eb3e557_check_break_with_label(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6438bb_BreakSt> _166242_b) {
	jule::Ptr<_21eb2d05c_BreakSt> _166317_brk = _21eb3e90e_check_plain_break(_self_, _166242_b);
	if ((_166317_brk == nullptr)) {
		return nullptr;
	}
	_166317_brk.get()._field_it=0LLU;
	_166317_brk.get()._field_mtch=0LLU;
	jule::Ptr<_21eb2e8dd_ScopeLabel> _167317_label = _21eac4c90_find_label_parent(_166242_b.get()._field_label._field_kind,_self_.get()._field_parent);
	if ((_167317_label == nullptr)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		return nullptr;
	}
	_167317_label.get()._field_used=true;
	if ((_167317_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_167317_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		return nullptr;
	}
	jule::I64 _168613_i = (_167317_label.get()._field_pos + 1LL);
	if (_168613_i >= static_cast<jule::I64>(static_cast<jule::I64>(_167317_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
	} else {
		jule::Any _169021_st = _167317_label.get()._field_scope.get()._field_scope.get()._field_stmts[_168613_i];
		{
			auto &_match_expr{ _169021_st };
			
			if (_match_expr.type_is<jule::Ptr<_21eb2c6cc_InfIter>>()) {
				_case_begin_22283a915:;
				{
					_166317_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_21eb2c6cc_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_21eb2cb1c_RangeIter>>()) {
				_case_begin_22283a97b:;
				{
					_166317_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_21eb2cb1c_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_21eb2c8ec_WhileIter>>()) {
				_case_begin_22283a9e2:;
				{
					_166317_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_21eb2c8ec_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_21eb2dd2c_Match>>()) {
				_case_begin_22283aa58:;
				{
					_166317_brk.get()._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_21eb2dd2c_Match>()));
				}
			}
			else {
				_case_begin_22283a827:;
				{
					_21eb576a2_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
				}
			}
			_match_end_22283a7c2:;
		}
	}
	if ((_166317_brk.get()._field_it != 0LLU)) {
		if ((!(_21eb3871b_check_valid_break_label(_self_, _166317_brk.get()._field_it)))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		}
	}
	if ((_166317_brk.get()._field_mtch != 0LLU)) {
		if ((!(_21eb3871b_check_valid_break_label(_self_, _166317_brk.get()._field_mtch)))) {
			_21eb576a2_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		}
	}
	return _166317_brk;
}



inline jule::Ptr<_21eb2d05c_BreakSt> _21eb3e90e_check_plain_break(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6438bb_BreakSt> _171537_b) {
	if (_21eb31e84_is_deferred(_self_)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21eb2ed2d_ScopeChecker> _172117_scope = _self_;
	_julec_label_iter:;
	{
		
		if ((((_172117_scope.get()._field_it == 0LLU) && (_172117_scope.get()._field_cse == 0LLU)) && (_172117_scope.get()._field_parent != nullptr)) && (_172117_scope.get()._field_owner == nullptr)) {
			_case_begin_222843357:;
			{
				_172117_scope=_172117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_172117_scope.get()._field_it != 0LLU)) {
			_case_begin_2228433ce:;
			{
				return jule::new_ptr<_21eb2d05c_BreakSt>(_21eb2d05c_BreakSt(_172117_scope.get()._field_it,jule::U64()));
			}
		}
		else if ((_172117_scope.get()._field_cse != 0LLU)) {
			_case_begin_222843456:;
			{
				return jule::new_ptr<_21eb2d05c_BreakSt>(_21eb2d05c_BreakSt(jule::U64(),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((_21eb2e27d_Case*)(_172117_scope.get()._field_cse))->_field_owner)))))));
			}
		}
		_match_end_22284328b:;
	}
	_21eb576a2_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _21eb3ec2d_check_break(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6438bb_BreakSt> _173931_b) {
	if (_173931_b.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		jule::Ptr<_21eb2d05c_BreakSt> _174121_brk = _21eb3e557_check_break_with_label(_self_, _173931_b);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174121_brk));
		return;
	}
	jule::Ptr<_21eb2d05c_BreakSt> _174617_brk = _21eb3e90e_check_plain_break(_self_, _173931_b);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174617_brk));
}



inline void _21eb4004c_check_ret(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6423c0_RetSt> _175033_r) {
	if (_21eb31e84_is_deferred(_self_)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _175033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21eb2e6bd_RetSt> _175517_rt = jule::new_ptr<_21eb2e6bd_RetSt>(_21eb2e6bd_RetSt(_21eb3225e_get_root(_self_).get()._field_owner,jule::Slice<jule::Ptr<_21eb75615_Var>>(),jule::Any()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175517_rt));
	jule::Ptr<_21ebb4995_RetTypeChecker> _176017_rtc = jule::new_ptr<_21ebb4995_RetTypeChecker>(_21ebb4995_RetTypeChecker(_self_,_175517_rt.get()._field_func,jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>(),jule::Slice<jule::Ptr<_21eb75615_Var>>(),_175033_r.get()._field_token,jule::Any()));
	jule::Bool _176513_ok = _21ebb5a95_check(_176017_rtc.ptr(), _175033_r.get()._field_expr);
	if ((!(_176513_ok))) {
		return;
	}
	if ((_175033_r.get()._field_expr == nullptr) && (_176017_rtc.get()._field_vars.len() == 0LL)) {
		return;
	}
	_175517_rt.get()._field_vars=_176017_rtc.get()._field_vars;
	if ((_175033_r.get()._field_expr != nullptr)) {
		_175517_rt.get()._field_expr=_176017_rtc.get()._field_model;
	}
}



inline void _21eb4036b_check_use_expr(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c4d7d6a_UseExpr> _178134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _178134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (_21eb31e84_is_deferred(_self_)) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _178134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((_self_.get()._field_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len()))) {
		_21eb576a2_push_err(_self_.get()._field_s.ptr(), _178134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _21eb4068a_check_node(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Any& _179835_node) {
	{
		auto &_match_expr{ _179835_node };
		
		if (_match_expr.type_is<jule::Ptr<_21c6411e3_ScopeTree>>()) {
			_case_begin_222855622:;
			{
				_21eb35130_check_anon_scope(_self_, _179835_node.operator jule::Ptr<_21c6411e3_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c64205c_VarDecl>>()) {
			_case_begin_222855798:;
			{
				_21eb33903_check_var_decl(_self_, _179835_node.operator jule::Ptr<_21c64205c_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c644ea5_TypeAliasDecl>>()) {
			_case_begin_222855985:;
			{
				_21eb33c22_check_type_alias_decl(_self_, _179835_node.operator jule::Ptr<_21c644ea5_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d7b4a_Expr>>()) {
			_case_begin_222855204:;
			{
				_21eb3584a_check_expr(_self_, _179835_node.operator jule::Ptr<_21c4d7b4a_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d892b_CoExpr>>()) {
			_case_begin_222855853:;
			{
				_21eb35b69_check_co_expr(_self_, _179835_node.operator jule::Ptr<_21c4d892b_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c6448ab_Conditional>>()) {
			_case_begin_222855b0b:;
			{
				_21eb366e7_check_conditional(_self_, _179835_node.operator jule::Ptr<_21c6448ab_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c6428ba_Iter>>()) {
			_case_begin_222855b72:;
			{
				_21eb37e68_check_iter(_self_, _179835_node.operator jule::Ptr<_21c6428ba_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c643c2e_ContSt>>()) {
			_case_begin_222855bd8:;
			{
				_21eb38dd1_check_cont(_self_, _179835_node.operator jule::Ptr<_21c643c2e_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c640643_LabelSt>>()) {
			_case_begin_222855c4e:;
			{
				_21eb39200_check_label(_self_, _179835_node.operator jule::Ptr<_21c640643_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c640863_GotoSt>>()) {
			_case_begin_222855cb5:;
			{
				_21eb3951e_push_goto(_self_, _179835_node.operator jule::Ptr<_21c640863_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c640ec3_AssignSt>>()) {
			_case_begin_222855d2b:;
			{
				_21eb3b6ca_check_assign_st(_self_, _179835_node.operator jule::Ptr<_21c640ec3_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c645912_MatchCase>>()) {
			_case_begin_222855d92:;
			{
				_21eb3dd81_check_match(_self_, _179835_node.operator jule::Ptr<_21c645912_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c640a83_FallSt>>()) {
			_case_begin_222855e08:;
			{
				_21eb3e1a0_check_fall(_self_, _179835_node.operator jule::Ptr<_21c640a83_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c6438bb_BreakSt>>()) {
			_case_begin_222855e6e:;
			{
				_21eb3ec2d_check_break(_self_, _179835_node.operator jule::Ptr<_21c6438bb_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c6423c0_RetSt>>()) {
			_case_begin_222855ed5:;
			{
				_21eb4004c_check_ret(_self_, _179835_node.operator jule::Ptr<_21c6423c0_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d7d6a_UseExpr>>()) {
			_case_begin_22285604b:;
			{
				_21eb4036b_check_use_expr(_self_, _179835_node.operator jule::Ptr<_21c4d7d6a_UseExpr>());
			}
		}
		else {
			_case_begin_22285538b:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_2228552ae:;
	}
}



inline void _21eb408cc_check_result(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_) {
	_21c523c63_Node _183817_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _183817_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c4d7d6a_UseExpr>>()) {
			_case_begin_2228672c1:;
			{
				jule::Ptr<_21c4d7d6a_UseExpr> _184121_ue = _183817_stmt._field_data.operator jule::Ptr<_21c4d7d6a_UseExpr>();
				jule::Ptr<_21ebbd053_Data> _184221_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _184121_ue.get()._field_expr);
				if ((_184221_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_184221_d));
				jule::Ptr<_21ebb4995_RetTypeChecker> _184721_rtc = jule::new_ptr<_21ebb4995_RetTypeChecker>(_21ebb4995_RetTypeChecker(_self_,jule::Ptr<_21dd1cc42_FnIns>(),_21eb8092d_get_result_types(_self_.get()._field_result),jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>(),jule::Slice<jule::Ptr<_21eb75615_Var>>(),_184121_ue.get()._field_expr.get()._field_token,jule::Any()));
				_21ebb5a95_check(_184721_rtc.ptr(), _184121_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d7b4a_Expr>>()) {
			_case_begin_222867337:;
			{
				jule::Ptr<_21c4d7b4a_Expr> _185421_expr = _183817_stmt._field_data.operator jule::Ptr<_21c4d7b4a_Expr>();
				jule::Ptr<_21ebbd053_Data> _185521_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_.get()._field_s, jule::Trait<_21ec23a48_Lookup>(_self_, 0)), _185421_expr);
				if ((_185521_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_185521_d));
				{
					auto &_match_expr{ _185521_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>>()) {
						_case_begin_22286c051:;
						{
							jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel> _186225_m = _185521_d.get()._field_model.operator jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>();
							_21eb3552b_process_error_call(_self_, _186225_m,_185421_expr.get()._field_token);
						}
					}
					else {
						_case_begin_22286c480:;
						{
							return;
						}
					}
					_match_end_22286c42a:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c640863_GotoSt>>() || _match_expr.type_is<jule::Ptr<_21c6438bb_BreakSt>>() || _match_expr.type_is<jule::Ptr<_21c643c2e_ContSt>>() || _match_expr.type_is<jule::Ptr<_21c6423c0_RetSt>>()) {
			_case_begin_222866853:;
			{
				_21eb4068a_check_node(_self_, _183817_stmt._field_data);
			}
		}
		else {
			_case_begin_2228667dc:;
			{
				_21eb4068a_check_node(_self_, _183817_stmt._field_data);
				return;
			}
		}
		_match_end_222866765:;
	}
	_self_.get()._field_result=nullptr;
}



inline void _21eb40b1e_check_tree(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len())); (_self_.get()._field_i)++) {
		{
			_21c523c63_Node _188421_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];
			_21eb4068a_check_node(_self_, _188421_stmt._field_data);
			if (_21eb31ba9_stopped(_self_.ptr())) {
				return;
			}
		}
	_iter_next_2228700cb:;
	}
	_iter_end_2228700cb:;
	if ((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL)) {
		_21eb408cc_check_result(_self_);
	}
}



inline void _21eb4101a_check_goto(_21eb2ed2d_ScopeChecker* _self_,jule::Ptr<_21eb2eb0d_ScopeGoto>& _189534_gt,jule::Ptr<_21eb2e8dd_ScopeLabel>& _189555_label) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _189617_gtsc = _189534_gt.get()._field_scope;
	while ((_189617_gtsc.get()._field_child_index - 1LL) > _189555_label.get()._field_scope.get()._field_child_index) {
		{
			_189617_gtsc=_189617_gtsc.get()._field_parent;
		}
	_iter_next_2228740be:;
	}
	_iter_end_2228740be:;
	jule::I64 _190117_n = 0LL;
	if (_189617_gtsc.get()._field_scope == _189555_label.get()._field_scope.get()._field_scope) {
		if (_189534_gt.get()._field_pos > _189555_label.get()._field_pos) {
			return;
		}
		_190117_n=_189534_gt.get()._field_pos;
	}
	jule::I64 _191417_i = (_189555_label.get()._field_pos - 1LL);
	if ((_190117_n == 0LL)) {
		{
			auto &expr = _189555_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_222876c70:;
			if (it != expr.end()) {
				jule::I64 _222876e90_j = it - expr.begin();
				jule::Any _2228771d2_stmt = *it;
				{
					if (_21eadbb75_stmt_is_goto_scope(_2228771d2_stmt,_189617_gtsc.get()._field_scope)) {
						_190117_n=_222876e90_j;
						goto _iter_end_222876c70;
					}
				}
				_iter_next_222876c70:;
				++it;
				_222876e90_j++;
				goto _iter_begin_222876c70;
			}
			_iter_end_222876c70:;
		}
	}
	for (; _191417_i >= _190117_n; (_191417_i)--) {
		{
			jule::Any _192721_stmt = _189555_label.get()._field_scope.get()._field_scope.get()._field_stmts[_191417_i];
			if (_21eae7d07_st_is_def(_192721_stmt)) {
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _189534_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_189534_gt.get()._field_gt.get()._field_label._field_kind)}));
				return;
			}
		}
	_iter_next_222876995:;
	}
	_iter_end_222876995:;
}



inline void _21eb4125c_check_gotos(_21eb2ed2d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_22287a48d:;
		if (it != expr.end()) {
			jule::Ptr<_21eb2eb0d_ScopeGoto> _22287a4d2_gt = *it;
			{
				jule::Ptr<_21eb2e8dd_ScopeLabel> _193721_label = _21eb33150_find_label_all(&(*_self_), _22287a4d2_gt.get()._field_gt.get()._field_label._field_kind);
				if ((_193721_label == nullptr)) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _22287a4d2_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_22287a4d2_gt.get()._field_gt.get()._field_label._field_kind)}));
					goto _iter_next_22287a48d;
				}
				_193721_label.get()._field_used=true;
				_21eb4101a_check_goto(&(*_self_), _22287a4d2_gt,_193721_label);
			}
			_iter_next_22287a48d:;
			++it;
			goto _iter_begin_22287a48d;
		}
		_iter_end_22287a48d:;
	}
}



inline void _21eb4149e_check_labels(_21eb2ed2d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_22287d5d4:;
		if (it != expr.end()) {
			jule::Ptr<_21eb2e8dd_ScopeLabel> _22287d67d_l = *it;
			{
				if ((!(_22287d67d_l.get()._field_used))) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _22287d67d_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_22287d67d_l.get()._field_label.get()._field_ident)}));
				}
			}
			_iter_next_22287d5d4:;
			++it;
			goto _iter_begin_22287d5d4;
		}
		_iter_end_22287d5d4:;
	}
}



inline void _21eb416e1_check_vars(_21eb2ed2d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_222880141:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> _222880372_v = *it;
			{
				if ((((!(_222880372_v.get()._field_used)) && (!(_21c62abc2_is_ignore_ident(_222880372_v.get()._field_ident)))) && (!(_21c62aed0_is_anon_ident(_222880372_v.get()._field_ident)))) && (_222880372_v.get()._field_ident != jule::Str("self", 4))) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _222880372_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_222880372_v.get()._field_ident)}));
				}
			}
			_iter_next_222880141:;
			++it;
			goto _iter_begin_222880141;
		}
		_iter_end_222880141:;
	}
}



inline void _21eb41933_check_aliases(_21eb2ed2d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_222882dbe:;
		if (it != expr.end()) {
			jule::Ptr<_21ec05288_TypeAlias> _222882e46_a = *it;
			{
				if (((!(_222882e46_a.get()._field_used)) && (!(_21c62abc2_is_ignore_ident(_222882e46_a.get()._field_ident)))) && (!(_21c62aed0_is_anon_ident(_222882e46_a.get()._field_ident)))) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _222882e46_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_222882e46_a.get()._field_ident)}));
				}
			}
			_iter_next_222882dbe:;
			++it;
			goto _iter_begin_222882dbe;
		}
		_iter_end_222882dbe:;
	}
}



inline void _21eb41d2e_check(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_,jule::Ptr<_21c6411e3_ScopeTree>& _197330_tree,jule::Ptr<_21eb1472a_Scope>& _197353_s) {
	_197353_s.get()._field_deferred=_197330_tree.get()._field_deferred;
	_197353_s.get()._field_unsafety=_197330_tree.get()._field_unsafety;
	jule::I64 _197713_errors = _self_.get()._field_s.get()._field_errors.len();
	_self_.get()._field_tree=_197330_tree;
	_self_.get()._field_scope=_197353_s;
	_21eb40b1e_check_tree(_self_);
	if (_197713_errors == static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_s.get()._field_errors.len()))) {
		_21eb416e1_check_vars(_self_.ptr());
		_21eb41933_check_aliases(_self_.ptr());
		if (_21eb3168c_is_root(_self_.ptr())) {
			_21eb4125c_check_gotos(_self_.ptr());
			_21eb4149e_check_labels(_self_.ptr());
		}
	}
}



inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb42109_new_child_checker(jule::Ptr<_21eb2ed2d_ScopeChecker> _self_) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _199717_base = _21eb06d9e_new_scope_checker_base(_self_.get()._field_s,nullptr);
	_199717_base.get()._field_parent=_self_;
	_199717_base.get()._field_labels=_self_.get()._field_labels;
	_199717_base.get()._field_gotos=_self_.get()._field_gotos;
	_199717_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _199717_base;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2ed2d_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _21eb4357d_check_cdef(_21eb43094_DirectiveChecker* _self_,jule::Ptr<_21c525490_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_21dd19249_Fn>>()) {
			_case_begin_22288ad83:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_21dd19249_Fn>().get()._field_cpp_linked) {
					goto _match_end_22288ae1b;
				}
				goto _case_begin_22288b13b;
			}
		}
		else {
			_case_begin_22288b13b:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_1630_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_22288ae1b:;
	}
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _21eb4389c_check_typedef(_21eb43094_DirectiveChecker* _self_,jule::Ptr<_21c525490_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_22288ec88:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_21dd03266_Struct>().get()._field_cpp_linked) {
					goto _match_end_22288e606;
				}
				goto _case_begin_22288e826;
			}
		}
		else {
			_case_begin_22288e826:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_3233_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_22288e606:;
	}
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _21eb43bbb_check_derive(_21eb43094_DirectiveChecker* _self_,jule::Ptr<_21c525490_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_222893231:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_21dd03266_Struct>().get()._field_cpp_linked))) {
					goto _match_end_222892a9e;
				}
				goto _case_begin_222892cbe;
			}
		}
		else {
			_case_begin_222892cbe:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_222892a9e:;
	}
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL]._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_222897466:;
		}
		else {
			_case_begin_222895b7e:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_4832_d.get()._field_args[0LL]._field_kind)}));
			}
		}
		_match_end_22289709d:;
	}
}



inline void _21eb43eda_check_namespace(_21eb43094_DirectiveChecker* _self_,jule::Ptr<_21c525490_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_222898ec3:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_21dd03266_Struct>().get()._field_cpp_linked))) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd19249_Fn>>()) {
			_case_begin_22289938b:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_21dd19249_Fn>().get()._field_cpp_linked))) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_222899402:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_21eb75615_Var>().get()._field_cpp_linked))) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_22289927b:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_22289905b:;
	}
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_21c627dde_Token _10213_arg = _7439_d.get()._field_args[0LL];
	if (_10213_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d.get()._field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,(_10213_arg._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_2228a49d4:;
			{
				if ((_21ebeeaac_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_21c525490_Directive> _11925_typedef = jule::new_ptr<_21c525490_Directive>(_21c525490_Directive(_7439_d.get()._field_tag,jule::Slice<_21c627dde_Token>()));
					_11925_typedef.get()._field_tag._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_21c525490_Directive>>({_11925_typedef}));
				}
			}
		}
		_match_end_2228a40aa:;
	}
}



inline void _21eb44309_check_deprecated(_21eb43094_DirectiveChecker* _self_,jule::Ptr<_21c525490_Directive>& _12840_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_2228a7311:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_21dd03266_Struct>().get()._field_cpp_linked) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd19249_Fn>>()) {
			_case_begin_2228a75db:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_21dd19249_Fn>().get()._field_cpp_linked) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_2228a7652:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_21eb75615_Var>().get()._field_cpp_linked) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_2228a7531:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_2228a74cb:;
	}
	if ((_12840_d.get()._field_args.len() == 0LL)) {
		return;
	}
	if ((_12840_d.get()._field_args.len() > 1LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_21c627dde_Token _15613_arg = _12840_d.get()._field_args[0LL];
	if (_15613_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_15613_arg._field_kind[0LL] != '\"') {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_12840_d.get()._field_args[0LL]._field_kind=_15613_arg._field_kind.slice(1LL,(_15613_arg._field_kind.len() - 1LL));
}



inline void _21eb44628_check_test(_21eb43094_DirectiveChecker* _self_,jule::Ptr<_21c525490_Directive>& _17031_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_21dd19249_Fn>>()) {
			_case_begin_2228b2edc:;
			{
				jule::Ptr<_21dd19249_Fn> _17317_f = (*_self_)._field_o.operator jule::Ptr<_21dd19249_Fn>();
				if (((!(_17317_f.get()._field_cpp_linked)) && (!(_21dd1a091_is_init(_17317_f.ptr())))) && (!(_21dd19cb6_is_entry_point(_17317_f.ptr())))) {
					goto _match_end_2228b285a;
				}
				if (_21dd199db_is_method(_17317_f.ptr())) {
					_21eb576a2_push_err((*_self_)._field_s.ptr(), _17317_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_2228b285a;
				}
				goto _case_begin_2228b2a7a;
			}
		}
		else {
			_case_begin_2228b2a7a:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _17031_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_17031_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_2228b285a:;
	}
	if ((_17031_d.get()._field_args.len() > 0LL)) {
		_21eb576a2_push_err((*_self_)._field_s.ptr(), _17031_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _21eb44947_check_directive(_21eb43094_DirectiveChecker* _self_,jule::Ptr<_21c525490_Directive>& _19139_d) {
	{
		auto &_match_expr{ _19139_d.get()._field_tag._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_2228b7c6c:;
			{
				_21eb4357d_check_cdef(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_2228b7cd3:;
			{
				_21eb4389c_check_typedef(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_2228b7d49:;
			{
				_21eb43bbb_check_derive(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_2228b7db0:;
			{
				_21eb43eda_check_namespace(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_2228b8d8e:;
			{
				_21eb44309_check_deprecated(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_2228b8e05:;
			{
				_21eb44628_check_test(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_2228b8e6b:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _19139_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_19139_d.get()._field_tag._field_kind)}));
			}
		}
		else {
			_case_begin_2228b7882:;
			{
				_21eb576a2_push_err((*_self_)._field_s.ptr(), _19139_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_19139_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_2228b7b6d:;
	}
}



inline void _21eb44b89_check(_21eb43094_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_2228bd17e:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _2228bd3b0_d = *it;
			{
				_21eb44947_check_directive(&(*_self_), _2228bd3b0_d);
			}
			_iter_next_2228bd17e:;
			++it;
			goto _iter_begin_2228bd17e;
		}
		_iter_end_2228bd17e:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21eb43094_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4d7ca_find_package(_21eb4d269_Package* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4db82_select_package(_21eb4d269_Package* _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_21eb75615_Var> _21eb4e116_find_var(_21eb4d269_Package* _self_,jule::Str _28731_ident,jule::Bool _28743_cpp_linked) {
	return _21eb4761a_find_var_in_package((*_self_)._field_files,_28731_ident,_28743_cpp_linked);
}



inline jule::Ptr<_21ec05288_TypeAlias> _21eb4e59a_find_type_alias(_21eb4d269_Package* _self_,jule::Str _29338_ident,jule::Bool _29350_cpp_linked) {
	return _21eb47b6a_find_type_alias_in_package((*_self_)._field_files,_29338_ident,_29350_cpp_linked);
}



inline jule::Ptr<_21dd03266_Struct> _21eb4ea2e_find_struct(_21eb4d269_Package* _self_,jule::Str _29934_ident,jule::Bool _29946_cpp_linked) {
	return _21eb48121_find_struct_in_package((*_self_)._field_files,_29934_ident,_29946_cpp_linked);
}



inline jule::Ptr<_21dd19249_Fn> _21eb4eeb3_find_fn(_21eb4d269_Package* _self_,jule::Str _30530_ident,jule::Bool _30542_cpp_linked) {
	return _21eb4862c_find_fn_in_package((*_self_)._field_files,_30530_ident,_30542_cpp_linked);
}



inline jule::Ptr<_21deee929_Trait> _21eb5036a_find_trait(_21eb4d269_Package* _self_,jule::Str _31133_ident) {
	return _21eb48a17_find_trait_in_package((*_self_)._field_files,_31133_ident);
}



inline jule::Ptr<_21ddb6aee_Enum> _21eb50722_find_enum(_21eb4d269_Package* _self_,jule::Str _31732_ident) {
	return _21eb48e02_find_enum_in_package((*_self_)._field_files,_31732_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _21eb4d269_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb549e0_find_package(_21eb5443a_Sema* _self_,jule::Str _23235_ident) {
	return _21ebb72b1_find_package((*_self_)._field_file.ptr(), _23235_ident);
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb54d97_select_package(_21eb5443a_Sema* _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _24237_selector) {
	return _21ebb7668_select_package((*_self_)._field_file.ptr(), _24237_selector);
}



inline jule::Ptr<_21eb75615_Var> _21eb5532b_find_var(_21eb5443a_Sema* _self_,jule::Str _25231_ident,jule::Bool _25243_cpp_linked) {
	jule::Ptr<_21eb75615_Var> _25417_v = _21eb4761a_find_var_in_package((*_self_)._field_files,_25231_ident,_25243_cpp_linked);
	if ((_25417_v != nullptr)) {
		return _25417_v;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_2228d9e6a:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2228d9b18_imp = *it;
			{
				if ((!(_21eb52a43_imp_is_lookupable(_2228d9b18_imp,_25231_ident)))) {
					goto _iter_next_2228d9e6a;
				}
				_25417_v=_21eb4ab7e_find_var(_2228d9b18_imp.ptr(), _25231_ident,_25243_cpp_linked);
				if ((_25417_v != nullptr) && _21eb58032_is_accessible_define(&(*_self_), _25417_v.get()._field_public,_25417_v.get()._field_token)) {
					return _25417_v;
				}
			}
			_iter_next_2228d9e6a:;
			++it;
			goto _iter_begin_2228d9e6a;
		}
		_iter_end_2228d9e6a:;
	}
	return nullptr;
}



inline jule::Ptr<_21ec05288_TypeAlias> _21eb557b0_find_type_alias(_21eb5443a_Sema* _self_,jule::Str _27938_ident,jule::Bool _27950_cpp_linked) {
	jule::Ptr<_21ec05288_TypeAlias> _28117_ta = _21eb47b6a_find_type_alias_in_package((*_self_)._field_files,_27938_ident,_27950_cpp_linked);
	if ((_28117_ta != nullptr)) {
		return _28117_ta;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_2228dd6ee:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2228dd457_imp = *it;
			{
				if ((!(_21eb52a43_imp_is_lookupable(_2228dd457_imp,_27938_ident)))) {
					goto _iter_next_2228dd6ee;
				}
				_28117_ta=_21eb4b113_find_type_alias(_2228dd457_imp.ptr(), _27938_ident,_27950_cpp_linked);
				if ((_28117_ta != nullptr) && _21eb58032_is_accessible_define(&(*_self_), _28117_ta.get()._field_public,_28117_ta.get()._field_token)) {
					return _28117_ta;
				}
			}
			_iter_next_2228dd6ee:;
			++it;
			goto _iter_begin_2228dd6ee;
		}
		_iter_end_2228dd6ee:;
	}
	return nullptr;
}



inline jule::Ptr<_21dd03266_Struct> _21eb55c44_find_struct(_21eb5443a_Sema* _self_,jule::Str _30634_ident,jule::Bool _30646_cpp_linked) {
	jule::Ptr<_21dd03266_Struct> _30817_s = _21eb48121_find_struct_in_package((*_self_)._field_files,_30634_ident,_30646_cpp_linked);
	if ((_30817_s != nullptr)) {
		return _30817_s;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_2228e1977:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2228e1625_imp = *it;
			{
				if ((!(_21eb52a43_imp_is_lookupable(_2228e1625_imp,_30634_ident)))) {
					goto _iter_next_2228e1977;
				}
				_30817_s=_21eb4b597_find_struct(_2228e1625_imp.ptr(), _30634_ident,_30646_cpp_linked);
				if ((_30817_s != nullptr) && _21eb58032_is_accessible_define(&(*_self_), _30817_s.get()._field_public,_30817_s.get()._field_token)) {
					return _30817_s;
				}
			}
			_iter_next_2228e1977:;
			++it;
			goto _iter_begin_2228e1977;
		}
		_iter_end_2228e1977:;
	}
	return nullptr;
}



inline jule::Ptr<_21dd19249_Fn> _21eb561c8_find_fn(_21eb5443a_Sema* _self_,jule::Str _33330_ident,jule::Bool _33342_cpp_linked) {
	jule::Ptr<_21dd19249_Fn> _33517_f = _21eb4862c_find_fn_in_package((*_self_)._field_files,_33330_ident,_33342_cpp_linked);
	if ((_33517_f != nullptr)) {
		return _33517_f;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_2228e4c00:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2228e489d_imp = *it;
			{
				if ((!(_21eb52a43_imp_is_lookupable(_2228e489d_imp,_33330_ident)))) {
					goto _iter_next_2228e4c00;
				}
				_33517_f=_21eb4ba2b_find_fn(_2228e489d_imp.ptr(), _33330_ident,_33342_cpp_linked);
				if ((_33517_f != nullptr) && _21eb58032_is_accessible_define(&(*_self_), _33517_f.get()._field_public,_33517_f.get()._field_token)) {
					return _33517_f;
				}
			}
			_iter_next_2228e4c00:;
			++it;
			goto _iter_begin_2228e4c00;
		}
		_iter_end_2228e4c00:;
	}
	return nullptr;
}



inline jule::Ptr<_21deee929_Trait> _21eb56580_find_trait(_21eb5443a_Sema* _self_,jule::Str _36033_ident) {
	jule::Ptr<_21deee929_Trait> _36217_t = _21eb48a17_find_trait_in_package((*_self_)._field_files,_36033_ident);
	if ((_36217_t != nullptr)) {
		return _36217_t;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_2228e79d3:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2228e7e23_imp = *it;
			{
				if ((!(_21eb52a43_imp_is_lookupable(_2228e7e23_imp,_36033_ident)))) {
					goto _iter_next_2228e79d3;
				}
				_36217_t=_21eb4bdd3_find_trait(_2228e7e23_imp.ptr(), _36033_ident);
				if ((_36217_t != nullptr) && _21eb58032_is_accessible_define(&(*_self_), _36217_t.get()._field_public,_36217_t.get()._field_token)) {
					return _36217_t;
				}
			}
			_iter_next_2228e79d3:;
			++it;
			goto _iter_begin_2228e79d3;
		}
		_iter_end_2228e79d3:;
	}
	return nullptr;
}



inline jule::Ptr<_21ddb6aee_Enum> _21eb56937_find_enum(_21eb5443a_Sema* _self_,jule::Str _38732_ident) {
	jule::Ptr<_21ddb6aee_Enum> _38917_e = _21eb48e02_find_enum_in_package((*_self_)._field_files,_38732_ident);
	if ((_38917_e != nullptr)) {
		return _38917_e;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_2228ea84e:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2228eac8e_imp = *it;
			{
				if ((!(_21eb52a43_imp_is_lookupable(_2228eac8e_imp,_38732_ident)))) {
					goto _iter_next_2228ea84e;
				}
				_38917_e=_21eb4c28a_find_enum(_2228eac8e_imp.ptr(), _38732_ident);
				if ((_38917_e != nullptr) && _21eb58032_is_accessible_define(&(*_self_), _38917_e.get()._field_public,_38917_e.get()._field_token)) {
					return _38917_e;
				}
			}
			_iter_next_2228ea84e:;
			++it;
			goto _iter_begin_2228ea84e;
		}
		_iter_end_2228ea84e:;
	}
	return nullptr;
}



inline jule::Bool _21eb56daa_is_flag(_21eb5443a_Sema* _self_,jule::I64 _41122_flags) {
	return ((*_self_)._field_flags & _41122_flags) == _41122_flags;
}



inline void _21eb571c9_set_current_file(_21eb5443a_Sema* _self_,jule::Ptr<_21ebb6c0b_SymbolTable> _41339_f) {
	(*_self_)._field_file=_41339_f;
}



inline void _21eb576a2_push_err(_21eb5443a_Sema* _self_,_21c627dde_Token _41527_token,jule::Str _41541_fmt,jule::Slice<jule::Any> _41554_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_21eb52658_compiler_err(_41527_token,true,_41541_fmt,_41554_args));
}



inline void _21eb57a9d_push_suggestion(_21eb5443a_Sema* _self_,jule::Str _42034_fmt,jule::Slice<jule::Any> _42047_args) {
	{
		_21eb53d96_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_42034_fmt,_42047_args);
	}
}



inline jule::Bool _21eb58032_is_accessible_define(_21eb5443a_Sema* _self_,jule::Bool _42535_public,_21c627dde_Token _42549_token) {
	return (_42535_public || (_42549_token._field_file == nullptr)) || (_21c62eaa5_dir((*_self_)._field_file.get()._field_file.ptr()) == _21c62eaa5_dir(_42549_token._field_file.ptr()));
}



inline jule::Bool _21eb58593_is_duplicated_ident(_21eb5443a_Sema* _self_,jule::U64 _43234_itself,jule::Str _43251_ident,jule::Bool _43263_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_222904193:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> &_222904391_f = *it;
			{
				if (_21ebba8e1_is_duplicated_ident(_222904391_f.ptr(), _43234_itself,_43251_ident,_43263_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _222904391_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_222904abc:;
					if (it != expr.end()) {
						jule::Ptr<_21eb49c8d_ImportInfo> &_222905a24_imp = *it;
						{
							{
								auto &expr = _222905a24_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_2229061a6:;
								if (it != expr.end()) {
									_21c627dde_Token &_2229061ea_selected = *it;
									{
										if (_2229061ea_selected._field_kind == _43251_ident) {
											return true;
										}
									}
									_iter_next_2229061a6:;
									++it;
									goto _iter_begin_2229061a6;
								}
								_iter_end_2229061a6:;
							}
						}
						_iter_next_222904abc:;
						++it;
						goto _iter_begin_222904abc;
					}
					_iter_end_222904abc:;
				}
			}
			_iter_next_222904193:;
			++it;
			goto _iter_begin_222904193;
		}
		_iter_end_222904193:;
	}
	return false;
}



inline void _21eb5898e_check_directives(jule::Ptr<_21eb5443a_Sema> _self_,jule::Slice<jule::Ptr<_21c525490_Directive>>& _44941_d,jule::Any _44967_o) {
	_21eb43094_DirectiveChecker _45017_dc = _21eb43094_DirectiveChecker(_self_,((jule::Ptr<jule::Slice<jule::Ptr<_21c525490_Directive>>>)((&(_44941_d)))),_44967_o);
	_21eb44b89_check(&_45017_dc);
}



inline jule::Bool _21eb59000_check_generic_quantity(_21eb5443a_Sema* _self_,jule::I64 _45841_required,jule::I64 _45856_given,_21c627dde_Token _45868_token) {
	jule::Bool _45884_ok = jule::Bool();
	{
		
		if ((_45841_required == 0LL) && (_45856_given > 0LL)) {
			_case_begin_222909bb0:;
			{
				_21eb576a2_push_err(&(*_self_), _45868_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_45884_ok = false;
				return _45884_ok;
			}
		}
		else if ((_45841_required > 0LL) && (_45856_given == 0LL)) {
			_case_begin_222909c6a:;
			{
				_21eb576a2_push_err(&(*_self_), _45868_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_45884_ok = false;
				return _45884_ok;
			}
		}
		else if (_45841_required < _45856_given) {
			_case_begin_222909cd1:;
			{
				_21eb576a2_push_err(&(*_self_), _45868_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_45884_ok = false;
				return _45884_ok;
			}
		}
		else if (_45841_required > _45856_given) {
			_case_begin_22290995c:;
			{
				_21eb576a2_push_err(&(*_self_), _45868_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_45884_ok = false;
				return _45884_ok;
			}
		}
		else {
			_case_begin_2229094ea:;
			{
				_45884_ok = true;
				return _45884_ok;
			}
		}
		_match_end_22290942e:;
	}
}



inline jule::Bool _21eb594c8_is_duplicated_import_selection(_21eb5443a_Sema* _self_,jule::U64 _47745_itself,jule::Str _47762_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22290dc08:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> &_22290de39_imp = *it;
			{
				if (static_cast<jule::U64>(_22290de39_imp) == _47745_itself) {
					goto _iter_end_22290dc08;
				}
				if (_21eb4cb09_exist_ident(_22290de39_imp.ptr(), _47762_ident)) {
					return true;
				}
			}
			_iter_next_22290dc08:;
			++it;
			goto _iter_begin_22290dc08;
		}
		_iter_end_22290dc08:;
	}
	return false;
}



inline jule::Any _21eb5994b_get_import_def(_21eb5443a_Sema* _self_,jule::Str _49229_ident,jule::Ptr<_21eb49c8d_ImportInfo>& _49246_imp) {
	if (_21ec4b4dd_find_package_builtin_def(_49246_imp.get()._field_link_path,_49229_ident) != jule::Any(jule::Any(nullptr))) {
		return jule::Any(true);
	}
	{
		auto &expr = _49246_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222911865:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2229118ed_f = *it;
			{
				
				jule::Any _49921_def = _21ebba380_def_by_ident(_2229118ed_f.ptr(), _49229_ident,false);
				if (_49921_def != jule::Any(jule::Any(nullptr))) {
					return _49921_def;
				}
			}
			_iter_next_222911865:;
			++it;
			goto _iter_begin_222911865;
		}
		_iter_end_222911865:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _21eb59d47_check_import_selections(_21eb5443a_Sema* _self_,jule::Ptr<_21eb49c8d_ImportInfo>& _50847_imp) {
	jule::Bool _50867_ok = jule::Bool();
	_50867_ok=true;
	{
		auto &expr = _50847_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_2229139cc:;
		if (it != expr.end()) {
			_21c627dde_Token _222913d73_ident = *it;
			{
				if ((_222913d73_ident._field_kind == jule::Str("self", 4))) {
					goto _iter_next_2229139cc;
				}
				if (_21eb594c8_is_duplicated_import_selection(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(_50847_imp)),_222913d73_ident._field_kind)) {
					_21eb576a2_push_err(&(*_self_), _222913d73_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_222913d73_ident._field_kind)}));
					_21eb57a9d_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_50867_ok=false;
					goto _iter_next_2229139cc;
				}
				jule::Any _52221_def = _21eb5994b_get_import_def(&(*_self_), _222913d73_ident._field_kind,_50847_imp);
				{
					auto &_match_expr{ _52221_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_222916e31:;
						{
							goto _iter_next_2229139cc;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
						_case_begin_222916e97:;
						{
							jule::Ptr<_21eb75615_Var> _52825_v = _52221_def.operator jule::Ptr<_21eb75615_Var>();
							if (_21eb58032_is_accessible_define(&(*_self_), _52825_v.get()._field_public,_52825_v.get()._field_token)) {
								goto _iter_next_2229139cc;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21ec05288_TypeAlias>>()) {
						_case_begin_22291700d:;
						{
							jule::Ptr<_21ec05288_TypeAlias> _53325_ta = _52221_def.operator jule::Ptr<_21ec05288_TypeAlias>();
							if (_21eb58032_is_accessible_define(&(*_self_), _53325_ta.get()._field_public,_53325_ta.get()._field_token)) {
								goto _iter_next_2229139cc;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
						_case_begin_222917074:;
						{
							jule::Ptr<_21dd03266_Struct> _53825_strct = _52221_def.operator jule::Ptr<_21dd03266_Struct>();
							if (_21eb58032_is_accessible_define(&(*_self_), _53825_strct.get()._field_public,_53825_strct.get()._field_token)) {
								goto _iter_next_2229139cc;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21deee929_Trait>>()) {
						_case_begin_222917d11:;
						{
							jule::Ptr<_21deee929_Trait> _54325_t = _52221_def.operator jule::Ptr<_21deee929_Trait>();
							if (_21eb58032_is_accessible_define(&(*_self_), _54325_t.get()._field_public,_54325_t.get()._field_token)) {
								goto _iter_next_2229139cc;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21ddb6aee_Enum>>()) {
						_case_begin_222917d77:;
						{
							jule::Ptr<_21ddb6aee_Enum> _54825_e = _52221_def.operator jule::Ptr<_21ddb6aee_Enum>();
							if (_21eb58032_is_accessible_define(&(*_self_), _54825_e.get()._field_public,_54825_e.get()._field_token)) {
								goto _iter_next_2229139cc;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21dd19249_Fn>>()) {
						_case_begin_222917ddd:;
						{
							jule::Ptr<_21dd19249_Fn> _55325_f = _52221_def.operator jule::Ptr<_21dd19249_Fn>();
							if (_21eb58032_is_accessible_define(&(*_self_), _55325_f.get()._field_public,_55325_f.get()._field_token)) {
								goto _iter_next_2229139cc;
							}
						}
					}
					else {
						_case_begin_222916cdd:;
						{
							_21eb576a2_push_err(&(*_self_), _222913d73_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_222913d73_ident._field_kind)}));
							_50867_ok=false;
							goto _iter_next_2229139cc;
						}
					}
					_match_end_222916c88:;
				}
				_21eb576a2_push_err(&(*_self_), _222913d73_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_222913d73_ident._field_kind)}));
				_21eb57a9d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_50867_ok=false;
			}
			_iter_next_2229139cc:;
			++it;
			goto _iter_begin_2229139cc;
		}
		_iter_end_2229139cc:;
	}
	return _50867_ok;
}



inline jule::Bool _21eb5a232_is_use_alias_duplication(_21eb5443a_Sema* _self_,jule::Ptr<_21eb49c8d_ImportInfo>& _57044_imp) {
	if ((_57044_imp.get()._field_alias.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_222920687:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2229211b0_imp2 = *it;
			{
				if (_2229211b0_imp2 == _57044_imp) {
					goto _iter_end_222920687;
				}
				if (_2229211b0_imp2.get()._field_alias == _57044_imp.get()._field_alias) {
					return true;
				}
				if ((_2229211b0_imp2.get()._field_ident == _2229211b0_imp2.get()._field_link_path) && (_2229211b0_imp2.get()._field_ident == _57044_imp.get()._field_alias)) {
					return true;
				}
			}
			_iter_next_222920687:;
			++it;
			goto _iter_begin_222920687;
		}
		_iter_end_222920687:;
	}
	return false;
}



inline jule::Bool _21eb5a5c8_check_import(_21eb5443a_Sema* _self_,jule::Ptr<_21eb49c8d_ImportInfo>& _59136_imp) {
	if (_59136_imp.get()._field_cpp_linked || (_59136_imp.get()._field_package.get()._field_files.len() == 0LL)) {
		return true;
	}
	if (_21eb5a232_is_use_alias_duplication(&(*_self_), _59136_imp)) {
		_21eb576a2_push_err(&(*_self_), _59136_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>({jule::Any(_59136_imp.get()._field_alias)}));
		_21eb57a9d_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if ((!(_59136_imp.get()._field_duplicate))) {
		jule::Ptr<_21eb5443a_Sema> _60221_sema = jule::new_ptr<_21eb5443a_Sema>(_21eb5443a_Sema(jule::Slice<_21c348b32_Log>(),jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>(),jule::Ptr<_21ebb6c0b_SymbolTable>(),(*_self_)._field_flags));
		_21eb71b61_check(_60221_sema, _59136_imp.get()._field_package.get()._field_files);
		if ((_60221_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_60221_sema.get()._field_errors);
			_60221_sema.get()._field_errors=nullptr;
			return false;
		}
	}
	return _21eb59d47_check_import_selections(&(*_self_), _59136_imp);
}



inline void _21eb5a81a_check_imports(_21eb5443a_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_222928a7a:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222928c67_file = *it;
			{
				_21eb571c9_set_current_file(&(*_self_), _222928c67_file);
				{
					auto &expr = _222928c67_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_222929581:;
					if (it != expr.end()) {
						jule::Ptr<_21eb49c8d_ImportInfo> _22292999e_imp = *it;
						{
							jule::Bool _62021_ok = _21eb5a5c8_check_import(&(*_self_), _22292999e_imp);
							if ((!(_62021_ok))) {
								_21eb576a2_push_err(&(*_self_), _22292999e_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_22292999e_imp.get()._field_link_path)}));
								return;
							}
						}
						_iter_next_222929581:;
						++it;
						goto _iter_begin_222929581;
					}
					_iter_end_222929581:;
				}
			}
			_iter_next_222928a7a:;
			++it;
			goto _iter_begin_222928a7a;
		}
		_iter_end_222928a7a:;
	}
}



inline void _21eb5aa5c_impl_file_impls(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_22292b709:;
		if (it != expr.end()) {
			jule::Ptr<_21de24992_Impl> _22292b74d_imp = *it;
			{
				_21eb665d4_impl_impl(_self_, _22292b74d_imp);
			}
			_iter_next_22292b709:;
			++it;
			goto _iter_begin_22292b709;
		}
		_iter_end_22292b709:;
	}
}



inline void _21eb5ac9e_impl_impls(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22292cc49:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22292ce36_file = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _22292ce36_file);
				_21eb5aa5c_impl_file_impls(_self_);
			}
			_iter_next_22292cc49:;
			++it;
			goto _iter_begin_22292cc49;
		}
		_iter_end_22292cc49:;
	}
}



inline void _21eb5aee1_check_enums(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22292e1bd:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22292e3aa_file = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _22292e3aa_file);
				_21eb63180_check_enum_decls(_self_);
			}
			_iter_next_22292e1bd:;
			++it;
			goto _iter_begin_22292e1bd;
		}
		_iter_end_22292e1bd:;
	}
}



inline jule::Bool _21eb5b552_check_type_with_refers(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ec0aa85_TypeSymbol>& _65347_t,jule::Trait<_21ec23a48_Lookup> _65413_l,jule::Ptr<_21ec16ed1_Referencer> _65428_referencer) {
	jule::Bool _65455_ok = jule::Bool();
	if (_21ec0aee7_checked(_65347_t.ptr())) {
		_65455_ok = true;
		return _65455_ok;
	}
	_21ec17e27_TypeChecker _65817_tc = _21ec17e27_TypeChecker(_self_,_65413_l,_65428_referencer,_21c627dde_Token(),jule::Slice<jule::Ptr<_21c640423_GenericDecl>>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool());
	if ((_65428_referencer != nullptr) && (_65428_referencer.get()._field_refs != nullptr)) {
		_65817_tc._field_owner_alias=_65428_referencer.get()._field_owner.operator jule::Ptr<_21ec05288_TypeAlias>();
	}
	_21ec20e41_check(&_65817_tc, _65347_t);
	_65455_ok = _21ec0aee7_checked(_65347_t.ptr());
	return _65455_ok;
}



inline jule::Bool _21eb5b9d6_check_type(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ec0aa85_TypeSymbol>& _67735_t,jule::Trait<_21ec23a48_Lookup> _67755_l) {
	return _21eb5b552_check_type_with_refers(_self_, _67735_t,_67755_l,nullptr);
}



inline jule::Ptr<_21ec06223_TypeKind> _21eb5beae_build_type_with_generics(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21c5d253b_TypeDecl>& _68349_t,jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _68413_generics) {
	jule::Ptr<_21ec17e27_TypeChecker> _68517_tc = jule::new_ptr<_21ec17e27_TypeChecker>(_21ec17e27_TypeChecker(_self_,jule::Trait<_21ec23a48_Lookup>(_self_, 3),jule::Ptr<_21ec16ed1_Referencer>(),_21c627dde_Token(),jule::Slice<jule::Ptr<_21c640423_GenericDecl>>(),_68413_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool()));
	return _21ec20b22_check_decl(_68517_tc.ptr(), _68349_t);
}



inline jule::Ptr<_21ec06223_TypeKind> _21eb5c355_build_type(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21c5d253b_TypeDecl>& _69435_t) {
	return _21eb5beae_build_type_with_generics(_self_, _69435_t,nullptr);
}



inline jule::Ptr<_21ec06223_TypeKind> _21eb5c70c_select_type(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21c5d253b_TypeDecl>& _69936_t) {
	jule::Ptr<_21ec17e27_TypeChecker> _70017_tc = jule::new_ptr<_21ec17e27_TypeChecker>(_21ec17e27_TypeChecker(_self_,jule::Trait<_21ec23a48_Lookup>(_self_, 3),jule::Ptr<_21ec16ed1_Referencer>(),_21c627dde_Token(),jule::Slice<jule::Ptr<_21c640423_GenericDecl>>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool(),jule::Bool(),true,jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool()));
	return _21ec20b22_check_decl(_70017_tc.ptr(), _69936_t);
}



inline jule::Ptr<_21ebc00aa_Eval> _21eb5cc6d_evalpd(jule::Ptr<_21eb5443a_Sema> _self_,jule::Trait<_21ec23a48_Lookup> _71030_l,jule::Ptr<_21ec06223_TypeKind> _71045_p,jule::Ptr<_21eb75615_Var> _71063_owner) {
	jule::Ptr<_21ebc00aa_Eval> _71117_e = jule::new_ptr<_21ebc00aa_Eval>(_21ebc00aa_Eval(_self_,_71030_l,jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_71063_owner,jule::Ptr<_21dd05be7_FieldIns>(),jule::Bool()));
	{
		auto &_match_expr{ _71030_l };
		
		if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
			_case_begin_22293b86d:;
			{
				_71117_e.get()._field_unsafety=_21eb313b2_is_unsafe(_71030_l.operator jule::Ptr<_21eb2ed2d_ScopeChecker>());
			}
		}
		_match_end_22293b818:;
	}
	_71117_e.get()._field_prefix=_71045_p;
	return _71117_e;
}



inline jule::Ptr<_21ebc00aa_Eval> _21eb5d202_evalp(jule::Ptr<_21eb5443a_Sema> _self_,jule::Trait<_21ec23a48_Lookup> _72829_l,jule::Ptr<_21ec06223_TypeKind> _72844_p) {
	return _21eb5cc6d_evalpd(_self_, _72829_l,_72844_p,nullptr);
}



inline jule::Ptr<_21ebc00aa_Eval> _21eb5d5a9_eval(jule::Ptr<_21eb5443a_Sema> _self_,jule::Trait<_21ec23a48_Lookup> _73328_l) {
	return _21eb5d202_evalp(_self_, _73328_l,nullptr);
}



inline jule::Bool _21eb5dbe7_check_assign_type(jule::Ptr<_21eb5443a_Sema> _self_,jule::Bool _73737_dest_is_ref,jule::Ptr<_21ec06223_TypeKind>& _73761_dest,jule::Ptr<_21ebbd053_Data>& _73814_d,_21c627dde_Token _73828_error_token) {
	if (_73814_d.get()._field_decl) {
		_21eb576a2_push_err(_self_.ptr(), _73828_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	}
	if (_73737_dest_is_ref) {
		if ((!(_21ec069e8_equals(_73761_dest, _73814_d.get()._field_kind)))) {
			_21eb576a2_push_err(_self_.ptr(), _73828_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_73761_dest.ptr())),jule::Any(_21ec06641_to_str(_73814_d.get()._field_kind.ptr()))}));
			return false;
		}
	} else {
		jule::Ptr<_21eba6778_AssignTypeChecker> _74921_atc = jule::new_ptr<_21eba6778_AssignTypeChecker>(_21eba6778_AssignTypeChecker(_self_,_73761_dest,_73814_d,_73828_error_token));
		jule::Bool _75517_ok = _21eba7bec_check(_74921_atc.ptr());
		if ((!(_75517_ok))) {
			return false;
		}
	}
	if ((!(_21ebbda59_is_const(_73814_d.ptr()))) || (_21ec087b9_prim(_73761_dest.ptr()) == nullptr)) {
		return true;
	}
	jule::Str _76517_kind = _21ec087b9_prim(_73761_dest.ptr()).get()._field_kind;
	{
		
		if (_21eb2aac6_is_sig_int(_76517_kind)) {
			_case_begin_2229446cd:;
			{
				_21eaa10ce_set_i64(_73814_d.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64(_73814_d.get()._field_constant.ptr())));
			}
		}
		else if (_21eb2ae28_is_unsig_int(_76517_kind)) {
			_case_begin_222944755:;
			{
				_21eaa13ed_set_u64(_73814_d.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64(_73814_d.get()._field_constant.ptr())));
			}
		}
		else if (_21eb2b588_is_float(_76517_kind)) {
			_case_begin_2229447cc:;
			{
				_21eaa1d5a_set_f64(_73814_d.get()._field_constant.ptr(), static_cast<jule::F64>(_21eaa0cb0_as_f64(_73814_d.get()._field_constant.ptr())));
			}
		}
		_match_end_222944601:;
	}
	return true;
}



inline jule::Bool _21eb5e29c_check_type_compatibility(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ec06223_TypeKind>& _77949_dest,jule::Ptr<_21ec06223_TypeKind>& _78014_src,_21c627dde_Token& _78035_error_token) {
	if ((_78014_src == nullptr)) {
		_21eb576a2_push_err(_self_.ptr(), _78035_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_77949_dest.ptr())),jule::Any(_21ec06641_to_str(_78014_src.ptr()))}));
		return false;
	}
	if ((_21ec0a634_tup(_78014_src.ptr()) != nullptr)) {
		_21eb576a2_push_err(_self_.ptr(), _78035_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_77949_dest.ptr())),jule::Any(_21ec06641_to_str(_78014_src.ptr()))}));
		return false;
	}
	_21eba4e2a_TypeCompatibilityChecker _79417_tcc = _21eba4e2a_TypeCompatibilityChecker(_self_,_77949_dest,_78014_src,_78035_error_token);
	if (_21eba6129_check(&_79417_tcc)) {
		return true;
	}
	_21eb576a2_push_err(_self_.ptr(), _78035_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_77949_dest.ptr())),jule::Any(_21ec06641_to_str(_78014_src.ptr()))}));
	return false;
}



inline jule::Ptr<_21ec06223_TypeKind> _21eb5e764_build_non_generic_type_kind(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21c5d253b_TypeDecl>& _81552_ast,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>& _81614_generics) {
	jule::Ptr<_21ec17e27_TypeChecker> _81717_tc = jule::new_ptr<_21ec17e27_TypeChecker>(_21ec17e27_TypeChecker(_self_,jule::Trait<_21ec23a48_Lookup>(_self_, 3),jule::Ptr<_21ec16ed1_Referencer>(),_21c627dde_Token(),_81614_generics,jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool()));
	return _21ec20b22_check_decl(_81717_tc.ptr(), _81552_ast);
}



inline void _21eb5eab6_build_fn_non_generic_type_kinds(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd1cc42_FnIns>& _82556_f) {
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _82617_generics = nullptr;
	if (_21dd199db_is_method(_82556_f.get()._field_decl.ptr())) {
		_82617_generics=jule::append(_82556_f.get()._field_decl.get()._field_generics,_82556_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_82617_generics=_82556_f.get()._field_decl.get()._field_generics;
	}
	{
		auto &expr = _82556_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_2229502cc:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1badc_ParamIns> _222950321_p = *it;
			{
				if ((!(_21dd17b2c_is_self(_222950321_p.get()._field_decl.ptr())))) {
					_222950321_p.get()._field_kind=_21eb5e764_build_non_generic_type_kind(_self_, _222950321_p.get()._field_decl.get()._field_kind.get()._field_decl,_82617_generics);
				}
			}
			_iter_next_2229502cc:;
			++it;
			goto _iter_begin_2229502cc;
		}
		_iter_end_2229502cc:;
	}
	if ((!(_21dd19711_is_void(_82556_f.get()._field_decl.ptr())))) {
		_82556_f.get()._field_result=_21eb5e764_build_non_generic_type_kind(_self_, _82556_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_82617_generics);
	}
}



inline jule::Ptr<_21dd1cc42_FnIns> _21eb5eea1_get_trait_check_fn_kind(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd19249_Fn>& _84348_f) {
	jule::Ptr<_21dd1cc42_FnIns> _84417_ins = _21dd1b009_instance_force(_84348_f);
	_21eb5eab6_build_fn_non_generic_type_kinds(_self_, _84417_ins);
	return _84417_ins;
}



inline jule::Bool _21eb60347_reload_fn_ins_types(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd1cc42_FnIns>& _84944_f) {
	jule::Bool _84957_ok = jule::Bool();
	if (_21dd1d8be_is_builtin(_84944_f.ptr()) || _21dd1db99_is_anon(_84944_f.ptr())) {
		_84957_ok = true;
		return _84957_ok;
	}
	jule::Ptr<_21eb5443a_Sema> _85417_sema = _84944_f.get()._field_decl.get()._field_sema;
	jule::Ptr<_21ebb6c0b_SymbolTable> _85617_old = _84944_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_21eb571c9_set_current_file(_84944_f.get()._field_decl.get()._field_sema.ptr(), _85617_old);
	});
	jule::Ptr<_21ebb6c0b_SymbolTable> _85817_file = _21eb538ce_find_file(_84944_f.get()._field_decl.get()._field_sema.get()._field_files,_84944_f.get()._field_decl.get()._field_token._field_file);
	if ((_85817_file != nullptr)) {
		_21eb571c9_set_current_file(_84944_f.get()._field_decl.get()._field_sema.ptr(), _85817_file);
	}
	jule::I64 _86317_size = _84944_f.get()._field_generics.len();
	if ((_84944_f.get()._field_decl != nullptr) && (_84944_f.get()._field_decl.get()._field_owner != nullptr)) {
		_86317_size+=static_cast<jule::I64>(_84944_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _86817_generics = jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>::alloc(0LL,_86317_size);
	{
		auto &expr = _84944_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22295b10c:;
		if (it != expr.end()) {
			jule::I64 _22295b1b7_i = it - expr.begin();
			jule::Ptr<_21ec06223_TypeKind> _22295b3a4_g = *it;
			{
				_86817_generics = jule::alloc_for_append(_86817_generics,1);_86817_generics.__push(jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(jule::Ptr<_21c6411e3_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_21c627dde_Token(),_84944_f.get()._field_decl.get()._field_generics[_22295b1b7_i].get()._field_ident,jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_22295b3a4_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>())));
			}
			_iter_next_22295b10c:;
			++it;
			_22295b1b7_i++;
			goto _iter_begin_22295b10c;
		}
		_iter_end_22295b10c:;
	}
	if ((_84944_f.get()._field_decl != nullptr) && (_84944_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_21dd06742_StructIns> _88021_owner = _84944_f.get()._field_owner;
		{
			auto &expr = _88021_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_22295bd22:;
			if (it != expr.end()) {
				jule::I64 _22295cd56_i = it - expr.begin();
				jule::Ptr<_21ec06223_TypeKind> _22295d076_g = *it;
				{
					_86817_generics = jule::alloc_for_append(_86817_generics,1);_86817_generics.__push(jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(jule::Ptr<_21c6411e3_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_21c627dde_Token(),_88021_owner.get()._field_decl.get()._field_generics[_22295cd56_i].get()._field_ident,jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_22295d076_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>())));
				}
				_iter_next_22295bd22:;
				++it;
				_22295cd56_i++;
				goto _iter_begin_22295bd22;
			}
			_iter_end_22295bd22:;
		}
	}
	_84957_ok=true;
	{
		auto &expr = _84944_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22295e8a2:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1badc_ParamIns> _22295e96d_p = *it;
			{
				if (_21dd17b2c_is_self(_22295e96d_p.get()._field_decl.ptr())) {
					if (_21dd17e07_is_ref(_22295e96d_p.get()._field_decl.ptr())) {
						_22295e96d_p.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec103e7_Sptr>(_21ec103e7_Sptr(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_84944_f.get()._field_owner, 0))))), 6)));
					} else {
						_22295e96d_p.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_84944_f.get()._field_owner, 0)));
					}
				} else {
					_22295e96d_p.get()._field_kind=_21eb5beae_build_type_with_generics(_85417_sema, _22295e96d_p.get()._field_decl.get()._field_kind.get()._field_decl,_86817_generics);
					if ((_22295e96d_p.get()._field_kind != nullptr)) {
						_22295e96d_p.get()._field_kind.get()._field_variadic=_22295e96d_p.get()._field_decl.get()._field_variadic;
						if (_22295e96d_p.get()._field_decl.get()._field_reference && (!(_21ec158e7_is_valid_for_ref(_22295e96d_p.get()._field_kind)))) {
							_21eb576a2_push_err(_self_.ptr(), _22295e96d_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_22295e96d_p.get()._field_kind.ptr()))}));
						}
					} else {
						_84957_ok=false;
					}
				}
			}
			_iter_next_22295e8a2:;
			++it;
			goto _iter_begin_22295e8a2;
		}
		_iter_end_22295e8a2:;
	}
	if ((!(_21dd19711_is_void(_84944_f.get()._field_decl.ptr())))) {
		_84944_f.get()._field_result=_21eb5beae_build_type_with_generics(_85417_sema, _84944_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86817_generics);
		_84957_ok=(_84944_f.get()._field_result != nullptr) && _84957_ok;
	}
	if (_85417_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_85417_sema.get()._field_errors);
		_85417_sema.get()._field_errors=nullptr;
	}
	return _84957_ok;
}



inline jule::Bool _21eb6091e_check_ref_validity_for_init_expr(jule::Ptr<_21eb5443a_Sema> _self_,jule::Bool _93352_left_mut,jule::Ptr<_21ebbd053_Data>& _93373_d,_21c627dde_Token& _93388_error_token) {
	{
		auto &_match_expr{ _93373_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_222968e3e:;
			{
				goto _match_end_2229680c5;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>>()) {
			_case_begin_222968ea5:;
			{
				jule::Ptr<_21dd0d88c_TraitSubIdentExprModel> _93821_model = _93373_d.get()._field_model.operator jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>();
				if ((!(_21eb52108_is_valid_model_for_ref(_93821_model.get()._field_expr)))) {
					_21eb576a2_push_err(_self_.ptr(), _93388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_93821_model.get()._field_method.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
			_case_begin_2229681c4:;
			{
				jule::Ptr<_21dd0e294_StructSubIdentExprModel> _94421_model = _93373_d.get()._field_model.operator jule::Ptr<_21dd0e294_StructSubIdentExprModel>();
				if ((!(_21eb52108_is_valid_model_for_ref(_94421_model.get()._field_expr.get()._field_model)))) {
					_21eb576a2_push_err(_self_.ptr(), _93388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_94421_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd100db_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd107c3_CommonSubIdentExprModel>>()) {
			_case_begin_22296823a:;
			{
				_21eb576a2_push_err(_self_.ptr(), _93388_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd09349_UnaryExprModel>>()) {
			_case_begin_2229682a1:;
			{
				jule::Ptr<_21dd09349_UnaryExprModel> _95421_unary = _93373_d.get()._field_model.operator jule::Ptr<_21dd09349_UnaryExprModel>();
				if ((_95421_unary.get()._field_op._field_kind == jule::Str("*", 1))) {
					if ((!(_21eb52108_is_valid_model_for_ref(_93373_d.get()._field_model)))) {
						_21eb576a2_push_err(_self_.ptr(), _93388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					}
					goto _match_end_2229680c5;
				}
				goto _case_begin_22296812a;
			}
		}
		else {
			_case_begin_22296812a:;
			{
				_21eb576a2_push_err(_self_.ptr(), _93388_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_2229680c5:;
	}
	if (_93352_left_mut && (!(_93373_d.get()._field_mutable))) {
		_21eb576a2_push_err(_self_.ptr(), _93388_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	}
	return true;
}



inline jule::Bool _21eb6117d_check_validity_for_init_expr(jule::Ptr<_21eb5443a_Sema> _self_,jule::Bool _97548_left_mut,jule::Bool _97564_left_ref,jule::Ptr<_21ec06223_TypeKind>& _97610_left_kind,jule::Ptr<_21ebbd053_Data>& _97637_d,_21c627dde_Token& _97652_error_token) {
	if ((_97548_left_mut && (!(_97637_d.get()._field_mutable))) && _21ec07884_mutable(_97637_d.get()._field_kind.ptr())) {
		_21eb576a2_push_err(_self_.ptr(), _97652_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_97637_d.get()._field_kind.ptr()))}));
		return false;
	}
	if (_97564_left_ref) {
		if ((!(_21eb6091e_check_ref_validity_for_init_expr(_self_, _97548_left_mut,_97637_d,_97652_error_token)))) {
			return false;
		}
	}
	jule::Ptr<_21eba6778_AssignTypeChecker> _98717_atc = jule::new_ptr<_21eba6778_AssignTypeChecker>(_21eba6778_AssignTypeChecker(_self_,jule::Ptr<_21ec06223_TypeKind>(),_97637_d,_97652_error_token));
	return _21eba7092_check_validity(_98717_atc.ptr());
}



inline jule::Bool _21eb61612_check_type_alias_decl_kind(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ec05288_TypeAlias>& _99551_ta,jule::Trait<_21ec23a48_Lookup> _99571_l) {
	jule::Bool _99584_ok = jule::Bool();
	jule::Ptr<_21ebb6c0b_SymbolTable> _99617_old = _self_.get()._field_file;
	__JULE_DEFER({
		_21eb571c9_set_current_file(_self_.ptr(), _99617_old);
	});
	jule::Ptr<_21ebb6c0b_SymbolTable> _100017_file = _21eb538ce_find_file(_self_.get()._field_files,_99551_ta.get()._field_token._field_file);
	if ((_100017_file != nullptr)) {
		_21eb571c9_set_current_file(_self_.ptr(), _100017_file);
	}
	_99584_ok=_21eb5b552_check_type_with_refers(_self_, _99551_ta.get()._field_kind,_99571_l,jule::new_ptr<_21ec16ed1_Referencer>(_21ec16ed1_Referencer(_99551_ta.get()._field_ident,jule::Any(jule::Any(_99551_ta)),(&(_99551_ta.get()._field_refers)))));
	if ((_99584_ok && (_21ec09424_arr(_99551_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _21ec09424_arr(_99551_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto) {
		_21eb576a2_push_err(_self_.ptr(), _99551_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_99584_ok=false;
	}
	return _99584_ok;
}



inline void _21eb619ec_check_type_alias_decl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ec05288_TypeAlias>& _101646_ta,jule::Trait<_21ec23a48_Lookup> _101666_l) {
	if (_21c62abc2_is_ignore_ident(_101646_ta.get()._field_ident)) {
		_21eb576a2_push_err(_self_.ptr(), _101646_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_21eb61612_check_type_alias_decl_kind(_self_, _101646_ta,_101666_l);
}



inline void _21eb61d60_check_type_alias_decl_dup(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ec05288_TypeAlias>& _102450_ta) {
	if (_21eb58593_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102450_ta)),_102450_ta.get()._field_ident,_102450_ta.get()._field_cpp_linked)) {
		_21eb576a2_push_err(_self_.ptr(), _102450_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_102450_ta.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_21eb61612_check_type_alias_decl_kind(_self_, _102450_ta,jule::Trait<_21ec23a48_Lookup>(_self_, 3));
}



inline jule::Bool _21eb62129_check_type_alias_decls(jule::Ptr<_21eb5443a_Sema> _self_) {
	jule::Bool _103344_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_222980a6b:;
		if (it != expr.end()) {
			jule::Ptr<_21ec05288_TypeAlias> _222980ae3_ta = *it;
			{
				_21eb61d60_check_type_alias_decl_dup(_self_, _222980ae3_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_103344_ok = false;
					return _103344_ok;
				}
			}
			_iter_next_222980a6b:;
			++it;
			goto _iter_begin_222980a6b;
		}
		_iter_end_222980a6b:;
	}
	_103344_ok = true;
	return _103344_ok;
}



inline void _21eb62448_check_enum_items_dup(_21eb5443a_Sema* _self_,jule::Ptr<_21ddb6aee_Enum> _104539_e) {
	{
		auto &expr = _104539_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_2229826e9:;
		if (it != expr.end()) {
			jule::Ptr<_21dd39e29_EnumItem> &_2229827b5_item = *it;
			{
				if (_21c62abc2_is_ignore_ident(_2229827b5_item.get()._field_ident)) {
					_21eb576a2_push_err(&(*_self_), _2229827b5_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _104539_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_222984036:;
						if (it != expr.end()) {
							jule::Ptr<_21dd39e29_EnumItem> &_222984113_citem = *it;
							{
								if (_2229827b5_item == _222984113_citem) {
									goto _iter_end_222984036;
								} else if (_2229827b5_item.get()._field_ident == _222984113_citem.get()._field_ident) {
									_21eb576a2_push_err(&(*_self_), _2229827b5_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_2229827b5_item.get()._field_ident)}));
									_21eb57a9d_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_222984036;
								}
							}
							_iter_next_222984036:;
							++it;
							goto _iter_begin_222984036;
						}
						_iter_end_222984036:;
					}
				}
			}
			_iter_next_2229826e9:;
			++it;
			goto _iter_begin_2229826e9;
		}
		_iter_end_2229826e9:;
	}
}



inline void _21eb62767_check_enum_items_str(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ddb6aee_Enum>& _106345_e) {
	{
		auto &expr = _106345_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_222982b7d:;
		if (it != expr.end()) {
			jule::Ptr<_21dd39e29_EnumItem> _222986357_item = *it;
			{
				if (_21ddd8318_auto_expr(_222986357_item.ptr())) {
					_222986357_item.get()._field_value=jule::new_ptr<_21ebbe362_Value>(_21ebbe362_Value(jule::Ptr<_21c4d7b4a_Expr>(),jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__21ea9dbae_new_str(_222986357_item.get()._field_ident)))));
					_222986357_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_222986357_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_21ebbd053_Data> _107325_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_, jule::Trait<_21ec23a48_Lookup>(_self_, 3)), _222986357_item.get()._field_value.get()._field_expr);
					if ((_107325_d == nullptr)) {
						goto _iter_next_222982b7d;
					}
					if ((!(_21ebbda59_is_const(_107325_d.ptr())))) {
						_21eb576a2_push_err(_self_.ptr(), _222986357_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_21eb5dbe7_check_assign_type(_self_, false,_106345_e.get()._field_kind.get()._field_kind,_107325_d,_222986357_item.get()._field_token);
					_222986357_item.get()._field_value.get()._field_data=_107325_d;
				}
			}
			_iter_next_222982b7d:;
			++it;
			goto _iter_begin_222982b7d;
		}
		_iter_end_222982b7d:;
	}
}



inline void _21eb62a86_check_enum_items_int(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ddb6aee_Enum>& _108845_e) {
	jule::Ptr<_21ec0b58b_Prim> _108913_prim = _21ec087b9_prim(_108845_e.get()._field_kind.get()._field_kind.ptr());
	jule::U64 _109017_max = static_cast<jule::U64>(_21eb24dab_max(_21ec0b965_to_str(_108913_prim.ptr())));
	{
		auto &expr = _108845_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_22298cbaa:;
		if (it != expr.end()) {
			jule::I64 _22298cda8_i = it - expr.begin();
			jule::Ptr<_21dd39e29_EnumItem> _22298d062_item = *it;
			{
				if ((_109017_max == 0LLU)) {
					_21eb576a2_push_err(_self_.ptr(), _22298d062_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_109017_max)--;
				}
				if (_21ddd8318_auto_expr(_22298d062_item.ptr())) {
					_22298d062_item.get()._field_value=jule::new_ptr<_21ebbe362_Value>(_21ebbe362_Value(jule::Ptr<_21c4d7b4a_Expr>(),jule::new_ptr<_21ebbd053_Data>()));
					{
						
						if (_21eb2aac6_is_sig_int(_21ec0b965_to_str(_108913_prim.ptr()))) {
							_case_begin_22299043d:;
							{
								_22298d062_item.get()._field_value.get()._field_data.get()._field_constant=static__21ea9d670_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_109017_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_109017_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_22298cda8_i)))))))));
							}
						}
						else {
							_case_begin_22298ee65:;
							{
								_22298d062_item.get()._field_value.get()._field_data.get()._field_constant=static__21ea9d7d5_new_u64(static_cast<jule::U64>(_109017_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_109017_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_22298cda8_i))))))));
							}
						}
						_match_end_22298ee10:;
					}
					_22298d062_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_22298d062_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_21ebbd053_Data> _110925_d = _21ebe0718_eval_expr(_21eb5d5a9_eval(_self_, jule::Trait<_21ec23a48_Lookup>(_self_, 3)), _22298d062_item.get()._field_value.get()._field_expr);
					if ((_110925_d == nullptr)) {
						goto _iter_next_22298cbaa;
					}
					if ((!(_21ebbda59_is_const(_110925_d.ptr())))) {
						_21eb576a2_push_err(_self_.ptr(), _22298d062_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_21eb5dbe7_check_assign_type(_self_, false,_108845_e.get()._field_kind.get()._field_kind,_110925_d,_22298d062_item.get()._field_token);
					_22298d062_item.get()._field_value.get()._field_data=_110925_d;
				}
			}
			_iter_next_22298cbaa:;
			++it;
			_22298cda8_i++;
			goto _iter_begin_22298cbaa;
		}
		_iter_end_22298cbaa:;
	}
}



inline void _21eb62da5_check_enum_decl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21ddb6aee_Enum>& _112440_e) {
	if (_21c62abc2_is_ignore_ident(_112440_e.get()._field_ident)) {
		_21eb576a2_push_err(_self_.ptr(), _112440_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_21eb58593_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_112440_e)),_112440_e.get()._field_ident,false)) {
		_21eb576a2_push_err(_self_.ptr(), _112440_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_112440_e.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((_112440_e.get()._field_items.len() == 0LL)) {
		_21eb576a2_push_err(_self_.ptr(), _112440_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>({jule::Any(_112440_e.get()._field_ident)}));
	}
	_21eb62448_check_enum_items_dup(_self_.ptr(), _112440_e);
	if ((_112440_e.get()._field_kind != nullptr)) {
		if ((!(_21eb5b9d6_check_type(_self_, _112440_e.get()._field_kind,jule::Trait<_21ec23a48_Lookup>(_self_, 3))))) {
			return;
		}
	} else {
		_112440_e.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5)))));
	}
	jule::Ptr<_21ec0b58b_Prim> _115117_t = _21ec087b9_prim(_112440_e.get()._field_kind.get()._field_kind.ptr());
	if ((_115117_t == nullptr)) {
		_21eb576a2_push_err(_self_.ptr(), _112440_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if (_21ec0ecba_is_str(_115117_t.ptr())) {
			_case_begin_22299d539:;
			{
				_21eb62767_check_enum_items_str(_self_, _112440_e);
			}
		}
		else if (_21eb2b236_is_int(_21ec0b965_to_str(_115117_t.ptr()))) {
			_case_begin_22299d5a0:;
			{
				_21eb62a86_check_enum_items_int(_self_, _112440_e);
			}
		}
		else {
			_case_begin_22299a415:;
			{
				_21eb576a2_push_err(_self_.ptr(), _112440_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_22299c758:;
	}
}



inline jule::Bool _21eb63180_check_enum_decls(jule::Ptr<_21eb5443a_Sema> _self_) {
	jule::Bool _117138_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_2229a0e32:;
		if (it != expr.end()) {
			jule::Ptr<_21ddb6aee_Enum> _2229a0ea9_e = *it;
			{
				_21eb62da5_check_enum_decl(_self_, _2229a0ea9_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_117138_ok = false;
					return _117138_ok;
				}
			}
			_iter_next_2229a0e32:;
			++it;
			goto _iter_begin_2229a0e32;
		}
		_iter_end_2229a0e32:;
	}
	_117138_ok = true;
	return _117138_ok;
}



inline jule::Bool _21eb63537_check_decl_generics(_21eb5443a_Sema* _self_,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>& _118339_generics) {
	jule::Bool _118372_ok = jule::Bool();
	_118372_ok=true;
	{
		auto &expr = _118339_generics;
		auto it = expr.begin();
		_iter_begin_2229a2d02:;
		if (it != expr.end()) {
			jule::I64 _2229a30bb_i = it - expr.begin();
			jule::Ptr<_21c640423_GenericDecl> &_2229a330d_g = *it;
			{
				if (_21c62abc2_is_ignore_ident(_2229a330d_g.get()._field_ident)) {
					_21eb576a2_push_err(&(*_self_), _2229a330d_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_118372_ok=false;
					goto _iter_next_2229a2d02;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _118339_generics;
					auto it = expr.begin();
					_iter_begin_2229a49d5:;
					if (it != expr.end()) {
						jule::I64 _2229a4a7e_j = it - expr.begin();
						jule::Ptr<_21c640423_GenericDecl> &_2229a4d04_ct = *it;
						{
							{
								
								if (_2229a4a7e_j >= _2229a30bb_i) {
									_case_begin_2229a550d:;
									{
										goto _iter_end_2229a49d5;
									}
								}
								else if (_2229a330d_g.get()._field_ident == _2229a4d04_ct.get()._field_ident) {
									_case_begin_2229a5585:;
									{
										_21eb576a2_push_err(&(*_self_), _2229a330d_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_2229a330d_g.get()._field_ident)}));
										_21eb57a9d_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_118372_ok=false;
										goto _iter_end_2229a49d5;
									}
								}
								_match_end_2229a53ed:;
							}
						}
						_iter_next_2229a49d5:;
						++it;
						_2229a4a7e_j++;
						goto _iter_begin_2229a49d5;
					}
					_iter_end_2229a49d5:;
				}
			}
			_iter_next_2229a2d02:;
			++it;
			_2229a30bb_i++;
			goto _iter_begin_2229a2d02;
		}
		_iter_end_2229a2d02:;
	}
	return _118372_ok;
}



inline jule::Bool _21eb63933_check_fn_decl_params_dup(_21eb5443a_Sema* _self_,jule::Ptr<_21dd19249_Fn>& _121144_f) {
	jule::Bool _121154_ok = jule::Bool();
	_121154_ok=true;
	_julec_label_check:;
	{
		auto &expr = _121144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_2229a8764:;
		if (it != expr.end()) {
			jule::I64 _2229a8962_i = it - expr.begin();
			jule::Ptr<_21dd17423_Param> &_2229a8b3d_p = *it;
			{
				{
					auto &expr = _121144_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_2229a9347:;
					if (it != expr.end()) {
						jule::Ptr<_21c640423_GenericDecl> &_2229a9413_g = *it;
						{
							if (_2229a8b3d_p.get()._field_ident == _2229a9413_g.get()._field_ident) {
								_121154_ok=false;
								_21eb576a2_push_err(&(*_self_), _2229a8b3d_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_2229a8b3d_p.get()._field_ident)}));
								_21eb57a9d_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_2229a8764;
							}
						}
						_iter_next_2229a9347:;
						++it;
						goto _iter_begin_2229a9347;
					}
					_iter_end_2229a9347:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _121144_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_2229a9b72:;
					if (it != expr.end()) {
						jule::I64 _2229a9666_j = it - expr.begin();
						jule::Ptr<_21dd17423_Param> &_2229ab525_jp = *it;
						{
							{
								
								if (_2229a9666_j >= _2229a8962_i) {
									_case_begin_2229abc2e:;
									{
										goto _iter_end_2229a9b72;
									}
								}
								else if (_21c62aed0_is_anon_ident(_2229a8b3d_p.get()._field_ident) || _21c62aed0_is_anon_ident(_2229ab525_jp.get()._field_ident)) {
									_case_begin_2229abca6:;
									{
										goto _iter_end_2229a9b72;
									}
								}
								else if (_2229a8b3d_p.get()._field_ident == _2229ab525_jp.get()._field_ident) {
									_case_begin_2229abd2d:;
									{
										_121154_ok=false;
										_21eb576a2_push_err(&(*_self_), _2229a8b3d_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_2229a8b3d_p.get()._field_ident)}));
										_21eb57a9d_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_2229a8764;
									}
								}
								_match_end_2229abb0d:;
							}
						}
						_iter_next_2229a9b72:;
						++it;
						_2229a9666_j++;
						goto _iter_begin_2229a9b72;
					}
					_iter_end_2229a9b72:;
				}
			}
			_iter_next_2229a8764:;
			++it;
			_2229a8962_i++;
			goto _iter_begin_2229a8764;
		}
		_iter_end_2229a8764:;
	}
	return _121154_ok;
}



inline jule::Bool _21eb63d1d_check_fn_decl_result_dup(_21eb5443a_Sema* _self_,jule::Ptr<_21dd19249_Fn>& _124744_f) {
	jule::Bool _124754_ok = jule::Bool();
	_124754_ok=true;
	if (_21dd19711_is_void(_124744_f.ptr())) {
		return _124754_ok;
	}
	{
		auto &expr = _124744_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_2229b0aac:;
		if (it != expr.end()) {
			jule::I64 _2229b0d43_i = it - expr.begin();
			_21c627dde_Token &_2229b1063_v = *it;
			{
				if (_21c62abc2_is_ignore_ident(_2229b1063_v._field_kind)) {
					goto _iter_next_2229b0aac;
				}
				{
					auto &expr = _124744_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_2229b1be0:;
					if (it != expr.end()) {
						jule::Ptr<_21c640423_GenericDecl> &_2229b1ddd_g = *it;
						{
							if (_2229b1063_v._field_kind == _2229b1ddd_g.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_2229b1be0:;
						++it;
						goto _iter_begin_2229b1be0;
					}
					_iter_end_2229b1be0:;
				}
				{
					auto &expr = _124744_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_2229b2e77:;
					if (it != expr.end()) {
						jule::Ptr<_21dd17423_Param> &_2229b30a9_p = *it;
						{
							if (_2229b1063_v._field_kind == _2229b30a9_p.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_2229b2e77:;
						++it;
						goto _iter_begin_2229b2e77;
					}
					_iter_end_2229b2e77:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _124744_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_2229b906b:;
					if (it != expr.end()) {
						jule::I64 _2229b916a_j = it - expr.begin();
						_21c627dde_Token &_2229b93ac_jv = *it;
						{
							{
								
								if (_2229b916a_j >= _2229b0d43_i) {
									_case_begin_2229b9a72:;
									{
										goto _iter_end_2229b906b;
									}
								}
								else if (_2229b93ac_jv._field_kind == _2229b1063_v._field_kind) {
									_case_begin_2229b9ae9:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_2229b9962:;
							}
						}
						_iter_next_2229b906b:;
						++it;
						_2229b916a_j++;
						goto _iter_begin_2229b906b;
					}
					_iter_end_2229b906b:;
				}
				goto _iter_next_2229b0aac;
				_julec_label_exist:;
				_21eb576a2_push_err(&(*_self_), _2229b1063_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_2229b1063_v._field_kind)}));
				_21eb57a9d_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_124754_ok=false;
			}
			_iter_next_2229b0aac:;
			++it;
			_2229b0d43_i++;
			goto _iter_begin_2229b0aac;
		}
		_iter_end_2229b0aac:;
	}
	return _124754_ok;
}



inline void _21eb6412b_check_fn_decl_types(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd19249_Fn>& _129644_f) {
	jule::Slice<jule::Ptr<_21c640423_GenericDecl>> _129717_generics = _129644_f.get()._field_generics;
	if ((_129644_f.get()._field_owner != nullptr) && (_129644_f.get()._field_owner.get()._field_generics.len() != 0LL)) {
		_129717_generics=jule::append(_129717_generics,_129644_f.get()._field_owner.get()._field_generics);
	}
	{
		auto &expr = _129644_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_2229be538:;
		if (it != expr.end()) {
			jule::Ptr<_21dd17423_Param> _2229be648_p = *it;
			{
				if ((!(_21dd17b2c_is_self(_2229be648_p.ptr())))) {
					jule::Ptr<_21ec06223_TypeKind> _130425_kind = _21eb5e764_build_non_generic_type_kind(_self_, _2229be648_p.get()._field_kind.get()._field_decl,_129717_generics);
					_2229be648_p.get()._field_kind.get()._field_kind=_130425_kind;
				}
			}
			_iter_next_2229be538:;
			++it;
			goto _iter_begin_2229be538;
		}
		_iter_end_2229be538:;
	}
	if ((!(_21dd19711_is_void(_129644_f.ptr())))) {
		jule::Ptr<_21ec06223_TypeKind> _131021_kind = _21eb5e764_build_non_generic_type_kind(_self_, _129644_f.get()._field_result.get()._field_kind.get()._field_decl,_129717_generics);
		_129644_f.get()._field_result.get()._field_kind.get()._field_kind=_131021_kind;
	}
}



inline void _21eb6448e_check_fn_decl_prototype(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd19249_Fn>& _131748_f) {
	if (_131748_f.get()._field_exceptional && _131748_f.get()._field_cpp_linked) {
		_21eb576a2_push_err(_self_.ptr(), _131748_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;
	}
	if (_131748_f.get()._field_exceptional) {
		if (_21dd19cb6_is_entry_point(_131748_f.ptr())) {
			_21eb576a2_push_err(_self_.ptr(), _131748_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_21dd1a091_is_init(_131748_f.ptr())) {
			_21eb576a2_push_err(_self_.ptr(), _131748_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		
		if ((!(_21eb63537_check_decl_generics(_self_.ptr(), _131748_f.get()._field_generics)))) {
			_case_begin_2229c54c8:;
		}
		else if ((!(_21eb63933_check_fn_decl_params_dup(_self_.ptr(), _131748_f)))) {
			_case_begin_2229c553e:;
		}
		else if ((!(_21eb63d1d_check_fn_decl_result_dup(_self_.ptr(), _131748_f)))) {
			_case_begin_2229c55a5:;
		}
		_match_end_2229c399e:;
	}
	_21eb6412b_check_fn_decl_types(_self_, _131748_f);
}



inline void _21eb647e1_check_trait_decl_method(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd19249_Fn>& _134048_f) {
	if (_21c62abc2_is_ignore_ident(_134048_f.get()._field_ident)) {
		_21eb576a2_push_err(_self_.ptr(), _134048_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_21eb6448e_check_fn_decl_prototype(_self_, _134048_f);
	_134048_f.get()._field_sema=_self_;
}



inline void _21eb64b43_check_trait_decl_methods(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21deee929_Trait>& _134949_t) {
	{
		auto &expr = _134949_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_2229c9a71:;
		if (it != expr.end()) {
			jule::I64 _2229c9b3c_i = it - expr.begin();
			jule::Ptr<_21dd19249_Fn> _2229c9d07_f = *it;
			{
				_21eb647e1_check_trait_decl_method(_self_, _2229c9d07_f);
				_134949_t.get()._field_mutable=_134949_t.get()._field_mutable || _2229c9d07_f.get()._field_params[0LL].get()._field_mutable;
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _134949_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_2229cbc82:;
					if (it != expr.end()) {
						jule::I64 _2229cbd4d_j = it - expr.begin();
						jule::Ptr<_21dd19249_Fn> _2229cc018_jf = *it;
						{
							{
								
								if (_2229cbd4d_j >= _2229c9b3c_i) {
									_case_begin_2229cc6cd:;
									{
										goto _iter_end_2229cbc82;
									}
								}
								else if (_2229c9d07_f.get()._field_ident == _2229cc018_jf.get()._field_ident) {
									_case_begin_2229cc755:;
									{
										_21eb576a2_push_err(_self_.ptr(), _2229c9d07_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_2229c9d07_f.get()._field_ident)}));
										_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_2229cbc82;
									}
								}
								_match_end_2229cc5bd:;
							}
						}
						_iter_next_2229cbc82:;
						++it;
						_2229cbd4d_j++;
						goto _iter_begin_2229cbc82;
					}
					_iter_end_2229cbc82:;
				}
			}
			_iter_next_2229c9a71:;
			++it;
			_2229c9b3c_i++;
			goto _iter_begin_2229c9a71;
		}
		_iter_end_2229c9a71:;
	}
}



inline void _21eb64e51_check_trait_decl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21deee929_Trait>& _138041_t) {
	if (_21c62abc2_is_ignore_ident(_138041_t.get()._field_ident)) {
		_21eb576a2_push_err(_self_.ptr(), _138041_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_21eb58593_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_138041_t)),_138041_t.get()._field_ident,false)) {
		_21eb576a2_push_err(_self_.ptr(), _138041_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_138041_t.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_21eb64b43_check_trait_decl_methods(_self_, _138041_t);
}



inline jule::Bool _21eb6522b_check_trait_decls(jule::Ptr<_21eb5443a_Sema> _self_) {
	jule::Bool _139239_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_2229d39e2:;
		if (it != expr.end()) {
			jule::Ptr<_21deee929_Trait> _2229d3a69_t = *it;
			{
				_21eb64e51_check_trait_decl(_self_, _2229d3a69_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_139239_ok = false;
					return _139239_ok;
				}
			}
			_iter_next_2229d39e2:;
			++it;
			goto _iter_begin_2229d39e2;
		}
		_iter_end_2229d39e2:;
	}
	_139239_ok = true;
	return _139239_ok;
}



inline jule::Bool _21eb65704_check_trait_impl_methods(_21eb5443a_Sema* _self_,jule::Ptr<_21deee929_Trait>& _140448_base,jule::Ptr<_21de24992_Impl>& _140463_ipl) {
	jule::Bool _140477_ok = jule::Bool();
	_140477_ok=true;
	{
		auto &expr = _140463_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_2229d5b8c:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> &_2229d6121_f = *it;
			{
				if ((_21dd94deb_find_method(_140448_base.ptr(), _2229d6121_f.get()._field_ident) == nullptr)) {
					_21eb576a2_push_err(&(*_self_), _2229d6121_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>({jule::Any(_140448_base.get()._field_ident),jule::Any(_2229d6121_f.get()._field_ident)}));
					_140477_ok=false;
				}
			}
			_iter_next_2229d5b8c:;
			++it;
			goto _iter_begin_2229d5b8c;
		}
		_iter_end_2229d5b8c:;
	}
	return _140477_ok;
}



inline jule::Bool _21eb65b77_impl_to_struct(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _141539_dest,jule::Ptr<_21de24992_Impl>& _141559_ipl) {
	jule::Bool _141573_ok = jule::Bool();
	_141573_ok=true;
	{
		auto &expr = _141559_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_2229d8ba1:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _2229d9135_f = *it;
			{
				if ((_21dd04047_find_method(_141539_dest.ptr(), _2229d9135_f.get()._field_ident,_2229d9135_f.get()._field_statically) != nullptr) || (_21dd047a6_find_field(_141539_dest.ptr(), _2229d9135_f.get()._field_ident) != nullptr)) {
					_21eb576a2_push_err(_self_.ptr(), _2229d9135_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_141539_dest.get()._field_ident),jule::Any(_2229d9135_f.get()._field_ident)}));
					_141573_ok=false;
					goto _iter_next_2229d8ba1;
				}
				if ((_141539_dest.get()._field_generics.len() > 0LL) && (_2229d9135_f.get()._field_generics.len() > 0LL)) {
					{
						auto &expr = _2229d9135_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_2229dbdb3:;
						if (it != expr.end()) {
							jule::Ptr<_21c640423_GenericDecl> _2229dbe7e_fg = *it;
							{
								{
									auto &expr = _141539_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_2229dc622:;
									if (it != expr.end()) {
										jule::Ptr<_21c640423_GenericDecl> _2229dc6dd_dg = *it;
										{
											if (_2229dbe7e_fg.get()._field_ident == _2229dc6dd_dg.get()._field_ident) {
												_21eb576a2_push_err(_self_.ptr(), _2229dbe7e_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_141573_ok=false;
											}
										}
										_iter_next_2229dc622:;
										++it;
										goto _iter_begin_2229dc622;
									}
									_iter_end_2229dc622:;
								}
							}
							_iter_next_2229dbdb3:;
							++it;
							goto _iter_begin_2229dbdb3;
						}
						_iter_end_2229dbdb3:;
					}
				}
				_21eb5898e_check_directives(_self_, _2229d9135_f.get()._field_directives,jule::Any(_2229d9135_f));
				_2229d9135_f.get()._field_sema=_self_;
				_2229d9135_f.get()._field_owner=_141539_dest;
				_141539_dest.get()._field_methods = jule::alloc_for_append(_141539_dest.get()._field_methods,1);_141539_dest.get()._field_methods.__push(_2229d9135_f);
			}
			_iter_next_2229d8ba1:;
			++it;
			goto _iter_begin_2229d8ba1;
		}
		_iter_end_2229d8ba1:;
	}
	{
		auto &expr = _141559_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_2229d9256:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> _2229d929a_v = *it;
			{
				
				if ((_21dd04047_find_method(_141539_dest.ptr(), _2229d929a_v.get()._field_ident,true) != nullptr) || (_21dd043ee_find_static(_141539_dest.ptr(), _2229d929a_v.get()._field_ident) != nullptr)) {
					_21eb576a2_push_err(_self_.ptr(), _2229d929a_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_141539_dest.get()._field_ident),jule::Any(_2229d929a_v.get()._field_ident)}));
					_141573_ok=false;
					goto _iter_next_2229d9256;
				}
				_21eb669d0_check_var_decl(_self_, _2229d929a_v,jule::Trait<_21ec23a48_Lookup>(_self_, 3));
				_21eb6bb39_check_type_var(_self_, _2229d929a_v,jule::Trait<_21ec23a48_Lookup>(_self_, 3));
				_141539_dest.get()._field_statics = jule::alloc_for_append(_141539_dest.get()._field_statics,1);_141539_dest.get()._field_statics.__push(_2229d929a_v);
			}
			_iter_next_2229d9256:;
			++it;
			goto _iter_begin_2229d9256;
		}
		_iter_end_2229d9256:;
	}
	return _141573_ok;
}



inline void _21eb65e96_impl_trait(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21de24992_Impl>& _146035_decl) {
	jule::Ptr<_21ec06223_TypeKind> _146117_base_t = _21eb5c70c_select_type(_self_, _146035_decl.get()._field_base);
	if ((_146117_base_t == nullptr)) {
		return;
	}
	jule::Ptr<_21deee929_Trait> _146517_base = _21ec0a07e_trt(_146117_base_t.ptr());
	if ((_146517_base == nullptr)) {
		_21eb576a2_push_err(_self_.ptr(), _146035_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_146117_base_t.ptr()))}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21ec06223_TypeKind> _147217_dest_t = _21eb5c70c_select_type(_self_, _146035_decl.get()._field_dest);
	if ((_147217_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_21dd06742_StructIns> _147617_dest_s = _21ec09ca4_strct(_147217_dest_t.ptr());
	if ((_147617_dest_s == nullptr)) {
		_21eb576a2_push_err(_self_.ptr(), _146035_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_147217_dest_t.ptr()))}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21dd03266_Struct> _148317_dest = _147617_dest_s.get()._field_decl;
	if (_21c62eaa5_dir(_148317_dest.get()._field_token._field_file.ptr()) != _21c62eaa5_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_21eb576a2_push_err(_self_.ptr(), _146035_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_146517_base.get()._field_implemented = jule::alloc_for_append(_146517_base.get()._field_implemented,1);_146517_base.get()._field_implemented.__push(_148317_dest);
	_148317_dest.get()._field_implements = jule::alloc_for_append(_148317_dest.get()._field_implements,1);_148317_dest.get()._field_implements.__push(_146517_base);
	if ((_146035_decl.get()._field_statics.len() > 0LL)) {
		_21eb576a2_push_err(_self_.ptr(), _146035_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		
		if ((!(_21eb65704_check_trait_impl_methods(_self_.ptr(), _146517_base,_146035_decl)))) {
			_case_begin_2229ec588:;
			{
				return;
			}
		}
		else if ((!(_21eb65b77_impl_to_struct(_self_, _148317_dest,_146035_decl)))) {
			_case_begin_2229ec874:;
			{
				return;
			}
		}
		_match_end_2229ea1bd:;
	}
}



inline void _21eb662b5_impl_struct(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21de24992_Impl>& _150336_decl) {
	jule::Ptr<_21ec06223_TypeKind> _150417_dest_t = _21eb5c70c_select_type(_self_, _150336_decl.get()._field_dest);
	if ((_150417_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_21dd06742_StructIns> _150817_dest_s = _21ec09ca4_strct(_150417_dest_t.ptr());
	if ((_150817_dest_s == nullptr)) {
		_21eb576a2_push_err(_self_.ptr(), _150336_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_150417_dest_t.ptr()))}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21dd03266_Struct> _151517_dest = _150817_dest_s.get()._field_decl;
	if (_21c62eaa5_dir(_151517_dest.get()._field_token._field_file.ptr()) != _21c62eaa5_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_21eb576a2_push_err(_self_.ptr(), _150336_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if ((!(_21eb65b77_impl_to_struct(_self_, _151517_dest,_150336_decl)))) {
			_case_begin_222a03638:;
			{
				return;
			}
		}
		_match_end_222a02c42:;
	}
}



inline void _21eb665d4_impl_impl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21de24992_Impl>& _152834_decl) {
	{
		
		if (_21e0e6966_is_trait_impl(_152834_decl.ptr())) {
			_case_begin_222a0467d:;
			{
				_21eb65e96_impl_trait(_self_, _152834_decl);
			}
		}
		else if (_21e134c4b_is_struct_impl(_152834_decl.ptr())) {
			_case_begin_222a04705:;
			{
				_21eb662b5_impl_struct(_self_, _152834_decl);
			}
		}
		_match_end_222a04590:;
	}
}



inline void _21eb669d0_check_var_decl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21eb75615_Var>& _153939_decl,jule::Trait<_21ec23a48_Lookup> _153955_l) {
	if (_21c62abc2_is_ignore_ident(_153939_decl.get()._field_ident)) {
		_21eb576a2_push_err(_self_.ptr(), _153939_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_21eb75d0d_is_type_inferred(_153939_decl.ptr())) {
		if ((!(_21eb75a33_is_initialized(_153939_decl.ptr())))) {
			_21eb576a2_push_err(_self_.ptr(), _153939_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		}
	} else {
		_21eb5b9d6_check_type(_self_, _153939_decl.get()._field_kind,_153955_l);
	}
	if (_153939_decl.get()._field_constant && _153939_decl.get()._field_reference) {
		_21eb576a2_push_err(_self_.ptr(), _153939_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_21eb75a33_is_initialized(_153939_decl.ptr())))) {
		if (_153939_decl.get()._field_constant) {
			_21eb576a2_push_err(_self_.ptr(), _153939_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		}
		if (_153939_decl.get()._field_statically) {
			_21eb576a2_push_err(_self_.ptr(), _153939_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_153939_decl.get()._field_reference) {
			_21eb576a2_push_err(_self_.ptr(), _153939_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _21eb66cee_check_global_var_decl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21eb75615_Var>& _157346_decl) {
	if (_21eb58593_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_157346_decl)),_157346_decl.get()._field_ident,_157346_decl.get()._field_cpp_linked)) {
		_21eb576a2_push_err(_self_.ptr(), _157346_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_157346_decl.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_157346_decl.get()._field_cpp_linked && _157346_decl.get()._field_constant) {
		_21eb576a2_push_err(_self_.ptr(), _157346_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	}
	if (((!(_157346_decl.get()._field_cpp_linked)) && (!(_157346_decl.get()._field_constant))) && (!(_157346_decl.get()._field_statically))) {
		_21eb576a2_push_err(_self_.ptr(), _157346_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	_21eb5898e_check_directives(_self_, _157346_decl.get()._field_directives,jule::Any(_157346_decl));
	_21eb669d0_check_var_decl(_self_, _157346_decl,jule::Trait<_21ec23a48_Lookup>(_self_, 3));
}



inline jule::Bool _21eb670c9_check_global_decls(jule::Ptr<_21eb5443a_Sema> _self_) {
	jule::Bool _159240_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_222a1346c:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> _222a134e4_decl = *it;
			{
				_21eb66cee_check_global_var_decl(_self_, _222a134e4_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_159240_ok = false;
					return _159240_ok;
				}
			}
			_iter_next_222a1346c:;
			++it;
			goto _iter_begin_222a1346c;
		}
		_iter_end_222a1346c:;
	}
	_159240_ok = true;
	return _159240_ok;
}



inline jule::Bool _21eb675a2_check_struct_trait_impl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _160448_strct,jule::Ptr<_21deee929_Trait>& _160469_trt) {
	jule::Bool _160484_ok = jule::Bool();
	{
		auto &expr = _160469_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_222a15848:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222a15914_tf = *it;
			{
				jule::Bool _160621_exist = false;
				jule::Ptr<_21dd19249_Fn> _160721_sf = _21dd04047_find_method(_160448_strct.ptr(), _222a15914_tf.get()._field_ident,_222a15914_tf.get()._field_statically);
				jule::Ptr<_21dd1cc42_FnIns> _160817_tf_k = _21eb5eea1_get_trait_check_fn_kind(_self_, _222a15914_tf);
				if ((_160721_sf != nullptr)) {
					jule::Ptr<_21dd1cc42_FnIns> _161025_sf_k = _21eb5eea1_get_trait_check_fn_kind(_self_, _160721_sf);
					_160621_exist=((_160817_tf_k.get()._field_decl.get()._field_public == _161025_sf_k.get()._field_decl.get()._field_public) && (_160817_tf_k.get()._field_decl.get()._field_ident == _161025_sf_k.get()._field_decl.get()._field_ident)) && _21dd1d4c3_equals(_160817_tf_k, jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_161025_sf_k, 1))));
				}
				if (_160621_exist) {
					jule::Ptr<_21c525490_Directive> _161821_d = _21ebeeaac_find_directive(_160721_sf.get()._field_directives,jule::Str("deprecated", 10));
					if ((_161821_d != nullptr)) {
						_21eb576a2_push_err(_self_.ptr(), _161821_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					}
					_160484_ok=false;
				} else {
					
					jule::Str _162525_s = _21dd1e408_get_kind_str(_160817_tf_k.ptr(), true);
					if (_222a15914_tf.get()._field_public) {
						(_162525_s).buffer.insert(0, (jule::Str("pub ", 4)));
					}
					_21eb576a2_push_err(_self_.ptr(), _160448_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>({jule::Any(_160469_trt.get()._field_ident),jule::Any(_162525_s)}));
					_160484_ok=false;
				}
			}
			_iter_next_222a15848:;
			++it;
			goto _iter_begin_222a15848;
		}
		_iter_end_222a15848:;
	}
	return _160484_ok;
}



inline jule::Bool _21eb67948_check_struct_impls(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _163643_s) {
	jule::Bool _163657_ok = jule::Bool();
	_163657_ok=true;
	{
		auto &expr = _163643_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_222a1d6b9:;
		if (it != expr.end()) {
			jule::Ptr<_21deee929_Trait> _222a1da60_trt = *it;
			{
				_163657_ok=_21eb675a2_check_struct_trait_impl(_self_, _163643_s,_222a1da60_trt) && _163657_ok;
			}
			_iter_next_222a1d6b9:;
			++it;
			goto _iter_begin_222a1d6b9;
		}
		_iter_end_222a1d6b9:;
	}
	return _163657_ok;
}



inline jule::Bool _21eb67d00_check_struct_fields(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _164444_st) {
	jule::Bool _164459_ok = jule::Bool();
	_164459_ok=true;
	jule::Ptr<_21ec17e27_TypeChecker> _164717_tc = jule::new_ptr<_21ec17e27_TypeChecker>(_21ec17e27_TypeChecker(_self_,jule::Trait<_21ec23a48_Lookup>(_self_, 3),jule::new_ptr<_21ec16ed1_Referencer>(_21ec16ed1_Referencer(_164444_st.get()._field_ident,jule::Any(jule::Any(_164444_st)),nullptr)),_21c627dde_Token(),_164444_st.get()._field_generics,jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool()));
	jule::I64 _165713_n = _164444_st.get()._field_instances.len();
	{
		auto &expr = _164444_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_222a21689:;
		if (it != expr.end()) {
			jule::Ptr<_21dc10607_Field> _222a21887_f = *it;
			{
				_222a21887_f.get()._field_owner=_164444_st;
				_222a21887_f.get()._field_kind.get()._field_kind=_21ec20b22_check_decl(_164717_tc.ptr(), _222a21887_f.get()._field_kind.get()._field_decl);
				_164459_ok=(_222a21887_f.get()._field_kind.get()._field_kind != nullptr) && _164459_ok;
				{
					auto &expr = _164444_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_222a23416:;
					if (it != expr.end()) {
						jule::Ptr<_21dc10607_Field> _222a23504_cf = *it;
						{
							if (_222a21887_f == _222a23504_cf) {
								goto _iter_end_222a23416;
							} else if (_222a21887_f.get()._field_ident == _222a23504_cf.get()._field_ident) {
								_21eb576a2_push_err(_self_.ptr(), _222a21887_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_222a21887_f.get()._field_ident)}));
								_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_164459_ok=false;
							}
						}
						_iter_next_222a23416:;
						++it;
						goto _iter_begin_222a23416;
					}
					_iter_end_222a23416:;
				}
			}
			_iter_next_222a21689:;
			++it;
			goto _iter_begin_222a21689;
		}
		_iter_end_222a21689:;
	}
	if (_164459_ok && (_165713_n != static_cast<jule::I64>(static_cast<jule::I64>(_164444_st.get()._field_instances.len())))) {
		_164717_tc.get()._field_referencer=nullptr;
		_164444_st.get()._field_instances=_164444_st.get()._field_instances.slice(0LL,_165713_n);
		{
			auto &expr = _164444_st.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_222a23aa9:;
			if (it != expr.end()) {
				jule::Ptr<_21dc10607_Field> _222a25d53_f = *it;
				{
					_222a25d53_f.get()._field_kind.get()._field_kind=_21ec20b22_check_decl(_164717_tc.ptr(), _222a25d53_f.get()._field_kind.get()._field_decl);
				}
				_iter_next_222a23aa9:;
				++it;
				goto _iter_begin_222a23aa9;
			}
			_iter_end_222a23aa9:;
		}
	}
	return _164459_ok;
}



inline jule::Bool _21eb681eb_check_struct_decl_methods(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _168650_s) {
	jule::Bool _168664_ok = jule::Bool();
	{
		auto &expr = _168650_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_222a27d77:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222a27e43_m = *it;
			{
				_21eb6412b_check_fn_decl_types(_self_, _222a27e43_m);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_168664_ok = false;
					return _168664_ok;
				}
			}
			_iter_next_222a27d77:;
			++it;
			goto _iter_begin_222a27d77;
		}
		_iter_end_222a27d77:;
	}
	_168664_ok = true;
	return _168664_ok;
}



inline void _21eb68509_check_struct_decl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _169642_s) {
	if (_21c62abc2_is_ignore_ident(_169642_s.get()._field_ident)) {
		_21eb576a2_push_err(_self_.ptr(), _169642_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_21eb58593_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_169642_s)),_169642_s.get()._field_ident,_169642_s.get()._field_cpp_linked)) {
		_21eb576a2_push_err(_self_.ptr(), _169642_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_169642_s.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_21eb5898e_check_directives(_self_, _169642_s.get()._field_directives,jule::Any(_169642_s));
	_169642_s.get()._field_sema=_self_;
	{
		
		if ((!(_21eb63537_check_decl_generics(_self_.ptr(), _169642_s.get()._field_generics)))) {
			_case_begin_222a2cb90:;
		}
		else if ((!(_21eb67d00_check_struct_fields(_self_, _169642_s)))) {
			_case_begin_222a2cc06:;
		}
		else if ((!(_21eb681eb_check_struct_decl_methods(_self_, _169642_s)))) {
			_case_begin_222a2cc6c:;
		}
		else if ((!(_21eb67948_check_struct_impls(_self_, _169642_s)))) {
			_case_begin_222a2ccd3:;
		}
		_match_end_222a29b6a:;
	}
}



inline jule::Bool _21eb687d4_check_struct_decls(jule::Ptr<_21eb5443a_Sema> _self_) {
	jule::Bool _171640_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_222a303bd:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _222a30445_s = *it;
			{
				_21eb68509_check_struct_decl(_self_, _222a30445_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_171640_ok = false;
					return _171640_ok;
				}
			}
			_iter_next_222a303bd:;
			++it;
			goto _iter_begin_222a303bd;
		}
		_iter_end_222a303bd:;
	}
	_171640_ok = true;
	return _171640_ok;
}



inline void _21eb68b03_check_fn_decl(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd19249_Fn>& _172938_f) {
	if (_21c62abc2_is_ignore_ident(_172938_f.get()._field_ident)) {
		_21eb576a2_push_err(_self_.ptr(), _172938_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_21eb5898e_check_directives(_self_, _172938_f.get()._field_directives,jule::Any(_172938_f));
	_172938_f.get()._field_sema=_self_;
	_21eb6448e_check_fn_decl_prototype(_self_, _172938_f);
	if (_21eb58593_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_172938_f)),_172938_f.get()._field_ident,_172938_f.get()._field_cpp_linked)) {
		if ((_172938_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_21dd19249_Fn> _174121_init = _21eb561c8_find_fn(_self_.ptr(), jule::Str("init", 4),false);
			if ((_174121_init != nullptr)) {
				return;
			}
		}
		_21eb576a2_push_err(_self_.ptr(), _172938_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_172938_f.get()._field_ident)}));
		_21eb57a9d_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _21eb68dcd_check_fn_decls(jule::Ptr<_21eb5443a_Sema> _self_) {
	jule::Bool _175236_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_222a37381:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222a37408_f = *it;
			{
				_21eb68b03_check_fn_decl(_self_, _222a37408_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_175236_ok = false;
					return _175236_ok;
				}
			}
			_iter_next_222a37381:;
			++it;
			goto _iter_begin_222a37381;
		}
		_iter_end_222a37381:;
	}
	_175236_ok = true;
	return _175236_ok;
}



inline void _21eb693a6_push_cycle_error(_21eb5443a_Sema* _self_,jule::Ptr<_21dd03266_Struct>& _176432_st1,jule::Ptr<_21dd03266_Struct>& _176447_st2,jule::Str& _176466_message) {
	
	jule::Str _176713_refers_to = _21c34911b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_176432_st1.get()._field_ident),jule::Any(_176447_st2.get()._field_ident)}));
	(_176466_message).buffer.insert(0, (((_2368293b2_repeat(jule::Str(" ", 1),4LL) + _176713_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _21eb69917_check_cross_cycle(_21eb5443a_Sema* _self_,jule::Ptr<_21dd03266_Struct>& _177133_st1,jule::Ptr<_21dd03266_Struct>& _177148_st2,jule::Str& _177167_message) {
	{
		auto &expr = _177148_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_222a3bc8c:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> &_222a3bd8b_u = *it;
			{
				if (_222a3bd8b_u == _177133_st1) {
					_21eb693a6_push_cycle_error(&(*_self_), _177148_st2,_222a3bd8b_u,_177167_message);
					return false;
				}
				if ((!(_21eb69917_check_cross_cycle(&(*_self_), _177133_st1,_222a3bd8b_u,_177167_message)))) {
					_21eb693a6_push_cycle_error(&(*_self_), _177148_st2,_222a3bd8b_u,_177167_message);
					return false;
				}
			}
			_iter_next_222a3bc8c:;
			++it;
			goto _iter_begin_222a3bc8c;
		}
		_iter_end_222a3bc8c:;
	}
	return true;
}



inline jule::Bool _21eb69ede_check_struct_derive_illegal_cycles(_21eb5443a_Sema* _self_,jule::Str _178753_derive,jule::Ptr<_21dd03266_Struct>& _178767_st1,jule::Ptr<_21ec06223_TypeKind>& _178786_k) {
	jule::Bool _1787102_ok = jule::Bool();
	jule::Ptr<_21dd03266_Struct> _178817_st2 = _21ec1672d_get_struct_from_kind(_178786_k);
	if ((_178817_st2 == nullptr)) {
		_1787102_ok = true;
		return _1787102_ok;
	}
	if (_178767_st1 == _178817_st2) {
		_21eb576a2_push_err(&(*_self_), _178767_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>({jule::Any(_178753_derive),jule::Any(_178767_st1.get()._field_ident)}));
		_1787102_ok = false;
		return _1787102_ok;
	}
	jule::Str _180017_message = jule::Str();
	if ((!(_21eb69917_check_cross_cycle(&(*_self_), _178767_st1,_178817_st2,_180017_message)))) {
		jule::Str _180321_err_msg = _180017_message;
		_180017_message=jule::Str();
		_21eb693a6_push_cycle_error(&(*_self_), _178767_st1,_178817_st2,_180017_message);
		_180321_err_msg=_180321_err_msg + _180017_message;
		_21eb576a2_push_err(&(*_self_), _178767_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>({jule::Any(_178753_derive),jule::Any(_180321_err_msg)}));
		_1787102_ok = false;
		return _1787102_ok;
	}
	_1787102_ok = true;
	return _1787102_ok;
}



inline jule::Bool _21eb6a3a7_check_struct_ins_derive_clone(_21eb5443a_Sema* _self_,jule::Ptr<_21dd06742_StructIns> _181452_st) {
	jule::Bool _181470_ok = jule::Bool();
	if ((!(_21dd05015_is_derives(_181452_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_181470_ok = true;
		return _181470_ok;
	}
	{
		auto &expr = _181452_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_222a45119:;
		if (it != expr.end()) {
			jule::Ptr<_21dd05be7_FieldIns> _222a454d2_f = *it;
			{
				if ((_222a454d2_f.get()._field_kind == nullptr)) {
					goto _iter_next_222a45119;
				}
				if ((!(_21ec08214_supports_cloning(_222a454d2_f.get()._field_kind.ptr())))) {
					_21eb576a2_push_err(&(*_self_), _181452_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_222a454d2_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_181470_ok = false;
					return _181470_ok;
				}
				if ((!(_21eb69ede_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_181452_st.get()._field_decl,_222a454d2_f.get()._field_kind)))) {
					_181470_ok = false;
					return _181470_ok;
				}
			}
			_iter_next_222a45119:;
			++it;
			goto _iter_begin_222a45119;
		}
		_iter_end_222a45119:;
	}
	_181470_ok = true;
	return _181470_ok;
}



inline jule::Bool _21eb6a792_check_struct_derive_clone(_21eb5443a_Sema* _self_,jule::Ptr<_21dd03266_Struct>& _183749_st) {
	return _21eb6a3a7_check_struct_ins_derive_clone(&(*_self_), _21dd0370b_instance(_183749_st));
}



inline jule::Bool _21eb6aa5b_check_file_derives(_21eb5443a_Sema* _self_) {
	jule::Bool _184139_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_222a4a174:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _222a4a1eb_st = *it;
			{
				_184139_ok=_21eb6a792_check_struct_derive_clone(&(*_self_), _222a4a1eb_st);
				if ((!(_184139_ok))) {
					goto _iter_end_222a4a174;
				}
			}
			_iter_next_222a4a174:;
			++it;
			goto _iter_begin_222a4a174;
		}
		_iter_end_222a4a174:;
	}
	return _184139_ok;
}



inline void _21eb6ac9d_check_package_derives(_21eb5443a_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_222a4b483:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222a4b593_f = *it;
			{
				_21eb571c9_set_current_file(&(*_self_), _222a4b593_f);
				jule::Bool _185617_ok = _21eb6aa5b_check_file_derives(&(*_self_));
				if ((!(_185617_ok))) {
					return;
				}
			}
			_iter_next_222a4b483:;
			++it;
			goto _iter_begin_222a4b483;
		}
		_iter_end_222a4b483:;
	}
}



inline void _21eb6aee0_check_package_decls(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222a4cde1:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222a4d0cd_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222a4d0cd_f);
				if ((!(_21eb62129_check_type_alias_decls(_self_)))) {
					return;
				}
			}
			_iter_next_222a4cde1:;
			++it;
			goto _iter_begin_222a4cde1;
		}
		_iter_end_222a4cde1:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222a4d254:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222a4d364_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222a4d364_f);
				if ((!(_21eb6522b_check_trait_decls(_self_)))) {
					return;
				}
			}
			_iter_next_222a4d254:;
			++it;
			goto _iter_begin_222a4d254;
		}
		_iter_end_222a4d254:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222a4e200:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222a4e343_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222a4e343_f);
				if ((!(_21eb670c9_check_global_decls(_self_)))) {
					return;
				}
			}
			_iter_next_222a4e200:;
			++it;
			goto _iter_begin_222a4e200;
		}
		_iter_end_222a4e200:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222a501ce:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222a502de_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222a502de_f);
				if ((!(_21eb68dcd_check_fn_decls(_self_)))) {
					return;
				}
			}
			_iter_next_222a501ce:;
			++it;
			goto _iter_begin_222a501ce;
		}
		_iter_end_222a501ce:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222a51125:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222a51268_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222a51268_f);
				if ((!(_21eb687d4_check_struct_decls(_self_)))) {
					return;
				}
			}
			_iter_next_222a51125:;
			++it;
			goto _iter_begin_222a51125;
		}
		_iter_end_222a51125:;
	}
	_21eb6ac9d_check_package_derives(_self_.ptr());
}



inline void _21eb6b430_check_data_for_type_inference(_21eb5443a_Sema* _self_,jule::Ptr<_21ebbd053_Data>& _190449_d,_21c627dde_Token& _190460_err_token) {
	{
		
		if (_21ebbd4a4_is_nil(_190449_d.ptr())) {
			_case_begin_222a53d4d:;
			{
				_21eb576a2_push_err(&(*_self_), _190460_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_21ebbd77e_is_void(_190449_d.ptr())) {
			_case_begin_222a53dc5:;
			{
				_21eb576a2_push_err(&(*_self_), _190460_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_190449_d.get()._field_kind.get()._field_variadic) {
			_case_begin_222a53e4c:;
			{
				_21eb576a2_push_err(&(*_self_), _190460_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_222a53c60:;
	}
}



inline void _21eb6b73d_check_var(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21eb75615_Var>& _191534_v) {
	if (_191534_v.get()._field_cpp_linked) {
		return;
	}
	if (_21eb75d0d_is_type_inferred(_191534_v.ptr())) {
		_191534_v.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_191534_v.get()._field_value.get()._field_data.get()._field_kind));
		_21eb6b430_check_data_for_type_inference(_self_.ptr(), _191534_v.get()._field_value.get()._field_data,_191534_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_21ec13692_Arr> _192621_arr = _21ec09424_arr(_191534_v.get()._field_kind.get()._field_kind.ptr());
		if ((_192621_arr != nullptr)) {
			if (_192621_arr.get()._field_auto) {
				jule::Ptr<_21ec13692_Arr> _192925_data_arr = _21ec09424_arr(_191534_v.get()._field_value.get()._field_data.get()._field_kind.ptr());
				if ((_192925_data_arr != nullptr)) {
					_192621_arr.get()._field_n=_192925_data_arr.get()._field_n;
				}
			}
		}
		_21eb5dbe7_check_assign_type(_self_, _191534_v.get()._field_reference,_191534_v.get()._field_kind.get()._field_kind,_191534_v.get()._field_value.get()._field_data,_191534_v.get()._field_value.get()._field_expr.get()._field_token);
	}
	if (_191534_v.get()._field_reference && (!(_21ec158e7_is_valid_for_ref(_191534_v.get()._field_kind.get()._field_kind)))) {
		_21eb576a2_push_err(_self_.ptr(), _191534_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_191534_v.get()._field_kind.get()._field_kind.ptr()))}));
	}
	_21eb6117d_check_validity_for_init_expr(_self_, _191534_v.get()._field_mutable,_191534_v.get()._field_reference,_191534_v.get()._field_kind.get()._field_kind,_191534_v.get()._field_value.get()._field_data,_191534_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_191534_v.get()._field_constant) {
		if ((!(_21ebbda59_is_const(_191534_v.get()._field_value.get()._field_data.ptr())))) {
			_21eb576a2_push_err(_self_.ptr(), _191534_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_191534_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	}
	if ((_21ec0a634_tup(_191534_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_191534_v.get()._field_kind.get()._field_kind=nullptr;
	}
}



inline void _21eb6bb39_check_type_var(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21eb75615_Var>& _196439_decl,jule::Trait<_21ec23a48_Lookup> _196455_l) {
	if (_196439_decl.get()._field_cpp_linked || (!(_21eb75a33_is_initialized(_196439_decl.ptr())))) {
		return;
	}
	jule::Ptr<_21ebc00aa_Eval> _196917_eval = (((_196439_decl.get()._field_kind != nullptr)) ? (_21eb5cc6d_evalpd(_self_, _196455_l,_196439_decl.get()._field_kind.get()._field_kind,_196439_decl)) : (_21eb5cc6d_evalpd(_self_, _196455_l,nullptr,_196439_decl)));
	_196917_eval.get()._field_immutable=(!(_196439_decl.get()._field_mutable));
	_196439_decl.get()._field_value.get()._field_data=_21ebe0718_eval_expr(_196917_eval, _196439_decl.get()._field_value.get()._field_expr);
	if ((_196439_decl.get()._field_value.get()._field_data == nullptr)) {
		return;
	}
	_21eb6b73d_check_var(_self_, _196439_decl);
}



inline void _21eb6bd7b_check_global_types(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_222a65e2b:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> _222a65ea3_decl = *it;
			{
				if ((_21eb75a33_is_initialized(_222a65ea3_decl.ptr()) && (_222a65ea3_decl.get()._field_value.get()._field_data == nullptr)) || (_21eb75d0d_is_type_inferred(_222a65ea3_decl.ptr()) && (_222a65ea3_decl.get()._field_kind.get()._field_kind == nullptr))) {
					_21eb6bb39_check_type_var(_self_, _222a65ea3_decl,jule::Trait<_21ec23a48_Lookup>(_self_, 3));
				}
			}
			_iter_next_222a65e2b:;
			++it;
			goto _iter_begin_222a65e2b;
		}
		_iter_end_222a65e2b:;
	}
}



inline jule::Ptr<_21dd1cc42_FnIns> _21eb6c310_ready_to_check_fn(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd06742_StructIns>& _199542_s,jule::Ptr<_21dd19249_Fn>& _199562_f) {
	jule::Ptr<_21dd1cc42_FnIns> _199617_ins = _21dd1b2d4_instance(_199562_f);
	if ((_199562_f.get()._field_instances.len() != 0LL)) {
		return _199617_ins;
	}
	_199617_ins.get()._field_owner=_199542_s;
	_21dd1b68b_append_instance(_199562_f.ptr(), _199617_ins);
	_21eb60347_reload_fn_ins_types(_self_, _199617_ins);
	_199617_ins.get()._field_reloaded=true;
	return _199617_ins;
}



inline void _21eb6c70b_check_type_method(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd06742_StructIns>& _200742_s,jule::Ptr<_21dd19249_Fn>& _200762_f) {
	if (_200762_f.get()._field_cpp_linked) {
		return;
	}
	if ((_200762_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	_21eb6c310_ready_to_check_fn(_self_, _200742_s,_200762_f);
	{
		auto &expr = _200762_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_222a6b591:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1cc42_FnIns> _222a6c84a_ins = *it;
			{
				if ((_222a6c84a_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_222a6b591;
				}
				_21eb7027a_check_fn_ins(_self_, _222a6c84a_ins);
			}
			_iter_next_222a6b591:;
			++it;
			goto _iter_begin_222a6b591;
		}
		_iter_end_222a6b591:;
	}
}



inline void _21eb6ca2a_check_field_defaults(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd06742_StructIns>& _202745_ins) {
	jule::Ptr<_21ebc00aa_Eval> _202817_eval = _21eb5d5a9_eval(_self_, jule::Trait<_21ec23a48_Lookup>(_self_, 3));
	{
		auto &expr = _202745_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_222a6ee68:;
		if (it != expr.end()) {
			jule::Ptr<_21dd05be7_FieldIns> _222a700bc_f = *it;
			{
				if ((_222a700bc_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_222a6ee68;
				}
				_202817_eval.get()._field_prefix=_222a700bc_f.get()._field_kind;
				_202817_eval.get()._field_field=_222a700bc_f;
				_222a700bc_f.get()._field_default=_21ebe0718_eval_expr(_202817_eval, _222a700bc_f.get()._field_decl.get()._field_default);
				if ((_222a700bc_f.get()._field_default == nullptr)) {
					goto _iter_next_222a6ee68;
				}
				
				_21eb5dbe7_check_assign_type(_self_, false,_222a700bc_f.get()._field_kind,_222a700bc_f.get()._field_default,_222a700bc_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_222a6ee68:;
			++it;
			goto _iter_begin_222a6ee68;
		}
		_iter_end_222a6ee68:;
	}
}



inline jule::Ptr<_21dd1cc42_FnIns> _21eb6d08b_check_struct_ins_op(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd06742_StructIns>& _204944_s,jule::Ptr<_21dd19249_Fn>& _204964_f,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)> _204972_p) {
	if ((_204964_f == nullptr) || (_204964_f.get()._field_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Ptr<_21dd1cc42_FnIns> _205317_ins = _21eb6c310_ready_to_check_fn(_self_, _204944_s,_204964_f);
	return ((_204972_p(_204964_f)) ? (_205317_ins) : (nullptr));
}



inline void _21eb6d3aa_check_struct_ins(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd06742_StructIns>& _205741_s) {
	_21eb6ca2a_check_field_defaults(_self_, _205741_s);
	{
		auto &expr = _205741_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_222a7690e:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222a770c4_f = *it;
			{
				_21eb6c70b_check_type_method(_self_, _205741_s,_222a770c4_f);
			}
			_iter_next_222a7690e:;
			++it;
			goto _iter_begin_222a7690e;
		}
		_iter_end_222a7690e:;
	}
}



inline void _21eb6d6c9_check_type_struct(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _206442_s) {
	if (_206442_s.get()._field_cpp_linked) {
		return;
	}
	if ((_206442_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_206442_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_21dd06742_StructIns> _207521_ins = _21dd0370b_instance(_206442_s);
		_207521_ins.get()._field_checked=true;
		_21dd03ab3_append_instance(_206442_s.ptr(), _207521_ins);
	}
	{
		auto &expr = _206442_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_222a7a35d:;
		if (it != expr.end()) {
			jule::Ptr<_21dd06742_StructIns> _222a7a3c4_ins = *it;
			{
				_21eb6d3aa_check_struct_ins(_self_, _222a7a3c4_ins);
			}
			_iter_next_222a7a35d:;
			++it;
			goto _iter_begin_222a7a35d;
		}
		_iter_end_222a7a35d:;
	}
}



inline void _21eb6d91b_check_struct_types(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_222a7b45d:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _222a7b4d5_s = *it;
			{
				_21eb6d6c9_check_type_struct(_self_, _222a7b4d5_s);
			}
			_iter_next_222a7b45d:;
			++it;
			goto _iter_begin_222a7b45d;
		}
		_iter_end_222a7b45d:;
	}
}



inline void _21eb6dc7e_check_struct_ins_operators(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd06742_StructIns> _209150_s) {
	{
		auto &expr = _209150_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_222a7c937:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222a7ca03_m = *it;
			{
				{
					auto &_match_expr{ _222a7ca03_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_222a7ce32:;
						{
							_209150_s.get()._field_operators._field_eq=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _209568_f) mutable -> jule::Bool {
								return static__21eb77419_eq(_209568_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_222a7d4a4:;
						{
							_209150_s.get()._field_operators._field_gt=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _209768_f) mutable -> jule::Bool {
								return static__21eb77727_gt(_209768_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_222a7d51a:;
						{
							_209150_s.get()._field_operators._field_gt_eq=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _209971_f) mutable -> jule::Bool {
								return static__21eb77a35_gt_eq(_209971_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_222a7d581:;
						{
							_209150_s.get()._field_operators._field_lt=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _210168_f) mutable -> jule::Bool {
								return static__21eb77d43_lt(_210168_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_222a7d5e7:;
						{
							_209150_s.get()._field_operators._field_lt_eq=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _210371_f) mutable -> jule::Bool {
								return static__21eb78151_lt_eq(_210371_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_222a7d66e:;
						{
							_209150_s.get()._field_operators._field_shl=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _210569_f) mutable -> jule::Bool {
								return static__21eb78849_shl(_210569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_222a7d6e6:;
						{
							_209150_s.get()._field_operators._field_shr=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _210769_f) mutable -> jule::Bool {
								return static__21eb78b57_shr(_210769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_222a7d76d:;
						{
							_209150_s.get()._field_operators._field_add=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _210969_f) mutable -> jule::Bool {
								return static__21eb78e65_add(_210969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_222a7d7e5:;
						{
							_209150_s.get()._field_operators._field_sub=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _211169_f) mutable -> jule::Bool {
								return static__21eb79273_sub(_211169_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_222a7d86c:;
						{
							_209150_s.get()._field_operators._field_div=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _211369_f) mutable -> jule::Bool {
								return static__21eb79581_div(_211369_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_222a7d8e4:;
						{
							_209150_s.get()._field_operators._field_mul=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _211569_f) mutable -> jule::Bool {
								return static__21eb7988e_mul(_211569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_222a7d96b:;
						{
							_209150_s.get()._field_operators._field_mod=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _211769_f) mutable -> jule::Bool {
								return static__21eb79b9c_mod(_211769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_222a7d9e3:;
						{
							_209150_s.get()._field_operators._field_bit_and=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _211973_f) mutable -> jule::Bool {
								return static__21eb79eaa_bit_and(_211973_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_222a7da6a:;
						{
							_209150_s.get()._field_operators._field_bit_or=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _212172_f) mutable -> jule::Bool {
								return static__21eb7a2b8_bit_or(_212172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_222a7dae2:;
						{
							_209150_s.get()._field_operators._field_bit_xor=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _212373_f) mutable -> jule::Bool {
								return static__21eb7a5c6_bit_xor(_212373_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_222a7db69:;
						{
							_209150_s.get()._field_operators._field_neg=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _212569_f) mutable -> jule::Bool {
								return static__21eb7acbe_neg(_212569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_222a7dbe1:;
						{
							_209150_s.get()._field_operators._field_pos=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _212769_f) mutable -> jule::Bool {
								return static__21eb7b0cc_pos(_212769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_222a7dc68:;
						{
							_209150_s.get()._field_operators._field_bit_not=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _212973_f) mutable -> jule::Bool {
								return static__21eb7b3da_bit_not(_212973_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_222a7dce0:;
						{
							_209150_s.get()._field_operators._field_add_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _213176_f) mutable -> jule::Bool {
								return static__21eb7bad3_add_assign(_213176_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_222a7dd67:;
						{
							_209150_s.get()._field_operators._field_sub_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _213376_f) mutable -> jule::Bool {
								return static__21eb7bde1_sub_assign(_213376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_222a7ddde:;
						{
							_209150_s.get()._field_operators._field_div_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _213576_f) mutable -> jule::Bool {
								return static__21eb7c1ee_div_assign(_213576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_222a7de66:;
						{
							_209150_s.get()._field_operators._field_mul_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _213776_f) mutable -> jule::Bool {
								return static__21eb7c50c_mul_assign(_213776_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_222a7dedd:;
						{
							_209150_s.get()._field_operators._field_mod_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _213976_f) mutable -> jule::Bool {
								return static__21eb7c81a_mod_assign(_213976_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_222a7e065:;
						{
							_209150_s.get()._field_operators._field_shl_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _214176_f) mutable -> jule::Bool {
								return static__21eb7cb28_shl_assign(_214176_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_222a7e0dc:;
						{
							_209150_s.get()._field_operators._field_shr_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _214376_f) mutable -> jule::Bool {
								return static__21eb7ce36_shr_assign(_214376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_222a7e164:;
						{
							_209150_s.get()._field_operators._field_bit_or_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _214579_f) mutable -> jule::Bool {
								return static__21eb7d244_bit_or_assign(_214579_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_222a7e1db:;
						{
							_209150_s.get()._field_operators._field_bit_and_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _214780_f) mutable -> jule::Bool {
								return static__21eb7d552_bit_and_assign(_214780_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_222a7e263:;
						{
							_209150_s.get()._field_operators._field_bit_xor_assign=_21eb6d08b_check_struct_ins_op(_self_, _209150_s,_222a7ca03_m,jule::Fn<jule::Bool(jule::Ptr<_21dd19249_Fn>)>([=](jule::Ptr<_21dd19249_Fn> _214980_f) mutable -> jule::Bool {
								return static__21eb7d860_bit_xor_assign(_214980_f);
							}));
						}
					}
					_match_end_222a7d240:;
				}
			}
			_iter_next_222a7c937:;
			++it;
			goto _iter_begin_222a7c937;
		}
		_iter_end_222a7c937:;
	}
}



inline void _21eb6e0d1_check_type_struct_operators(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd03266_Struct>& _215452_s) {
	if (_215452_s.get()._field_cpp_linked) {
		return;
	}
	if ((_215452_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_215452_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_21dd06742_StructIns> _216521_ins = _21dd0370b_instance(_215452_s);
		_216521_ins.get()._field_checked=true;
		_21dd03ab3_append_instance(_215452_s.ptr(), _216521_ins);
	}
	_21eb6dc7e_check_struct_ins_operators(_self_, _215452_s.get()._field_instances[0LL]);
}



inline void _21eb6e356_check_struct_types_operators(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_222ab097b:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _222ab0a03_s = *it;
			{
				_21eb6e0d1_check_type_struct_operators(_self_, _222ab0a03_s);
			}
			_iter_next_222ab097b:;
			++it;
			goto _iter_begin_222ab097b;
		}
		_iter_end_222ab097b:;
	}
}



inline void _21eb6e664_check_rets(_21eb5443a_Sema* _self_,jule::Ptr<_21dd1cc42_FnIns>& _217934_f) {
	if (_21dd19711_is_void(_217934_f.get()._field_decl.ptr())) {
		return;
	}
	_21eb720b2_MissingRetChecker _218313_mrc = static__21eb724ad_new();
	jule::Bool _218413_ok = _21eb73800_check(&_218313_mrc, _217934_f.get()._field_scope);
	if ((!(_218413_ok))) {
		_21eb576a2_push_err(&(*_self_), _217934_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _21eb6ea60_check_fn_ins_sc(_21eb5443a_Sema* _self_,jule::Ptr<_21dd1cc42_FnIns>& _219039_f,jule::Ptr<_21eb2ed2d_ScopeChecker>& _219055_sc) {
	if (_219039_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_21eb75615_Var>> _219517_vars = _21eb52d95_build_ret_vars(_219039_f);
	_219055_sc.get()._field_table.get()._field_vars=jule::append(_219055_sc.get()._field_table.get()._field_vars,_219517_vars);
	_219055_sc.get()._field_table.get()._field_vars=jule::append(_219055_sc.get()._field_table.get()._field_vars,_21eb531a3_build_param_vars(_219039_f));
	_219055_sc.get()._field_table.get()._field_type_aliases=jule::append(_219055_sc.get()._field_table.get()._field_type_aliases,_21eb53505_build_generic_type_aliases(_219039_f));
	_21eb41d2e_check(_219055_sc, _219039_f.get()._field_decl.get()._field_scope,_219039_f.get()._field_scope);
	if ((_219517_vars.len() > 0LL)) {
		jule::Slice<jule::Any> _220521_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_219039_f.get()._field_scope.get()._field_stmts.len() + static_cast<jule::I64>(static_cast<jule::I64>(_219517_vars.len()))));
		{
			auto &expr = _219517_vars;
			auto it = expr.begin();
			_iter_begin_222ab8a0b:;
			if (it != expr.end()) {
				jule::Ptr<_21eb75615_Var> _222ab94ce_v = *it;
				{
					_220521_stmts = jule::alloc_for_append(_220521_stmts,1);_220521_stmts.__push(jule::Any(_222ab94ce_v));
				}
				_iter_next_222ab8a0b:;
				++it;
				goto _iter_begin_222ab8a0b;
			}
			_iter_end_222ab8a0b:;
		}
		_220521_stmts=jule::append(_220521_stmts,_219039_f.get()._field_scope.get()._field_stmts);
		_219039_f.get()._field_scope.get()._field_stmts=_220521_stmts;
	}
	if ((!(_21eb31ba9_stopped(_219055_sc.ptr())))) {
		_21eb6e664_check_rets(&(*_self_), _219039_f);
	}
}



inline void _21eb6ee5b_check_fn_ins_caller(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd1cc42_FnIns>& _222044_f,jule::Ptr<_21c627dde_Token> _222059_caller) {
	if (_222044_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Ptr<_21ebb6c0b_SymbolTable> _222517_old = _222044_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_21eb571c9_set_current_file(_222044_f.get()._field_decl.get()._field_sema.ptr(), _222517_old);
	});
	jule::Ptr<_21ebb6c0b_SymbolTable> _222717_file = _21eb538ce_find_file(_222044_f.get()._field_decl.get()._field_sema.get()._field_files,_222044_f.get()._field_decl.get()._field_token._field_file);
	if ((_222717_file != nullptr)) {
		_21eb571c9_set_current_file(_222044_f.get()._field_decl.get()._field_sema.ptr(), _222717_file);
	}
	jule::Ptr<_21eb2ed2d_ScopeChecker> _223217_sc = _21ead1c69_new_scope_checker(_222044_f.get()._field_decl.get()._field_sema,_222044_f);
	_223217_sc.get()._field_called_from=_222059_caller;
	_21eb6ea60_check_fn_ins_sc(_self_.ptr(), _222044_f,_223217_sc);
	if (_222044_f.get()._field_decl.get()._field_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_222044_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_222044_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	}
}



inline void _21eb7027a_check_fn_ins(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd1cc42_FnIns>& _224237_f) {
	_21eb6ee5b_check_fn_ins_caller(_self_, _224237_f,nullptr);
}



inline void _21eb70599_check_type_fn(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd19249_Fn>& _224638_f) {
	if (_224638_f.get()._field_cpp_linked) {
		return;
	}
	if ((_224638_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	{
		auto &expr = _224638_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_222ac3d24:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1cc42_FnIns> _222ac3e67_ins = *it;
			{
				_21eb7027a_check_fn_ins(_self_, _222ac3e67_ins);
			}
			_iter_next_222ac3d24:;
			++it;
			goto _iter_begin_222ac3d24;
		}
		_iter_end_222ac3d24:;
	}
}



inline void _21eb708b8_check_test_fn(_21eb5443a_Sema* _self_,jule::Ptr<_21dd1cc42_FnIns>& _226137_f) {
	if (_226137_f.get()._field_decl.get()._field_public) {
		_21eb576a2_push_err(&(*_self_), _226137_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;
	}
	if ((_226137_f.get()._field_params.len() != 1LL) || (_226137_f.get()._field_result != nullptr)) {
		_21eb576a2_push_err(&(*_self_), _226137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21ec103e7_Sptr> _227417_sptr = _21ec08a94_sptr(_226137_f.get()._field_params[0LL].get()._field_kind.ptr());
	if ((_227417_sptr == nullptr)) {
		_21eb576a2_push_err(&(*_self_), _226137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21dd06742_StructIns> _228113_s = _21ec09ca4_strct(_227417_sptr.get()._field_elem.ptr());
	if ((_228113_s == nullptr) || (!(_21eb50bb7_is_std_package(_228113_s.get()._field_decl.get()._field_token._field_file.get()._field_path,jule::Str("testing", 7))))) {
		_21eb576a2_push_err(&(*_self_), _226137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_21eb57a9d_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
}



inline void _21eb70bd7_precheck_type_fn(jule::Ptr<_21eb5443a_Sema> _self_,jule::Ptr<_21dd19249_Fn>& _228941_f) {
	if (_228941_f.get()._field_cpp_linked) {
		return;
	}
	if ((_228941_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_228941_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_21dd1cc42_FnIns> _230021_ins = _21dd1b2d4_instance(_228941_f);
		_228941_f.get()._field_instances = jule::alloc_for_append(_228941_f.get()._field_instances,1);_228941_f.get()._field_instances.__push(_230021_ins);
		_21eb60347_reload_fn_ins_types(_self_, _230021_ins);
		_230021_ins.get()._field_reloaded=true;
		if (_21ec045a6_has_directive(_228941_f.get()._field_directives,jule::Str("test", 4))) {
			_21eb708b8_check_test_fn(_self_.ptr(), _230021_ins);
		}
	}
}



inline void _21eb70e29_precheck_fn_types(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_222ad18d1:;
		if (it != expr.end()) {
			jule::Ptr<_21deee929_Trait> _222ad1958_decl = *it;
			{
				{
					auto &expr = _222ad1958_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_222ad21c8:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _222ad221c_m = *it;
						{
							_21eb70bd7_precheck_type_fn(_self_, _222ad221c_m);
						}
						_iter_next_222ad21c8:;
						++it;
						goto _iter_begin_222ad21c8;
					}
					_iter_end_222ad21c8:;
				}
			}
			_iter_next_222ad18d1:;
			++it;
			goto _iter_begin_222ad18d1;
		}
		_iter_end_222ad18d1:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_222ad1bbc:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222ad2492_decl = *it;
			{
				_21eb70bd7_precheck_type_fn(_self_, _222ad2492_decl);
			}
			_iter_next_222ad1bbc:;
			++it;
			goto _iter_begin_222ad1bbc;
		}
		_iter_end_222ad1bbc:;
	}
}



inline void _21eb7116b_check_fn_types(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_222ad3ae2:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222ad3b69_decl = *it;
			{
				_21eb70599_check_type_fn(_self_, _222ad3b69_decl);
			}
			_iter_next_222ad3ae2:;
			++it;
			goto _iter_begin_222ad3ae2;
		}
		_iter_end_222ad3ae2:;
	}
}



inline void _21eb713ad_check_package_types(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222ad4b9d:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222ad4d8a_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222ad4d8a_f);
				_21eb6bd7b_check_global_types(_self_);
			}
			_iter_next_222ad4b9d:;
			++it;
			goto _iter_begin_222ad4b9d;
		}
		_iter_end_222ad4b9d:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222ad5044:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222ad5154_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222ad5154_f);
				_21eb70e29_precheck_fn_types(_self_);
			}
			_iter_next_222ad5044:;
			++it;
			goto _iter_begin_222ad5044;
		}
		_iter_end_222ad5044:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222ad5d47:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222ad69b3_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222ad69b3_f);
				_21eb6e356_check_struct_types_operators(_self_);
			}
			_iter_next_222ad5d47:;
			++it;
			goto _iter_begin_222ad5d47;
		}
		_iter_end_222ad5d47:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222ad7211:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222ad6c27_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222ad6c27_f);
				_21eb6d91b_check_struct_types(_self_);
			}
			_iter_next_222ad7211:;
			++it;
			goto _iter_begin_222ad7211;
		}
		_iter_end_222ad7211:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222ad792b:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222ad7a08_f = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222ad7a08_f);
				_21eb7116b_check_fn_types(_self_);
			}
			_iter_next_222ad792b:;
			++it;
			goto _iter_begin_222ad792b;
		}
		_iter_end_222ad792b:;
	}
}



inline void _21eb71600_set_file_sema_fields(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_222ad98c8:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222ad9950_f = *it;
			{
				_222ad9950_f.get()._field_sema=_self_;
			}
			_iter_next_222ad98c8:;
			++it;
			goto _iter_begin_222ad98c8;
		}
		_iter_end_222ad98c8:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_222ad9b2b:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _222ad9d29_st = *it;
			{
				_222ad9d29_st.get()._field_sema=_self_;
			}
			_iter_next_222ad9b2b:;
			++it;
			goto _iter_begin_222ad9b2b;
		}
		_iter_end_222ad9b2b:;
	}
}



inline void _21eb71842_set_sema_fields(jule::Ptr<_21eb5443a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_222adb05b:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _222adb248_file = *it;
			{
				_21eb571c9_set_current_file(_self_.ptr(), _222adb248_file);
				_21eb71600_set_file_sema_fields(_self_);
			}
			_iter_next_222adb05b:;
			++it;
			goto _iter_begin_222adb05b;
		}
		_iter_end_222adb05b:;
	}
}



inline void _21eb71b61_check(jule::Ptr<_21eb5443a_Sema> _self_,jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _237730_files) {
	_self_.get()._field_files=_237730_files;
	_21eb5a81a_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_21eb5aee1_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_21eb71842_set_sema_fields(_self_);
	_21eb5ac9e_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_21eb6aee0_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_21eb713ad_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _21eb5443a_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _21eb720b2_MissingRetChecker static__21eb724ad_new(void) {
	return _21eb720b2_MissingRetChecker(jule::Slice<jule::U64>::alloc(16LL),jule::Bool());
}



inline jule::Bool _21eb72832_check_conditional(_21eb720b2_MissingRetChecker* _self_,jule::Ptr<_21eb2c4ac_Conditional> _242336_c) {
	{
		auto &expr = _242336_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_222ae188b:;
		if (it != expr.end()) {
			jule::Ptr<_235bb50ab_If> _222ae1957_elif = *it;
			{
				if ((_222ae1957_elif == nullptr)) {
					return false;
				}
				if ((!(_21eb73448_check_scope(&(*_self_), _222ae1957_elif.get()._field_scope)))) {
					return false;
				}
			}
			_iter_next_222ae188b:;
			++it;
			goto _iter_begin_222ae188b;
		}
		_iter_end_222ae188b:;
	}
	return (_242336_c.get()._field_default != nullptr) && _21eb73448_check_scope(&(*_self_), _242336_c.get()._field_default.get()._field_scope);
}



inline jule::Bool _21eb72bd9_check_match(_21eb720b2_MissingRetChecker* _self_,jule::Ptr<_21eb2dd2c_Match> _243530_m) {
	{
		auto &expr = _243530_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_222ae44b5:;
		if (it != expr.end()) {
			jule::Ptr<_21eb2e27d_Case> _222ae4581_c = *it;
			{
				if ((_222ae4581_c == nullptr)) {
					return false;
				}
				jule::I64 _244017_n = (*_self_)._field_breaked.len();
				jule::Bool _244117_ok = _21eb73448_check_scope(&(*_self_), _222ae4581_c.get()._field_scope);
				{
					
					if (_244017_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
						_case_begin_222ae5d8a:;
						{
							return false;
						}
					}
					else if ((!(_244117_ok))) {
						_case_begin_222ae5e12:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							}
							goto _case_begin_222ae5e89;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_222ae5e89:;
						{
							(*_self_)._field_falled=false;
							if ((_222ae4581_c.get()._field_next == nullptr)) {
								return false;
							}
							goto _iter_next_222ae44b5;
						}
					}
					_match_end_222ae5ce1:;
				}
			}
			_iter_next_222ae44b5:;
			++it;
			goto _iter_begin_222ae44b5;
		}
		_iter_end_222ae44b5:;
	}
	return (_243530_m.get()._field_default != nullptr) && _21eb73448_check_scope(&(*_self_), _243530_m.get()._field_default.get()._field_scope);
}



inline jule::Bool _21eb73091_check_inf_iter(_21eb720b2_MissingRetChecker* _self_,jule::Ptr<_21eb2c6cc_InfIter> _246133_it) {
	jule::I64 _246213_n = (*_self_)._field_breaked.len();
	if (_21eb73448_check_scope(&(*_self_), _246133_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246213_n);
		return true;
	}
	if (_246213_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
		jule::U64 _246817_itaddr = static_cast<jule::U64>(_246133_it);
		{
			auto expr = (*_self_)._field_breaked.slice(_246213_n);
			auto it = expr.begin();
			_iter_begin_222aeaac6:;
			if (it != expr.end()) {
				jule::U64 _222aeaba3_addr = *it;
				{
					if (_246817_itaddr == _222aeaba3_addr) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246213_n);
						return false;
					}
				}
				_iter_next_222aeaac6:;
				++it;
				goto _iter_begin_222aeaac6;
			}
			_iter_end_222aeaac6:;
		}
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246213_n);
	}
	return true;
}



inline jule::Bool _21eb73448_check_scope(_21eb720b2_MissingRetChecker* _self_,jule::Ptr<_21eb1472a_Scope> _248030_s) {
	if ((_248030_s == nullptr)) {
		return false;
	}
	{
		auto &expr = _248030_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_222aeca73:;
		if (it != expr.end()) {
			jule::Any _222aec5de_st = *it;
			{
				{
					auto &_match_expr{ _222aec5de_st };
					
					if (_match_expr.type_is<jule::Ptr<_21eb2e49d_FallSt>>()) {
						_case_begin_222aed2b0:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb2d05c_BreakSt>>()) {
						_case_begin_222aed359:;
						{
							jule::U64 _249021_addr = _222aec5de_st.operator jule::Ptr<_21eb2d05c_BreakSt>().get()._field_it;
							if ((_249021_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_249021_addr);
							}
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb2cd3c_ContSt>>()) {
						_case_begin_222aed3c0:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb2c6cc_InfIter>>()) {
						_case_begin_222aed436:;
						{
							if (_21eb73091_check_inf_iter(&(*_self_), _222aec5de_st.operator jule::Ptr<_21eb2c6cc_InfIter>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb2e6bd_RetSt>>()) {
						_case_begin_222aed4ad:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb1472a_Scope>>()) {
						_case_begin_222aed535:;
						{
							if (_21eb73448_check_scope(&(*_self_), _222aec5de_st.operator jule::Ptr<_21eb1472a_Scope>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
						_case_begin_222aed5ac:;
						{
							{
								auto &_match_expr{ _222aec5de_st.operator jule::Ptr<_21ebbd053_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>>()) {
									_case_begin_222b025e4:;
									{
										return true;
									}
								}
								_match_end_222b0258e:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb2c4ac_Conditional>>()) {
						_case_begin_222aed634:;
						{
							if (_21eb72832_check_conditional(&(*_self_), _222aec5de_st.operator jule::Ptr<_21eb2c4ac_Conditional>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_21eb2dd2c_Match>>()) {
						_case_begin_222aed6ab:;
						{
							if (_21eb72bd9_check_match(&(*_self_), _222aec5de_st.operator jule::Ptr<_21eb2dd2c_Match>())) {
								return true;
							}
						}
					}
					_match_end_222aecbc7:;
				}
			}
			_iter_next_222aeca73:;
			++it;
			goto _iter_begin_222aeca73;
		}
		_iter_end_222aeca73:;
	}
	return false;
}



inline jule::Bool _21eb73800_check(_21eb720b2_MissingRetChecker* _self_,jule::Ptr<_21eb1472a_Scope> _252624_s) {
	return _21eb73448_check_scope(&(*_self_), _252624_s);
}







std::ostream &operator<<(std::ostream &_Stream, _21eb720b2_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb74306_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__21eb76913_dispose(jule::Ptr<_21dd19249_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _21dd19711_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_21dd17e07_is_ref(_1027_f.get()._field_params[0LL].ptr())));
}



inline jule::Bool static__21eb76c21_to_str(jule::Ptr<_21dd19249_Fn> _2526_f) {
	if (((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _21dd19711_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _21dd17e07_is_ref(_2526_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_21dd1cc42_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];
	jule::Ptr<_21ec0b58b_Prim> _4113_prim = _21ec087b9_prim(_4017_ins.get()._field_result.ptr());
	if ((_4113_prim == nullptr)) {
		return false;
	}
	return _21ec0ecba_is_str(_4113_prim.ptr());
}



inline jule::Bool static__21eb7710b_logical(jule::Ptr<_21dd19249_Fn>& _4824_f,jule::Str _4832_ident) {
	if ((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _21dd19711_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _21dd17e07_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_21dd1cc42_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];
	jule::Ptr<_21ec0b58b_Prim> _6713_prim = _21ec087b9_prim(_6617_ins.get()._field_result.ptr());
	if ((_6713_prim == nullptr) || (!(_21ec0e9e0_is_bool(_6713_prim.ptr())))) {
		return false;
	}
	return _6617_ins.get()._field_owner == _21ec09ca4_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr());
}



inline jule::Bool static__21eb77419_eq(jule::Ptr<_21dd19249_Fn> _7522_f) {
	return static__21eb7710b_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__21eb77727_gt(jule::Ptr<_21dd19249_Fn> _8022_f) {
	return static__21eb7710b_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__21eb77a35_gt_eq(jule::Ptr<_21dd19249_Fn> _8525_f) {
	return static__21eb7710b_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__21eb77d43_lt(jule::Ptr<_21dd19249_Fn> _9022_f) {
	return static__21eb7710b_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__21eb78151_lt_eq(jule::Ptr<_21dd19249_Fn> _9525_f) {
	return static__21eb7710b_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__21eb7853b_result(jule::Ptr<_21dd19249_Fn>& _9923_f,jule::Str _9931_ident) {
	if ((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _21dd19711_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _21dd17e07_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_21dd1cc42_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];
	return _21ec09ca4_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner;
}



inline jule::Bool static__21eb78849_shl(jule::Ptr<_21dd19249_Fn> _12223_f) {
	return static__21eb7853b_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__21eb78b57_shr(jule::Ptr<_21dd19249_Fn> _12723_f) {
	return static__21eb7853b_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__21eb78e65_add(jule::Ptr<_21dd19249_Fn> _13223_f) {
	return static__21eb7853b_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__21eb79273_sub(jule::Ptr<_21dd19249_Fn> _13723_f) {
	return static__21eb7853b_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__21eb79581_div(jule::Ptr<_21dd19249_Fn> _14223_f) {
	return static__21eb7853b_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__21eb7988e_mul(jule::Ptr<_21dd19249_Fn> _14723_f) {
	return static__21eb7853b_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__21eb79b9c_mod(jule::Ptr<_21dd19249_Fn> _15223_f) {
	return static__21eb7853b_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__21eb79eaa_bit_and(jule::Ptr<_21dd19249_Fn> _15727_f) {
	return static__21eb7853b_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__21eb7a2b8_bit_or(jule::Ptr<_21dd19249_Fn> _16226_f) {
	return static__21eb7853b_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__21eb7a5c6_bit_xor(jule::Ptr<_21dd19249_Fn> _16727_f) {
	return static__21eb7853b_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__21eb7a9b1_unary(jule::Ptr<_21dd19249_Fn>& _17122_f,jule::Str _17130_ident) {
	if ((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _21dd19711_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _21dd17e07_is_ref(_17122_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_21dd1cc42_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];
	return _21ec09ca4_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner;
}



inline jule::Bool static__21eb7acbe_neg(jule::Ptr<_21dd19249_Fn> _19223_f) {
	return static__21eb7a9b1_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__21eb7b0cc_pos(jule::Ptr<_21dd19249_Fn> _19723_f) {
	return static__21eb7a9b1_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__21eb7b3da_bit_not(jule::Ptr<_21dd19249_Fn> _20227_f) {
	return static__21eb7a9b1_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__21eb7b7c5_assign(jule::Ptr<_21dd19249_Fn>& _20623_f,jule::Str _20631_ident) {
	if ((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_21dd19711_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _21dd17e07_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	return true;
}



inline jule::Bool static__21eb7bad3_add_assign(jule::Ptr<_21dd19249_Fn> _22730_f) {
	return static__21eb7b7c5_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__21eb7bde1_sub_assign(jule::Ptr<_21dd19249_Fn> _23230_f) {
	return static__21eb7b7c5_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__21eb7c1ee_div_assign(jule::Ptr<_21dd19249_Fn> _23730_f) {
	return static__21eb7b7c5_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__21eb7c50c_mul_assign(jule::Ptr<_21dd19249_Fn> _24230_f) {
	return static__21eb7b7c5_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__21eb7c81a_mod_assign(jule::Ptr<_21dd19249_Fn> _24730_f) {
	return static__21eb7b7c5_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__21eb7cb28_shl_assign(jule::Ptr<_21dd19249_Fn> _25230_f) {
	return static__21eb7b7c5_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__21eb7ce36_shr_assign(jule::Ptr<_21dd19249_Fn> _25730_f) {
	return static__21eb7b7c5_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__21eb7d244_bit_or_assign(jule::Ptr<_21dd19249_Fn> _26233_f) {
	return static__21eb7b7c5_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__21eb7d552_bit_and_assign(jule::Ptr<_21dd19249_Fn> _26734_f) {
	return static__21eb7b7c5_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__21eb7d860_bit_xor_assign(jule::Ptr<_21dd19249_Fn> _27234_f) {
	return static__21eb7b7c5_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _21eb7622b_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eb75615_Var> _21ebb2674_build_var(_21ebb2135_RangeChecker* _self_,jule::Ptr<_21c64205c_VarDecl>& _91429_decl) {
	jule::Ptr<_21eb75615_Var> _91517_v = _21dd2b2e4_build_var(_91429_decl);
	return _91517_v;
}



inline void _21ebb28b6_set_size_key(_21ebb2135_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _21c62abc2_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_a=_21ebb2674_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5)))));
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_222be6672:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_21eb74306_IterRelation>(_21eb74306_IterRelation((*_self_)._field_d.get()._field_model.operator jule::Ptr<_21eb75615_Var>()));
			}
		}
		_match_end_222be661c:;
	}
}



inline void _21ebb2dd3_check_range_expr_validity(_21ebb2135_RangeChecker* _self_,jule::Ptr<_21ebbd053_Data>& _94549_d,jule::Ptr<_21eb75615_Var>& _94560_key,jule::Ptr<_21ec06223_TypeKind>& _94576_k) {
	jule::Bool _94617__mut = _94560_key.get()._field_mutable;
	if (_94617__mut && (!(_21ec07884_mutable(_94576_k.ptr())))) {
		_94617__mut=false;
	}
	_21eb6117d_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _94617__mut,_94560_key.get()._field_reference,_94560_key.get()._field_kind.get()._field_kind,_94549_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _21ebb3114_check_slice(_21ebb2135_RangeChecker* _self_) {
	_21ebb28b6_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _21c62abc2_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_21ec10eca_Slc> _96417_slc = _21ec096ee_slc((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_21ebb2674_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_96417_slc.get()._field_elem));
	_21ebb2dd3_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96417_slc.get()._field_elem);
}



inline void _21ebb3356_check_array(_21ebb2135_RangeChecker* _self_) {
	_21ebb28b6_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _21c62abc2_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_21ec13692_Arr> _97717_arr = _21ec09424_arr((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_21ebb2674_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_97717_arr.get()._field_elem));
	_21ebb2dd3_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_97717_arr.get()._field_elem);
}



inline void _21ebb3598_check_map_key_a(_21ebb2135_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _21c62abc2_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	jule::Ptr<_21ec128b1_Map> _98917_m = _21ec0a359_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_a=_21ebb2674_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_98917_m.get()._field_key));
	jule::Ptr<_21ebbd053_Data> _99317_d = jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d)));
	_99317_d.get()._field_kind=_98917_m.get()._field_key;
	_21ebb2dd3_check_range_expr_validity(&(*_self_), _99317_d,(*_self_)._field_kind.get()._field_key_a,_98917_m.get()._field_key);
}



inline void _21ebb37da_check_map_key_b(_21ebb2135_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _21c62abc2_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_21ec128b1_Map> _100417_m = _21ec0a359_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_21ebb2674_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_100417_m.get()._field_val));
	jule::Ptr<_21ebbd053_Data> _100817_d = jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d)));
	_100817_d.get()._field_kind=_100417_m.get()._field_val;
	_21ebb2dd3_check_range_expr_validity(&(*_self_), _100817_d,(*_self_)._field_kind.get()._field_key_b,_100417_m.get()._field_val);
}



inline void _21ebb3a2c_check_map(_21ebb2135_RangeChecker* _self_) {
	_21ebb3598_check_map_key_a(&(*_self_));
	_21ebb37da_check_map_key_b(&(*_self_));
}



inline void _21ebb3c6e_check_str(_21ebb2135_RangeChecker* _self_) {
	_21ebb28b6_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _21c62abc2_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_b=_21ebb2674_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u8", 2)), 5)))));
}



inline jule::Bool _21ebb4049_check(_21ebb2135_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_222c1188a:;
		}
		else if ((_21ec096ee_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222c101b3:;
			{
				_21ebb3114_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_21ec09424_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222c10229:;
			{
				_21ebb3356_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_21ec0a359_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222c10290:;
			{
				_21ebb3a2c_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_222c1014c:;
			{
				jule::Ptr<_21ec0b58b_Prim> _104717_prim = _21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr());
				if ((_104717_prim != nullptr) && _21ec0ecba_is_str(_104717_prim.ptr())) {
					_21ebb3c6e_check_str(&(*_self_));
					return true;
				}
			}
		}
		_match_end_222c10081:;
	}
	_21eb576a2_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _21ebb2135_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21ebb72b1_find_package(_21ebb6c0b_SymbolTable* _self_,jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_222c2e06c:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _222c2e138_pkg = *it;
			{
				if (_222c2e138_pkg.get()._field_ident == _2535_ident) {
					return _222c2e138_pkg;
				}
			}
			_iter_next_222c2e06c:;
			++it;
			goto _iter_begin_222c2e06c;
		}
		_iter_end_222c2e06c:;
	}
	return nullptr;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21ebb7668_select_package(_21ebb6c0b_SymbolTable* _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	}
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_222c30557:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _222c3006d_pkg = *it;
			{
				if (_3737_selector(_222c3006d_pkg)) {
					return _222c3006d_pkg;
				}
			}
			_iter_next_222c30557:;
			++it;
			goto _iter_begin_222c30557;
		}
		_iter_end_222c30557:;
	}
	return nullptr;
}



inline jule::Ptr<_21eb75615_Var> _21ebb7aec_find_var(_21ebb6c0b_SymbolTable* _self_,jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return _21ebb988a___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_21ec05288_TypeAlias> _21ebb8081_find_type_alias(_21ebb6c0b_SymbolTable* _self_,jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return _21ebb9deb___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_21dd03266_Struct> _21ebb8515_find_struct(_21ebb6c0b_SymbolTable* _self_,jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_222c3436e:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _222c3443a_s = *it;
			{
				if ((_222c3443a_s.get()._field_ident == _6434_ident) && (_222c3443a_s.get()._field_cpp_linked == _6446_cpp_linked)) {
					return _222c3443a_s;
				}
			}
			_iter_next_222c3436e:;
			++it;
			goto _iter_begin_222c3436e;
		}
		_iter_end_222c3436e:;
	}
	return nullptr;
}



inline jule::Ptr<_21dd19249_Fn> _21ebb8999_find_fn(_21ebb6c0b_SymbolTable* _self_,jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_222c35eb9:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222c36085_f = *it;
			{
				if ((_222c36085_f.get()._field_ident == _7530_ident) && (_222c36085_f.get()._field_cpp_linked == _7542_cpp_linked)) {
					return _222c36085_f;
				}
			}
			_iter_next_222c35eb9:;
			++it;
			goto _iter_begin_222c35eb9;
		}
		_iter_end_222c35eb9:;
	}
	return nullptr;
}



inline jule::Ptr<_21deee929_Trait> _21ebb8d51_find_trait(_21ebb6c0b_SymbolTable* _self_,jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_222c37828:;
		if (it != expr.end()) {
			jule::Ptr<_21deee929_Trait> _222c378e4_t = *it;
			{
				if (_222c378e4_t.get()._field_ident == _8633_ident) {
					return _222c378e4_t;
				}
			}
			_iter_next_222c37828:;
			++it;
			goto _iter_begin_222c37828;
		}
		_iter_end_222c37828:;
	}
	return nullptr;
}



inline jule::Ptr<_21ddb6aee_Enum> _21ebb9208_find_enum(_21ebb6c0b_SymbolTable* _self_,jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_222c38c8b:;
		if (it != expr.end()) {
			jule::Ptr<_21ddb6aee_Enum> _222c38d57_e = *it;
			{
				if (_222c38d57_e.get()._field_ident == _9732_ident) {
					return _222c38d57_e;
				}
			}
			_iter_next_222c38c8b:;
			++it;
			goto _iter_begin_222c38c8b;
		}
		_iter_end_222c38c8b:;
	}
	return nullptr;
}



inline jule::Ptr<_21eb75615_Var> _21ebb988a___find_var(_21ebb6c0b_SymbolTable* _self_,jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_21eb75615_Var> _11225_v = (*_self_)._field_vars[_11021_i];
				if ((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_222c3ab17:;
		}
		_iter_end_222c3ab17:;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_222c3c18a:;
			if (it != expr.end()) {
				jule::Ptr<_21eb75615_Var> _222c3c1ce_v = *it;
				{
					if ((_222c3c1ce_v.get()._field_ident == _10829_ident) && (_222c3c1ce_v.get()._field_cpp_linked == _10841_cpp_linked)) {
						return _222c3c1ce_v;
					}
				}
				_iter_next_222c3c18a:;
				++it;
				goto _iter_begin_222c3c18a;
			}
			_iter_end_222c3c18a:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_21ec05288_TypeAlias> _21ebb9deb___find_type_alias(_21ebb6c0b_SymbolTable* _self_,jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_21ec05288_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];
				if ((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_222c3e06b:;
		}
		_iter_end_222c3e06b:;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_222c405de:;
			if (it != expr.end()) {
				jule::Ptr<_21ec05288_TypeAlias> _222c40633_ta = *it;
				{
					if ((_222c40633_ta.get()._field_ident == _12736_ident) && (_222c40633_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
						return _222c40633_ta;
					}
				}
				_iter_next_222c405de:;
				++it;
				goto _iter_begin_222c405de;
			}
			_iter_end_222c405de:;
		}
	}
	return nullptr;
}



inline jule::Any _21ebba380_def_by_ident(_21ebb6c0b_SymbolTable* _self_,jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_222c417dd:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> _222c418a9_v = *it;
			{
				if ((_222c418a9_v.get()._field_ident == _14831_ident) && (_222c418a9_v.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_222c418a9_v);
				}
			}
			_iter_next_222c417dd:;
			++it;
			goto _iter_begin_222c417dd;
		}
		_iter_end_222c417dd:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_222c41645:;
		if (it != expr.end()) {
			jule::Ptr<_21ec05288_TypeAlias> _222c41ac9_ta = *it;
			{
				if ((_222c41ac9_ta.get()._field_ident == _14831_ident) && (_222c41ac9_ta.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_222c41ac9_ta);
				}
			}
			_iter_next_222c41645:;
			++it;
			goto _iter_begin_222c41645;
		}
		_iter_end_222c41645:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_222c42701:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _222c429a9_s = *it;
			{
				if ((_222c429a9_s.get()._field_ident == _14831_ident) && (_222c429a9_s.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_222c429a9_s);
				}
			}
			_iter_next_222c42701:;
			++it;
			goto _iter_begin_222c42701;
		}
		_iter_end_222c42701:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_222c41601:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222c438de_f = *it;
			{
				if ((_222c438de_f.get()._field_ident == _14831_ident) && (_222c438de_f.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_222c438de_f);
				}
			}
			_iter_next_222c41601:;
			++it;
			goto _iter_begin_222c41601;
		}
		_iter_end_222c41601:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_222c447d0:;
		if (it != expr.end()) {
			jule::Ptr<_21deee929_Trait> _222c455d3_t = *it;
			{
				if (_222c455d3_t.get()._field_ident == _14831_ident) {
					return jule::Any(_222c455d3_t);
				}
			}
			_iter_next_222c447d0:;
			++it;
			goto _iter_begin_222c447d0;
		}
		_iter_end_222c447d0:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_222c448ac:;
		if (it != expr.end()) {
			jule::Ptr<_21ddb6aee_Enum> _222c45d64_e = *it;
			{
				if (_222c45d64_e.get()._field_ident == _14831_ident) {
					return jule::Any(_222c45d64_e);
				}
			}
			_iter_next_222c448ac:;
			++it;
			goto _iter_begin_222c448ac;
		}
		_iter_end_222c448ac:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _21ebba8e1_is_duplicated_ident(_21ebb6c0b_SymbolTable* _self_,jule::U64 _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_222c476e5:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> &_222c477e4_v = *it;
			{
				if (((static_cast<jule::U64>(_222c477e4_v) != _19534_itself) && (_222c477e4_v.get()._field_ident == _19551_ident)) && (_222c477e4_v.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_222c476e5:;
			++it;
			goto _iter_begin_222c476e5;
		}
		_iter_end_222c476e5:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_222c47d77:;
		if (it != expr.end()) {
			jule::Ptr<_21ec05288_TypeAlias> &_222c47a25_ta = *it;
			{
				if (((static_cast<jule::U64>(_222c47a25_ta) != _19534_itself) && (_222c47a25_ta.get()._field_ident == _19551_ident)) && (_222c47a25_ta.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_222c47d77:;
			++it;
			goto _iter_begin_222c47d77;
		}
		_iter_end_222c47d77:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_222c49e34:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> &_222c48cbd_s = *it;
			{
				if (((static_cast<jule::U64>(_222c48cbd_s) != _19534_itself) && (_222c48cbd_s.get()._field_ident == _19551_ident)) && (_222c48cbd_s.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_222c49e34:;
			++it;
			goto _iter_begin_222c49e34;
		}
		_iter_end_222c49e34:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_222c4b1bb:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> &_222c4a011_f = *it;
			{
				if (((static_cast<jule::U64>(_222c4a011_f) != _19534_itself) && (_222c4a011_f.get()._field_ident == _19551_ident)) && (_222c4a011_f.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_222c4b1bb:;
			++it;
			goto _iter_begin_222c4b1bb;
		}
		_iter_end_222c4b1bb:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_222c4c453:;
		if (it != expr.end()) {
			jule::Ptr<_21deee929_Trait> &_222c4b210_t = *it;
			{
				if ((static_cast<jule::U64>(_222c4b210_t) != _19534_itself) && (_222c4b210_t.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_222c4c453:;
			++it;
			goto _iter_begin_222c4c453;
		}
		_iter_end_222c4c453:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_222c4b3b9:;
		if (it != expr.end()) {
			jule::Ptr<_21ddb6aee_Enum> &_222c4c7c7_e = *it;
			{
				if ((static_cast<jule::U64>(_222c4c7c7_e) != _19534_itself) && (_222c4c7c7_e.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_222c4b3b9:;
			++it;
			goto _iter_begin_222c4b3b9;
		}
		_iter_end_222c4b3b9:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _21ebb6c0b_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21ebbd4a4_is_nil(_21ebbd053_Data* _self_) {
	return _21ec072ce_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _21ebbd77e_is_void(_21ebbd053_Data* _self_) {
	return _21ec075a9_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _21ebbda59_is_const(_21ebbd053_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _21ebbde11_good_operand(_21ebbd053_Data* _self_,jule::Ptr<_21ebbd053_Data>& _9836_other) {
	return (((_21ec087b9_prim(_9836_other.get()._field_kind.ptr()) == nullptr) || (!(_21ec10095_is_any(_21ec087b9_prim(_9836_other.get()._field_kind.ptr()).ptr())))) && (_21ec0a07e_trt(_9836_other.get()._field_kind.ptr()) == nullptr)) && (!(_21ec072ce_is_nil((*_self_)._field_kind.ptr())));
}







std::ostream &operator<<(std::ostream &_Stream, _21ebbd053_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ebbe362_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _21ebc0693_push_err(_21ebc00aa_Eval* _self_,_21c627dde_Token _12627_token,jule::Str _12641_fmt,jule::Slice<jule::Any> _12654_args) {
	_21eb576a2_push_err((*_self_)._field_s.ptr(), _12627_token,_12641_fmt,_12654_args);
}



inline void _21ebc0a8e_push_suggestion(_21ebc00aa_Eval* _self_,jule::Str _13134_fmt,jule::Slice<jule::Any> _13147_args) {
	_21eb57a9d_push_suggestion((*_self_)._field_s.ptr(), _13134_fmt,_13147_args);
}



inline void _21ebc0cd1_allow_builtin(_21ebc00aa_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _21ebc1023_disallow_builtin(_21ebc00aa_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _21ebc12ed_is_unsafe(_21ebc00aa_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _21ebc15c8_is_global(_21ebc00aa_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_21eb5443a_Sema>>()) {
			_case_begin_222c56da8:;
			{
				return true;
			}
		}
		else {
			_case_begin_222c57161:;
			{
				return false;
			}
		}
		_match_end_222c56e41:;
	}
}



inline jule::Bool _21ebc1980_apply_numeric_prefix(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _15644_d) {
	if (((((_15644_d == nullptr) || (_15644_d.get()._field_cast_kind != nullptr)) || (!(_21ebbda59_is_const(_15644_d.ptr())))) || (_21ec087b9_prim(_15644_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr)) {
		return false;
	}
	jule::Ptr<_21ec0b58b_Prim> _16413_prim = _21ec087b9_prim((*_self_)._field_prefix.ptr());
	if ((_16413_prim == nullptr)) {
		return false;
	}
	{
		
		if (_21eb2b588_is_float(_21ec0b965_to_str(_16413_prim.ptr()))) {
			_case_begin_222c5a708:;
			{
				_15644_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>((*((*_self_)._field_prefix)));
				_21eaa1d5a_set_f64(_15644_d.get()._field_constant.ptr(), static_cast<jule::F64>(_21eaa0cb0_as_f64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_21eb2aac6_is_sig_int(_21ec0b965_to_str(_16413_prim.ptr()))) {
			_case_begin_222c5a41c:;
			{
				if ((!(_21eb942c1_sig_assignable(_21ec0b965_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>((*((*_self_)._field_prefix)));
				_21eaa10ce_set_i64(_15644_d.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_21eb2ae28_is_unsig_int(_21ec0b965_to_str(_16413_prim.ptr()))) {
			_case_begin_222c5a483:;
			{
				if ((!(_21eba4479_unsig_assignable(_21ec0b965_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>((*((*_self_)._field_prefix)));
				_21eaa13ed_set_u64(_15644_d.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64(_15644_d.get()._field_constant.ptr())));
			}
		}
		_match_end_222c5a64d:;
	}
	return true;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc1c5a_lit_nil(_21ebc00aa_Eval* _self_) {
	jule::Ptr<_21ea9d450_Const> _19317_constant = static__21ea9e165_new_nil();
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_19317_constant)),false,_19317_constant));
}



inline jule::Ptr<_21ebbd053_Data> _21ebc2112_lit_str(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d84db_LitExpr>& _20423_l) {
	jule::Str _20517_s = _20423_l.get()._field_value.slice(1LL,(_20423_l.get()._field_value.len() - 1LL));
	if (_21c6294c8_is_raw_str(_20423_l.get()._field_value)) {
		_20517_s=_21eba32ad_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	} else {
		_20517_s=_21eba3610_to_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	}
	jule::Ptr<_21ea9d450_Const> _21117_constant = static__21ea9dbae_new_str(_20517_s);
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_21117_constant)),false,_21117_constant));
}



inline jule::Ptr<_21ebbd053_Data> _21ebc24b9_lit_bool(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d84db_LitExpr>& _22524_l) {
	jule::Ptr<_21ea9d450_Const> _22617_constant = static__21ea9d9c2_new_bool((_22524_l.get()._field_value == jule::Str("true", 4)));
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_22617_constant)),false,_22617_constant));
}



inline jule::Ptr<_21ebbd053_Data> _21ebc2871_lit_rune(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d84db_LitExpr>& _23924_l) {
	
	
	jule::Str _24313_lt = _23924_l.get()._field_value.slice(1LL,(_23924_l.get()._field_value.len() - 1LL));
	jule::I32 _24413_r = _21eb80444_to_rune(static_cast<jule::Slice<jule::U8>>(_24313_lt));
	jule::Ptr<_21ebbd053_Data> _24517_data = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,static__21ea9d670_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24413_r)))));
	jule::Bool _25213_is_ascii = _21eb7ee5a_is_ascii(_24413_r);
	if (_25213_is_ascii) {
		_24517_data.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u8", 2)), 5)));
	} else {
		_24517_data.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i32", 3)), 5)));
	}
	_24517_data.get()._field_model=jule::Any(jule::new_ptr<_21dd147a5_RuneExprModel>(_21dd147a5_RuneExprModel(_24413_r)));
	_24517_data.get()._field_is_rune=true;
	return _24517_data;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc2c28_lit_float(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d84db_LitExpr>& _26825_l) {
	
	jule::F64 _27113_f = ({
		auto except = _21e4567a9_parse_float(_26825_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});
	jule::Ptr<_21ea9d450_Const> _27217_constant = static__21ea9de34_new_f64(_27113_f);
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_27217_constant)),false,_27217_constant));
}



inline jule::Ptr<_21ebbd053_Data> _21ebc30d0_lit_int(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d84db_LitExpr>& _28627_l) {
	
	jule::Str _28917_lit = _28627_l.get()._field_value;
	jule::I64 _29017_base = 0LL;
	{
		
		if (_236849954_has_prefix(_28917_lit,jule::Str("0x", 2))) {
			_case_begin_222c70de4:;
			{
				(_28917_lit).mut_slice(2LL);
				_29017_base=16LL;
			}
		}
		else if (_236849954_has_prefix(_28917_lit,jule::Str("0b", 2))) {
			_case_begin_222c7108c:;
			{
				(_28917_lit).mut_slice(2LL);
				_29017_base=2LL;
			}
		}
		else if (_236849954_has_prefix(_28917_lit,jule::Str("0o", 2))) {
			_case_begin_222c70ad6:;
			{
				(_28917_lit).mut_slice(2LL);
				_29017_base=8LL;
			}
		}
		else if ((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL)) {
			_case_begin_222c70b4c:;
			{
				(_28917_lit).mut_slice(1LL);
				_29017_base=8LL;
			}
		}
		else {
			_case_begin_222c70a70:;
			{
				_29017_base=10LL;
			}
		}
		_match_end_222c70a1a:;
	}
	jule::Ptr<_21ebbd053_Data> _30917_d = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_21ea9d450_Const>()));
	jule::Bool _31517_ok = true;
	jule::I64 _31613_sig = ({
		auto except = _21e21d609_parse_int(_28917_lit,_29017_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31517_ok=false;
			0LL;
		});
	});
	if (_31517_ok) {
		_30917_d.get()._field_constant=static__21ea9d670_new_i64(_31613_sig);
		_30917_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5)));
	} else {
		jule::U64 _32617_unsig = ({
			auto except = _21e69629b_parse_uint(_28917_lit,_29017_base,64LL);
			(except.ok()) ? (except.result) : ({
				_21ebc0693_push_err(&(*_self_), _28627_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});
		_30917_d.get()._field_constant=static__21ea9d7d5_new_u64(_32617_unsig);
		_30917_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("uint", 4)), 5)));
	}
	_30917_d.get()._field_model=jule::Any(_30917_d.get()._field_constant);
	if ((!(_21ebc1980_apply_numeric_prefix(&(*_self_), _30917_d)))) {
		_21ec00261_fit_bitsize(_30917_d);
	}
	return _30917_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc3487_lit_num(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d84db_LitExpr>& _34727_l) {
	{
		
		if (_21c62a298_is_float(_34727_l.get()._field_value)) {
			_case_begin_222c80e04:;
			{
				return _21ebc2c28_lit_float(&(*_self_), _34727_l);
			}
		}
		else {
			_case_begin_222c80299:;
			{
				return _21ebc30d0_lit_int(&(*_self_), _34727_l);
			}
		}
		_match_end_222c80200:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebc383e_eval_lit(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d84db_LitExpr> _35627_lit) {
	{
		
		if (_21c4e59b0_is_nil(_35627_lit.ptr())) {
			_case_begin_222c82576:;
			{
				return _21ebc1c5a_lit_nil(&(*_self_));
			}
		}
		else if (_21c6291ba_is_str(_35627_lit.get()._field_value)) {
			_case_begin_222c82620:;
			{
				return _21ebc2112_lit_str(&(*_self_), _35627_lit);
			}
		}
		else if (_21c629e8a_is_bool(_35627_lit.get()._field_value)) {
			_case_begin_222c82697:;
			{
				return _21ebc24b9_lit_bool(&(*_self_), _35627_lit);
			}
		}
		else if (_21c6297d6_is_rune(_35627_lit.get()._field_value)) {
			_case_begin_222c82367:;
			{
				return _21ebc2871_lit_rune(&(*_self_), _35627_lit);
			}
		}
		else if (_21c62a5a6_is_num(_35627_lit.get()._field_value)) {
			_case_begin_222c823de:;
			{
				return _21ebc3487_lit_num(&(*_self_), _35627_lit);
			}
		}
		else {
			_case_begin_222c81e05:;
			{
				return nullptr;
			}
		}
		_match_end_222c81d5b:;
	}
}



inline jule::Any _21ebc3be6_find_builtins(_21ebc00aa_Eval* _self_,jule::Str _37332_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_21eb49c8d_ImportInfo>>()) {
			_case_begin_222c85b1d:;
			{
				jule::Any _37621_def = _21ebeeedb_find_builtins_import(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_21eb49c8d_ImportInfo>());
				if (_37621_def != jule::Any(jule::Any(nullptr))) {
					return _37621_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb5443a_Sema>>()) {
			_case_begin_222c85b95:;
			{
				jule::Any _38121_def = _21ec00dcc_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_21eb5443a_Sema>());
				if (_38121_def != jule::Any(jule::Any(nullptr))) {
					return _38121_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
			_case_begin_222c85c1c:;
			{
				jule::Any _38621_def = _21ec00dcc_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_21eb2ed2d_ScopeChecker>().get()._field_s);
				if (_38621_def != jule::Any(jule::Any(nullptr))) {
					return _38621_def;
				}
			}
		}
		_match_end_222c858dc:;
	}
	return ((jule::Any(jule::Any((*_self_)._field_dis_builtin))) ? (jule::Any(jule::Any(nullptr))) : (_21ec2ca41_find_builtin_def(_37332_ident)));
}



inline jule::Any _21ebc417a_get_def(_21ebc00aa_Eval* _self_,jule::Str _39426_ident,jule::Bool _39438_cpp_linked) {
	if ((!(_39438_cpp_linked))) {
		jule::Ptr<_21ddb6aee_Enum> _39621_enm = _21ec23a48_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._21ec238c2_find_enum((*_self_)._field_lookup, _39426_ident);
		if ((_39621_enm != nullptr)) {
			return jule::Any(_39621_enm);
		}
	}
	jule::Ptr<_21eb75615_Var> _40217_v = _21ec23a48_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._21ec222b6_find_var((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_40217_v != nullptr)) {
		return jule::Any(_40217_v);
	}
	jule::Ptr<_21dd19249_Fn> _40717_f = _21ec23a48_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._21ec23163_find_fn((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_40717_f != nullptr)) {
		return jule::Any(_40717_f);
	}
	jule::Ptr<_21dd03266_Struct> _41217_s = _21ec23a48_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._21ec22bce_find_struct((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_41217_s != nullptr)) {
		return jule::Any(_41217_s);
	}
	jule::Ptr<_21ec05288_TypeAlias> _41717_ta = _21ec23a48_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._21ec2274a_find_type_alias((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_41717_ta != nullptr)) {
		return jule::Any(_41717_ta);
	}
	return _21ebc3be6_find_builtins(&(*_self_), _39426_ident);
}



inline void _21ebc4499_push_reference(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd264ba_ReferenceStack>& _42538_references) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
			_case_begin_222c90c8d:;
			{
				jule::Ptr<_21eb2ed2d_ScopeChecker> _42821_sc = _21eb3225e_get_root((*_self_)._field_lookup.operator jule::Ptr<_21eb2ed2d_ScopeChecker>());
				if ((!(_21dd276a8_exist_1(_42538_references.ptr(), _42821_sc.get()._field_owner)))) {
					_21dd27301_push(_42538_references.ptr(), jule::Any(_42821_sc.get()._field_owner));
				}
			}
		}
		else {
			_case_begin_222c90694:;
			{
				if (((*_self_)._field_owner != nullptr) && (!(_21dd276a8_exist_0(_42538_references.ptr(), (*_self_)._field_owner)))) {
					_21dd27301_push(_42538_references.ptr(), jule::Any((*_self_)._field_owner));
				}
			}
		}
		_match_end_222c90474:;
	}
}



inline void _21ebc47b8_push_reference_to_fn(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd1cc42_FnIns>& _43944_f) {
	_21ebc4499_push_reference(&(*_self_), _43944_f.get()._field_references);
}



inline void _21ebc4ad7_push_reference_to_var(_21ebc00aa_Eval* _self_,jule::Ptr<_21eb75615_Var>& _44345_v) {
	if ((_44345_v.get()._field_references != nullptr)) {
		_21ebc4499_push_reference(&(*_self_), _44345_v.get()._field_references);
	}
}



inline void _21ebc4e4a_push_reference_to_struct(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd06742_StructIns>& _44948_s) {
	_21ebc4499_push_reference(&(*_self_), _44948_s.get()._field_references);
}



inline jule::Ptr<_21ebbd053_Data> _21ebc52e1___eval_enum(_21ebc00aa_Eval* _self_,jule::Ptr<_21ddb6aee_Enum> _45330_enm) {
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_45330_enm, 3))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_21ebbd053_Data> _21ebc5775_eval_enum(_21ebc00aa_Eval* _self_,jule::Ptr<_21ddb6aee_Enum> _46532_enm,_21c627dde_Token _46544_error_token) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _46532_enm.get()._field_public,_46532_enm.get()._field_token)))) {
		_21ebc0693_push_err(&(*_self_), _46544_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_46532_enm.get()._field_ident)}));
		_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _21ebc52e1___eval_enum(&(*_self_), _46532_enm);
}



inline jule::Ptr<_21ebbd053_Data> _21ebc5b2c___eval_struct(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd06742_StructIns> _47532_s) {
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_47532_s, 0))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_47532_s)),true,nullptr));
}



inline jule::Ptr<_21ebbd053_Data> _21ebc60b1_eval_struct(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd06742_StructIns> _48834_s,_21c627dde_Token _48849_error_token) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _48834_s.get()._field_decl.get()._field_public,_48834_s.get()._field_decl.get()._field_token)))) {
		_21ebc0693_push_err(&(*_self_), _48849_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_48834_s.get()._field_decl.get()._field_ident)}));
		_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_21ebc6864_check_deprecated(&(*_self_), _48834_s.get()._field_decl.get()._field_directives,_48849_error_token);
	return _21ebc5b2c___eval_struct(&(*_self_), _48834_s);
}



inline jule::Ptr<_21ebbd053_Data> _21ebc6468_eval_fn_ins(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd1cc42_FnIns> _50030_f) {
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_50030_f, 1))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_50030_f)),false,nullptr));
}



inline void _21ebc6864_check_deprecated(_21ebc00aa_Eval* _self_,jule::Slice<jule::Ptr<_21c525490_Directive>>& _51340_directives,_21c627dde_Token _51382_tok) {
	if (_21ebc12ed_is_unsafe(&(*_self_))) {
		return;
	}
	jule::Ptr<_21c525490_Directive> _51813_d = _21ebeeaac_find_directive(_51340_directives,jule::Str("deprecated", 10));
	if ((_51813_d != nullptr)) {
		if ((_51813_d.get()._field_args.len() == 0LL)) {
			_21ebc0693_push_err(&(*_self_), _51382_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_21ebc0693_push_err(&(*_self_), _51382_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(_51813_d.get()._field_args[0LL]._field_kind)}));
		}
		_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebc6ce8_eval_fn(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd19249_Fn> _52930_f,_21c627dde_Token _52938_error_token) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _52930_f.get()._field_public,_52930_f.get()._field_token)))) {
		_21ebc0693_push_err(&(*_self_), _52938_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_52930_f.get()._field_ident)}));
		_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_21ebc6864_check_deprecated(&(*_self_), _52930_f.get()._field_directives,_52938_error_token);
	jule::Ptr<_21dd1cc42_FnIns> _53817_ins = _21dd1b2d4_instance(_52930_f);
	_21ebc47b8_push_reference_to_fn(&(*_self_), _53817_ins);
	return _21ebc6468_eval_fn_ins(&(*_self_), _53817_ins);
}



inline void _21ebc7315_push_illegal_cycle_error(_21ebc00aa_Eval* _self_,jule::Ptr<_21eb75615_Var>& _54344_v1,jule::Ptr<_21eb75615_Var>& _54355_v2,jule::Str& _54370_message) {
	
	jule::Str _54613_refers_to = _21c34911b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_54344_v1.get()._field_ident),jule::Any(_54355_v2.get()._field_ident)}));
	(_54370_message).buffer.insert(0, (((_2368293b2_repeat(jule::Str(" ", 1),4LL) + _54613_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _21ebc7788_check_cross_cycle(_21ebc00aa_Eval* _self_,jule::Ptr<_21eb75615_Var>& _55037_v,jule::Str& _55051_message) {
	{
		auto &expr = _55037_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_222cae84a:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> &_222cae916_d = *it;
			{
				if (_222cae916_d == (*_self_)._field_owner) {
					_21ebc7315_push_illegal_cycle_error(&(*_self_), _55037_v,_222cae916_d,_55051_message);
					return false;
				}
				if ((!(_21ebc7788_check_cross_cycle(&(*_self_), _222cae916_d,_55051_message)))) {
					_21ebc7315_push_illegal_cycle_error(&(*_self_), _55037_v,_222cae916_d,_55051_message);
					return false;
				}
			}
			_iter_next_222cae84a:;
			++it;
			goto _iter_begin_222cae84a;
		}
		_iter_end_222cae84a:;
	}
	return true;
}



inline jule::Bool _21ebc7c1c_check_illegal_cycles(_21ebc00aa_Eval* _self_,jule::Ptr<_21eb75615_Var>& _56944_v,_21c627dde_Token _56953_decl_token) {
	jule::Bool _56974_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_56974_ok = true;
		return _56974_ok;
	}
	if ((*_self_)._field_owner == _56944_v) {
		_21ebc0693_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_56974_ok = false;
		return _56974_ok;
	}
	jule::Str _58117_message = jule::Str();
	if ((!(_21ebc7788_check_cross_cycle(&(*_self_), _56944_v,_58117_message)))) {
		jule::Str _58421_err_msg = _58117_message;
		_58117_message=jule::Str();
		_21ebc7315_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_56944_v,_58117_message);
		_58421_err_msg=_58421_err_msg + _58117_message;
		_21ebc0693_push_err(&(*_self_), _56953_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_58421_err_msg)}));
		_56974_ok = false;
		return _56974_ok;
	}
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_56944_v);
	_56974_ok = true;
	return _56974_ok;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc81a1_eval_var(_21ebc00aa_Eval* _self_,jule::Ptr<_21eb75615_Var> _59631_v,_21c627dde_Token _59640_error_token) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _59631_v.get()._field_public,_59631_v.get()._field_token)))) {
		_21ebc0693_push_err(&(*_self_), _59640_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_59631_v.get()._field_ident)}));
		_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_21ebc6864_check_deprecated(&(*_self_), _59631_v.get()._field_directives,_59640_error_token);
	_59631_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_21eb5443a_Sema>>()) {
			_case_begin_222cb9e4e:;
			{
				jule::Bool _61017_ok = _21ebc7c1c_check_illegal_cycles(&(*_self_), _59631_v,_59640_error_token);
				if ((!(_61017_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
			_case_begin_222cba01a:;
			{
				if ((!(_59631_v.get()._field_reference)) || _21ebc12ed_is_unsafe(&(*_self_))) {
					goto _match_end_222cb9de9;
				}
				jule::Ptr<_21eb2ed2d_ScopeChecker> _61821_s = (*_self_)._field_lookup.operator jule::Ptr<_21eb2ed2d_ScopeChecker>();
				while ((_61821_s.get()._field_owner == nullptr) && (_61821_s.get()._field_parent != nullptr)) {
					{
						_61821_s=_61821_s.get()._field_parent;
					}
				_iter_next_222cbbd52:;
				}
				_iter_end_222cbbd52:;
				if (((_61821_s.get()._field_owner != nullptr) && _61821_s.get()._field_owner.get()._field_anon) && (_59631_v.get()._field_scope != _61821_s.get()._field_owner.get()._field_scope)) {
					_21ebc0693_push_err(&(*_self_), _59640_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>({jule::Any(_59631_v.get()._field_ident)}));
				}
			}
		}
		_match_end_222cb9de9:;
	}
	_21ebc4ad7_push_reference_to_var(&(*_self_), _59631_v);
	if ((!(_59631_v.get()._field_cpp_linked)) && ((_59631_v.get()._field_value == nullptr) || (_59631_v.get()._field_value.get()._field_data == nullptr))) {
		if (_59631_v.get()._field_constant) {
			_21eb6bb39_check_type_var((*_self_)._field_s, _59631_v,jule::Trait<_21ec23a48_Lookup>((*_self_)._field_s, 3));
			if ((_59631_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			}
		}
	}
	if ((_59631_v.get()._field_kind == nullptr) || (_59631_v.get()._field_kind.get()._field_kind == nullptr)) {
		if ((_59631_v.get()._field_scope != nullptr)) {
			return nullptr;
		}
		_21eb6bb39_check_type_var((*_self_)._field_s, _59631_v,(*_self_)._field_lookup);
		if ((_59631_v.get()._field_kind == nullptr) || (_59631_v.get()._field_kind.get()._field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_21ebbd053_Data> _65817_d = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(_59631_v.get()._field_kind.get()._field_kind,jule::Ptr<_21ec06223_TypeKind>(),_59631_v.get()._field_mutable,_59631_v.get()._field_reference,(!(_59631_v.get()._field_constant)),jule::Bool(),jule::Any(jule::Any(_59631_v)),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
	if (((!(_59631_v.get()._field_cpp_linked)) && _21eb75a33_is_initialized(_59631_v.ptr())) && (_59631_v.get()._field_value.get()._field_data != nullptr)) {
		_65817_d.get()._field_is_rune=_59631_v.get()._field_value.get()._field_data.get()._field_is_rune;
	}
	if (_59631_v.get()._field_constant && (_59631_v.get()._field_value.get()._field_data.get()._field_constant != nullptr)) {
		_65817_d.get()._field_constant=jule::new_ptr<_21ea9d450_Const>((*(_59631_v.get()._field_value.get()._field_data.get()._field_constant)));
		_65817_d.get()._field_model=jule::Any(_65817_d.get()._field_constant);
	}
	if (_21ebbda59_is_const(_65817_d.ptr())) {
		_21ebc1980_apply_numeric_prefix(&(*_self_), _65817_d);
	}
	return _65817_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc8635_eval_type_alias(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec05288_TypeAlias> _68238_ta,_21c627dde_Token _68254_error_token) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _68238_ta.get()._field_public,_68238_ta.get()._field_token)))) {
		_21ebc0693_push_err(&(*_self_), _68254_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_68238_ta.get()._field_ident)}));
		_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_68238_ta.get()._field_used=true;
	jule::Trait<_21ec05bd4_Kind> _69117_kind = _68238_ta.get()._field_kind.get()._field_kind.get()._field_kind;
	jule::Ptr<_21ebbd053_Data> _69217_d = nullptr;
	{
		auto &_match_expr{ _69117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21dd06742_StructIns>>()) {
			_case_begin_222ccb317:;
			{
				_69217_d=_21ebc5b2c___eval_struct(&(*_self_), _69117_kind.operator jule::Ptr<_21dd06742_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ddb6aee_Enum>>()) {
			_case_begin_222ccb779:;
			{
				_69217_d=_21ebc52e1___eval_enum(&(*_self_), _69117_kind.operator jule::Ptr<_21ddb6aee_Enum>());
			}
		}
		else {
			_case_begin_222ccb67a:;
			{
				_69217_d=jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(((_68238_ta.get()._field_cpp_linked) ? (_68238_ta.get()._field_ident) : (_68238_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident)),jule::Bool(),jule::Bool(),_68238_ta.get()._field_kind.get()._field_kind.get()._field_kind)),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_21ea9d450_Const>()));
				_69217_d.get()._field_model=jule::Any(_69217_d.get()._field_kind);
			}
		}
		_match_end_222ccb625:;
	}
	_69217_d.get()._field_kind.get()._field_generic=_68238_ta.get()._field_generic;
	return _69217_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc8ab9_eval_def(_21ebc00aa_Eval* _self_,jule::Any _71231_def,_21c627dde_Token _71241_ident) {
	{
		auto &_match_expr{ _71231_def };
		
		if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_222cd03d7:;
			{
				return _21ebc81a1_eval_var(&(*_self_), _71231_def.operator jule::Ptr<_21eb75615_Var>(),_71241_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ddb6aee_Enum>>()) {
			_case_begin_222cd044d:;
			{
				return _21ebc5775_eval_enum(&(*_self_), _71231_def.operator jule::Ptr<_21ddb6aee_Enum>(),_71241_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_222cd04b4:;
			{
				return _21ebc60b1_eval_struct(&(*_self_), _21dd0370b_instance(_71231_def.operator jule::Ptr<_21dd03266_Struct>()),_71241_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd19249_Fn>>()) {
			_case_begin_222cd053b:;
			{
				jule::Ptr<_21dd19249_Fn> _72121_f = _71231_def.operator jule::Ptr<_21dd19249_Fn>();
				if ((_72121_f.get()._field_ident != jule::Str("init", 4))) {
					return _21ebc6ce8_eval_fn(&(*_self_), _72121_f,_71241_ident);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd1cc42_FnIns>>()) {
			_case_begin_222cd05b3:;
			{
				return _21ebc6468_eval_fn_ins(&(*_self_), _71231_def.operator jule::Ptr<_21dd1cc42_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ec05288_TypeAlias>>()) {
			_case_begin_222cd063a:;
			{
				return _21ebc8635_eval_type_alias(&(*_self_), _71231_def.operator jule::Ptr<_21ec05288_TypeAlias>(),_71241_ident);
			}
		}
		_match_end_222cd0283:;
	}
	_21ebc0693_push_err(&(*_self_), _71241_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_71241_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc8e71_eval_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21c4d8b4b_IdentExpr> _73429_ident) {
	jule::Any _73517_def = _21ebc417a_get_def(&(*_self_), _73429_ident.get()._field_ident,_73429_ident.get()._field_cpp_linked);
	return _21ebc8ab9_eval_def(&(*_self_), _73517_def,_73429_ident.get()._field_token);
}



inline jule::Ptr<_21ebbd053_Data> _21ebc9328_eval_unary(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c4d8d6b_UnaryExpr> _73934_u) {
	_21ebe0c68_UnaryEval _74017_unary = static__21ebe1285_new(_self_);
	return _21ebe7797_eval(&_74017_unary, _73934_u);
}



inline jule::Ptr<_21ebbd053_Data> _21ebc96d0_eval_variadic(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c4d908b_VariadicExpr> _74437_v) {
	if ((_74437_v.get()._field_expr == nullptr)) {
		_21ebc0693_push_err(_self_.ptr(), _74437_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ec06223_TypeKind> _75017_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75017_prefix;
	});
	jule::Ptr<_21ebbd053_Data> _75417_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_74437_v.get()._field_expr));
	if ((_75417_d == nullptr)) {
		return nullptr;
	}
	if ((!(_21ec084de_variadicable(_75417_d.get()._field_kind.ptr())))) {
		_21ebc0693_push_err(_self_.ptr(), _74437_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_75417_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	jule::Ptr<_21ec10eca_Slc> _76413_slc = _21ec096ee_slc(_75417_d.get()._field_kind.ptr());
	_75417_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(_76413_slc.get()._field_elem.get()._field_cpp_ident,_76413_slc.get()._field_elem.get()._field_generic,true,_76413_slc.get()._field_elem.get()._field_kind));
	return _75417_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc9a87_eval_unsafe(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c4d870b_UnsafeExpr> _77435_u) {
	jule::Bool _77513_unsafety = _self_.get()._field_unsafety;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_21ebbd053_Data> _77817_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_77435_u.get()._field_expr));
	_self_.get()._field_unsafety=_77513_unsafety;
	return _77817_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebc9e3e_eval_arr(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63e840_SliceExpr> _78532_s) {
	jule::Ptr<_21ec13692_Arr> _78717_pt = _21ec09424_arr(_self_.get()._field_prefix.ptr());
	jule::Ptr<_21ec13692_Arr> _78917_arr = jule::new_ptr<_21ec13692_Arr>(_21ec13692_Arr(false,0LL,_78717_pt.get()._field_elem));
	jule::Bool _79517_filled = false;
	if ((_78532_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78532_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_21c4d908b_VariadicExpr>>()) {
				_case_begin_222ce3e56:;
				{
					if ((_78532_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_21c4d908b_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_222ce3dce;
					}
					if (_78717_pt.get()._field_auto) {
						_21ebc0693_push_err(_self_.ptr(), _78532_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_79517_filled=true;
					_78532_s.get()._field_exprs=_78532_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_222ce3dce:;
		}
	}
	_78917_arr.get()._field_n=static_cast<jule::I64>(_78532_s.get()._field_exprs.len());
	if ((!(_78717_pt.get()._field_auto))) {
		if (_78917_arr.get()._field_n > _78717_pt.get()._field_n) {
			_21ebc0693_push_err(_self_.ptr(), _78532_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_78917_arr.get()._field_n < _78717_pt.get()._field_n) {
			_78917_arr.get()._field_n=_78717_pt.get()._field_n;
		}
	}
	jule::Ptr<_21dd0ec89_ArrayExprModel> _82417_model = jule::new_ptr<_21dd0ec89_ArrayExprModel>(_21dd0ec89_ArrayExprModel(_78917_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(((_79517_filled) ? (2LL) : (static_cast<jule::I64>(static_cast<jule::I64>(_78532_s.get()._field_exprs.len()))))))));
	jule::Ptr<_21ec06223_TypeKind> _82917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_78917_arr.get()._field_elem;
	{
		auto &expr = _78532_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_222ce9654:;
		if (it != expr.end()) {
			jule::Ptr<_21c4d7b4a_Expr> _222ce9a83_elem = *it;
			{
				jule::Ptr<_21ebbd053_Data> _83221_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_222ce9a83_elem));
				if ((_83221_d == nullptr)) {
					goto _iter_next_222ce9654;
				}
				_21eb5dbe7_check_assign_type(_self_.get()._field_s, false,_78917_arr.get()._field_elem,_83221_d,_78532_s.get()._field_token);
				_82417_model.get()._field_elems = jule::alloc_for_append(_82417_model.get()._field_elems,1);_82417_model.get()._field_elems.__push(_83221_d.get()._field_model);
			}
			_iter_next_222ce9654:;
			++it;
			goto _iter_begin_222ce9654;
		}
		_iter_end_222ce9654:;
	}
	_self_.get()._field_prefix=_82917_prefix;
	if (_79517_filled) {
		_82417_model.get()._field_elems = jule::alloc_for_append(_82417_model.get()._field_elems,1);_82417_model.get()._field_elems.__push(jule::Any(nullptr));
	}
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_78917_arr, 10))),jule::Ptr<_21ec06223_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_82417_model)),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ebca3c3_eval_exp_slc(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63e840_SliceExpr> _85636_s,jule::Ptr<_21ec06223_TypeKind> _85655_elem_type) {
	jule::Ptr<_21ec10eca_Slc> _85717_slc = jule::new_ptr<_21ec10eca_Slc>(_21ec10eca_Slc(_85655_elem_type));
	jule::Ptr<_21dd0b68c_SliceExprModel> _86117_model = jule::new_ptr<_21dd0b68c_SliceExprModel>(_21dd0b68c_SliceExprModel(_85655_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_85636_s.get()._field_exprs.len()))));
	jule::Ptr<_21ec06223_TypeKind> _86617_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_85717_slc.get()._field_elem;
	{
		auto &expr = _85636_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_222d0036e:;
		if (it != expr.end()) {
			jule::Ptr<_21c4d7b4a_Expr> _222d00490_elem = *it;
			{
				jule::Ptr<_21ebbd053_Data> _86921_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_222d00490_elem));
				if ((_86921_d == nullptr)) {
					goto _iter_next_222d0036e;
				}
				_21eb5dbe7_check_assign_type(_self_.get()._field_s, false,_85717_slc.get()._field_elem,_86921_d,_85636_s.get()._field_token);
				_86117_model.get()._field_elems = jule::alloc_for_append(_86117_model.get()._field_elems,1);_86117_model.get()._field_elems.__push(_86921_d.get()._field_model);
			}
			_iter_next_222d0036e:;
			++it;
			goto _iter_begin_222d0036e;
		}
		_iter_end_222d0036e:;
	}
	_self_.get()._field_prefix=_86617_prefix;
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_85717_slc, 7))),jule::Ptr<_21ec06223_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_86117_model)),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ebca77a_eval_slice_expr(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63e840_SliceExpr> _88739_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_21ec09424_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_222d03e88:;
				{
					return _21ebc9e3e_eval_arr(_self_, _88739_s);
				}
			}
			else if ((_21ec096ee_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_222d04010:;
				{
					jule::Ptr<_21ec10eca_Slc> _89425_pt = _21ec096ee_slc(_self_.get()._field_prefix.ptr());
					return _21ebca3c3_eval_exp_slc(_self_, _88739_s,_89425_pt.get()._field_elem);
				}
			}
			_match_end_222d03d78:;
		}
	}
	jule::Ptr<_21ec06223_TypeKind> _89917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	if ((_88739_s.get()._field_exprs.len() == 0LL)) {
		_21ebc0693_push_err(_self_.ptr(), _88739_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _90717_first_elem = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_88739_s.get()._field_exprs[0LL]));
	if ((_90717_first_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _91217_d = _21ebca3c3_eval_exp_slc(_self_, _88739_s,_90717_first_elem.get()._field_kind);
	_self_.get()._field_prefix=_89917_prefix;
	return _91217_d;
}



inline void _21ebcabba_check_integer_indexing_by_data(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _91854_d,_21c627dde_Token _91864_token) {
	jule::Str _91913_err_key = _21ec02450_check_data_for_integer_indexing(_91854_d);
	{
		auto &_match_expr{ _91913_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_222d0a81e:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_222d0a621:;
			{
				_21ebc0693_push_err(&(*_self_), _91864_token,_91913_err_key,jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_91854_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_222d09ec2:;
			{
				_21ebc0693_push_err(&(*_self_), _91864_token,_91913_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_222d0a4de:;
	}
}



inline void _21ebcb182_indexing_ptr(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _93236_d,jule::Ptr<_21ebbd053_Data>& _93251_index,jule::Ptr<_21c4d82aa_IndexingExpr>& _93266_i) {
	_21ebcabba_check_integer_indexing_by_data(&(*_self_), _93251_index,_93266_i.get()._field_token);
	jule::Ptr<_21ec14275_Ptr> _93517_ptr = _21ec08d6e_ptr(_93236_d.get()._field_kind.ptr());
	{
		
		if (_21ec14dbe_is_unsafe(_93517_ptr.ptr())) {
			_case_begin_222d0dc51:;
			{
				_21ebc0693_push_err(&(*_self_), _93266_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!(_21ebc12ed_is_unsafe(&(*_self_))))) {
			_case_begin_222d0dcc8:;
			{
				_21ebc0693_push_err(&(*_self_), _93266_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_222d0db74:;
	}
	_93236_d.get()._field_kind=_93517_ptr.get()._field_elem;
}



inline void _21ebcb65a_indexing_arr(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _94836_d,jule::Ptr<_21ebbd053_Data>& _94851_index,jule::Ptr<_21c4d82aa_IndexingExpr>& _94866_i) {
	jule::Ptr<_21ec13692_Arr> _94917_arr = _21ec09424_arr(_94836_d.get()._field_kind.ptr());
	_94836_d.get()._field_kind=_94917_arr.get()._field_elem;
	_21ebcabba_check_integer_indexing_by_data(&(*_self_), _94851_index,_94866_i.get()._field_token);
	if (_21ebbda59_is_const(_94851_index.ptr()) && (_21eaa0cb0_as_f64(_94851_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_94917_arr.get()._field_n))))) {
		_21ebc0693_push_err(&(*_self_), _94866_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _21ebcbb33_indexing_slc(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _95736_d,jule::Ptr<_21ebbd053_Data>& _95751_index,jule::Ptr<_21c4d82aa_IndexingExpr>& _95766_i) {
	jule::Ptr<_21ec10eca_Slc> _95817_slc = _21ec096ee_slc(_95736_d.get()._field_kind.ptr());
	_95736_d.get()._field_kind=_95817_slc.get()._field_elem;
	_21ebcabba_check_integer_indexing_by_data(&(*_self_), _95751_index,_95766_i.get()._field_token);
	if ((!(_21ebbda59_is_const(_95751_index.ptr())))) {
		return;
	}
	{
		auto &_match_expr{ _95736_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd0b68c_SliceExprModel>>()) {
			_case_begin_222d17133:;
			{
				jule::Ptr<_21dd0b68c_SliceExprModel> _96821_m = _95736_d.get()._field_model.operator jule::Ptr<_21dd0b68c_SliceExprModel>();
				jule::F64 _96917_indx = _21eaa0cb0_as_f64(_95751_index.get()._field_constant.ptr());
				if (_96917_indx >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_96821_m.get()._field_elems.len())))) {
					_21ebc0693_push_err(&(*_self_), _95766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95736_d.get()._field_model=_96821_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_96917_indx))];
					_95736_d.get()._field_decl=true;
				}
			}
		}
		_match_end_222d170bc:;
	}
}



inline void _21ebcc10b_indexing_map(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _97936_d,jule::Ptr<_21ebbd053_Data>& _97951_index,jule::Ptr<_21c4d82aa_IndexingExpr>& _97970_i) {
	if ((_97951_index == nullptr)) {
		return;
	}
	jule::Ptr<_21ec128b1_Map> _98417_m = _21ec0a359_map(_97936_d.get()._field_kind.ptr());
	_21eba6778_AssignTypeChecker _98517_atc = _21eba6778_AssignTypeChecker((*_self_)._field_s,_98417_m.get()._field_key,_97951_index,_97970_i.get()._field_token);
	_21eba7bec_check(&_98517_atc);
	_97936_d.get()._field_kind=_98417_m.get()._field_val;
}



inline void _21ebcc5d4_indexing_str(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _99636_d,jule::Ptr<_21ebbd053_Data>& _99651_index,jule::Ptr<_21c4d82aa_IndexingExpr>& _99666_i) {
	
	_99636_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u8", 2)), 5)));
	if ((_99651_index == nullptr)) {
		return;
	}
	_21ebcabba_check_integer_indexing_by_data(&(*_self_), _99651_index,_99666_i.get()._field_token);
	if ((!(_21ebbda59_is_const(_99651_index.ptr())))) {
		_99636_d.get()._field_constant=nullptr;
		return;
	}
	if (_21ebbda59_is_const(_99636_d.ptr())) {
		_21c627dde_Token _101217_error_token = _99666_i.get()._field_token;
		jule::I64 _101317_j = _21eaa070a_as_i64(_99651_index.get()._field_constant.ptr());
		jule::Str _101417_s = _21eaa0155_read_str(_99636_d.get()._field_constant.ptr());
		if (static_cast<jule::I64>(_101317_j) >= static_cast<jule::I64>(static_cast<jule::I64>(_101417_s.len()))) {
			_21ebc0693_push_err(&(*_self_), _101217_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_21eaa13ed_set_u64(_99636_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[_101317_j])));
		}
	}
}



inline void _21ebccaac_to_indexing(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _102335_d,jule::Ptr<_21ebbd053_Data>& _102350_index,jule::Ptr<_21c4d82aa_IndexingExpr>& _102369_i) {
	{
		
		if ((_21ec08d6e_ptr(_102335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d24948:;
			{
				_21ebcb182_indexing_ptr(&(*_self_), _102335_d,_102350_index,_102369_i);
				return;
			}
		}
		else if ((_21ec09424_arr(_102335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d249c0:;
			{
				_21ebcb65a_indexing_arr(&(*_self_), _102335_d,_102350_index,_102369_i);
				return;
			}
		}
		else if ((_21ec096ee_slc(_102335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d24a47:;
			{
				_21ebcbb33_indexing_slc(&(*_self_), _102335_d,_102350_index,_102369_i);
				return;
			}
		}
		else if ((_21ec0a359_map(_102335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d24abe:;
			{
				_21ebcc10b_indexing_map(&(*_self_), _102335_d,_102350_index,_102369_i);
				return;
			}
		}
		else if ((_21ec087b9_prim(_102335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d24b46:;
			{
				jule::Ptr<_21ec0b58b_Prim> _104217_prim = _21ec087b9_prim(_102335_d.get()._field_kind.ptr());
				{
					
					if (_21ec0ecba_is_str(_104217_prim.ptr())) {
						_case_begin_222d29a08:;
						{
							_21ebcc5d4_indexing_str(&(*_self_), _102335_d,_102350_index,_102369_i);
							return;
						}
					}
					_match_end_222d2994d:;
				}
			}
		}
		_match_end_222d24805:;
	}
	_21ebc0693_push_err(&(*_self_), _102369_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_102335_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _21ebcd085_push_generics_from_index_data(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _105354_decl,jule::Ptr<_21c4d82aa_IndexingExpr>& _105381_i) {
	{
		auto &_match_expr{ _105381_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21c4d8d6b_UnaryExpr>>()) {
			_case_begin_222d2d0c2:;
			{
				jule::Ptr<_21ebbd053_Data> _105821_d = _21ebc9328_eval_unary(_self_, _105381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_21c4d8d6b_UnaryExpr>());
				if ((!(_105821_d.get()._field_decl))) {
					_21ebc0693_push_err(_self_.ptr(), _105381_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				}
				_105354_decl.get()._field_generics = jule::alloc_for_append(_105354_decl.get()._field_generics,1);_105354_decl.get()._field_generics.__push(jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_21c627dde_Token(),jule::Any(jule::Any(_105821_d.get()._field_kind)))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c5d253b_TypeDecl>>()) {
			_case_begin_222d2c203:;
			{
				_105354_decl.get()._field_generics = jule::alloc_for_append(_105354_decl.get()._field_generics,1);_105354_decl.get()._field_generics.__push(_105381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_21c5d253b_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d8b4b_IdentExpr>>()) {
			_case_begin_222d2c269:;
			{
				jule::Ptr<_21c4d8b4b_IdentExpr> _106921_expr = _105381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_21c4d8b4b_IdentExpr>();
				_105354_decl.get()._field_generics = jule::alloc_for_append(_105354_decl.get()._field_generics,1);_105354_decl.get()._field_generics.__push(jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_21c627dde_Token(),jule::Any(jule::Any(jule::new_ptr<_21c529e9a_IdentTypeDecl>(_21c529e9a_IdentTypeDecl(_106921_expr.get()._field_token,_106921_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>())))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d808a_TupleExpr>>()) {
			_case_begin_222d2c2d0:;
			{
				{
					auto &expr = _105381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_21c4d808a_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_222d3222a:;
					if (it != expr.end()) {
						jule::Ptr<_21c4d7b4a_Expr> _222d33072_expr = *it;
						{
							{
								auto &_match_expr{ _222d33072_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_21c5d253b_TypeDecl>>()) {
									_case_begin_222d33847:;
									{
										_105354_decl.get()._field_generics = jule::alloc_for_append(_105354_decl.get()._field_generics,1);_105354_decl.get()._field_generics.__push(_222d33072_expr.get()._field_kind.operator jule::Ptr<_21c5d253b_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_21c4d8b4b_IdentExpr>>()) {
									_case_begin_222d338ad:;
									{
										jule::Ptr<_21c4d8b4b_IdentExpr> _108229_expr = _222d33072_expr.get()._field_kind.operator jule::Ptr<_21c4d8b4b_IdentExpr>();
										_105354_decl.get()._field_generics = jule::alloc_for_append(_105354_decl.get()._field_generics,1);_105354_decl.get()._field_generics.__push(jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_21c627dde_Token(),jule::Any(jule::Any(jule::new_ptr<_21c529e9a_IdentTypeDecl>(_21c529e9a_IdentTypeDecl(_108229_expr.get()._field_token,_108229_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>())))))));
									}
								}
								_match_end_222d337e2:;
							}
						}
						_iter_next_222d3222a:;
						++it;
						goto _iter_begin_222d3222a;
					}
					_iter_end_222d3222a:;
				}
			}
		}
		else {
			_case_begin_222d2c18c:;
			{
				_21ebc0693_push_err(_self_.ptr(), _105381_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_222d2c08d:;
	}
	return true;
}



inline jule::Ptr<_21ebbd053_Data> _21ebcd54c_eval_ident_decl_from_indexing(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21ebbd053_Data>& _109854_d,jule::Ptr<_21c4d82aa_IndexingExpr>& _109869_i) {
	jule::Ptr<_21c5d253b_TypeDecl> _109917_tdecl = jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl());
	jule::Ptr<_21c529e9a_IdentTypeDecl> _110017_decl = nullptr;
	{
		auto &_match_expr{ _109869_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21c4d8b4b_IdentExpr>>()) {
			_case_begin_222d37d8a:;
			{
				jule::Ptr<_21c4d8b4b_IdentExpr> _110321_expr = _109869_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_21c4d8b4b_IdentExpr>();
				_110017_decl=jule::new_ptr<_21c529e9a_IdentTypeDecl>(_21c529e9a_IdentTypeDecl(_110321_expr.get()._field_token,_110321_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>()));
				_109917_tdecl.get()._field_kind=jule::Any(_110017_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63d630_NsSelectionExpr>>()) {
			_case_begin_222d37e01:;
			{
				jule::Ptr<_21c63d630_NsSelectionExpr> _111021_expr = _109869_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_21c63d630_NsSelectionExpr>();
				_110017_decl=jule::new_ptr<_21c529e9a_IdentTypeDecl>(_21c529e9a_IdentTypeDecl(_111021_expr.get()._field_ident,_111021_expr.get()._field_ident._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>()));
				_109917_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_21c5ec545_NamespaceTypeDecl>(_21c5ec545_NamespaceTypeDecl(_111021_expr.get()._field_ns,_110017_decl)));
			}
		}
		else {
			_case_begin_222d37010:;
			{
				_21ebc0693_push_err(_self_.ptr(), _109869_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_222d36e11:;
	}
	if ((!(_21ebcd085_push_generics_from_index_data(_self_, _110017_decl,_109869_i)))) {
		return nullptr;
	}
	return _21ebd47c8_eval_type(_self_.ptr(), _109917_tdecl);
}



inline jule::Ptr<_21ebbd053_Data> _21ebcd8e3_eval_indexing(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c4d82aa_IndexingExpr> _112937_i) {
	jule::Ptr<_21ec06223_TypeKind> _113017_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_113017_prefix;
	});
	jule::Ptr<_21ebbd053_Data> _113417_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_112937_i.get()._field_expr));
	if ((_113417_d == nullptr)) {
		return nullptr;
	}
	if (_113417_d.get()._field_decl) {
		return _21ebcd54c_eval_ident_decl_from_indexing(_self_, _113417_d,_112937_i);
	}
	_21ebbd053_Data _114417_old_d = (*(_113417_d));
	jule::Ptr<_21ebbd053_Data> _114617_index = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_112937_i.get()._field_index));
	if ((_114617_index == nullptr)) {
		return nullptr;
	}
	_113417_d.get()._field_decl=false;
	_21ebccaac_to_indexing(_self_.ptr(), _113417_d,_114617_index,_112937_i);
	if (_21ebbda59_is_const(_113417_d.ptr())) {
		_113417_d.get()._field_decl=false;
		_113417_d.get()._field_model=jule::Any(_113417_d.get()._field_constant);
	} else if (_113417_d.get()._field_decl) {
		_113417_d.get()._field_decl=false;
	} else {
		_113417_d.get()._field_model=jule::Any(jule::new_ptr<_21dd0bbdc_IndexingExprModel>(_21dd0bbdc_IndexingExprModel(_112937_i.get()._field_token,jule::new_ptr<_21ebbd053_Data>(_114417_old_d),_114617_index)));
	}
	return _113417_d;
}



inline std::tuple<jule::Ptr<_21ebbd053_Data>,jule::Ptr<_21ebbd053_Data>> _21ebcdc9a_eval_slicing_exprs(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63eed3_SlicingExpr>& _117743_s) {
	jule::Ptr<_21ec06223_TypeKind> _117817_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_117817_prefix;
	});
	jule::Ptr<_21ebbd053_Data> _118217_l = nullptr;
	jule::Ptr<_21ebbd053_Data> _118317_r = nullptr;
	if ((_117743_s.get()._field_start != nullptr)) {
		_118217_l=_21ebdeea9_eval_expr_kind(_self_, jule::Any(_117743_s.get()._field_start));
		if ((_118217_l != nullptr)) {
			_21ebcabba_check_integer_indexing_by_data(_self_.ptr(), _118217_l,_117743_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_118217_l=jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__21ea9d670_new_i64(0LL)));
		_118217_l.get()._field_model=jule::Any(_118217_l.get()._field_constant);
	}
	if ((_117743_s.get()._field_to != nullptr)) {
		_118317_r=_21ebdeea9_eval_expr_kind(_self_, jule::Any(_117743_s.get()._field_to));
		if ((_118317_r != nullptr)) {
			_21ebcabba_check_integer_indexing_by_data(_self_.ptr(), _118317_r,_117743_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_118217_l,_118317_r);
}



inline void _21ebce0b9_slicing_arr(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _121231_d) {
	jule::Ptr<_21ec06223_TypeKind> _121317_elem_type = _21ec09424_arr(_121231_d.get()._field_kind.ptr()).get()._field_elem;
	_121231_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec10eca_Slc>(_21ec10eca_Slc(_121317_elem_type)), 7)));
	_121231_d.get()._field_lvalue=false;
	_121231_d.get()._field_mutable=_121231_d.get()._field_mutable || (!(_21ec07884_mutable(_121317_elem_type.ptr())));
}



inline void _21ebce592_slicing_str(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _122731_d,jule::Ptr<_21ebbd053_Data>& _122742_l,jule::Ptr<_21ebbd053_Data>& _122753_r) {
	_122731_d.get()._field_lvalue=false;
	_122731_d.get()._field_mutable=true;
	if ((!(_21ebbda59_is_const(_122731_d.ptr())))) {
		return;
	}
	if ((_122742_l == nullptr) || (_122753_r == nullptr)) {
		_122731_d.get()._field_constant=nullptr;
		return;
	}
	if (_21ebbda59_is_const(_122742_l.ptr()) && _21ebbda59_is_const(_122753_r.ptr())) {
		jule::I64 _124017_left = _21eaa070a_as_i64(_122742_l.get()._field_constant.ptr());
		if ((_124017_left < 0LL)) {
			return;
		}
		jule::Str _124517_s = _21eaa0155_read_str(_122731_d.get()._field_constant.ptr());
		jule::I64 _124621_right = 0LL;
		if ((_122753_r == nullptr)) {
			_124621_right=static_cast<jule::I64>(static_cast<jule::I64>(_124517_s.len()));
		} else {
			_124621_right=static_cast<jule::I64>(_21eaa070a_as_i64(_122753_r.get()._field_constant.ptr()));
		}
		if (_124017_left > _124621_right) {
			return;
		}
		_21eaa1a3b_set_str(_122731_d.get()._field_constant.ptr(), _124517_s.slice(_124017_left,_124621_right));
		_122731_d.get()._field_decl=true;
	} else {
		_122731_d.get()._field_constant=nullptr;
	}
}



inline void _21ebceb47_check_slicing(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data>& _126337_d,jule::Ptr<_21ebbd053_Data>& _126348_l,jule::Ptr<_21ebbd053_Data>& _126359_r,jule::Ptr<_21c63eed3_SlicingExpr>& _126370_s) {
	{
		
		if ((_21ec09424_arr(_126337_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d53a32:;
			{
				_21ebce0b9_slicing_arr(&(*_self_), _126337_d);
				return;
			}
		}
		else if ((_21ec096ee_slc(_126337_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d53aa9:;
			{
				return;
			}
		}
		else if ((_21ec087b9_prim(_126337_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222d53b31:;
			{
				jule::Ptr<_21ec0b58b_Prim> _127117_prim = _21ec087b9_prim(_126337_d.get()._field_kind.ptr());
				{
					
					if (_21ec0ecba_is_str(_127117_prim.ptr())) {
						_case_begin_222d5646e:;
						{
							_21ebce592_slicing_str(&(*_self_), _126337_d,_126348_l,_126359_r);
							return;
						}
					}
					_match_end_222d563b4:;
				}
			}
		}
		_match_end_222d53911:;
	}
	_21ebc0693_push_err(&(*_self_), _126370_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_126337_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_21ebbd053_Data> _21ebceeee_eval_slicing(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63eed3_SlicingExpr> _128236_s) {
	jule::Ptr<_21ebbd053_Data> _128317_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_128236_s.get()._field_expr));
	if ((_128317_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _128818_l;
	jule::Ptr<_21ebbd053_Data> _128825_r;
	std::tie(_128818_l,_128825_r) = _21ebcdc9a_eval_slicing_exprs(_self_, _128236_s);
	if ((_128818_l == nullptr)) {
		return _128317_d;
	}
	_128317_d.get()._field_decl=false;
	_21ebceb47_check_slicing(_self_.ptr(), _128317_d,_128818_l,_128825_r,_128236_s);
	_128317_d.get()._field_cast_kind=nullptr;
	if (_21ebbda59_is_const(_128317_d.ptr())) {
		_128317_d.get()._field_decl=false;
		_128317_d.get()._field_model=jule::Any(_128317_d.get()._field_constant);
	} else if (_128317_d.get()._field_decl) {
		_128317_d.get()._field_decl=false;
	} else {
		jule::Ptr<_21dd0d23d_SlicingExprModel> _130721_model = jule::new_ptr<_21dd0d23d_SlicingExprModel>(_21dd0d23d_SlicingExprModel(_128236_s.get()._field_token,_128317_d.get()._field_model,_128818_l.get()._field_model,jule::Any()));
		if ((_128825_r != nullptr)) {
			_130721_model.get()._field_right=_128825_r.get()._field_model;
		}
		_128317_d.get()._field_model=jule::Any(_130721_model);
	}
	return _128317_d;
}



inline void _21ebd04c7_cast_ptr(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _132031_t,jule::Ptr<_21ebbd053_Data> _132049_d,_21c627dde_Token _132059_error_token) {
	jule::Ptr<_21ec103e7_Sptr> _132113_sptr = _21ec08a94_sptr(_132049_d.get()._field_kind.ptr());
	if ((_132113_sptr != nullptr)) {
		if ((!(_21ec069e8_equals(_21ec08d6e_ptr(_132031_t.ptr()).get()._field_elem, _132113_sptr.get()._field_elem)))) {
			_21ebc0693_push_err(&(*_self_), _132059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_132049_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_132031_t.ptr()))}));
		}
		return;
	}
	if ((!(_21ebc12ed_is_unsafe(&(*_self_))))) {
		_21ebc0693_push_err(&(*_self_), _132059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_21ec0b58b_Prim> _133413_prim = _21ec087b9_prim(_132049_d.get()._field_kind.ptr());
	if ((_21ec08d6e_ptr(_132049_d.get()._field_kind.ptr()) == nullptr) && ((_133413_prim == nullptr) || (!(_21eb2b236_is_int(_21ec0b965_to_str(_133413_prim.ptr())))))) {
		_21ebc0693_push_err(&(*_self_), _132059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_132049_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_132031_t.ptr()))}));
	}
	_132049_d.get()._field_constant=nullptr;
}



inline void _21ebd09a0_cast_struct(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _134234_t,jule::Ptr<_21ebbd053_Data> _134252_d,_21c627dde_Token _134262_error_token) {
	jule::Ptr<_21deee929_Trait> _134317_tr = _21ec0a07e_trt(_134252_d.get()._field_kind.ptr());
	if ((_134317_tr == nullptr)) {
		_21ebc0693_push_err(&(*_self_), _134262_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_134252_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_134234_t.ptr()))}));
		return;
	}
	jule::Ptr<_21dd06742_StructIns> _134917_s = _21ec09ca4_strct(_134234_t.ptr());
	_21ebc4e4a_push_reference_to_struct(&(*_self_), _134917_s);
	if ((!(_21dd04b5d_is_implements(_134917_s.get()._field_decl.ptr(), _134317_tr)))) {
		_21ebc0693_push_err(&(*_self_), _134262_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_134252_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_134234_t.ptr()))}));
	}
}



inline void _21ebd0e78_cast_ref(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _135731_t,jule::Ptr<_21ebbd053_Data> _135749_d,_21c627dde_Token _135759_error_token) {
	jule::Ptr<_21ec103e7_Sptr> _135817_sptr = _21ec08a94_sptr(_135731_t.ptr());
	jule::Ptr<_21ec14275_Ptr> _136017_ptr = _21ec08d6e_ptr(_135749_d.get()._field_kind.ptr());
	if ((_136017_ptr != nullptr) && _21ec069e8_equals(_135817_sptr.get()._field_elem, _136017_ptr.get()._field_elem)) {
		if ((!(_21ebc12ed_is_unsafe(&(*_self_))))) {
			_21ebc0693_push_err(&(*_self_), _135759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_21ec09ca4_strct(_135817_sptr.get()._field_elem.ptr()) != nullptr)) {
		_21ebd09a0_cast_struct(&(*_self_), _135817_sptr.get()._field_elem,_135749_d,_135759_error_token);
		return;
	}
	_21ebc0693_push_err(&(*_self_), _135759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_135749_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_135731_t.ptr()))}));
}



inline void _21ebd1451_cast_slc(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _137931_t,jule::Ptr<_21ebbd053_Data> _137949_d,_21c627dde_Token _137959_error_token) {
	if ((_21ec09149_enm(_137949_d.get()._field_kind.ptr()) != nullptr)) {
		if ((_21ec087b9_prim(_21ec09149_enm(_137949_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_21ec0ecba_is_str(_21ec087b9_prim(_21ec09149_enm(_137949_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr())))) {
			_21ebc0693_push_err(&(*_self_), _137959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_137949_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_137931_t.ptr()))}));
			return;
		}
	} else if ((_21ec087b9_prim(_137949_d.get()._field_kind.ptr()) == nullptr) || (!(_21ec0ecba_is_str(_21ec087b9_prim(_137949_d.get()._field_kind.ptr()).ptr())))) {
		_21ebc0693_push_err(&(*_self_), _137959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_137949_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_137931_t.ptr()))}));
		return;
	}
	_137931_t=_21ec096ee_slc(_137931_t.ptr()).get()._field_elem;
	jule::Ptr<_21ec0b58b_Prim> _139113_prim = _21ec087b9_prim(_137931_t.ptr());
	if ((_139113_prim == nullptr) || ((!(_21ec0ce50_is_u8(_139113_prim.ptr()))) && (!(_21ec0c89a_is_i32(_139113_prim.ptr()))))) {
		_21ebc0693_push_err(&(*_self_), _137959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_137949_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_137931_t.ptr()))}));
	}
}



inline void _21ebd184c_cast_str(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _139731_d,_21c627dde_Token _139741_error_token) {
	if ((_21ec09149_enm(_139731_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21ddb6aee_Enum> _139921_e = _21ec09149_enm(_139731_d.get()._field_kind.ptr());
		if ((_21ec087b9_prim(_139921_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _21ec0ecba_is_str(_21ec087b9_prim(_139921_e.get()._field_kind.get()._field_kind.ptr()).ptr())) {
			return;
		}
	}
	if ((_21ec087b9_prim(_139731_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21ec0b58b_Prim> _140617_prim = _21ec087b9_prim(_139731_d.get()._field_kind.ptr());
		if ((!(_21ec0ce50_is_u8(_140617_prim.ptr()))) && (!(_21ec0c89a_is_i32(_140617_prim.ptr())))) {
			_21ebc0693_push_err(&(*_self_), _139741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_21ec06641_to_str(_139731_d.get()._field_kind.ptr()))}));
		}
		return;
	}
	if ((_21ec096ee_slc(_139731_d.get()._field_kind.ptr()) == nullptr)) {
		_21ebc0693_push_err(&(*_self_), _139741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_21ec06641_to_str(_139731_d.get()._field_kind.ptr()))}));
		return;
	}
	jule::Ptr<_21ec06223_TypeKind> _141817_t = _21ec096ee_slc(_139731_d.get()._field_kind.ptr()).get()._field_elem;
	jule::Ptr<_21ec0b58b_Prim> _141913_prim = _21ec087b9_prim(_141817_t.ptr());
	if ((_141913_prim == nullptr) || ((!(_21ec0ce50_is_u8(_141913_prim.ptr()))) && (!(_21ec0c89a_is_i32(_141913_prim.ptr()))))) {
		_21ebc0693_push_err(&(*_self_), _139741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_21ec06641_to_str(_139731_d.get()._field_kind.ptr()))}));
	}
}



inline void _21ebd1d25_cast_int(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _142531_t,jule::Ptr<_21ebbd053_Data> _142549_d,_21c627dde_Token _142559_error_token) {
	if (_21ebbda59_is_const(_142549_d.ptr())) {
		jule::Ptr<_21ec0b58b_Prim> _142717_prim = _21ec087b9_prim(_142531_t.ptr());
		{
			
			if (_21eb2aac6_is_sig_int(_142717_prim.get()._field_kind)) {
				_case_begin_222d83721:;
				{
					_21eaa10ce_set_i64(_142549_d.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64(_142549_d.get()._field_constant.ptr())));
				}
			}
			else if (_21eb2ae28_is_unsig_int(_142717_prim.get()._field_kind)) {
				_case_begin_222d83798:;
				{
					_21eaa13ed_set_u64(_142549_d.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64(_142549_d.get()._field_constant.ptr())));
				}
			}
			_match_end_222d83666:;
		}
	}
	if ((_21ec09149_enm(_142549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21ddb6aee_Enum> _143817_e = _21ec09149_enm(_142549_d.get()._field_kind.ptr());
		if (_21eb2b896_is_num(_21ec06641_to_str(_143817_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	if ((_21ec08a94_sptr(_142549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21ec0b58b_Prim> _144517_prim = _21ec087b9_prim(_142531_t.ptr());
		if ((!(_21ec0e715_is_uintptr(_144517_prim.ptr())))) {
			_21ebc0693_push_err(&(*_self_), _142559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_142549_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_142531_t.ptr()))}));
		}
		return;
	}
	if ((_21ec08d6e_ptr(_142549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21ec0b58b_Prim> _145217_prim = _21ec087b9_prim(_142531_t.ptr());
		if (_21ec0e715_is_uintptr(_145217_prim.ptr())) {
		} else if ((!(_21ebc12ed_is_unsafe(&(*_self_))))) {
			_21ebc0693_push_err(&(*_self_), _142559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_21ec0c89a_is_i32(_145217_prim.ptr()))) && (!(_21ec0cb75_is_i64(_145217_prim.ptr())))) && (!(_21ec0d22a_is_u16(_145217_prim.ptr())))) && (!(_21ec0d505_is_u32(_145217_prim.ptr())))) && (!(_21ec0d7d0_is_u64(_145217_prim.ptr())))) {
			_21ebc0693_push_err(&(*_self_), _142559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_142549_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_142531_t.ptr()))}));
		}
		return;
	}
	jule::Ptr<_21ec0b58b_Prim> _146313_prim = _21ec087b9_prim(_142549_d.get()._field_kind.ptr());
	if ((_146313_prim != nullptr) && _21eb2b896_is_num(_21ec0b965_to_str(_146313_prim.ptr()))) {
		return;
	}
	_21ebc0693_push_err(&(*_self_), _142559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_142549_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_142531_t.ptr()))}));
}



inline void _21ebd22ed_cast_num(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _147131_t,jule::Ptr<_21ebbd053_Data> _147149_d,_21c627dde_Token _147159_error_token) {
	if (_21ebbda59_is_const(_147149_d.ptr())) {
		jule::Ptr<_21ec0b58b_Prim> _147317_prim = _21ec087b9_prim(_147131_t.ptr());
		{
			
			if (_21eb2b588_is_float(_147317_prim.get()._field_kind)) {
				_case_begin_222d92cc4:;
				{
					_21eaa1d5a_set_f64(_147149_d.get()._field_constant.ptr(), static_cast<jule::F64>(_21eaa0cb0_as_f64(_147149_d.get()._field_constant.ptr())));
				}
			}
			else if (_21eb2aac6_is_sig_int(_147317_prim.get()._field_kind)) {
				_case_begin_222d92d4b:;
				{
					_21eaa10ce_set_i64(_147149_d.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64(_147149_d.get()._field_constant.ptr())));
				}
			}
			else if (_21eb2ae28_is_unsig_int(_147317_prim.get()._field_kind)) {
				_case_begin_222d92dc3:;
				{
					_21eaa13ed_set_u64(_147149_d.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64(_147149_d.get()._field_constant.ptr())));
				}
			}
			_match_end_222d92c08:;
		}
	}
	if ((_21ec09149_enm(_147149_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21ddb6aee_Enum> _148517_e = _21ec09149_enm(_147149_d.get()._field_kind.ptr());
		if (_21eb2b896_is_num(_21ec06641_to_str(_148517_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	jule::Ptr<_21ec0b58b_Prim> _149113_prim = _21ec087b9_prim(_147149_d.get()._field_kind.ptr());
	if ((_149113_prim != nullptr) && _21eb2b896_is_num(_21ec0b965_to_str(_149113_prim.ptr()))) {
		return;
	}
	_21ebc0693_push_err(&(*_self_), _147159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_147149_d.get()._field_kind.ptr())),jule::Any(_21ec06641_to_str(_147131_t.ptr()))}));
}



inline void _21ebd27c6_cast_prim(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _149932_t,jule::Ptr<_21ebbd053_Data> _149950_d,_21c627dde_Token _149960_error_token) {
	jule::Ptr<_21ec0b58b_Prim> _150013_prim = _21ec087b9_prim(_149932_t.ptr());
	{
		
		if (_21ec10095_is_any(_150013_prim.ptr())) {
			_case_begin_222d9a848:;
		}
		else if (_21ec0ecba_is_str(_150013_prim.ptr())) {
			_case_begin_222d9a8ae:;
			{
				_21ebd184c_cast_str(&(*_self_), _149950_d,_149960_error_token);
			}
		}
		else if (_21eb2b236_is_int(_21ec0b965_to_str(_150013_prim.ptr()))) {
			_case_begin_222d9a925:;
			{
				_21ebd1d25_cast_int(&(*_self_), _149932_t,_149950_d,_149960_error_token);
			}
		}
		else if (_21eb2b896_is_num(_21ec0b965_to_str(_150013_prim.ptr()))) {
			_case_begin_222d9a98b:;
			{
				_21ebd22ed_cast_num(&(*_self_), _149932_t,_149950_d,_149960_error_token);
			}
		}
		else {
			_case_begin_222d9a7d2:;
			{
				_21ebc0693_push_err(&(*_self_), _149960_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_149932_t.ptr()))}));
			}
		}
		_match_end_222d9a76b:;
	}
}



inline void _21ebd2bc2_cast_constant(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind>& _151537_t,jule::Ptr<_21ebbd053_Data>& _151556_d) {
	if ((_151556_d == nullptr) || (!(_21ebbda59_is_const(_151556_d.ptr())))) {
		return;
	}
	jule::Ptr<_21ec0b58b_Prim> _151913_prim = _21ec087b9_prim(_151537_t.ptr());
	_21ec02b26_cast_const_by_type(_151913_prim.get()._field_kind,_151556_d);
	_151556_d.get()._field_model=jule::Any(_151556_d.get()._field_constant);
}



inline jule::Ptr<_21ebbd053_Data> _21ebd3277_eval_cast_by_type_n_data(_21ebc00aa_Eval* _self_,jule::Ptr<_21ec06223_TypeKind> _152447_t,jule::Ptr<_21ebbd053_Data> _152465_d,_21c627dde_Token _152479_error_token) {
	if ((_152465_d != nullptr) && _152465_d.get()._field_decl) {
		_21ebc0693_push_err(&(*_self_), _152479_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	{
		
		if ((_21ec087b9_prim(_152465_d.get()._field_kind.ptr()) != nullptr) && _21ec10095_is_any(_21ec087b9_prim(_152465_d.get()._field_kind.ptr()).ptr())) {
			_case_begin_222da3312:;
			{
				if ((_21ec09149_enm(_152447_t.ptr()) != nullptr)) {
					_21ebc0693_push_err(&(*_self_), _152479_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if ((_21ec08d6e_ptr(_152447_t.ptr()) != nullptr)) {
			_case_begin_222da3378:;
			{
				_21ebd04c7_cast_ptr(&(*_self_), _152447_t,_152465_d,_152479_error_token);
			}
		}
		else if ((_21ec08a94_sptr(_152447_t.ptr()) != nullptr)) {
			_case_begin_222da33de:;
			{
				_21ebd0e78_cast_ref(&(*_self_), _152447_t,_152465_d,_152479_error_token);
			}
		}
		else if ((_21ec096ee_slc(_152447_t.ptr()) != nullptr)) {
			_case_begin_222da3455:;
			{
				_21ebd1451_cast_slc(&(*_self_), _152447_t,_152465_d,_152479_error_token);
			}
		}
		else if ((_21ec09ca4_strct(_152447_t.ptr()) != nullptr)) {
			_case_begin_222da4445:;
			{
				_21ebd09a0_cast_struct(&(*_self_), _152447_t,_152465_d,_152479_error_token);
			}
		}
		else if ((_21ec087b9_prim(_152447_t.ptr()) != nullptr)) {
			_case_begin_222da44ab:;
			{
				_21ebd27c6_cast_prim(&(*_self_), _152447_t,_152465_d,_152479_error_token);
				_21ebd2bc2_cast_constant(&(*_self_), _152447_t,_152465_d);
			}
		}
		else {
			_case_begin_222da329b:;
			{
				_21ebc0693_push_err(&(*_self_), _152479_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_152447_t.ptr()))}));
				_152465_d=nullptr;
			}
		}
		_match_end_222da3246:;
	}
	if ((_152465_d == nullptr)) {
		return nullptr;
	}
	_152465_d.get()._field_mutable=_152465_d.get()._field_mutable || ((!(_21ec07884_mutable(_152465_d.get()._field_kind.ptr()))) && _21ec07884_mutable(_152447_t.ptr()));
	_152465_d.get()._field_lvalue=false;
	_152465_d.get()._field_decl=false;
	if ((_21ec09149_enm(_152465_d.get()._field_kind.ptr()) == nullptr) || (!(_21ec069e8_equals(_21ec09149_enm(_152465_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _152447_t)))) {
		_152465_d.get()._field_cast_kind=_152447_t;
		_21ec01dbc_apply_cast_kind(_152465_d);
		_152465_d.get()._field_model.operator jule::Ptr<_21dd0a757_CastingExprModel>().get()._field_token=_152479_error_token;
	} else {
		_152465_d.get()._field_kind=_152447_t;
	}
	return _152465_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebd361d_eval_cast(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63d410_CastExpr> _157433_c) {
	jule::Ptr<_21ec0aa85_TypeSymbol> _157517_t = _21dd27ec2_build_type(_157433_c.get()._field_kind);
	jule::Bool _157613_ok = _21eb5b9d6_check_type(_self_.get()._field_s, _157517_t,_self_.get()._field_lookup);
	if ((!(_157613_ok))) {
		return nullptr;
	}
	jule::Ptr<_21ec06223_TypeKind> _158117_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_158117_prefix;
	});
	jule::Ptr<_21ebbd053_Data> _158517_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_157433_c.get()._field_expr));
	if ((_158517_d == nullptr)) {
		return nullptr;
	}
	return _21ebd3277_eval_cast_by_type_n_data(_self_.ptr(), _157517_t.get()._field_kind,_158517_d,_157433_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_21ebbd053_Data> _21ebd39c5_eval_ns_selection(_21ebc00aa_Eval* _self_,jule::Ptr<_21c63d630_NsSelectionExpr> _159336_s) {
	jule::Str _159413_path = _21ec1608a_build_link_path_by_tokens(_159336_s.get()._field_ns);
	jule::Ptr<_21eb49c8d_ImportInfo> _159517_imp = _21ec23a48_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._21ec21d32_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>([=](jule::Ptr<_21eb49c8d_ImportInfo> _159553_imp) mutable -> jule::Bool {
		if ((_159336_s.get()._field_ns.len() == 1LL) && (_159553_imp.get()._field_alias == _159413_path)) {
			return true;
		}
		return (_159553_imp.get()._field_link_path == _159413_path) && _21eb4ce28_is_accessible_via_selection(_159553_imp.ptr());
	}));
	if ((_159517_imp == nullptr)) {
		_21ebc0693_push_err(&(*_self_), _159336_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_159413_path)}));
		return nullptr;
	}
	jule::Trait<_21ec23a48_Lookup> _160717_lookup = (*_self_)._field_lookup;
	(*_self_)._field_lookup=jule::Trait<_21ec23a48_Lookup>(_159517_imp, 1);
	
	_21ebc1023_disallow_builtin(&(*_self_));
	jule::Any _161217_def = _21ebc417a_get_def(&(*_self_), _159336_s.get()._field_ident._field_kind,false);
	_21ebc0cd1_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_160717_lookup;
	jule::Ptr<_21ebbd053_Data> _161617_d = _21ebc8ab9_eval_def(&(*_self_), _161217_def,_159336_s.get()._field_ident);
	return _161617_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebd407a_eval_struct_lit_explicit(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21dd06742_StructIns> _162148_s,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>> _162213_exprs,_21c627dde_Token _162233_error_token) {
	jule::Bool _162313_ok = _21eb59000_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_162148_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_162148_s.get()._field_generics.len()),_162233_error_token);
	if ((!(_162313_ok))) {
		return nullptr;
	}
	if ((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _162148_s.get()._field_decl)) {
		_21ebc0693_push_err(_self_.ptr(), _162233_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any(_162148_s.get()._field_decl.get()._field_ident)}));
	}
	_21ebc4e4a_push_reference_to_struct(_self_.ptr(), _162148_s);
	_21ebc6864_check_deprecated(_self_.ptr(), _162148_s.get()._field_decl.get()._field_directives,_162233_error_token);
	_21ebaee24_StructLitChecker _163617_slc = _21ebaee24_StructLitChecker(_self_,_162233_error_token,_162148_s,jule::Slice<jule::Ptr<_21dd097de_StructArgExprModel>>());
	_21ebb19d6_check(&_163617_slc, _162213_exprs);
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_162148_s, 0))),jule::Ptr<_21ec06223_TypeKind>(),(!(_self_.get()._field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd09c40_StructLitExprModel>(_21dd09c40_StructLitExprModel(_162148_s,_163617_slc._field_args)))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ebd4421_eval_struct_lit(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63e1d0_StructLit> _165539_lit) {
	jule::Ptr<_21ec0aa85_TypeSymbol> _165617_t = _21dd27ec2_build_type(_165539_lit.get()._field_kind);
	jule::Bool _165713_ok = _21eb5b9d6_check_type(_self_.get()._field_s, _165617_t,_self_.get()._field_lookup);
	if ((!(_165713_ok))) {
		return nullptr;
	}
	jule::Ptr<_21dd06742_StructIns> _166217_s = _21ec09ca4_strct(_165617_t.get()._field_kind.ptr());
	if ((_166217_s == nullptr)) {
		if ((_21ec08a94_sptr(_165617_t.get()._field_kind.ptr()) != nullptr)) {
			_166217_s=_21ec09ca4_strct(_21ec08a94_sptr(_165617_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_166217_s != nullptr)) {
				goto _julec_label_eval;
			}
		}
		_21ebc0693_push_err(_self_.ptr(), _165539_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_21ebbd053_Data> _167517_d = _21ebd407a_eval_struct_lit_explicit(_self_, _166217_s,_165539_lit.get()._field_exprs,_165539_lit.get()._field_kind.get()._field_token);
	if ((_21ec08a94_sptr(_165617_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_21dd09c40_StructLitExprModel> _167721_model = _167517_d.get()._field_model.operator jule::Ptr<_21dd09c40_StructLitExprModel>();
		_21ec00607_make_struct_lit_alloc(_167517_d,_167721_model);
	}
	return _167517_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebd47c8_eval_type(_21ebc00aa_Eval* _self_,jule::Ptr<_21c5d253b_TypeDecl> _168332_t) {
	jule::Ptr<_21ec0aa85_TypeSymbol> _168417_tk = _21dd27ec2_build_type(_168332_t);
	jule::Bool _168513_ok = _21eb5b9d6_check_type((*_self_)._field_s, _168417_tk,(*_self_)._field_lookup);
	if ((!(_168513_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(_168417_tk.get()._field_kind,jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_168417_tk.get()._field_kind)),true,jule::Ptr<_21ea9d450_Const>()));
}



inline void _21ebd4bc4_call_type_fn(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63dc90_FnCallExpr>& _169637_fc,jule::Ptr<_21ebbd053_Data>& _169659_d) {
	if ((_169637_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_self_.ptr(), _169637_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_169659_d.get()._field_kind.ptr()))}));
	} else if ((_169637_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_self_.ptr(), _169637_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((_169637_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_self_.ptr(), _169637_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	if ((_169637_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_21ec06223_TypeKind> _170621_prefix = _self_.get()._field_prefix;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_21ebbd053_Data> _170821_arg = _21ebdeea9_eval_expr_kind(_self_, _169637_fc.get()._field_args[0LL].get()._field_kind);
		_self_.get()._field_prefix=_170621_prefix;
		if ((_170821_arg != nullptr)) {
			_169659_d=_21ebd3277_eval_cast_by_type_n_data(_self_.ptr(), _169659_d.get()._field_kind,_170821_arg,_169637_fc.get()._field_args[0LL].get()._field_token);
		}
	}
	if ((_169659_d != nullptr)) {
		_169659_d.get()._field_decl=false;
	}
}



inline std::tuple<jule::Bool,jule::Bool> _21ebd5158_check_fn_call_generics(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd1cc42_FnIns> _172045_f,jule::Ptr<_21c63dc90_FnCallExpr> _172113_fc) {
	jule::Bool _172132_ok = jule::Bool();
	jule::Bool _172142_dynamic_annotation = jule::Bool();
	{
		
		if (((_172045_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_172113_fc.get()._field_generics.len() == 0LL)) && (_172045_f.get()._field_params.len() > 0LL)) {
			_case_begin_222ddc604:;
			{
				_172142_dynamic_annotation=true;
				_172045_f.get()._field_generics=jule::Slice<jule::Ptr<_21ec06223_TypeKind>>::alloc(static_cast<jule::I64>(_172045_f.get()._field_decl.get()._field_generics.len()));
				_172132_ok = true;
				_172142_dynamic_annotation = true;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		else if ((!(_21eb59000_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_172045_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_172113_fc.get()._field_generics.len()),_172113_fc.get()._field_token)))) {
			_case_begin_222ddc66a:;
			{
				_172132_ok = false;
				_172142_dynamic_annotation = false;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		else {
			_case_begin_222dd40bd:;
			{
				_172045_f.get()._field_generics=jule::Slice<jule::Ptr<_21ec06223_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_172045_f.get()._field_decl.get()._field_generics.len()));
				{
					auto &expr = _172113_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_222dd45da:;
					if (it != expr.end()) {
						jule::Ptr<_21c5d253b_TypeDecl> _222dd5245_g = *it;
						{
							jule::Ptr<_21ec0aa85_TypeSymbol> _173425_k = _21dd27ec2_build_type(_222dd5245_g);
							_172132_ok=_21eb5b9d6_check_type((*_self_)._field_s, _173425_k,(*_self_)._field_lookup);
							if ((!(_172132_ok))) {
								_172132_ok = false;
								_172142_dynamic_annotation = false;
								return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
							}
							_172045_f.get()._field_generics = jule::alloc_for_append(_172045_f.get()._field_generics,1);_172045_f.get()._field_generics.__push(_173425_k.get()._field_kind);
						}
						_iter_next_222dd45da:;
						++it;
						goto _iter_begin_222dd45da;
					}
					_iter_end_222dd45da:;
				}
				_172132_ok = true;
				_172142_dynamic_annotation = false;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		_match_end_222dd4002:;
	}
}



inline void _21ebd5554_call_builtin_fn(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63dc90_FnCallExpr>& _174640_fc,jule::Ptr<_21ebbd053_Data>& _174662_d) {
	_174662_d=_21ec099c9_fnc(_174662_d.get()._field_kind.ptr()).get()._field_caller(_self_,_174640_fc,_174662_d);
	if ((_174662_d == nullptr)) {
		return;
	}
	_174662_d.get()._field_mutable=true;
}



inline void _21ebd5994_check_fn_of_concurrent_call(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd1cc42_FnIns>& _175447_f,_21c627dde_Token _175458_error_token) {
	if (_21ebc12ed_is_unsafe(&(*_self_))) {
		return;
	}
	{
		auto &expr = _175447_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_222de373c:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1badc_ParamIns> &_222de3819_p = *it;
			{
				if (_222de3819_p.get()._field_decl.get()._field_reference) {
					_21ebc0693_push_err(&(*_self_), _175458_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_222de373c:;
			++it;
			goto _iter_begin_222de373c;
		}
		_iter_end_222de373c:;
	}
}



inline void _21ebd5ea0_process_exceptional_handler(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd1cc42_FnIns>& _176751_f,jule::Ptr<_21c63dc90_FnCallExpr>& _176767_fc,jule::Ptr<_21ebbd053_Data>& _176789_d) {
	jule::Bool _176813_result_needed = (!(_21dd19711_is_void(_176751_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored)));
	jule::Ptr<_21eb2ed2d_ScopeChecker> _176917_csc = nullptr;
	jule::Ptr<_21eb1472a_Scope> _177017_ch = nullptr;
	jule::Ptr<_21dd0b23b_FnCallExprModel> _177217_model = _176789_d.get()._field_model.operator jule::Ptr<_21dd0b23b_FnCallExprModel>();
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_21eb5443a_Sema>>()) {
			_case_begin_222de74dd:;
			{
				jule::Ptr<_21eb5443a_Sema> _177621_s = (*_self_)._field_lookup.operator jule::Ptr<_21eb5443a_Sema>();
				_176917_csc=_21ead1c69_new_scope_checker(_177621_s,nullptr);
				if (_176813_result_needed) {
					_176917_csc.get()._field_result=_176751_f.get()._field_result;
				}
				_177017_ch=jule::new_ptr<_21eb1472a_Scope>();
				_176917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_176917_csc.get()._field_table.get()._field_vars,1);_176917_csc.get()._field_table.get()._field_vars.__push(_21ec009e2_build_error_var(_177017_ch,_176767_fc));
				_21eb41d2e_check(_176917_csc, _176767_fc.get()._field_exception,_177017_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
			_case_begin_222de7554:;
			{
				jule::Ptr<_21eb2ed2d_ScopeChecker> _178521_sc = (*_self_)._field_lookup.operator jule::Ptr<_21eb2ed2d_ScopeChecker>();
				_176917_csc=_21eb42109_new_child_checker(_178521_sc);
				if (_176813_result_needed) {
					_176917_csc.get()._field_result=_176751_f.get()._field_result;
				}
				_177017_ch=_21eb33eec_get_child(_178521_sc.ptr());
				_176917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_176917_csc.get()._field_table.get()._field_vars,1);_176917_csc.get()._field_table.get()._field_vars.__push(_21ec009e2_build_error_var(_177017_ch,_176767_fc));
				_21eb344c5_check_child_ssc(_178521_sc, _176767_fc.get()._field_exception,_177017_ch,_176917_csc);
			}
		}
		_match_end_222de7488:;
	}
	_177217_model.get()._field_assigned=_176813_result_needed;
	_177217_model.get()._field_except=_177017_ch;
	if (_176813_result_needed && (_176917_csc.get()._field_result != nullptr)) {
		_21ebc0693_push_err(&(*_self_), _176767_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _21ebd638a_call_fn(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63dc90_FnCallExpr>& _180332_fc,jule::Ptr<_21ebbd053_Data>& _180354_d) {
	jule::Ptr<_21dd1cc42_FnIns> _180417_f = _21ec099c9_fnc(_180354_d.get()._field_kind.ptr());
	if (_21dd1d8be_is_builtin(_180417_f.ptr())) {
		_21ebd5554_call_builtin_fn(_self_, _180332_fc,_180354_d);
		return;
	}
	if ((!(_21dd199db_is_method(_180417_f.get()._field_decl.ptr()))) && _21ec045a6_has_directive(_180417_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		_21ebc0693_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_180354_d=nullptr;
		return;
	}
	if ((((!(_180354_d.get()._field_mutable)) && _21dd199db_is_method(_180417_f.get()._field_decl.ptr())) && (!(_180417_f.get()._field_decl.get()._field_statically))) && _180417_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable) {
		_21ebc0693_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if ((!(_21ebc12ed_is_unsafe(_self_.ptr()))) && _180417_f.get()._field_decl.get()._field_unsafety) {
		_21ebc0693_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _182218_ok;
	jule::Bool _182222_dynamic_annotation;
	std::tie(_182218_ok,_182222_dynamic_annotation) = _21ebd5158_check_fn_call_generics(_self_.ptr(), _180417_f,_180332_fc);
	if ((!(_182218_ok))) {
		_180354_d=nullptr;
		return;
	}
	jule::Ptr<_21eb5443a_Sema> _182817_old = _self_.get()._field_s;
	if ((_180417_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_180417_f.get()._field_decl.get()._field_owner.get()._field_sema;
	}
	__JULE_DEFER({
		if (_182817_old != _self_.get()._field_s) {
			_182817_old.get()._field_errors=jule::append(_182817_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		}
		_self_.get()._field_s=_182817_old;
	});
	if ((!(_182222_dynamic_annotation))) {
		if ((!(_180417_f.get()._field_reloaded))) {
			_182218_ok=_21eb60347_reload_fn_ins_types(_self_.get()._field_s, _180417_f);
			if ((!(_182218_ok))) {
				_180354_d=nullptr;
				return;
			}
			_180417_f.get()._field_reloaded=true;
		}
	} else {
		_21eb5eab6_build_fn_non_generic_type_kinds(_self_.get()._field_s, _180417_f);
	}
	_21ebabbbd_FnCallArgChecker _185417_fcac = _21ebabbbd_FnCallArgChecker(_self_,_180332_fc.get()._field_args,_180332_fc.get()._field_token,_180417_f,_182222_dynamic_annotation,jule::Slice<jule::Any>());
	if ((_180417_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_182817_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_182817_old);
		_182218_ok=_21ebae7c5_check(&_185417_fcac);
		std::tie(_182817_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_182817_old);
	} else {
		_182218_ok=_21ebae7c5_check(&_185417_fcac);
	}
	if ((!(_182218_ok)) && _182222_dynamic_annotation) {
		_180354_d=nullptr;
		return;
	}
	jule::Bool _187414_is_unique_ins;
	jule::I64 _187429_pos;
	std::tie(_187414_is_unique_ins,_187429_pos) = _21dd1b68b_append_instance(_180417_f.get()._field_decl.ptr(), _180417_f);
	if ((!(_187414_is_unique_ins))) {
		_180417_f=_180417_f.get()._field_decl.get()._field_instances[_187429_pos];
	}
	jule::Any _187917_call_model = _180354_d.get()._field_model;
	if (_21dd19711_is_void(_180417_f.get()._field_decl.ptr())) {
		_180354_d=_21ec020ed_build_void_data();
	} else {
		if (_182222_dynamic_annotation) {
			_182218_ok=_21eb60347_reload_fn_ins_types(_self_.get()._field_s, _180417_f);
			if ((!(_182218_ok))) {
				_180354_d=nullptr;
				return;
			}
			_180417_f.get()._field_reloaded=true;
		}
		_180354_d.get()._field_kind=_180417_f.get()._field_result;
		_180354_d.get()._field_lvalue=false;
	}
	_180354_d.get()._field_mutable=true;
	_180354_d.get()._field_model=jule::Any(jule::new_ptr<_21dd0b23b_FnCallExprModel>(_21dd0b23b_FnCallExprModel(_180332_fc.get()._field_token,_180417_f,jule::Bool(),_187917_call_model,_185417_fcac._field_arg_models,jule::Ptr<_21eb1472a_Scope>(),jule::Bool())));
	if (_180417_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_21c52a880_unhandled(_180332_fc.ptr())) {
				_case_begin_222e12816:;
				{
					_21ebc0693_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_21ebc0a8e_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_21c4d92ab_ignored(_180332_fc.ptr())) {
				_case_begin_222e126d4:;
				{
					goto _match_end_222e11b45;
				}
			}
			else {
				_case_begin_222e11c11:;
				{
					_21ebd5ea0_process_exceptional_handler(_self_.ptr(), _180417_f,_180332_fc,_180354_d);
				}
			}
			_match_end_222e11b45:;
		}
	} else if ((!(_21c52a880_unhandled(_180332_fc.ptr())))) {
		_21ebc0693_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_180417_f.get()._field_generics.len() > 0LL) && _187414_is_unique_ins) {
		_21eb6ee5b_check_fn_ins_caller(_self_.get()._field_s, _180417_f,((jule::Ptr<_21c627dde_Token>)((&(_180332_fc.get()._field_token)))));
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebd6742_eval_fn_call(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63dc90_FnCallExpr> _192636_fc) {
	jule::Ptr<_21ec06223_TypeKind> _192717_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_192717_prefix;
	});
	{
		auto &_match_expr{ _192636_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21c4d8b4b_IdentExpr>>()) {
			_case_begin_222e170ce:;
			{
				if ((_192636_fc.get()._field_expr.get()._field_token._field_kind == jule::Str("error", 5))) {
					return _21ec26c05_builtin_caller_error(_self_,_192636_fc);
				}
			}
		}
		_match_end_222e17079:;
	}
	jule::Ptr<_21ebbd053_Data> _194017_d = _21ebdeea9_eval_expr_kind(_self_, _192636_fc.get()._field_expr.get()._field_kind);
	if ((_194017_d == nullptr)) {
		return nullptr;
	}
	if (_194017_d.get()._field_decl) {
		_21ebd4bc4_call_type_fn(_self_, _192636_fc,_194017_d);
		return _194017_d;
	}
	if ((_21ec099c9_fnc(_194017_d.get()._field_kind.ptr()) == nullptr)) {
		_21ebc0693_push_err(_self_.ptr(), _192636_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	}
	_21ebd638a_call_fn(_self_, _192636_fc,_194017_d);
	return _194017_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebd6bc6_eval_enum_static(_21ebc00aa_Eval* _self_,jule::Ptr<_21ddb6aee_Enum> _195939_enm,_21c627dde_Token _195951_ident) {
	jule::Ptr<_21ebbd053_Data> _196017_d = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_195939_enm, 3))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_21ea9d450_Const>()));
	jule::Ptr<_21dd39e29_EnumItem> _196917_item = _21e0e5ca6_find_item(_195939_enm.ptr(), _195951_ident._field_kind);
	if ((_196917_item == nullptr)) {
		_21ebc0693_push_err(&(*_self_), _195951_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_195939_enm.get()._field_ident),jule::Any(_195951_ident._field_kind)}));
	} else {
		_196017_d.get()._field_constant=jule::new_ptr<_21ea9d450_Const>((*(_196917_item.get()._field_value.get()._field_data.get()._field_constant)));
		_196017_d.get()._field_model=jule::Any(_196017_d.get()._field_constant);
		_21ec027d5_apply_cast_model_by_enum(_196017_d,_195939_enm);
	}
	return _196017_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebd715a_eval_struct_static(_21ebc00aa_Eval* _self_,jule::Ptr<_21dd06742_StructIns> _198141_s,_21c627dde_Token _198156_ident) {
	jule::Ptr<_21ebbd053_Data> _198217_d = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_21ea9d450_Const>()));
	
	jule::Ptr<_21dd19249_Fn> _199017_method = _21dd07963_find_method(_198141_s.ptr(), _198156_ident._field_kind,true);
	if ((_199017_method != nullptr)) {
		if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _199017_method.get()._field_public,_199017_method.get()._field_token)))) {
			_21ebc0693_push_err(&(*_self_), _198156_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_198156_ident._field_kind)}));
			_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_21dd1cc42_FnIns> _199721_ins = _21dd1b2d4_instance(_199017_method);
		_199721_ins.get()._field_owner=_198141_s;
		_21ebc47b8_push_reference_to_fn(&(*_self_), _199721_ins);
		_198217_d.get()._field_model=jule::Any(jule::new_ptr<_21dd0e85a_StructStaticIdentExprModel>(_21dd0e85a_StructStaticIdentExprModel(_198141_s,_198217_d.get()._field_model,_199721_ins)));
		_198217_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_199721_ins, 1)));
		return _198217_d;
	}
	jule::Ptr<_21eb75615_Var> _201117_sttc = _21dd043ee_find_static(_198141_s.get()._field_decl.ptr(), _198156_ident._field_kind);
	if ((_201117_sttc != nullptr)) {
		return _21ebc81a1_eval_var(&(*_self_), _201117_sttc,_198156_ident);
	}
	_21ebc0693_push_err(&(*_self_), _198156_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_198141_s.get()._field_decl.get()._field_ident),jule::Any(_198156_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_21ebbd053_Data> _21ebd76bb_eval_trait_sub_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _202043_d,jule::Ptr<_21deee929_Trait> _202057_trt,_21c627dde_Token _202074_ident) {
	jule::Ptr<_21dd19249_Fn> _202117_f = _21dd94deb_find_method(_202057_trt.ptr(), _202074_ident._field_kind);
	if ((_202117_f == nullptr)) {
		_21ebc0693_push_err(&(*_self_), _202074_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_202057_trt.get()._field_ident),jule::Any(_202074_ident._field_kind)}));
		return nullptr;
	}
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21dd1b2d4_instance(_202117_f), 1))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd0d88c_TraitSubIdentExprModel>(_21dd0d88c_TraitSubIdentExprModel(_202074_ident,_202043_d.get()._field_model,_202117_f,_202057_trt)))),false,jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ebd7d09_eval_struct_sub_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _204344_d,jule::Ptr<_21dd06742_StructIns> _204358_s,jule::Ptr<_21c63d850_SubIdentExpr> _204377_si,jule::Bool _204396_ref) {
	jule::Ptr<_21dd05be7_FieldIns> _204417_f = _21dd07d1a_find_field(_204358_s.ptr(), _204377_si.get()._field_ident._field_kind);
	if ((_204417_f != nullptr)) {
		if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _204417_f.get()._field_decl.get()._field_public,_204417_f.get()._field_decl.get()._field_token)))) {
			_21ebc0693_push_err(&(*_self_), _204377_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_204417_f.get()._field_decl.get()._field_ident)}));
			_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_21dd0e294_StructSubIdentExprModel> _205121_model = jule::new_ptr<_21dd0e294_StructSubIdentExprModel>(_21dd0e294_StructSubIdentExprModel(_204377_si.get()._field_ident,jule::new_ptr<_21ebbd053_Data>((*(_204344_d))),_204344_d.get()._field_kind,jule::Ptr<_21dd1cc42_FnIns>(),_204417_f));
		_204344_d.get()._field_model=jule::Any(_205121_model);
		_204344_d.get()._field_kind=_204417_f.get()._field_kind;
		_204344_d.get()._field_lvalue=true;
		if (_204417_f.get()._field_decl.get()._field_mutable && (!(_204344_d.get()._field_mutable))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
					_case_begin_222e31c64:;
					{
						jule::Ptr<_21eb2ed2d_ScopeChecker> _206525_scope = _21eb3225e_get_root((*_self_)._field_lookup.operator jule::Ptr<_21eb2ed2d_ScopeChecker>());
						_204344_d.get()._field_mutable=(_206525_scope.get()._field_owner != nullptr) && (_206525_scope.get()._field_owner.get()._field_owner == _204358_s);
					}
				}
				_match_end_222e31c0e:;
			}
		}
		return _204344_d;
	}
	
	jule::Ptr<_21dd19249_Fn> _207417_m = _21dd07963_find_method(_204358_s.ptr(), _204377_si.get()._field_ident._field_kind,false);
	if ((_207417_m == nullptr)) {
		_21ebc0693_push_err(&(*_self_), _204377_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_204358_s.get()._field_decl.get()._field_ident),jule::Any(_204377_si.get()._field_ident._field_kind)}));
		return nullptr;
	}
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _207417_m.get()._field_public,_207417_m.get()._field_token)))) {
		_21ebc0693_push_err(&(*_self_), _204377_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_207417_m.get()._field_ident)}));
		_21ebc0a8e_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	if (_21dd17e07_is_ref(_207417_m.get()._field_params[0LL].ptr()) && (!(_204396_ref))) {
		_21ebc0693_push_err(&(*_self_), _204377_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	_21ebc6864_check_deprecated(&(*_self_), _207417_m.get()._field_directives,_204377_si.get()._field_ident);
	jule::Ptr<_21dd1cc42_FnIns> _209017_ins = _21dd1b2d4_instance(_207417_m);
	_209017_ins.get()._field_owner=_204358_s;
	_21ebc47b8_push_reference_to_fn(&(*_self_), _209017_ins);
	jule::Ptr<_21ebbd053_Data> _209317_model = jule::new_ptr<_21ebbd053_Data>((*(_204344_d)));
	_204344_d.get()._field_model=jule::Any(jule::new_ptr<_21dd0e294_StructSubIdentExprModel>(_21dd0e294_StructSubIdentExprModel(_204377_si.get()._field_ident,_209317_model,_204344_d.get()._field_kind,_209017_ins,jule::Ptr<_21dd05be7_FieldIns>())));
	_204344_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_209017_ins, 1)));
	return _204344_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebd828d_eval_slice_sub_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _210443_d,_21c627dde_Token _210457_ident) {
	{
		auto &_match_expr{ _210457_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_222e3d1e3:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_210443_d.get()._field_kind,_210443_d.get()._field_model,_210457_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_222e3d259:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_210443_d.get()._field_kind,_210443_d.get()._field_model,_210457_ident,jule::Str("cap()", 5))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_222e3bd18:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>({jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec26a90_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_21ec06223_TypeKind>(),_210443_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_210443_d.get()._field_kind,_210443_d.get()._field_model,_210457_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_222e3ba2c:;
			{
				_21ebc0693_push_err(&(*_self_), _210457_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_210443_d.get()._field_kind.ptr())),jule::Any(_210457_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e3bc4c:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebd8722_eval_array_sub_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _216443_d,_21c627dde_Token _216457_ident) {
	{
		auto &_match_expr{ _216457_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_222e434a1:;
			{
				jule::Ptr<_21ea9d450_Const> _216721_c = static__21ea9d670_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_21ec09424_arr(_216443_d.get()._field_kind.ptr()).get()._field_n)));
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_216721_c)),jule::Bool(),_216721_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_222e43517:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>({jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec26a90_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_21ec06223_TypeKind>(),_216443_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_216443_d.get()._field_kind,_216443_d.get()._field_model,_216457_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_222e431b5:;
			{
				_21ebc0693_push_err(&(*_self_), _216457_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_216443_d.get()._field_kind.ptr())),jule::Any(_216457_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e433d5:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebd8ba6_eval_map_sub_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _221041_d,_21c627dde_Token _221055_ident) {
	jule::Ptr<_21ec128b1_Map> _221117_map_kind = _21ec0a359_map(_221041_d.get()._field_kind.ptr());
	{
		auto &_match_expr{ _221055_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_222e4b07a:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_221041_d.get()._field_kind,_221041_d.get()._field_model,_221055_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_222e4984d:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec26a90_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_21ec06223_TypeKind>(),_221041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_221041_d.get()._field_kind,_221041_d.get()._field_model,_221055_ident,jule::Str("clear", 5))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_222e498b4:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec10eca_Slc>(_21ec10eca_Slc(_221117_map_kind.get()._field_key)), 7))),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec26a90_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_21ec06223_TypeKind>(),_221041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_221041_d.get()._field_kind,_221041_d.get()._field_model,_221055_ident,jule::Str("keys", 4))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_222e4992a:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec10eca_Slc>(_21ec10eca_Slc(_221117_map_kind.get()._field_val)), 7))),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec26a90_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_21ec06223_TypeKind>(),_221041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_221041_d.get()._field_kind,_221041_d.get()._field_model,_221055_ident,jule::Str("values", 6))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_222e49991:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>({jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str("key", 3))),_221117_map_kind.get()._field_key))}),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec28b91_builtin_caller_common),jule::Bool())), 1))),jule::Ptr<_21ec06223_TypeKind>(),_221041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_221041_d.get()._field_kind,_221041_d.get()._field_model,_221055_ident,jule::Str("has", 3))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_222e4ace4:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>({jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str("key", 3))),_221117_map_kind.get()._field_key))}),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec26a90_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_21ec06223_TypeKind>(),_221041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_221041_d.get()._field_kind,_221041_d.get()._field_model,_221055_ident,jule::Str("del", 3))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_222e497d7:;
			{
				_21ebc0693_push_err(&(*_self_), _221055_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_21ec12c8a_to_str(_221117_map_kind.ptr())),jule::Any(_221055_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e49782:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebd913a_eval_str_sub_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _233341_d,_21c627dde_Token _233355_ident) {
	jule::Ptr<_21ec06223_TypeKind> _233417_str_kind = jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("str", 3)), 5)));
	{
		auto &_match_expr{ _233355_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_222e57493:;
			{
				jule::Ptr<_21ebbd053_Data> _233721_sd = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
				if (_21ebbda59_is_const(_233341_d.ptr())) {
					_233721_sd.get()._field_constant=static__21ea9d670_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_21eaa0155_read_str(_233341_d.get()._field_constant.ptr()).len())));
					_233721_sd.get()._field_model=jule::Any(_233721_sd.get()._field_constant);
				} else {
					_233721_sd.get()._field_model=jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_233341_d.get()._field_kind,_233341_d.get()._field_model,_233355_ident,jule::Str("len()", 5))));
				}
				return _233721_sd;
			}
		}
		else {
			_case_begin_222e56162:;
			{
				_21ebc0693_push_err(&(*_self_), _233355_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_233417_str_kind.ptr())),jule::Any(_233355_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e5610c:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebd94e2_eval_int_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _235839_ident) {
	
	{
		auto &_match_expr{ _235839_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e5bcd3:;
			{
				jule::Ptr<_21ea9d450_Const> _236321_c = static__21ea9d670_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_21eb24dab_max(jule::Str("int", 3)))));
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_236321_c)),jule::Bool(),_236321_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_222e5bd49:;
			{
				jule::Ptr<_21ea9d450_Const> _237021_c = static__21ea9d670_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_21eb24a59_min(jule::Str("int", 3)))));
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_237021_c)),jule::Bool(),_237021_c));
			}
		}
		else {
			_case_begin_222e5aba0:;
			{
				_21ebc0693_push_err(&(*_self_), _235839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_235839_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e5ab4a:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebd9899_eval_uint_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _238240_ident) {
	
	{
		auto &_match_expr{ _238240_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e61524:;
			{
				jule::Ptr<_21ea9d450_Const> _238721_c = static__21ea9d7d5_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_21eb24dab_max(jule::Str("uint", 4)))));
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_238721_c)),jule::Bool(),_238721_c));
			}
		}
		else {
			_case_begin_222e603e1:;
			{
				_21ebc0693_push_err(&(*_self_), _238240_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_238240_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e6038b:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebd9c51_eval_i8_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _239938_ident) {
	
	
	
	{
		auto &_match_expr{ _239938_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e64e73:;
			{
				jule::Ptr<_21ea9d450_Const> _240621_c = static__21ea9d670_new_i64(127LL);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_240621_c)),jule::Bool(),_240621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_222e64ed9:;
			{
				jule::Ptr<_21ea9d450_Const> _241321_c = static__21ea9d670_new_i64(-128LL);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_241321_c)),jule::Bool(),_241321_c));
			}
		}
		else {
			_case_begin_222e63d51:;
			{
				_21ebc0693_push_err(&(*_self_), _239938_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_239938_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e63ceb:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebda108_eval_i16_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _242539_ident) {
	
	
	
	{
		auto &_match_expr{ _242539_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e69609:;
			{
				jule::Ptr<_21ea9d450_Const> _243221_c = static__21ea9d670_new_i64(32767LL);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_243221_c)),jule::Bool(),_243221_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_222e69670:;
			{
				jule::Ptr<_21ea9d450_Const> _243921_c = static__21ea9d670_new_i64(-32768LL);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_243921_c)),jule::Bool(),_243921_c));
			}
		}
		else {
			_case_begin_222e684d7:;
			{
				_21ebc0693_push_err(&(*_self_), _242539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_242539_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e68482:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebda4b0_eval_i32_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _245139_ident) {
	
	
	
	{
		auto &_match_expr{ _245139_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e6dc90:;
			{
				jule::Ptr<_21ea9d450_Const> _245821_c = static__21ea9d670_new_i64(2147483647LL);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_245821_c)),jule::Bool(),_245821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_222e6dd06:;
			{
				jule::Ptr<_21ea9d450_Const> _246521_c = static__21ea9d670_new_i64(-2147483648LL);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246521_c)),jule::Bool(),_246521_c));
			}
		}
		else {
			_case_begin_222e6cb6d:;
			{
				_21ebc0693_push_err(&(*_self_), _245139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_245139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e6cb18:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebda867_eval_i64_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _247739_ident) {
	
	
	
	{
		auto &_match_expr{ _247739_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e7338d:;
			{
				jule::Ptr<_21ea9d450_Const> _248421_c = static__21ea9d670_new_i64(jule::MAX_I64);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_248421_c)),jule::Bool(),_248421_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_222e73404:;
			{
				jule::Ptr<_21ea9d450_Const> _249121_c = static__21ea9d670_new_i64(jule::MIN_I64);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_249121_c)),jule::Bool(),_249121_c));
			}
		}
		else {
			_case_begin_222e72018:;
			{
				_21ebc0693_push_err(&(*_self_), _247739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_247739_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e72238:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdac1e_eval_u8_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _250338_ident) {
	
	
	{
		auto &_match_expr{ _250338_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e778e2:;
			{
				jule::Ptr<_21ea9d450_Const> _250921_c = static__21ea9d7d5_new_u64(255LLU);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u8", 2)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_250921_c)),jule::Bool(),_250921_c));
			}
		}
		else {
			_case_begin_222e76748:;
			{
				_21ebc0693_push_err(&(*_self_), _250338_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_250338_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e766e3:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdb0c6_eval_u16_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _252139_ident) {
	
	
	{
		auto &_match_expr{ _252139_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e7ab26:;
			{
				jule::Ptr<_21ea9d450_Const> _252721_c = static__21ea9d7d5_new_u64(65535LLU);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u16", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_252721_c)),jule::Bool(),_252721_c));
			}
		}
		else {
			_case_begin_222e7997c:;
			{
				_21ebc0693_push_err(&(*_self_), _252139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_252139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e79927:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdb47d_eval_u32_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _253939_ident) {
	
	
	{
		auto &_match_expr{ _253939_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e7dd5a:;
			{
				jule::Ptr<_21ea9d450_Const> _254521_c = static__21ea9d7d5_new_u64(4294967295LLU);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u32", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_254521_c)),jule::Bool(),_254521_c));
			}
		}
		else {
			_case_begin_222e7cbb1:;
			{
				_21ebc0693_push_err(&(*_self_), _253939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_253939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e7cb5b:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdb835_eval_u64_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _255739_ident) {
	
	
	{
		auto &_match_expr{ _255739_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e8204a:;
			{
				jule::Ptr<_21ea9d450_Const> _256321_c = static__21ea9d7d5_new_u64(jule::MAX_U64);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u64", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_256321_c)),jule::Bool(),_256321_c));
			}
		}
		else {
			_case_begin_222e8080c:;
			{
				_21ebc0693_push_err(&(*_self_), _255739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_255739_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e80d4b:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdbbdc_eval_f32_type_tatic(_21ebc00aa_Eval* _self_,_21c627dde_Token _257538_ident) {
	
	
	
	
	{
		auto &_match_expr{ _257538_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e85900:;
			{
				jule::Ptr<_21ea9d450_Const> _258321_c = static__21ea9de34_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_258321_c)),jule::Bool(),_258321_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_222e85966:;
			{
				jule::Ptr<_21ea9d450_Const> _259021_c = static__21ea9de34_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_259021_c)),jule::Bool(),_259021_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_222e85735:;
			{
				jule::Ptr<_21ea9d450_Const> _259721_c = static__21ea9de34_new_f64(0.000000000000000000000000000000000000000000001401298464324817);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_259721_c)),jule::Bool(),_259721_c));
			}
		}
		else {
			_case_begin_222e847bc:;
			{
				_21ebc0693_push_err(&(*_self_), _257538_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_257538_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e84767:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdc094_eval_f64_type_static(_21ebc00aa_Eval* _self_,_21c627dde_Token _260939_ident) {
	
	
	
	
	{
		auto &_match_expr{ _260939_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_222e8b3a6:;
			{
				jule::Ptr<_21ea9d450_Const> _261721_c = static__21ea9de34_new_f64(jule::MAX_F64);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_261721_c)),jule::Bool(),_261721_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_222e8b41c:;
			{
				jule::Ptr<_21ea9d450_Const> _262421_c = static__21ea9de34_new_f64(jule::MIN_F64);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_262421_c)),jule::Bool(),_262421_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_222e8b1db:;
			{
				jule::Ptr<_21ea9d450_Const> _263121_c = static__21ea9de34_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_263121_c)),jule::Bool(),_263121_c));
			}
		}
		else {
			_case_begin_222e8a273:;
			{
				_21ebc0693_push_err(&(*_self_), _260939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_260939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e8a21d:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdc528_eval_prim_static(_21ebc00aa_Eval* _self_,jule::Str _264335_kind,_21c627dde_Token _264346_ident) {
	{
		auto &_match_expr{ _264335_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_222e9108c:;
			{
				return _21ebd94e2_eval_int_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_222e91103:;
			{
				return _21ebd9899_eval_uint_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_222e91169:;
			{
				return _21ebd9c51_eval_i8_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_222e911d0:;
			{
				return _21ebda108_eval_i16_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_222e902de:;
			{
				return _21ebda4b0_eval_i32_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_222e90355:;
			{
				return _21ebda867_eval_i64_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_222e903bb:;
			{
				return _21ebdac1e_eval_u8_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_222e90432:;
			{
				return _21ebdb0c6_eval_u16_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_222e904a9:;
			{
				return _21ebdb47d_eval_u32_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_222e9139a:;
			{
				return _21ebdb835_eval_u64_type_static(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_222e91422:;
			{
				return _21ebdbbdc_eval_f32_type_tatic(&(*_self_), _264346_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_222e91499:;
			{
				return _21ebdc094_eval_f64_type_static(&(*_self_), _264346_ident);
			}
		}
		else {
			_case_begin_222e90025:;
			{
				_21ebc0693_push_err(&(*_self_), _264346_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_264335_kind),jule::Any(_264346_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_222e900ad:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdc9ac_eval_type_static(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _267539_d,jule::Ptr<_21c63d850_SubIdentExpr> _267553_si) {
	{
		
		if ((_21ec087b9_prim(_267539_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222e985c2:;
			{
				return _21ebdc528_eval_prim_static(&(*_self_), _21ec0b965_to_str(_21ec087b9_prim(_267539_d.get()._field_kind.ptr()).ptr()),_267553_si.get()._field_ident);
			}
		}
		else if ((_21ec09149_enm(_267539_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222e98638:;
			{
				return _21ebd6bc6_eval_enum_static(&(*_self_), _21ec09149_enm(_267539_d.get()._field_kind.ptr()),_267553_si.get()._field_ident);
			}
		}
		else if ((_21ec09ca4_strct(_267539_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222e9725d:;
			{
				return _21ebd715a_eval_struct_static(&(*_self_), _21ec09ca4_strct(_267539_d.get()._field_kind.ptr()),_267553_si.get()._field_ident);
			}
		}
		else {
			_case_begin_222e971e7:;
			{
				_21ebc0693_push_err(&(*_self_), _267553_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_267539_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_222e9715e:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebdce41_eval_obj_sub_ident(_21ebc00aa_Eval* _self_,jule::Ptr<_21ebbd053_Data> _268941_d,jule::Ptr<_21c63d850_SubIdentExpr> _268955_si) {
	if (_21c62abc2_is_ignore_ident(_268955_si.get()._field_ident._field_kind)) {
		_21ebc0693_push_err(&(*_self_), _268955_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ec06223_TypeKind> _269517_kind = _268941_d.get()._field_kind;
	{
		
		if ((_21ec08d6e_ptr(_268941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222e9da06:;
			{
				jule::Ptr<_21ec14275_Ptr> _269817_ptr = _21ec08d6e_ptr(_268941_d.get()._field_kind.ptr());
				if (_21ec14dbe_is_unsafe(_269817_ptr.ptr())) {
					goto _match_end_222e9d8e6;
				}
				if ((!(_268955_si.get()._field_is_self)) && (!(_21ebc12ed_is_unsafe(&(*_self_))))) {
					_21ebc0693_push_err(&(*_self_), _268955_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				_269517_kind=_21ec08d6e_ptr(_268941_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_21ec08a94_sptr(_268941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222e9da7d:;
			{
				_269517_kind=_21ec08a94_sptr(_268941_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_222e9d8e6:;
	}
	{
		
		if ((_21ec0a07e_trt(_268941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222ea1c7e:;
			{
				return _21ebd76bb_eval_trait_sub_ident(&(*_self_), _268941_d,_21ec0a07e_trt(_268941_d.get()._field_kind.ptr()),_268955_si.get()._field_ident);
			}
		}
		else if ((_21ec09ca4_strct(_269517_kind.ptr()) != nullptr)) {
			_case_begin_222ea1ce5:;
			{
				jule::Ptr<_21dd06742_StructIns> _271417_s = _21ec09ca4_strct(_269517_kind.ptr());
				if (_21ec01581_is_instanced_struct(_271417_s)) {
					jule::Bool _271625_used_reference_elem = (_21ec08a94_sptr(_268941_d.get()._field_kind.ptr()) != nullptr);
					return _21ebd7d09_eval_struct_sub_ident(&(*_self_), _268941_d,_21ec09ca4_strct(_269517_kind.ptr()),_268955_si,_271625_used_reference_elem);
				}
			}
		}
		else if ((_21ec096ee_slc(_269517_kind.ptr()) != nullptr)) {
			_case_begin_222ea1d6c:;
			{
				return _21ebd828d_eval_slice_sub_ident(&(*_self_), _268941_d,_268955_si.get()._field_ident);
			}
		}
		else if ((_21ec09424_arr(_269517_kind.ptr()) != nullptr)) {
			_case_begin_222ea1de4:;
			{
				return _21ebd8722_eval_array_sub_ident(&(*_self_), _268941_d,_268955_si.get()._field_ident);
			}
		}
		else if ((_21ec0a359_map(_269517_kind.ptr()) != nullptr)) {
			_case_begin_222ea1e6b:;
			{
				return _21ebd8ba6_eval_map_sub_ident(&(*_self_), _268941_d,_268955_si.get()._field_ident);
			}
		}
		else if ((_21ec087b9_prim(_269517_kind.ptr()) != nullptr)) {
			_case_begin_222ea26a8:;
			{
				jule::Ptr<_21ec0b58b_Prim> _272617_p = _21ec087b9_prim(_269517_kind.ptr());
				{
					auto &_match_expr{ _272617_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_222ea8acc:;
						{
							return _21ebd913a_eval_str_sub_ident(&(*_self_), _268941_d,_268955_si.get()._field_ident);
						}
					}
					_match_end_222ea91d7:;
				}
			}
		}
		_match_end_222e9e62d:;
	}
	_21ebc0693_push_err(&(*_self_), _268955_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_268941_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_21ebbd053_Data> _21ebdd2e8_eval_sub_ident(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63d850_SubIdentExpr> _273638_si) {
	jule::Ptr<_21ec06223_TypeKind> _273717_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273717_prefix;
	});
	jule::Ptr<_21ebbd053_Data> _274117_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_273638_si.get()._field_expr));
	if ((_274117_d == nullptr)) {
		return nullptr;
	}
	if (_274117_d.get()._field_decl) {
		return _21ebdc9ac_eval_type_static(_self_.ptr(), _274117_d,_273638_si);
	}
	return _21ebdce41_eval_obj_sub_ident(_self_.ptr(), _274117_d,_273638_si);
}



inline jule::Ptr<_21ebbd053_Data> _21ebdd6a0_eval_tuple(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c4d808a_TupleExpr> _275334_tup) {
	jule::Ptr<_21ec11b46_Tuple> _275417_tup_t = jule::new_ptr<_21ec11b46_Tuple>(_21ec11b46_Tuple());
	_275417_tup_t.get()._field_types=jule::Slice<jule::Ptr<_21ec06223_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_275334_tup.get()._field_expr.len()));
	jule::Ptr<_21dd10b03_TupleExprModel> _275717_model = jule::new_ptr<_21dd10b03_TupleExprModel>(_21dd10b03_TupleExprModel(jule::Slice<jule::Ptr<_21ebbd053_Data>>::alloc(0LL,static_cast<jule::I64>(_275334_tup.get()._field_expr.len()))));
	jule::Bool _276117_ok = true;
	{
		auto &expr = _275334_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_222eb0c7c:;
		if (it != expr.end()) {
			jule::Ptr<_21c4d7b4a_Expr> _222eb0e7a_expr = *it;
			{
				jule::Ptr<_21ebbd053_Data> _276321_d = _21ebdeea9_eval_expr_kind(_self_, _222eb0e7a_expr.get()._field_kind);
				if ((_276321_d == nullptr)) {
					_276117_ok=false;
					goto _iter_next_222eb0c7c;
				}
				_275417_tup_t.get()._field_types = jule::alloc_for_append(_275417_tup_t.get()._field_types,1);_275417_tup_t.get()._field_types.__push(_276321_d.get()._field_kind);
				_275717_model.get()._field_datas = jule::alloc_for_append(_275717_model.get()._field_datas,1);_275717_model.get()._field_datas.__push(_276321_d);
			}
			_iter_next_222eb0c7c:;
			++it;
			goto _iter_begin_222eb0c7c;
		}
		_iter_end_222eb0c7c:;
	}
	if ((!(_276117_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_275417_tup_t, 8))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_275717_model)),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ebddb34_eval_map(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21ec128b1_Map> _278232_m,jule::Ptr<_21c63e400_BraceLit> _278245_lit) {
	jule::Ptr<_21dd0cade_MapExprModel> _278317_model = jule::new_ptr<_21dd0cade_MapExprModel>(_21dd0cade_MapExprModel(_278232_m.get()._field_key,_278232_m.get()._field_val,jule::Slice<jule::Ptr<_21dd0c58e_KeyValPairExprModel>>()));
	{
		auto &expr = _278245_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_222eb4c3c:;
		if (it != expr.end()) {
			jule::Ptr<_21c4d7b4a_Expr> _222eb4e4b_expr = *it;
			{
				{
					auto &_match_expr{ _222eb4e4b_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21c63e620_KeyValPair>>()) {
						_case_begin_222eb537a:;
						{
							goto _match_end_222eb5600;
						}
					}
					else {
						_case_begin_222eb5655:;
						{
							_21ebc0693_push_err(_self_.ptr(), _278245_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_222eb5600:;
				}
				jule::Ptr<_21c63e620_KeyValPair> _279821_pair = _222eb4e4b_expr.get()._field_kind.operator jule::Ptr<_21c63e620_KeyValPair>();
				jule::Ptr<_21ebbd053_Data> _280021_key = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_279821_pair.get()._field_key));
				if ((_280021_key == nullptr)) {
					return nullptr;
				}
				jule::Ptr<_21ebbd053_Data> _280521_val = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_279821_pair.get()._field_val));
				if ((_280521_val == nullptr)) {
					return nullptr;
				}
				_21eb5dbe7_check_assign_type(_self_.get()._field_s, false,_278232_m.get()._field_key,_280021_key,_279821_pair.get()._field_colon);
				_21eb5dbe7_check_assign_type(_self_.get()._field_s, false,_278232_m.get()._field_val,_280521_val,_279821_pair.get()._field_colon);
				_278317_model.get()._field_entries = jule::alloc_for_append(_278317_model.get()._field_entries,1);_278317_model.get()._field_entries.__push(jule::new_ptr<_21dd0c58e_KeyValPairExprModel>(_21dd0c58e_KeyValPairExprModel(_280021_key.get()._field_model,_280521_val.get()._field_model)));
			}
			_iter_next_222eb4c3c:;
			++it;
			goto _iter_begin_222eb4c3c;
		}
		_iter_end_222eb4c3c:;
	}
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_278232_m, 9))),jule::Ptr<_21ec06223_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_278317_model)),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ebddedb_eval_brace_lit(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63e400_BraceLit> _282638_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_222ebbc55:;
			{
				_21ebc0693_push_err(_self_.ptr(), _282638_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_21ec0a359_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_222ebbcbb:;
			{
				return _21ebddb34_eval_map(_self_, _21ec0a359_map(_self_.get()._field_prefix.ptr()),_282638_lit);
			}
		}
		else if ((_21ec09ca4_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_222ebad64:;
			{
				return _21ebd407a_eval_struct_lit_explicit(_self_, _21ec09ca4_strct(_self_.get()._field_prefix.ptr()),_282638_lit.get()._field_exprs,_282638_lit.get()._field_token);
			}
		}
		else {
			_case_begin_222ebaced:;
			{
				_21ebc0693_push_err(_self_.ptr(), _282638_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_222ebac54:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebde393_eval_anon_fn(_21ebc00aa_Eval* _self_,jule::Ptr<_21c641633_FnDecl> _284135_decl) {
	_21ec17e27_TypeChecker _284217_tc = _21ec17e27_TypeChecker((*_self_)._field_s,(*_self_)._field_lookup,jule::Ptr<_21ec16ed1_Referencer>(),_21c627dde_Token(),jule::Slice<jule::Ptr<_21c640423_GenericDecl>>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool());
	jule::Ptr<_21dd1cc42_FnIns> _284617_ins = _21ec2000b_build_fn(&_284217_tc, _284135_decl);
	_284617_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
			_case_begin_222ec2673:;
			{
				jule::Ptr<_21eb2ed2d_ScopeChecker> _285121_sc = (*_self_)._field_lookup.operator jule::Ptr<_21eb2ed2d_ScopeChecker>();
				jule::Ptr<_21eb2ed2d_ScopeChecker> _285221_scc = _21eb42109_new_child_checker(_285121_sc);
				_285221_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_21eb2e8dd_ScopeLabel>>>(nullptr);
				_285221_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_21eb2eb0d_ScopeGoto>>>(nullptr);
				_285221_scc.get()._field_owner=nullptr;
				_285221_scc.get()._field_child_index=0LL;
				_285221_scc.get()._field_it=0LLU;
				_285221_scc.get()._field_cse=0LLU;
				_285221_scc.get()._field_owner=_284617_ins;
				_21eb6ea60_check_fn_ins_sc((*_self_)._field_s.ptr(), _284617_ins,_285221_scc);
			}
		}
		else {
			_case_begin_222ec1d8c:;
			{
				_21eb7027a_check_fn_ins((*_self_)._field_s, _284617_ins);
			}
		}
		_match_end_222ec1d37:;
	}
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_284617_ins, 1))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd0c13d_AnonFnExprModel>(_21dd0c13d_AnonFnExprModel(_284617_ins,_21ebc15c8_is_global(&(*_self_)))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ebde74a_eval_binop(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c63da70_BinopExpr> _287534_op) {
	_21ebe7de6_BinaryEval _287617_bs = static__21ebe8512_new_plain(_self_);
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_21ec0b58b_Prim> _288017_prim = _21ec087b9_prim(_self_.get()._field_prefix.ptr());
		if ((_288017_prim == nullptr) || (!(_21eb2b896_is_num(_21ec0b965_to_str(_288017_prim.ptr()))))) {
			jule::Ptr<_21ec06223_TypeKind> _288225_prefix = _self_.get()._field_prefix;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288225_prefix;
			});
			return _21ebee617_eval(&_287617_bs, _287534_op);
		}
	}
	return _21ebee617_eval(&_287617_bs, _287534_op);
}



inline jule::Ptr<_21ebbd053_Data> _21ebdeb02_eval_ternary(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c640203_TernaryExpr> _289236_ter) {
	jule::Ptr<_21ebbd053_Data> _289317_d = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_289236_ter.get()._field_condition));
	if ((_289317_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21ec0b58b_Prim> _289813_prim = _21ec087b9_prim(_289317_d.get()._field_kind.ptr());
	if ((_289813_prim == nullptr) || (!(_21ec0e9e0_is_bool(_289813_prim.ptr())))) {
		_21ebc0693_push_err(_self_.ptr(), _289236_ter.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _290417_td = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_289236_ter.get()._field_true_expr));
	if ((_290417_td == nullptr)) {
		return nullptr;
	}
	_21ebc1980_apply_numeric_prefix(_self_.ptr(), _290417_td);
	if (_21ec075a9_void(_290417_td.get()._field_kind.ptr())) {
		_21ebc0693_push_err(_self_.ptr(), _289236_ter.get()._field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ec06223_TypeKind> _291517_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_290417_td.get()._field_kind;
	jule::Ptr<_21ebbd053_Data> _291817_fd = _21ebdeea9_eval_expr_kind(_self_, jule::Any(_289236_ter.get()._field_false_expr));
	_21ebc1980_apply_numeric_prefix(_self_.ptr(), _291817_fd);
	_self_.get()._field_prefix=_291517_prefix;
	if ((_291817_fd == nullptr)) {
		return nullptr;
	}
	_21eba6778_AssignTypeChecker _292617_ac = _21eba6778_AssignTypeChecker(_self_.get()._field_s,jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21ebbd053_Data>(),_289236_ter.get()._field_token);
	if (_21ebbda59_is_const(_290417_td.ptr()) && (!(_21ebbda59_is_const(_291817_fd.ptr())))) {
		_292617_ac._field_dest=_291817_fd.get()._field_kind;
		_292617_ac._field_d=_290417_td;
	} else {
		_292617_ac._field_dest=_290417_td.get()._field_kind;
		_292617_ac._field_d=_291817_fd;
	}
	if ((!(_21eba7bec_check(&_292617_ac)))) {
		_21ebc0a8e_push_suggestion(_self_.ptr(), jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>());
	}
	if (_21ebbda59_is_const(_289317_d.ptr())) {
		if (_21ea9ed7a_read_bool(_289317_d.get()._field_constant.ptr())) {
			return _290417_td;
		}
		return _291817_fd;
	}
	jule::Ptr<_21ebbd053_Data> _294817_r = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data());
	_294817_r.get()._field_kind=_292617_ac._field_dest;
	_294817_r.get()._field_lvalue=false;
	_294817_r.get()._field_mutable=_21ec07884_mutable(_294817_r.get()._field_kind.ptr());
	_294817_r.get()._field_model=jule::Any(jule::new_ptr<_21dd15146_TernaryExprModel>(_21dd15146_TernaryExprModel(_289317_d.get()._field_model,_290417_td.get()._field_model,_291817_fd.get()._field_model)));
	return _294817_r;
}



inline jule::Ptr<_21ebbd053_Data> _21ebdeea9_eval_expr_kind(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Any _296038_kind) {
	jule::Ptr<_21ebbd053_Data> _296117_d = nullptr;
	{
		auto &_match_expr{ _296038_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21c4d7b4a_Expr>>()) {
			_case_begin_222ed7aea:;
			{
				_296117_d=_21ebdeea9_eval_expr_kind(_self_, _296038_kind.operator jule::Ptr<_21c4d7b4a_Expr>().get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d84db_LitExpr>>()) {
			_case_begin_222ed7b61:;
			{
				_296117_d=_21ebc383e_eval_lit(_self_.ptr(), _296038_kind.operator jule::Ptr<_21c4d84db_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d8b4b_IdentExpr>>()) {
			_case_begin_222ed7bc7:;
			{
				_296117_d=_21ebc8e71_eval_ident(_self_.ptr(), _296038_kind.operator jule::Ptr<_21c4d8b4b_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d8d6b_UnaryExpr>>()) {
			_case_begin_222ed7dc5:;
			{
				_296117_d=_21ebc9328_eval_unary(_self_, _296038_kind.operator jule::Ptr<_21c4d8d6b_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d908b_VariadicExpr>>()) {
			_case_begin_222ed7e3b:;
			{
				_296117_d=_21ebc96d0_eval_variadic(_self_, _296038_kind.operator jule::Ptr<_21c4d908b_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d870b_UnsafeExpr>>()) {
			_case_begin_222ed7ea2:;
			{
				_296117_d=_21ebc9a87_eval_unsafe(_self_, _296038_kind.operator jule::Ptr<_21c4d870b_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63e840_SliceExpr>>()) {
			_case_begin_222ed8029:;
			{
				_296117_d=_21ebca77a_eval_slice_expr(_self_, _296038_kind.operator jule::Ptr<_21c63e840_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d82aa_IndexingExpr>>()) {
			_case_begin_222ed80a1:;
			{
				_296117_d=_21ebcd8e3_eval_indexing(_self_, _296038_kind.operator jule::Ptr<_21c4d82aa_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63eed3_SlicingExpr>>()) {
			_case_begin_222ed8128:;
			{
				_296117_d=_21ebceeee_eval_slicing(_self_, _296038_kind.operator jule::Ptr<_21c63eed3_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63d410_CastExpr>>()) {
			_case_begin_222ed81a0:;
			{
				_296117_d=_21ebd361d_eval_cast(_self_, _296038_kind.operator jule::Ptr<_21c63d410_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63d630_NsSelectionExpr>>()) {
			_case_begin_222ed8227:;
			{
				_296117_d=_21ebd39c5_eval_ns_selection(_self_.ptr(), _296038_kind.operator jule::Ptr<_21c63d630_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63e1d0_StructLit>>()) {
			_case_begin_222ed829e:;
			{
				_296117_d=_21ebd4421_eval_struct_lit(_self_, _296038_kind.operator jule::Ptr<_21c63e1d0_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c5d253b_TypeDecl>>()) {
			_case_begin_222ed8326:;
			{
				_296117_d=_21ebd47c8_eval_type(_self_.ptr(), _296038_kind.operator jule::Ptr<_21c5d253b_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63dc90_FnCallExpr>>()) {
			_case_begin_222ed839d:;
			{
				_296117_d=_21ebd6742_eval_fn_call(_self_, _296038_kind.operator jule::Ptr<_21c63dc90_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63d850_SubIdentExpr>>()) {
			_case_begin_222ed8425:;
			{
				_296117_d=_21ebdd2e8_eval_sub_ident(_self_, _296038_kind.operator jule::Ptr<_21c63d850_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d808a_TupleExpr>>()) {
			_case_begin_222ed849c:;
			{
				_296117_d=_21ebdd6a0_eval_tuple(_self_, _296038_kind.operator jule::Ptr<_21c4d808a_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63e400_BraceLit>>()) {
			_case_begin_222ed8524:;
			{
				_296117_d=_21ebddedb_eval_brace_lit(_self_, _296038_kind.operator jule::Ptr<_21c63e400_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c641633_FnDecl>>()) {
			_case_begin_222ed859b:;
			{
				_296117_d=_21ebde393_eval_anon_fn(_self_.ptr(), _296038_kind.operator jule::Ptr<_21c641633_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63da70_BinopExpr>>()) {
			_case_begin_222ed8623:;
			{
				_296117_d=_21ebde74a_eval_binop(_self_, _296038_kind.operator jule::Ptr<_21c63da70_BinopExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c640203_TernaryExpr>>()) {
			_case_begin_222ed869a:;
			{
				_296117_d=_21ebdeb02_eval_ternary(_self_, _296038_kind.operator jule::Ptr<_21c640203_TernaryExpr>());
			}
		}
		_match_end_222ed7a2e:;
	}
	if ((_296117_d == nullptr)) {
		return nullptr;
	}
	if ((_296117_d.get()._field_kind == nullptr)) {
		return _296117_d;
	}
	if ((!(_296117_d.get()._field_decl)) && (_self_.get()._field_prefix != nullptr)) {
		if (((((((!(_21ec07004_cpp_linked(_296117_d.get()._field_kind.ptr()))) && (_296117_d.get()._field_cast_kind == nullptr)) && (!(_296117_d.get()._field_kind.get()._field_variadic))) && (!(_296117_d.get()._field_lvalue))) && (!(_21ebbda59_is_const(_296117_d.ptr())))) && (_21ec087b9_prim(_296117_d.get()._field_kind.ptr()) != nullptr)) && _21eb2b896_is_num(_21ec087b9_prim(_296117_d.get()._field_kind.ptr()).get()._field_kind)) {
			_296117_d.get()._field_cast_kind=_296117_d.get()._field_kind;
		}
		_21ec01dbc_apply_cast_kind(_296117_d);
		if ((_21ec087b9_prim(_296117_d.get()._field_kind.ptr()) == nullptr) || (!(_21ec10095_is_any(_21ec087b9_prim(_296117_d.get()._field_kind.ptr()).ptr())))) {
			if ((_21ec087b9_prim(_self_.get()._field_prefix.ptr()) != nullptr) && _21ec10095_is_any(_21ec087b9_prim(_self_.get()._field_prefix.ptr()).ptr())) {
				_296117_d.get()._field_cast_kind=_self_.get()._field_prefix;
				_21ec01b47_apply_cast_kind_model(_296117_d);
				_296117_d.get()._field_cast_kind=nullptr;
			}
		}
	}
	return _296117_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebe0361_eval(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c4d7b4a_Expr> _303928_expr) {
	jule::Ptr<_21ebbd053_Data> _304017_d = _21ebdeea9_eval_expr_kind(_self_, _303928_expr.get()._field_kind);
	if ((_304017_d == nullptr) || (_304017_d.get()._field_kind == nullptr)) {
		return nullptr;
	}
	{
		
		if ((_21ec099c9_fnc(_304017_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222eed094:;
			{
				jule::Ptr<_21dd1cc42_FnIns> _304721_f = _21ec099c9_fnc(_304017_d.get()._field_kind.ptr());
				if (_21dd1d8be_is_builtin(_304721_f.ptr())) {
					goto _match_end_222eeceb7;
				}
				if (_304721_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_304721_f.get()._field_decl.get()._field_generics.len()))) {
					_21eb576a2_push_err(_self_.get()._field_s.ptr(), _303928_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if (_21dd199db_is_method(_304721_f.get()._field_decl.ptr())) {
					_21eb576a2_push_err(_self_.get()._field_s.ptr(), _303928_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_222eeceb7:;
	}
	return _304017_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebe0718_eval_expr(jule::Ptr<_21ebc00aa_Eval> _self_,jule::Ptr<_21c4d7b4a_Expr> _306533_expr) {
	jule::Ptr<_21ebbd053_Data> _306617_d = _21ebe0361_eval(_self_, _306533_expr);
	{
		
		if ((_306617_d == nullptr)) {
			_case_begin_22300297d:;
			{
				return nullptr;
			}
		}
		else if (_306617_d.get()._field_decl) {
			_case_begin_2230029e4:;
			{
				_21ebc0693_push_err(_self_.ptr(), _306533_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_223002373:;
			{
				return _306617_d;
			}
		}
		_match_end_22300231d:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21ebc00aa_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _21ebe0c68_UnaryEval static__21ebe1285_new(jule::Ptr<_21ebc00aa_Eval> _308623_e) {
	return _21ebe0c68_UnaryEval(_308623_e,jule::Ptr<_21ebbd053_Data>(),jule::Ptr<_21c4d8d6b_UnaryExpr>());
}



inline void _21ebe14c7_minus(_21ebe0c68_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_2230046a5:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_223004b8e:;
			{
				if ((!(_21eb2b896_is_num(_21ec06641_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_21ec09ca4_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_223004c05:;
			{
				if ((_21ec09ca4_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_223004331:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_223004265:;
	}
	if (_21ebbda59_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_21eaa2ed2_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_223008654:;
				{
					_21eaa1d5a_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_21eaa2377_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_2230086cb:;
				{
					_21eaa10ce_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_21eaa2652_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_223008753:;
				{
					_21eaa10ce_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_2230083bd:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_21dd09349_UnaryExprModel>(_21dd09349_UnaryExprModel(jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _21ebe1719_plus(_21ebe0c68_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_22300e44b:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22300e935:;
			{
				if ((!(_21eb2b896_is_num(_21ec06641_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_21ec09ca4_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22300e99b:;
			{
				if ((_21ec09ca4_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_22300e0c7:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_22300e00b:;
	}
	if (_21ebbda59_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_21eaa2ed2_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_2230133ea:;
				{
					_21eaa1d5a_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(static_cast<jule::F64>(static_cast<jule::F64>(_21eaa0430_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_21eaa2377_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_223013472:;
				{
					_21eaa10ce_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_21eaa2652_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_2230134e9:;
				{
					_21eaa10ce_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_223013164:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_21dd09349_UnaryExprModel>(_21dd09349_UnaryExprModel(jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _21ebe195b_caret(_21ebe0c68_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_2230192be:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230197a8:;
			{
				if ((!(_21eb2b236_is_int(_21ec06641_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_21ec09ca4_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22301981e:;
			{
				if ((_21ec09ca4_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_223018e4a:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_223018d7e:;
	}
	if (_21ebbda59_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_21eaa2377_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22301d26d:;
				{
					_21eaa10ce_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(static_cast<jule::I64>(static_cast<jule::I64>(_21ea9e7c5_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_21eaa2652_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22301d2d4:;
				{
					_21eaa13ed_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(static_cast<jule::U64>(static_cast<jule::U64>(_21ea9eaa0_read_u64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_22301ced7:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_21dd09349_UnaryExprModel>(_21dd09349_UnaryExprModel(jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _21ebe1b9d_excl(_21ebe0c68_UnaryEval* _self_) {
	jule::Ptr<_21ec0b58b_Prim> _320513_t = _21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr());
	if ((_320513_t == nullptr) || (!(_21ec0e9e0_is_bool(_320513_t.ptr())))) {
		(*_self_)._field_d=nullptr;
		return;
	}
	if (_21ebbda59_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_21eaa292c_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_223024252:;
				{
					_21eaa171c_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_21ea9ed7a_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_223024153:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_21dd09349_UnaryExprModel>(_21dd09349_UnaryExprModel(jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _21ebe1de0_star(_21ebe0c68_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_21dd09349_UnaryExprModel>(_21dd09349_UnaryExprModel(jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
	{
		
		if ((_21ec08d6e_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_223027ed1:;
			{
				if ((!(_21ebc12ed_is_unsafe((*_self_)._field_e.ptr())))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_21ec14275_Ptr> _323721_t = _21ec08d6e_ptr((*_self_)._field_d.get()._field_kind.ptr());
				if (_21ec14dbe_is_unsafe(_323721_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;
				}
				(*_self_)._field_d.get()._field_kind=_323721_t.get()._field_elem;
			}
		}
		else if ((_21ec08a94_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230284ba:;
			{
				(*_self_)._field_d.get()._field_kind=_21ec08a94_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_223027b7e:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_223027b29:;
	}
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _21ebe6e8e_amper(_21ebe0c68_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd09c40_StructLitExprModel>>()) {
			_case_begin_22302da0e:;
			{
				jule::Ptr<_21dd09c40_StructLitExprModel> _325721_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_21dd09c40_StructLitExprModel>();
				_21ec00607_make_struct_lit_alloc((*_self_)._field_d,_325721_lit);
			}
		}
		else {
			_case_begin_22302d4ae:;
			{
				{
					
					if (_21ec15287_can_get_ptr((*_self_)._field_d)) {
						_case_begin_22302dd1c:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec14275_Ptr>(_21ec14275_Ptr((*_self_)._field_d.get()._field_kind)), 11)));
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_21dd09349_UnaryExprModel>(_21dd09349_UnaryExprModel(jule::new_ptr<_21ebbd053_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
						}
					}
					else {
						_case_begin_22302d998:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_22302d8ee:;
				}
			}
		}
		_match_end_22302d437:;
	}
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	}
}



inline void _21ebe71d1_type_decl(_21ebe0c68_UnaryEval* _self_) {
	_21ec17e27_TypeChecker _328217_tc = _21ec17e27_TypeChecker((*_self_)._field_e.get()._field_s,(*_self_)._field_e.get()._field_lookup,jule::Ptr<_21ec16ed1_Referencer>(),(*_self_)._field_u.get()._field_op,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_223035b48:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec1d427_build_ptr_from_type(&_328217_tc, (*_self_)._field_d.get()._field_kind), 11)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_223035bae:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec1cbb8_build_sptr_from_type(&_328217_tc, (*_self_)._field_d.get()._field_kind), 6)));
			}
		}
		else {
			_case_begin_223032d43:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_223033dcc:;
	}
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _21ebe7423_eval_data(_21ebe0c68_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_223039542:;
			{
				jule::Ptr<_21ec06223_TypeKind> _330421_prefix = (*_self_)._field_e.get()._field_prefix;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_21ebdeea9_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_330421_prefix;
			}
		}
		else {
			_case_begin_223038c39:;
			{
				(*_self_)._field_d=_21ebdeea9_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_2230391ce:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebe7797_eval(_21ebe0c68_UnaryEval* _self_,jule::Ptr<_21c4d8d6b_UnaryExpr> _331327_u) {
	(*_self_)._field_u=_331327_u;
	_21ebe7423_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	}
	if ((*_self_)._field_d.get()._field_decl) {
		_21ebe71d1_type_decl(&(*_self_));
		return (*_self_)._field_d;
	}
	jule::Ptr<_21ec06223_TypeKind> _332417_cast_kind = (*_self_)._field_d.get()._field_cast_kind;
	jule::Ptr<_21ec06223_TypeKind> _332513_kind = (*_self_)._field_d.get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_22303e4e2:;
			{
				_21ebe14c7_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22303e558:;
			{
				_21ebe1719_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_22303e5be:;
			{
				_21ebe195b_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_22303e635:;
			{
				_21ebe1b9d_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22303ebda:;
			{
				_21ebe1de0_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22303ec51:;
			{
				_21ebe6e8e_amper(&(*_self_));
			}
		}
		else {
			_case_begin_22303bda2:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_22303e349:;
	}
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_223040d40:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op._field_kind),jule::Any(_21ec06641_to_str(_332513_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_21ebbda59_is_const((*_self_)._field_d.ptr())) {
			_case_begin_223046d46:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		else if ((_332417_cast_kind != nullptr)) {
			_case_begin_223046dbd:;
			{
				(*_self_)._field_d.get()._field_cast_kind=_332417_cast_kind;
				_21ec01dbc_apply_cast_kind((*_self_)._field_d);
			}
		}
		_match_end_223040c96:;
	}
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _21ebe0c68_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21ec06641_to_str(_21ec06223_TypeKind* _self_) {
	if (_21ec072ce_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	}
	jule::Str _7717_kind = jule::Str();
	if ((*_self_)._field_variadic) {
		_7717_kind+=jule::Str("...", 3);
	}
	if (_21ec07004_cpp_linked(&(*_self_))) {
		_7717_kind+=jule::Str("cpp.", 4);
		_7717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7717_kind+=_21ec05bd4_Kind_mptr_data[((*_self_)._field_kind).type_offset]._21ec056a6_to_str((*_self_)._field_kind);
	}
	return _7717_kind;
}



inline jule::Bool _21ec069e8_equals(jule::Ptr<_21ec06223_TypeKind> _self_,jule::Ptr<_21ec06223_TypeKind> _9326_other) {
	if (_21ec072ce_is_nil(_self_.ptr())) {
		return _21ec072ce_is_nil(_9326_other.ptr());
	}
	if (_21ec07004_cpp_linked(_self_.ptr())) {
		return _21ec07004_cpp_linked(_9326_other.ptr()) && (_self_.get()._field_cpp_ident == _9326_other.get()._field_cpp_ident);
	}
	return _21ec05bd4_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._21ec05a5d_equals(_self_.get()._field_kind, _9326_other);
}



inline jule::Bool _21ec07004_cpp_linked(_21ec06223_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _21ec072ce_is_nil(_21ec06223_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _21ec075a9_void(_21ec06223_TypeKind* _self_) {
	jule::Ptr<_21ec0b58b_Prim> _11613_prim = _21ec087b9_prim(&(*_self_));
	return (_11613_prim != nullptr) && (_11613_prim.get()._field_kind == jule::Str("void", 4));
}



inline jule::Bool _21ec07884_mutable(_21ec06223_TypeKind* _self_) {
	{
		_21ec06223_TypeKind* _12321__self = (&((*_self_)));
		if ((_21ec09ca4_strct(_12321__self) != nullptr)) {
			return _21ec09ca4_strct(_12321__self).get()._field_mutable;
		}
		if ((_21ec0a07e_trt(_12321__self) != nullptr)) {
			return _21ec0a07e_trt(_12321__self).get()._field_mutable;
		}
		if ((_21ec087b9_prim(_12321__self) != nullptr)) {
			jule::Ptr<_21ec0b58b_Prim> _13221_p = _21ec087b9_prim(_12321__self);
			return _21ec10095_is_any(_13221_p.ptr());
		}
		if ((_21ec09424_arr(_12321__self) != nullptr)) {
			return _21ec07884_mutable(_21ec09424_arr(_12321__self).get()._field_elem.ptr());
		}
		return ((_21ec096ee_slc(_12321__self) != nullptr) || (_21ec08d6e_ptr(_12321__self) != nullptr)) || (_21ec08a94_sptr(_12321__self) != nullptr);
	}
}



inline jule::Bool _21ec07b5e_nil_compatible(_21ec06223_TypeKind* _self_) {
	{
		_21ec06223_TypeKind* _14721__self = (&((*_self_)));
		jule::Ptr<_21ec0b58b_Prim> _14917_prim = _21ec087b9_prim(_14721__self);
		if ((_14917_prim != nullptr) && _21ec10095_is_any(_14917_prim.ptr())) {
			return true;
		}
		return (((((_21ec072ce_is_nil(_14721__self) || (_21ec099c9_fnc(_14721__self) != nullptr)) || (_21ec08a94_sptr(_14721__self) != nullptr)) || (_21ec08d6e_ptr(_14721__self) != nullptr)) || (_21ec0a07e_trt(_14721__self) != nullptr)) || (_21ec096ee_slc(_14721__self) != nullptr)) || (_21ec0a359_map(_14721__self) != nullptr);
	}
}



inline jule::Bool _21ec07e39_performs_rc(_21ec06223_TypeKind* _self_) {
	{
		_21ec06223_TypeKind* _16721__self = (&((*_self_)));
		return ((_21ec08a94_sptr(_16721__self) != nullptr) || (_21ec096ee_slc(_16721__self) != nullptr)) || (_21ec0a07e_trt(_16721__self) != nullptr);
	}
}



inline jule::Bool _21ec08214_supports_cloning(_21ec06223_TypeKind* _self_) {
	{
		_21ec06223_TypeKind* _17521__self = (&((*_self_)));
		{
			
			if ((_21ec087b9_prim(_17521__self) != nullptr)) {
				_case_begin_223131480:;
				{
					return (!(_21ec10095_is_any(_21ec087b9_prim(_17521__self).ptr())));
				}
			}
			else if ((_21ec09149_enm(_17521__self) != nullptr)) {
				_case_begin_2231314e6:;
				{
					return true;
				}
			}
			else if ((_21ec099c9_fnc(_17521__self) != nullptr)) {
				_case_begin_2231311a5:;
				{
					return true;
				}
			}
			else if ((_21ec08d6e_ptr(_17521__self) != nullptr)) {
				_case_begin_22313121b:;
				{
					return true;
				}
			}
			else if ((_21ec096ee_slc(_17521__self) != nullptr)) {
				_case_begin_223131282:;
				{
					return _21ec08214_supports_cloning(_21ec096ee_slc(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_21ec0a359_map(_17521__self) != nullptr)) {
				_case_begin_223130ca9:;
				{
					jule::Ptr<_21ec128b1_Map> _18521_m = _21ec0a359_map(_17521__self);
					return _21ec08214_supports_cloning(_18521_m.get()._field_key.ptr()) && _21ec08214_supports_cloning(_18521_m.get()._field_val.ptr());
				}
			}
			else if ((_21ec09424_arr(_17521__self) != nullptr)) {
				_case_begin_223130d20:;
				{
					return _21ec08214_supports_cloning(_21ec09424_arr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_21ec08a94_sptr(_17521__self) != nullptr)) {
				_case_begin_223130d86:;
				{
					return _21ec08214_supports_cloning(_21ec08a94_sptr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_21ec09ca4_strct(_17521__self) != nullptr)) {
				_case_begin_223130dec:;
				{
					jule::Ptr<_21dd06742_StructIns> _19225_s = _21ec09ca4_strct(_17521__self);
					return ((_19225_s.get()._field_decl != nullptr) && (!(_19225_s.get()._field_decl.get()._field_cpp_linked))) && _21dd05015_is_derives(_19225_s.get()._field_decl.ptr(), jule::Str("Clone", 5));
				}
			}
			else {
				_case_begin_223130c43:;
				{
					return false;
				}
			}
			_match_end_223130bbb:;
		}
	}
}



inline jule::Bool _21ec084de_variadicable(_21ec06223_TypeKind* _self_) {
	{
		_21ec06223_TypeKind* _20521__self = (&((*_self_)));
		return (_21ec096ee_slc(_20521__self) != nullptr);
	}
}



inline jule::Ptr<_21ec0b58b_Prim> _21ec087b9_prim(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec0b58b_Prim>>()) {
			_case_begin_22313a16a:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ec0b58b_Prim>();
			}
		}
		else {
			_case_begin_22312d8bc:;
			{
				return nullptr;
			}
		}
		_match_end_22312d867:;
	}
}



inline jule::Ptr<_21ec103e7_Sptr> _21ec08a94_sptr(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec103e7_Sptr>>()) {
			_case_begin_22312da10:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ec103e7_Sptr>();
			}
		}
		else {
			_case_begin_22313a049:;
			{
				return nullptr;
			}
		}
		_match_end_223139ee4:;
	}
}



inline jule::Ptr<_21ec14275_Ptr> _21ec08d6e_ptr(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec14275_Ptr>>()) {
			_case_begin_22313bd2b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ec14275_Ptr>();
			}
		}
		else {
			_case_begin_22313b1e3:;
			{
				return nullptr;
			}
		}
		_match_end_22313b3be:;
	}
}



inline jule::Ptr<_21ddb6aee_Enum> _21ec09149_enm(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ddb6aee_Enum>>()) {
			_case_begin_22313b8ec:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ddb6aee_Enum>();
			}
		}
		else {
			_case_begin_22313bc0a:;
			{
				return nullptr;
			}
		}
		_match_end_22313bba5:;
	}
}



inline jule::Ptr<_21ec13692_Arr> _21ec09424_arr(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec13692_Arr>>()) {
			_case_begin_22313d998:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ec13692_Arr>();
			}
		}
		else {
			_case_begin_22313cd60:;
			{
				return nullptr;
			}
		}
		_match_end_22313d03b:;
	}
}



inline jule::Ptr<_21ec10eca_Slc> _21ec096ee_slc(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec10eca_Slc>>()) {
			_case_begin_22313d569:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ec10eca_Slc>();
			}
		}
		else {
			_case_begin_22313d877:;
			{
				return nullptr;
			}
		}
		_match_end_22313d822:;
	}
}



inline jule::Ptr<_21dd1cc42_FnIns> _21ec099c9_fnc(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21dd1cc42_FnIns>>()) {
			_case_begin_223140615:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21dd1cc42_FnIns>();
			}
		}
		else {
			_case_begin_22313e9cc:;
			{
				return nullptr;
			}
		}
		_match_end_22313eba8:;
	}
}



inline jule::Ptr<_21dd06742_StructIns> _21ec09ca4_strct(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21dd06742_StructIns>>()) {
			_case_begin_2231401d6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21dd06742_StructIns>();
			}
		}
		else {
			_case_begin_2231404e4:;
			{
				return nullptr;
			}
		}
		_match_end_22314048e:;
	}
}



inline jule::Ptr<_21deee929_Trait> _21ec0a07e_trt(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21deee929_Trait>>()) {
			_case_begin_22314147e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21deee929_Trait>();
			}
		}
		else {
			_case_begin_223141649:;
			{
				return nullptr;
			}
		}
		_match_end_2231415e4:;
	}
}



inline jule::Ptr<_21ec128b1_Map> _21ec0a359_map(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec128b1_Map>>()) {
			_case_begin_223141dca:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ec128b1_Map>();
			}
		}
		else {
			_case_begin_2231421a5:;
			{
				return nullptr;
			}
		}
		_match_end_223142150:;
	}
}



inline jule::Ptr<_21ec11b46_Tuple> _21ec0a634_tup(_21ec06223_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec11b46_Tuple>>()) {
			_case_begin_2231434b4:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_21ec11b46_Tuple>();
			}
		}
		else {
			_case_begin_2231433a4:;
			{
				return nullptr;
			}
		}
		_match_end_22314334e:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21ec06223_TypeKind _Src) {
	_Stream << _21ec06641_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _21ec0aee7_checked(_21ec0aa85_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _21ec0b239_remove_kind(_21ec0aa85_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _21ec0aa85_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21ec0b965_to_str(_21ec0b58b_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _21ec0bd1c_equals(jule::Ptr<_21ec0b58b_Prim> _self_,jule::Ptr<_21ec06223_TypeKind> _32626_other) {
	jule::Ptr<_21ec0b58b_Prim> _32713_prim = _21ec087b9_prim(_32626_other.ptr());
	if ((_32713_prim == nullptr)) {
		return false;
	}
	return _self_.get()._field_kind == _32713_prim.get()._field_kind;
}



inline jule::Bool _21ec0c2e5_is_i8(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _21ec0c5c0_is_i16(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _21ec0c89a_is_i32(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _21ec0cb75_is_i64(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _21ec0ce50_is_u8(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _21ec0d22a_is_u16(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _21ec0d505_is_u32(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _21ec0d7d0_is_u64(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _21ec0daaa_is_f32(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _21ec0dd85_is_f64(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _21ec0e160_is_int(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _21ec0e43a_is_uint(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _21ec0e715_is_uintptr(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _21ec0e9e0_is_bool(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _21ec0ecba_is_str(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _21ec10095_is_any(_21ec0b58b_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _21ec0b58b_Prim _Src) {
	_Stream << _21ec0b965_to_str(&_Src);
	return _Stream;
}



inline jule::Str _21ec107c1_to_str(_21ec103e7_Sptr* _self_) {
	return jule::Str("&", 1) + _21ec06641_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _21ec10b78_equals(jule::Ptr<_21ec103e7_Sptr> _self_,jule::Ptr<_21ec06223_TypeKind> _39526_other) {
	jule::Ptr<_21ec103e7_Sptr> _39613_sptr = _21ec08a94_sptr(_39526_other.ptr());
	if ((_39613_sptr == nullptr)) {
		return false;
	}
	return _21ec069e8_equals(_self_.get()._field_elem, _39613_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _21ec103e7_Sptr _Src) {
	_Stream << _21ec107c1_to_str(&_Src);
	return _Stream;
}



inline jule::Str _21ec1143c_to_str(_21ec10eca_Slc* _self_) {
	return jule::Str("[]", 2) + _21ec06641_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _21ec117e4_equals(jule::Ptr<_21ec10eca_Slc> _self_,jule::Ptr<_21ec06223_TypeKind> _41426_other) {
	jule::Ptr<_21ec10eca_Slc> _41513_slc = _21ec096ee_slc(_41426_other.ptr());
	if ((_41513_slc == nullptr)) {
		return false;
	}
	return _21ec069e8_equals(_self_.get()._field_elem, _41513_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _21ec10eca_Slc _Src) {
	_Stream << _21ec1143c_to_str(&_Src);
	return _Stream;
}



inline jule::Str _21ec120a8_to_str(_21ec11b46_Tuple* _self_) {
	jule::Str _43117_s = jule::Str("(", 1);
	_43117_s+=_21ec06641_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_223156d35:;
		if (it != expr.end()) {
			jule::Ptr<_21ec06223_TypeKind> &_223156ede_t = *it;
			{
				_43117_s+=jule::Str(",", 1);
				_43117_s+=_21ec06641_to_str(_223156ede_t.ptr());
			}
			_iter_next_223156d35:;
			++it;
			goto _iter_begin_223156d35;
		}
		_iter_end_223156d35:;
	}
	_43117_s+=jule::Str(")", 1);
	return _43117_s;
}



inline jule::Bool _21ec12460_equals(jule::Ptr<_21ec11b46_Tuple> _self_,jule::Ptr<_21ec06223_TypeKind> _44226_other) {
	jule::Ptr<_21ec11b46_Tuple> _44313_tup = _21ec0a634_tup(_44226_other.ptr());
	if ((_44313_tup == nullptr)) {
		return false;
	}
	if (_self_.get()._field_types.len() != static_cast<jule::I64>(static_cast<jule::I64>(_44313_tup.get()._field_types.len()))) {
		return false;
	}
	jule::I64 _45217_i = 0LL;
	for (; _45217_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_types.len())); (_45217_i)++) {
		{
			if ((!(_21ec069e8_equals(_self_.get()._field_types[_45217_i], _44313_tup.get()._field_types[_45217_i])))) {
				return false;
			}
		}
	_iter_next_22315a058:;
	}
	_iter_end_22315a058:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _21ec11b46_Tuple _Src) {
	_Stream << _21ec120a8_to_str(&_Src);
	return _Stream;
}



inline jule::Str _21ec12c8a_to_str(_21ec128b1_Map* _self_) {
	jule::Str _47217_s = jule::Str("[", 1);
	_47217_s+=_21ec06641_to_str((*_self_)._field_key.ptr());
	_47217_s+=jule::Str(":", 1);
	_47217_s+=_21ec06641_to_str((*_self_)._field_val.ptr());
	_47217_s+=jule::Str("]", 1);
	return _47217_s;
}



inline jule::Bool _21ec13142_equals(jule::Ptr<_21ec128b1_Map> _self_,jule::Ptr<_21ec06223_TypeKind> _48126_other) {
	jule::Ptr<_21ec128b1_Map> _48213_map = _21ec0a359_map(_48126_other.ptr());
	if ((_48213_map == nullptr)) {
		return false;
	}
	return _21ec069e8_equals(_self_.get()._field_key, _48213_map.get()._field_key) && _21ec069e8_equals(_self_.get()._field_val, _48213_map.get()._field_val);
}







std::ostream &operator<<(std::ostream &_Stream, _21ec128b1_Map _Src) {
	_Stream << _21ec12c8a_to_str(&_Src);
	return _Stream;
}



inline jule::Str _21ec13a6b_to_str(_21ec13692_Arr* _self_) {
	jule::Str _50017_s = jule::Str("[", 1);
	_50017_s+=_21ea2e7cc_itoa((*_self_)._field_n);
	_50017_s+=jule::Str("]", 1);
	_50017_s+=_21ec06641_to_str((*_self_)._field_elem.ptr());
	return _50017_s;
}



inline jule::Bool _21ec13e23_equals(jule::Ptr<_21ec13692_Arr> _self_,jule::Ptr<_21ec06223_TypeKind> _50826_other) {
	jule::Ptr<_21ec13692_Arr> _50913_arr = _21ec09424_arr(_50826_other.ptr());
	if ((_50913_arr == nullptr)) {
		return false;
	}
	return (_self_.get()._field_n == _50913_arr.get()._field_n) && _21ec069e8_equals(_self_.get()._field_elem, _50913_arr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _21ec13692_Arr _Src) {
	_Stream << _21ec13a6b_to_str(&_Src);
	return _Stream;
}



inline jule::Str _21ec1464e_to_str(_21ec14275_Ptr* _self_) {
	if (_21ec14dbe_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + _21ec06641_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _21ec14a06_equals(jule::Ptr<_21ec14275_Ptr> _self_,jule::Ptr<_21ec06223_TypeKind> _53226_other) {
	jule::Ptr<_21ec14275_Ptr> _53313_ptr = _21ec08d6e_ptr(_53226_other.ptr());
	if ((_53313_ptr == nullptr)) {
		return false;
	}
	return _21ec069e8_equals(_self_.get()._field_elem, _53313_ptr.get()._field_elem);
}



inline jule::Bool _21ec14dbe_is_unsafe(_21ec14275_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21ec14275_Ptr _Src) {
	_Stream << _21ec1464e_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ec16ed1_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c483200_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _21c48b26e_push_err(_21c4878b9_DirectiveEval* _self_,_21c627dde_Token _2127_t,jule::Str _2137_fmt,jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_21c348b32_Log(static_cast<jule::I64>(1LL),_2127_t._field_row,_2127_t._field_column,_2127_t._field_file.get()._field_path,_21c34911b_logf(_2137_fmt,_2150_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_21c627dde_Token>> _21c48c506_split_operans(_21c4878b9_DirectiveEval* _self_,jule::Str _3332_op,jule::Slice<_21c627dde_Token>& _3352_tokens) {
	jule::Slice<jule::Slice<_21c627dde_Token>> _3417_parts = jule::Slice<jule::Slice<_21c627dde_Token>>::alloc(0LL,10LL);
	jule::I64 _3617_i = 0LL;
	jule::I64 _3717_range_n = 0LL;
	jule::I64 _3817_last = 0LL;
	for (; _3617_i < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len())) - 1LL))); (_3617_i)++) {
		{
			_21c627dde_Token _4017_b = _3352_tokens[_3617_i];
			if (_4017_b._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4017_b._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_230065396:;
						{
							(_3717_range_n)++;
							goto _iter_next_23006431d;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_23006540c:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_23006530d:;
				}
			}
			if ((_3717_range_n > 0LL) || (_4017_b._field_id != static_cast<jule::U64>(7LLU))) {
				goto _iter_next_23006431d;
			}
			if (_4017_b._field_kind == _3332_op) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			}
		}
	_iter_next_23006431d:;
	}
	_iter_end_23006431d:;
	if (_3817_last < static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len()))) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));
	} else {
		_21c48b26e_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3417_parts;
}



inline jule::Bool _21c49374e_eval_directive_ident(_21c4878b9_DirectiveEval* _self_,jule::Str _7435_ident) {
	if (_7435_ident.empty()) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_230069ab5:;
		if (it != expr.end()) {
			jule::Str &_230069e28_var = *it;
			{
				if (_230069e28_var == _7435_ident) {
					return true;
				}
			}
			_iter_next_230069ab5:;
			++it;
			goto _iter_begin_230069ab5;
		}
		_iter_end_230069ab5:;
	}
	return false;
}



inline jule::Bool _21c488612_eval_directive_part(_21c4878b9_DirectiveEval* _self_,jule::Slice<_21c627dde_Token> _8842_part) {
	jule::Bool _8913_logical_not = (_8842_part[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_8842_part[0LL]._field_kind == jule::Str("!", 1));
	if (_8913_logical_not) {
		_8842_part=_8842_part.slice(1LL);
	}
	if ((_8842_part.len() > 1LL)) {
		_21c48b26e_push_err(&(*_self_), _8842_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _9917_result = _21c49374e_eval_directive_ident(&(*_self_), _8842_part[0LL]._field_kind);
	if (_8913_logical_not) {
		_9917_result=(!(_9917_result));
	}
	return _9917_result;
}



inline jule::Bool _21c496d3a_eval(_21c4878b9_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_21c48b26e_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11217_result = false;
	jule::Slice<jule::Slice<_21c627dde_Token>> _11417_logical_or_parts = _21c48c506_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);
	if ((_11417_logical_or_parts == nullptr)) {
		return false;
	}
	{
		auto &expr = _11417_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_230071c54:;
		if (it != expr.end()) {
			jule::Slice<_21c627dde_Token> _230071a23_part = *it;
			{
				jule::Bool _12021_and = true;
				jule::Slice<jule::Slice<_21c627dde_Token>> _12121_logical_and_parts = _21c48c506_split_operans(&(*_self_), jule::Str("&&", 2),_230071a23_part);
				if ((_12121_logical_and_parts == nullptr)) {
					return false;
				}
				{
					auto &expr = _12121_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_2300733e8:;
					if (it != expr.end()) {
						jule::Slice<_21c627dde_Token> _2300731c8_and_part = *it;
						{
							_21c627dde_Token _12721_first = _2300731c8_and_part[0LL];
							if ((_12721_first._field_id == static_cast<jule::U64>(3LLU)) && (_12721_first._field_kind == jule::Str("(", 1))) {
								_21c627dde_Token _12925_end = _2300731c8_and_part[(_2300731c8_and_part.len() - 1LL)];
								if ((_12925_end._field_id != static_cast<jule::U64>(3LLU)) || (_12925_end._field_kind != jule::Str(")", 1))) {
									_21c48b26e_push_err(&(*_self_), _12721_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_2300731c8_and_part=_2300731c8_and_part.slice(1LL,(_2300731c8_and_part.len() - 1LL));
							}
							_12021_and=_12021_and && _21c488612_eval_directive_part(&(*_self_), _2300731c8_and_part);
						}
						_iter_next_2300733e8:;
						++it;
						goto _iter_begin_2300733e8;
					}
					_iter_end_2300733e8:;
				}
				_11217_result=_11217_result || _12021_and;
			}
			_iter_next_230071c54:;
			++it;
			goto _iter_begin_230071c54;
		}
		_iter_end_230071c54:;
	}
	return _11217_result;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4878b9_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21cc7b410_JuleImporter> static__21cbeeaae_new(_21c483200_CompileInfo _5823_info) {
	jule::Ptr<_21cc7b410_JuleImporter> _5917_imp = jule::new_ptr<_21cc7b410_JuleImporter>(_21cc7b410_JuleImporter(jule::Slice<jule::Str>({_21c35922a_PATH_STDLIB}),jule::Str(),jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>>(),jule::Slice<jule::Str>()));
	_21c483b90_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> _21cc76284_all_packages(_21cc7b410_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _21cc77e67_set_mod_path(_21cc7b410_JuleImporter* _self_,jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _21cc79a90_get_mod_path(_21cc7b410_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _21ccae0ad_mod_by_id(_21cc7b410_JuleImporter* _self_,jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21ccb2567_get_import(_21cc7b410_JuleImporter* _self_,jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_23007b81e:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _23007bb3d_p = *it;
			{
				if (_23007bb3d_p.get()._field_path == _8733_path) {
					return _23007bb3d_p;
				}
			}
			_iter_next_23007b81e:;
			++it;
			goto _iter_begin_23007b81e;
		}
		_iter_end_23007b81e:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>,jule::Slice<_21c348b32_Log>> _21ccb7ea7_import_package(_21cc7b410_JuleImporter* _self_,jule::Str _9637_path,jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_235a1da19_DirEntry>> _9717_dirents = ({
		auto except = static__235b24ec7_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_21c348b32_Log>({_21cbdb54b_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
			return std::make_tuple(nullptr,jule::Slice<_21c348b32_Log>({_21cbdb54b_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
		} jule::Slice<jule::Ptr<_235a1da19_DirEntry>>();});
	});
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _21c491d79_find_module_file_deep(_9637_path);
		if (_10217_new_mod != (*_self_)._field_mod) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_21c348b32_Log> _10525_errs = _21c4924c8_check_module_file((*_self_)._field_mod);
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			}
		}
	}
	jule::Slice<jule::Ptr<_21c4cc2b0_Ast>> _11217_asts = jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>::alloc(0LL,static_cast<jule::I64>(_9717_dirents.len()));
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_23008202d:;
		if (it != expr.end()) {
			jule::Ptr<_235a1da19_DirEntry> _2300821b5_dirent = *it;
			{
				if (_235a3a11d_is_dir(_2300821b5_dirent.get()._field_stat.ptr()) || (!(_23688d1b2_has_suffix(_2300821b5_dirent.get()._field_name,jule::Str(".jule", 5))))) {
					goto _iter_next_23008202d;
				}
				jule::Str _11917__path = _235b71c27_join(jule::Slice<jule::Str>({_9637_path,_2300821b5_dirent.get()._field_name}));
				jule::Ptr<_21c62e038_File> _12021_file = _21c6308ca_new_file_set(_11917__path);
				_21c62e7ca_fill(_12021_file.ptr(), _21cbd812a_read_buff(_12021_file.get()._field_path));
				jule::Slice<_21c348b32_Log> _12221_errors = _21c63d223_lex(_12021_file,static_cast<jule::I64>(0LL));
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ptr<_21cb7e09e_FileInfo> _12721_finfo = _21cb7e4de_parse_file(_12021_file);
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				}
				if ((!(_21c48241e_is_pass_file_annotation(_2300821b5_dirent.get()._field_name)))) {
					goto _iter_next_23008202d;
				}
				jule::Bool _13718_r;
				jule::Slice<_21c348b32_Log> _13725_logs;
				std::tie(_13718_r,_13725_logs) = _21cd52e32_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				}
				if ((!(_13718_r))) {
					goto _iter_next_23008202d;
				}
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);
			}
			_iter_next_23008202d:;
			++it;
			goto _iter_begin_23008202d;
		}
		_iter_end_23008202d:;
	}
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _21cceb419_imported(_21cc7b410_JuleImporter* _self_,jule::Ptr<_21eb49c8d_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_2300896d9:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _230089a08_p = *it;
			{
				if ((_230089a08_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_230089a08_p.get()._field_link_path == _15335_imp.get()._field_link_path)) {
					return;
				}
			}
			_iter_next_2300896d9:;
			++it;
			goto _iter_begin_2300896d9;
		}
		_iter_end_2300896d9:;
	}
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_23008ac4b:;
			if (it != expr.end()) {
				jule::I64 _23008ae7c_i = it - expr.begin();
				jule::Str _23008b09d_mod = *it;
				{
					if ((*_self_)._field_mod == _23008b09d_mod) {
						_15335_imp.get()._field_mod_id=_23008ae7c_i;
						goto _julec_label_setted;
					}
				}
				_iter_next_23008ac4b:;
				++it;
				_23008ae7c_i++;
				goto _iter_begin_23008ac4b;
			}
			_iter_end_23008ac4b:;
		}
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);
		_julec_label_setted:;
	}
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);
}



inline std::tuple<jule::Bool,jule::Slice<_21c348b32_Log>> _21cd52e32_is_pass_build_directives(_21cc7b410_JuleImporter* _self_,jule::Ptr<_21c4cc2b0_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_23008e414:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _23008e535_td = *it;
			{
				if ((_23008e535_td.get()._field_tag._field_kind != jule::Str("build", 5))) {
					goto _iter_next_23008e414;
				}
				_21c4878b9_DirectiveEval _18421_de = _21c4878b9_DirectiveEval(jule::Slice<_21c348b32_Log>(),_23008e535_td,(*_self_)._field_vars);
				jule::Bool _18817_result = _21c496d3a_eval(&_18421_de);
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				}
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_23008e414:;
			++it;
			goto _iter_begin_23008e414;
		}
		_iter_end_23008e414:;
	}
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21cc7b410_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21cd1eccd_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__21cd9764c_is_common_ordered_0(jule::Slice<jule::Ptr<_21dd03266_Struct>>& _1737_s,jule::Ptr<_21dd03266_Struct> _1746_t) {
	jule::Ptr<_21dd03266_Struct>* _1817_p = (&(_1746_t.get()._field_depends[0LL]));
	jule::Ptr<_21dd03266_Struct>* _1913_end = _1817_p + static_cast<jule::I64>(static_cast<jule::I64>(_1746_t.get()._field_depends.len()));
	{
		auto &expr = _1737_s;
		auto it = expr.begin();
		_iter_begin_2300c0159:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> &_2300c0313_tt = *it;
			{
				{
					if (_2300c0313_tt == _1746_t) {
						goto _iter_end_2300c0159;
					}
					if (((*(_1817_p)).get()._field_cpp_linked || ((*(_1817_p)).get()._field_depends.len() == 0LL)) || (_2300c0313_tt == (*(_1817_p)))) {
						(_1817_p)++;
						if (_1817_p == _1913_end) {
							return true;
						}
					}
				}
			}
			_iter_next_2300c0159:;
			++it;
			goto _iter_begin_2300c0159;
		}
		_iter_end_2300c0159:;
	}
	return false;
}



inline void static__21cd9beae_order_common_0(jule::Slice<jule::Ptr<_21dd03266_Struct>>& _3840_s) {
	jule::I64 _3917_i = 0LL;
	{
		auto &expr = _3840_s;
		auto it = expr.begin();
		_iter_begin_2300b94c7:;
		if (it != expr.end()) {
			jule::I64 _2300b9571_j = it - expr.begin();
			jule::Ptr<_21dd03266_Struct> _2300b97e6_t = *it;
			{
				if (_2300b97e6_t.get()._field_cpp_linked || (_2300b97e6_t.get()._field_depends.len() == 0LL)) {
					_3840_s.swap(_3917_i,_2300b9571_j);
					(_3917_i)++;
				}
			}
			_iter_next_2300b94c7:;
			++it;
			_2300b9571_j++;
			goto _iter_begin_2300b94c7;
		}
		_iter_end_2300b94c7:;
	}
	jule::I64 _4717_j = _3917_i;
	for (; _4717_j < static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())); (_4717_j)++) {
		{
			jule::I64 _4921_k = _3917_i;
			for (; _4921_k < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())) - 1LL))); (_4921_k)++) {
				{
					if ((!(static__21cd9764c_is_common_ordered_0(_3840_s,_3840_s[_4921_k])))) {
						_3840_s.swap(_4921_k,static_cast<jule::I64>((_4921_k + 1LL)));
					}
				}
			_iter_next_2300bb650:;
			}
			_iter_end_2300bb650:;
		}
	_iter_next_2300b8d67:;
	}
	_iter_end_2300b8d67:;
}



inline void static__21cde539d_order_structures(jule::Slice<jule::Ptr<_21dd03266_Struct>>& _6041_structs) {
	static__21cd9beae_order_common_0(_6041_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _21cd6bee5_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _21d3427ea_optimize_child(jule::Ptr<_21cd7c19d_ScopeDeadCode> _self_,jule::Ptr<_21eb1472a_Scope>& _2739_s) {
	jule::Ptr<_21cd7c19d_ScopeDeadCode> _2817_sdc = jule::new_ptr<_21cd7c19d_ScopeDeadCode>(_21cd7c19d_ScopeDeadCode(_self_,_2739_s,(&(_2739_s.get()._field_stmts)),jule::I64()));
	{
		_21d109d98_optimize_stmts(_2817_sdc);
	}
}



inline void _21d0b99a1_eliminate_followed(_21cd7c19d_ScopeDeadCode* _self_) {
	(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	jule::Ptr<_21cd7c19d_ScopeDeadCode> _3817_parent = (*_self_)._field_parent;
	while ((_3817_parent != nullptr)) {
		{
			(*(_3817_parent.get()._field_stmts))=(*(_3817_parent.get()._field_stmts)).slice(0LL,(_3817_parent.get()._field_i + 1LL));
			_3817_parent=_3817_parent.get()._field_parent;
		}
	_iter_next_2300d6417:;
	}
	_iter_end_2300d6417:;
}



inline void _21d0eac24_optimize_stmt(jule::Ptr<_21cd7c19d_ScopeDeadCode> _self_,jule::Any _4544_st) {
	{
		auto &_match_expr{ _4544_st };
		
		if (_match_expr.type_is<jule::Ptr<_21eb1472a_Scope>>()) {
			_case_begin_2300d8d32:;
			{
				jule::Ptr<_21eb1472a_Scope> _4821_scope = _4544_st.operator jule::Ptr<_21eb1472a_Scope>();
				if (_4821_scope.get()._field_deferred) {
					_21d1170b4_eliminate_dead_code_of_scope(_4821_scope);
				} else {
					_21d3427ea_optimize_child(_self_, _4821_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_2300d8d98:;
			{
				{
					auto &_match_expr{ _4544_st.operator jule::Ptr<_21ebbd053_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>>()) {
						_case_begin_2300dacce:;
						{
							_21d0b99a1_eliminate_followed(_self_.ptr());
						}
					}
					_match_end_2300dac35:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2e6bd_RetSt>>()) {
			_case_begin_2300d8e0e:;
			{
				_21d0b99a1_eliminate_followed(_self_.ptr());
			}
		}
		_match_end_2300d8c88:;
	}
}



inline void _21d109d98_optimize_stmts(jule::Ptr<_21cd7c19d_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_stmts->len())); (_self_.get()._field_i)++) {
		{
			_21d0eac24_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_2300dbc25:;
	}
	_iter_end_2300dbc25:;
}







std::ostream &operator<<(std::ostream &_Stream, _21cd7c19d_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void static__21c3c6693_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__21d12a6b0_print(jule::Str _2025_escape,jule::Str _2038_text) {
	jule::out(_2025_escape);
	jule::out(_2038_text);
	static__21c3c6693_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _21d0a7d8a_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__21d155c7e_log_flat(_21c348b32_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__21d156d3a_log_error(_21c348b32_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__21c3c6693_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	}
	if ((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_21ea2e7cc_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_21ea2e7cc_itoa(_1930_l._field_column));
	}
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _2368bd5bb_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) + 1LL);
		jule::I64 _3821_old_len = _3621_line.len();
		_3621_line=_2368bd5bb_trim_left(_3621_line,jule::Str("\t", 1));
		if (_3821_old_len != static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) {
			_3721_offset+=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_3821_old_len - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))))) << 3LLU);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _21ea2e7cc_itoa(_1930_l._field_row);
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_2368293b2_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_2368293b2_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_1930_l._field_column - _3721_offset)));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_2368293b2_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__21d12a6b0_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void static__21d15b7bd_log(_21c348b32_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_23012c507:;
			{
				static__21d155c7e_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_230137dc5:;
			{
				static__21d156d3a_log_error(_6524_l);
			}
		}
		_match_end_230137d09:;
	}
}



inline void static__21d15eb78_print_logs(jule::Slice<_21c348b32_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_23013937c:;
		if (it != expr.end()) {
			_21c348b32_Log &_230139448_l = *it;
			{
				static__21d15b7bd_log(_230139448_l);
			}
			_iter_next_23013937c:;
			++it;
			goto _iter_begin_23013937c;
		}
		_iter_end_23013937c:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_21ea2e7cc_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _21d159c61_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2202406c4_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2202408e4_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220240c57_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2202417c4_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220242d25_ScopeOptimizer> static__220243342_new(jule::Ptr<_21eb1472a_Scope> _4527_scope) {
	return jule::new_ptr<_220242d25_ScopeOptimizer>(_220242d25_ScopeOptimizer(jule::I64(),_4527_scope));
}



inline void _220243661_set_current_stmt(_220242d25_ScopeOptimizer* _self_,jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=_5139_stmt;
}



inline void _220243980_optimize_data(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21ebbd053_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd0b23b_FnCallExprModel>>()) {
			_case_begin_230148eb3:;
			{
				jule::Ptr<_21dd0b23b_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_21dd0b23b_FnCallExprModel>();
				if (_2359a5011_PRODUCTION) {
					if ((!(_21dd1d8be_is_builtin(_5821_m.get()._field_func.ptr()))) && _220246dc3_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token._field_file.get()._field_path,jule::Str("debug", 5))) {
						_220243661_set_current_stmt(&(*_self_), jule::Any(nullptr));
						return;
					}
				}
			}
		}
		_match_end_230148e5d:;
	}
	static__220249975_optimize(_5536_d.get()._field_model);
}



inline void _220243c9e_optimize_var(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb75615_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__220249975_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _2202440bd_optimize_conditional(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2c4ac_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_23014d8ad:;
		if (it != expr.end()) {
			jule::Ptr<_235bb50ab_If> _23014d9ce_elif = *it;
			{
				static__220249975_optimize(_23014d9ce_elif.get()._field_expr);
				_2202466db_optimize_child(&(*_self_), _23014d9ce_elif.get()._field_scope);
			}
			_iter_next_23014d8ad:;
			++it;
			goto _iter_begin_23014d8ad;
		}
		_iter_end_23014d8ad:;
	}
	if ((_7643_c.get()._field_default != nullptr)) {
		_2202466db_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	}
	if ((!(_2359a5ab1_OPT_COND))) {
		return;
	}
	jule::Bool _8917_const_case = false;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_230151097:;
		if (it != expr.end()) {
			jule::I64 _2301511da_i = it - expr.begin();
			jule::Ptr<_235bb50ab_If> _230151383_elif = *it;
			{
				if ((!(_22024728b_is_constant_valid_conditional_case(_230151383_elif)))) {
					goto _iter_next_230151097;
				}
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_2301511da_i);
				_7643_c.get()._field_default=jule::new_ptr<_21eb2c28c_Else>(_21eb2c28c_Else(_230151383_elif.get()._field_scope));
				goto _iter_end_230151097;
			}
			_iter_next_230151097:;
			++it;
			_2301511da_i++;
			goto _iter_begin_230151097;
		}
		_iter_end_230151097:;
	}
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	jule::Ptr<_235bb50ab_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));
	jule::Ptr<_235bb50ab_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));
	for (; _10917_i <= _11013_end; (_10917_i)++) {
		{
			{
				if (_220247c4d_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				}
			}
		}
	_iter_next_23014d605:;
	}
	_iter_end_23014d605:;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	if ((!(_8917_const_case))) {
		return;
	}
	jule::I64 _12817_only = -1LL;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_2301560be:;
		if (it != expr.end()) {
			jule::I64 _230156201_j = it - expr.begin();
			jule::Ptr<_235bb50ab_If> _2301563aa_elif = *it;
			{
				if ((_2301563aa_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;
					}
					_12817_only=_230156201_j;
				}
			}
			_iter_next_2301560be:;
			++it;
			_230156201_j++;
			goto _iter_begin_2301560be;
		}
		_iter_end_2301560be:;
	}
	if ((_12817_only != -1LL)) {
		_220243661_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	}
}



inline void _2202443dc_optimize_match(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2dd2c_Match> _14537_m) {
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_23015870e:;
		if (it != expr.end()) {
			jule::Ptr<_21eb2e27d_Case> _230158830_case = *it;
			{
				{
					auto &expr = _230158830_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_230158ed4:;
					if (it != expr.end()) {
						jule::Ptr<_21ebbd053_Data> _23015906c_expr = *it;
						{
							static__220249975_optimize(_23015906c_expr.get()._field_model);
						}
						_iter_next_230158ed4:;
						++it;
						goto _iter_begin_230158ed4;
					}
					_iter_end_230158ed4:;
				}
				_2202466db_optimize_child(&(*_self_), _230158830_case.get()._field_scope);
			}
			_iter_next_23015870e:;
			++it;
			goto _iter_begin_23015870e;
		}
		_iter_end_23015870e:;
	}
	if ((_14537_m.get()._field_default != nullptr)) {
		_2202466db_optimize_child(&(*_self_), _14537_m.get()._field_default.get()._field_scope);
	}
	if ((!(_2359a5ab1_OPT_COND))) {
		return;
	}
	jule::Bool _16017_const_case = false;
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_23015ae2b:;
		if (it != expr.end()) {
			jule::I64 _23015b06e_i = it - expr.begin();
			jule::Ptr<_21eb2e27d_Case> _23015b217_case = *it;
			{
				if ((!(_22024790c_is_constant_valid_match_case(_23015b217_case)))) {
					goto _iter_next_23015ae2b;
				}
				_16017_const_case=true;
				_14537_m.get()._field_cases=_14537_m.get()._field_cases.slice(0LL,_23015b06e_i);
				_23015b217_case.get()._field_exprs=nullptr;
				_14537_m.get()._field_default=_23015b217_case;
				goto _iter_end_23015ae2b;
			}
			_iter_next_23015ae2b:;
			++it;
			_23015b06e_i++;
			goto _iter_begin_23015ae2b;
		}
		_iter_end_23015ae2b:;
	}
	if ((_14537_m.get()._field_cases.len() == 0LL)) {
		return;
	}
	jule::Ptr<_21eb2e27d_Case>* _17917_i = (&(_14537_m.get()._field_cases[0LL]));
	jule::Ptr<_21eb2e27d_Case>* _18013_end = (&(_14537_m.get()._field_cases[(_14537_m.get()._field_cases.len() - 1LL)]));
	for (; _17917_i <= _18013_end; (_17917_i)++) {
		{
			{
				if (_22024808e_is_unreachable_match_case((*(_17917_i)))) {
					(*(_17917_i))=nullptr;
				}
			}
		}
	_iter_next_230158456:;
	}
	_iter_end_230158456:;
	if ((!(_16017_const_case))) {
		return;
	}
	jule::I64 _19417_only = -1LL;
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_23016079e:;
		if (it != expr.end()) {
			jule::I64 _2301608d1_j = it - expr.begin();
			jule::Ptr<_21eb2e27d_Case> _230160a8a_case = *it;
			{
				if ((_230160a8a_case != nullptr)) {
					if ((_19417_only != -1LL)) {
						return;
					}
					_19417_only=_2301608d1_j;
				}
			}
			_iter_next_23016079e:;
			++it;
			_2301608d1_j++;
			goto _iter_begin_23016079e;
		}
		_iter_end_23016079e:;
	}
	if ((_19417_only != -1LL)) {
		_220243661_set_current_stmt(&(*_self_), jule::Any(_14537_m.get()._field_cases[_19417_only].get()._field_scope));
	}
}



inline void _22024470b_optimize_range_iter(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2cb1c_RangeIter> _21142_it) {
	static__220249975_optimize(_21142_it.get()._field_expr.get()._field_model);
	_2202466db_optimize_child(&(*_self_), _21142_it.get()._field_scope);
}



inline void _220244a2a_optimize_while_iter(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2c8ec_WhileIter> _21642_it) {
	static__220249975_optimize(_21642_it.get()._field_expr);
	_2202463bc_optimize_stmt(&(*_self_), _21642_it.get()._field_next);
	_2202466db_optimize_child(&(*_self_), _21642_it.get()._field_scope);
}



inline jule::Bool _220244dd2_substr(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2d8dc_Assign> _22229_a) {
	{
		auto &_match_expr{ _22229_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd0d23d_SlicingExprModel>>()) {
			_case_begin_23016650d:;
			{
				jule::Ptr<_21dd0d23d_SlicingExprModel> _22521_sem = _22229_a.get()._field_r.get()._field_model.operator jule::Ptr<_21dd0d23d_SlicingExprModel>();
				if (_22521_sem.get()._field_expr == _22229_a.get()._field_l.get()._field_model) {
					_220243661_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_2202412da_MutSlicingExprModel>(_2202412da_MutSlicingExprModel(_22521_sem.get()._field_token,_22521_sem.get()._field_expr,_22521_sem.get()._field_left,_22521_sem.get()._field_right))));
					return true;
				}
			}
		}
		_match_end_2301664a8:;
	}
	return false;
}



inline jule::Bool _220245289_str_insert(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2d8dc_Assign> _23933_a) {
	{
		auto &_match_expr{ _23933_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd08de8_BinopExprModel>>()) {
			_case_begin_230169368:;
			{
				jule::Ptr<_21dd08de8_BinopExprModel> _24221_m = _23933_a.get()._field_r.get()._field_model.operator jule::Ptr<_21dd08de8_BinopExprModel>();
				if (_24221_m.get()._field_right.get()._field_model == _23933_a.get()._field_l.get()._field_model) {
					_220243661_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_2202417c4_StrInsertBeginExprModel>(_2202417c4_StrInsertBeginExprModel(_23933_a.get()._field_l.get()._field_model,_24221_m.get()._field_left.get()._field_model))));
					return true;
				}
			}
		}
		_match_end_230169313:;
	}
	return false;
}



inline jule::Bool _220245641_str_assign(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2d8dc_Assign> _25433_a) {
	if ((_25433_a.get()._field_op._field_kind != jule::Str("=", 1))) {
		return false;
	}
	jule::Ptr<_21ec0b58b_Prim> _25813_lp = _21ec087b9_prim(_25433_a.get()._field_l.get()._field_kind.ptr());
	if ((_25813_lp == nullptr) || (!(_21ec0ecba_is_str(_25813_lp.ptr())))) {
		return false;
	}
	{
		
		if (_220244dd2_substr(&(*_self_), _25433_a) || _220245289_str_insert(&(*_self_), _25433_a)) {
			_case_begin_23016d801:;
			{
				return true;
			}
		}
		_match_end_23016d79b:;
	}
	return false;
}



inline void _220245960_optimize_assign(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2d8dc_Assign> _27038_assign) {
	if (_2359a5132_OPT_COPY && _220245641_str_assign(&(*_self_), _27038_assign)) {
		return;
	}
	static__220249975_optimize(_27038_assign.get()._field_l.get()._field_model);
	static__220249975_optimize(_27038_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _27038_assign.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_23017024d:;
			{
				if (_2359a551c_OPT_MATH && (_21ec09ca4_strct(_27038_assign.get()._field_l.get()._field_kind.ptr()) == nullptr)) {
					_27038_assign.get()._field_op._field_kind=_27038_assign.get()._field_op._field_kind.slice(0LL,(_27038_assign.get()._field_op._field_kind.len() - 1LL));
					jule::Any _28325_model = jule::Any(jule::new_ptr<_21dd08de8_BinopExprModel>(_21dd08de8_BinopExprModel(_27038_assign.get()._field_l,_27038_assign.get()._field_r,_27038_assign.get()._field_op)));
					static__220249975_optimize(_28325_model);
					{
						auto &_match_expr{ _28325_model };
						
						if (_match_expr.type_is<jule::Ptr<_21dd08de8_BinopExprModel>>()) {
							_case_begin_230173e88:;
							{
								_27038_assign.get()._field_r=jule::new_ptr<_21dd08854_OperandExprModel>((*(_27038_assign.get()._field_r)));
								_27038_assign.get()._field_op._field_kind=jule::Str("=", 1);
								_27038_assign.get()._field_r.get()._field_model=_28325_model;
								return;
							}
						}
						_match_end_230173e33:;
					}
					_27038_assign.get()._field_op._field_kind+=jule::Str("=", 1);
					return;
				}
			}
		}
		_match_end_230171518:;
	}
	if (_2359a53eb_OPT_APPEND) {
		{
			auto &_match_expr{ _27038_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>>()) {
				_case_begin_230175ebd:;
				{
					jule::Ptr<_21dd13540_BuiltinAppendCallExprModel> _30425_m = _27038_assign.get()._field_r.get()._field_model.operator jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>();
					{
						auto &_match_expr{ _30425_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_21dd0b68c_SliceExprModel>>()) {
							_case_begin_23017708a:;
							{
								{
									auto &_match_expr{ _30425_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>() || _match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
										_case_begin_230177893:;
										{
											_220243661_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_220240c57_PushToSliceExprModel>(_220240c57_PushToSliceExprModel(_30425_m.get()._field_dest,_30425_m.get()._field_elements.operator jule::Ptr<_21dd0b68c_SliceExprModel>()))));
										}
									}
									_match_end_23017780a:;
								}
							}
						}
						_match_end_230177002:;
					}
				}
			}
			_match_end_230175e57:;
		}
	}
}



inline void _220245c7e_optimize_multi_assign(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2db0c_MultiAssign> _32044_assign) {
	{
		auto &expr = _32044_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_230177e15:;
		if (it != expr.end()) {
			jule::I64 _230177e8c_i = it - expr.begin();
			jule::Any _230178e38_l = *it;
			{
				static__220249975_optimize(_230178e38_l);
				_32044_assign.get()._field_l[_230177e8c_i]=_230178e38_l;
			}
			_iter_next_230177e15:;
			++it;
			_230177e8c_i++;
			goto _iter_begin_230177e15;
		}
		_iter_end_230177e15:;
	}
	static__220249975_optimize(_32044_assign.get()._field_r);
}



inline void _22024609d_optimize_ret(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb2e6bd_RetSt> _32835_r) {
	static__220249975_optimize(_32835_r.get()._field_expr);
}



inline void _2202463bc_optimize_stmt(_220242d25_ScopeOptimizer* _self_,jule::Any _33236_stmt) {
	{
		auto &_match_expr{ _33236_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_21eb1472a_Scope>>()) {
			_case_begin_23017ae07:;
			{
				_2202466db_optimize_child(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb1472a_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_23017ae6d:;
			{
				_220243980_optimize_data(&(*_self_), _33236_stmt.operator jule::Ptr<_21ebbd053_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_23017aee5:;
			{
				_220243c9e_optimize_var(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb75615_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c4ac_Conditional>>()) {
			_case_begin_23017b05b:;
			{
				_2202440bd_optimize_conditional(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2c4ac_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2cb1c_RangeIter>>()) {
			_case_begin_23017b0c2:;
			{
				_22024470b_optimize_range_iter(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2cb1c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c8ec_WhileIter>>()) {
			_case_begin_23017b138:;
			{
				_220244a2a_optimize_while_iter(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2c8ec_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c6cc_InfIter>>()) {
			_case_begin_23017b19e:;
			{
				_2202466db_optimize_child(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2c6cc_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2d8dc_Assign>>()) {
			_case_begin_23017b226:;
			{
				_220245960_optimize_assign(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2d8dc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2db0c_MultiAssign>>()) {
			_case_begin_23017b29d:;
			{
				_220245c7e_optimize_multi_assign(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2db0c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2dd2c_Match>>()) {
			_case_begin_23017b325:;
			{
				_2202443dc_optimize_match(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2dd2c_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2e6bd_RetSt>>()) {
			_case_begin_23017b39c:;
			{
				_22024609d_optimize_ret(&(*_self_), _33236_stmt.operator jule::Ptr<_21eb2e6bd_RetSt>());
			}
		}
		_match_end_23017acc5:;
	}
}



inline void _2202466db_optimize_child(_220242d25_ScopeOptimizer* _self_,jule::Ptr<_21eb1472a_Scope> _35937_child) {
	jule::Ptr<_220242d25_ScopeOptimizer> _36017_so = static__220243342_new(_35937_child);
	_22024692d_optimize(_36017_so.ptr());
}



inline void _22024692d_optimize(_220242d25_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_230183e32:;
		if (it != expr.end()) {
			jule::I64 _230183eba_i = it - expr.begin();
			jule::Any _2301841c9_stmt = *it;
			{
				(*_self_)._field_i=_230183eba_i;
				_2202463bc_optimize_stmt(&(*_self_), _2301841c9_stmt);
			}
			_iter_next_230183e32:;
			++it;
			_230183eba_i++;
			goto _iter_begin_230183e32;
		}
		_iter_end_230183e32:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _220242d25_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__220249975_optimize(jule::Any& _5533_model) {
	{
		
		if (_2359a5990_OPT_PTR || _2359a551c_OPT_MATH || _2359a563d_OPT_ACCESS || _2359a5ab1_OPT_COND) {
			_case_begin_23018463b:;
			{
				jule::Ptr<_220249403_ExprOptimizer> _6221_exop = jule::new_ptr<_220249403_ExprOptimizer>(_220249403_ExprOptimizer(((jule::Ptr<jule::Any>)((&(_5533_model))))));
				_22025176d_do(_6221_exop.ptr());
			}
		}
		_match_end_230184570:;
	}
}



inline jule::Bool _220249d2c_str_cond(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd08de8_BinopExprModel> _6927_m) {
	jule::Ptr<_21ec0b58b_Prim> _7013_lp = _21ec087b9_prim(_6927_m.get()._field_left.get()._field_kind.ptr());
	if ((_7013_lp == nullptr) || (!(_21ec0ecba_is_str(_7013_lp.ptr())))) {
		return false;
	}
	if ((_6927_m.get()._field_op._field_kind != jule::Str("==", 2)) && (_6927_m.get()._field_op._field_kind != jule::Str("!=", 2))) {
		return false;
	}
	{
		auto &_match_expr{ _6927_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
			_case_begin_2301893aa:;
			{
				std::tie(_6927_m.get()._field_left,_6927_m.get()._field_right) = std::make_tuple(_6927_m.get()._field_right,_6927_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_23018929a:;
	}
	{
		auto &_match_expr{ _6927_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
			_case_begin_2301887d8:;
			{
				goto _match_end_23018a521;
			}
		}
		else {
			_case_begin_23018a576:;
			{
				return true;
			}
		}
		_match_end_23018a521:;
	}
	_julec_label_opt:;
	jule::Ptr<_21ea9d450_Const> _8913_c = _6927_m.get()._field_right.get()._field_model.operator jule::Ptr<_21ea9d450_Const>();
	if ((!(_21eaa0155_read_str(_8913_c.ptr()).empty()))) {
		return false;
	}
	{
		auto &_match_expr{ _6927_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_23018b92e:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_6927_m.get()._field_left.get()._field_kind,_6927_m.get()._field_left.get()._field_model,_21c627dde_Token(),jule::Str("empty()", 7))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_23018be29:;
			{
				_21c627dde_Token _10121_op = _6927_m.get()._field_op;
				_10121_op._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_21dd09349_UnaryExprModel>(_21dd09349_UnaryExprModel(jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd107c3_CommonSubIdentExprModel>(_21dd107c3_CommonSubIdentExprModel(_6927_m.get()._field_left.get()._field_kind,_6927_m.get()._field_left.get()._field_model,_21c627dde_Token(),jule::Str("empty()", 7))))),jule::Bool(),jule::Ptr<_21ea9d450_Const>())),_10121_op)));
			}
		}
		_match_end_23018bdc4:;
	}
	return true;
}



inline void _22024a14b_binary(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd08de8_BinopExprModel> _11725_m) {
	static__220249975_optimize(_11725_m.get()._field_left.get()._field_model);
	static__220249975_optimize(_11725_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11725_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
			_case_begin_230190cb8:;
			{
				goto _match_end_2301917ad;
			}
		}
		else {
			_case_begin_230191813:;
			{
				return;
			}
		}
		_match_end_2301917ad:;
	}
	if (_2359a5ab1_OPT_COND && _220249d2c_str_cond(&(*_self_), _11725_m)) {
		return;
	}
	if ((!(_2359a551c_OPT_MATH))) {
		return;
	}
	{
		auto &_match_expr{ _11725_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_230192b33:;
			{
				jule::Bool _13718_ok;
				jule::U64 _13722_x;
				std::tie(_13718_ok,_13722_x) = _220251c57_check_for_bit_shift_opt(_11725_m.get()._field_left,_11725_m.get()._field_right);
				if (_13718_ok) {
					_11725_m.get()._field_op._field_kind=jule::Str("<<", 2);
					jule::Ptr<_21ea9d450_Const> _14025_c = _11725_m.get()._field_right.get()._field_model.operator jule::Ptr<_21ea9d450_Const>();
					_21eaa13ed_set_u64(_14025_c.ptr(), _13722_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_230192b99:;
			{
				jule::Bool _14518_ok;
				jule::U64 _14522_x;
				std::tie(_14518_ok,_14522_x) = _220251c57_check_for_bit_shift_opt(_11725_m.get()._field_left,_11725_m.get()._field_right);
				if (_14518_ok) {
					_11725_m.get()._field_op._field_kind=jule::Str(">>", 2);
					jule::Ptr<_21ea9d450_Const> _14825_c = _11725_m.get()._field_right.get()._field_model.operator jule::Ptr<_21ea9d450_Const>();
					_21eaa13ed_set_u64(_14825_c.ptr(), _14522_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_230192c10:;
			{
				jule::Ptr<_21ea9d450_Const> _15321_c = _11725_m.get()._field_right.get()._field_model.operator jule::Ptr<_21ea9d450_Const>();
				jule::F64 _15417_d = _21eaa0cb0_as_f64(_15321_c.ptr());
				if ((_15417_d == 2LL)) {
					_11725_m.get()._field_op._field_kind=jule::Str("&", 1);
					_21eaa10ce_set_i64(_15321_c.ptr(), 1LL);
				}
			}
		}
		_match_end_230192acd:;
	}
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_2202406c4_UnsafeBinopExprModel>(_2202406c4_UnsafeBinopExprModel(_11725_m)));
}



inline void _22024a46a_unary(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd09349_UnaryExprModel> _16524_m) {
	static__220249975_optimize(_16524_m.get()._field_expr.get()._field_model);
	if (_2359a5990_OPT_PTR && (_16524_m.get()._field_op._field_kind == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _16524_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_21dd09349_UnaryExprModel>>()) {
				_case_begin_23019a7d9:;
				{
					jule::Ptr<_21dd09349_UnaryExprModel> _17025_um = _16524_m.get()._field_expr.get()._field_model.operator jule::Ptr<_21dd09349_UnaryExprModel>();
					if ((_17025_um.get()._field_op._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_17025_um.get()._field_expr.get()._field_model;
					}
				}
			}
			_match_end_23019a773:;
		}
	}
}



inline void _22024a789_structure_lit(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd09c40_StructLitExprModel> _17832_m) {
	{
		auto &expr = _17832_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_23019cd2a:;
		if (it != expr.end()) {
			jule::Ptr<_21dd097de_StructArgExprModel> _23019ce4b_arg = *it;
			{
				static__220249975_optimize(_23019ce4b_arg.get()._field_expr);
			}
			_iter_next_23019cd2a:;
			++it;
			goto _iter_begin_23019cd2a;
		}
		_iter_end_23019cd2a:;
	}
}



inline void _22024aaa8_alloc_structure(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0a12a_AllocStructLitExprModel> _18434_m) {
	_22024a789_structure_lit(&(*_self_), _18434_m.get()._field_lit);
}



inline void _22024adc7_casting(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0a757_CastingExprModel> _18826_m) {
	static__220249975_optimize(_18826_m.get()._field_expr);
}



inline void _22024b1e6_args(_220249403_ExprOptimizer* _self_,jule::Slice<jule::Any> _19223_args) {
	{
		auto &expr = _19223_args;
		auto it = expr.begin();
		_iter_begin_2301a0877:;
		if (it != expr.end()) {
			jule::I64 _2301a08bb_i = it - expr.begin();
			jule::Any _2301a0b41_arg = *it;
			{
				static__220249975_optimize(_2301a0b41_arg);
				_19223_args[_2301a08bb_i]=_2301a0b41_arg;
			}
			_iter_next_2301a0877:;
			++it;
			_2301a08bb_i++;
			goto _iter_begin_2301a0877;
		}
		_iter_end_2301a0877:;
	}
}



inline void _22024b515_scope(_220249403_ExprOptimizer* _self_,jule::Ptr<_21eb1472a_Scope>& _19925_s) {
	jule::Ptr<_220242d25_ScopeOptimizer> _20017_scopt = static__220243342_new(_19925_s);
	_22024692d_optimize(_20017_scopt.ptr());
}



inline void _22024b834_func_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0b23b_FnCallExprModel> _20428_m) {
	static__220249975_optimize(_20428_m.get()._field_expr);
	_22024b1e6_args(&(*_self_), _20428_m.get()._field_args);
	if ((_20428_m.get()._field_except != nullptr)) {
		_22024b515_scope(&(*_self_), _20428_m.get()._field_except);
	}
}



inline void _22024bb53_slice(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0b68c_SliceExprModel> _21224_m) {
	_22024b1e6_args(&(*_self_), _21224_m.get()._field_elems);
}



inline void _22024be72_array(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0ec89_ArrayExprModel> _21624_m) {
	if ((_21624_m.get()._field_elems.len() == 2LL) && (_21624_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		jule::Any _21821_elem = _21624_m.get()._field_elems[0LL];
		static__220249975_optimize(_21821_elem);
		_21624_m.get()._field_elems[0LL]=_21821_elem;
	}
	_22024b1e6_args(&(*_self_), _21624_m.get()._field_elems);
}



inline void _22024c291_indexing(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0bbdc_IndexingExprModel> _22527_m) {
	static__220249975_optimize(_22527_m.get()._field_expr.get()._field_model);
	static__220249975_optimize(_22527_m.get()._field_index.get()._field_model);
	if ((!(_2359a563d_OPT_ACCESS))) {
		return;
	}
	jule::Bool _23113_array = (_21ec09424_arr(_22527_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);
	if (_23113_array && _21ebbda59_is_const(_22527_m.get()._field_index.ptr())) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_2202408e4_UnsafeIndexingExprModel>(_2202408e4_UnsafeIndexingExprModel(_22527_m)));
		return;
	}
	{
		auto &_match_expr{ _22527_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_2301ab5ca:;
			{
				jule::Ptr<_21eb75615_Var> _24117_i = _22527_m.get()._field_index.get()._field_model.operator jule::Ptr<_21eb75615_Var>();
				if (_24117_i.get()._field_mutable || (_24117_i.get()._field_iter_relation == nullptr)) {
					goto _match_end_2301ab564;
				}
				{
					auto &_match_expr{ _22527_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
						_case_begin_2301ad016:;
						{
							jule::Ptr<_21eb75615_Var> _24721_r = _22527_m.get()._field_expr.get()._field_model.operator jule::Ptr<_21eb75615_Var>();
							if (_24117_i.get()._field_iter_relation.get()._field_range == _24721_r) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_2202408e4_UnsafeIndexingExprModel>(_2202408e4_UnsafeIndexingExprModel(_22527_m)));
							}
						}
					}
					_match_end_2301ace06:;
				}
			}
		}
		_match_end_2301ab564:;
	}
}



inline void _22024c5b0_anon_func(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0c13d_AnonFnExprModel> _25828_m) {
	_22024b515_scope(&(*_self_), _25828_m.get()._field_func.get()._field_scope);
}



inline void _22024c8ce_map(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0cade_MapExprModel> _26222_m) {
	{
		auto &expr = _26222_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_2301b0d1b:;
		if (it != expr.end()) {
			jule::Ptr<_21dd0c58e_KeyValPairExprModel> _2301b0e3c_pair = *it;
			{
				static__220249975_optimize(_2301b0e3c_pair.get()._field_key);
				static__220249975_optimize(_2301b0e3c_pair.get()._field_val);
			}
			_iter_next_2301b0d1b:;
			++it;
			goto _iter_begin_2301b0d1b;
		}
		_iter_end_2301b0d1b:;
	}
}



inline void _22024cbed_slicing(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0d23d_SlicingExprModel> _26926_m) {
	static__220249975_optimize(_26926_m.get()._field_expr);
	static__220249975_optimize(_26926_m.get()._field_left);
	if (_26926_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		static__220249975_optimize(_26926_m.get()._field_right);
	}
}



inline void _22024d01c_trait_sub(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0d88c_TraitSubIdentExprModel> _27728_m) {
	static__220249975_optimize(_27728_m.get()._field_expr);
}



inline void _22024d33b_structure_sub(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd0e294_StructSubIdentExprModel> _28132_m) {
	static__220249975_optimize(_28132_m.get()._field_expr.get()._field_model);
}



inline void _22024d65a_common_sub(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd107c3_CommonSubIdentExprModel> _28529_m) {
	static__220249975_optimize(_28529_m.get()._field_expr);
}



inline void _22024d979_tuple(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd10b03_TupleExprModel> _28924_m) {
	{
		auto &expr = _28924_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_2301b62d8:;
		if (it != expr.end()) {
			jule::Ptr<_21ebbd053_Data> _2301b6409_d = *it;
			{
				static__220249975_optimize(_2301b6409_d.get()._field_model);
			}
			_iter_next_2301b62d8:;
			++it;
			goto _iter_begin_2301b62d8;
		}
		_iter_end_2301b62d8:;
	}
}



inline void _22024dc98_new_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd11e34_BuiltinNewCallExprModel> _29527_m) {
	if (_29527_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		static__220249975_optimize(_29527_m.get()._field_init);
	}
}



inline void _22024e0b7_out_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd110dc_BuiltinOutCallExprModel> _30127_m) {
	static__220249975_optimize(_30127_m.get()._field_expr);
}



inline void _22024e3d6_outln_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel> _30529_m) {
	static__220249975_optimize(_30529_m.get()._field_expr);
}



inline void _22024e705_panic_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel> _30929_m) {
	static__220249975_optimize(_30929_m.get()._field_expr);
}



inline void _22024ea24_assert_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel> _31330_m) {
	static__220249975_optimize(_31330_m.get()._field_expr);
}



inline void _22024ed43_error_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel> _31729_m) {
	static__220249975_optimize(_31729_m.get()._field_err);
}



inline void _220250162_make_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd13078_BuiltinMakeCallExprModel> _32128_m) {
	if (_32128_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		static__220249975_optimize(_32128_m.get()._field_len);
	}
	if (_32128_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		static__220249975_optimize(_32128_m.get()._field_cap);
	}
}



inline void _220250481_append_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd13540_BuiltinAppendCallExprModel> _33030_m) {
	static__220249975_optimize(_33030_m.get()._field_dest);
	static__220249975_optimize(_33030_m.get()._field_elements);
}



inline void _2202507a0_clone_call(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel> _33529_m) {
	static__220249975_optimize(_33529_m.get()._field_expr);
}



inline void _220250abe_sizeof(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd13d37_SizeofExprModel> _33925_m) {
	static__220249975_optimize(_33925_m.get()._field_expr);
}



inline void _220250ddd_alignof(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd144db_AlignofExprModel> _34326_m) {
	static__220249975_optimize(_34326_m.get()._field_expr);
}



inline void _22025120c_integrated_to_str(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd14b18_IntegratedToStrExprModel> _34736_m) {
	static__220249975_optimize(_34736_m.get()._field_expr);
}



inline void _22025152b_ternary(_220249403_ExprOptimizer* _self_,jule::Ptr<_21dd15146_TernaryExprModel> _35126_m) {
	static__220249975_optimize(_35126_m.get()._field_condition);
	static__220249975_optimize(_35126_m.get()._field_true_expr);
	static__220249975_optimize(_35126_m.get()._field_false_expr);
}



inline void _22025176d_do(_220249403_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_2301c3cc9:;
			{
				(*((*_self_)._field_model))=(*((*_self_)._field_model)).operator jule::Ptr<_21ebbd053_Data>().get()._field_model;
				_22025176d_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd08de8_BinopExprModel>>()) {
			_case_begin_2301c4093:;
			{
				_22024a14b_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd08de8_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd09349_UnaryExprModel>>()) {
			_case_begin_2301c4109:;
			{
				_22024a46a_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd09349_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd09c40_StructLitExprModel>>()) {
			_case_begin_2301c4181:;
			{
				_22024a789_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd09c40_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0a12a_AllocStructLitExprModel>>()) {
			_case_begin_2301c4208:;
			{
				_22024aaa8_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0a12a_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0a757_CastingExprModel>>()) {
			_case_begin_2301c4280:;
			{
				_22024adc7_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0a757_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0b23b_FnCallExprModel>>()) {
			_case_begin_2301c4307:;
			{
				_22024b834_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0b23b_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0b68c_SliceExprModel>>()) {
			_case_begin_2301c437e:;
			{
				_22024bb53_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0b68c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0ec89_ArrayExprModel>>()) {
			_case_begin_2301c4406:;
			{
				_22024be72_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0ec89_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0bbdc_IndexingExprModel>>()) {
			_case_begin_2301c447d:;
			{
				_22024c291_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0bbdc_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0c13d_AnonFnExprModel>>()) {
			_case_begin_2301c4505:;
			{
				_22024c5b0_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0c13d_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0cade_MapExprModel>>()) {
			_case_begin_2301c457c:;
			{
				_22024c8ce_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0cade_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0d23d_SlicingExprModel>>()) {
			_case_begin_2301c4604:;
			{
				_22024cbed_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0d23d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>>()) {
			_case_begin_2301c467b:;
			{
				_22024d01c_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
			_case_begin_2301c4703:;
			{
				_22024d33b_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd0e294_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd107c3_CommonSubIdentExprModel>>()) {
			_case_begin_2301c477a:;
			{
				_22024d65a_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd107c3_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd10b03_TupleExprModel>>()) {
			_case_begin_2301c4802:;
			{
				_22024d979_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd10b03_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>>()) {
			_case_begin_2301c4879:;
			{
				_22024e0b7_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>>()) {
			_case_begin_2301c4901:;
			{
				_22024e3d6_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd11e34_BuiltinNewCallExprModel>>()) {
			_case_begin_2301c4978:;
			{
				_22024dc98_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd11e34_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>>()) {
			_case_begin_2301c4a00:;
			{
				_22024e705_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel>>()) {
			_case_begin_2301c4a77:;
			{
				_22024ea24_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>>()) {
			_case_begin_2301c4aee:;
			{
				_22024ed43_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13078_BuiltinMakeCallExprModel>>()) {
			_case_begin_2301c4b76:;
			{
				_220250162_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd13078_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>>()) {
			_case_begin_2301c4bed:;
			{
				_220250481_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel>>()) {
			_case_begin_2301c4c75:;
			{
				_2202507a0_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13d37_SizeofExprModel>>()) {
			_case_begin_2301c4cec:;
			{
				_220250abe_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd13d37_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd144db_AlignofExprModel>>()) {
			_case_begin_2301c4d74:;
			{
				_220250ddd_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd144db_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd14b18_IntegratedToStrExprModel>>()) {
			_case_begin_2301c4deb:;
			{
				_22025120c_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd14b18_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd15146_TernaryExprModel>>()) {
			_case_begin_2301c4e73:;
			{
				_22025152b_ternary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_21dd15146_TernaryExprModel>());
			}
		}
		_match_end_2301c3c63:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _220249403_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220252b04_Optimizer> static__220252ebc_new(jule::Ptr<_21ccec4b4_IR>& _2228_ir) {
	return jule::new_ptr<_220252b04_Optimizer>(_220252b04_Optimizer(_2228_ir));
}



inline void _2202532db_optimize_global(_220252b04_Optimizer* _self_,jule::Ptr<_21eb75615_Var>& _2839_v) {
	if ((!(_2839_v.get()._field_cpp_linked))) {
		static__220249975_optimize(_2839_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _22025360a_optimize_function(_220252b04_Optimizer* _self_,jule::Ptr<_21dd19249_Fn>& _3441_func) {
	if (_3441_func.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _3441_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_2301de29a:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1cc42_FnIns> _2301de3cc_ins = *it;
			{
				jule::Ptr<_220242d25_ScopeOptimizer> _3921_so = static__220243342_new(_2301de3cc_ins.get()._field_scope);
				_22024692d_optimize(_3921_so.ptr());
			}
			_iter_next_2301de29a:;
			++it;
			goto _iter_begin_2301de29a;
		}
		_iter_end_2301de29a:;
	}
}



inline void _220253929_optimize_struct(_220252b04_Optimizer* _self_,jule::Ptr<_21dd03266_Struct>& _4439_s) {
	if (_4439_s.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _4439_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_2301e0c19:;
		if (it != expr.end()) {
			jule::Ptr<_21dd06742_StructIns> _2301e0d4b_ins = *it;
			{
				{
					auto &expr = _2301e0d4b_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_2301e14bc:;
					if (it != expr.end()) {
						jule::Ptr<_21dd05be7_FieldIns> _2301e1555_f = *it;
						{
							if ((_2301e1555_f.get()._field_default != nullptr)) {
								static__220249975_optimize(_2301e1555_f.get()._field_default.get()._field_model);
							}
						}
						_iter_next_2301e14bc:;
						++it;
						goto _iter_begin_2301e14bc;
					}
					_iter_end_2301e14bc:;
				}
				{
					auto &expr = _2301e0d4b_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_2301e1c81:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _2301e170e_m = *it;
						{
							_22025360a_optimize_function(&(*_self_), _2301e170e_m);
						}
						_iter_next_2301e1c81:;
						++it;
						goto _iter_begin_2301e1c81;
					}
					_iter_end_2301e1c81:;
				}
			}
			_iter_next_2301e0c19:;
			++it;
			goto _iter_begin_2301e0c19;
		}
		_iter_end_2301e0c19:;
	}
}



inline void _220253c48_optimize_globals(_220252b04_Optimizer* _self_,jule::Ptr<_21eb4d269_Package>& _6040_p) {
	{
		auto &expr = _6040_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2301e34be:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2301e35e0_f = *it;
			{
				{
					auto &expr = _2301e35e0_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_2301e3c94:;
					if (it != expr.end()) {
						jule::Ptr<_21eb75615_Var> _2301e3d2c_v = *it;
						{
							_2202532db_optimize_global(&(*_self_), _2301e3d2c_v);
						}
						_iter_next_2301e3c94:;
						++it;
						goto _iter_begin_2301e3c94;
					}
					_iter_end_2301e3c94:;
				}
			}
			_iter_next_2301e34be:;
			++it;
			goto _iter_begin_2301e34be;
		}
		_iter_end_2301e34be:;
	}
}



inline void _220254067_optimize_functions(_220252b04_Optimizer* _self_,jule::Ptr<_21eb4d269_Package>& _6842_p) {
	{
		auto &expr = _6842_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2301e4cd9:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2301e4e0a_f = *it;
			{
				{
					auto &expr = _2301e4e0a_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_2301e55ae:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _2301e5647_func = *it;
						{
							_22025360a_optimize_function(&(*_self_), _2301e5647_func);
						}
						_iter_next_2301e55ae:;
						++it;
						goto _iter_begin_2301e55ae;
					}
					_iter_end_2301e55ae:;
				}
			}
			_iter_next_2301e4cd9:;
			++it;
			goto _iter_begin_2301e4cd9;
		}
		_iter_end_2301e4cd9:;
	}
}



inline void _220254386_optimize_structs(_220252b04_Optimizer* _self_,jule::Ptr<_21eb4d269_Package>& _7640_p) {
	{
		auto &expr = _7640_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2301e658d:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2301e66ae_f = *it;
			{
				{
					auto &expr = _2301e66ae_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_2301e6d63:;
					if (it != expr.end()) {
						jule::Ptr<_21dd03266_Struct> _2301e6deb_s = *it;
						{
							_220253929_optimize_struct(&(*_self_), _2301e6deb_s);
						}
						_iter_next_2301e6d63:;
						++it;
						goto _iter_begin_2301e6d63;
					}
					_iter_end_2301e6d63:;
				}
			}
			_iter_next_2301e658d:;
			++it;
			goto _iter_begin_2301e658d;
		}
		_iter_end_2301e658d:;
	}
}



inline void _2202546a5_optimize_package(_220252b04_Optimizer* _self_,jule::Ptr<_21eb4d269_Package>& _8440_p) {
	_220253c48_optimize_globals(&(*_self_), _8440_p);
	_220254067_optimize_functions(&(*_self_), _8440_p);
	_220254386_optimize_structs(&(*_self_), _8440_p);
}



inline void _2202548e7_optimize(_220252b04_Optimizer* _self_) {
	{
		
		if (_2359a5ab1_OPT_COND || _2359a53eb_OPT_APPEND || _2359a5132_OPT_COPY) {
			_case_begin_2301e977d:;
			{
				goto _match_end_2301e922d;
			}
		}
		else {
			_case_begin_2301e92e9:;
			{
				return;
			}
		}
		_match_end_2301e922d:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_2301e9937:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2301e9d00_u = *it;
			{
				if ((!(_2301e9d00_u.get()._field_cpp_linked))) {
					_2202546a5_optimize_package(&(*_self_), _2301e9d00_u.get()._field_package);
				}
			}
			_iter_next_2301e9937:;
			++it;
			goto _iter_begin_2301e9937;
		}
		_iter_end_2301e9937:;
	}
	_2202546a5_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, _220252b04_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _220dc63c0_unix(_220dc5e6e_AbsTime* _self_) {
	jule::Bool _5417_leap = false;
	jule::U64 _5517_y = ((*_self_)._field_year - 1900LLU);
	jule::U64 _5617_m = ((*_self_)._field_month - 1LLU);
	if ((_5617_m >= 12LLU) || (_5617_m < 0LLU)) {
		jule::U64 _5821_adj = (_5617_m / 12LLU);
		_5617_m%=12LL;
		if ((_5617_m < 0LLU)) {
			(_5821_adj)--;
			_5617_m+=12LLU;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _220dcb518_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_220dcb947_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::U64>(86400LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((*_self_)._field_day - 1LLU)))));
	_6617_t+=static_cast<jule::U64>(3600LLU * (*_self_)._field_hour);
	_6617_t+=static_cast<jule::U64>(60LLU * (*_self_)._field_minute);
	_6617_t+=(*_self_)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, _220dc5e6e_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _220dc6722_Time static__220dc6b2e_unix(jule::U64 _8924_sec) {
	return _220dc6722_Time(_8924_sec);
}



inline _220dc6722_Time static__220dc6d60_now(void) {
	return static__220dc6b2e_unix(static_cast<jule::U64>(_220dcb12d_unix()));
}



inline jule::U64 _220dc7327_unix(_220dc6722_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _220dc7602_day(_220dc6722_Time* _self_) {
	return _220dc8812_abs(&(*_self_))._field_day;
}



inline jule::U64 _220dc78cc_month(_220dc6722_Time* _self_) {
	return _220dc8812_abs(&(*_self_))._field_month;
}



inline jule::U64 _220dc7ba7_year(_220dc6722_Time* _self_) {
	return _220dc8812_abs(&(*_self_))._field_year;
}



inline jule::U64 _220dc7e82_second(_220dc6722_Time* _self_) {
	return _220dc8812_abs(&(*_self_))._field_second;
}



inline jule::U64 _220dc825c_minute(_220dc6722_Time* _self_) {
	return _220dc8812_abs(&(*_self_))._field_minute;
}



inline jule::U64 _220dc8537_hour(_220dc6722_Time* _self_) {
	return _220dc8812_abs(&(*_self_))._field_hour;
}



inline _220dc5e6e_AbsTime _220dc8812_abs(_220dc6722_Time* _self_) {
	jule::U64 _12513_secs = ((*_self_)._field_sec - 951868800LLU);
	jule::U64 _12617_days = (_12513_secs / 86400LLU);
	jule::U64 _12717_rem_secs = (_12513_secs % 86400LL);
	if ((_12717_rem_secs < 0LLU)) {
		_12717_rem_secs+=86400LLU;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = (_12617_days / 146097LLU);
	jule::U64 _13417_rem_days = (_12617_days % 146097LL);
	if ((_13417_rem_days < 0LLU)) {
		_13417_rem_days+=146097LLU;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = (_13417_rem_days / 36524LLU);
	if ((_14017_c_cycles == 4LLU)) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_14017_c_cycles * 36524LLU));
	jule::U64 _14617_q_cycles = (_13417_rem_days / 1461LLU);
	if ((_14617_q_cycles == 25LLU)) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_14617_q_cycles * 1461LLU));
	jule::U64 _15217_rem_years = (_13417_rem_days / 365LLU);
	if ((_15217_rem_years == 4LLU)) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_15217_rem_years * 365LLU));
	jule::U64 _15813_leap = static_cast<jule::U64>(((((_15217_rem_years == 0LLU) && ((_14617_q_cycles > 0LLU) || (_14017_c_cycles == 0LLU)))) ? (1LLU) : (0LLU)));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LLU) + 28LLU) + _15813_leap;
	if (_15917_y_day >= static_cast<jule::U64>(static_cast<jule::U64>(365LLU + _15813_leap))) {
		_15917_y_day-=static_cast<jule::U64>(365LLU + _15813_leap);
	}
	jule::U64 _16417_months = 0LLU;
	for (; _220dc526a_MDAYS[static_cast<jule::I64>(_16417_months)] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_220dc526a_MDAYS[static_cast<jule::I64>(_16417_months)];
		}
	_iter_next_230223851:;
	}
	_iter_end_230223851:;
	_220dc5e6e_AbsTime _16917_t = _220dc5e6e_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_15217_rem_years + static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _14617_q_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(100LLU * _14017_c_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(400LLU * _13317_qc_cycles)))) + 100LLU));
	_16917_t._field_month=static_cast<jule::U64>((_16417_months + 2LLU));
	if ((_16917_t._field_month >= 12LLU)) {
		_16917_t._field_month-=12LLU;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LLU;
	_16917_t._field_year+=1900LLU;
	_16917_t._field_day=static_cast<jule::U64>((_13417_rem_days + 1LLU));
	_16917_t._field_week_day=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(3LLU + _12617_days))) % 7LL));
	if ((_16917_t._field_week_day < 0LLU)) {
		_16917_t._field_week_day+=7LLU;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>((_12717_rem_secs / 3600LLU));
	_16917_t._field_minute=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((_12717_rem_secs / 60LLU))) % 60LL));
	_16917_t._field_second=static_cast<jule::U64>((_12717_rem_secs % 60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, _220dc6722_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 static__220dc9109_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>((_22231_d * 1LL));
}



inline jule::I64 static__220dc9417_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>((_22732_d * 1000LL));
}



inline jule::I64 static__220dc9725_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>((_23232_d * 1000000LL));
}



inline jule::I64 static__220dc9a33_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>((_23727_d * 1000000000LL));
}



inline jule::I64 static__220dc9d41_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>((_24227_d * 60000000000LL));
}



inline jule::I64 static__220dca14e_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>((_24725_d * 3600000000000LL));
}







std::ostream &operator<<(std::ostream &_Stream, _220dc8b64_Duration _Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200e5326_TestCoder> static__220143c59_new(jule::Ptr<_220d8cc38_ObjectCoder>& _2928_oc) {
	return jule::new_ptr<_2200e5326_TestCoder>(_2200e5326_TestCoder(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Ptr<_21dd19249_Fn>(),jule::Ptr<_21dd19249_Fn>(),_2928_oc));
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _220143dbe_find_testing_package(_2200e5326_TestCoder* _self_) {
	{
		auto &expr = (*_self_)._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_2302638a2:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _23026394b_imp = *it;
			{
				if ((_23026394b_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _23026394b_imp;
				}
			}
			_iter_next_2302638a2:;
			++it;
			goto _iter_begin_2302638a2;
		}
		_iter_end_2302638a2:;
	}
	return nullptr;
}



inline void _2201441aa_append_test(_2200e5326_TestCoder* _self_,jule::Str& _4435_obj,jule::Ptr<_21dd1cc42_FnIns> _4449_f) {
	_4435_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_4435_obj+=_2201448b4_call_tm_reset(&(*_self_));
	_4435_obj+=jule::Str(";\n", 2);
	_4435_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35);
	_4435_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("jule::outln(", 12);
	_4435_obj+=_22025ee85_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4449_f.get()._field_decl.get()._field_ident));
	_4435_obj+=jule::Str(");\n", 3);
	_4435_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_4435_obj+=static__220264e35_func_ins(_4449_f);
	_4435_obj+=jule::Str("(_t);\n", 6);
	_4435_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("post_test();\n", 13);
}



inline void _220144496_append_package_tests(_2200e5326_TestCoder* _self_,jule::Str& _6144_obj,jule::Ptr<_21eb4d269_Package>& _6159_p) {
	{
		auto &expr = _6159_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_23026a018:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _23026a117_file = *it;
			{
				{
					auto &expr = _23026a117_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_23026a7ee:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _23026a887_f = *it;
						{
							if (_220dd6622_has_directive(_23026a887_f.get()._field_directives,jule::Str("test", 4))) {
								_2201441aa_append_test(&(*_self_), _6144_obj,_23026a887_f.get()._field_instances[0LL]);
							}
						}
						_iter_next_23026a7ee:;
						++it;
						goto _iter_begin_23026a7ee;
					}
					_iter_end_23026a7ee:;
				}
			}
			_iter_next_23026a018:;
			++it;
			goto _iter_begin_23026a018;
		}
		_iter_end_23026a018:;
	}
}



inline jule::Bool _220144683_ready_testing_package(_2200e5326_TestCoder* _self_) {
	jule::Ptr<_21eb49c8d_ImportInfo> _7217_p = _220143dbe_find_testing_package(&(*_self_));
	if ((_7217_p == nullptr)) {
		return false;
	}
	(*_self_)._field_t=_21eb4b597_find_struct(_7217_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	(*_self_)._field_tm_reset=_21dd07963_find_method((*_self_)._field_t.ptr(), jule::Str("reset", 5),false);
	(*_self_)._field_tm_failed=_21dd07963_find_method((*_self_)._field_t.ptr(), jule::Str("failed", 6),false);
	(*_self_)._field_tm_skipped=_21dd07963_find_method((*_self_)._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline jule::Str _2201448b4_call_tm_reset(_2200e5326_TestCoder* _self_) {
	jule::Str _8817_obj = static__220264b27_func((*_self_)._field_tm_reset);
	_8817_obj+=jule::Str("(_t)", 4);
	return _8817_obj;
}



inline jule::Str _220144b5b_call_tm_failed(_2200e5326_TestCoder* _self_) {
	jule::Str _9417_obj = static__220264b27_func((*_self_)._field_tm_failed);
	_9417_obj+=jule::Str("(_t)", 4);
	return _9417_obj;
}



inline jule::Str _220144e36_call_tm_skipped(_2200e5326_TestCoder* _self_) {
	jule::Str _10017_obj = static__220264b27_func((*_self_)._field_tm_skipped);
	_10017_obj+=jule::Str("(_t)", 4);
	return _10017_obj;
}



inline void _220145255_serialize(_2200e5326_TestCoder* _self_,jule::Str& _10737_obj) {
	_10737_obj+=jule::Str("\nvoid test_point(void) {\n", 25);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	if ((!(_220144683_ready_testing_package(&(*_self_))))) {
		_10737_obj+=jule::Str("}", 1);
		_220d82cb6_done_indent((*_self_)._field_oc.ptr());
		return;
	}
	_10737_obj+=static__220dd83c1_as_sptr(static__220dda769_structure_ins((*_self_)._field_t));
	_10737_obj+=jule::Str(" _t = jule::new_ptr<", 20);
	_10737_obj+=static__220dda769_structure_ins((*_self_)._field_t);
	_10737_obj+=jule::Str(">(); _t.ref = nullptr;\n", 23);
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47);
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("auto post_test = [&](void) {\n", 29);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("++total;\n", 9);
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("if (", 4);
	_10737_obj+=_220144b5b_call_tm_failed(&(*_self_));
	_10737_obj+=jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60);
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("else if (", 9);
	_10737_obj+=_220144e36_call_tm_skipped(&(*_self_));
	_10737_obj+=jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62);
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("};\n", 3);
	_220144496_append_package_tests(&(*_self_), _10737_obj,(*_self_)._field_oc.get()._field_ir.get()._field_main);
	_10737_obj+=jule::Str("\n\n", 2);
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154);
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("if (failed != 0) std::exit(1);\n", 31);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("}\n", 2);
}







std::ostream &operator<<(std::ostream &_Stream, _2200e5326_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220151b8a_ScopeCoder> static__220198176_new(jule::Ptr<_220d8cc38_ObjectCoder>& _4824_oc) {
	return jule::new_ptr<_220151b8a_ScopeCoder>(_220151b8a_ScopeCoder(_4824_oc));
}



inline jule::Str _220148b2c_range_index_iter(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2cb1c_RangeIter>& _5440_it) {
	jule::Str _5513_begin = static__220266596_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	jule::Str _5613_next = static__220266bb2_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	jule::Str _5817_obj = jule::Str("{\n", 2);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("auto ", 5);
	if (_2359a5132_OPT_COPY && _2201e48dc_is_copy_optimizable(_5440_it.get()._field_expr)) {
		_5817_obj+=jule::Str("&", 1);
	}
	_5817_obj+=jule::Str("expr = ", 7);
	_5817_obj+=_22025d1d6_model((*_self_)._field_oc.get()._field_ec.ptr(), _5440_it.get()._field_expr.get()._field_model);
	_5817_obj+=jule::Str(";\n", 2);
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_5513_begin;
	_5817_obj+=jule::Str(":;\n", 3);
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	if ((_5440_it.get()._field_key_a != nullptr)) {
		_5817_obj+=_220dcd1c9_var_init_expr((*_self_)._field_oc.ptr(), _5440_it.get()._field_key_a,jule::Str("it - expr.begin()", 17));
		_5817_obj+=jule::Str("\n", 1);
		_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	}
	if ((_5440_it.get()._field_key_b != nullptr)) {
		if (_2359a5132_OPT_COPY) {
			_5440_it.get()._field_key_b.get()._field_reference=_2201e5cc8_is_iter_copy_optimizable(_5440_it.get()._field_expr,_5440_it.get()._field_key_b);
		}
		_5817_obj+=_220dcd1c9_var_init_expr((*_self_)._field_oc.ptr(), _5440_it.get()._field_key_b,jule::Str("*it", 3));
		_5817_obj+=jule::Str("\n", 1);
		_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	}
	_5817_obj+=_2201e2c5e_scope(&(*_self_), _5440_it.get()._field_scope);
	_5817_obj+=jule::Str("\n", 1);
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_5613_next;
	_5817_obj+=jule::Str(":;\n", 3);
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("++it;\n", 6);
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	if ((_5440_it.get()._field_key_a != nullptr)) {
		_5817_obj+=static__220266288_var(_5440_it.get()._field_key_a);
		_5817_obj+=jule::Str("++;\n", 4);
		_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	}
	_5817_obj+=jule::Str("goto ", 5);
	_5817_obj+=_5513_begin;
	_5817_obj+=jule::Str(";\n", 2);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("}\n", 2);
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=static__2202668a4_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	_5817_obj+=jule::Str(":;\n", 3);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("}", 1);
	return _5817_obj;
}



inline jule::Str _2201a76c4_range_hashmap_iter(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2cb1c_RangeIter>& _12442_it) {
	jule::Str _12513_begin = static__220266596_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	jule::Str _12613_next = static__220266bb2_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	jule::Str _12817_obj = jule::Str("{\n", 2);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("auto ", 5);
	if (_2359a5132_OPT_COPY && _2201e48dc_is_copy_optimizable(_12442_it.get()._field_expr)) {
		_12817_obj+=jule::Str("&", 1);
	}
	_12817_obj+=jule::Str("expr = ", 7);
	_12817_obj+=_22025d1d6_model((*_self_)._field_oc.get()._field_ec.ptr(), _12442_it.get()._field_expr.get()._field_model);
	_12817_obj+=jule::Str(";\n", 2);
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_12513_begin;
	_12817_obj+=jule::Str(":;\n", 3);
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	if ((_12442_it.get()._field_key_a != nullptr)) {
		if (_2359a5132_OPT_COPY) {
			_12442_it.get()._field_key_a.get()._field_reference=_2201e5cc8_is_iter_copy_optimizable(_12442_it.get()._field_expr,_12442_it.get()._field_key_a);
		}
		_12817_obj+=_220dcd1c9_var_init_expr((*_self_)._field_oc.ptr(), _12442_it.get()._field_key_a,jule::Str("it->first", 9));
		_12817_obj+=jule::Str("\n", 1);
		_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	}
	if ((_12442_it.get()._field_key_b != nullptr)) {
		if (_2359a5132_OPT_COPY) {
			_12442_it.get()._field_key_b.get()._field_reference=_2201e5cc8_is_iter_copy_optimizable(_12442_it.get()._field_expr,_12442_it.get()._field_key_b);
		}
		_12817_obj+=_220dcd1c9_var_init_expr((*_self_)._field_oc.ptr(), _12442_it.get()._field_key_b,jule::Str("it->second", 10));
		_12817_obj+=jule::Str("\n", 1);
		_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	}
	_12817_obj+=_2201e2c5e_scope(&(*_self_), _12442_it.get()._field_scope);
	_12817_obj+=jule::Str("\n", 1);
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_12613_next;
	_12817_obj+=jule::Str(":;\n", 3);
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("++it;\n", 6);
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("goto ", 5);
	_12817_obj+=_12513_begin;
	_12817_obj+=jule::Str(";\n", 2);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("}\n", 2);
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=static__2202668a4_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	_12817_obj+=jule::Str(":;\n", 3);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("}", 1);
	return _12817_obj;
}



inline jule::Str _22014a9db_if_case(_220151b8a_ScopeCoder* _self_,jule::Ptr<_235bb50ab_If> _19230_i) {
	jule::Str _19317_obj = jule::Str();
	if (_19230_i.get()._field_expr != jule::Any(jule::Any(nullptr))) {
		_19317_obj+=jule::Str("if (", 4);
		_19317_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _19230_i.get()._field_expr);
		_19317_obj+=jule::Str(") ", 2);
	}
	_19317_obj+=_2201e2c5e_scope(&(*_self_), _19230_i.get()._field_scope);
	return _19317_obj;
}



inline jule::Str _22014d23b_conditional(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2c4ac_Conditional> _20334_c) {
	jule::Str _20417_obj = jule::Str();
	{
		auto &expr = _20334_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_2302aa168:;
		if (it != expr.end()) {
			jule::Ptr<_235bb50ab_If> _2302aa234_elif = *it;
			{
				if ((_2302aa234_elif == nullptr)) {
					goto _iter_next_2302aa168;
				}
				if ((_20417_obj.len() != 0LL)) {
					_20417_obj+=jule::Str(" else ", 6);
				}
				_20417_obj+=_22014a9db_if_case(&(*_self_), _2302aa234_elif);
			}
			_iter_next_2302aa168:;
			++it;
			goto _iter_begin_2302aa168;
		}
		_iter_end_2302aa168:;
	}
	if ((_20334_c.get()._field_default != nullptr)) {
		if ((_20417_obj.len() != 0LL)) {
			_20417_obj+=jule::Str(" else ", 6);
		}
		_20417_obj+=_2201e2c5e_scope(&(*_self_), _20334_c.get()._field_default.get()._field_scope);
	}
	return _20417_obj;
}



inline jule::Str _22019c60e_inf_iter(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2c6cc_InfIter> _22331_it) {
	jule::Str _22417_obj = jule::Str("for (;;) {\n", 11);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_22417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_22417_obj+=_2201e2c5e_scope(&(*_self_), _22331_it.get()._field_scope);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_22417_obj+=jule::Str("\n", 1);
	_22417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_22417_obj+=static__220266bb2_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_22331_it)));
	_22417_obj+=jule::Str(":;\n", 3);
	_22417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_22417_obj+=jule::Str("}\n", 2);
	_22417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_22417_obj+=static__2202668a4_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_22331_it)));
	_22417_obj+=jule::Str(":;", 2);
	return _22417_obj;
}



inline jule::Str _2201a1723_while_iter(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2c8ec_WhileIter> _24433_it) {
	jule::Str _24517_obj = jule::Str();
	if ((_24433_it.get()._field_expr != jule::Any(jule::Any(nullptr))) && (_24433_it.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_24517_obj+=jule::Str("while (", 7);
		_24517_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24433_it.get()._field_expr);
		_24517_obj+=jule::Str(") {\n", 4);
	} else {
		_24517_obj+=jule::Str("for (; ", 7);
		if (_24433_it.get()._field_expr != jule::Any(jule::Any(nullptr))) {
			_24517_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24433_it.get()._field_expr);
		}
		_24517_obj+=jule::Str("; ", 2);
		if (_24433_it.get()._field_next != jule::Any(jule::Any(nullptr))) {
			jule::Str _25721_st = _2201dd287_st(&(*_self_), _24433_it.get()._field_next);
			_24517_obj+=_25721_st.slice(0LL,(_25721_st.len() - 1LL));
		}
		_24517_obj+=jule::Str(") {\n", 4);
	}
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_2201e2c5e_scope(&(*_self_), _24433_it.get()._field_scope);
	_24517_obj+=jule::Str("\n", 1);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_24517_obj+=static__220266bb2_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_24433_it)));
	_24517_obj+=jule::Str(":;\n", 3);
	_24517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_24517_obj+=jule::Str("}\n", 2);
	_24517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_24517_obj+=static__2202668a4_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_24433_it)));
	_24517_obj+=jule::Str(":;", 2);
	return _24517_obj;
}



inline jule::Str _2201a3b32_range_iter(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2cb1c_RangeIter> _28033_it) {
	{
		
		if ((_21ec096ee_slc(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2302bc4cc:;
			{
				return _220148b2c_range_index_iter(&(*_self_), _28033_it);
			}
		}
		else if ((_21ec09424_arr(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2302bbe7c:;
			{
				return _220148b2c_range_index_iter(&(*_self_), _28033_it);
			}
		}
		else if ((_21ec0a359_map(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2302bbee3:;
			{
				return _2201a76c4_range_hashmap_iter(&(*_self_), _28033_it);
			}
		}
		else {
			_case_begin_2302bb872:;
			{
				return _220148b2c_range_index_iter(&(*_self_), _28033_it);
			}
		}
		_match_end_2302bb7c8:;
	}
}



inline jule::Str _2201b78b0_cont(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2cd3c_ContSt> _29319_c) {
	jule::Str _29417_obj = jule::Str("goto ", 5);
	_29417_obj+=static__220266bb2_iter_next(_29319_c.get()._field_it);
	_29417_obj+=jule::Str(";", 1);
	return _29417_obj;
}



inline jule::Str _2201c7eb9_label(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2d27c_Label> _30020_l) {
	return (static__220266ec0_label(_30020_l.get()._field_ident) + jule::Str(":;", 2));
}



inline jule::Str _2201cd5da_goto_st(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2d49c_GotoSt> _30422_gt) {
	jule::Str _30517_obj = jule::Str("goto ", 5);
	_30517_obj+=static__220266ec0_label(_30422_gt.get()._field_ident);
	_30517_obj+=jule::Str(";", 1);
	return _30517_obj;
}



inline jule::Str _2201d45ad_postfix(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2d6bc_Postfix> _31130_p) {
	jule::Str _31217_obj = jule::Str("(", 1);
	_31217_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31130_p.get()._field_expr);
	_31217_obj+=jule::Str(")", 1);
	_31217_obj+=_31130_p.get()._field_op;
	_31217_obj+=jule::Str(";", 1);
	return _31217_obj;
}



inline jule::Str _220233024_assign(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2d8dc_Assign> _32029_a) {
	jule::Str _32117_obj = _22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32029_a.get()._field_l.get()._field_model);
	_32117_obj+=_32029_a.get()._field_op._field_kind;
	_32117_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32029_a.get()._field_r.get()._field_model);
	_32117_obj+=jule::Str(";", 1);
	return _32117_obj;
}



inline jule::Str _220236478_multi_assign(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2db0c_MultiAssign> _32835_a) {
	jule::Str _32917_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _32835_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_2302c83d9:;
		if (it != expr.end()) {
			jule::Any _2302c84a5_l = *it;
			{
				_32917_obj+=(((_2302c84a5_l == jule::Any(jule::Any(nullptr)))) ? (jule::Str("std::ignore", 11)) : (_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _2302c84a5_l)));
				_32917_obj+=jule::Str(",", 1);
			}
			_iter_next_2302c83d9:;
			++it;
			goto _iter_begin_2302c83d9;
		}
		_iter_end_2302c83d9:;
	}
	(_32917_obj).mut_slice(0LL,_32917_obj.len() - 1LL);
	_32917_obj+=jule::Str(") = ", 4);
	_32917_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32835_a.get()._field_r);
	_32917_obj+=jule::Str(";", 1);
	return _32917_obj;
}



inline jule::Str _2201aadae_match_expr(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2dd2c_Match>& _34334_m) {
	if ((!(_21ebbda59_is_const(_34334_m.get()._field_expr.ptr())))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_21eaa292c_is_bool(_34334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_21ea9ed7a_read_bool(_34334_m.get()._field_expr.get()._field_constant.ptr())))) {
		return _22025d1d6_model((*_self_)._field_oc.get()._field_ec.ptr(), _34334_m.get()._field_expr.get()._field_model);
	}
	return jule::Str();
}



inline jule::Str _2201cad35_case(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2dd2c_Match> _35327_m,jule::Ptr<_21eb2e27d_Case> _35342_c) {
	jule::Str _35417_obj = jule::Str();
	if ((_35342_c.get()._field_exprs.len() != 0LL) && (!(_21eb04b38_is_generic_type_match(_35327_m.ptr())))) {
		if ((_35327_m.get()._field_cases.len() > 0LL) && (_35327_m.get()._field_cases[0LL] == _35342_c)) {
			_35417_obj+=jule::Str("if (", 4);
		} else {
			_35417_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = _35342_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_2302d106d:;
			if (it != expr.end()) {
				jule::I64 _2302d0996_i = it - expr.begin();
				jule::Ptr<_21ebbd053_Data> _2302d10d4_expr = *it;
				{
					{
						
						if ((!(_35327_m.get()._field_type_match))) {
							_case_begin_2302d29ba:;
							{
								jule::Str _36525_case_expr = _2201aadae_match_expr(&(*_self_), _35327_m);
								if (_21ebbde11_good_operand(_35327_m.get()._field_expr.ptr(), _2302d10d4_expr)) {
									if ((_36525_case_expr.len() != 0LL)) {
										_35417_obj+=_36525_case_expr;
										_35417_obj+=jule::Str(" == ", 4);
									}
									_35417_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _2302d10d4_expr.get()._field_model);
								} else {
									_35417_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _2302d10d4_expr.get()._field_model);
									if ((_36525_case_expr.len() != 0LL)) {
										_35417_obj+=jule::Str(" == ", 4);
										_35417_obj+=_36525_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_2302d16de:;
							{
								_35417_obj+=jule::Str("_match_expr", 11);
								_35417_obj+=jule::Str(".type_is<", 9);
								_35417_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _2302d10d4_expr.get()._field_model);
								_35417_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_2302d1623:;
					}
					if ((_2302d0996_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_35342_c.get()._field_exprs.len()))) {
						_35417_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_2302d106d:;
				++it;
				_2302d0996_i++;
				goto _iter_begin_2302d106d;
			}
			_iter_end_2302d106d:;
		}
		_35417_obj+=jule::Str(") ", 2);
	} else if ((_35327_m.get()._field_default == _35342_c) && (_35327_m.get()._field_cases.len() != 0LL)) {
		_35417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
		_35417_obj+=jule::Str("else ", 5);
	}
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_35417_obj+=jule::Str("{\n", 2);
	_35417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_35417_obj+=static__2202675db_case_begin(static_cast<jule::U64>(static_cast<jule::U64>(_35342_c)));
	_35417_obj+=jule::Str(":;\n", 3);
	if ((_35342_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_35417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
		_35417_obj+=_2201e2c5e_scope(&(*_self_), _35342_c.get()._field_scope);
		_35417_obj+=jule::Str("\n", 1);
	}
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_35417_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_35417_obj+=jule::Str("}", 1);
	return _35417_obj;
}



inline jule::Str _2201eeb17_match_st(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2dd2c_Match> _41531_m) {
	if ((_41531_m.get()._field_cases.len() == 0LL) && (_41531_m.get()._field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _42013_generic_type_match = _21eb04b38_is_generic_type_match(_41531_m.ptr());
	if (_42013_generic_type_match && ((_41531_m.get()._field_default == nullptr) || (_41531_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42517_obj = jule::Str("{\n", 2);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_42517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	if ((!(_42013_generic_type_match)) && (!(_21ebbda59_is_const(_41531_m.get()._field_expr.ptr())))) {
		if (_2359a5132_OPT_COPY && _2201e48dc_is_copy_optimizable(_41531_m.get()._field_expr)) {
			_42517_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42517_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42517_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _41531_m.get()._field_expr.get()._field_model);
		_42517_obj+=jule::Str(" };\n", 4);
		_42517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	}
	if ((_41531_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _41531_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_2302e2ba6:;
			if (it != expr.end()) {
				jule::Ptr<_21eb2e27d_Case> _2302e2da4_c = *it;
				{
					if ((_2302e2da4_c == nullptr)) {
						goto _iter_next_2302e2ba6;
					}
					_42517_obj+=jule::Str("\n", 1);
					_42517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
					_42517_obj+=_2201cad35_case(&(*_self_), _41531_m,_2302e2da4_c);
				}
				_iter_next_2302e2ba6:;
				++it;
				goto _iter_begin_2302e2ba6;
			}
			_iter_end_2302e2ba6:;
		}
	}
	if ((_41531_m.get()._field_default != nullptr)) {
		_42517_obj+=jule::Str("\n", 1);
		_42517_obj+=_2201cad35_case(&(*_self_), _41531_m,_41531_m.get()._field_default);
	}
	_42517_obj+=jule::Str("\n", 1);
	_42517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_42517_obj+=static__2202672cd_match_end(static_cast<jule::U64>(static_cast<jule::U64>(_41531_m)));
	_42517_obj+=jule::Str(":;", 2);
	_42517_obj+=jule::Str("\n", 1);
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_42517_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_42517_obj+=jule::Str("}", 1);
	return _42517_obj;
}



inline jule::Str _220153c03_fall_st(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2e49d_FallSt> _47322_f) {
	jule::Str _47417_obj = jule::Str("goto ", 5);
	_47417_obj+=static__2202675db_case_begin(_47322_f.get()._field_dest_case);
	_47417_obj+=jule::Str(";", 1);
	return _47417_obj;
}



inline jule::Str _2201745a3_break_st(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2d05c_BreakSt> _48023_b) {
	jule::Str _48117_obj = jule::Str("goto ", 5);
	if ((_48023_b.get()._field_it != 0LLU)) {
		_48117_obj+=static__2202668a4_iter_end(_48023_b.get()._field_it);
	} else {
		_48117_obj+=static__2202672cd_match_end(_48023_b.get()._field_mtch);
	}
	_48117_obj+=jule::Str(";", 1);
	return _48117_obj;
}



inline jule::Str _220177d8c_ret_with_vars(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2e6bd_RetSt> _49136_r) {
	jule::Str _49217_obj = jule::Str();
	{
		auto &expr = _49136_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_2302eb3da:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> _2302eb4a6_v = *it;
			{
				if (_21c62abc2_is_ignore_ident(_2302eb4a6_v.get()._field_ident)) {
					_49217_obj+=_22025dcec_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _2302eb4a6_v.get()._field_kind.get()._field_kind);
				} else {
					_49217_obj+=static__220266288_var(_2302eb4a6_v);
				}
				_49217_obj+=jule::Str(",", 1);
			}
			_iter_next_2302eb3da:;
			++it;
			goto _iter_begin_2302eb3da;
		}
		_iter_end_2302eb3da:;
	}
	(_49217_obj).mut_slice(0LL,_49217_obj.len() - 1LL);
	jule::Str _50417_oobj = jule::Str("return ", 7);
	if (_49136_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50417_oobj+=jule::Str("jule::Exceptional<", 18);
		_50417_oobj+=static__220ddc1d8_kind(_49136_r.get()._field_func.get()._field_result);
		_50417_oobj+=jule::Str(">(jule::Any(), ", 15);
	}
	if ((_49136_r.get()._field_vars.len() > 1LL)) {
		_50417_oobj+=jule::Str("std::make_tuple(", 16);
		_50417_oobj+=_49217_obj;
		_50417_oobj+=jule::Str(")", 1);
	} else {
		_50417_oobj+=_49217_obj;
	}
	if (_49136_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50417_oobj+=jule::Str(")", 1);
	}
	_50417_oobj+=jule::Str(";", 1);
	return _50417_oobj;
}



inline jule::Str _22018b400_ret_tuple(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2e6bd_RetSt> _52832_r) {
	jule::Slice<jule::Ptr<_21ebbd053_Data>> _52917_datas = _52832_r.get()._field_expr.operator jule::Ptr<_21dd10b03_TupleExprModel>().get()._field_datas;
	jule::Str _53017_obj = jule::Str();
	{
		auto &expr = _52832_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_230302e08:;
		if (it != expr.end()) {
			jule::I64 _230303106_i = it - expr.begin();
			jule::Ptr<_21eb75615_Var> _2303032d2_v = *it;
			{
				if (_21c62abc2_is_ignore_ident(_2303032d2_v.get()._field_ident)) {
					goto _iter_next_230302e08;
				}
				jule::Any _53621_model = _52917_datas[_230303106_i].get()._field_model;
				if (_53621_model == jule::Any(jule::Any(_2303032d2_v))) {
					goto _iter_next_230302e08;
				}
				jule::Str _54117_ident = static__220266288_var(_2303032d2_v);
				_53017_obj+=_54117_ident;
				_53017_obj+=jule::Str(" = ", 3);
				_53017_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _53621_model);
				_53017_obj+=jule::Str(";\n", 2);
				_53017_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
			}
			_iter_next_230302e08:;
			++it;
			_230303106_i++;
			goto _iter_begin_230302e08;
		}
		_iter_end_230302e08:;
	}
	jule::Str _54917_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _52917_datas;
		auto it = expr.begin();
		_iter_begin_230302248:;
		if (it != expr.end()) {
			jule::I64 _2303035e0_i = it - expr.begin();
			jule::Ptr<_21ebbd053_Data> _2303065b0_d = *it;
			{
				jule::Ptr<_21eb75615_Var> _55121_v = _52832_r.get()._field_vars[_2303035e0_i];
				if (_21c62abc2_is_ignore_ident(_55121_v.get()._field_ident)) {
					_54917_oobj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _2303065b0_d.get()._field_model);
				} else {
					_54917_oobj+=static__220266288_var(_55121_v);
				}
				_54917_oobj+=jule::Str(",", 1);
			}
			_iter_next_230302248:;
			++it;
			_2303035e0_i++;
			goto _iter_begin_230302248;
		}
		_iter_end_230302248:;
	}
	(_54917_oobj).mut_slice(0LL,_54917_oobj.len() - 1LL);
	_54917_oobj+=jule::Str(")", 1);
	if (_52832_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_53017_obj+=jule::Str("return jule::Exceptional<", 25);
		_53017_obj+=static__220ddc1d8_kind(_52832_r.get()._field_func.get()._field_result);
		_53017_obj+=jule::Str(">(jule::Any(),", 14);
		_53017_obj+=_54917_oobj;
		_53017_obj+=jule::Str(")", 1);
	} else {
		_53017_obj+=jule::Str("return ", 7);
		_53017_obj+=_54917_oobj;
	}
	_53017_obj+=jule::Str(";", 1);
	return _53017_obj;
}



inline jule::Str _22018c0b0_ret_with_exprs(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2e6bd_RetSt> _57837_r) {
	if ((_57837_r.get()._field_vars.len() > 1LL)) {
		return _22018b400_ret_tuple(&(*_self_), _57837_r);
	}
	if ((_57837_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_21eb75615_Var> _58521_v = _57837_r.get()._field_vars[0LL];
		if ((!(_21c62abc2_is_ignore_ident(_58521_v.get()._field_ident))) && (_57837_r.get()._field_expr != jule::Any(jule::Any(_58521_v)))) {
			jule::Str _58721_ident = static__220266288_var(_58521_v);
			jule::Str _58825_obj = _58721_ident;
			_58825_obj+=jule::Str(" = ", 3);
			_58825_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _57837_r.get()._field_expr);
			_58825_obj+=jule::Str(";\n", 2);
			_58825_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
			if (_57837_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_58825_obj+=jule::Str("return jule::Exceptional<", 25);
				_58825_obj+=static__220ddc1d8_kind(_57837_r.get()._field_func.get()._field_result);
				_58825_obj+=jule::Str(">(jule::Any(),", 14);
				_58825_obj+=_58721_ident;
				_58825_obj+=jule::Str(")", 1);
			} else {
				_58825_obj+=jule::Str("return ", 7);
				_58825_obj+=_58721_ident;
			}
			_58825_obj+=jule::Str(";", 1);
			return _58825_obj;
		}
	}
	if (_57837_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		jule::Str _60921_obj = jule::Str("return jule::Exceptional<", 25);
		_60921_obj+=static__220ddc1d8_kind(_57837_r.get()._field_func.get()._field_result);
		_60921_obj+=jule::Str(">(jule::Any(),", 14);
		_60921_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _57837_r.get()._field_expr);
		_60921_obj+=jule::Str(")", 1);
		_60921_obj+=jule::Str(";", 1);
		return _60921_obj;
	}
	jule::Str _61817_obj = jule::Str("return ", 7);
	_61817_obj+=_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), _57837_r.get()._field_expr);
	_61817_obj+=jule::Str(";", 1);
	return _61817_obj;
}



inline jule::Str _2201c92c8_ret_st(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb2e6bd_RetSt> _62429_r) {
	if ((_62429_r.get()._field_expr == jule::Any(jule::Any(nullptr))) && (_62429_r.get()._field_vars.len() == 0LL)) {
		if (_62429_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_62429_r.get()._field_expr == jule::Any(jule::Any(nullptr))) {
		return _220177d8c_ret_with_vars(&(*_self_), _62429_r);
	}
	return _22018c0b0_ret_with_exprs(&(*_self_), _62429_r);
}



inline jule::Str _2201ca021_ret_with_defaults(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21ec06223_TypeKind> _63940_result) {
	jule::Str _64017_obj = jule::Str("return ", 7);
	if ((_21ec0a634_tup(_63940_result.ptr()) != nullptr)) {
		_64017_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto &expr = _21ec0a634_tup(_63940_result.ptr()).get()._field_types;
			auto it = expr.begin();
			_iter_begin_230318b55:;
			if (it != expr.end()) {
				jule::Ptr<_21ec06223_TypeKind> _230318ced_t = *it;
				{
					_64017_obj+=_22025dcec_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _230318ced_t);
					_64017_obj+=jule::Str(",", 1);
				}
				_iter_next_230318b55:;
				++it;
				goto _iter_begin_230318b55;
			}
			_iter_end_230318b55:;
		}
		(_64017_obj).mut_slice(0LL,_64017_obj.len() - 1LL);
		_64017_obj+=jule::Str(")", 1);
	} else {
		_64017_obj+=_22025dcec_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _63940_result);
	}
	_64017_obj+=jule::Str(";", 1);
	return _64017_obj;
}



inline jule::Str _2201d14ab_var(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb75615_Var> _65626_v) {
	if (_65626_v.get()._field_constant) {
		return jule::Str();
	}
	return _220dcd33e_var((*_self_)._field_oc.ptr(), _65626_v);
}



inline jule::Str _2201dd287_st(_220151b8a_ScopeCoder* _self_,jule::Any _66425_st) {
	if (_66425_st == jule::Any(jule::Any(nullptr))) {
		return jule::Str();
	}
	{
		auto &_match_expr{ _66425_st };
		
		if (_match_expr.type_is<jule::Ptr<_21eb1472a_Scope>>()) {
			_case_begin_23031cb7b:;
			{
				return _2201e2c5e_scope(&(*_self_), _66425_st.operator jule::Ptr<_21eb1472a_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_23031cd35:;
			{
				return _2201d14ab_var(&(*_self_), _66425_st.operator jule::Ptr<_21eb75615_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_23031d880:;
			{
				return (_22025d58d_expr((*_self_)._field_oc.get()._field_ec.ptr(), jule::Any(_66425_st.operator jule::Ptr<_21ebbd053_Data>())) + jule::Str(";", 1));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c4ac_Conditional>>()) {
			_case_begin_23031d8e6:;
			{
				return _22014d23b_conditional(&(*_self_), _66425_st.operator jule::Ptr<_21eb2c4ac_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c6cc_InfIter>>()) {
			_case_begin_23031d682:;
			{
				return _22019c60e_inf_iter(&(*_self_), _66425_st.operator jule::Ptr<_21eb2c6cc_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c8ec_WhileIter>>()) {
			_case_begin_23031d6e8:;
			{
				return _2201a1723_while_iter(&(*_self_), _66425_st.operator jule::Ptr<_21eb2c8ec_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2cb1c_RangeIter>>()) {
			_case_begin_23031d75e:;
			{
				return _2201a3b32_range_iter(&(*_self_), _66425_st.operator jule::Ptr<_21eb2cb1c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2cd3c_ContSt>>()) {
			_case_begin_23031d7c5:;
			{
				return _2201b78b0_cont(&(*_self_), _66425_st.operator jule::Ptr<_21eb2cd3c_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2d27c_Label>>()) {
			_case_begin_23031d97e:;
			{
				return _2201c7eb9_label(&(*_self_), _66425_st.operator jule::Ptr<_21eb2d27c_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2d49c_GotoSt>>()) {
			_case_begin_23031d9e5:;
			{
				return _2201cd5da_goto_st(&(*_self_), _66425_st.operator jule::Ptr<_21eb2d49c_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2d6bc_Postfix>>()) {
			_case_begin_23031da6c:;
			{
				return _2201d45ad_postfix(&(*_self_), _66425_st.operator jule::Ptr<_21eb2d6bc_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2d8dc_Assign>>()) {
			_case_begin_23031dae4:;
			{
				return _220233024_assign(&(*_self_), _66425_st.operator jule::Ptr<_21eb2d8dc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2db0c_MultiAssign>>()) {
			_case_begin_23031db6b:;
			{
				return _220236478_multi_assign(&(*_self_), _66425_st.operator jule::Ptr<_21eb2db0c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2dd2c_Match>>()) {
			_case_begin_23031dbe3:;
			{
				return _2201eeb17_match_st(&(*_self_), _66425_st.operator jule::Ptr<_21eb2dd2c_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2e49d_FallSt>>()) {
			_case_begin_23031dc6a:;
			{
				return _220153c03_fall_st(&(*_self_), _66425_st.operator jule::Ptr<_21eb2e49d_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2d05c_BreakSt>>()) {
			_case_begin_23031dce2:;
			{
				return _2201745a3_break_st(&(*_self_), _66425_st.operator jule::Ptr<_21eb2d05c_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2e6bd_RetSt>>()) {
			_case_begin_23031dd69:;
			{
				return _2201c92c8_ret_st(&(*_self_), _66425_st.operator jule::Ptr<_21eb2e6bd_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220240c57_PushToSliceExprModel>>()) {
			_case_begin_23031dde1:;
			{
				return _220259dc5_push_to_slice((*_self_)._field_oc.get()._field_ec.ptr(), _66425_st.operator jule::Ptr<_220240c57_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2202412da_MutSlicingExprModel>>()) {
			_case_begin_23031de68:;
			{
				return _22025c977_mut_slicing((*_self_)._field_oc.get()._field_ec.ptr(), _66425_st.operator jule::Ptr<_2202412da_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2202417c4_StrInsertBeginExprModel>>()) {
			_case_begin_23031dee0:;
			{
				return _22025cd2e_str_insert_begin((*_self_)._field_oc.get()._field_ec.ptr(), _66425_st.operator jule::Ptr<_2202417c4_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_23031d363:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_23031d297:;
	}
}



inline jule::Str _2201e2c5e_scope(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21eb1472a_Scope> _71528_s) {
	jule::Str _71617_obj = jule::Str("{\n", 2);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	{
		auto &expr = _71528_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_23032c33e:;
		if (it != expr.end()) {
			jule::Any _23032c53c_st = *it;
			{
				_71617_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
				_71617_obj+=_2201dd287_st(&(*_self_), _23032c53c_st);
				_71617_obj+=jule::Str("\n", 1);
			}
			_iter_next_23032c33e:;
			++it;
			goto _iter_begin_23032c33e;
		}
		_iter_end_23032c33e:;
	}
	_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	_71617_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_71617_obj+=jule::Str("}", 1);
	if (_71528_s.get()._field_deferred) {
		_71617_obj=((jule::Str("__JULE_DEFER(", 13) + _71617_obj) + jule::Str(");", 2));
	}
	return _71617_obj;
}



inline jule::Str _2201e3b2d_func_scope(_220151b8a_ScopeCoder* _self_,jule::Ptr<_21dd1cc42_FnIns> _73733_f) {
	if ((_73733_f.get()._field_scope == nullptr)) {
		return jule::Str();
	}
	jule::Str _74117_obj = _2201e2c5e_scope(&(*_self_), _73733_f.get()._field_scope);
	if (_73733_f.get()._field_decl.get()._field_exceptional && _21dd19711_is_void(_73733_f.get()._field_decl.ptr())) {
		_74117_obj=(_74117_obj.slice(0LL,(_74117_obj.len() - 2LL)) + jule::Str(" return jule::VoidExceptional(); }", 34));
	}
	return _74117_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _220151b8a_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2201e99be_ExprCoder> static__22014a18e_new(jule::Ptr<_220d8cc38_ObjectCoder>& _9124_oc) {
	return jule::new_ptr<_2201e99be_ExprCoder>(_2201e99be_ExprCoder(_9124_oc));
}



inline jule::Str _2201ea77d_string(_2201e99be_ExprCoder* _self_,jule::Ptr<_21ea9d450_Const>& _9722_c) {
	jule::Str _9813_content = _21eaa0155_read_str(_9722_c.ptr());
	if ((_9813_content.len() == 0LL)) {
		return jule::Str("jule::Str()", 11);
	}
	jule::Slice<jule::U8> _10213_bytes = static_cast<jule::Slice<jule::U8>>(_9813_content);
	jule::Str _10313_len = _21ea2e667_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10213_bytes.len())),10LL);
	jule::Str _10413_lit = _22025ee85_cstr_lit(_10213_bytes);
	return ((((jule::Str("jule::Str(", 10) + _10413_lit) + jule::Str(", ", 2)) + _10313_len) + jule::Str(")", 1));
}



inline jule::Str _2201eb53c_boolean(_2201e99be_ExprCoder* _self_,jule::Ptr<_21ea9d450_Const>& _10823_c) {
	return ((_21ea9ed7a_read_bool(_10823_c.ptr())) ? (jule::Str("true", 4)) : (jule::Str("false", 5)));
}



inline jule::Str _220200871_nil_lit(_2201e99be_ExprCoder* _self_) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _220201586_ftoa_special_cases(_2201e99be_ExprCoder* _self_,jule::F64& _11634_x) {
	{
		
		if (_21e95a52c_is_nan(_11634_x)) {
			_case_begin_230337b52:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_21e96c4a6_is_inf(_11634_x,1LL)) {
			_case_begin_230337cb7:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_21e96c4a6_is_inf(_11634_x,-1LL)) {
			_case_begin_230337d2d:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_230337547:;
			{
				return jule::Str();
			}
		}
		_match_end_23033749d:;
	}
}



inline jule::Str _22020329c_float32(_2201e99be_ExprCoder* _self_,jule::Ptr<_21ea9d450_Const>& _12923_c) {
	jule::F64 _13013_x = _21eaa0cb0_as_f64(_12923_c.ptr());
	jule::Str _13313_f = _220201586_ftoa_special_cases(&(*_self_), _13013_x);
	if ((!(_13313_f.empty()))) {
		return _13313_f;
	}
	{
		
		if ((_13013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_23033ae85:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if ((_13013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_23033a946:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		else {
			_case_begin_23033a32a:;
			{
				return (_220260370_ftoa(_13013_x,32LL) + jule::Str("f", 1));
			}
		}
		_match_end_23033a270:;
	}
}



inline jule::Str _220237c93_float64(_2201e99be_ExprCoder* _self_,jule::Ptr<_21ea9d450_Const>& _14823_c) {
	jule::F64 _14913_x = _21eaa0cb0_as_f64(_14823_c.ptr());
	jule::Str _15213_f = _220201586_ftoa_special_cases(&(*_self_), _14913_x);
	if ((!(_15213_f.empty()))) {
		return _15213_f;
	}
	{
		
		if ((_14913_x == jule::MAX_F64)) {
			_case_begin_23033dcac:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if ((_14913_x == jule::MIN_F64)) {
			_case_begin_23033da59:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		else {
			_case_begin_23033d284:;
			{
				return _220260370_ftoa(_14913_x,64LL);
			}
		}
		_match_end_23033d1c9:;
	}
}



inline jule::Str _220239668_constant(_2201e99be_ExprCoder* _self_,jule::Ptr<_21ea9d450_Const> _16827_c,jule::Bool _16838_fx32) {
	{
		
		if (_21eaa2c07_is_str(_16827_c.ptr())) {
			_case_begin_230340770:;
			{
				return _2201ea77d_string(&(*_self_), _16827_c);
			}
		}
		else if (_21eaa292c_is_bool(_16827_c.ptr())) {
			_case_begin_2303407d6:;
			{
				return _2201eb53c_boolean(&(*_self_), _16827_c);
			}
		}
		else if (_21eaa2ed2_is_f64(_16827_c.ptr())) {
			_case_begin_23034085d:;
			{
				{
					
					if (_16838_fx32) {
						_case_begin_230342dd2:;
						{
							return _22020329c_float32(&(*_self_), _16827_c);
						}
					}
					else {
						_case_begin_230342277:;
						{
							return _220237c93_float64(&(*_self_), _16827_c);
						}
					}
					_match_end_2303421ab:;
				}
			}
		}
		else if (_21eaa2377_is_i64(_16827_c.ptr())) {
			_case_begin_230340374:;
			{
				return _22026067d_itoa(static_cast<jule::I64>(_21ea9e7c5_read_i64(_16827_c.ptr())));
			}
		}
		else if (_21eaa2652_is_u64(_16827_c.ptr())) {
			_case_begin_2303403da:;
			{
				return _220260a24_utoa(static_cast<jule::U64>(_21ea9eaa0_read_u64(_16827_c.ptr())));
			}
		}
		else if (_21eaa32ac_is_nil(_16827_c.ptr())) {
			_case_begin_230340451:;
			{
				return _220200871_nil_lit(&(*_self_));
			}
		}
		else {
			_case_begin_23034030d:;
			{
				return jule::Str("<unimplemented_constant_expression>", 35);
			}
		}
		_match_end_230340275:;
	}
}



inline jule::Str _2201a8021_div_by_zero_binary(_2201e99be_ExprCoder* _self_,_21c627dde_Token& _19238_op,jule::Ptr<_21dd08854_OperandExprModel>& _19254_l,jule::Ptr<_21dd08854_OperandExprModel>& _19281_r) {
	jule::Str _19317_op_func = jule::Str();
	{
		auto &_match_expr{ _19238_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_23034591d:;
			{
				_19317_op_func=jule::Str("div", 3);
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_230345de6:;
			{
				_19317_op_func=jule::Str("mod", 3);
			}
		}
		_match_end_230345d2a:;
	}
	jule::Str _20317_obj = jule::Str("jule::", 6);
	_20317_obj+=_19317_op_func;
	_20317_obj+=jule::Str("(", 1);
	if ((!(_2359a5011_PRODUCTION))) {
		_20317_obj+=jule::Str("\"", 1);
		_20317_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _19238_op);
		_20317_obj+=jule::Str("\",", 2);
	}
	_20317_obj+=_22025d58d_expr(&(*_self_), _19254_l.get()._field_model);
	_20317_obj+=jule::Str(",", 1);
	_20317_obj+=_22025d58d_expr(&(*_self_), _19281_r.get()._field_model);
	_20317_obj+=jule::Str(")", 1);
	return _20317_obj;
}



inline jule::Str _22022d22d_unsafe_binary(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd08de8_BinopExprModel> _21836_m) {
	jule::Str _21917_obj = jule::Str("(", 1);
	_21917_obj+=_22025d1d6_model(&(*_self_), _21836_m.get()._field_left.get()._field_model);
	_21917_obj+=jule::Str(" ", 1);
	_21917_obj+=_21836_m.get()._field_op._field_kind;
	_21917_obj+=jule::Str(" ", 1);
	_21917_obj+=_22025d1d6_model(&(*_self_), _21836_m.get()._field_right.get()._field_model);
	_21917_obj+=jule::Str(")", 1);
	return _21917_obj;
}



inline jule::Str _220149941_binary(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd08de8_BinopExprModel> _22929_m) {
	{
		auto &_match_expr{ _22929_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_23034caac:;
			{
				if ((_21ec09ca4_strct(_22929_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					return _2201a8021_div_by_zero_binary(&(*_self_), _22929_m.get()._field_op,_22929_m.get()._field_left,_22929_m.get()._field_right);
				}
			}
		}
		_match_end_23034c9ad:;
	}
	return _22022d22d_unsafe_binary(&(*_self_), _22929_m);
}



inline jule::Str _22022ce0e_var(_2201e99be_ExprCoder* _self_,jule::Ptr<_21eb75615_Var> _24022_m) {
	if (_24022_m.get()._field_cpp_linked) {
		jule::Ptr<_21c525490_Directive> _24217_d = _220dd61d2_find_directive(_24022_m.get()._field_directives,jule::Str("namespace", 9));
		if ((_24217_d != nullptr)) {
			jule::Str _24425_obj = _22025e1b5_concat_all_parts(_24217_d.get()._field_args);
			_24425_obj+=jule::Str("::", 2);
			_24425_obj+=static__220266288_var(_24022_m);
			return _24425_obj;
		}
	}
	return static__220266288_var(_24022_m);
}



inline jule::Str _22023b03d_structure(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd03266_Struct> _25324_m) {
	return static__220dda45b_structure(_25324_m);
}



inline jule::Str _2201decd3_structure_ins(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd06742_StructIns> _25732_m) {
	return static__220dda769_structure_ins(_25732_m);
}



inline jule::Str _2201dee48_unary(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd09349_UnaryExprModel> _26128_m) {
	{
		auto &_match_expr{ _26128_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_230354333:;
			{
				jule::Str _26421_obj = jule::Str("(~(", 3);
				_26421_obj+=_22025d58d_expr(&(*_self_), _26128_m.get()._field_expr.get()._field_model);
				_26421_obj+=jule::Str("))", 2);
				return _26421_obj;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_230354399:;
			{
				if (_2359a5011_PRODUCTION || (_21ec08a94_sptr(_26128_m.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					goto _match_end_230354234;
				}
				jule::Str _27221_obj = _22025d58d_expr(&(*_self_), _26128_m.get()._field_expr.get()._field_model);
				_27221_obj+=jule::Str(".get(\"", 6);
				_27221_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _26128_m.get()._field_op);
				_27221_obj+=jule::Str("\")", 2);
				return _27221_obj;
			}
		}
		_match_end_230354234:;
	}
	jule::Str _27917_obj = jule::Str("(", 1);
	_27917_obj+=_26128_m.get()._field_op._field_kind;
	_27917_obj+=jule::Str("(", 1);
	_27917_obj+=_22025d58d_expr(&(*_self_), _26128_m.get()._field_expr.get()._field_model);
	_27917_obj+=jule::Str("))", 2);
	return _27917_obj;
}



inline jule::Str _220146a2b_cpp_structure_lit(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd09c40_StructLitExprModel> _28740_m) {
	jule::Str _28817_obj = jule::Str("(", 1) + static__220dda769_structure_ins(_28740_m.get()._field_strct);
	_28817_obj+=jule::Str("){", 2);
	if ((_28740_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28740_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_23035a79b:;
			if (it != expr.end()) {
				jule::Ptr<_21dd05be7_FieldIns> _23035a8cd_f = *it;
				{
					if (_28740_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
						{
							auto &expr = _28740_m.get()._field_args;
							auto it = expr.begin();
							_iter_begin_23035b47d:;
							if (it != expr.end()) {
								jule::Ptr<_21dd097de_StructArgExprModel> _23035b549_arg = *it;
								{
									if (_23035b549_arg.get()._field_field == _23035a8cd_f) {
										_28817_obj+=jule::Str(".", 1);
										_28817_obj+=static__220265e7a_field(_23035a8cd_f.get()._field_decl);
										_28817_obj+=jule::Str("=", 1);
										_28817_obj+=_22025d58d_expr(&(*_self_), _23035b549_arg.get()._field_expr);
										_28817_obj+=jule::Str(",", 1);
										goto _iter_next_23035a79b;
									}
								}
								_iter_next_23035b47d:;
								++it;
								goto _iter_begin_23035b47d;
							}
							_iter_end_23035b47d:;
						}
						goto _iter_next_23035a79b;
					}
					_28817_obj+=static__220265e7a_field(_23035a8cd_f.get()._field_decl);
					_28817_obj+=jule::Str(": ", 2);
					{
						auto &expr = _28740_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_23035dc99:;
						if (it != expr.end()) {
							jule::Ptr<_21dd097de_StructArgExprModel> _23035dd76_arg = *it;
							{
								if (_23035dd76_arg.get()._field_field == _23035a8cd_f) {
									_28817_obj+=_22025d58d_expr(&(*_self_), _23035dd76_arg.get()._field_expr);
									_28817_obj+=jule::Str(",", 1);
									goto _iter_next_23035a79b;
								}
							}
							_iter_next_23035dc99:;
							++it;
							goto _iter_begin_23035dc99;
						}
						_iter_end_23035dc99:;
					}
					_28817_obj+=_22025dcec_init_expr(&(*_self_), _23035a8cd_f.get()._field_kind);
					_28817_obj+=jule::Str(",", 1);
				}
				_iter_next_23035a79b:;
				++it;
				goto _iter_begin_23035a79b;
			}
			_iter_end_23035a79b:;
		}
		(_28817_obj).mut_slice(0LL,_28817_obj.len() - 1LL);
	}
	_28817_obj+=jule::Str("}", 1);
	return _28817_obj;
}



inline jule::Str _220146b91_structure_lit(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd09c40_StructLitExprModel> _32436_m) {
	if (_32436_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		return _220146a2b_cpp_structure_lit(&(*_self_), _32436_m);
	}
	jule::Str _32917_obj = static__220265b6c_structure_ins(_32436_m.get()._field_strct);
	_32917_obj+=jule::Str("(", 1);
	if ((_32436_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _32436_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_230363b8e:;
			if (it != expr.end()) {
				jule::Ptr<_21dd05be7_FieldIns> _230363cc1_f = *it;
				{
					{
						auto &expr = _32436_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_230364464:;
						if (it != expr.end()) {
							jule::Ptr<_21dd097de_StructArgExprModel> _230364530_arg = *it;
							{
								if (_230364530_arg.get()._field_field == _230363cc1_f) {
									_32917_obj+=_22025d58d_expr(&(*_self_), _230364530_arg.get()._field_expr);
									_32917_obj+=jule::Str(",", 1);
									goto _iter_next_230363b8e;
								}
							}
							_iter_next_230364464:;
							++it;
							goto _iter_begin_230364464;
						}
						_iter_end_230364464:;
					}
					_32917_obj+=_22025dcec_init_expr(&(*_self_), _230363cc1_f.get()._field_kind);
					_32917_obj+=jule::Str(",", 1);
				}
				_iter_next_230363b8e:;
				++it;
				goto _iter_begin_230363b8e;
			}
			_iter_end_230363b8e:;
		}
		(_32917_obj).mut_slice(0LL,_32917_obj.len() - 1LL);
	}
	_32917_obj+=jule::Str(")", 1);
	return _32917_obj;
}



inline jule::Str _220197054_alloc_structure(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0a12a_AllocStructLitExprModel> _35038_m) {
	jule::Str _35117_obj = jule::Str("jule::new_ptr<", 14);
	_35117_obj+=static__220265b6c_structure_ins(_35038_m.get()._field_lit.get()._field_strct);
	_35117_obj+=jule::Str(">(", 2);
	_35117_obj+=_220146b91_structure_lit(&(*_self_), _35038_m.get()._field_lit);
	_35117_obj+=jule::Str(")", 1);
	return _35117_obj;
}



inline jule::Str _2201971b9_casting(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0a757_CastingExprModel> _35930_m) {
	jule::Str _36017_obj = jule::Str();
	{
		
		if ((_21ec087b9_prim(_35930_m.get()._field_kind.ptr()) != nullptr) && _21ec10095_is_any(_21ec087b9_prim(_35930_m.get()._field_kind.ptr()).ptr())) {
			_case_begin_23036b0d6:;
			{
				_36017_obj+=static__220ddc1d8_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str("(", 1);
				_36017_obj+=_22025d1d6_model(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(")", 1);
			}
		}
		else if ((_21ec08d6e_ptr(_35930_m.get()._field_expr_kind.ptr()) != nullptr) || (_21ec08d6e_ptr(_35930_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_230369ca5:;
			{
				_36017_obj+=jule::Str("((", 2);
				_36017_obj+=static__220ddc1d8_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str(")(", 2);
				_36017_obj+=_22025d58d_expr(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str("))", 2);
			}
		}
		else if ((_21ec0a07e_trt(_35930_m.get()._field_expr_kind.ptr()) != nullptr) || (_21ec087b9_prim(_35930_m.get()._field_expr_kind.ptr()) != nullptr) && _21ec10095_is_any(_21ec087b9_prim(_35930_m.get()._field_expr_kind.ptr()).ptr())) {
			_case_begin_23036b2a1:;
			{
				_36017_obj+=_22025d1d6_model(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(".", 1);
				if (_2359a5011_PRODUCTION) {
					_36017_obj+=jule::Str("operator ", 9);
					_36017_obj+=static__220ddc1d8_kind(_35930_m.get()._field_kind);
					_36017_obj+=jule::Str("()", 2);
				} else {
					if ((_21ec0a07e_trt(_35930_m.get()._field_expr_kind.ptr()) != nullptr) && (_21ec08a94_sptr(_35930_m.get()._field_kind.ptr()) != nullptr)) {
						_36017_obj+=jule::Str("cast_ptr<", 9);
						_36017_obj+=static__220ddc1d8_kind(_21ec08a94_sptr(_35930_m.get()._field_kind.ptr()).get()._field_elem);
					} else {
						_36017_obj+=jule::Str("cast<", 5);
						_36017_obj+=static__220ddc1d8_kind(_35930_m.get()._field_kind);
					}
					_36017_obj+=jule::Str(">(\"", 3);
					_36017_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _35930_m.get()._field_token);
					_36017_obj+=jule::Str("\")", 2);
				}
			}
		}
		else if ((_21ec0a07e_trt(_35930_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_23036b317:;
			{
				_36017_obj+=static__220ddc1d8_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str("(", 1);
				_36017_obj+=_22025d58d_expr(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(", ", 2);
				_36017_obj+=_21ea2e7cc_itoa(static_cast<jule::I64>(_220dab707_find_type_offset((*_self_)._field_oc.ptr(), _21ec0a07e_trt(_35930_m.get()._field_kind.ptr()),_35930_m.get()._field_expr_kind)));
				_36017_obj+=jule::Str(")", 1);
			}
		}
		else {
			_case_begin_230369931:;
			{
				_36017_obj+=jule::Str("static_cast<", 12);
				_36017_obj+=static__220ddc1d8_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str(">(", 2);
				_36017_obj+=_22025d58d_expr(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(")", 1);
			}
		}
		_match_end_2303698a9:;
	}
	return _36017_obj;
}



inline jule::Str _220147e8e_args(_2201e99be_ExprCoder* _self_,jule::Slice<jule::Any> _41127_args) {
	if ((_41127_args.len() == 0LL)) {
		return jule::Str();
	}
	jule::Str _41517_obj = jule::Str();
	{
		auto &expr = _41127_args;
		auto it = expr.begin();
		_iter_begin_23037937a:;
		if (it != expr.end()) {
			jule::Any _230379468_a = *it;
			{
				_41517_obj+=_22025d58d_expr(&(*_self_), _230379468_a);
				_41517_obj+=jule::Str(",", 1);
			}
			_iter_next_23037937a:;
			++it;
			goto _iter_begin_23037937a;
		}
		_iter_end_23037937a:;
	}
	(_41517_obj).mut_slice(0LL,_41517_obj.len() - 1LL);
	return _41517_obj;
}



inline jule::Str _220148104_model_for_call(_2201e99be_ExprCoder* _self_,jule::Any _42437_expr) {
	{
		auto &_match_expr{ _42437_expr };
		
		if (_match_expr.type_is<jule::Ptr<_21dd1cc42_FnIns>>()) {
			_case_begin_23037ae4d:;
			{
				return _220257a82_func_ins(&(*_self_), _42437_expr.operator jule::Ptr<_21dd1cc42_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
			_case_begin_23037aeb4:;
			{
				jule::Ptr<_21dd0e294_StructSubIdentExprModel> _42921_ssie = _42437_expr.operator jule::Ptr<_21dd0e294_StructSubIdentExprModel>();
				if ((_42921_ssie.get()._field_method != nullptr)) {
					return _220257a82_func_ins(&(*_self_), _42921_ssie.get()._field_method);
				}
			}
		}
		_match_end_23037ad71:;
	}
	return _22025d1d6_model(&(*_self_), _42437_expr);
}



inline void _2201a6b8a_push_call_inf(_2201e99be_ExprCoder* _self_,jule::Str& _43737_obj,jule::Ptr<_21dd0b23b_FnCallExprModel>& _43748_m) {
	if (_2359a5011_PRODUCTION || ((!(_43748_m.get()._field_func.get()._field_anon)) && (!(_220261184_is_builtin_call_has_debuginf(_43748_m))))) {
		_43737_obj+=jule::Str("(", 1);
		return;
	}
	if (_43748_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _43748_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
				_case_begin_2303808ae:;
				{
					if (_43748_m.get()._field_expr.operator jule::Ptr<_21dd0e294_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_43737_obj+=jule::Str("(", 1);
						return;
					}
					goto _case_begin_230380392;
				}
			}
			else {
				_case_begin_230380392:;
				{
					_43737_obj+=jule::Str(".call", 5);
				}
			}
			_match_end_23038033c:;
		}
	}
	_43737_obj+=jule::Str("(\"", 2);
	_43737_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _43748_m.get()._field_token);
	_43737_obj+=jule::Str("\"", 1);
	if ((_43748_m.get()._field_args.len() != 0LL)) {
		_43737_obj+=jule::Str(",", 1);
	}
}



inline jule::Str _2201a6dcc_pure_func_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0b23b_FnCallExprModel>& _46238_m) {
	jule::Str _46317_obj = _220148104_model_for_call(&(*_self_), _46238_m.get()._field_expr);
	if ((!(_21dd1d8be_is_builtin(_46238_m.get()._field_func.ptr())))) {
		if (_46238_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_46238_m.get()._field_func.get()._field_generics.len() > 0LL)) {
			if ((!(_220dd6622_has_directive(_46238_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_46317_obj+=jule::Str("<", 1);
				{
					auto &expr = _46238_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_230384c48:;
					if (it != expr.end()) {
						jule::Ptr<_21ec06223_TypeKind> _230384eac_g = *it;
						{
							_46317_obj+=static__220ddc1d8_kind(_230384eac_g);
							_46317_obj+=jule::Str(",", 1);
						}
						_iter_next_230384c48:;
						++it;
						goto _iter_begin_230384c48;
					}
					_iter_end_230384c48:;
				}
				(_46317_obj).mut_slice(0LL,_46317_obj.len() - 1LL);
				_46317_obj+=jule::Str(">", 1);
			}
		}
	}
	_2201a6b8a_push_call_inf(&(*_self_), _46317_obj,_46238_m);
	jule::Bool _47817_locinfo = false;
	jule::Str _47917_wrap_receiver = jule::Str();
	if (((!(_21dd1d8be_is_builtin(_46238_m.get()._field_func.ptr()))) && (_46238_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _21dd17b2c_is_self(_46238_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
		{
			auto &_match_expr{ _46238_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
				_case_begin_2303883ab:;
				{
					jule::Ptr<_21dd0e294_StructSubIdentExprModel> _48325_ssie = _46238_m.get()._field_expr.operator jule::Ptr<_21dd0e294_StructSubIdentExprModel>();
					{
						
						if (_21dd17e07_is_ref(_46238_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_230389984:;
							{
								_46317_obj+=_22025d1d6_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
							}
						}
						else if ((_21ec08a94_sptr(_48325_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_23038be09:;
							{
								_46317_obj+=_22025d1d6_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
								_46317_obj+=jule::Str(".ptr(", 5);
								if ((!(_2359a5011_PRODUCTION))) {
									_46317_obj+=jule::Str("\"", 1);
									_46317_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _46238_m.get()._field_token);
									_46317_obj+=jule::Str("\"", 1);
								}
								_46317_obj+=jule::Str(")", 1);
							}
						}
						else {
							_case_begin_230389214:;
							{
								if ((_21ec09ca4_strct(_48325_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_46317_obj+=jule::Str("&", 1);
									if ((!(_48325_ssie.get()._field_expr.get()._field_lvalue))) {
										_47917_wrap_receiver=_22025d1d6_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
									}
								}
								if ((!(_47917_wrap_receiver.empty()))) {
									_46317_obj+=jule::Str("_wrap_copy", 10);
								} else {
									_46317_obj+=_22025d1d6_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
								}
							}
						}
						_match_end_2303891ae:;
					}
					if ((_46238_m.get()._field_args.len() > 0LL)) {
						_46317_obj+=jule::Str(", ", 2);
					}
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>>()) {
				_case_begin_230388422:;
				{
					_46317_obj+=_22025d1d6_model(&(*_self_), _46238_m.get()._field_expr.operator jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_2359a5011_PRODUCTION))) {
						_47817_locinfo=true;
					}
					if ((_46238_m.get()._field_args.len() > 0LL)) {
						_46317_obj+=jule::Str(", ", 2);
					}
				}
			}
			_match_end_230388345:;
		}
	}
	_46317_obj+=_220147e8e_args(&(*_self_), _46238_m.get()._field_args);
	if (_47817_locinfo) {
		_46317_obj+=jule::Str(", \"", 3);
		_46317_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _46238_m.get()._field_token);
		_46317_obj+=jule::Str("\"", 1);
	}
	_46317_obj+=jule::Str(")", 1);
	if ((!(_47917_wrap_receiver.empty()))) {
		(_46317_obj).buffer.insert(0, (((jule::Str("({ auto _wrap_copy = ", 21) + _47917_wrap_receiver) + jule::Str("; ", 2))));
		_46317_obj+=jule::Str("; })", 4);
	}
	if (_46238_m.get()._field_is_co) {
		(_46317_obj).buffer.insert(0, (jule::Str("__JULE_CO(", 10)));
		_46317_obj+=jule::Str(")", 1);
	}
	return _46317_obj;
}



inline jule::Str _2201a7284_func_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0b23b_FnCallExprModel> _54432_m) {
	if ((_21dd1d8be_is_builtin(_54432_m.get()._field_func.ptr()) || (!(_54432_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_54432_m.get()._field_except != nullptr) && (_54432_m.get()._field_except.get()._field_stmts.len() == 0LL))) {
		return _2201a6dcc_pure_func_call(&(*_self_), _54432_m);
	}
	jule::Str _55217_obj = jule::Str("({\n", 3);
	_22026e58d_add_indent((*_self_)._field_oc.ptr());
	_55217_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_55217_obj+=jule::Str("auto except = ", 14);
	_55217_obj+=_2201a6dcc_pure_func_call(&(*_self_), _54432_m);
	_55217_obj+=jule::Str(";\n", 2);
	_55217_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	if ((_54432_m.get()._field_except != nullptr)) {
		if ((_54432_m.get()._field_func.get()._field_result == nullptr) || (!(_54432_m.get()._field_assigned))) {
			_55217_obj+=jule::Str("if (!except.ok()) ", 18);
			_55217_obj+=_2201e2c5e_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54432_m.get()._field_except);
			_55217_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _56521_forwarded = _220260d32_is_forwarded(_54432_m.get()._field_except);
			_55217_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_56521_forwarded) {
				_55217_obj+=jule::Str("{", 1);
			}
			_55217_obj+=_2201e2c5e_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54432_m.get()._field_except);
			if (_56521_forwarded) {
				_55217_obj+=jule::Str(" ", 1);
				_55217_obj+=_22025dcec_init_expr(&(*_self_), _54432_m.get()._field_func.get()._field_result);
				_55217_obj+=jule::Str(";}", 2);
			}
			_55217_obj+=jule::Str(");\n", 3);
		}
		_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	} else {
		_55217_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_55217_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_55217_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _54432_m.get()._field_token);
		_55217_obj+=jule::Str("\"));\n", 5);
		if ((!(_21dd19711_is_void(_54432_m.get()._field_func.get()._field_decl.ptr())))) {
			_55217_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
			_55217_obj+=jule::Str("(except.result);\n", 17);
		}
		_220d82cb6_done_indent((*_self_)._field_oc.ptr());
	}
	_55217_obj+=_220d82623_indent((*_self_)._field_oc.ptr());
	_55217_obj+=jule::Str("})", 2);
	return _55217_obj;
}



inline jule::Str _220254b28_slice(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0b68c_SliceExprModel> _59628_m) {
	if ((_59628_m.get()._field_elems.len() == 0LL)) {
		return (static__220dd9416_as_slice(_59628_m.get()._field_elem_kind) + jule::Str("()", 2));
	}
	jule::Str _60017_obj = static__220dd9416_as_slice(_59628_m.get()._field_elem_kind);
	_60017_obj+=jule::Str("({", 2);
	_60017_obj+=_220147e8e_args(&(*_self_), _59628_m.get()._field_elems);
	_60017_obj+=jule::Str("})", 2);
	return _60017_obj;
}



inline jule::Str _220254ed0_indexing(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0bbdc_IndexingExprModel> _60731_m) {
	jule::Str _60817_obj = _22025d1d6_model(&(*_self_), _60731_m.get()._field_expr.get()._field_model);
	{
		
		if (_2359a5011_PRODUCTION || (_21ec08d6e_ptr(_60731_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_21ec0a359_map(_60731_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2303a697e:;
			{
				_60817_obj+=jule::Str("[", 1);
				_60817_obj+=_22025d58d_expr(&(*_self_), _60731_m.get()._field_index.get()._field_model);
				_60817_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_2303a5906:;
			{
				_60817_obj+=jule::Str(".at(\"", 5);
				_60817_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _60731_m.get()._field_token);
				_60817_obj+=jule::Str("\",", 2);
				_60817_obj+=_22025d58d_expr(&(*_self_), _60731_m.get()._field_index.get()._field_model);
				_60817_obj+=jule::Str(")", 1);
			}
		}
		_match_end_2303a58a1:;
	}
	return _60817_obj;
}



inline jule::Str _220255387_unsafe_indexing(_2201e99be_ExprCoder* _self_,jule::Ptr<_2202408e4_UnsafeIndexingExprModel> _62738_m) {
	jule::Str _62817_obj = _22025d1d6_model(&(*_self_), _62738_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_2359a5011_PRODUCTION || (_21ec08d6e_ptr(_62738_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_21ec0a359_map(_62738_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2303ab500:;
			{
				_62817_obj+=jule::Str("[", 1);
				_62817_obj+=_22025d58d_expr(&(*_self_), _62738_m.get()._field_node.get()._field_index.get()._field_model);
				_62817_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_2303aa3cd:;
			{
				_62817_obj+=jule::Str(".__at(", 6);
				_62817_obj+=_22025d58d_expr(&(*_self_), _62738_m.get()._field_node.get()._field_index.get()._field_model);
				_62817_obj+=jule::Str(")", 1);
			}
		}
		_match_end_2303aa367:;
	}
	return _62817_obj;
}



inline jule::Str _22025573e_anon_func(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0c13d_AnonFnExprModel> _64532_m) {
	jule::Str _64617_obj = static__220ddbdca_func(_64532_m.get()._field_func);
	_64617_obj+=jule::Str("([=]", 4);
	_64617_obj+=_220dcc409_params_ins((*_self_)._field_oc.ptr(), _64532_m.get()._field_func.get()._field_params);
	_64617_obj+=jule::Str(" mutable -> ", 12);
	_64617_obj+=static__220ddb7ae_func_ins_result(_64532_m.get()._field_func);
	_64617_obj+=jule::Str(" ", 1);
	_64617_obj+=_2201e3b2d_func_scope((*_self_)._field_oc.get()._field_sc.ptr(), _64532_m.get()._field_func);
	_64617_obj+=jule::Str(")", 1);
	return _64617_obj;
}



inline jule::Str _220255ae6_map(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0cade_MapExprModel> _65726_m) {
	jule::Str _65817_obj = jule::Str("jule::Map<", 10);
	_65817_obj+=static__220ddc1d8_kind(_65726_m.get()._field_key_kind);
	_65817_obj+=jule::Str(",", 1);
	_65817_obj+=static__220ddc1d8_kind(_65726_m.get()._field_val_kind);
	_65817_obj+=jule::Str(">({", 3);
	if ((_65726_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _65726_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_2303b452a:;
			if (it != expr.end()) {
				jule::Ptr<_21dd0c58e_KeyValPairExprModel> _2303b4728_pair = *it;
				{
					jule::Str _66525_pair_obj = jule::Str("{", 1);
					_66525_pair_obj+=_22025d58d_expr(&(*_self_), _2303b4728_pair.get()._field_key);
					_66525_pair_obj+=jule::Str(",", 1);
					_66525_pair_obj+=_22025d58d_expr(&(*_self_), _2303b4728_pair.get()._field_val);
					_66525_pair_obj+=jule::Str("}", 1);
					_65817_obj+=_66525_pair_obj;
					_65817_obj+=jule::Str(",", 1);
				}
				_iter_next_2303b452a:;
				++it;
				goto _iter_begin_2303b452a;
			}
			_iter_end_2303b452a:;
		}
		(_65817_obj).mut_slice(0LL,_65817_obj.len() - 1LL);
	}
	_65817_obj+=jule::Str("})", 2);
	return _65817_obj;
}



inline jule::Str _220255e9d_slicing(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0d23d_SlicingExprModel> _67930_m) {
	jule::Str _68017_obj = _22025d1d6_model(&(*_self_), _67930_m.get()._field_expr);
	_68017_obj+=jule::Str(".slice(", 7);
	if ((!(_2359a5011_PRODUCTION))) {
		_68017_obj+=jule::Str("\"", 1);
		_68017_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _67930_m.get()._field_token);
		_68017_obj+=jule::Str("\",", 2);
	}
	_68017_obj+=_22025d58d_expr(&(*_self_), _67930_m.get()._field_left);
	if (_67930_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_68017_obj+=jule::Str(",", 1);
		_68017_obj+=_22025d58d_expr(&(*_self_), _67930_m.get()._field_right);
	}
	_68017_obj+=jule::Str(")", 1);
	return _68017_obj;
}



inline jule::Str _220256355_trait_sub(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0d88c_TraitSubIdentExprModel> _69632_m) {
	jule::Str _69717_obj = static__220265243_trait_decl(_69632_m.get()._field_trt);
	_69717_obj+=jule::Str("_mptr_data", 10);
	_69717_obj+=jule::Str("[(", 2);
	_69717_obj+=_22025d1d6_model(&(*_self_), _69632_m.get()._field_expr);
	_69717_obj+=jule::Str(").type_offset].", 15);
	_69717_obj+=static__220264b27_func(_69632_m.get()._field_method);
	return _69717_obj;
}



inline jule::Str _22025670c_structure_sub(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0e294_StructSubIdentExprModel> _70636_m) {
	jule::Str _70717_obj = _22025d1d6_model(&(*_self_), jule::Any(_70636_m.get()._field_expr));
	if ((_70636_m.get()._field_field != nullptr)) {
		if ((_21ec08d6e_ptr(_70636_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70717_obj+=jule::Str("->", 2);
		} else if ((_21ec08a94_sptr(_70636_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70717_obj+=jule::Str(".get(", 5);
			if ((!(_2359a5011_PRODUCTION))) {
				_70717_obj+=jule::Str("\"", 1);
				_70717_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _70636_m.get()._field_token);
				_70717_obj+=jule::Str("\"", 1);
			}
			_70717_obj+=jule::Str(").", 2);
		} else {
			_70717_obj+=jule::Str(".", 1);
		}
		_70717_obj+=static__220265e7a_field(_70636_m.get()._field_field.get()._field_decl);
	}
	return _70717_obj;
}



inline jule::Str _220256ab4_common_ident(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd100db_CommonIdentExprModel> _72727_m) {
	return _72727_m.get()._field_ident;
}



inline jule::Str _220256e6b_common_sub(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd107c3_CommonSubIdentExprModel> _73133_m) {
	jule::Str _73217_obj = _22025d1d6_model(&(*_self_), _73133_m.get()._field_expr);
	{
		
		if ((_21ec08d6e_ptr(_73133_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_2303c43a3:;
			{
				_73217_obj+=jule::Str("->", 2);
			}
		}
		else if ((_21ec08a94_sptr(_73133_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_2303c40ea:;
			{
				_73217_obj+=jule::Str(".get(", 5);
				if ((!(_2359a5011_PRODUCTION))) {
					_73217_obj+=jule::Str("\n", 1);
					_73217_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _73133_m.get()._field_token);
					_73217_obj+=jule::Str("\n", 1);
				}
				_73217_obj+=jule::Str(").", 2);
			}
		}
		else {
			_case_begin_2303c3c76:;
			{
				_73217_obj+=jule::Str(".", 1);
			}
		}
		_match_end_2303c3c21:;
	}
	_73217_obj+=_73133_m.get()._field_ident;
	return _73217_obj;
}



inline jule::Str _220257323_array(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0ec89_ArrayExprModel> _75128_m) {
	jule::Str _75217_obj = static__220ddaa77_array(_75128_m.get()._field_kind);
	if ((_75128_m.get()._field_elems.len() == 0LL)) {
		_75217_obj+=jule::Str("()", 2);
		return _75217_obj;
	}
	if ((_75128_m.get()._field_elems.len() == 2LL) && (_75128_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		_75217_obj+=jule::Str("(", 1);
		_75217_obj+=_22025d58d_expr(&(*_self_), _75128_m.get()._field_elems[0LL]);
		_75217_obj+=jule::Str(")", 1);
		return _75217_obj;
	}
	_75217_obj+=jule::Str("({", 2);
	_75217_obj+=_220147e8e_args(&(*_self_), _75128_m.get()._field_elems);
	_75217_obj+=jule::Str("})", 2);
	return _75217_obj;
}



inline jule::Str _2202576ca_func_ins_common(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd1cc42_FnIns> _77434_m) {
	jule::Str _77517_obj = static__220ddbdca_func(_77434_m);
	_77517_obj+=jule::Str("(", 1);
	_77517_obj+=_220257a82_func_ins(&(*_self_), _77434_m);
	_77517_obj+=jule::Str(")", 1);
	return _77517_obj;
}



inline jule::Str _220257a82_func_ins(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd1cc42_FnIns> _78327_m) {
	if ((_78327_m.get()._field_decl != nullptr) && _78327_m.get()._field_decl.get()._field_cpp_linked) {
		jule::Ptr<_21c525490_Directive> _78517_d = _220dd61d2_find_directive(_78327_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_78517_d != nullptr)) {
			jule::Str _78725_obj = _22025e1b5_concat_all_parts(_78517_d.get()._field_args);
			_78725_obj+=jule::Str("::", 2);
			_78725_obj+=static__220264e35_func_ins(_78327_m);
			return _78725_obj;
		}
	}
	return static__220264e35_func_ins(_78327_m);
}



inline jule::Str _220257e39_tuple(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd10b03_TupleExprModel> _79628_m) {
	jule::Str _79717_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _79628_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_2303d1228:;
		if (it != expr.end()) {
			jule::Ptr<_21ebbd053_Data> _2303d12e4_d = *it;
			{
				_79717_obj+=_22025d58d_expr(&(*_self_), _2303d12e4_d.get()._field_model);
				_79717_obj+=jule::Str(",", 1);
			}
			_iter_next_2303d1228:;
			++it;
			goto _iter_begin_2303d1228;
		}
		_iter_end_2303d1228:;
	}
	(_79717_obj).mut_slice(0LL,_79717_obj.len() - 1LL);
	_79717_obj+=jule::Str(")", 1);
	return _79717_obj;
}



inline jule::Str _2202582e1_new_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd11e34_BuiltinNewCallExprModel> _80731_m) {
	jule::Str _80817_obj = jule::Str("jule::new_ptr<", 14);
	_80817_obj+=static__220ddc1d8_kind(_80731_m.get()._field_kind);
	_80817_obj+=jule::Str(">(", 2);
	if (_80731_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		_80817_obj+=_22025d58d_expr(&(*_self_), _80731_m.get()._field_init);
	}
	_80817_obj+=jule::Str(")", 1);
	return _80817_obj;
}



inline jule::Str _220258698_out_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd110dc_BuiltinOutCallExprModel> _81831_m) {
	if (_81831_m.get()._field_debug && _2359a5011_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _82217_obj = jule::Str("jule::out(", 10);
	_82217_obj+=_22025d58d_expr(&(*_self_), _81831_m.get()._field_expr);
	_82217_obj+=jule::Str(")", 1);
	return _82217_obj;
}



inline jule::Str _220258a50_outln_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel> _82833_m) {
	if (_82833_m.get()._field_debug && _2359a5011_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _83217_obj = jule::Str("jule::outln(", 12);
	_83217_obj+=_22025d58d_expr(&(*_self_), _82833_m.get()._field_expr);
	_83217_obj+=jule::Str(")", 1);
	return _83217_obj;
}



inline jule::Str _220258e07_panic_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel> _83833_m) {
	jule::Str _83917_obj = jule::Str("jule::panic(", 12);
	_83917_obj+=_22025d58d_expr(&(*_self_), _83833_m.get()._field_expr);
	_83917_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_83917_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _83833_m.get()._field_token);
	_83917_obj+=jule::Str("\"));", 4);
	return _83917_obj;
}



inline jule::Str _2202592ae_assert_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel> _84734_m) {
	if (_2359a5011_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _85117_obj = jule::Str("if (!(", 6);
	_85117_obj+=_22025d58d_expr(&(*_self_), _84734_m.get()._field_expr);
	_85117_obj+=jule::Str(")) jule::panic(jule::Str(", 25);
	_85117_obj+=_22025ee85_cstr_lit(static_cast<jule::Slice<jule::U8>>(_84734_m.get()._field_log));
	_85117_obj+=jule::Str(") + jule::Str(\"\\nlocation: ", 27);
	_85117_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _84734_m.get()._field_token);
	_85117_obj+=jule::Str("\"));", 4);
	return _85117_obj;
}



inline jule::Str _220259666_error_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel> _86133_m) {
	jule::Str _86217_obj = jule::Str("return ", 7);
	if (_21dd19711_is_void(_86133_m.get()._field_func.get()._field_decl.ptr())) {
		_86217_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_86217_obj+=jule::Str("jule::Exceptional<", 18);
		_86217_obj+=static__220ddc1d8_kind(_86133_m.get()._field_func.get()._field_result);
		_86217_obj+=jule::Str(">(", 2);
	}
	_86217_obj+=_22025d58d_expr(&(*_self_), _86133_m.get()._field_err);
	_86217_obj+=jule::Str(")", 1);
	return _86217_obj;
}



inline jule::Str _220259a1d_make_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd13078_BuiltinMakeCallExprModel> _87532_m) {
	jule::Str _87617_obj = jule::Str();
	if (_87532_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		_87617_obj+=_22025d58d_expr(&(*_self_), _87532_m.get()._field_len);
	} else {
		_87617_obj+=jule::Str("0", 1);
	}
	if (_87532_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		_87617_obj+=jule::Str(",", 1) + _22025d58d_expr(&(*_self_), _87532_m.get()._field_cap);
	}
	if ((_21ec09149_enm(_21ec096ee_slc(_87532_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		_87617_obj+=jule::Str(",", 1);
		_87617_obj+=_22025dcec_init_expr(&(*_self_), _21ec096ee_slc(_87532_m.get()._field_kind.ptr()).get()._field_elem);
		if (_87532_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
			(_87617_obj).buffer.insert(0, ((static__220ddc1d8_kind(_87532_m.get()._field_kind) + jule::Str("::alloc(", 8))));
		} else {
			(_87617_obj).buffer.insert(0, ((static__220ddc1d8_kind(_87532_m.get()._field_kind) + jule::Str("::alloc_def(", 12))));
		}
	} else {
		(_87617_obj).buffer.insert(0, ((static__220ddc1d8_kind(_87532_m.get()._field_kind) + jule::Str("::alloc(", 8))));
	}
	_87617_obj+=jule::Str(")", 1);
	return _87617_obj;
}



inline jule::Str _220259dc5_push_to_slice(_2201e99be_ExprCoder* _self_,jule::Ptr<_220240c57_PushToSliceExprModel> _90236_m) {
	jule::Str _90313_dest = _22025d1d6_model(&(*_self_), _90236_m.get()._field_dest);
	jule::Str _90417_obj = _90313_dest;
	_90417_obj+=jule::Str(" = jule::alloc_for_append(", 26);
	_90417_obj+=_90313_dest;
	_90417_obj+=jule::Str(",", 1);
	_90417_obj+=_21ea2e7cc_itoa(static_cast<jule::I64>(_90236_m.get()._field_elems.get()._field_elems.len()));
	_90417_obj+=jule::Str(");", 2);
	{
		auto &expr = _90236_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_2303ee169:;
		if (it != expr.end()) {
			jule::Any _2303ee1e1_e = *it;
			{
				_90417_obj+=_90313_dest;
				_90417_obj+=jule::Str(".__push(", 8);
				_90417_obj+=_22025d1d6_model(&(*_self_), _2303ee1e1_e);
				_90417_obj+=jule::Str(");", 2);
			}
			_iter_next_2303ee169:;
			++it;
			goto _iter_begin_2303ee169;
		}
		_iter_end_2303ee169:;
	}
	return _90417_obj;
}



inline jule::Str _22025a27c_append_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd13540_BuiltinAppendCallExprModel> _92034_m) {
	jule::Str _92117_obj = jule::Str("jule::append(", 13);
	_92117_obj+=_22025d1d6_model(&(*_self_), _92034_m.get()._field_dest);
	_92117_obj+=jule::Str(",", 1);
	_92117_obj+=_22025d1d6_model(&(*_self_), _92034_m.get()._field_elements);
	_92117_obj+=jule::Str(")", 1);
	return _92117_obj;
}



inline jule::Str _22025a634_clone_call(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel> _92933_m) {
	jule::Str _93017_obj = jule::Str("jule::clone(", 12);
	_93017_obj+=_22025d1d6_model(&(*_self_), _92933_m.get()._field_expr);
	_93017_obj+=jule::Str(")", 1);
	return _93017_obj;
}



inline jule::Str _22025a9db_sizeof(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd13d37_SizeofExprModel> _93629_m) {
	jule::Str _93717_obj = jule::Str("sizeof(", 7);
	_93717_obj+=_22025d58d_expr(&(*_self_), _93629_m.get()._field_expr);
	_93717_obj+=jule::Str(")", 1);
	return _93717_obj;
}



inline jule::Str _22025ad93_alignof(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd144db_AlignofExprModel> _94330_m) {
	jule::Str _94417_obj = jule::Str("alignof(", 8);
	_94417_obj+=_22025d58d_expr(&(*_self_), _94330_m.get()._field_expr);
	_94417_obj+=jule::Str(")", 1);
	return _94417_obj;
}



inline jule::Str _22025b24a_rune_lit(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd147a5_RuneExprModel> _95023_m) {
	if ((_95023_m.get()._field_code <= 127LL)) {
		jule::Str _95221_b = _22025e825_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95023_m.get()._field_code)));
		if ((_95221_b == jule::Str("'", 1))) {
			_95221_b=jule::Str("\\'", 2);
		}
		return ((jule::Str("'", 1) + _95221_b) + jule::Str("'", 1));
	}
	return _22026067d_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95023_m.get()._field_code)));
}



inline jule::Str _22025b602_structure_static(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd0e85a_StructStaticIdentExprModel> _96135_m) {
	return static__220264e35_func_ins(_96135_m.get()._field_method);
}



inline jule::Str _22025b9a9_integrated_to_str(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd14b18_IntegratedToStrExprModel> _96540_m) {
	jule::Str _96617_obj = jule::Str("jule::to_str(", 13);
	_96617_obj+=_22025d1d6_model(&(*_self_), _96540_m.get()._field_expr);
	_96617_obj+=jule::Str(")", 1);
	return _96617_obj;
}



inline jule::Str _22025bd61_ternary(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd15146_TernaryExprModel> _97230_m) {
	jule::Str _97317_obj = jule::Str("((", 2);
	_97317_obj+=_22025d1d6_model(&(*_self_), _97230_m.get()._field_condition);
	_97317_obj+=jule::Str(") ? (", 5);
	_97317_obj+=_22025d1d6_model(&(*_self_), _97230_m.get()._field_true_expr);
	_97317_obj+=jule::Str(") : (", 5);
	_97317_obj+=_22025d1d6_model(&(*_self_), _97230_m.get()._field_false_expr);
	_97317_obj+=jule::Str("))", 2);
	return _97317_obj;
}



inline jule::Str _22025c218_backend_emit(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd15597_BackendEmitExprModel> _98335_m) {
	if ((_98335_m.get()._field_exprs.len() == 0LL)) {
		return _98335_m.get()._field_code;
	}
	{
		auto &expr = _98335_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_23040e0e1:;
		if (it != expr.end()) {
			jule::I64 _23040eb5d_i = it - expr.begin();
			jule::Any _23040ecd4_expr = *it;
			{
				_98335_m.get()._field_exprs[_23040eb5d_i]=jule::Any(_22025d58d_expr(&(*_self_), _23040ecd4_expr));
			}
			_iter_next_23040e0e1:;
			++it;
			_23040eb5d_i++;
			goto _iter_begin_23040e0e1;
		}
		_iter_end_23040e0e1:;
	}
	return _21ec78075_format(_98335_m.get()._field_code,_98335_m.get()._field_exprs);
}



inline jule::Str _22025c5c0_free(_2201e99be_ExprCoder* _self_,jule::Ptr<_21dd158e9_FreeExprModel> _99327_m) {
	if (_2359a6c49_RC) {
		return (_22025d58d_expr(&(*_self_), _99327_m.get()._field_expr) + jule::Str(".dealloc()", 10));
	}
	return (_22025d58d_expr(&(*_self_), _99327_m.get()._field_expr) + jule::Str(".__free()", 9));
}



inline jule::Str _22025c977_mut_slicing(_2201e99be_ExprCoder* _self_,jule::Ptr<_2202412da_MutSlicingExprModel> _100034_m) {
	jule::Str _100117_obj = jule::Str("(", 1);
	_100117_obj+=_22025d1d6_model(&(*_self_), _100034_m.get()._field_expr);
	_100117_obj+=jule::Str(").mut_slice(", 12);
	if ((!(_2359a5011_PRODUCTION))) {
		_100117_obj+=jule::Str("\"", 1);
		_100117_obj+=_220dabe33_loc_info((*_self_)._field_oc.ptr(), _100034_m.get()._field_token);
		_100117_obj+=jule::Str("\",", 2);
	}
	_100117_obj+=_22025d58d_expr(&(*_self_), _100034_m.get()._field_left);
	if (_100034_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_100117_obj+=jule::Str(",", 1);
		_100117_obj+=_22025d58d_expr(&(*_self_), _100034_m.get()._field_right);
	}
	_100117_obj+=jule::Str(");", 2);
	return _100117_obj;
}



inline jule::Str _22025cd2e_str_insert_begin(_2201e99be_ExprCoder* _self_,jule::Ptr<_2202417c4_StrInsertBeginExprModel> _101839_m) {
	jule::Str _101917_obj = jule::Str("(", 1);
	_101917_obj+=_22025d1d6_model(&(*_self_), _101839_m.get()._field_dest);
	_101917_obj+=jule::Str(").buffer.insert(0, (", 20);
	_101917_obj+=_22025d1d6_model(&(*_self_), _101839_m.get()._field_expr);
	_101917_obj+=jule::Str("));", 3);
	return _101917_obj;
}



inline jule::Str _22025d1d6_model(_2201e99be_ExprCoder* _self_,jule::Any _102728_m) {
	{
		auto &_match_expr{ _102728_m };
		
		if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_230417d86:;
			{
				return _22025d1d6_model(&(*_self_), _102728_m.operator jule::Ptr<_21ebbd053_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ec06223_TypeKind>>()) {
			_case_begin_2304187b0:;
			{
				return static__220ddc1d8_kind(_102728_m.operator jule::Ptr<_21ec06223_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
			_case_begin_230418183:;
			{
				return _220239668_constant(&(*_self_), _102728_m.operator jule::Ptr<_21ea9d450_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_2304181e9:;
			{
				return _22022ce0e_var(&(*_self_), _102728_m.operator jule::Ptr<_21eb75615_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21deee929_Trait>>()) {
			_case_begin_230418260:;
			{
				return static__220265243_trait_decl(_102728_m.operator jule::Ptr<_21deee929_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_2304182c6:;
			{
				return _22023b03d_structure(&(*_self_), _102728_m.operator jule::Ptr<_21dd03266_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd06742_StructIns>>()) {
			_case_begin_23041842a:;
			{
				return _2201decd3_structure_ins(&(*_self_), _102728_m.operator jule::Ptr<_21dd06742_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd1cc42_FnIns>>()) {
			_case_begin_230418491:;
			{
				return _2202576ca_func_ins_common(&(*_self_), _102728_m.operator jule::Ptr<_21dd1cc42_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2202406c4_UnsafeBinopExprModel>>()) {
			_case_begin_230418507:;
			{
				return _22022d22d_unsafe_binary(&(*_self_), _102728_m.operator jule::Ptr<_2202406c4_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd08de8_BinopExprModel>>()) {
			_case_begin_23041857e:;
			{
				return _220149941_binary(&(*_self_), _102728_m.operator jule::Ptr<_21dd08de8_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd09349_UnaryExprModel>>()) {
			_case_begin_230418606:;
			{
				return _2201dee48_unary(&(*_self_), _102728_m.operator jule::Ptr<_21dd09349_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd09c40_StructLitExprModel>>()) {
			_case_begin_23041867d:;
			{
				return _220146b91_structure_lit(&(*_self_), _102728_m.operator jule::Ptr<_21dd09c40_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0a12a_AllocStructLitExprModel>>()) {
			_case_begin_230418b9a:;
			{
				return _220197054_alloc_structure(&(*_self_), _102728_m.operator jule::Ptr<_21dd0a12a_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0a757_CastingExprModel>>()) {
			_case_begin_230418c22:;
			{
				return _2201971b9_casting(&(*_self_), _102728_m.operator jule::Ptr<_21dd0a757_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0b23b_FnCallExprModel>>()) {
			_case_begin_230418c99:;
			{
				return _2201a7284_func_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd0b23b_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0b68c_SliceExprModel>>()) {
			_case_begin_230418d21:;
			{
				return _220254b28_slice(&(*_self_), _102728_m.operator jule::Ptr<_21dd0b68c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0ec89_ArrayExprModel>>()) {
			_case_begin_230418d98:;
			{
				return _220257323_array(&(*_self_), _102728_m.operator jule::Ptr<_21dd0ec89_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2202408e4_UnsafeIndexingExprModel>>()) {
			_case_begin_230418e20:;
			{
				return _220255387_unsafe_indexing(&(*_self_), _102728_m.operator jule::Ptr<_2202408e4_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0bbdc_IndexingExprModel>>()) {
			_case_begin_230418e97:;
			{
				return _220254ed0_indexing(&(*_self_), _102728_m.operator jule::Ptr<_21dd0bbdc_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0c13d_AnonFnExprModel>>()) {
			_case_begin_23041901e:;
			{
				return _22025573e_anon_func(&(*_self_), _102728_m.operator jule::Ptr<_21dd0c13d_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0cade_MapExprModel>>()) {
			_case_begin_230419096:;
			{
				return _220255ae6_map(&(*_self_), _102728_m.operator jule::Ptr<_21dd0cade_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0d23d_SlicingExprModel>>()) {
			_case_begin_23041911d:;
			{
				return _220255e9d_slicing(&(*_self_), _102728_m.operator jule::Ptr<_21dd0d23d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>>()) {
			_case_begin_230419195:;
			{
				return _220256355_trait_sub(&(*_self_), _102728_m.operator jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
			_case_begin_23041921c:;
			{
				return _22025670c_structure_sub(&(*_self_), _102728_m.operator jule::Ptr<_21dd0e294_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd100db_CommonIdentExprModel>>()) {
			_case_begin_230419294:;
			{
				return _220256ab4_common_ident(&(*_self_), _102728_m.operator jule::Ptr<_21dd100db_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd107c3_CommonSubIdentExprModel>>()) {
			_case_begin_23041931b:;
			{
				return _220256e6b_common_sub(&(*_self_), _102728_m.operator jule::Ptr<_21dd107c3_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd10b03_TupleExprModel>>()) {
			_case_begin_230419393:;
			{
				return _220257e39_tuple(&(*_self_), _102728_m.operator jule::Ptr<_21dd10b03_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>>()) {
			_case_begin_23041941a:;
			{
				return _220258698_out_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>>()) {
			_case_begin_230419492:;
			{
				return _220258a50_outln_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd11e34_BuiltinNewCallExprModel>>()) {
			_case_begin_230419519:;
			{
				return _2202582e1_new_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd11e34_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>>()) {
			_case_begin_230419591:;
			{
				return _220258e07_panic_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd123eb_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel>>()) {
			_case_begin_230419618:;
			{
				return _2202592ae_assert_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>>()) {
			_case_begin_230419690:;
			{
				return _220259666_error_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13078_BuiltinMakeCallExprModel>>()) {
			_case_begin_230419717:;
			{
				return _220259a1d_make_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd13078_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>>()) {
			_case_begin_23041978e:;
			{
				return _22025a27c_append_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd13540_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel>>()) {
			_case_begin_230419816:;
			{
				return _22025a634_clone_call(&(*_self_), _102728_m.operator jule::Ptr<_21dd1196c_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd13d37_SizeofExprModel>>()) {
			_case_begin_23041988d:;
			{
				return _22025a9db_sizeof(&(*_self_), _102728_m.operator jule::Ptr<_21dd13d37_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd144db_AlignofExprModel>>()) {
			_case_begin_230419915:;
			{
				return _22025ad93_alignof(&(*_self_), _102728_m.operator jule::Ptr<_21dd144db_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd147a5_RuneExprModel>>()) {
			_case_begin_23041998c:;
			{
				return _22025b24a_rune_lit(&(*_self_), _102728_m.operator jule::Ptr<_21dd147a5_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0e85a_StructStaticIdentExprModel>>()) {
			_case_begin_230419a14:;
			{
				return _22025b602_structure_static(&(*_self_), _102728_m.operator jule::Ptr<_21dd0e85a_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd14b18_IntegratedToStrExprModel>>()) {
			_case_begin_230419a8b:;
			{
				return _22025b9a9_integrated_to_str(&(*_self_), _102728_m.operator jule::Ptr<_21dd14b18_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd15146_TernaryExprModel>>()) {
			_case_begin_230419b13:;
			{
				return _22025bd61_ternary(&(*_self_), _102728_m.operator jule::Ptr<_21dd15146_TernaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd15597_BackendEmitExprModel>>()) {
			_case_begin_230419b8a:;
			{
				return _22025c218_backend_emit(&(*_self_), _102728_m.operator jule::Ptr<_21dd15597_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd158e9_FreeExprModel>>()) {
			_case_begin_230419c12:;
			{
				return _22025c5c0_free(&(*_self_), _102728_m.operator jule::Ptr<_21dd158e9_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2202412da_MutSlicingExprModel>>()) {
			_case_begin_230419c89:;
			{
				return _22025c977_mut_slicing(&(*_self_), _102728_m.operator jule::Ptr<_2202412da_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2202417c4_StrInsertBeginExprModel>>()) {
			_case_begin_230419d11:;
			{
				return _22025cd2e_str_insert_begin(&(*_self_), _102728_m.operator jule::Ptr<_2202417c4_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_23041802e:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_230417e52:;
	}
}



inline jule::Str _22025d58d_expr(_2201e99be_ExprCoder* _self_,jule::Any _112627_e) {
	jule::Str _112717_obj = _22025d1d6_model(&(*_self_), _112627_e);
	if ((_112717_obj.len() == 0LL) || (_112717_obj[0LL] != '(')) {
		return _112717_obj;
	}
	{
		auto &_match_expr{ _112627_e };
		
		if (_match_expr.type_is<jule::Ptr<_21dd08de8_BinopExprModel>>()) {
			_case_begin_230435d71:;
			{
				(_112717_obj).mut_slice(1LL,_112717_obj.len() - 1LL);
			}
		}
		_match_end_230435b95:;
	}
	return _112717_obj;
}



inline jule::Str _22025d945_val(_2201e99be_ExprCoder* _self_,jule::Ptr<_21ebbe362_Value> _113826_v) {
	if (_21ebbda59_is_const(_113826_v.get()._field_data.ptr())) {
		return _220239668_constant(&(*_self_), _113826_v.get()._field_data.get()._field_constant,(_113826_v.get()._field_data.get()._field_kind != nullptr) && _21ec0daaa_is_f32(_21ec087b9_prim(_113826_v.get()._field_data.get()._field_kind.ptr()).ptr()));
	}
	return _22025d58d_expr(&(*_self_), _113826_v.get()._field_data.get()._field_model);
}



inline jule::Str _22025dcec_init_expr(_2201e99be_ExprCoder* _self_,jule::Ptr<_21ec06223_TypeKind> _114532_t) {
	if ((_21ec08d6e_ptr(_114532_t.ptr()) != nullptr)) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_21ddb6aee_Enum> _114917_enm = _21ec09149_enm(_114532_t.ptr());
	if ((_114917_enm != nullptr)) {
		return _22025d945_val(&(*_self_), _114917_enm.get()._field_items[0LL].get()._field_value);
	}
	return (static__220ddc1d8_kind(_114532_t) + jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _2201e99be_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__220261c34_clone_func_decl(jule::Ptr<_21dd03266_Struct>& _1032_s) {
	jule::Str _1117_obj = static__220dda45b_structure(_1032_s);
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__220262042_clone_func_def(jule::Ptr<_21dd03266_Struct>& _1631_s) {
	jule::Str _1717_obj = static__220dda45b_structure(_1631_s);
	_1717_obj+=jule::Str(" ", 1) + _1717_obj;
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _22026188d_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__220263b59_to_ident(jule::Str _3124_ident) {
	return jule::Str("_", 1) + _3124_ident;
}



inline jule::Str static__220263e67_addr(jule::U64 _3620_addr) {
	return jule::Str("_", 1) + _21ea2e502_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3620_addr)),15LL);
}



inline jule::Str static__220264352_to_out(jule::Str _4522_ident,jule::U64 _4534_addr) {
	if ((_4534_addr != 0LLU)) {
		jule::Str _4721_obj = static__220263e67_addr(_4534_addr);
		_4721_obj+=jule::Str("_", 1);
		_4721_obj+=_4522_ident;
		return _4721_obj;
	}
	return static__220263b59_to_ident(_4522_ident);
}



inline jule::Str static__220264819_to_local(jule::I64 _6124_row,jule::I64 _6134_col,jule::Str _6144_ident) {
	jule::Str _6217_obj = _21ea2e7cc_itoa(_6124_row);
	_6217_obj+=_21ea2e7cc_itoa(_6134_col);
	_6217_obj+=jule::Str("_", 1);
	_6217_obj+=_6144_ident;
	return static__220263b59_to_ident(_6217_obj);
}



inline jule::Str static__220264b27_func(jule::Ptr<_21dd19249_Fn>& _7021_f) {
	{
		
		if (_7021_f.get()._field_cpp_linked) {
			_case_begin_230444126:;
			{
				return _7021_f.get()._field_ident;
			}
		}
		else if ((_7021_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_23044418c:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_21dd199db_is_method(_7021_f.ptr())) {
			_case_begin_2304437eb:;
			{
				jule::Str _7721_obj = static__220264352_to_out(_7021_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_7021_f)));
				if (_7021_f.get()._field_statically) {
					(_7721_obj).buffer.insert(0, (jule::Str("static_", 7)));
					return _7721_obj;
				}
				return _7721_obj;
			}
		}
		else {
			_case_begin_230443785:;
			{
				return static__220264352_to_out(_7021_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_7021_f)));
			}
		}
		_match_end_2304435ed:;
	}
}



inline jule::Str static__220264e35_func_ins(jule::Ptr<_21dd1cc42_FnIns>& _8929_f) {
	if (_21dd1d8be_is_builtin(_8929_f.ptr())) {
		return jule::Str("jule::", 6) + _8929_f.get()._field_decl.get()._field_ident;
	}
	if (_8929_f.get()._field_decl.get()._field_cpp_linked || (_8929_f.get()._field_generics.len() == 0LL)) {
		return static__220264b27_func(_8929_f.get()._field_decl);
	}
	{
		auto &expr = _8929_f.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_230447e4e:;
		if (it != expr.end()) {
			jule::I64 _23044805e_i = it - expr.begin();
			jule::Ptr<_21dd1cc42_FnIns> _23044827e_ins = *it;
			{
				if (_21dd1e051_same(_23044827e_ins.ptr(), _8929_f)) {
					jule::Str _9825_obj = static__220264b27_func(_8929_f.get()._field_decl);
					_9825_obj+=jule::Str("_", 1);
					_9825_obj+=_21ea2e7cc_itoa(_23044805e_i);
					return _9825_obj;
				}
			}
			_iter_next_230447e4e:;
			++it;
			_23044805e_i++;
			goto _iter_begin_230447e4e;
		}
		_iter_end_230447e4e:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__220265243_trait_decl(jule::Ptr<_21deee929_Trait> _10826_t) {
	if (_21dd79c7c_is_builtin(_10826_t.ptr())) {
		return jule::Str("jule::", 6) + _10826_t.get()._field_ident;
	}
	return static__220264352_to_out(_10826_t.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_10826_t)));
}



inline jule::Str static__220265551_param(jule::Ptr<_21dd17423_Param>& _11622_p) {
	if (_21c62aed0_is_anon_ident(_11622_p.get()._field_ident) || _21c62abc2_is_ignore_ident(_11622_p.get()._field_ident)) {
		return jule::Str();
	}
	if (_21dd17b2c_is_self(_11622_p.ptr())) {
		return jule::Str("_self_", 6);
	}
	return static__220264819_to_local(_11622_p.get()._field_token._field_row,_11622_p.get()._field_token._field_column,_11622_p.get()._field_ident);
}



inline jule::Str static__22026585e_structure(jule::Ptr<_21dd03266_Struct>& _12726_s) {
	if (_12726_s.get()._field_cpp_linked) {
		if (_220dd6622_has_directive(_12726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _12726_s.get()._field_ident;
		}
		return jule::Str("struct ", 7) + _12726_s.get()._field_ident;
	}
	return static__220264352_to_out(_12726_s.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_12726_s)));
}



inline jule::Str static__220265b6c_structure_ins(jule::Ptr<_21dd06742_StructIns>& _13834_s) {
	if (_13834_s.get()._field_decl.get()._field_cpp_linked || (_13834_s.get()._field_generics.len() == 0LL)) {
		return static__22026585e_structure(_13834_s.get()._field_decl);
	}
	{
		auto &expr = _13834_s.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_230450eac:;
		if (it != expr.end()) {
			jule::I64 _2304510de_i = it - expr.begin();
			jule::Ptr<_21dd06742_StructIns> _2304512ed_ins = *it;
			{
				if (_21dd074ce_same(_2304512ed_ins.ptr(), _13834_s)) {
					jule::Str _14425_obj = static__22026585e_structure(_13834_s.get()._field_decl);
					_14425_obj+=jule::Str("_", 1);
					_14425_obj+=_21ea2e7cc_itoa(_2304510de_i);
					return _14425_obj;
				}
			}
			_iter_next_230450eac:;
			++it;
			_2304510de_i++;
			goto _iter_begin_230450eac;
		}
		_iter_end_230450eac:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__220265e7a_field(jule::Ptr<_21dc10607_Field>& _15422_f) {
	if (_15422_f.get()._field_owner.get()._field_cpp_linked) {
		return _15422_f.get()._field_ident;
	}
	return jule::Str("_field_", 7) + _15422_f.get()._field_ident;
}



inline jule::Str static__220266288_var(jule::Ptr<_21eb75615_Var> _16223_v) {
	{
		
		if (_16223_v.get()._field_cpp_linked) {
			_case_begin_230454246:;
			{
				return _16223_v.get()._field_ident;
			}
		}
		else if ((_16223_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_23045391b:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_16223_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_230453982:;
			{
				if ((_21ec08a94_sptr(_16223_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				}
				return jule::Str("_self_", 6);
			}
		}
		else if ((_16223_v.get()._field_scope != nullptr)) {
			_case_begin_2304539e8:;
			{
				return static__220264819_to_local(_16223_v.get()._field_token._field_row,_16223_v.get()._field_token._field_column,_16223_v.get()._field_ident);
			}
		}
		else {
			_case_begin_2304538a5:;
			{
				return static__220264352_to_out(_16223_v.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_16223_v)));
			}
		}
		_match_end_23045350e:;
	}
}



inline jule::Str static__220266596_iter_begin(jule::U64 _18126_it) {
	return jule::Str("_iter_begin_", 12) + _21ea2e502_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18126_it)),15LL);
}



inline jule::Str static__2202668a4_iter_end(jule::U64 _18624_it) {
	return jule::Str("_iter_end_", 10) + _21ea2e502_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18624_it)),15LL);
}



inline jule::Str static__220266bb2_iter_next(jule::U64 _19125_it) {
	return jule::Str("_iter_next_", 11) + _21ea2e502_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19125_it)),15LL);
}



inline jule::Str static__220266ec0_label(jule::Str _19621_ident) {
	return jule::Str("_julec_label_", 13) + _19621_ident;
}



inline jule::Str static__2202672cd_match_end(jule::U64 _20125_m) {
	return jule::Str("_match_end_", 11) + _21ea2e502_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20125_m)),15LL);
}



inline jule::Str static__2202675db_case_begin(jule::U64 _20626_c) {
	return jule::Str("_case_begin_", 12) + _21ea2e502_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20626_c)),15LL);
}







std::ostream &operator<<(std::ostream &_Stream, _22026374c_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220da8b44_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220d89141_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _220dd6d09_to_str(_220dd6897_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _220dd71b1_equals(jule::Ptr<_220dd6897_CustomType> _self_,jule::Ptr<_21ec06223_TypeKind> _5326_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _220dd6897_CustomType _Src) {
	_Stream << _220dd6d09_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__220dd7997_to_type(jule::Str _7327_id) {
	_7327_id=_21eb1ea87_real_kind_of(_7327_id);
	if ((97LL <= _7327_id[0LL]) && (_7327_id[0LL] <= 122LLU)) {
		_7327_id[0LL]-=32LLU;
	}
	return jule::Str("jule::", 6) + _7327_id;
}



inline jule::Str static__220dd7ca5_prim(jule::Ptr<_21ec0b58b_Prim> _8220_p) {
	return static__220dd7997_to_type(_21ec0b965_to_str(_8220_p.ptr()));
}



inline jule::Str static__220dd80b3_tuple(jule::Ptr<_21ec11b46_Tuple> _8725_t) {
	jule::Str _8817_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _8725_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_230552bb3:;
		if (it != expr.end()) {
			jule::Ptr<_21ec06223_TypeKind> _230552c7e_tk = *it;
			{
				_8817_obj+=static__220ddc1d8_kind(_230552c7e_tk);
				_8817_obj+=jule::Str(",", 1);
			}
			_iter_next_230552bb3:;
			++it;
			goto _iter_begin_230552bb3;
		}
		_iter_end_230552bb3:;
	}
	(_8817_obj).mut_slice(0LL,_8817_obj.len() - 1LL);
	_8817_obj+=jule::Str(">", 1);
	return _8817_obj;
}



inline jule::Str static__220dd83c1_as_sptr(jule::Str _9923_elem) {
	jule::Str _10017_obj = jule::Str("jule::Ptr<", 10);
	_10017_obj+=_9923_elem;
	_10017_obj+=jule::Str(">", 1);
	return _10017_obj;
}



inline jule::Str static__220dd86ce_as_ptr(jule::Str _10722_elem) {
	return (_10722_elem + jule::Str("*", 1));
}



inline jule::Str static__220dd89dc_sptr(jule::Ptr<_21ec103e7_Sptr> _11224_sptr) {
	return static__220dd83c1_as_sptr(static__220ddc1d8_kind(_11224_sptr.get()._field_elem));
}



inline jule::Str static__220dd8cea_ptr(jule::Ptr<_21ec14275_Ptr> _11723_p) {
	
	if (_21ec14dbe_is_unsafe(_11723_p.ptr())) {
		return jule::Str("void*", 5);
	}
	jule::Str _12217_elem = static__220ddc1d8_kind(_11723_p.get()._field_elem);
	_12217_elem+=jule::Str("*", 1);
	return _12217_elem;
}



inline jule::Str static__220dd9108_enum_decl(jule::Ptr<_21ddb6aee_Enum> _12829_e) {
	return static__220ddc1d8_kind(_12829_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__220dd9416_as_slice(jule::Ptr<_21ec06223_TypeKind> _13228_elem) {
	jule::Str _13317_obj = jule::Str("jule::Slice<", 12);
	_13317_obj+=static__220ddc1d8_kind(_13228_elem);
	_13317_obj+=jule::Str(">", 1);
	return _13317_obj;
}



inline jule::Str static__220dd9724_slice(jule::Ptr<_21ec10eca_Slc> _14025_s) {
	return static__220dd9416_as_slice(_14025_s.get()._field_elem);
}



inline jule::Str static__220dd9a32_map(jule::Ptr<_21ec128b1_Map> _14523_m) {
	jule::Str _14617_obj = jule::Str("jule::Map<", 10);
	_14617_obj+=static__220ddc1d8_kind(_14523_m.get()._field_key);
	_14617_obj+=jule::Str(",", 1);
	_14617_obj+=static__220ddc1d8_kind(_14523_m.get()._field_val);
	_14617_obj+=jule::Str(">", 1);
	return _14617_obj;
}



inline jule::Str static__220dd9d40_trait_ident(jule::Str _15427_ident) {
	jule::Str _15517_obj = jule::Str("jule::Trait<", 12);
	_15517_obj+=_15427_ident;
	_15517_obj+=jule::Str(">", 1);
	return _15517_obj;
}



inline jule::Str static__220dda14d_trait_decl(jule::Ptr<_21deee929_Trait> _16226_t) {
	return static__220dd9d40_trait_ident(static__220265243_trait_decl(_16226_t));
}



inline jule::Str static__220dda45b_structure(jule::Ptr<_21dd03266_Struct> _16725_s) {
	jule::Str _16817_rep = jule::Str();
	if (_16725_s.get()._field_cpp_linked && (!(_220dd6622_has_directive(_16725_s.get()._field_directives,jule::Str("typedef", 7))))) {
		_16817_rep+=jule::Str("struct ", 7);
	}
	_16817_rep+=static__22026585e_structure(_16725_s);
	return _16817_rep;
}



inline jule::Str static__220dda769_structure_ins(jule::Ptr<_21dd06742_StructIns> _17733_s) {
	if (_17733_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17921_ident = static__220265b6c_structure_ins(_17733_s);
		if ((_17733_s.get()._field_generics.len() > 0LL)) {
			_17921_ident+=jule::Str("<", 1);
			{
				auto &expr = _17733_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_230560330:;
				if (it != expr.end()) {
					jule::Ptr<_21ec06223_TypeKind> _23056083b_g = *it;
					{
						_17921_ident+=static__220ddc1d8_kind(_23056083b_g);
						_17921_ident+=jule::Str(",", 1);
					}
					_iter_next_230560330:;
					++it;
					goto _iter_begin_230560330;
				}
				_iter_end_230560330:;
			}
			(_17921_ident).mut_slice(0LL,_17921_ident.len() - 1LL);
			_17921_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_21c525490_Directive> _18917_d = _220dd61d2_find_directive(_17733_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_18917_d != nullptr)) {
			(_17921_ident).buffer.insert(0, ((_22025e1b5_concat_all_parts(_18917_d.get()._field_args) + jule::Str("::", 2))));
		}
		return _17921_ident;
	}
	return static__220265b6c_structure_ins(_17733_s);
}



inline jule::Str static__220ddaa77_array(jule::Ptr<_21ec13692_Arr> _19925_a) {
	jule::Str _20017_obj = jule::Str("jule::Array<", 12);
	_20017_obj+=static__220ddc1d8_kind(_19925_a.get()._field_elem);
	_20017_obj+=jule::Str(",", 1);
	_20017_obj+=_21ea2e7cc_itoa(_19925_a.get()._field_n);
	_20017_obj+=jule::Str(">", 1);
	return _20017_obj;
}



inline jule::Str static__220ddad85_param(jule::Ptr<_21dd17423_Param>& _20926_p) {
	jule::Str _21017_obj = jule::Str();
	if (_20926_p.get()._field_variadic) {
		_21017_obj+=jule::Str("jule::Slice<", 12);
		_21017_obj+=static__220ddc1d8_kind(_20926_p.get()._field_kind.get()._field_kind);
		_21017_obj+=jule::Str(">", 1);
	} else {
		_21017_obj+=static__220ddc1d8_kind(_20926_p.get()._field_kind.get()._field_kind);
	}
	if (_20926_p.get()._field_reference) {
		_21017_obj+=jule::Str("&", 1);
	}
	return _21017_obj;
}



inline jule::Str static__220ddb193_param_ins(jule::Ptr<_21dd1badc_ParamIns>& _22530_p) {
	jule::Str _22617_obj = jule::Str();
	if (_22530_p.get()._field_decl.get()._field_variadic) {
		_22617_obj+=jule::Str("jule::Slice<", 12);
		_22617_obj+=static__220ddc1d8_kind(_22530_p.get()._field_kind);
		_22617_obj+=jule::Str(">", 1);
	} else {
		_22617_obj+=static__220ddc1d8_kind(_22530_p.get()._field_kind);
	}
	if (_22530_p.get()._field_decl.get()._field_reference) {
		_22617_obj+=jule::Str("&", 1);
	}
	return _22617_obj;
}



inline jule::Str static__220ddb4a1_func_result(jule::Ptr<_21dd19249_Fn>& _24132_f) {
	if (_21dd19711_is_void(_24132_f.ptr())) {
		if (_24132_f.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_24132_f.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__220ddc1d8_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind)) + jule::Str(">", 1));
	}
	return static__220ddc1d8_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind);
}



inline jule::Str static__220ddb7ae_func_ins_result(jule::Ptr<_21dd1cc42_FnIns>& _25536_f) {
	if (_21dd19711_is_void(_25536_f.get()._field_decl.ptr())) {
		if (_25536_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_25536_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__220ddc1d8_kind(_25536_f.get()._field_result)) + jule::Str(">", 1));
	}
	return static__220ddc1d8_kind(_25536_f.get()._field_result);
}



inline jule::Str static__220ddbabc_anon_func(jule::Ptr<_21dd1cc42_FnIns> _26829_f) {
	jule::Str _26917_decl = static__220ddb7ae_func_ins_result(_26829_f);
	_26917_decl+=jule::Str("(", 1);
	if ((_26829_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26829_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_23056dd66:;
			if (it != expr.end()) {
				jule::Ptr<_21dd1badc_ParamIns> _23056de32_param = *it;
				{
					if (_21dd17b2c_is_self(_23056de32_param.get()._field_decl.ptr())) {
						goto _iter_next_23056dd66;
					}
					_26917_decl+=static__220ddb193_param_ins(_23056de32_param);
					_26917_decl+=jule::Str(",", 1);
				}
				_iter_next_23056dd66:;
				++it;
				goto _iter_begin_23056dd66;
			}
			_iter_end_23056dd66:;
		}
		(_26917_decl).mut_slice(0LL,_26917_decl.len() - 1LL);
	} else {
		_26917_decl+=jule::Str("void", 4);
	}
	_26917_decl+=jule::Str(")", 1);
	return _26917_decl;
}



inline jule::Str static__220ddbdca_func(jule::Ptr<_21dd1cc42_FnIns> _28824_f) {
	jule::Str _28917_obj = jule::Str("jule::Fn<", 9);
	_28917_obj+=static__220ddbabc_anon_func(_28824_f);
	_28917_obj+=jule::Str(">", 1);
	return _28917_obj;
}



inline jule::Str static__220ddc1d8_kind(jule::Ptr<_21ec06223_TypeKind> _29624_k) {
	{
		
		if (_21ec07004_cpp_linked(_29624_k.ptr())) {
			_case_begin_230571be3:;
			{
				return _29624_k.get()._field_cpp_ident;
			}
		}
		else if ((_21ec087b9_prim(_29624_k.ptr()) != nullptr)) {
			_case_begin_230571d7a:;
			{
				return static__220dd7ca5_prim(_21ec087b9_prim(_29624_k.ptr()));
			}
		}
		else if ((_21ec0a634_tup(_29624_k.ptr()) != nullptr)) {
			_case_begin_230571de1:;
			{
				return static__220dd80b3_tuple(_21ec0a634_tup(_29624_k.ptr()));
			}
		}
		else if ((_21ec08a94_sptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_230571e57:;
			{
				return static__220dd89dc_sptr(_21ec08a94_sptr(_29624_k.ptr()));
			}
		}
		else if ((_21ec08d6e_ptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_230571ece:;
			{
				return static__220dd8cea_ptr(_21ec08d6e_ptr(_29624_k.ptr()));
			}
		}
		else if ((_21ec09149_enm(_29624_k.ptr()) != nullptr)) {
			_case_begin_230572056:;
			{
				return static__220dd9108_enum_decl(_21ec09149_enm(_29624_k.ptr()));
			}
		}
		else if ((_21ec096ee_slc(_29624_k.ptr()) != nullptr)) {
			_case_begin_2305720cd:;
			{
				return static__220dd9724_slice(_21ec096ee_slc(_29624_k.ptr()));
			}
		}
		else if ((_21ec0a359_map(_29624_k.ptr()) != nullptr)) {
			_case_begin_230572155:;
			{
				return static__220dd9a32_map(_21ec0a359_map(_29624_k.ptr()));
			}
		}
		else if ((_21ec0a07e_trt(_29624_k.ptr()) != nullptr)) {
			_case_begin_2305721cc:;
			{
				return static__220dda14d_trait_decl(_21ec0a07e_trt(_29624_k.ptr()));
			}
		}
		else if ((_21ec09ca4_strct(_29624_k.ptr()) != nullptr)) {
			_case_begin_230572254:;
			{
				return static__220dda769_structure_ins(_21ec09ca4_strct(_29624_k.ptr()));
			}
		}
		else if ((_21ec09424_arr(_29624_k.ptr()) != nullptr)) {
			_case_begin_2305722cb:;
			{
				return static__220ddaa77_array(_21ec09424_arr(_29624_k.ptr()));
			}
		}
		else if ((_21ec099c9_fnc(_29624_k.ptr()) != nullptr)) {
			_case_begin_230572353:;
			{
				return static__220ddbdca_func(_21ec099c9_fnc(_29624_k.ptr()));
			}
		}
		_match_end_230571b16:;
	}
	{
		auto &_match_expr{ _29624_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_220dd6897_CustomType>>()) {
			_case_begin_23057b3e5:;
			{
				return _29624_k.get()._field_kind.operator jule::Ptr<_220dd6897_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_23057aee9:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_23057ad51:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _220dd7414_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _230595b4b_name(_220dee78e_Flag_0* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _230595cb1_what(_220dee78e_Flag_0* _self_) {
	return (*_self_)._field__what;
}



inline void _230595e26_reset(_220dee78e_Flag_0* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _23059608b_short(_220dee78e_Flag_0* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _220dee78e_Flag_0 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _230598e7e_name(_220dee78e_Flag_1* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _230596212_what(_220dee78e_Flag_1* _self_) {
	return (*_self_)._field__what;
}



inline void _230597895_reset(_220dee78e_Flag_1* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _230598bd7_short(_220dee78e_Flag_1* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _220dee78e_Flag_1 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _23059c48d_name(_220dee78e_Flag_2* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _230599721_what(_220dee78e_Flag_2* _self_) {
	return (*_self_)._field__what;
}



inline void _23059ada4_reset(_220dee78e_Flag_2* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _23059c1e6_short(_220dee78e_Flag_2* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _220dee78e_Flag_2 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _23059cc96_name(_220dee78e_Flag_3* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _2305a09e1_what(_220dee78e_Flag_3* _self_) {
	return (*_self_)._field__what;
}



inline void _23059e407_reset(_220dee78e_Flag_3* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _2305a0749_short(_220dee78e_Flag_3* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _220dee78e_Flag_3 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2305a4000_name(_220dee78e_Flag_4* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _2305a1283_what(_220dee78e_Flag_4* _self_) {
	return (*_self_)._field__what;
}



inline void _2305a2916_reset(_220dee78e_Flag_4* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _2305a3c58_short(_220dee78e_Flag_4* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _220dee78e_Flag_4 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220e00b7a_FlagSet> static__220e00e99_new(void) {
	return jule::new_ptr<_220e00b7a_FlagSet>(_220e00b7a_FlagSet(jule::Slice<jule::Trait<_220dee393_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_220dee393_CommonFlag> _220e0150a_find_flag(_220e00b7a_FlagSet* _self_,jule::Str _6732_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_2305acdb6:;
		if (it != expr.end()) {
			jule::Trait<_220dee393_CommonFlag> _2305ace82_flag = *it;
			{
				if (_220dee393_CommonFlag_mptr_data[(_2305ace82_flag).type_offset]._220dedc66_name(_2305ace82_flag) == _6732_name) {
					return _2305ace82_flag;
				}
			}
			_iter_next_2305acdb6:;
			++it;
			goto _iter_begin_2305acdb6;
		}
		_iter_end_2305acdb6:;
	}
	return nullptr;
}



inline jule::Trait<_220dee393_CommonFlag> _220e018b2_find_flag_short(_220e00b7a_FlagSet* _self_,jule::I32 _7738_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_2305ae2e6:;
		if (it != expr.end()) {
			jule::Trait<_220dee393_CommonFlag> _2305ae3b2_flag = *it;
			{
				if (_220dee393_CommonFlag_mptr_data[(_2305ae3b2_flag).type_offset]._220deddcb_short(_2305ae3b2_flag) == _7738_name) {
					return _2305ae3b2_flag;
				}
			}
			_iter_next_2305ae2e6:;
			++it;
			goto _iter_begin_2305ae2e6;
		}
		_iter_end_2305ae2e6:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_220dee393_CommonFlag>> _220e01b8c_flags(_220e00b7a_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _220e02044_parse(_220e00b7a_FlagSet* _self_,jule::Slice<jule::Str> _11128_args) {
	_220e03b39_ArgParser _11217_ap = _220e03b39_ArgParser((*_self_),_11128_args,jule::Slice<jule::Str>(),jule::I64());
	({
		auto except = _220e05432_parse(&_11217_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11217_ap._field_content);
}



inline void _220e02286_reset(_220e00b7a_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_2305b2b8a:;
		if (it != expr.end()) {
			jule::Trait<_220dee393_CommonFlag> _2305b2e10_f = *it;
			{
				_220dee393_CommonFlag_mptr_data[(_2305b2e10_f).type_offset]._220dee22d_reset(_2305b2e10_f);
			}
			_iter_next_2305b2b8a:;
			++it;
			goto _iter_begin_2305b2b8a;
		}
		_iter_end_2305b2b8a:;
	}
}



inline jule::Ptr<_220dee78e_Flag_4> _220e027e7_add_flag_common_0(_220e00b7a_FlagSet* _self_,jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	{
		
{
			_case_begin_230635e72:;
			{
				goto _match_end_230635e1c;
			}
		}
		_match_end_230635e1c:;
	}
	if ((_220e0150a_find_flag(&(*_self_), _12741_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && (_220e018b2_find_flag_short(&(*_self_), _12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_220dee78e_Flag_4> _14417_flag = jule::new_ptr<_220dee78e_Flag_4>(_220dee78e_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ptr<jule::Str>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_220dee393_CommonFlag>(_14417_flag, 4));
	return _14417_flag;
}

inline jule::Ptr<_220dee78e_Flag_3> _220e027e7_add_flag_common_1(_220e00b7a_FlagSet* _self_,jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	{
		
{
			_case_begin_230640b4c:;
			{
				goto _match_end_230640ae7;
			}
		}
		_match_end_230640ae7:;
	}
	if ((_220e0150a_find_flag(&(*_self_), _12741_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && (_220e018b2_find_flag_short(&(*_self_), _12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_220dee78e_Flag_3> _14417_flag = jule::new_ptr<_220dee78e_Flag_3>(_220dee78e_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ptr<jule::Bool>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_220dee393_CommonFlag>(_14417_flag, 3));
	return _14417_flag;
}





inline void _220e034da_add_var_0(_220e00b7a_FlagSet* _self_,jule::Ptr<jule::Str> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_220dee78e_Flag_4> _17217_flag = _220e027e7_add_flag_common_0(&(*_self_), _17146_name,_17157_short,_17170_what);
	_17217_flag.get()._field__default=(*(_17137_var));
	_17217_flag.get()._field__data=_17137_var;
}

inline void _220e034da_add_var_1(_220e00b7a_FlagSet* _self_,jule::Ptr<jule::Bool> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_220dee78e_Flag_3> _17217_flag = _220e027e7_add_flag_common_1(&(*_self_), _17146_name,_17157_short,_17170_what);
	_17217_flag.get()._field__default=(*(_17137_var));
	_17217_flag.get()._field__data=_17137_var;
}







std::ostream &operator<<(std::ostream &_Stream, _220e00b7a_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c4e59b0_is_nil(_21c4d84db_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d84db_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d870b_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d892b_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c57727d_is_self(_21c4d8b4b_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d8b4b_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d8d6b_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21cba5180_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d908b_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c525490_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63d630_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63d850_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63da70_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c52a880_unhandled(_21c63dc90_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _21c4d92ab_ignored(_21c63dc90_FnCallExpr* _self_) {
	return ((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63dc90_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2d8dc_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c4ec6ed_is_targeted(_21c63deb0_FieldExprPair* _self_) {
	return (*_self_)._field_field._field_id != static_cast<jule::U64>(0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _21c63deb0_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c5d253b_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c4edbe9_is_empty(_21c63e400_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _21c63e400_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63e620_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21dd05be7_FieldIns> _21dd0097d_instance(jule::Ptr<_21dc10607_Field> _self_) {
	return jule::new_ptr<_21dd05be7_FieldIns>(_21dd05be7_FieldIns(_self_,_self_.get()._field_kind.get()._field_kind,jule::Ptr<_21ebbd053_Data>()));
}







std::ostream &operator<<(std::ostream &_Stream, _21dc10607_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21eb2e8dd_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c50e2d1_is_empty(_21c63e840_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _21c63e840_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21dd06742_StructIns> _21dd0370b_instance(jule::Ptr<_21dd03266_Struct> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	jule::Ptr<_21dd06742_StructIns> _10017_ins = jule::new_ptr<_21dd06742_StructIns>(_21dd06742_StructIns(jule::Bool(),_self_,jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd05be7_FieldIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_fields.len())),jule::Slice<jule::Ptr<_21dd19249_Fn>>(),jule::Bool(),static__21dd2672e_new(),_21dd02188_Operators()));
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_222611ac6:;
		if (it != expr.end()) {
			jule::Ptr<_21dc10607_Field> _222612b0a_f = *it;
			{
				_10017_ins.get()._field_fields = jule::alloc_for_append(_10017_ins.get()._field_fields,1);_10017_ins.get()._field_fields.__push(_21dd0097d_instance(_222612b0a_f));
				if (((!(_222612b0a_f.get()._field_mutable)) && (_222612b0a_f.get()._field_kind.get()._field_kind != nullptr)) && _21ec07884_mutable(_222612b0a_f.get()._field_kind.get()._field_kind.ptr())) {
					_10017_ins.get()._field_mutable=true;
				}
			}
			_iter_next_222611ac6:;
			++it;
			goto _iter_begin_222611ac6;
		}
		_iter_end_222611ac6:;
	}
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_10017_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_10017_ins.get()._field_methods=jule::Slice<jule::Ptr<_21dd19249_Fn>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_methods.len()));
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_222615c73:;
			if (it != expr.end()) {
				jule::Ptr<_21dd19249_Fn> _222616625_f = *it;
				{
					jule::Ptr<_21dd19249_Fn> _11825_fins = jule::new_ptr<_21dd19249_Fn>((*(_222616625_f)));
					_11825_fins.get()._field_instances=nullptr;
					_10017_ins.get()._field_methods = jule::alloc_for_append(_10017_ins.get()._field_methods,1);_10017_ins.get()._field_methods.__push(_11825_fins);
				}
				_iter_next_222615c73:;
				++it;
				goto _iter_begin_222615c73;
			}
			_iter_end_222615c73:;
		}
	}
	return _10017_ins;
}



inline jule::Ptr<_21dd06742_StructIns> _21dd03ab3_append_instance(_21dd03266_Struct* _self_,jule::Ptr<_21dd06742_StructIns>& _12939_ins) {
	if (((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL)) {
		return (*_self_)._field_instances[0LL];
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_222618b00:;
		if (it != expr.end()) {
			jule::Ptr<_21dd06742_StructIns> _22261933c_ains = *it;
			{
				if (_21dd074ce_same(_22261933c_ains.ptr(), _12939_ins)) {
					return _22261933c_ains;
				}
			}
			_iter_next_222618b00:;
			++it;
			goto _iter_begin_222618b00;
		}
		_iter_end_222618b00:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12939_ins);
	return nullptr;
}



inline jule::Ptr<_21dd19249_Fn> _21dd04047_find_method(_21dd03266_Struct* _self_,jule::Str _14734_ident,jule::Bool _14746_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_22261b581:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _22261b64c_f = *it;
			{
				if ((_22261b64c_f.get()._field_statically == _14746_statically) && (_22261b64c_f.get()._field_ident == _14734_ident)) {
					return _22261b64c_f;
				}
			}
			_iter_next_22261b581:;
			++it;
			goto _iter_begin_22261b581;
		}
		_iter_end_22261b581:;
	}
	return nullptr;
}



inline jule::Ptr<_21eb75615_Var> _21dd043ee_find_static(_21dd03266_Struct* _self_,jule::Str _15834_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_22261cde0:;
		if (it != expr.end()) {
			jule::Ptr<_21eb75615_Var> _22261ceab_v = *it;
			{
				if (_22261ceab_v.get()._field_ident == _15834_ident) {
					return _22261ceab_v;
				}
			}
			_iter_next_22261cde0:;
			++it;
			goto _iter_begin_22261cde0;
		}
		_iter_end_22261cde0:;
	}
	return nullptr;
}



inline jule::Ptr<_21dc10607_Field> _21dd047a6_find_field(_21dd03266_Struct* _self_,jule::Str _16933_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_22261e353:;
		if (it != expr.end()) {
			jule::Ptr<_21dc10607_Field> _22261e41e_f = *it;
			{
				if (_22261e41e_f.get()._field_ident == _16933_ident) {
					return _22261e41e_f;
				}
			}
			_iter_next_22261e353:;
			++it;
			goto _iter_begin_22261e353;
		}
		_iter_end_22261e353:;
	}
	return nullptr;
}



inline jule::Bool _21dd04b5d_is_implements(_21dd03266_Struct* _self_,jule::Ptr<_21deee929_Trait> _17932_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_2226207b6:;
		if (it != expr.end()) {
			jule::Ptr<_21deee929_Trait> &_222620882_it = *it;
			{
				if (_17932_t == _222620882_it) {
					return true;
				}
			}
			_iter_next_2226207b6:;
			++it;
			goto _iter_begin_2226207b6;
		}
		_iter_end_2226207b6:;
	}
	return false;
}



inline jule::Bool _21dd05015_is_derives(_21dd03266_Struct* _self_,jule::Str _18929_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_222621ae7:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> &_222621bb3_d = *it;
			{
				if ((_222621bb3_d.get()._field_tag._field_kind == jule::Str("derive", 6))) {
					if ((_222621bb3_d.get()._field_args.len() == 1LL) && (_222621bb3_d.get()._field_args[0LL]._field_kind == _18929_ident)) {
						return true;
					}
				}
			}
			_iter_next_222621ae7:;
			++it;
			goto _iter_begin_222621ae7;
		}
		_iter_end_222621ae7:;
	}
	return false;
}



inline jule::Bool _21dd053bc_is_uses(_21dd03266_Struct* _self_,jule::Ptr<_21dd03266_Struct> _20126_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_222624149:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> &_222624215_u = *it;
			{
				while (_20126_s == _222624215_u) {
					{
						return true;
					}
				_iter_next_222624644:;
				}
				_iter_end_222624644:;
			}
			_iter_next_222624149:;
			++it;
			goto _iter_begin_222624149;
		}
		_iter_end_222624149:;
	}
	return false;
}



inline jule::Bool _21dd05697_has_ref_accessible(_21dd03266_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_222624ea2:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> &_2226251a0_m = *it;
			{
				if ((_2226251a0_m.get()._field_params.len() > 0LL) && _21dd17e07_is_ref(_2226251a0_m.get()._field_params[0LL].ptr())) {
					return true;
				}
			}
			_iter_next_222624ea2:;
			++it;
			goto _iter_begin_222624ea2;
		}
		_iter_end_222624ea2:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd03266_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d82aa_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4a343_find_package(_21eb49c8d_ImportInfo* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_21eb49c8d_ImportInfo> _21eb4a6ea_select_package(_21eb49c8d_ImportInfo* _self_,jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_21eb75615_Var> _21eb4ab7e_find_var(_21eb49c8d_ImportInfo* _self_,jule::Str _16431_ident,jule::Bool _16443_cpp_linked) {
	if ((!(_21eb4c752_is_lookupable(&(*_self_), _16431_ident)))) {
		return nullptr;
	}
	return _21eb4761a_find_var_in_package((*_self_)._field_package.get()._field_files,_16431_ident,false);
}



inline jule::Ptr<_21ec05288_TypeAlias> _21eb4b113_find_type_alias(_21eb49c8d_ImportInfo* _self_,jule::Str _17738_ident,jule::Bool _17750_cpp_linked) {
	if ((!(_21eb4c752_is_lookupable(&(*_self_), _17738_ident)))) {
		return nullptr;
	}
	return _21eb47b6a_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_17738_ident,false);
}



inline jule::Ptr<_21dd03266_Struct> _21eb4b597_find_struct(_21eb49c8d_ImportInfo* _self_,jule::Str _19034_ident,jule::Bool _19046_cpp_linked) {
	if ((!(_21eb4c752_is_lookupable(&(*_self_), _19034_ident)))) {
		return nullptr;
	}
	return _21eb48121_find_struct_in_package((*_self_)._field_package.get()._field_files,_19034_ident,false);
}



inline jule::Ptr<_21dd19249_Fn> _21eb4ba2b_find_fn(_21eb49c8d_ImportInfo* _self_,jule::Str _20330_ident,jule::Bool _20342_cpp_linked) {
	if ((!(_21eb4c752_is_lookupable(&(*_self_), _20330_ident)))) {
		return nullptr;
	}
	return _21eb4862c_find_fn_in_package((*_self_)._field_package.get()._field_files,_20330_ident,false);
}



inline jule::Ptr<_21deee929_Trait> _21eb4bdd3_find_trait(_21eb49c8d_ImportInfo* _self_,jule::Str _21533_ident) {
	if ((!(_21eb4c752_is_lookupable(&(*_self_), _21533_ident)))) {
		return nullptr;
	}
	return _21eb48a17_find_trait_in_package((*_self_)._field_package.get()._field_files,_21533_ident);
}



inline jule::Ptr<_21ddb6aee_Enum> _21eb4c28a_find_enum(_21eb49c8d_ImportInfo* _self_,jule::Str _22732_ident) {
	if ((!(_21eb4c752_is_lookupable(&(*_self_), _22732_ident)))) {
		return nullptr;
	}
	return _21eb48e02_find_enum_in_package((*_self_)._field_package.get()._field_files,_22732_ident);
}



inline jule::Bool _21eb4c752_is_lookupable(_21eb49c8d_ImportInfo* _self_,jule::Str _23728_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	}
	if ((!((*_self_)._field_import_all))) {
		if (((*_self_)._field_alias.len() != 0LL) || _21eb4cb09_exist_ident(&(*_self_), jule::Str("self", 4))) {
			return true;
		}
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_21eb4cb09_exist_ident(&(*_self_), _23728_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _21eb4cb09_exist_ident(_21eb49c8d_ImportInfo* _self_,jule::Str _25726_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_2228cc710:;
		if (it != expr.end()) {
			_21c627dde_Token &_2228cc7cb_sident = *it;
			{
				if (_2228cc7cb_sident._field_kind == _25726_ident) {
					return true;
				}
			}
			_iter_next_2228cc710:;
			++it;
			goto _iter_begin_2228cc710;
		}
		_iter_end_2228cc710:;
	}
	return false;
}



inline jule::Bool _21eb4ce28_is_accessible_via_selection(_21eb49c8d_ImportInfo* _self_) {
	return ((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _21eb4cb09_exist_ident(&(*_self_), jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _21eb49c8d_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21dd06b60_to_str(_21dd06742_StructIns* _self_) {
	jule::Str _24417_kind = jule::Str();
	_24417_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24417_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_222627dea:;
			if (it != expr.end()) {
				jule::Ptr<_21ec06223_TypeKind> &_222628082_g = *it;
				{
					_24417_kind+=_21ec06641_to_str(_222628082_g.ptr());
					_24417_kind+=jule::Str(",", 1);
				}
				_iter_next_222627dea:;
				++it;
				goto _iter_begin_222627dea;
			}
			_iter_end_222627dea:;
		}
		(_24417_kind).mut_slice(0LL,_24417_kind.len() - 1LL);
		_24417_kind+=jule::Str("]", 1);
	}
	return _24417_kind;
}



inline jule::Bool _21dd07017_equals(jule::Ptr<_21dd06742_StructIns> _self_,jule::Ptr<_21ec06223_TypeKind> _25926_other) {
	jule::Ptr<_21dd06742_StructIns> _26013_s = _21ec09ca4_strct(_25926_other.ptr());
	if ((_26013_s == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl != _26013_s.get()._field_decl) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_26013_s.get()._field_generics.len()))) {
		return false;
	}
	jule::I64 _27317_i = 0LL;
	for (; _27317_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_27317_i)++) {
		{
			if ((!(_21ec069e8_equals(_self_.get()._field_generics[_27317_i], _26013_s.get()._field_generics[_27317_i])))) {
				return false;
			}
		}
	_iter_next_22262c6a2:;
	}
	_iter_end_22262c6a2:;
	return true;
}



inline jule::Bool _21dd074ce_same(_21dd06742_StructIns* _self_,jule::Ptr<_21dd06742_StructIns> _28723_s) {
	if (((*_self_)._field_decl != _28723_s.get()._field_decl) || (_28723_s.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_22262e808:;
		if (it != expr.end()) {
			jule::I64 _222630a29_i = it - expr.begin();
			jule::Ptr<_21ec06223_TypeKind> &_222630bb1_g = *it;
			{
				if ((!(_21ec069e8_equals(_222630bb1_g, _28723_s.get()._field_generics[_222630a29_i])))) {
					return false;
				}
			}
			_iter_next_22262e808:;
			++it;
			_222630a29_i++;
			goto _iter_begin_22262e808;
		}
		_iter_end_22262e808:;
	}
	return true;
}



inline jule::Ptr<_21dd19249_Fn> _21dd07963_find_method(_21dd06742_StructIns* _self_,jule::Str _30234_ident,jule::Bool _30246_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_2226328c7:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _222632993_f = *it;
			{
				if ((_222632993_f.get()._field_statically == _30246_statically) && (_222632993_f.get()._field_ident == _30234_ident)) {
					return _222632993_f;
				}
			}
			_iter_next_2226328c7:;
			++it;
			goto _iter_begin_2226328c7;
		}
		_iter_end_2226328c7:;
	}
	return nullptr;
}



inline jule::Ptr<_21dd05be7_FieldIns> _21dd07d1a_find_field(_21dd06742_StructIns* _self_,jule::Str _31333_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_222634236:;
		if (it != expr.end()) {
			jule::Ptr<_21dd05be7_FieldIns> _222634302_f = *it;
			{
				if (_222634302_f.get()._field_decl.get()._field_ident == _31333_ident) {
					return _222634302_f;
				}
			}
			_iter_next_222634236:;
			++it;
			goto _iter_begin_222634236;
		}
		_iter_end_222634236:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd06742_StructIns _Src) {
	_Stream << _21dd06b60_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c63eed3_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd08de8_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd09349_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21eb75a33_is_initialized(_21eb75615_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _21eb75d0d_is_type_inferred(_21eb75615_Var* _self_) {
	return ((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21eb75615_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c640203_TernaryExpr _Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline void _21eba54be_push_err(_21eba4e2a_TypeCompatibilityChecker* _self_,jule::Str _13027_fmt,jule::Slice<jule::Any> _13040_args) {
	_21eb576a2_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_13027_fmt,_13040_args);
}



inline jule::Bool _21eba5799_check_trait(_21eba4e2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _13432_ok = jule::Bool();
	if (_21ec072ce_is_nil((*_self_)._field_src.ptr())) {
		_13432_ok = true;
		return _13432_ok;
	}
	jule::Ptr<_21deee929_Trait> _13913_trt = _21ec0a07e_trt((*_self_)._field_dest.ptr());
	jule::Bool _14017_ref = false;
	{
		
		if ((_21ec08a94_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_222b3e169:;
			{
				_14017_ref=true;
				(*_self_)._field_src=_21ec08a94_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_21ec09ca4_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_13432_ok = false;
					return _13432_ok;
				}
				goto _case_begin_222b3e235;
			}
		}
		else if ((_21ec09ca4_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_222b3e235:;
			{
				jule::Ptr<_21dd06742_StructIns> _15117_s = _21ec09ca4_strct((*_self_)._field_src.ptr());
				if ((!(_21dd04b5d_is_implements(_15117_s.get()._field_decl.ptr(), _13913_trt)))) {
					_13432_ok = false;
					return _13432_ok;
				}
				if ((!(_14017_ref)) && _21eb81b0a_trait_has_reference_receiver(_13913_trt)) {
					_21eba54be_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_13432_ok = false;
					return _13432_ok;
				}
				_13432_ok = true;
				return _13432_ok;
			}
		}
		else if ((_21ec0a07e_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_222b3e29b:;
			{
				_13432_ok = _13913_trt == _21ec0a07e_trt((*_self_)._field_src.ptr());
				return _13432_ok;
			}
		}
		else {
			_case_begin_222b3d9b5:;
			{
				_13432_ok = false;
				return _13432_ok;
			}
		}
		_match_end_222b3d93d:;
	}
}



inline jule::Bool _21eba5a74_check_ptr(_21eba4e2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _17130_ok = jule::Bool();
	if (_21ec072ce_is_nil((*_self_)._field_src.ptr())) {
		_17130_ok = true;
		return _17130_ok;
	}
	jule::Ptr<_21ec14275_Ptr> _17617_dest = _21ec08d6e_ptr((*_self_)._field_dest.ptr());
	if (_21ec14dbe_is_unsafe(_17617_dest.ptr())) {
		_17130_ok = true;
		return _17130_ok;
	}
	_17130_ok = _21ec069e8_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _17130_ok;
}



inline jule::Bool _21eba5d4e_check_prim(_21eba4e2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _18531_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_21ec0b58b_Prim> _18717_prim = _21ec087b9_prim((*_self_)._field_dest.ptr());
		if ((_18717_prim != nullptr) && _21ec10095_is_any(_18717_prim.ptr())) {
			_18531_ok = true;
			return _18531_ok;
		}
	}
	_18531_ok = _21ec069e8_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _18531_ok;
}



inline jule::Bool _21eba6129_check(_21eba4e2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _19526_ok = jule::Bool();
	if ((_21ec08d6e_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19526_ok = _21eba5a74_check_ptr(&(*_self_));
		return _19526_ok;
	}
	if (_21ec07b5e_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_21ec072ce_is_nil((*_self_)._field_src.ptr())) {
			_19526_ok = true;
			return _19526_ok;
		}
	}
	{
		
		if ((_21ec087b9_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_222b4ab8c:;
			{
				_19526_ok = _21eba5d4e_check_prim(&(*_self_));
				return _19526_ok;
			}
		}
		else if ((_21ec0a07e_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_222b4a7e6:;
			{
				_19526_ok = _21eba5799_check_trait(&(*_self_));
				return _19526_ok;
			}
		}
		else {
			_case_begin_222b4a1ca:;
			{
				_19526_ok = _21ec069e8_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19526_ok;
			}
		}
		_match_end_222b4a0ed:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21eba4e2a_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _21eba6cb7_push_err(_21eba6778_AssignTypeChecker* _self_,jule::Str _22527_fmt,jule::Slice<jule::Any> _22540_args) {
	_21eb576a2_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22527_fmt,_22540_args);
}



inline jule::Bool _21eba7092_check_validity(_21eba6778_AssignTypeChecker* _self_) {
	jule::Bool _23017_valid = true;
	{
		
		if ((_21ec099c9_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222b4de15:;
			{
				jule::Ptr<_21dd1cc42_FnIns> _23317_f = _21ec099c9_fnc((*_self_)._field_d.get()._field_kind.ptr());
				{
					
					if (_21dd1d8be_is_builtin(_23317_f.ptr())) {
						_case_begin_222b505dc:;
						{
							_21eba6cb7_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23317_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_222b50664:;
						{
							_21eba6cb7_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_21dd199db_is_method(_23317_f.get()._field_decl.ptr())) {
						_case_begin_222b506db:;
						{
							_21eba6cb7_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if ((_23317_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_222b50763:;
						{
							_21eba6cb7_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					_match_end_222b504ee:;
				}
			}
		}
		else if ((_21ec0a634_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222b4de8c:;
			{
				_21eba6cb7_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23017_valid=false;
			}
		}
		_match_end_222b4dd49:;
	}
	return _23017_valid;
}



inline jule::Bool _21eba736c_check_const(_21eba6778_AssignTypeChecker* _self_) {
	if ((((!(_21ebbda59_is_const((*_self_)._field_d.ptr()))) || (_21ec087b9_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_21eb2b896_is_num(_21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind)))) {
		return false;
	}
	if ((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant) {
		return false;
	}
	jule::Str _26913_kind = _21ec087b9_prim((*_self_)._field_dest.ptr()).get()._field_kind;
	{
		
		if (_21eb2b588_is_float(_26913_kind)) {
			_case_begin_222b58abd:;
			{
				if ((!(_21eb86868_float_assignable(_26913_kind,(*_self_)._field_d)))) {
					_21eba6cb7_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_21eb2b236_is_int(_26913_kind)) {
			_case_begin_222b58bbc:;
			{
				if ((!(_21eba47ed_int_assignable(_26913_kind,(*_self_)._field_d)))) {
					_21eba6cb7_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_222b584a2:;
			{
				return false;
			}
		}
		_match_end_222b5844c:;
	}
	return true;
}



inline jule::Bool _21eba7647_is_prim(_21eba6778_AssignTypeChecker* _self_) {
	if ((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic) {
		return false;
	}
	if (_21ec07004_cpp_linked((*_self_)._field_dest.ptr()) || _21ec07004_cpp_linked((*_self_)._field_d.get()._field_kind.ptr())) {
		return false;
	}
	return (_21ec087b9_prim((*_self_)._field_dest.ptr()) != nullptr) && (_21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr);
}



inline jule::Bool _21eba7922_check_compatibility(_21eba6778_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_222b5e40e:;
			{
				return false;
			}
		}
		else if ((!(_21eba7092_check_validity(&(*_self_))))) {
			_case_begin_222b5e486:;
			{
				return false;
			}
		}
		else if (_21eba736c_check_const(&(*_self_))) {
			_case_begin_222b5e50d:;
			{
				return true;
			}
		}
		else if ((_21ec09149_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_222b5e585:;
			{
				jule::Ptr<_21ec06223_TypeKind> _31121_dkind = (*_self_)._field_dest;
				if ((_21ec09149_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31121_dkind=_21ec09149_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_21ec087b9_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_222b5e2bb;
				}
				if (_21eb2761c_types_are_compatible(_21ec087b9_prim(_21ec09149_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_21ec087b9_prim(_31121_dkind.ptr()).get()._field_kind)) {
					return true;
				}
			}
		}
		else if (_21eba7647_is_prim(&(*_self_))) {
			_case_begin_222b5e60c:;
			{
				jule::Ptr<_21ec0b58b_Prim> _32117_dest = _21ec087b9_prim((*_self_)._field_dest.ptr());
				if (_21ec10095_is_any(_32117_dest.ptr())) {
					return true;
				}
				jule::Ptr<_21ec0b58b_Prim> _32521_src = _21ec087b9_prim((*_self_)._field_d.get()._field_kind.ptr());
				if (_21eb2761c_types_are_compatible(_32117_dest.get()._field_kind,_32521_src.get()._field_kind)) {
					return true;
				}
			}
		}
		_match_end_222b5e2bb:;
	}
	return _21eb5e29c_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _21eba7bec_check(_21eba6778_AssignTypeChecker* _self_) {
	jule::Bool _33413_ok = _21eba7922_check_compatibility(&(*_self_));
	if (_33413_ok) {
		_21ec2134d_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	}
	return _33413_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _21eba6778_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _21eba8ba9_push_generic(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _35236_k,jule::I64 _35250_i) {
	(*_self_)._field_f.get()._field_generics[_35250_i]=_35236_k;
}



inline jule::Bool _21eba902d_annotate_prim(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _35644_k) {
	jule::Bool _35660_ok = jule::Bool();
	jule::Str _35713_kind = _21ec06641_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_222b6a3e8:;
		if (it != expr.end()) {
			jule::I64 _222b6a470_i = it - expr.begin();
			jule::Ptr<_21c640423_GenericDecl> _222b6a6c3_g = *it;
			{
				if (_35713_kind != _222b6a6c3_g.get()._field_ident) {
					goto _iter_next_222b6a3e8;
				}
				jule::Ptr<_21ec06223_TypeKind> _36317_t = (*_self_)._field_f.get()._field_generics[_222b6a470_i];
				{
					
					if ((_36317_t == nullptr)) {
						_case_begin_222b6ba6a:;
						{
							_21eba8ba9_push_generic(&(*_self_), _35644_k,_222b6a470_i);
						}
					}
					else if ((!(_21ec069e8_equals(_36317_t, _35644_k)))) {
						_case_begin_222b6bae2:;
						{
							_35660_ok = false;
							return _35660_ok;
						}
					}
					_match_end_222b6b96b:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_35644_k.get()._field_kind;
				_35660_ok = true;
				return _35660_ok;
			}
			_iter_next_222b6a3e8:;
			++it;
			_222b6a470_i++;
			goto _iter_begin_222b6a3e8;
		}
		_iter_end_222b6a3e8:;
	}
	_35660_ok = false;
	return _35660_ok;
}



inline jule::Bool _21eba93d5_annotate_slc(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _38043_k) {
	jule::Bool _38059_ok = jule::Bool();
	jule::Ptr<_21ec10eca_Slc> _38117_pslc = _21ec096ee_slc((*((*_self_)._field_k)).ptr());
	if ((_38117_pslc == nullptr)) {
		_38059_ok = false;
		return _38059_ok;
	}
	jule::Ptr<_21ec10eca_Slc> _38617_slc = _21ec096ee_slc(_38043_k.ptr());
	(*_self_)._field_k=(&(_38117_pslc.get()._field_elem));
	_38059_ok = _21ebab096_annotate_kind(&(*_self_), _38617_slc.get()._field_elem);
	return _38059_ok;
}



inline jule::Bool _21eba9869_check_map_key(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>* _39143_k,jule::Ptr<_21ec06223_TypeKind>& _39163_ck) {
	jule::Bool _39180_ok = jule::Bool();
	jule::Ptr<_21ec06223_TypeKind>* _39217_old = (*_self_)._field_k;
	(*_self_)._field_k=_39143_k;
	_39180_ok=_21ebab096_annotate_kind(&(*_self_), _39163_ck);
	(*_self_)._field_k=_39217_old;
	return _39180_ok;
}



inline jule::Bool _21eba9c21_annotate_map(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _39943_k) {
	jule::Bool _39959_ok = jule::Bool();
	jule::Ptr<_21ec128b1_Map> _40017_pmap = _21ec0a359_map((*((*_self_)._field_k)).ptr());
	if ((_40017_pmap == nullptr)) {
		_39959_ok = false;
		return _39959_ok;
	}
	jule::Ptr<_21ec128b1_Map> _40517_m = _21ec0a359_map(_39943_k.ptr());
	_39959_ok = _21eba9869_check_map_key(&(*_self_), (&(_40017_pmap.get()._field_key)),_40517_m.get()._field_key) && _21eba9869_check_map_key(&(*_self_), (&(_40017_pmap.get()._field_val)),_40517_m.get()._field_val);
	return _39959_ok;
}



inline jule::Bool _21ebaa0c8_annotate_fn(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _41142_k) {
	jule::Bool _41158_ok = jule::Bool();
	jule::Ptr<_21dd1cc42_FnIns> _41217_pf = _21ec099c9_fnc((*((*_self_)._field_k)).ptr());
	if ((_41217_pf == nullptr)) {
		_41158_ok = false;
		return _41158_ok;
	}
	jule::Ptr<_21dd1cc42_FnIns> _41617_f = _21ec099c9_fnc(_41142_k.ptr());
	{
		
		if (_41217_pf.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_41617_f.get()._field_params.len()))) {
			_case_begin_222b78758:;
			{
				_41158_ok = false;
				return _41158_ok;
			}
		}
		else if (_21dd19711_is_void(_41217_pf.get()._field_decl.ptr()) != _21dd19711_is_void(_41617_f.get()._field_decl.ptr())) {
			_case_begin_222b787d0:;
			{
				_41158_ok = false;
				return _41158_ok;
			}
		}
		_match_end_222b7868c:;
	}
	_41158_ok=true;
	jule::Ptr<_21ec06223_TypeKind>* _42617_old = (*_self_)._field_k;
	{
		auto &expr = _41617_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_222b7a804:;
		if (it != expr.end()) {
			jule::I64 _222b7a8d1_i = it - expr.begin();
			jule::Ptr<_21dd1badc_ParamIns> _222b7aace_fp = *it;
			{
				(*_self_)._field_k=(&(_41217_pf.get()._field_params[_222b7a8d1_i].get()._field_kind));
				_41158_ok=_21ebab096_annotate_kind(&(*_self_), _222b7aace_fp.get()._field_kind) && _41158_ok;
			}
			_iter_next_222b7a804:;
			++it;
			_222b7a8d1_i++;
			goto _iter_begin_222b7a804;
		}
		_iter_end_222b7a804:;
	}
	if ((!(_21dd19711_is_void(_41217_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_41217_pf.get()._field_result));
		_41158_ok=_21ebab096_annotate_kind(&(*_self_), _41617_f.get()._field_result) && _41158_ok;
	}
	(*_self_)._field_k=_42617_old;
	return _41158_ok;
}



inline jule::Bool _21ebaa480_annotate_ptr(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _44143_k) {
	jule::Bool _44159_ok = jule::Bool();
	jule::Ptr<_21ec14275_Ptr> _44217_pptr = _21ec08d6e_ptr((*((*_self_)._field_k)).ptr());
	if ((_44217_pptr == nullptr)) {
		_44159_ok = false;
		return _44159_ok;
	}
	jule::Ptr<_21ec14275_Ptr> _44717_ptr = _21ec08d6e_ptr(_44143_k.ptr());
	(*_self_)._field_k=(&(_44217_pptr.get()._field_elem));
	_44159_ok = _21ebab096_annotate_kind(&(*_self_), _44717_ptr.get()._field_elem);
	return _44159_ok;
}



inline jule::Bool _21ebaa837_annotate_sptr(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _45244_k) {
	jule::Bool _45260_ok = jule::Bool();
	jule::Ptr<_21ec103e7_Sptr> _45317_ssptr = _21ec08a94_sptr((*((*_self_)._field_k)).ptr());
	if ((_45317_ssptr == nullptr)) {
		_45260_ok = false;
		return _45260_ok;
	}
	jule::Ptr<_21ec103e7_Sptr> _45817_sptr = _21ec08a94_sptr(_45244_k.ptr());
	(*_self_)._field_k=(&(_45317_ssptr.get()._field_elem));
	_45260_ok = _21ebab096_annotate_kind(&(*_self_), _45817_sptr.get()._field_elem);
	return _45260_ok;
}



inline jule::Bool _21ebaabde_annotate_any(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _46343_k) {
	jule::Bool _46359_ok = jule::Bool();
	jule::Str _46413_kind = _21ec06641_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_222b84d5d:;
		if (it != expr.end()) {
			jule::I64 _222b84dd5_i = it - expr.begin();
			jule::Ptr<_21c640423_GenericDecl> _222b85127_g = *it;
			{
				if (_46413_kind != _222b85127_g.get()._field_ident) {
					goto _iter_next_222b84d5d;
				}
				jule::Ptr<_21ec06223_TypeKind> _47017_t = (*_self_)._field_f.get()._field_generics[_222b84dd5_i];
				{
					
					if ((_47017_t == nullptr)) {
						_case_begin_222b864be:;
						{
							_21eba8ba9_push_generic(&(*_self_), _46343_k,_222b84dd5_i);
						}
					}
					else if ((!(_21ec069e8_equals(_47017_t, _46343_k)))) {
						_case_begin_222b86546:;
						{
							_46359_ok = false;
							return _46359_ok;
						}
					}
					_match_end_222b863c0:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_46343_k.get()._field_kind;
				_46359_ok = true;
				return _46359_ok;
			}
			_iter_next_222b84d5d:;
			++it;
			_222b84dd5_i++;
			goto _iter_begin_222b84d5d;
		}
		_iter_end_222b84d5d:;
	}
	_46359_ok = false;
	return _46359_ok;
}



inline jule::Bool _21ebab096_annotate_kind(_21eba8549_DynamicTypeAnnotation* _self_,jule::Ptr<_21ec06223_TypeKind>& _48744_k) {
	jule::Bool _48760_ok = jule::Bool();
	if (((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr)) {
		return _48760_ok;
	}
	{
		
		if (_21ebaabde_annotate_any(&(*_self_), _48744_k)) {
			_case_begin_222b89769:;
			{
				_48760_ok = true;
				return _48760_ok;
			}
		}
		else if ((_21ec087b9_prim(_48744_k.ptr()) != nullptr)) {
			_case_begin_222b897d0:;
			{
				_48760_ok = _21eba902d_annotate_prim(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_21ec096ee_slc(_48744_k.ptr()) != nullptr)) {
			_case_begin_222b8945b:;
			{
				_48760_ok = _21eba93d5_annotate_slc(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_21ec0a359_map(_48744_k.ptr()) != nullptr)) {
			_case_begin_222b894c2:;
			{
				_48760_ok = _21eba9c21_annotate_map(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_21ec099c9_fnc(_48744_k.ptr()) != nullptr)) {
			_case_begin_222b89538:;
			{
				_48760_ok = _21ebaa0c8_annotate_fn(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_21ec08d6e_ptr(_48744_k.ptr()) != nullptr)) {
			_case_begin_222b890b5:;
			{
				_48760_ok = _21ebaa480_annotate_ptr(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_21ec08a94_sptr(_48744_k.ptr()) != nullptr)) {
			_case_begin_222b8912b:;
			{
				_48760_ok = _21ebaa837_annotate_sptr(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else {
			_case_begin_222b8904e:;
			{
				_48760_ok = false;
				return _48760_ok;
			}
		}
		_match_end_222b8868b:;
	}
}



inline jule::Bool _21ebab371_annotate(_21eba8549_DynamicTypeAnnotation* _self_) {
	jule::Bool _50436_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_50436_ok = _21ebab096_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _50436_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _21eba8549_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _21ebac32d_push_err_token(_21ebabbbd_FnCallArgChecker* _self_,_21c627dde_Token _52033_token,jule::Str _52047_fmt,jule::Slice<jule::Any> _52060_args) {
	_21eb576a2_push_err((*_self_)._field_e.get()._field_s.ptr(), _52033_token,_52047_fmt,_52060_args);
}



inline void _21ebac729_push_err(_21ebabbbd_FnCallArgChecker* _self_,jule::Str _52427_fmt,jule::Slice<jule::Any> _52440_args) {
	_21ebac32d_push_err_token(&(*_self_), (*_self_)._field_error_token,_52427_fmt,_52440_args);
}



inline jule::Slice<jule::Ptr<_21dd1badc_ParamIns>> _21ebaca04_get_params(_21ebabbbd_FnCallArgChecker* _self_) {
	if ((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _21dd17b2c_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr())) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	}
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _21ebacdab_check_counts(_21ebabbbd_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>& _53732_params) {
	jule::Bool _53755_ok = jule::Bool();
	jule::I64 _53817_n = _53732_params.len();
	if ((_53817_n > 0LL) && _21dd17b2c_is_self(_53732_params[0LL].get()._field_decl.ptr())) {
		(_53817_n)--;
	}
	jule::I64 _54317_diff = _53817_n - static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	{
		
		if ((_54317_diff == 0LL)) {
			_case_begin_222b98437:;
			{
				_53755_ok = true;
				return _53755_ok;
			}
		}
		else if ((_53817_n > 0LL) && _53732_params[(_53817_n - 1LL)].get()._field_decl.get()._field_variadic) {
			_case_begin_222b984ae:;
			{
				_53755_ok = true;
				return _53755_ok;
			}
		}
		else if ((_54317_diff < 0LL) || (_54317_diff > static_cast<jule::I64>(static_cast<jule::I64>(_53732_params.len())))) {
			_case_begin_222b98536:;
			{
				_21ebac729_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_53755_ok = false;
				return _53755_ok;
			}
		}
		_match_end_222b9835a:;
	}
	jule::Str _55417_idents = jule::Str();
	for (; (_54317_diff > 0LL); (_54317_diff)--) {
		{
			_55417_idents+=jule::Str(", ", 2) + _53732_params[_53817_n - _54317_diff].get()._field_decl.get()._field_ident;
		}
	_iter_next_222b9ad0d:;
	}
	_iter_end_222b9ad0d:;
	(_55417_idents).mut_slice(2LL);
	_21ebac729_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_55417_idents)}));
	_53755_ok = false;
	return _53755_ok;
}



inline jule::Bool _21ebad41c_check_arg(_21ebabbbd_FnCallArgChecker* _self_,jule::Ptr<_21dd1badc_ParamIns>& _56433_p,jule::Ptr<_21ebbd053_Data>& _56452_arg,_21c627dde_Token& _56469_error_token) {
	jule::Bool _56491_ok = jule::Bool();
	if ((*_self_)._field_dynamic_annotation && _21dd1ed21_parameter_uses_generics(_56433_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics)) {
		_56491_ok=(!(_56433_p.get()._field_decl.get()._field_variadic));
		if (_56491_ok) {
			_21eba8549_DynamicTypeAnnotation _56825_dta = _21eba8549_DynamicTypeAnnotation((*_self_)._field_e,(*_self_)._field_f,_56433_p,_56452_arg,_56469_error_token,nullptr);
			_56491_ok=_21ebab371_annotate(&_56825_dta);
		}
		if ((!(_56491_ok))) {
			_21ebac32d_push_err_token(&(*_self_), _56469_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_56491_ok = false;
			return _56491_ok;
		}
	}
	if (_21eb6117d_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _56433_p.get()._field_decl.get()._field_mutable,_56433_p.get()._field_decl.get()._field_reference,_56433_p.get()._field_kind,_56452_arg,_56469_error_token)) {
		_21eb5dbe7_check_assign_type((*_self_)._field_e.get()._field_s, _56433_p.get()._field_decl.get()._field_reference,_56433_p.get()._field_kind,_56452_arg,_56469_error_token);
	}
	_56491_ok = true;
	return _56491_ok;
}



inline jule::Bool _21ebad8a1_push(_21ebabbbd_FnCallArgChecker* _self_,jule::Ptr<_21dd1badc_ParamIns>& _59128_p,jule::Ptr<_21c4d7b4a_Expr> _59146_arg) {
	jule::Bool _59160_ok = jule::Bool();
	jule::Ptr<_21ec06223_TypeKind> _59217_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _59313_old_immut = (*_self_)._field_e.get()._field_immutable;
	jule::Ptr<_21ebbd053_Data> _59417_d = nullptr;
	(*_self_)._field_e.get()._field_immutable=(!(_59128_p.get()._field_decl.get()._field_mutable));
	if ((!((*_self_)._field_dynamic_annotation)) && (!(_59128_p.get()._field_decl.get()._field_variadic))) {
		(*_self_)._field_e.get()._field_prefix=_59128_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	}
	_59417_d=_21ebdeea9_eval_expr_kind((*_self_)._field_e, _59146_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_59217_old;
	(*_self_)._field_e.get()._field_immutable=_59313_old_immut;
	if ((_59417_d == nullptr)) {
		_59160_ok = false;
		return _59160_ok;
	}
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_59417_d));
	_59160_ok = _21ebad41c_check_arg(&(*_self_), _59128_p,_59417_d,_59146_arg.get()._field_token);
	return _59160_ok;
}



inline jule::Bool _21ebadd35_push_variadic(_21ebabbbd_FnCallArgChecker* _self_,jule::Ptr<_21dd1badc_ParamIns>& _61537_p,jule::I64 _61555_i) {
	jule::Bool _61565_ok = jule::Bool();
	_61565_ok=true;
	jule::Bool _61717_variadiced = false;
	jule::Bool _61813_more = (_61555_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	jule::Ptr<_21dd0b68c_SliceExprModel> _61917_model = jule::new_ptr<_21dd0b68c_SliceExprModel>(_21dd0b68c_SliceExprModel(_61537_p.get()._field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_21ec06223_TypeKind> _62317_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _62813_variadic = _61537_p.get()._field_kind.get()._field_variadic;
	_61537_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_61537_p.get()._field_kind.get()._field_variadic=_62813_variadic;
	});
	for (; _61555_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); (_61555_i)++) {
		{
			jule::Ptr<_21c4d7b4a_Expr> _63521_arg = (*_self_)._field_args[_61555_i];
			{
				auto &_match_expr{ _63521_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_21c4d908b_VariadicExpr>>()) {
					_case_begin_222bab406:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec10eca_Slc>(_21ec10eca_Slc(_61537_p.get()._field_kind)), 7)));
					}
				}
				else {
					_case_begin_222bad040:;
					{
						(*_self_)._field_e.get()._field_prefix=_61537_p.get()._field_kind;
					}
				}
				_match_end_222baceb8:;
			}
			jule::Ptr<_21ebbd053_Data> _64821_d = _21ebe0361_eval((*_self_)._field_e, _63521_arg);
			if ((_64821_d == nullptr)) {
				_61565_ok=false;
				goto _iter_next_222bac57d;
			}
			if (_64821_d.get()._field_kind.get()._field_variadic) {
				_61717_variadiced=true;
				{
					auto &_match_expr{ _64821_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_21dd0b68c_SliceExprModel>>()) {
						_case_begin_222bb0ecc:;
						{
							_61917_model=_64821_d.get()._field_model.operator jule::Ptr<_21dd0b68c_SliceExprModel>();
							_61917_model.get()._field_elem_kind=_61537_p.get()._field_kind;
						}
					}
					else {
						_case_begin_222bb09d2:;
						{
							_61917_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_64821_d));
						}
					}
					_match_end_222bb097c:;
				}
				_61537_p.get()._field_kind.get()._field_variadic=true;
				_61565_ok=_61565_ok && _21ebad41c_check_arg(&(*_self_), _61537_p,_64821_d,_63521_arg.get()._field_token);
				(_61555_i)++;
				goto _iter_end_222bac57d;
			}
			_61565_ok=_61565_ok && _21ebad41c_check_arg(&(*_self_), _61537_p,_64821_d,_63521_arg.get()._field_token);
			_61917_model.get()._field_elems = jule::alloc_for_append(_61917_model.get()._field_elems,1);_61917_model.get()._field_elems.__push(_64821_d.get()._field_model);
		}
	_iter_next_222bac57d:;
	}
	_iter_end_222bac57d:;
	(*_self_)._field_e.get()._field_prefix=_62317_old;
	if (_61717_variadiced && _61813_more) {
		_21ebac32d_push_err_token(&(*_self_), (*_self_)._field_args[_61555_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if ((_61917_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_61917_model));
	}
	return _61565_ok;
}



inline jule::Bool _21ebae1dc_check_args(_21ebabbbd_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>& _69434_params) {
	jule::Bool _69457_ok = jule::Bool();
	jule::Bool _69513_arg = (*_self_)._field_e.get()._field_arg;
	(*_self_)._field_e.get()._field_arg=true;
	_69457_ok=true;
	jule::I64 _69917_i = 0LL;
	_julec_label_iter:;
	while (_69917_i < static_cast<jule::I64>(static_cast<jule::I64>(_69434_params.len()))) {
		{
			jule::Ptr<_21dd1badc_ParamIns> _70221_p = _69434_params[_69917_i];
			{
				
				if (_21dd17b2c_is_self(_70221_p.get()._field_decl.ptr())) {
					_case_begin_222bb8567:;
					{
						goto _match_end_222bb816b;
					}
				}
				else if (_70221_p.get()._field_decl.get()._field_variadic) {
					_case_begin_222bb8259:;
					{
						_69457_ok=_21ebadd35_push_variadic(&(*_self_), _70221_p,_69917_i) && _69457_ok;
						goto _iter_end_222bb76cb;
					}
				}
				else if ((*_self_)._field_args.len() <= _69917_i) {
					_case_begin_222bb82c0:;
					{
						_69457_ok=false;
						goto _iter_end_222bb76cb;
					}
				}
				else {
					_case_begin_222bb81e3:;
					{
						_69457_ok=_21ebad8a1_push(&(*_self_), _70221_p,(*_self_)._field_args[_69917_i]) && _69457_ok;
					}
				}
				_match_end_222bb816b:;
			}
			(_69917_i)++;
		}
	_iter_next_222bb76cb:;
	}
	_iter_end_222bb76cb:;
	(*_self_)._field_e.get()._field_arg=_69513_arg;
	return _69457_ok;
}



inline jule::Bool _21ebae50b_check_dynamic_type_annotation(_21ebabbbd_FnCallArgChecker* _self_) {
	jule::Bool _72450_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_222bbbd1d:;
		if (it != expr.end()) {
			jule::Ptr<_21ec06223_TypeKind> _222bbbd95_g = *it;
			{
				if ((_222bbbd95_g == nullptr)) {
					_21ebac729_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_72450_ok = false;
					return _72450_ok;
				}
			}
			_iter_next_222bbbd1d:;
			++it;
			goto _iter_begin_222bbbd1d;
		}
		_iter_end_222bbbd1d:;
	}
	_72450_ok = true;
	return _72450_ok;
}



inline jule::Bool _21ebae7c5_check(_21ebabbbd_FnCallArgChecker* _self_) {
	jule::Bool _73426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_21dd1badc_ParamIns>> _73517_params = _21ebaca04_get_params(&(*_self_));
	_73426_ok=_21ebacdab_check_counts(&(*_self_), _73517_params);
	if ((!(_73426_ok))) {
		_73426_ok = false;
		return _73426_ok;
	}
	_73426_ok=_21ebae1dc_check_args(&(*_self_), _73517_params);
	if (_73426_ok && (*_self_)._field_dynamic_annotation) {
		_73426_ok=_21ebae50b_check_dynamic_type_annotation(&(*_self_));
	}
	return _73426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _21ebabbbd_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _21ebb0540_push_err(_21ebaee24_StructLitChecker* _self_,_21c627dde_Token _75827_token,jule::Str _75841_fmt,jule::Slice<jule::Any> _75854_args) {
	_21ebc0693_push_err((*_self_)._field_e.ptr(), _75827_token,_75841_fmt,_75854_args);
}



inline void _21ebb093b_push_suggestion(_21ebaee24_StructLitChecker* _self_,jule::Str _76334_fmt,jule::Slice<jule::Any> _76347_args) {
	_21ebc0a8e_push_suggestion((*_self_)._field_e.ptr(), _76334_fmt,_76347_args);
}



inline void _21ebb0e14_push_match(_21ebaee24_StructLitChecker* _self_,jule::Ptr<_21dd05be7_FieldIns>& _76734_f,jule::Ptr<_21ebbd053_Data>& _76753_d,_21c627dde_Token& _76768_error_token) {
	
	if (_21eb6117d_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_76734_f.get()._field_kind,_76753_d,_76768_error_token)) {
		_21eb5dbe7_check_assign_type((*_self_)._field_e.get()._field_s, false,_76734_f.get()._field_kind,_76753_d,_76768_error_token);
	}
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_21dd097de_StructArgExprModel>(_21dd097de_StructArgExprModel(_76734_f,_76753_d.get()._field_model)));
}



inline void _21ebb1310_check_pair(_21ebaee24_StructLitChecker* _self_,jule::Ptr<_21c63deb0_FieldExprPair>& _78034_pair,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>& _78061_exprs) {
	jule::Ptr<_21dd05be7_FieldIns> _78217_f = _21dd07d1a_find_field((*_self_)._field_s.ptr(), _78034_pair.get()._field_field._field_kind);
	if ((_78217_f == nullptr)) {
		_21ebb0540_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
		return;
	}
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _78217_f.get()._field_decl.get()._field_public,_78217_f.get()._field_decl.get()._field_token)))) {
		_21ebb0540_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
		_21ebb093b_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _78061_exprs;
		auto it = expr.begin();
		_iter_begin_222bcb954:;
		if (it != expr.end()) {
			jule::Ptr<_21c4d7b4a_Expr> _222bcba31_expr = *it;
			{
				{
					auto &_match_expr{ _222bcba31_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21c63deb0_FieldExprPair>>()) {
						_case_begin_222bcc2d4:;
						{
							jule::Ptr<_21c63deb0_FieldExprPair> _79725_dpair = _222bcba31_expr.get()._field_kind.operator jule::Ptr<_21c63deb0_FieldExprPair>();
							{
								
								if (_78034_pair == _79725_dpair) {
									_case_begin_222bcd0d7:;
									{
										goto _iter_end_222bcb954;
									}
								}
								else if (_78034_pair.get()._field_field._field_kind == _79725_dpair.get()._field_field._field_kind) {
									_case_begin_222bcd15e:;
									{
										_21ebb0540_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
										goto _iter_end_222bcb954;
									}
								}
								_match_end_222bcd01b:;
							}
						}
					}
					_match_end_222bcc27e:;
				}
			}
			_iter_next_222bcb954:;
			++it;
			goto _iter_begin_222bcb954;
		}
		_iter_end_222bcb954:;
	}
	jule::Ptr<_21ec06223_TypeKind> _80817_prefix = (*_self_)._field_e.get()._field_prefix;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_80817_prefix;
	});
	(*_self_)._field_e.get()._field_prefix=_78217_f.get()._field_kind;
	jule::Ptr<_21ebbd053_Data> _81217_d = _21ebdeea9_eval_expr_kind((*_self_)._field_e, jule::Any(_78034_pair.get()._field_expr));
	if ((_81217_d == nullptr)) {
		return;
	}
	_21ebb0e14_push_match(&(*_self_), _78217_f,_81217_d,_78034_pair.get()._field_field);
}



inline jule::Bool _21ebb16b7_ready_exprs(_21ebaee24_StructLitChecker* _self_,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>& _81935_exprs) {
	jule::Bool _82017_ok = true;
	{
		auto &expr = _81935_exprs;
		auto it = expr.begin();
		_iter_begin_222bd2a37:;
		if (it != expr.end()) {
			jule::I64 _222bd2ad1_i = it - expr.begin();
			jule::Ptr<_21c4d7b4a_Expr> _222bd2d56_expr = *it;
			{
				{
					auto &_match_expr{ _222bd2d56_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21c63e620_KeyValPair>>()) {
						_case_begin_222bd363c:;
						{
							jule::Ptr<_21c63e620_KeyValPair> _82425_pair = _222bd2d56_expr.get()._field_kind.operator jule::Ptr<_21c63e620_KeyValPair>();
							{
								auto &_match_expr{ _82425_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_21c4d8b4b_IdentExpr>>()) {
									_case_begin_222bd3d02:;
									{
										goto _match_end_222bd4660;
									}
								}
								else {
									_case_begin_222bd46b5:;
									{
										_21ebb0540_push_err(&(*_self_), _82425_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_82017_ok=false;
										goto _iter_next_222bd2a37;
									}
								}
								_match_end_222bd4660:;
							}
							_81935_exprs[_222bd2ad1_i].get()._field_kind=jule::Any(jule::new_ptr<_21c63deb0_FieldExprPair>(_21c63deb0_FieldExprPair(_82425_pair.get()._field_key.get()._field_token,_82425_pair.get()._field_val)));
						}
					}
					_match_end_222bd35d7:;
				}
			}
			_iter_next_222bd2a37:;
			++it;
			_222bd2ad1_i++;
			goto _iter_begin_222bd2a37;
		}
		_iter_end_222bd2a37:;
	}
	return _82017_ok;
}



inline void _21ebb19d6_check(_21ebaee24_StructLitChecker* _self_,jule::Slice<jule::Ptr<_21c4d7b4a_Expr>>& _84329_exprs) {
	if ((_84329_exprs.len() == 0LL)) {
		return;
	}
	if ((!(_21ebb16b7_ready_exprs(&(*_self_), _84329_exprs)))) {
		return;
	}
	jule::Bool _85217_paired = false;
	{
		auto &expr = _84329_exprs;
		auto it = expr.begin();
		_iter_begin_222bd7663:;
		if (it != expr.end()) {
			jule::I64 _222bd771d_i = it - expr.begin();
			jule::Ptr<_21c4d7b4a_Expr> _222bd7982_expr = *it;
			{
				{
					auto &_match_expr{ _222bd7982_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21c63deb0_FieldExprPair>>()) {
						_case_begin_222bdc0a2:;
						{
							jule::Ptr<_21c63deb0_FieldExprPair> _85625_pair = _222bd7982_expr.get()._field_kind.operator jule::Ptr<_21c63deb0_FieldExprPair>();
							if ((_222bd771d_i > 0LL) && (!(_85217_paired))) {
								_21ebb0540_push_err(&(*_self_), _85625_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_85217_paired=true;
							_21ebb1310_check_pair(&(*_self_), _85625_pair,_84329_exprs);
						}
					}
					else {
						_case_begin_222bd8268:;
						{
							if (_85217_paired) {
								_21ebb0540_push_err(&(*_self_), _222bd7982_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_222bd771d_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_s.get()._field_fields.len()))) {
								_21ebb0540_push_err(&(*_self_), _222bd7982_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_222bd7663;
							}
							jule::Ptr<_21dd05be7_FieldIns> _87125_field = (*_self_)._field_s.get()._field_fields[_222bd771d_i];
							jule::Ptr<_21ec06223_TypeKind> _87325_prefix = (*_self_)._field_e.get()._field_prefix;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_87325_prefix;
							});
							(*_self_)._field_e.get()._field_prefix=_87125_field.get()._field_kind;
							jule::Ptr<_21ebbd053_Data> _87725_d = _21ebdeea9_eval_expr_kind((*_self_)._field_e, _222bd7982_expr.get()._field_kind);
							if ((_87725_d == nullptr)) {
								goto _iter_next_222bd7663;
							}
							_21ebb0e14_push_match(&(*_self_), _87125_field,_87725_d,_222bd7982_expr.get()._field_token);
						}
					}
					_match_end_222bd8213:;
				}
			}
			_iter_next_222bd7663:;
			++it;
			_222bd771d_i++;
			goto _iter_begin_222bd7663;
		}
		_iter_end_222bd7663:;
	}
	if ((!(_85217_paired))) {
		jule::I64 _88817_n = (*_self_)._field_s.get()._field_fields.len();
		jule::I64 _88921_diff = _88817_n - static_cast<jule::I64>(static_cast<jule::I64>(_84329_exprs.len()));
		{
			
			if ((_88921_diff <= 0LL)) {
				_case_begin_222be0858:;
				{
					return;
				}
			}
			_match_end_222be077b:;
		}
		jule::Str _89521_idents = jule::Str();
		for (; (_88921_diff > 0LL); (_88921_diff)--) {
			{
				_89521_idents+=jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[_88817_n - _88921_diff].get()._field_decl.get()._field_ident;
			}
		_iter_next_222bd7ca1:;
		}
		_iter_end_222bd7ca1:;
		(_89521_idents).mut_slice(2LL);
		_21ebb0540_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_89521_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21ebaee24_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c640423_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline void _21ebb4e3a_prepare_types(_21ebb4995_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_21eb8092d_get_result_types((*_self_)._field_f.get()._field_result);
	}
}



inline void _21ebb5259_prepare_exprs(_21ebb4995_RetTypeChecker* _self_,jule::Ptr<_21c4d7b4a_Expr>& _107637_e) {
	if ((_107637_e == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _107637_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21c4d808a_TupleExpr>>()) {
			_case_begin_222c17990:;
			{
				(*_self_)._field_exprs=_107637_e.get()._field_kind.operator jule::Ptr<_21c4d808a_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_222c175d8:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_107637_e);
			}
		}
		_match_end_222c170ee:;
	}
}



inline void _21ebb549b_ret_vars(_21ebb4995_RetTypeChecker* _self_) {
	if (((*_self_)._field_f == nullptr) || _21dd19711_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		return;
	}
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_21eb75615_Var>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len()));
	jule::Ptr<_21eb2ed2d_ScopeChecker> _109417_root_scope = _21eb3225e_get_root((*_self_)._field_sc);
	jule::I64 _109617_j = 0LL;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_222c1b323:;
		if (it != expr.end()) {
			jule::I64 _222c1b39a_i = it - expr.begin();
			_21c627dde_Token _222c1b5ed_ident = *it;
			{
				if ((!(_21c62abc2_is_ignore_ident(_222c1b5ed_ident._field_kind)))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_109417_root_scope.get()._field_table.get()._field_vars[_109617_j]);
					(_109617_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_21eb75615_Var>(_21eb75615_Var(jule::Ptr<_21eb1472a_Scope>(),_21c627dde_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),(*_self_)._field_types[_222c1b39a_i])),jule::Ptr<_21ebbe362_Value>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21eb74306_IterRelation>(),jule::Slice<jule::Ptr<_21eb75615_Var>>())));
				}
			}
			_iter_next_222c1b323:;
			++it;
			_222c1b39a_i++;
			goto _iter_begin_222c1b323;
		}
		_iter_end_222c1b323:;
	}
	if ((_109617_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	}
}



inline void _21ebb56dd_check_exprs(_21ebb4995_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_21ebbd053_Data>> _112017_datas = jule::Slice<jule::Ptr<_21ebbd053_Data>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_exprs.len()));
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_222c202c2:;
		if (it != expr.end()) {
			jule::I64 _222c1ecb6_i = it - expr.begin();
			jule::Ptr<_21c4d7b4a_Expr> _222c2058b_expr = *it;
			{
				if (_222c1ecb6_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
					goto _iter_end_222c202c2;
				}
				jule::Ptr<_21ec06223_TypeKind> _112721_t = (*_self_)._field_types[_222c1ecb6_i];
				jule::Ptr<_21ebbd053_Data> _112921_d = _21ebe0718_eval_expr(_21eb5d202_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_21ec23a48_Lookup>((*_self_)._field_sc, 0),_112721_t), _222c2058b_expr);
				if ((_112921_d == nullptr)) {
					goto _iter_next_222c202c2;
				}
				_112017_datas = jule::alloc_for_append(_112017_datas,1);_112017_datas.__push(_112921_d);
				if ((!(_112921_d.get()._field_mutable)) && _21ec07884_mutable(_112921_d.get()._field_kind.ptr())) {
					_21eb576a2_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_21eba6778_AssignTypeChecker _114121_ac = _21eba6778_AssignTypeChecker((*_self_)._field_sc.get()._field_s,_112721_t,_112921_d,(*_self_)._field_error_token);
				_21eba7bec_check(&_114121_ac);
			}
			_iter_next_222c202c2:;
			++it;
			_222c1ecb6_i++;
			goto _iter_begin_222c202c2;
		}
		_iter_end_222c202c2:;
	}
	if ((_112017_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_21dd10b03_TupleExprModel>(_21dd10b03_TupleExprModel(_112017_datas)));
	} else if ((_112017_datas.len() == 1LL)) {
		(*_self_)._field_model=_112017_datas[0LL].get()._field_model;
	}
}



inline jule::Bool _21ebb5a95_check(_21ebb4995_RetTypeChecker* _self_,jule::Ptr<_21c4d7b4a_Expr>& _116029_e) {
	_21ebb4e3a_prepare_types(&(*_self_));
	_21ebb5259_prepare_exprs(&(*_self_), _116029_e);
	_21ebb549b_ret_vars(&(*_self_));
	jule::I64 _116513_n = (*_self_)._field_exprs.len();
	if ((_116513_n == 0LL) && ((*_self_)._field_types.len() > 0LL)) {
		if ((!(_21dd1a646_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_21eb576a2_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_116513_n > 0LL) && ((*_self_)._field_f != nullptr)) && _21dd19711_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		_21eb576a2_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_116513_n > static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_21eb576a2_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_116513_n < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_21eb576a2_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	}
	_21ebb56dd_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _21ebb4995_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c640643_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0a757_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0b23b_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c640863_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0bbdc_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}



inline _21ebe7de6_BinaryEval static__21ebe8512_new_plain(jule::Ptr<_21ebc00aa_Eval> _336629_e) {
	return _21ebe7de6_BinaryEval(_336629_e,jule::Ptr<_21ebbd053_Data>(),jule::Ptr<_21ebbd053_Data>(),_21c627dde_Token());
}



inline _21ebe7de6_BinaryEval static__21ebe88ec_new(jule::Ptr<_21ebc00aa_Eval> _337223_e,_21c627dde_Token _337237_op) {
	return _21ebe7de6_BinaryEval(_337223_e,jule::Ptr<_21ebbd053_Data>(),jule::Ptr<_21ebbd053_Data>(),_337237_op);
}



inline jule::Bool _21ebe8c1b_check_type_compatibility(_21ebe7de6_BinaryEval* _self_) {
	return _21eb5e29c_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _21ebe904b_check_struct_common_operator_compatibility(_21ebe7de6_BinaryEval* _self_) {
	jule::Ptr<_21dd1cc42_FnIns> _338617_overload = nullptr;
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_22304d90d:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_22304d974:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22304d9da:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_22304da51:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_22305006e:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2230500d5:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_22305014b:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2230501b2:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2230503d2:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_223050448:;
			{
				_338617_overload=_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_22304d3ad:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_22304d897:;
	}
	if ((_338617_overload == nullptr)) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	}
	jule::Ptr<_21dd1badc_ParamIns> _341817_p = _338617_overload.get()._field_params[1LL];
	return _21eb5dbe7_check_assign_type((*_self_)._field_e.get()._field_s, _341817_p.get()._field_decl.get()._field_reference,_341817_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_21ebbd053_Data> _21ebe9326_eval_nil(_21ebe7de6_BinaryEval* _self_) {
	if ((!(_21ec07b5e_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any(_21ec06641_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22305d126:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_22305b71d:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_22305bb2a:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebe9601_eval_enum(_21ebe7de6_BinaryEval* _self_) {
	jule::Ptr<_21ddb6aee_Enum> _344317_enm = _21ec09149_enm((*_self_)._field_l.get()._field_kind.ptr());
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22305de7e:;
			{
				jule::Ptr<_21ec06223_TypeKind> _344721_rkind = (*_self_)._field_r.get()._field_kind;
				if ((_21ec09149_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_344721_rkind=_21ec09149_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				}
				if ((!(_21eb5e29c_check_type_compatibility((*_self_)._field_e.get()._field_s, _344317_enm.get()._field_kind.get()._field_kind,_344721_rkind,(*_self_)._field_op)))) {
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		_match_end_22305e831:;
	}
	if ((_21ec09149_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_344317_enm != _21ec09149_enm((*_self_)._field_r.get()._field_kind.ptr()))) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_344317_enm.get()._field_ident),jule::Any(_21ec06641_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_22306533c:;
			{
				if ((!(_21eb2b896_is_num(_21ec06641_to_str(_344317_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_344317_enm.get()._field_ident)}));
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_223064e0d:;
			{
				if ((_21ec087b9_prim(_344317_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_21eb2b236_is_int(_21ec0b965_to_str(_21ec087b9_prim(_344317_enm.get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_344317_enm.get()._field_ident)}));
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_2230640d8:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_344317_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_223064d97:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebe98cb_eval_sptr(_21ebe7de6_BinaryEval* _self_) {
	if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22306d8c8:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_22306bba1:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22306c069:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebe9ba6_eval_ptr(_21ebe7de6_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_2230712b0:;
			{
				if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_223071326:;
			{
				if ((_21ec08d6e_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				}
				if (_21ec14dbe_is_unsafe(_21ec08d6e_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				}
				if ((!(_21ec01905_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_22306dc6e:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22306e8da:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebe9e81_eval_arr(_21ebe7de6_BinaryEval* _self_) {
	if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2230796b4:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_2230779ae:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_223077d22:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebea25b_eval_slc(_21ebe7de6_BinaryEval* _self_) {
	if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22307c62e:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_22307a96d:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22307ac8c:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebea536_eval_fn(_21ebe7de6_BinaryEval* _self_) {
	if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_223080599:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_22307d8d8:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22307dc07:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebea811_eval_struct(_21ebe7de6_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_223081611:;
			{
				if ((_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_223081677:;
			{
				if ((_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2230816dd:;
			{
				if ((_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_223081765:;
			{
				if ((_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2230817dc:;
			{
				if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		_match_end_2230815ab:;
	}
	if ((!(_21ebe904b_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	}
	return (*_self_)._field_l;
}



inline jule::Ptr<_21ebbd053_Data> _21ebeaadb_eval_trait(_21ebe7de6_BinaryEval* _self_) {
	if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_223090301:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_22308d5a7:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22308d970:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebeadb6_eval_any(_21ebe7de6_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22309249b:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_223090697:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_223091313:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebeb191_eval_bool(_21ebe7de6_BinaryEval* _self_) {
	if ((!(_21ebe8c1b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_22309579b:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_223093ada:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_21ec06641_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_223093e09:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebeb46b_eval_str(_21ebe7de6_BinaryEval* _self_) {
	jule::Str _371617_rk = _21ec06641_to_str((*_self_)._field_r.get()._field_kind.ptr());
	if ((_371617_rk != jule::Str("str", 3))) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_371617_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22309901e:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_223097e74:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		else {
			_case_begin_223096a77:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_223097d97:;
	}
}



inline void _21ebeb6ad_set_type_to_greater(_21ebe7de6_BinaryEval* _self_) {
	if (_21ebbda59_is_const((*_self_)._field_l.ptr())) {
		if ((!(_21ebbda59_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;
		}
		goto _julec_label_set;
	}
	if (_21ebbda59_is_const((*_self_)._field_r.ptr())) {
		return;
	}
	_julec_label_set:;
	if (_21eb29597_is_greater(_21ec087b9_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_21ec087b9_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	}
}



inline void _21ebeb999_check_mod_data(_21ebe7de6_BinaryEval* _self_,jule::Ptr<_21ebbd053_Data>& _375938_d) {
	if ((!(_21ebbda59_is_const(_375938_d.ptr())))) {
		if ((_21ec087b9_prim(_375938_d.get()._field_kind.ptr()) == nullptr) || (!(_21eb2b236_is_int(_21ec087b9_prim(_375938_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		
		if (_21eb942c1_sig_assignable(jule::Str("i64", 3),_375938_d)) {
			_case_begin_2230a1dc3:;
			{
				_21eaa10ce_set_i64(_375938_d.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64(_375938_d.get()._field_constant.ptr())));
			}
		}
		else if (_21eba4479_unsig_assignable(jule::Str("u64", 3),_375938_d)) {
			_case_begin_2230a1ae8:;
			{
				_21eaa13ed_set_u64(_375938_d.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64(_375938_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_2230a1a82:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_2230a1a2c:;
	}
}



inline void _21ebebbdb_mod(_21ebe7de6_BinaryEval* _self_) {
	_21ebeb999_check_mod_data(&(*_self_), (*_self_)._field_l);
	_21ebeb999_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _21ebec1b4_numbers_are_compatibile(_21ebe7de6_BinaryEval* _self_,jule::Str& _378139_lk,jule::Str& _378149_rk) {
	if ((!(_21eb2b896_is_num(_378149_rk)))) {
		return false;
	}
	if (_21ebbda59_is_const((*_self_)._field_l.ptr())) {
		return true;
	}
	if ((_378139_lk == jule::Str("f32", 3))) {
		if (_21ebbda59_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_378149_rk == jule::Str("f32", 3));
	}
	if ((_378139_lk == jule::Str("f64", 3))) {
		if (_21ebbda59_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_378149_rk == jule::Str("f64", 3));
	}
	if (_21ebbda59_is_const((*_self_)._field_r.ptr())) {
		return true;
	}
	return _378139_lk == _378149_rk;
}



inline jule::Ptr<_21ebbd053_Data> _21ebec47d_eval_float(_21ebe7de6_BinaryEval* _self_) {
	jule::Str _381113_lk = _21ec087b9_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _381213_rk = _21ec087b9_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	if ((!(_21ebec1b4_numbers_are_compatibile(&(*_self_), _381113_lk,_381213_rk)))) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381113_lk),jule::Any(_381213_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2230ab6d5:;
			{
				if ((!(_21ebbda59_is_const((*_self_)._field_l.ptr()))) || (!(_21eba47ed_int_assignable(jule::Str("i64", 3),(*_self_)._field_l)))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381113_lk),jule::Any(_381213_rk)}));
					return nullptr;
				}
				if ((!(_21ebbda59_is_const((*_self_)._field_r.ptr()))) || (!(_21eba47ed_int_assignable(jule::Str("u64", 3),(*_self_)._field_r)))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381113_lk),jule::Any(_381213_rk)}));
					return nullptr;
				}
				_21eaa10ce_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_21eaa13ed_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_21ec011da_is_ok_for_shifting((*_self_)._field_r)))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_2230aba9d:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2230abb36:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		_match_end_2230b2e6c:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_2230b5645:;
			{
				_21ebeb6ad_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2230b56ab:;
			{
				if ((!(_21eb2b236_is_int(_381213_rk)))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381113_lk),jule::Any(_381213_rk)}));
					return nullptr;
				}
				_21ebebbdb_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_2230ac043:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_2230b3a0b:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebec758_eval_int(_21ebe7de6_BinaryEval* _self_) {
	jule::Str _387513_lk = _21ec087b9_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _387613_rk = _21ec087b9_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2230b8857:;
			{
				if ((!(_21eb2b236_is_int(_387513_lk))) || (!(_21eb2b236_is_int(_387613_rk)))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_387513_lk),jule::Any(_387613_rk)}));
					return nullptr;
				}
				if ((!(_21ec011da_is_ok_for_shifting((*_self_)._field_r)))) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_2230b936e:;
	}
	if ((!(_21ebec1b4_numbers_are_compatibile(&(*_self_), _387513_lk,_387613_rk)))) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_387513_lk),jule::Any(_387613_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2230bc251:;
			{
				return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
			}
		}
		_match_end_2230bd4e9:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_2230c0bc2:;
			{
				_21ebeb6ad_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2230c0c38:;
			{
				_21ebebbdb_mod(&(*_self_));
				_21ebeb6ad_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_2230bd5c6:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_2230be099:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebeca33_eval_prim(_21ebe7de6_BinaryEval* _self_) {
	jule::Ptr<_21ec0b58b_Prim> _393413_prim = _21ec087b9_prim((*_self_)._field_l.get()._field_kind.ptr());
	{
		
		if (_21ec0e9e0_is_bool(_393413_prim.ptr())) {
			_case_begin_2230c33ab:;
			{
				return _21ebeb191_eval_bool(&(*_self_));
			}
		}
		else if (_21ec0ecba_is_str(_393413_prim.ptr())) {
			_case_begin_2230c3433:;
			{
				return _21ebeb46b_eval_str(&(*_self_));
			}
		}
		_match_end_2230c3323:;
	}
	if ((_21ec087b9_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_21ec0b965_to_str(_393413_prim.ptr())),jule::Any(_21ec06641_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		
		if (_21eb2b588_is_float(_393413_prim.get()._field_kind)) {
			_case_begin_2230c66cd:;
			{
				return _21ebec47d_eval_float(&(*_self_));
			}
		}
		else if (_21eb2b236_is_int(_393413_prim.get()._field_kind)) {
			_case_begin_2230c6799:;
			{
				return _21ebec758_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_2230c5e80:;
			{
				return nullptr;
			}
		}
		_match_end_2230c5ca4:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ebecd0d_eval_op(_21ebe7de6_BinaryEval* _self_) {
	{
		
		if (_21ec075a9_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_2230c83b1:;
			{
				_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if ((_21ec087b9_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _21ec10095_is_any(_21ec087b9_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr())) {
			_case_begin_2230c8427:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_2230c84b0;
			}
		}
		else if ((_21ec087b9_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _21ec10095_is_any(_21ec087b9_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
			_case_begin_2230c84b0:;
			{
				return _21ebeadb6_eval_any(&(*_self_));
			}
		}
		else if (_21ec072ce_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_2230c8526:;
			{
				return _21ebe9326_eval_nil(&(*_self_));
			}
		}
		else if ((_21ec09149_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c7d1c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_2230c7d83;
			}
		}
		else if ((_21ec09149_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c7d83:;
			{
				return _21ebe9601_eval_enum(&(*_self_));
			}
		}
		else if ((_21ec08a94_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c7de9:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_2230c7e60;
			}
		}
		else if ((_21ec08a94_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c7e60:;
			{
				return _21ebe98cb_eval_sptr(&(*_self_));
			}
		}
		else if ((_21ec08d6e_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c85c0:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_2230c8636;
			}
		}
		else if ((_21ec08d6e_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c8636:;
			{
				return _21ebe9ba6_eval_ptr(&(*_self_));
			}
		}
		else if ((_21ec09424_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c86ad:;
			{
				return _21ebe9e81_eval_arr(&(*_self_));
			}
		}
		else if ((_21ec096ee_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c8735:;
			{
				return _21ebea25b_eval_slc(&(*_self_));
			}
		}
		else if ((_21ec099c9_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c87ac:;
			{
				return _21ebea536_eval_fn(&(*_self_));
			}
		}
		else if ((_21ec0a07e_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c8834:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_2230c88ab;
			}
		}
		else if ((_21ec0a07e_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c88ab:;
			{
				return _21ebeaadb_eval_trait(&(*_self_));
			}
		}
		else if ((_21ec09ca4_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c8933:;
			{
				return _21ebea811_eval_struct(&(*_self_));
			}
		}
		else if ((_21ec087b9_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_2230c89aa:;
			{
				return _21ebeca33_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_2230c7ca6:;
			{
				return nullptr;
			}
		}
		_match_end_2230c7bda:;
	}
}



inline void _21ebed12c_eval_const(_21ebe7de6_BinaryEval* _self_,jule::Ptr<_21ebbd053_Data>& _400434_d) {
	{
		
		if ((_400434_d == nullptr)) {
			_case_begin_2230d9d51:;
			{
				return;
			}
		}
		else if ((!(_21ebbda59_is_const((*_self_)._field_l.ptr()))) || (!(_21ebbda59_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_2230d9dc8:;
			{
				_400434_d.get()._field_constant=nullptr;
				return;
			}
		}
		_match_end_2230d9c63:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_2230d9e83:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_2230db061:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_2230db0c7:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool(_21eaa3dc3_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2230db902:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool(_21eaa3a1b_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_2230db968:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2230db9ce:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_2230dba45:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_2230dbaab:;
			{
				_400434_d.get()._field_constant=static__21ea9d9c2_new_bool((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2230dbb22:;
			{
				_21eaa5600_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2230dbb88:;
			{
				_21eaa59a7_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2230dbbee:;
			{
				_21eaa5d5e_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2230dbc65:;
			{
				jule::Bool _404117_ok = _21eaa6216_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_404117_ok)) && (_21eaa0cb0_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_21ec0b58b_Prim> _404621_prim = _21ec087b9_prim(_400434_d.get()._field_kind.ptr());
				{
					
					if (_21eb2aac6_is_sig_int(_404621_prim.get()._field_kind)) {
						_case_begin_2230eb703:;
						{
							_21eaa10ce_set_i64(_400434_d.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64(_400434_d.get()._field_constant.ptr())));
						}
					}
					else if (_21eb2ae28_is_unsig_int(_404621_prim.get()._field_kind)) {
						_case_begin_2230eb77a:;
						{
							_21eaa13ed_set_u64(_400434_d.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64(_400434_d.get()._field_constant.ptr())));
						}
					}
					_match_end_2230eb659:;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2230dbccb:;
			{
				jule::Bool _405417_ok = _21eaa65bd_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_405417_ok)) && (_21eaa0cb0_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2230dbd42:;
			{
				_21eaa6d2c_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2230dbda8:;
			{
				_21eaa6975_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2230dbe30:;
			{
				_21eaa71d4_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2230dbea7:;
			{
				_21eaa758b_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_2230dc02e:;
			{
				_21eaa7943_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_2230db00b:;
	}
	_21ec027d5_apply_cast_model_by_enum(_400434_d,_21ec09149_enm(_400434_d.get()._field_kind.ptr()));
	jule::Ptr<_21ec0b58b_Prim> _407817_prim = _21ec087b9_prim(_400434_d.get()._field_kind.ptr());
	if ((_407817_prim == nullptr) || (!(_21eb2b896_is_num(_21ec0b965_to_str(_407817_prim.ptr()))))) {
		_400434_d.get()._field_model=jule::Any(_400434_d.get()._field_constant);
		return;
	}
	if (((*_self_)._field_op._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op._field_kind != jule::Str(">>", 2))) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant)) {
			_400434_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_407817_prim=_21ec087b9_prim(_400434_d.get()._field_kind.ptr());
		}
	}
	_21ec00261_fit_bitsize(_400434_d);
	_21ec02b26_cast_const_by_type(_407817_prim.get()._field_kind,_400434_d);
}



inline void _21ebed44b_check_data(_21ebe7de6_BinaryEval* _self_,jule::Ptr<_21ebbd053_Data>& _409434_d) {
	jule::Ptr<_21dd1cc42_FnIns> _409513_f = _21ec099c9_fnc(_409434_d.get()._field_kind.ptr());
	if (((_409513_f != nullptr) && (_409513_f.get()._field_decl != nullptr)) && _21dd199db_is_method(_409513_f.get()._field_decl.ptr())) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _21ebed68d_check_datas(_21ebe7de6_BinaryEval* _self_) {
	_21ebed44b_check_data(&(*_self_), (*_self_)._field_l);
	_21ebed44b_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _21ebed9ac_set_model(_21ebe7de6_BinaryEval* _self_,jule::Ptr<_21ebbd053_Data>& _410633_d) {
	if (_21ebbda59_is_const(_410633_d.ptr())) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant)) {
			return;
		}
	}
	jule::Ptr<_21ebbd053_Data> _411418_l = (*_self_)._field_l;
	jule::Ptr<_21ebbd053_Data> _411425_r = (*_self_)._field_r;
	std::tie(_411418_l,_411425_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_21ebbde11_good_operand(_411418_l.ptr(), _411425_r)))) {
		std::tie(_411418_l,_411425_r) = std::make_tuple(_411425_r,_411418_l);
	}
	_410633_d.get()._field_model=jule::Any(jule::new_ptr<_21dd08de8_BinopExprModel>(_21dd08de8_BinopExprModel(jule::new_ptr<_21dd08854_OperandExprModel>(_21dd08854_OperandExprModel(_411418_l.get()._field_kind,_411418_l.get()._field_model)),jule::new_ptr<_21dd08854_OperandExprModel>(_21dd08854_OperandExprModel(_411425_r.get()._field_kind,_411425_r.get()._field_model)),(*_self_)._field_op)));
}



inline void _21ebedccb_post_eval(_21ebe7de6_BinaryEval* _self_,jule::Ptr<_21ebbd053_Data>& _413233_d) {
	_413233_d.get()._field_lvalue=false;
	_21ebed9ac_set_model(&(*_self_), _413233_d);
}



inline jule::Ptr<_21ebbd053_Data> _21ebee260_solve_explicit(_21ebe7de6_BinaryEval* _self_,jule::Ptr<_21ebbd053_Data>& _413738_l,jule::Ptr<_21ebbd053_Data>& _413753_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413738_l,_413753_r);
	_21ebed68d_check_datas(&(*_self_));
	jule::Ptr<_21ebbd053_Data> _414217_d = _21ebecd0d_eval_op(&(*_self_));
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413738_l,_413753_r);
	_21ebed12c_eval_const(&(*_self_), _414217_d);
	if ((_414217_d != nullptr)) {
		_414217_d.get()._field_mutable=true;
		_21ebedccb_post_eval(&(*_self_), _414217_d);
	}
	return _414217_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ebee617_eval(_21ebe7de6_BinaryEval* _self_,jule::Ptr<_21c63da70_BinopExpr>& _415728_op) {
	if ((_415728_op.get()._field_op._field_kind == jule::Str("=", 1))) {
		_21ebc0693_push_err((*_self_)._field_e.ptr(), _415728_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_21ebc0a8e_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _416417_l = _21ebdeea9_eval_expr_kind((*_self_)._field_e, jule::Any(_415728_op.get()._field_left));
	if ((_416417_l == nullptr) || (_416417_l.get()._field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21ec06223_TypeKind> _416917_prefix = (*_self_)._field_e.get()._field_prefix;
	(*_self_)._field_e.get()._field_prefix=_416417_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_416917_prefix;
	});
	jule::Ptr<_21ebbd053_Data> _417217_r = _21ebdeea9_eval_expr_kind((*_self_)._field_e, jule::Any(_415728_op.get()._field_right));
	if ((_417217_r == nullptr) || (_417217_r.get()._field_kind == nullptr)) {
		return nullptr;
	}
	(*_self_)._field_op=_415728_op.get()._field_op;
	jule::Ptr<_21ebbd053_Data> _417917_d = _21ebee260_solve_explicit(&(*_self_), _416417_l,_417217_r);
	if (((_417917_d != nullptr) && _416417_l.get()._field_is_rune) && _417217_r.get()._field_is_rune) {
		_417917_d.get()._field_is_rune=true;
	}
	return _417917_d;
}







std::ostream &operator<<(std::ostream &_Stream, _21ebe7de6_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ec05288_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c640a83_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c640ca3_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c640ec3_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0d23d_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0d88c_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd0e294_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c5d7e37_is_prim(_21c529e9a_IdentTypeDecl* _self_) {
	return (*_self_)._field_token._field_id == static_cast<jule::U64>(1LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _21c529e9a_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c50576c_is_self(_21c641413_ParamDecl* _self_) {
	return _23688d1b2_has_suffix((*_self_)._field_ident,jule::Str("self", 4));
}



inline jule::Bool _21c50c147_is_ref(_21c641413_ParamDecl* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _21c641413_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c4874e0_is_anon(_21c641633_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _21c641633_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd107c3_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline void _21ec186ec_push_err(_21ec17e27_TypeChecker* _self_,_21c627dde_Token _70127_token,jule::Str _70141_fmt,jule::Slice<jule::Any> _70154_args) {
	_21eb576a2_push_err((*_self_)._field_s.ptr(), _70127_token,_70141_fmt,_70154_args);
}



inline void _21ec1893e_allow_builtin(_21ec17e27_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _21ec18b81_disallow_builtin(_21ec17e27_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_21ec0b58b_Prim> _21ec19038_build_prim(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _71330_decl) {
	if ((!(_21ec16a3b_is_prim(_71330_decl.get()._field_ident)))) {
		_21ec186ec_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_71330_decl.get()._field_generics.len() > 0LL)) {
		_21ec186ec_push_err(&(*_self_), _71330_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_71330_decl.get()._field_ident)}));
		return nullptr;
	}
	return _21ec16387_build_prim_type(_71330_decl.get()._field_ident);
}



inline void _21ec19511_push_cycle_error(_21ec17e27_TypeChecker* _self_,jule::Any _72731_def1,jule::Any _72742_def2,jule::Str& _72758_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _73013_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _73029_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _73029_def };
			
			if (_match_expr.type_is<jule::Ptr<_21ec05288_TypeAlias>>()) {
				_case_begin_22316ec2c:;
				{
					return _73029_def.operator jule::Ptr<_21ec05288_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
				_case_begin_223170568:;
				{
					return _73029_def.operator jule::Ptr<_21dd03266_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_21ddb6aee_Enum>>()) {
				_case_begin_2231705ce:;
				{
					return _73029_def.operator jule::Ptr<_21ddb6aee_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_22316edd6:;
				{
					return jule::Str();
				}
			}
			_match_end_22316ed1a:;
		}
	});
	jule::Str _74313_def1_ident = _73013_get_ident(_72731_def1);
	jule::Str _74413_def2_ident = _73013_get_ident(_72742_def2);
	jule::Str _74513_refers_to = _21c34911b_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_74313_def1_ident),jule::Any(_74413_def2_ident)}));
	(_72758_message).buffer.insert(0, (((_2368293b2_repeat(jule::Str(" ", 1),4LL) + _74513_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _21ec19995_check_cross_cycle(_21ec17e27_TypeChecker* _self_,jule::Any _74932_decl,jule::Str& _74948_message) {
	{
		auto &_match_expr{ _74932_decl };
		
		if (_match_expr.type_is<jule::Ptr<_21ec05288_TypeAlias>>()) {
			_case_begin_223173a00:;
			{
				jule::Ptr<_21ec05288_TypeAlias> _75217_ta = _74932_decl.operator jule::Ptr<_21ec05288_TypeAlias>();
				{
					auto &expr = _75217_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_223174858:;
					if (it != expr.end()) {
						jule::Any &_22317489c_d = *it;
						{
							{
								
								if (_22317489c_d == (*_self_)._field_referencer.get()._field_owner) {
									_case_begin_223175062:;
									{
										_21ec19511_push_cycle_error(&(*_self_), jule::Any(_75217_ta),_22317489c_d,_74948_message);
										return false;
									}
								}
								else if ((!(_21ec19995_check_cross_cycle(&(*_self_), _22317489c_d,_74948_message)))) {
									_case_begin_2231750d9:;
									{
										_21ec19511_push_cycle_error(&(*_self_), jule::Any(_75217_ta),_22317489c_d,_74948_message);
										return false;
									}
								}
								_match_end_223174e52:;
							}
						}
						_iter_next_223174858:;
						++it;
						goto _iter_begin_223174858;
					}
					_iter_end_223174858:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_223173a66:;
			{
				jule::Ptr<_21dd03266_Struct> _76417_s = _74932_decl.operator jule::Ptr<_21dd03266_Struct>();
				{
					auto &expr = _76417_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_223174c43:;
					if (it != expr.end()) {
						jule::Ptr<_21dd03266_Struct> &_2231774d7_d = *it;
						{
							{
								
								if ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_2231774d7_d))) {
									_case_begin_223177b25:;
									{
										_21ec19511_push_cycle_error(&(*_self_), jule::Any(_76417_s),jule::Any(_2231774d7_d),_74948_message);
										return false;
									}
								}
								else if ((!(_21ec19995_check_cross_cycle(&(*_self_), jule::Any(_2231774d7_d),_74948_message)))) {
									_case_begin_223177b9c:;
									{
										_21ec19511_push_cycle_error(&(*_self_), jule::Any(_76417_s),jule::Any(_2231774d7_d),_74948_message);
										return false;
									}
								}
								_match_end_223177a15:;
							}
						}
						_iter_next_223174c43:;
						++it;
						goto _iter_begin_223174c43;
					}
					_iter_end_223174c43:;
				}
			}
		}
		_match_end_2231738e0:;
	}
	return true;
}



inline jule::Bool _21ec19e29_check_illegal_cycles(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _78340_ident,jule::Any _78367_decl) {
	jule::Bool _78380_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_78380_ok = true;
		return _78380_ok;
	}
	{
		auto &_match_expr{ _78367_decl };
		
		if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_22317a5b7:;
			{
				if ((*_self_)._field_not_plain || _78367_decl.operator jule::Ptr<_21dd03266_Struct>().get()._field_cpp_linked) {
					_78380_ok = true;
					return _78380_ok;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ec05288_TypeAlias>>()) {
			_case_begin_22317a62d:;
			{
				if (_78367_decl.operator jule::Ptr<_21ec05288_TypeAlias>().get()._field_cpp_linked) {
					_78380_ok = true;
					return _78380_ok;
				}
			}
		}
		_match_end_22317a7b5:;
	}
	if (_78367_decl == (*_self_)._field_referencer.get()._field_owner) {
		_21ec186ec_push_err(&(*_self_), _78340_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_78380_ok = false;
		return _78380_ok;
	}
	jule::Str _80617_message = jule::Str();
	if ((!(_21ec19995_check_cross_cycle(&(*_self_), _78367_decl,_80617_message)))) {
		jule::Str _80921_err_msg = _80617_message;
		_80617_message=jule::Str();
		_21ec19511_push_cycle_error(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_78367_decl,_80617_message);
		_80921_err_msg=_80921_err_msg + _80617_message;
		_21ec186ec_push_err(&(*_self_), _78340_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_80921_err_msg)}));
		_78380_ok = false;
		return _78380_ok;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_21ec05288_TypeAlias>>()) {
			_case_begin_223180b72:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>({_78367_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_223180c1b:;
			{
				{
					auto &_match_expr{ _78367_decl };
					
					if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
						_case_begin_223181403:;
						{
							jule::Ptr<_21dd03266_Struct> _82525_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_21dd03266_Struct>();
							_82525_s.get()._field_depends = jule::alloc_for_append(_82525_s.get()._field_depends,1);_82525_s.get()._field_depends.__push(_78367_decl.operator jule::Ptr<_21dd03266_Struct>());
						}
					}
					_match_end_22318139d:;
				}
			}
		}
		_match_end_223180b1c:;
	}
	_78380_ok = true;
	return _78380_ok;
}



inline jule::Trait<_21ec05bd4_Kind> _21ec1a3ad_from_type_alias(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _83335_decl,jule::Ptr<_21ec05288_TypeAlias>& _83362_ta) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _83362_ta.get()._field_public,_83362_ta.get()._field_token)))) {
		_21ec186ec_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
		return nullptr;
	}
	_83362_ta.get()._field_used=true;
	if ((_83335_decl.get()._field_generics.len() > 0LL)) {
		_21ec186ec_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr)) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_223186bcd:;
			if (it != expr.end()) {
				jule::Ptr<_21ec05288_TypeAlias> _223187261_bg = *it;
				{
					if ((_223187261_bg == _83362_ta) || ((_83362_ta.get()._field_kind.get()._field_kind != nullptr) && _21ec069e8_equals(_83362_ta.get()._field_kind.get()._field_kind, _223187261_bg.get()._field_kind.get()._field_kind))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_223186bcd;
					}
				}
				_iter_next_223186bcd:;
				++it;
				goto _iter_begin_223186bcd;
			}
			_iter_end_223186bcd:;
		}
	}
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_2231892b8:;
			if (it != expr.end()) {
				jule::Ptr<_21ec05288_TypeAlias> _2231895e8_bg = *it;
				{
					if (_2231895e8_bg == _83362_ta) {
						_21ec186ec_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
						return nullptr;
					}
					{
						auto &expr = _83362_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_22318abb0:;
						if (it != expr.end()) {
							jule::Ptr<_21ec05288_TypeAlias> _223189be2_dg = *it;
							{
								if (_2231895e8_bg == _223189be2_dg) {
									_21ec186ec_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
									return nullptr;
								}
							}
							_iter_next_22318abb0:;
							++it;
							goto _iter_begin_22318abb0;
						}
						_iter_end_22318abb0:;
					}
				}
				_iter_next_2231892b8:;
				++it;
				goto _iter_begin_2231892b8;
			}
			_iter_end_2231892b8:;
		}
	}
	jule::Bool _87517_ok = _21ec19e29_check_illegal_cycles(&(*_self_), _83335_decl,jule::Any(_83362_ta));
	if ((!(_87517_ok))) {
		return nullptr;
	}
	_87517_ok=_21eb61612_check_type_alias_decl_kind((*_self_)._field_s, _83362_ta,(*_self_)._field_lookup);
	if ((!(_87517_ok))) {
		return nullptr;
	}
	if (_83362_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr)) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_83362_ta);
	}
	return jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(((_83362_ta.get()._field_cpp_linked) ? (_83362_ta.get()._field_ident) : (_83362_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident)),_83362_ta.get()._field_generic,jule::Bool(),_83362_ta.get()._field_kind.get()._field_kind.get()._field_kind)), 4);
}



inline jule::Ptr<_21ddb6aee_Enum> _21ec1a842_from_enum(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _89929_decl,jule::Ptr<_21ddb6aee_Enum>& _89956_e) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _89956_e.get()._field_public,_89956_e.get()._field_token)))) {
		_21ec186ec_push_err(&(*_self_), _89929_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_89929_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_89929_decl.get()._field_generics.len() > 0LL)) {
		_21ec186ec_push_err(&(*_self_), _89929_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_89929_decl.get()._field_ident)}));
		return nullptr;
	}
	return _89956_e;
}



inline jule::Ptr<_21deee929_Trait> _21ec1acc6_from_trait(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _91130_decl,jule::Ptr<_21deee929_Trait>& _91157_t) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _91157_t.get()._field_public,_91157_t.get()._field_token)))) {
		_21ec186ec_push_err(&(*_self_), _91130_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_91130_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_91130_decl.get()._field_generics.len() > 0LL)) {
		_21ec186ec_push_err(&(*_self_), _91130_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_91130_decl.get()._field_ident)}));
		return nullptr;
	}
	return _91157_t;
}



inline jule::Bool _21ec1b25a_check_struct_ins(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21dd06742_StructIns>& _92340_ins,_21c627dde_Token& _92358_error_token) {
	jule::Bool _92380_ok = jule::Bool();
	if (_92340_ins.get()._field_checked) {
		_92380_ok = true;
		return _92380_ok;
	}
	_92340_ins.get()._field_checked=true;
	if (((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_92340_ins.get()._field_decl)))) {
		_92380_ok = true;
		return _92380_ok;
	}
	jule::Ptr<_21ebb6c0b_SymbolTable> _93417_old_file = (*_self_)._field_s.get()._field_file;
	__JULE_DEFER({
		_21eb571c9_set_current_file((*_self_)._field_s.ptr(), _93417_old_file);
	});
	jule::Ptr<_21ebb6c0b_SymbolTable> _93717_file = _21eb538ce_find_file((*_self_)._field_s.get()._field_files,_92340_ins.get()._field_decl.get()._field_token._field_file);
	if ((_93717_file != nullptr)) {
		_21eb571c9_set_current_file((*_self_)._field_s.ptr(), _93717_file);
	}
	jule::Ptr<_21ec16ed1_Referencer> _94217_referencer = jule::new_ptr<_21ec16ed1_Referencer>(_21ec16ed1_Referencer(_92340_ins.get()._field_decl.get()._field_ident,jule::Any(jule::Any(_92340_ins.get()._field_decl)),nullptr));
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _94717_generics = jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_92340_ins.get()._field_generics.len()));
	{
		auto &expr = _92340_ins.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22319bab1:;
		if (it != expr.end()) {
			jule::I64 _22ed65350_i = it - expr.begin();
			jule::Ptr<_21ec06223_TypeKind> _22ed65482_g = *it;
			{
				_94717_generics = jule::alloc_for_append(_94717_generics,1);_94717_generics.__push(jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(jule::Ptr<_21c6411e3_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_21c627dde_Token(),_92340_ins.get()._field_decl.get()._field_generics[_22ed65350_i].get()._field_ident,jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_22ed65482_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>())));
			}
			_iter_next_22319bab1:;
			++it;
			_22ed65350_i++;
			goto _iter_begin_22319bab1;
		}
		_iter_end_22319bab1:;
	}
	jule::Ptr<_21ebb6c0b_SymbolTable> _95717_old_sema_file = _92340_ins.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_21eb571c9_set_current_file(_92340_ins.get()._field_decl.get()._field_sema.ptr(), _95717_old_sema_file);
	});
	_21ec17e27_TypeChecker _96217_tc = _21ec17e27_TypeChecker(_92340_ins.get()._field_decl.get()._field_sema,jule::Trait<_21ec23a48_Lookup>(_92340_ins.get()._field_decl.get()._field_sema, 3),_94217_referencer,_21c627dde_Token(),jule::Slice<jule::Ptr<_21c640423_GenericDecl>>(),_94717_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec05288_TypeAlias>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>(),jule::Bool());
	{
		auto &expr = _92340_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_22ed675d8:;
		if (it != expr.end()) {
			jule::Ptr<_21dd05be7_FieldIns> _22ed68078_field = *it;
			{
				jule::Ptr<_21ec06223_TypeKind> _97121_kind = _21ec20b22_check_decl(&_96217_tc, _22ed68078_field.get()._field_decl.get()._field_kind.get()._field_decl);
				_92380_ok=(_97121_kind != nullptr);
				if (((_92340_ins.get()._field_decl.get()._field_sema != nullptr) && ((*_self_)._field_s != _92340_ins.get()._field_decl.get()._field_sema)) && (_92340_ins.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL)) {
					(*_self_)._field_s.get()._field_errors=jule::append((*_self_)._field_s.get()._field_errors,_92340_ins.get()._field_decl.get()._field_sema.get()._field_errors);
					_92340_ins.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
				}
				if (_92380_ok) {
					_22ed68078_field.get()._field_kind=_97121_kind;
					_92340_ins.get()._field_mutable=_92340_ins.get()._field_mutable || ((!(_22ed68078_field.get()._field_decl.get()._field_mutable)) && _21ec07884_mutable(_22ed68078_field.get()._field_kind.ptr()));
					_21eb6a3a7_check_struct_ins_derive_clone((*_self_)._field_s.ptr(), _92340_ins);
				}
			}
			_iter_next_22ed675d8:;
			++it;
			goto _iter_begin_22ed675d8;
		}
		_iter_end_22ed675d8:;
	}
	if ((_92340_ins.get()._field_generics.len() > 0LL)) {
		_21eb6dc7e_check_struct_ins_operators((*_self_)._field_s, _92340_ins);
		_21eb6d3aa_check_struct_ins((*_self_)._field_s, _92340_ins);
	}
	_92380_ok = true;
	return _92380_ok;
}



inline void _21ec1b5bd_append_used_struct_reference(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21dd03266_Struct>& _99352_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_21dd03266_Struct>>()) {
			_case_begin_22ed700a2:;
			{
				jule::Ptr<_21dd03266_Struct> _100021_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_21dd03266_Struct>();
				if ((!(_21dd053bc_is_uses(_100021_ref_s.ptr(), _99352_s)))) {
					_100021_ref_s.get()._field_uses = jule::alloc_for_append(_100021_ref_s.get()._field_uses,1);_100021_ref_s.get()._field_uses.__push(_99352_s);
				}
			}
		}
		_match_end_22ed7004c:;
	}
}



inline jule::Ptr<_21dd06742_StructIns> _21ec1ba41_build_struct_instance(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _100745_decl,jule::Ptr<_21dd03266_Struct>& _100772_s) {
	jule::Ptr<_21ec16ed1_Referencer> _100917_referencer = (*_self_)._field_referencer;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _101117_banned_generics = (*_self_)._field_banned_generics;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_21eb2ed2d_ScopeChecker>>()) {
				_case_begin_22ed7355b:;
				{
					jule::Ptr<_21eb2ed2d_ScopeChecker> _101825_sc = (*_self_)._field_lookup.operator jule::Ptr<_21eb2ed2d_ScopeChecker>();
					jule::Ptr<_21eb2ed2d_ScopeChecker> _101925_hard = _21eb32539_get_hard_root(_101825_sc);
					if ((_101925_hard.get()._field_owner.get()._field_owner == nullptr) || (_101925_hard.get()._field_owner.get()._field_owner.get()._field_decl != _100772_s)) {
						goto _match_end_22ed73319;
					}
					jule::I64 _102321_n = _101925_hard.get()._field_owner.get()._field_generics.len() + static_cast<jule::I64>(static_cast<jule::I64>(_101925_hard.get()._field_owner.get()._field_owner.get()._field_generics.len()));
					(*_self_)._field_banned_generics=_101925_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_102321_n);
				}
			}
			_match_end_22ed73319:;
		}
	} else {
		(*_self_)._field_inscatch=true;
	}
	jule::Ptr<_21dd06742_StructIns> _103317_ins = _21dd0370b_instance(_100772_s);
	_103317_ins.get()._field_generics=jule::Slice<jule::Ptr<_21ec06223_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_100745_decl.get()._field_generics.len()));
	{
		auto &expr = _100745_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22ed774b6:;
		if (it != expr.end()) {
			jule::Ptr<_21c5d253b_TypeDecl> _22ed77b04_g = *it;
			{
				jule::Ptr<_21ec06223_TypeKind> _103621_kind = _21ec2076a_build(&(*_self_), _22ed77b04_g.get()._field_kind);
				if ((_103621_kind == nullptr)) {
					return nullptr;
				}
				_103317_ins.get()._field_generics = jule::alloc_for_append(_103317_ins.get()._field_generics,1);_103317_ins.get()._field_generics.__push(_103621_kind);
			}
			_iter_next_22ed774b6:;
			++it;
			goto _iter_begin_22ed774b6;
		}
		_iter_end_22ed774b6:;
	}
	(*_self_)._field_banned_generics=_101117_banned_generics;
	(*_self_)._field_referencer=_100917_referencer;
	return _103317_ins;
}



inline jule::Ptr<_21dd06742_StructIns> _21ec1bec5_from_struct(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl>& _105035_decl,jule::Ptr<_21dd03266_Struct>& _105062_s) {
	if ((!(_21eb58032_is_accessible_define((*_self_)._field_s.ptr(), _105062_s.get()._field_public,_105062_s.get()._field_token)))) {
		_21ec186ec_push_err(&(*_self_), _105035_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_105035_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((*_self_)._field_selection) {
		if ((_105035_decl.get()._field_generics.len() > 0LL)) {
			_21ec186ec_push_err(&(*_self_), _105035_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		}
		return jule::new_ptr<_21dd06742_StructIns>(_21dd06742_StructIns(jule::Bool(),_105062_s,jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd05be7_FieldIns>>(),jule::Slice<jule::Ptr<_21dd19249_Fn>>(),jule::Bool(),jule::Ptr<_21dd264ba_ReferenceStack>(),_21dd02188_Operators()));
	}
	if ((_105062_s.get()._field_generics.len() > 0LL) && ((*_self_)._field_ignore_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Bool _107317_ok = (*_self_)._field_not_plain || _21ec19e29_check_illegal_cycles(&(*_self_), _105035_decl,jule::Any(_105062_s));
	if ((!(_107317_ok))) {
		return nullptr;
	}
	_21ec1b5bd_append_used_struct_reference(&(*_self_), _105062_s);
	jule::Ptr<_21dd06742_StructIns> _107917_ins = _21ec1ba41_build_struct_instance(&(*_self_), _105035_decl,_105062_s);
	if ((_107917_ins == nullptr)) {
		return nullptr;
	}
	_107317_ok=_21eb59000_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_107917_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_107917_ins.get()._field_generics.len()),_105035_decl.get()._field_token);
	if ((!(_107317_ok))) {
		return nullptr;
	}
	jule::Ptr<_21dd06742_StructIns> _108917_exist_instance = _21dd03ab3_append_instance(_105062_s.ptr(), _107917_ins);
	if ((_108917_exist_instance != nullptr)) {
		return _108917_exist_instance;
	}
	_107317_ok=_21ec1b25a_check_struct_ins(&(*_self_), _107917_ins,_105035_decl.get()._field_token);
	if ((!(_107317_ok))) {
		return nullptr;
	}
	return _107917_ins;
}



inline jule::Trait<_21ec05bd4_Kind> _21ec1c459_get_def(_21ec17e27_TypeChecker* _self_,jule::Trait<_21ec23a48_Lookup> _111126_l,jule::Ptr<_21c529e9a_IdentTypeDecl>& _111142_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_22ed84649:;
		if (it != expr.end()) {
			jule::Ptr<_21c640423_GenericDecl> _22ed84759_g = *it;
			{
				if (_22ed84759_g.get()._field_ident == _111142_decl.get()._field_ident) {
					return jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(_22ed84759_g.get()._field_ident), 5);
				}
			}
			_iter_next_22ed84649:;
			++it;
			goto _iter_begin_22ed84649;
		}
		_iter_end_22ed84649:;
	}
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_22ed84da8:;
		if (it != expr.end()) {
			jule::Ptr<_21ec05288_TypeAlias> _22ed849bd_g = *it;
			{
				if (_22ed849bd_g.get()._field_ident == _111142_decl.get()._field_ident) {
					jule::Ptr<_21dd06742_StructIns> _112025_st = _21ec09ca4_strct(_22ed849bd_g.get()._field_kind.get()._field_kind.ptr());
					if ((_112025_st != nullptr)) {
						jule::Bool _112225_ok = _21ec19e29_check_illegal_cycles(&(*_self_), _111142_decl,jule::Any(_112025_st.get()._field_decl));
						if ((!(_112225_ok))) {
							return nullptr;
						}
					}
					return _22ed849bd_g.get()._field_kind.get()._field_kind.get()._field_kind;
				}
			}
			_iter_next_22ed84da8:;
			++it;
			goto _iter_begin_22ed84da8;
		}
		_iter_end_22ed84da8:;
	}
	if ((!(_111142_decl.get()._field_cpp_linked))) {
		jule::Ptr<_21ddb6aee_Enum> _113221_e = _21ec23a48_Lookup_mptr_data[(_111126_l).type_offset]._21ec238c2_find_enum(_111126_l, _111142_decl.get()._field_ident);
		if ((_113221_e != nullptr)) {
			return jule::Trait<_21ec05bd4_Kind>(_21ec1a842_from_enum(&(*_self_), _111142_decl,_113221_e), 3);
		}
		jule::Ptr<_21deee929_Trait> _113721_t = _21ec23a48_Lookup_mptr_data[(_111126_l).type_offset]._21ec2351a_find_trait(_111126_l, _111142_decl.get()._field_ident);
		if ((_113721_t == nullptr) && (!((*_self_)._field_dis_builtin))) {
			_113721_t=_21ec781da_find_builtin_trait(_111142_decl.get()._field_ident);
		}
		if ((_113721_t != nullptr)) {
			return jule::Trait<_21ec05bd4_Kind>(_21ec1acc6_from_trait(&(*_self_), _111142_decl,_113721_t), 2);
		}
	} else if ((*_self_)._field_selection) {
		_21ec186ec_push_err(&(*_self_), _111142_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21dd03266_Struct> _114917_s = _21ec23a48_Lookup_mptr_data[(_111126_l).type_offset]._21ec22bce_find_struct(_111126_l, _111142_decl.get()._field_ident,_111142_decl.get()._field_cpp_linked);
	if ((_114917_s != nullptr)) {
		return jule::Trait<_21ec05bd4_Kind>(_21ec1bec5_from_struct(&(*_self_), _111142_decl,_114917_s), 0);
	}
	jule::Ptr<_21ec05288_TypeAlias> _115417_ta = _21ec23a48_Lookup_mptr_data[(_111126_l).type_offset]._21ec2274a_find_type_alias(_111126_l, _111142_decl.get()._field_ident,_111142_decl.get()._field_cpp_linked);
	if ((_115417_ta == nullptr) && (!((*_self_)._field_dis_builtin))) {
		_115417_ta=_21ec4ca3e_find_builtin_type_alias(_111142_decl.get()._field_ident);
	}
	if ((_115417_ta != nullptr)) {
		return _21ec1a3ad_from_type_alias(&(*_self_), _111142_decl,_115417_ta);
	}
	_21ec186ec_push_err(&(*_self_), _111142_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_111142_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_21ec05bd4_Kind> _21ec1c811_build_ident(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c529e9a_IdentTypeDecl> _116634_decl) {
	{
		
		if (_21ec16a3b_is_prim(_116634_decl.get()._field_ident)) {
			_case_begin_22ed91337:;
			{
				return jule::Trait<_21ec05bd4_Kind>(_21ec19038_build_prim(&(*_self_), _116634_decl), 5);
			}
		}
		else {
			_case_begin_22ed90c2c:;
			{
				return _21ec1c459_get_def(&(*_self_), (*_self_)._field_lookup,_116634_decl);
			}
		}
		_match_end_22ed90b83:;
	}
}



inline jule::Ptr<_21ec103e7_Sptr> _21ec1cbb8_build_sptr_from_type(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21ec06223_TypeKind>& _117544_elem) {
	{
		
		if ((_117544_elem == nullptr)) {
			_case_begin_22ed925ad:;
			{
				return nullptr;
			}
		}
		else if ((_21ec09ca4_strct(_117544_elem.ptr()) != nullptr)) {
			_case_begin_22ed92635:;
			{
				jule::Ptr<_21dd06742_StructIns> _118117_s = _21ec09ca4_strct(_117544_elem.ptr());
				if ((_118117_s.get()._field_decl != nullptr) && _118117_s.get()._field_decl.get()._field_cpp_linked) {
					_21ec186ec_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if ((_21ec09424_arr(_117544_elem.ptr()) != nullptr) && _21ec09424_arr(_117544_elem.ptr()).get()._field_auto) {
			_case_begin_22ed926ac:;
			{
				_21ec186ec_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22ed91e92:;
	}
	return jule::new_ptr<_21ec103e7_Sptr>(_21ec103e7_Sptr(_117544_elem));
}



inline jule::Ptr<_21ec103e7_Sptr> _21ec1d070_build_sptr(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c5c6e48_SptrTypeDecl> _119533_decl) {
	jule::Bool _119613_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_119613_not_plain;
	});
	jule::Ptr<_21ec06223_TypeKind> _120017_elem = _21ec20b22_check_decl(&(*_self_), _119533_decl.get()._field_elem);
	return _21ec1cbb8_build_sptr_from_type(&(*_self_), _120017_elem);
}



inline jule::Ptr<_21ec14275_Ptr> _21ec1d427_build_ptr_from_type(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21ec06223_TypeKind>& _120443_elem) {
	{
		
		if ((_120443_elem == nullptr)) {
			_case_begin_22ed986d5:;
			{
				return nullptr;
			}
		}
		else if ((_21ec09424_arr(_120443_elem.ptr()) != nullptr) && _21ec09424_arr(_120443_elem.ptr()).get()._field_auto) {
			_case_begin_22ed9875c:;
			{
				_21ec186ec_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_21ec14275_Ptr>();
			}
		}
		_match_end_22ed985e7:;
	}
	return jule::new_ptr<_21ec14275_Ptr>(_21ec14275_Ptr(_120443_elem));
}



inline jule::Ptr<_21ec14275_Ptr> _21ec1d7ce_build_ptr(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c52b199_PtrTypeDecl> _122032_decl) {
	jule::Bool _122113_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_122113_not_plain;
	});
	jule::Ptr<_21ec06223_TypeKind> _122517_elem = nullptr;
	if ((!(_21c5ee613_is_unsafe(_122032_decl.ptr())))) {
		_122517_elem=_21ec20b22_check_decl(&(*_self_), _122032_decl.get()._field_elem);
		return _21ec1d427_build_ptr_from_type(&(*_self_), _122517_elem);
	}
	return jule::new_ptr<_21ec14275_Ptr>(_21ec14275_Ptr(_122517_elem));
}



inline jule::Ptr<_21ec10eca_Slc> _21ec1db86_build_slc(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c5a1c25_SlcTypeDecl> _123732_decl) {
	jule::Bool _123813_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_123813_not_plain;
	});
	jule::Ptr<_21ec06223_TypeKind> _124217_elem = _21ec20b22_check_decl(&(*_self_), _123732_decl.get()._field_elem);
	{
		
		if ((_124217_elem == nullptr)) {
			_case_begin_22ed9ece6:;
			{
				return nullptr;
			}
		}
		else if ((_21ec09424_arr(_124217_elem.ptr()) != nullptr) && _21ec09424_arr(_124217_elem.ptr()).get()._field_auto) {
			_case_begin_22ed9ed6d:;
			{
				_21ec186ec_push_err(&(*_self_), _123732_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22ed9ec91:;
	}
	return jule::new_ptr<_21ec10eca_Slc>(_21ec10eca_Slc(_124217_elem));
}



inline jule::Ptr<_21ec13692_Arr> _21ec1e03d_build_arr(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c486ac7_ArrTypeDecl> _125932_decl) {
	jule::Bool _126013_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126013_not_plain;
	});
	jule::I64 _126417_n = 0LL;
	if ((!(_21c601ca8_auto_sized(_125932_decl.ptr())))) {
		jule::Ptr<_21ebbd053_Data> _126721_size = _21ebe0718_eval_expr(_21eb5d5a9_eval((*_self_)._field_s, (*_self_)._field_lookup), _125932_decl.get()._field_size);
		if ((_126721_size == nullptr)) {
			return nullptr;
		}
		if ((!(_21ebbda59_is_const(_126721_size.ptr())))) {
			_21ec186ec_push_err(&(*_self_), _125932_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_21ec087b9_prim(_126721_size.get()._field_kind.ptr()) == nullptr) || (!(_21eb2b236_is_int(_21ec087b9_prim(_126721_size.get()._field_kind.ptr()).get()._field_kind)))) {
			_21ec186ec_push_err(&(*_self_), _125932_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_126417_n=static_cast<jule::I64>(static_cast<jule::I64>(_21eaa070a_as_i64(_126721_size.get()._field_constant.ptr())));
		if ((_126417_n < 0LL)) {
			_21ec186ec_push_err(&(*_self_), _125932_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_21eb1e438_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_126417_n) > static_cast<jule::F64>(static_cast<jule::F64>(_21eb24dab_max(jule::Str("int", 3)))))) {
			_21ec186ec_push_err(&(*_self_), _125932_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_21ec06223_TypeKind> _129017_elem = _21ec20b22_check_decl(&(*_self_), _125932_decl.get()._field_elem);
	{
		
		if ((_129017_elem == nullptr)) {
			_case_begin_22edaaab0:;
			{
				return nullptr;
			}
		}
		else if ((_21ec09424_arr(_129017_elem.ptr()) != nullptr) && _21ec09424_arr(_129017_elem.ptr()).get()._field_auto) {
			_case_begin_22edaab26:;
			{
				_21ec186ec_push_err(&(*_self_), _125932_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22edaa939:;
	}
	return jule::new_ptr<_21ec13692_Arr>(_21ec13692_Arr(_21c601ca8_auto_sized(_125932_decl.ptr()),_126417_n,_129017_elem));
}



inline jule::Ptr<_21ec128b1_Map> _21ec1e3e5_build_map(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c4d770a_MapTypeDecl> _130832_decl) {
	jule::Bool _130913_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_130913_not_plain;
	});
	jule::Ptr<_21ec06223_TypeKind> _131317_key = _21ec20b22_check_decl(&(*_self_), _130832_decl.get()._field_key);
	if ((_131317_key == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21ec06223_TypeKind> _131817_val = _21ec20b22_check_decl(&(*_self_), _130832_decl.get()._field_val);
	if ((_131817_val == nullptr)) {
		return nullptr;
	}
	if ((_21ec09149_enm(_131817_val.ptr()) != nullptr)) {
		_21ec186ec_push_err(&(*_self_), _130832_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_ptr<_21ec128b1_Map>(_21ec128b1_Map(_131317_key,_131817_val));
}



inline jule::Ptr<_21ec11b46_Tuple> _21ec1e79c_build_tuple(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c515c99_TupleTypeDecl> _133234_decl) {
	jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _133317_types = jule::Slice<jule::Ptr<_21ec06223_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_133234_decl.get()._field_types.len()));
	{
		auto &expr = _133234_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_22edb2985:;
		if (it != expr.end()) {
			jule::Ptr<_21c5d253b_TypeDecl> _22edb2eb3_t = *it;
			{
				jule::Ptr<_21ec06223_TypeKind> _133521_kind = _21ec20b22_check_decl(&(*_self_), _22edb2eb3_t);
				if ((_133521_kind == nullptr)) {
					return nullptr;
				}
				_133317_types = jule::alloc_for_append(_133317_types,1);_133317_types.__push(_133521_kind);
			}
			_iter_next_22edb2985:;
			++it;
			goto _iter_begin_22edb2985;
		}
		_iter_end_22edb2985:;
	}
	return jule::new_ptr<_21ec11b46_Tuple>(_21ec11b46_Tuple(_133317_types));
}



inline jule::Bool _21ec1eb54_check_fn_types(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21dd1cc42_FnIns>& _134538_f) {
	jule::Bool _134551_ok = jule::Bool();
	{
		auto &expr = _134538_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22edb5092:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1badc_ParamIns> _22edb515d_p = *it;
			{
				_22edb515d_p.get()._field_kind=_21ec2076a_build(&(*_self_), _22edb515d_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_134551_ok=(_22edb515d_p.get()._field_kind != nullptr);
				if ((!(_134551_ok))) {
					_134551_ok = false;
					return _134551_ok;
				}
			}
			_iter_next_22edb5092:;
			++it;
			goto _iter_begin_22edb5092;
		}
		_iter_end_22edb5092:;
	}
	if ((!(_21dd19711_is_void(_134538_f.get()._field_decl.ptr())))) {
		_134538_f.get()._field_result=_21ec2076a_build(&(*_self_), _134538_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_134551_ok = (_134538_f.get()._field_result != nullptr);
		return _134551_ok;
	}
	_134551_ok = true;
	return _134551_ok;
}



inline jule::Ptr<_21dd1cc42_FnIns> _21ec2000b_build_fn(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c641633_FnDecl> _136231_decl) {
	if ((_136231_decl.get()._field_generics.len() > 0LL)) {
		_21ec186ec_push_err(&(*_self_), _136231_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21dd19249_Fn> _136817_f = _21dd29d70_build_fn(_136231_decl);
	jule::Ptr<_21dd1cc42_FnIns> _136917_ins = _21dd1b009_instance_force(_136817_f);
	_136917_ins.get()._field_anon=true;
	jule::Bool _137213_ok = _21ec1eb54_check_fn_types(&(*_self_), _136917_ins);
	if ((!(_137213_ok))) {
		return nullptr;
	}
	return _136917_ins;
}



inline jule::Trait<_21ec05bd4_Kind> _21ec203b3_build_by_namespace(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c5ec545_NamespaceTypeDecl> _138041_decl) {
	jule::Str _138113_path = _21ec1608a_build_link_path_by_tokens(_138041_decl.get()._field_idents);
	jule::Ptr<_21eb49c8d_ImportInfo> _138217_imp = _21ec23a48_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._21ec21d32_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_21eb49c8d_ImportInfo>)>([=](jule::Ptr<_21eb49c8d_ImportInfo> _138253_imp) mutable -> jule::Bool {
		if ((_138041_decl.get()._field_idents.len() == 1LL) && (_138253_imp.get()._field_alias == _138113_path)) {
			return true;
		}
		return (_138253_imp.get()._field_link_path == _138113_path) && _21eb4ce28_is_accessible_via_selection(_138253_imp.ptr());
	}));
	if ((_138217_imp == nullptr) || (!(_21eb4c752_is_lookupable(_138217_imp.ptr(), jule::Str("self", 4))))) {
		_21ec186ec_push_err(&(*_self_), _138041_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_138113_path)}));
		return nullptr;
	}
	_21ec18b81_disallow_builtin(&(*_self_));
	jule::Trait<_21ec05bd4_Kind> _139517_kind = _21ec1c459_get_def(&(*_self_), jule::Trait<_21ec23a48_Lookup>(_138217_imp, 1),_138041_decl.get()._field_kind);
	_21ec1893e_allow_builtin(&(*_self_));
	return _139517_kind;
}



inline jule::Ptr<_21ec06223_TypeKind> _21ec2076a_build(_21ec17e27_TypeChecker* _self_,jule::Any& _140129_decl_kind) {
	jule::Trait<_21ec05bd4_Kind> _140217_kind = nullptr;
	{
		auto &_match_expr{ _140129_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec06223_TypeKind>>()) {
			_case_begin_22edc24bc:;
			{
				_140217_kind=jule::Trait<_21ec05bd4_Kind>(_140129_decl_kind.operator jule::Ptr<_21ec06223_TypeKind>(), 4);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c529e9a_IdentTypeDecl>>()) {
			_case_begin_22edc2533:;
			{
				jule::Trait<_21ec05bd4_Kind> _140721_t = _21ec1c811_build_ident(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c529e9a_IdentTypeDecl>());
				if ((_140721_t != nullptr)) {
					_140217_kind=_140721_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c5c6e48_SptrTypeDecl>>()) {
			_case_begin_22edc2599:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_21ec103e7_Sptr> _141321_t = _21ec1d070_build_sptr(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c5c6e48_SptrTypeDecl>());
				if ((_141321_t != nullptr)) {
					_140217_kind=jule::Trait<_21ec05bd4_Kind>(_141321_t, 6);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c52b199_PtrTypeDecl>>()) {
			_case_begin_22edc2610:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_21ec14275_Ptr> _141921_t = _21ec1d7ce_build_ptr(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c52b199_PtrTypeDecl>());
				if ((_141921_t != nullptr)) {
					_140217_kind=jule::Trait<_21ec05bd4_Kind>(_141921_t, 11);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c5a1c25_SlcTypeDecl>>()) {
			_case_begin_22edc30e4:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_21ec10eca_Slc> _142521_t = _21ec1db86_build_slc(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c5a1c25_SlcTypeDecl>());
				if ((_142521_t != nullptr)) {
					_140217_kind=jule::Trait<_21ec05bd4_Kind>(_142521_t, 7);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c486ac7_ArrTypeDecl>>()) {
			_case_begin_22edc315a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_21ec13692_Arr> _143121_t = _21ec1e03d_build_arr(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c486ac7_ArrTypeDecl>());
				if ((_143121_t != nullptr)) {
					_140217_kind=jule::Trait<_21ec05bd4_Kind>(_143121_t, 10);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c4d770a_MapTypeDecl>>()) {
			_case_begin_22edc31c1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_21ec128b1_Map> _143721_t = _21ec1e3e5_build_map(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c4d770a_MapTypeDecl>());
				if ((_143721_t != nullptr)) {
					_140217_kind=jule::Trait<_21ec05bd4_Kind>(_143721_t, 9);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c515c99_TupleTypeDecl>>()) {
			_case_begin_22edc3237:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_21ec11b46_Tuple> _144321_t = _21ec1e79c_build_tuple(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c515c99_TupleTypeDecl>());
				if ((_144321_t != nullptr)) {
					_140217_kind=jule::Trait<_21ec05bd4_Kind>(_144321_t, 8);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c641633_FnDecl>>()) {
			_case_begin_22edc3413:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_21dd1cc42_FnIns> _144921_t = _21ec2000b_build_fn(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c641633_FnDecl>());
				if ((_144921_t != nullptr)) {
					_140217_kind=jule::Trait<_21ec05bd4_Kind>(_144921_t, 1);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c5ec545_NamespaceTypeDecl>>()) {
			_case_begin_22edc3479:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_21ec05bd4_Kind> _145521_t = _21ec203b3_build_by_namespace(&(*_self_), _140129_decl_kind.operator jule::Ptr<_21c5ec545_NamespaceTypeDecl>());
				if ((_145521_t != nullptr)) {
					_140217_kind=_145521_t;
				}
			}
		}
		else {
			_case_begin_22edc2368:;
			{
				_21ec186ec_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22edc229c:;
	}
	if ((_140217_kind == nullptr)) {
		return nullptr;
	}
	{
		auto &_match_expr{ _140217_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21ec06223_TypeKind>>()) {
			_case_begin_22edd05a7:;
			{
				return _140217_kind.operator jule::Ptr<_21ec06223_TypeKind>();
			}
		}
		else {
			_case_begin_22edce7d7:;
			{
				return jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_140217_kind));
			}
		}
		_match_end_22edcc0a9:;
	}
}



inline jule::Ptr<_21ec06223_TypeKind> _21ec20b22_check_decl(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21c5d253b_TypeDecl>& _147634_decl) {
	_21c627dde_Token _147817_error_token = (*_self_)._field_error_token;
	(*_self_)._field_error_token=_147634_decl.get()._field_token;
	jule::Ptr<_21ec06223_TypeKind> _148117_kind = _21ec2076a_build(&(*_self_), _147634_decl.get()._field_kind);
	(*_self_)._field_error_token=_147817_error_token;
	return _148117_kind;
}



inline void _21ec20e41_check(_21ec17e27_TypeChecker* _self_,jule::Ptr<_21ec0aa85_TypeSymbol>& _148729_t) {
	if ((_148729_t.get()._field_decl == nullptr)) {
		return;
	}
	jule::Ptr<_21ec06223_TypeKind> _149117_kind = _21ec20b22_check_decl(&(*_self_), _148729_t.get()._field_decl);
	if ((_149117_kind == nullptr)) {
		_21ec0b239_remove_kind(_148729_t.ptr());
		return;
	}
	_148729_t.get()._field_kind=_149117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _21ec17e27_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c64205c_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c6423c0_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c642ada_is_inf(_21c6428ba_Iter* _self_) {
	return (*_self_)._field_kind == jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _21c6428ba_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_21ccec4b4_IR>,jule::Slice<_21c348b32_Log>> static__21c441004_build(jule::Str _2825_path,jule::I64 _2836_flags) {
	jule::Ptr<_21cc7b410_JuleImporter> _2917_importer = static__21cbeeaae_new(_21cd73ace_build_compile_info());
	jule::Slice<jule::Ptr<_21c4cc2b0_Ast>> _3018_files;
	jule::Slice<_21c348b32_Log> _3029_logs;
	std::tie(_3018_files,_3029_logs) = _21ccb7ea7_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Str _3413_root = _2825_path;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_21eb4d269_Package> _4018_pkg;
	std::tie(_4018_pkg,_3029_logs) = _21ec253a7_analyze_package(_3018_files,jule::Trait<_21eb471a8_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Ptr<_21ccec4b4_IR> _4517_ir = jule::new_ptr<_21ccec4b4_IR>(_21ccec4b4_IR(_3413_root,jule::Slice<jule::Str>(),_4018_pkg,_21cc76284_all_packages(_2917_importer.ptr()),_21cd1eccd_OrderedDefines()));
	_4517_ir.get()._field_passes=_21cd6e79a_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _21c465677_append_structs(_21ccec4b4_IR* _self_,jule::Ptr<_21eb4d269_Package>& _5734_p,jule::Slice<jule::Ptr<_21dd03266_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2300b35c0:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2300b368b_f = *it;
			{
				{
					auto &expr = _2300b368b_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_2300b3db7:;
					if (it != expr.end()) {
						jule::Ptr<_21dd03266_Struct> _2300b3e0b_s = *it;
						{
							if ((!(_2300b3e0b_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_2300b3e0b_s);
							}
						}
						_iter_next_2300b3db7:;
						++it;
						goto _iter_begin_2300b3db7;
					}
					_iter_end_2300b3db7:;
				}
			}
			_iter_next_2300b35c0:;
			++it;
			goto _iter_begin_2300b35c0;
		}
		_iter_end_2300b35c0:;
	}
}



inline jule::Slice<jule::Ptr<_21dd03266_Struct>> _21cd6532e_get_all_structures(_21ccec4b4_IR* _self_) {
	jule::Slice<jule::Ptr<_21dd03266_Struct>> _7017_buffer = nullptr;
	_21c465677_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_2300b57d1:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2300b58ad_u = *it;
			{
				if ((!(_2300b58ad_u.get()._field_cpp_linked))) {
					_21c465677_append_structs(&(*_self_), _2300b58ad_u.get()._field_package,_7017_buffer);
				}
			}
			_iter_next_2300b57d1:;
			++it;
			goto _iter_begin_2300b57d1;
		}
		_iter_end_2300b57d1:;
	}
	return _7017_buffer;
}



inline void _21cd69d06_order(_21ccec4b4_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_21cd6532e_get_all_structures(&(*_self_));
	static__21cde539d_order_structures((*_self_)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _21ccec4b4_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c64315c_is_while_next(_21c642e3c_WhileKind* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _21c642e3c_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c643558_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd123eb_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd129b2_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c6438bb_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c643c2e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c64413b_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c64449e_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2202412da_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d7b4a_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c644ea5_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c6453b2_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c645912_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c6460a5_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c646913_auto_expr(_21c6464b2_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21c6464b2_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21c64702e_default_typed(_21c646d0e_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21c646d0e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21dd1badc_ParamIns> _21dd17852_instance(jule::Ptr<_21dd17423_Param> _self_) {
	return jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(_self_,jule::Ptr<_21ec06223_TypeKind>()));
}



inline jule::Bool _21dd17b2c_is_self(_21dd17423_Param* _self_) {
	return ((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _21dd17e07_is_ref(_21dd17423_Param* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _21dd17423_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21dd19711_is_void(_21dd19249_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _21dd199db_is_method(_21dd19249_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _21dd19cb6_is_entry_point(_21dd19249_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _21dd1a091_is_init(_21dd19249_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _21dd1a36b_is_anon(_21dd19249_Fn* _self_) {
	return _21c62aed0_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _21dd1a646_any_var(_21dd19249_Fn* _self_) {
	return ((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL);
}



inline jule::Bool _21dd1a965_parameters_uses_generics(_21dd19249_Fn* _self_) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_params;
		auto it = expr.begin();
		_iter_begin_22263cc34:;
		if (it != expr.end()) {
			jule::Ptr<_21dd17423_Param> &_22263cd77_p = *it;
			{
				if (_21dd1ed21_parameter_uses_generics(_22263cd77_p,(*_self_)._field_generics)) {
					return true;
				}
			}
			_iter_next_22263cc34:;
			++it;
			goto _iter_begin_22263cc34;
		}
		_iter_end_22263cc34:;
	}
	return false;
}



inline jule::Bool _21dd1ac2e_result_uses_generics(_21dd19249_Fn* _self_) {
	if (_21dd19711_is_void(&(*_self_))) {
		return false;
	} else if (((*_self_)._field_result.get()._field_kind == nullptr) || ((*_self_)._field_result.get()._field_kind.get()._field_kind == nullptr)) {
		return false;
	}
	return _21dd1e89d_kind_uses_generics((*_self_)._field_result.get()._field_kind.get()._field_kind,(*_self_)._field_generics);
}



inline jule::Ptr<_21dd1cc42_FnIns> _21dd1b009_instance_force(jule::Ptr<_21dd19249_Fn> _self_) {
	jule::Ptr<_21dd1cc42_FnIns> _12717_ins = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),_self_,jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::new_ptr<_21eb1472a_Scope>(_21eb1472a_Scope()),static__21dd2672e_new(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(),jule::Bool()));
	_12717_ins.get()._field_params=jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_params.len()));
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_222641d26:;
		if (it != expr.end()) {
			jule::Ptr<_21dd17423_Param> _222642684_p = *it;
			{
				_12717_ins.get()._field_params = jule::alloc_for_append(_12717_ins.get()._field_params,1);_12717_ins.get()._field_params.__push(_21dd17852_instance(_222642684_p));
			}
			_iter_next_222641d26:;
			++it;
			goto _iter_begin_222641d26;
		}
		_iter_end_222641d26:;
	}
	if ((_12717_ins.get()._field_decl.get()._field_result != nullptr)) {
		_12717_ins.get()._field_result=_12717_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	}
	return _12717_ins;
}



inline jule::Ptr<_21dd1cc42_FnIns> _21dd1b2d4_instance(jule::Ptr<_21dd19249_Fn> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	return _21dd1b009_instance_force(_self_);
}



inline std::tuple<jule::Bool,jule::I64> _21dd1b68b_append_instance(_21dd19249_Fn* _self_,jule::Ptr<_21dd1cc42_FnIns>& _15439_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return std::make_tuple(false,0LL);
		}
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
		return std::make_tuple(true,-1LL);
	}
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_222648811:;
		if (it != expr.end()) {
			jule::I64 _222649427_j = it - expr.begin();
			jule::Ptr<_21dd1cc42_FnIns> _222649559_ains = *it;
			{
				if (_21dd1e051_same(_222649559_ains.ptr(), _15439_ins)) {
					return std::make_tuple(false,_222649427_j);
				}
			}
			_iter_next_222648811:;
			++it;
			_222649427_j++;
			goto _iter_begin_222648811;
		}
		_iter_end_222648811:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, _21dd19249_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c64756d_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c647c11_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c6481b7_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21dd27b09_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21c4d7d6a_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_220d8cc38_ObjectCoder> static__220d8ae01_new(jule::Ptr<_21ccec4b4_IR>& _7628_ir,_220da8b44_SerializationInfo _7637_info) {
	jule::Ptr<_220d8cc38_ObjectCoder> _7717_oc = jule::new_ptr<_220d8cc38_ObjectCoder>(_220d8cc38_ObjectCoder(_7628_ir,_7637_info,jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Slice<jule::Ptr<_220d89141_TraitHash>>(),jule::Ptr<_2201e99be_ExprCoder>(),jule::Ptr<_220151b8a_ScopeCoder>()));
	_7717_oc.get()._field_ec=static__22014a18e_new(_7717_oc);
	_7717_oc.get()._field_sc=static__220198176_new(_7717_oc);
	return _7717_oc;
}



inline void _22026e58d_add_indent(_220d8cc38_ObjectCoder* _self_) {
	
	(*_self_)._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _220d82cb6_done_indent(_220d8cc38_ObjectCoder* _self_) {
	(*_self_)._field_indent_buffer=(*_self_)._field_indent_buffer.slice(0LL,((*_self_)._field_indent_buffer.len() - 1LL));
}



inline jule::Str _220d82623_indent(_220d8cc38_ObjectCoder* _self_) {
	return (*_self_)._field_indent_buffer;
}



inline jule::I64 _220dab707_find_type_offset(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21deee929_Trait> _10231_t,jule::Ptr<_21ec06223_TypeKind> _10246_k) {
	jule::Ptr<_21dd06742_StructIns> _10317_s = nullptr;
	if ((_21ec08a94_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_21ec08a94_sptr(_10246_k.ptr()).get()._field_elem;
	}
	if ((_21ec09ca4_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	}
	_10317_s=_21ec09ca4_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_trait_map;
		auto it = expr.begin();
		_iter_begin_230460bae:;
		if (it != expr.end()) {
			jule::Ptr<_220d89141_TraitHash> &_2304611cb_hash = *it;
			{
				if ((_2304611cb_hash.get()._field_t == _10231_t) && (_2304611cb_hash.get()._field_s == _10317_s)) {
					return _2304611cb_hash.get()._field_i;
				}
			}
			_iter_next_230460bae:;
			++it;
			goto _iter_begin_230460bae;
		}
		_iter_end_230460bae:;
	}
	return -1LL;
}



inline jule::Str _220dabe33_loc_info(_220d8cc38_ObjectCoder* _self_,_21c627dde_Token& _12024_t) {
	jule::Str _12117_loc = _12024_t._field_file.get()._field_path;
	if (_2359a5011_PRODUCTION) {
		{
			
			if (_236849954_has_prefix(_12117_loc,_21c35922a_PATH_STDLIB)) {
				_case_begin_230463035:;
				{
					(_12117_loc).mut_slice(_235ba6432_dir(_21c35922a_PATH_STDLIB).len() + 1LL);
				}
			}
			else if (_236849954_has_prefix(_12117_loc,(*_self_)._field_ir.get()._field_root)) {
				_case_begin_2304630ac:;
				{
					(_12117_loc).mut_slice(_235ba6432_dir((*_self_)._field_ir.get()._field_root).len() + 1LL);
				}
			}
			_match_end_230462e25:;
		}
	}
	_12117_loc+=jule::Str(":", 1);
	_12117_loc+=_21ea2e7cc_itoa(_12024_t._field_row);
	_12117_loc+=jule::Str(":", 1);
	_12117_loc+=_21ea2e7cc_itoa(_12024_t._field_column);
	return _22025eb77_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12117_loc));
}



inline jule::Str _220d90752_links(_220d8cc38_ObjectCoder* _self_) {
	jule::Str _14517_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_230466a3e:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _230466ad8_pkg = *it;
			{
				{
					
					if ((!(_230466ad8_pkg.get()._field_cpp_linked))) {
						_case_begin_23046728c:;
						{
							goto _iter_next_230466a3e;
						}
					}
					else if (_236920794_is_std_header_path(_230466ad8_pkg.get()._field_path)) {
						_case_begin_230467314:;
						{
							_14517_obj+=jule::Str("#include ", 9);
							_14517_obj+=_230466ad8_pkg.get()._field_path;
							_14517_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_23046717c:;
				}
			}
			_iter_next_230466a3e:;
			++it;
			goto _iter_begin_230466a3e;
		}
		_iter_end_230466a3e:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_230468843:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _230466d3b_pkg = *it;
			{
				{
					
					if ((!(_230466d3b_pkg.get()._field_cpp_linked))) {
						_case_begin_230468bd9:;
						{
							goto _iter_next_230468843;
						}
					}
					else if (_220dd527a_is_cpp_header_file(_230466d3b_pkg.get()._field_path)) {
						_case_begin_230468c61:;
						{
							_14517_obj+=jule::Str("#include \"", 10);
							_14517_obj+=_230466d3b_pkg.get()._field_path;
							_14517_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_230468ac9:;
				}
			}
			_iter_next_230468843:;
			++it;
			goto _iter_begin_230468843;
		}
		_iter_end_230468843:;
	}
	return _14517_obj;
}



inline jule::Str _220dcbeb9_param_ins(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd1badc_ParamIns>& _17129_p) {
	jule::Str _17217_obj = static__220ddb193_param_ins(_17129_p);
	_17217_obj+=jule::Str(" ", 1);
	_17217_obj+=static__220265551_param(_17129_p.get()._field_decl);
	return _17217_obj;
}



inline jule::Str _220dcc12e_param(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd17423_Param>& _17929_p) {
	jule::Str _18017_obj = static__220ddad85_param(_17929_p);
	if (((!(_17929_p.get()._field_ident.empty())) && (!(_21c62abc2_is_ignore_ident(_17929_p.get()._field_ident)))) && (!(_21c62aed0_is_anon_ident(_17929_p.get()._field_ident)))) {
		_18017_obj+=jule::Str(" ", 1);
		_18017_obj+=static__220265551_param(_17929_p);
	}
	return _18017_obj;
}



inline jule::Str _220dcc294_params(_220d8cc38_ObjectCoder* _self_,jule::Slice<jule::Ptr<_21dd17423_Param>>& _18930_params) {
	if ((_18930_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _19317_obj = jule::Str("(", 1);
	{
		auto &expr = _18930_params;
		auto it = expr.begin();
		_iter_begin_2304703c7:;
		if (it != expr.end()) {
			jule::Ptr<_21dd17423_Param> _23047041b_p = *it;
			{
				if (_21dd17b2c_is_self(_23047041b_p.ptr())) {
					if (_21dd17e07_is_ref(_23047041b_p.ptr())) {
						_19317_obj+=_220dcc12e_param(&(*_self_), _23047041b_p);
					}
				} else {
					_19317_obj+=_220dcc12e_param(&(*_self_), _23047041b_p);
				}
				_19317_obj+=jule::Str(",", 1);
			}
			_iter_next_2304703c7:;
			++it;
			goto _iter_begin_2304703c7;
		}
		_iter_end_2304703c7:;
	}
	(_19317_obj).mut_slice(0LL,_19317_obj.len() - 1LL);
	return (_19317_obj + jule::Str(")", 1));
}



inline jule::Str _220dcc409_params_ins(_220d8cc38_ObjectCoder* _self_,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>& _21034_params) {
	{
		
		if ((_21034_params.len() == 0LL)) {
			_case_begin_230472b49:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_230472a6c:;
	}
	jule::Str _21617_obj = jule::Str("(", 1);
	{
		auto &expr = _21034_params;
		auto it = expr.begin();
		_iter_begin_23047350c:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1badc_ParamIns> _230473551_p = *it;
			{
				_21617_obj+=_220dcbeb9_param_ins(&(*_self_), _230473551_p);
				_21617_obj+=jule::Str(",", 1);
			}
			_iter_next_23047350c:;
			++it;
			goto _iter_begin_23047350c;
		}
		_iter_end_23047350c:;
	}
	(_21617_obj).mut_slice(0LL,_21617_obj.len() - 1LL);
	return (_21617_obj + jule::Str(")", 1));
}



inline jule::Str _220dcc56e_params_decls(_220d8cc38_ObjectCoder* _self_,jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>& _22836_params) {
	if ((_22836_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _23317_obj = jule::Str("(", 1);
	{
		auto &expr = _22836_params;
		auto it = expr.begin();
		_iter_begin_230476037:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1badc_ParamIns> _23047607b_p = *it;
			{
				_23317_obj+=static__220ddb193_param_ins(_23047607b_p);
				_23317_obj+=jule::Str(",", 1);
			}
			_iter_next_230476037:;
			++it;
			goto _iter_begin_230476037;
		}
		_iter_end_230476037:;
	}
	(_23317_obj).mut_slice(0LL,_23317_obj.len() - 1LL);
	return (_23317_obj + jule::Str(")", 1));
}



inline void _220dcc6d4_prepare_structure(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd03266_Struct>& _24441_s) {
	{
		auto &expr = _24441_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_2304779c8:;
		if (it != expr.end()) {
			jule::Ptr<_21dd06742_StructIns> _230477ae9_ins = *it;
			{
				{
					auto &expr = _230477ae9_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_23047829d:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _230478336_m = *it;
						{
							if (_230478336_m.get()._field_statically) {
								goto _iter_next_23047829d;
							}
							{
								auto &expr = _230478336_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_230478963:;
								if (it != expr.end()) {
									jule::Ptr<_21dd1cc42_FnIns> _230478ee6_ins = *it;
									{
										jule::Ptr<_21dd1badc_ParamIns> _25129_p = _230478ee6_ins.get()._field_params[0LL];
										if ((!(_21dd17e07_is_ref(_25129_p.get()._field_decl.ptr())))) {
											_25129_p.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_220dd6897_CustomType>(_220dd6897_CustomType(static__220dd86ce_as_ptr(static__220ddc1d8_kind(_25129_p.get()._field_kind)))), 12)));
										} else {
											_25129_p.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_220dd6897_CustomType>(_220dd6897_CustomType(static__220ddc1d8_kind(_25129_p.get()._field_kind))), 12)));
										}
									}
									_iter_next_230478963:;
									++it;
									goto _iter_begin_230478963;
								}
								_iter_end_230478963:;
							}
						}
						_iter_next_23047829d:;
						++it;
						goto _iter_begin_23047829d;
					}
					_iter_end_23047829d:;
				}
			}
			_iter_next_2304779c8:;
			++it;
			goto _iter_begin_2304779c8;
		}
		_iter_end_2304779c8:;
	}
}



inline void _220dcc849_prepare_structures(_220d8cc38_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_230478743:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _23047b58c_s = *it;
			{
				if ((!(_23047b58c_s.get()._field_cpp_linked)) && (_23047b58c_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_220dcc6d4_prepare_structure(&(*_self_), _23047b58c_s);
				}
			}
			_iter_next_230478743:;
			++it;
			goto _iter_begin_230478743;
		}
		_iter_end_230478743:;
	}
}



inline void _220dcc9ae_build_trait_wrapper(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_220d89141_TraitHash>& _27843_hash) {
	{
		auto &expr = _27843_hash.get()._field_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_23047dbdd:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _23047dc87_m = *it;
			{
				jule::Str _28017_ident = _23047dc87_m.get()._field_ident;
				_23047dc87_m.get()._field_instances[0LL].get()._field_scope=nullptr;
				jule::Bool _28217_ptr = (!(_21dd17e07_is_ref(_23047dc87_m.get()._field_params[0LL].ptr())));
				jule::Ptr<_21dd19249_Fn> _28421_sm = _21dd07963_find_method(_27843_hash.get()._field_s.ptr(), _23047dc87_m.get()._field_ident,false);
				if ((_28421_sm == nullptr) || (_28421_sm.get()._field_instances.len() == 0LL)) {
					goto _iter_next_23047dbdd;
				}
				_23047dc87_m.get()._field_ident=(_28017_ident + jule::Str("_", 1)) + _21ea2e7cc_itoa(_27843_hash.get()._field_i);
				(*_self_)._field_trait_wrappers+=_220dd2233_func(&(*_self_), _23047dc87_m);
				_23047dc87_m.get()._field_ident=_28017_ident;
				_22026e58d_add_indent(&(*_self_));
				(*_self_)._field_trait_wrappers+=jule::Str("{\n", 2);
				(*_self_)._field_trait_wrappers+=_220d82623_indent(&(*_self_));
				if ((!(_21dd19711_is_void(_28421_sm.ptr())))) {
					(*_self_)._field_trait_wrappers+=jule::Str("return ", 7);
				}
				(*_self_)._field_trait_wrappers+=static__220264b27_func(_28421_sm);
				(*_self_)._field_trait_wrappers+=jule::Str("(", 1);
				if (_28217_ptr) {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.safe_ptr<", 16);
					(*_self_)._field_trait_wrappers+=static__220dda769_structure_ins(_27843_hash.get()._field_s);
					(*_self_)._field_trait_wrappers+=jule::Str(">(", 2);
					if ((!(_2359a5011_PRODUCTION))) {
						(*_self_)._field_trait_wrappers+=jule::Str("_00___file", 10);
					}
					(*_self_)._field_trait_wrappers+=jule::Str(")", 1);
				} else {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.data.as<", 15);
					(*_self_)._field_trait_wrappers+=static__220dda45b_structure(_28421_sm.get()._field_owner);
					(*_self_)._field_trait_wrappers+=jule::Str(">()", 3);
				}
				{
					auto expr = _23047dc87_m.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_2304832b9:;
					if (it != expr.end()) {
						jule::Ptr<_21dd17423_Param> _230487d07_mp = *it;
						{
							(*_self_)._field_trait_wrappers+=jule::Str(", ", 2);
							(*_self_)._field_trait_wrappers+=static__220265551_param(_230487d07_mp);
						}
						_iter_next_2304832b9:;
						++it;
						goto _iter_begin_2304832b9;
					}
					_iter_end_2304832b9:;
				}
				(*_self_)._field_trait_wrappers+=jule::Str(");\n}\n", 5);
				_220d82cb6_done_indent(&(*_self_));
			}
			_iter_next_23047dbdd:;
			++it;
			goto _iter_begin_23047dbdd;
		}
		_iter_end_23047dbdd:;
	}
}



inline void _220dccb24_trait_decl(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21deee929_Trait>& _32234_t) {
	jule::Str _32313_ident = static__220265243_trait_decl(_32234_t);
	jule::Str _32513_type_data = (_32313_ident + jule::Str("MptrData", 8));
	(*_self_)._field_trait_data_t+=jule::Str("struct ", 7);
	(*_self_)._field_trait_data_t+=_32513_type_data;
	(*_self_)._field_trait_data_t+=jule::Str(" {\n", 3);
	{
		auto &expr = _32234_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_23048a975:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _23048ab0c_m = *it;
			{
				jule::Ptr<_21dd1cc42_FnIns> _33121_ins = _23048ab0c_m.get()._field_instances[0LL];
				jule::Ptr<_21dd1badc_ParamIns> _33221_p = _33121_ins.get()._field_params[0LL];
				_33221_p.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_32234_t, 2)));
				{
					auto expr = _33121_ins.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_23048c614:;
					if (it != expr.end()) {
						jule::I64 _23048c7e0_i = it - expr.begin();
						jule::Ptr<_21dd1badc_ParamIns> _23048c966_ip = *it;
						{
							if (_21c62aed0_is_anon_ident(_23048c966_ip.get()._field_decl.get()._field_ident)) {
								_23048c966_ip.get()._field_decl.get()._field_ident=jule::Str("_", 1) + _21ea2e7cc_itoa(_23048c7e0_i);
							}
						}
						_iter_next_23048c614:;
						++it;
						_23048c7e0_i++;
						goto _iter_begin_23048c614;
					}
					_iter_end_23048c614:;
				}
				if ((!(_2359a5011_PRODUCTION))) {
					_33121_ins.get()._field_params = jule::alloc_for_append(_33121_ins.get()._field_params,1);_33121_ins.get()._field_params.__push(jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str("__file", 6))),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_220dd6897_CustomType>(_220dd6897_CustomType(jule::Str("const char*", 11))), 12))))));
				}
				_22026e58d_add_indent(&(*_self_));
				(*_self_)._field_trait_data_t+=_220dd0929_func_decl(&(*_self_), _23048ab0c_m,true);
				_220d82cb6_done_indent(&(*_self_));
			}
			_iter_next_23048a975:;
			++it;
			goto _iter_begin_23048a975;
		}
		_iter_end_23048a975:;
	}
	(*_self_)._field_trait_data_t+=_220d82623_indent(&(*_self_));
	(*_self_)._field_trait_data_t+=jule::Str("};", 2);
	(*_self_)._field_trait_data_t+=jule::Str("\n\n", 2);
	jule::I64 _36213_n = (*_self_)._field_trait_map.len();
	jule::I64 _36317_i = 0LL;
	{
		auto &expr = _32234_t.get()._field_implemented;
		auto it = expr.begin();
		_iter_begin_230492460:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _2304925a3_s = *it;
			{
				{
					auto &expr = _2304925a3_s.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_230492c24:;
					if (it != expr.end()) {
						jule::Ptr<_21dd06742_StructIns> _230492cac_ins = *it;
						{
							jule::Ptr<_220d89141_TraitHash> _36625_hash = jule::new_ptr<_220d89141_TraitHash>(_220d89141_TraitHash(_32234_t,_230492cac_ins,_36317_i));
							(_36317_i)++;
							_220dcc9ae_build_trait_wrapper(&(*_self_), _36625_hash);
							(*_self_)._field_trait_map = jule::alloc_for_append((*_self_)._field_trait_map,1);(*_self_)._field_trait_map.__push(_36625_hash);
						}
						_iter_next_230492c24:;
						++it;
						goto _iter_begin_230492c24;
					}
					_iter_end_230492c24:;
				}
			}
			_iter_next_230492460:;
			++it;
			goto _iter_begin_230492460;
		}
		_iter_end_230492460:;
	}
	(*_self_)._field_trait_declarations+=jule::Str("struct ", 7);
	(*_self_)._field_trait_declarations+=_32313_ident;
	(*_self_)._field_trait_declarations+=jule::Str(" {};\n", 5);
	_22026e58d_add_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("static ", 7);
	(*_self_)._field_trait_data+=_32513_type_data;
	(*_self_)._field_trait_data+=jule::Str(" ", 1);
	(*_self_)._field_trait_data+=_32313_ident;
	(*_self_)._field_trait_data+=jule::Str("_mptr_data[] = {\n", 17);
	{
		auto expr = (*_self_)._field_trait_map.slice(_36213_n);
		auto it = expr.begin();
		_iter_begin_230495d9d:;
		if (it != expr.end()) {
			jule::Ptr<_220d89141_TraitHash> _230495ebe_hash = *it;
			{
				(*_self_)._field_trait_data+=_220d82623_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("{\n", 2);
				_22026e58d_add_indent(&(*_self_));
				{
					auto &expr = _230495ebe_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_230497487:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _230497520_m = *it;
						{
							jule::Str _39321_m_ident = static__220264b27_func(_230497520_m);
							(*_self_)._field_trait_data+=_220d82623_indent(&(*_self_));
							(*_self_)._field_trait_data+=jule::Str(".", 1);
							(*_self_)._field_trait_data+=_39321_m_ident;
							(*_self_)._field_trait_data+=jule::Str("=", 1);
							(*_self_)._field_trait_data+=_39321_m_ident;
							(*_self_)._field_trait_data+=jule::Str("_", 1);
							(*_self_)._field_trait_data+=_21ea2e7cc_itoa(_230495ebe_hash.get()._field_i);
							(*_self_)._field_trait_data+=jule::Str(",\n", 2);
						}
						_iter_next_230497487:;
						++it;
						goto _iter_begin_230497487;
					}
					_iter_end_230497487:;
				}
				_220d82cb6_done_indent(&(*_self_));
				(*_self_)._field_trait_data+=_220d82623_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("},\n", 3);
			}
			_iter_next_230495d9d:;
			++it;
			goto _iter_begin_230495d9d;
		}
		_iter_end_230495d9d:;
	}
	_220d82cb6_done_indent(&(*_self_));
	(*_self_)._field_trait_data+=_220d82623_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("};", 2);
}



inline void _220dccc89_trait_decls(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21eb4d269_Package>& _41335_p) {
	{
		auto &expr = _41335_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_23049b9a8:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _23049bac9_f = *it;
			{
				{
					auto &expr = _23049bac9_f.get()._field_traits;
					auto it = expr.begin();
					_iter_begin_23049c27d:;
					if (it != expr.end()) {
						jule::Ptr<_21deee929_Trait> _23049c316_t = *it;
						{
							if (_23049c316_t.get()._field_token._field_id != static_cast<jule::U64>(0LLU)) {
								_220dccb24_trait_decl(&(*_self_), _23049c316_t);
							}
						}
						_iter_next_23049c27d:;
						++it;
						goto _iter_begin_23049c27d;
					}
					_iter_end_23049c27d:;
				}
			}
			_iter_next_23049b9a8:;
			++it;
			goto _iter_begin_23049b9a8;
		}
		_iter_end_23049b9a8:;
	}
}



inline jule::Str _220dccdee_structure_plain_decl(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd03266_Struct>& _42444_s) {
	jule::Str _42517_obj = jule::Str();
	{
		auto &expr = _42444_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_23049dd1d:;
		if (it != expr.end()) {
			jule::Ptr<_21dd06742_StructIns> _23049de3e_ins = *it;
			{
				_42517_obj+=jule::Str("\nstruct ", 8);
				_42517_obj+=static__220265b6c_structure_ins(_23049de3e_ins);
				_42517_obj+=jule::Str(";\n", 2);
			}
			_iter_next_23049dd1d:;
			++it;
			goto _iter_begin_23049dd1d;
		}
		_iter_end_23049dd1d:;
	}
	return _42517_obj;
}



inline jule::Str _220dcd064_structure_plain_decls(_220d8cc38_ObjectCoder* _self_) {
	jule::Str _43617_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_2304a066b:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _2304a06e3_s = *it;
			{
				if ((!(_2304a06e3_s.get()._field_cpp_linked)) && (_2304a06e3_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_43617_obj+=_220dccdee_structure_plain_decl(&(*_self_), _2304a06e3_s);
					_43617_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_2304a066b:;
			++it;
			goto _iter_begin_2304a066b;
		}
		_iter_end_2304a066b:;
	}
	return _43617_obj;
}



inline jule::Str _220dcd1c9_var_init_expr(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21eb75615_Var>& _44737_v,jule::Str _44746_init) {
	jule::Str _44817_obj = jule::Str();
	if (_44737_v.get()._field_statically) {
		_44817_obj+=jule::Str("static ", 7);
	}
	_44817_obj+=static__220ddc1d8_kind(_44737_v.get()._field_kind.get()._field_kind);
	_44817_obj+=jule::Str(" ", 1);
	if (_44737_v.get()._field_reference) {
		_44817_obj+=jule::Str("&", 1);
	}
	_44817_obj+=static__220266288_var(_44737_v);
	if ((!(_44746_init.empty()))) {
		_44817_obj+=jule::Str(" = ", 3);
		_44817_obj+=_44746_init;
	}
	_44817_obj+=jule::Str(";", 1);
	return _44817_obj;
}



inline jule::Str _220dcd33e_var(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21eb75615_Var> _46826_v) {
	if (_21c62abc2_is_ignore_ident(_46826_v.get()._field_ident)) {
		return jule::Str();
	}
	if ((_46826_v.get()._field_value != nullptr) && (_46826_v.get()._field_value.get()._field_expr != nullptr)) {
		if (_46826_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
			return _220dcd1c9_var_init_expr(&(*_self_), _46826_v,_22025d945_val((*_self_)._field_ec.ptr(), _46826_v.get()._field_value));
		}
		return _220dcd1c9_var_init_expr(&(*_self_), _46826_v,jule::Str());
	}
	return _220dcd1c9_var_init_expr(&(*_self_), _46826_v,_22025dcec_init_expr((*_self_)._field_ec.ptr(), _46826_v.get()._field_kind.get()._field_kind));
}



inline jule::Str _220dcd4a4_field_decl(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd05be7_FieldIns>& _48234_f) {
	jule::Str _48317_obj = static__220ddc1d8_kind(_48234_f.get()._field_kind);
	_48317_obj+=jule::Str(" ", 1);
	_48317_obj+=static__220265e7a_field(_48234_f.get()._field_decl);
	_48317_obj+=jule::Str(" = ", 3);
	if ((_48234_f.get()._field_default == nullptr)) {
		_48317_obj+=_22025dcec_init_expr((*_self_)._field_ec.ptr(), _48234_f.get()._field_kind);
	} else {
		_48317_obj+=_22025d58d_expr((*_self_)._field_ec.ptr(), _48234_f.get()._field_default.get()._field_model);
	}
	_48317_obj+=jule::Str(";", 1);
	return _48317_obj;
}



inline jule::Str _220dcd619_structure_constructor(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _49845_s) {
	jule::Str _49917_obj = static__220265b6c_structure_ins(_49845_s);
	_49917_obj+=jule::Str("(", 1);
	if ((_49845_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _49845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_2304aca52:;
			if (it != expr.end()) {
				jule::Ptr<_21dd05be7_FieldIns> _2304acb73_f = *it;
				{
					_49917_obj+=static__220ddc1d8_kind(_2304acb73_f.get()._field_kind);
					_49917_obj+=jule::Str(" __param_", 9);
					_49917_obj+=_2304acb73_f.get()._field_decl.get()._field_ident;
					_49917_obj+=jule::Str(", ", 2);
				}
				_iter_next_2304aca52:;
				++it;
				goto _iter_begin_2304aca52;
			}
			_iter_end_2304aca52:;
		}
		(_49917_obj).mut_slice(0LL,_49917_obj.len() - 2LL);
	} else {
		_49917_obj+=jule::Str("void", 4);
	}
	_49917_obj+=jule::Str(")", 1);
	if ((_49845_s.get()._field_fields.len() > 0LL)) {
		_49917_obj+=jule::Str(": ", 2);
		{
			auto &expr = _49845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_2304b01a3:;
			if (it != expr.end()) {
				jule::Ptr<_21dd05be7_FieldIns> _2304b033a_f = *it;
				{
					_49917_obj+=static__220265e7a_field(_2304b033a_f.get()._field_decl);
					_49917_obj+=jule::Str("(", 1);
					_49917_obj+=jule::Str("__param_", 8);
					_49917_obj+=_2304b033a_f.get()._field_decl.get()._field_ident;
					_49917_obj+=jule::Str("), ", 3);
				}
				_iter_next_2304b01a3:;
				++it;
				goto _iter_begin_2304b01a3;
			}
			_iter_end_2304b01a3:;
		}
		(_49917_obj).mut_slice(0LL,_49917_obj.len() - 2LL);
	}
	_49917_obj+=jule::Str(" {}", 3);
	return _49917_obj;
}



inline jule::Str _220dcd77e_structure_destructor(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _53144_s) {
	
	jule::Ptr<_21dd19249_Fn> _53313_dispose_method = _21dd07963_find_method(_53144_s.ptr(), jule::Str("dispose", 7),false);
	jule::Bool _53417_disposed = static__21eb76913_dispose(_53313_dispose_method);
	if ((!(_53417_disposed))) {
		return jule::Str();
	}
	jule::Str _53917_obj = jule::Str("~", 1);
	_53917_obj+=static__220265b6c_structure_ins(_53144_s);
	_53917_obj+=jule::Str("(void) { ", 9);
	_53917_obj+=static__220264b27_func(_53313_dispose_method);
	_53917_obj+=jule::Str("(this); }", 9);
	return _53917_obj;
}



inline void _220dcd8e4_structure_operator_eq(_220d8cc38_ObjectCoder* _self_,jule::Str& _54745_obj,jule::Str& _54756_ident,jule::Ptr<_21dd06742_StructIns>& _54773_s) {
	if ((_54773_s.get()._field_operators._field_eq != nullptr)) {
		_220dcdc46_structure_operator(&(*_self_), _54745_obj,_54756_ident,_54773_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;
	}
	_54745_obj+=_220d82623_indent(&(*_self_));
	if (_2359a575e_OPT_INLINE) {
		_54745_obj+=jule::Str("inline ", 7);
	}
	_54745_obj+=jule::Str("bool operator==(", 16);
	_54745_obj+=_54756_ident;
	_54745_obj+=jule::Str(" _other) {", 10);
	if ((_54773_s.get()._field_fields.len() > 0LL)) {
		_22026e58d_add_indent(&(*_self_));
		_54745_obj+=jule::Str("\n", 1);
		_54745_obj+=_220d82623_indent(&(*_self_));
		_54745_obj+=jule::Str("return ", 7);
		_22026e58d_add_indent(&(*_self_));
		jule::I64 _56721_n = 0LL;
		{
			auto &expr = _54773_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_2304b9a92:;
			if (it != expr.end()) {
				jule::Ptr<_21dd05be7_FieldIns> _2304b9bb3_f = *it;
				{
					jule::Ptr<_21dd06742_StructIns> _57021_strct = _21ec09ca4_strct(_2304b9bb3_f.get()._field_kind.ptr());
					if (((_57021_strct != nullptr) && (_57021_strct.get()._field_decl != nullptr)) && _57021_strct.get()._field_decl.get()._field_cpp_linked) {
						goto _iter_next_2304b9a92;
					}
					(_56721_n)++;
					_54745_obj+=jule::Str("\n", 1);
					_54745_obj+=_220d82623_indent(&(*_self_));
					_54745_obj+=jule::Str("this->", 6);
					jule::Str _57921_f_ident = static__220265e7a_field(_2304b9bb3_f.get()._field_decl);
					_54745_obj+=_57921_f_ident;
					_54745_obj+=jule::Str(" == _other.", 11);
					_54745_obj+=_57921_f_ident;
					_54745_obj+=jule::Str(" &&", 3);
				}
				_iter_next_2304b9a92:;
				++it;
				goto _iter_begin_2304b9a92;
			}
			_iter_end_2304b9a92:;
		}
		_220d82cb6_done_indent(&(*_self_));
		if ((_56721_n > 0LL)) {
			(_54745_obj).mut_slice(0LL,_54745_obj.len() - 3LL);
		} else {
			_54745_obj+=jule::Str("true", 4);
		}
		_54745_obj+=jule::Str(";\n", 2);
		_220d82cb6_done_indent(&(*_self_));
		_54745_obj+=_220d82623_indent(&(*_self_));
		_54745_obj+=jule::Str("}", 1);
	} else {
		_54745_obj+=jule::Str(" return true; }", 15);
	}
	_54745_obj+=jule::Str("\n\n", 2);
}



inline void _220dcda59_structure_operator_not_eq(_220d8cc38_ObjectCoder* _self_,jule::Str& _60149_obj,jule::Str& _60160_ident,jule::Ptr<_21dd06742_StructIns>& _60177_s) {
	_60149_obj+=_220d82623_indent(&(*_self_));
	if (_2359a575e_OPT_INLINE) {
		_60149_obj+=jule::Str("inline ", 7);
	}
	_60149_obj+=jule::Str("bool operator!=(", 16);
	_60149_obj+=_60160_ident;
	_60149_obj+=jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48);
}



inline void _220dcdc46_structure_operator(_220d8cc38_ObjectCoder* _self_,jule::Str& _61242_obj,jule::Str& _61253_ident,jule::Ptr<_21dd1cc42_FnIns>& _61270_f,jule::Str _61281_op) {
	if ((_61270_f == nullptr)) {
		return;
	}
	jule::Bool _61713_unary = (_61270_f.get()._field_params.len() == 1LL);
	jule::Bool _61813_assignment = _21dd19711_is_void(_61270_f.get()._field_decl.ptr());
	_61242_obj+=_220d82623_indent(&(*_self_));
	if (_2359a575e_OPT_INLINE) {
		_61242_obj+=jule::Str("inline ", 7);
	}
	if (_61813_assignment) {
		_61242_obj+=_61253_ident;
		_61242_obj+=jule::Str("&", 1);
	} else {
		if ((_21ec087b9_prim(_61270_f.get()._field_result.ptr()) == nullptr)) {
			_61242_obj+=_61253_ident;
		} else {
			_61242_obj+=jule::Str("jule::Bool", 10);
		}
	}
	_61242_obj+=jule::Str(" operator", 9);
	_61242_obj+=_61281_op;
	_61242_obj+=jule::Str("(", 1);
	if ((!(_61713_unary))) {
		jule::Ptr<_21dd1badc_ParamIns> _64021_p = _61270_f.get()._field_params[1LL];
		_61242_obj+=static__220ddb193_param_ins(_64021_p);
		_61242_obj+=jule::Str(" _other", 7);
	}
	_61242_obj+=jule::Str(") { ", 4);
	if ((!(_61813_assignment))) {
		_61242_obj+=jule::Str("return ", 7);
	}
	_61242_obj+=static__220264e35_func_ins(_61270_f);
	if ((!(_61713_unary))) {
		_61242_obj+=jule::Str("(this, _other); ", 16);
		if (_61813_assignment) {
			_61242_obj+=jule::Str("return *this; ", 14);
		}
		_61242_obj+=jule::Str("}", 1);
	} else {
		_61242_obj+=jule::Str("(this); }", 9);
	}
	_61242_obj+=jule::Str("\n\n", 2);
}



inline jule::Str _220dce0dc_structure_operators(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _66143_s) {
	jule::Str _66213_ident = static__220265b6c_structure_ins(_66143_s);
	jule::Str _66317_obj = jule::Str();
	_220dcd8e4_structure_operator_eq(&(*_self_), _66317_obj,_66213_ident,_66143_s);
	_220dcda59_structure_operator_not_eq(&(*_self_), _66317_obj,_66213_ident,_66143_s);
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_add,jule::Str("+", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_div,jule::Str("/", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_220dcdc46_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
	return _66317_obj;
}



inline jule::Str _220dce4d8_structure_derive_defs_decls(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _70247_s) {
	jule::Str _70317_obj = jule::Str();
	if (_21dd05015_is_derives(_70247_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_70317_obj+=_220d82623_indent(&(*_self_));
		_70317_obj+=static__220261c34_clone_func_decl(_70247_s.get()._field_decl);
		_70317_obj+=jule::Str(";\n\n", 3);
	}
	return _70317_obj;
}



inline jule::Str _220dce87e_structure_ins_decl(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _71242_s) {
	jule::Str _71317_obj = jule::Str();
	if ((_71242_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _71242_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_2304e01d3:;
			if (it != expr.end()) {
				jule::Ptr<_21dd19249_Fn> _2304e0304_m = *it;
				{
					_71317_obj+=_220dd0929_func_decl(&(*_self_), _2304e0304_m,false);
				}
				_iter_next_2304e01d3:;
				++it;
				goto _iter_begin_2304e01d3;
			}
			_iter_end_2304e01d3:;
		}
	}
	_71317_obj+=jule::Str("struct ", 7);
	jule::Str _72213_out_ident = static__220265b6c_structure_ins(_71242_s);
	_71317_obj+=_72213_out_ident;
	_71317_obj+=jule::Str(" {\n", 3);
	_22026e58d_add_indent(&(*_self_));
	if ((_71242_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _71242_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_2304e237d:;
			if (it != expr.end()) {
				jule::Ptr<_21dd05be7_FieldIns> _2304e246b_f = *it;
				{
					_71317_obj+=_220d82623_indent(&(*_self_));
					_71317_obj+=_220dcd4a4_field_decl(&(*_self_), _2304e246b_f);
					_71317_obj+=jule::Str("\n", 1);
				}
				_iter_next_2304e237d:;
				++it;
				goto _iter_begin_2304e237d;
			}
			_iter_end_2304e237d:;
		}
		_71317_obj+=jule::Str("\n\n", 2);
		_71317_obj+=_220d82623_indent(&(*_self_));
		_71317_obj+=_220dcd619_structure_constructor(&(*_self_), _71242_s);
		_71317_obj+=jule::Str("\n\n", 2);
	}
	_71317_obj+=_220d82623_indent(&(*_self_));
	_71317_obj+=_220dcd77e_structure_destructor(&(*_self_), _71242_s);
	_71317_obj+=jule::Str("\n\n", 2);
	_71317_obj+=_220d82623_indent(&(*_self_));
	_71317_obj+=_72213_out_ident;
	_71317_obj+=jule::Str("(void) = default;\n\n", 19);
	_71317_obj+=_220dce4d8_structure_derive_defs_decls(&(*_self_), _71242_s);
	_71317_obj+=_220dce0dc_structure_operators(&(*_self_), _71242_s);
	_71317_obj+=jule::Str("\n", 1);
	_220d82cb6_done_indent(&(*_self_));
	_71317_obj+=(_220d82623_indent(&(*_self_)) + jule::Str("};", 2));
	return _71317_obj;
}



inline jule::Str _220dcec36_structure_decl(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd03266_Struct>& _76238_s) {
	jule::Str _76317_obj = jule::Str();
	{
		auto &expr = _76238_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_2304e7839:;
		if (it != expr.end()) {
			jule::Ptr<_21dd06742_StructIns> _2304e795a_ins = *it;
			{
				_76317_obj+=_220dce87e_structure_ins_decl(&(*_self_), _2304e795a_ins);
			}
			_iter_next_2304e7839:;
			++it;
			goto _iter_begin_2304e7839;
		}
		_iter_end_2304e7839:;
	}
	return _76317_obj;
}



inline jule::Str _220dd0011_structure_decls(_220d8cc38_ObjectCoder* _self_) {
	jule::Str _77217_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_2304e9099:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _2304e9121_s = *it;
			{
				if ((!(_2304e9121_s.get()._field_cpp_linked)) && (_2304e9121_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_77217_obj+=_220dcec36_structure_decl(&(*_self_), _2304e9121_s);
					_77217_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_2304e9099:;
			++it;
			goto _iter_begin_2304e9099;
		}
		_iter_end_2304e9099:;
	}
	return _77217_obj;
}



inline jule::Str _220dd0495_func_head(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd1cc42_FnIns>& _78233_f,jule::Bool _78244_ptr) {
	jule::Str _78317_obj = jule::Str();
	if (((!(_78244_ptr)) && _2359a575e_OPT_INLINE) && (!(_21dd19cb6_is_entry_point(_78233_f.get()._field_decl.ptr())))) {
		_78317_obj+=jule::Str("inline ", 7);
	}
	_78317_obj+=static__220ddb7ae_func_ins_result(_78233_f);
	if (_78244_ptr) {
		_78317_obj+=jule::Str("(*", 2);
		_78317_obj+=static__220264e35_func_ins(_78233_f);
		_78317_obj+=jule::Str(")", 1);
	} else {
		_78317_obj+=jule::Str(" ", 1);
		_78317_obj+=static__220264e35_func_ins(_78233_f);
	}
	return _78317_obj;
}



inline jule::Str _220dd0929_func_decl(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd19249_Fn>& _80033_f,jule::Bool _80041_ptr) {
	jule::Str _80117_obj = jule::Str();
	{
		auto &expr = _80033_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_2304ee2e1:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1cc42_FnIns> _2304ee412_c = *it;
			{
				_80117_obj+=_220d82623_indent(&(*_self_));
				_80117_obj+=_220dd0495_func_head(&(*_self_), _2304ee412_c,_80041_ptr);
				_80117_obj+=_220dcc56e_params_decls(&(*_self_), _2304ee412_c.get()._field_params);
				_80117_obj+=jule::Str(";\n", 2);
			}
			_iter_next_2304ee2e1:;
			++it;
			goto _iter_begin_2304ee2e1;
		}
		_iter_end_2304ee2e1:;
	}
	return _80117_obj;
}



inline jule::Str _220dd0cd1_func_decls(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21eb4d269_Package>& _81234_pkg) {
	jule::Str _81317_obj = jule::Str();
	{
		auto &expr = _81234_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_230501832:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _230501953_file = *it;
			{
				{
					auto &expr = _230501953_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_2305020e6:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _230502190_f = *it;
						{
							if ((!(_230502190_f.get()._field_cpp_linked)) && (_230502190_f.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
								_81317_obj+=_220dd0929_func_decl(&(*_self_), _230502190_f,false);
							}
						}
						_iter_next_2305020e6:;
						++it;
						goto _iter_begin_2305020e6;
					}
					_iter_end_2305020e6:;
				}
			}
			_iter_next_230501832:;
			++it;
			goto _iter_begin_230501832;
		}
		_iter_end_230501832:;
	}
	return _81317_obj;
}



inline void _220dd1023_build_trait_map(_220d8cc38_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_230503b0e:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _230503b97_u = *it;
			{
				if ((!(_230503b97_u.get()._field_cpp_linked))) {
					_220dccc89_trait_decls(&(*_self_), _230503b97_u.get()._field_package);
				}
			}
			_iter_next_230503b0e:;
			++it;
			goto _iter_begin_230503b0e;
		}
		_iter_end_230503b0e:;
	}
	_220dccc89_trait_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
}



inline void _220dd1265_process_traits(_220d8cc38_ObjectCoder* _self_) {
	_220dd1023_build_trait_map(&(*_self_));
}



inline jule::Str _220dd1540_decls(_220d8cc38_ObjectCoder* _self_) {
	jule::Str _83917_obj = jule::Str();
	_83917_obj+=(*_self_)._field_trait_declarations;
	_83917_obj+=_220dcd064_structure_plain_decls(&(*_self_));
	_83917_obj+=_220dd0011_structure_decls(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_230507261:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _23050730a_u = *it;
			{
				if ((!(_23050730a_u.get()._field_cpp_linked))) {
					_83917_obj+=_220dd0cd1_func_decls(&(*_self_), _23050730a_u.get()._field_package);
				}
			}
			_iter_next_230507261:;
			++it;
			goto _iter_begin_230507261;
		}
		_iter_end_230507261:;
	}
	_83917_obj+=_220dd0cd1_func_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
	if (((*_self_)._field_trait_map.len() > 0LL)) {
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_data_t;
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_wrappers;
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_data;
	}
	return _83917_obj;
}



inline jule::Str _220dd19c4_pkg_globals(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21eb4d269_Package>& _86535_p,jule::Str& _86553_global_initializers) {
	jule::Str _86617_obj = jule::Str();
	{
		auto &expr = _86535_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_23050ae46:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _23050b067_f = *it;
			{
				{
					auto &expr = _23050b067_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_23050b70a:;
					if (it != expr.end()) {
						jule::Ptr<_21eb75615_Var> _23050b7a4_v = *it;
						{
							if (((_23050b7a4_v.get()._field_token._field_id != static_cast<jule::U64>(0LLU)) && (!(_23050b7a4_v.get()._field_cpp_linked))) && (!(_23050b7a4_v.get()._field_constant))) {
								_86617_obj+=static__220ddc1d8_kind(_23050b7a4_v.get()._field_kind.get()._field_kind);
								_86617_obj+=jule::Str(" ", 1);
								if (_23050b7a4_v.get()._field_reference) {
									_86617_obj+=jule::Str("&", 1);
								}
								_86617_obj+=static__220266288_var(_23050b7a4_v);
								_86617_obj+=jule::Str(";\n", 2);
								_86553_global_initializers+=_220d82623_indent(&(*_self_));
								_86553_global_initializers+=static__220266288_var(_23050b7a4_v);
								if ((_23050b7a4_v.get()._field_value != nullptr) && (_23050b7a4_v.get()._field_value.get()._field_expr != nullptr)) {
									if (_23050b7a4_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
										_86553_global_initializers+=jule::Str(" = ", 3);
										_86553_global_initializers+=_22025d945_val((*_self_)._field_ec.ptr(), _23050b7a4_v.get()._field_value);
									}
								} else {
									_86553_global_initializers+=jule::Str(" = ", 3);
									_86553_global_initializers+=_22025dcec_init_expr((*_self_)._field_ec.ptr(), _23050b7a4_v.get()._field_kind.get()._field_kind);
								}
								_86553_global_initializers+=jule::Str(";\n", 2);
							}
						}
						_iter_next_23050b70a:;
						++it;
						goto _iter_begin_23050b70a;
					}
					_iter_end_23050b70a:;
				}
			}
			_iter_next_23050ae46:;
			++it;
			goto _iter_begin_23050ae46;
		}
		_iter_end_23050ae46:;
	}
	return _86617_obj;
}



inline jule::Str _220dd1d7b_globals(_220d8cc38_ObjectCoder* _self_,jule::Str& _89731_global_initializers) {
	jule::Str _89817_obj = jule::Str();
	_22026e58d_add_indent(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_23051305d:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2305130e6_u = *it;
			{
				if ((!(_2305130e6_u.get()._field_cpp_linked))) {
					_89817_obj+=_220dd19c4_pkg_globals(&(*_self_), _2305130e6_u.get()._field_package,_89731_global_initializers);
				}
			}
			_iter_next_23051305d:;
			++it;
			goto _iter_begin_23051305d;
		}
		_iter_end_23051305d:;
	}
	_89817_obj+=_220dd19c4_pkg_globals(&(*_self_), (*_self_)._field_ir.get()._field_main,_89731_global_initializers);
	_220d82cb6_done_indent(&(*_self_));
	return _89817_obj;
}



inline jule::Str _220dd2233_func(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd19249_Fn>& _91128_f) {
	jule::Str _91217_obj = jule::Str();
	{
		auto &expr = _91128_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_2305154b1:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1cc42_FnIns> _2305155d2_ins = *it;
			{
				_91217_obj+=_220dd0495_func_head(&(*_self_), _2305155d2_ins,false);
				_91217_obj+=_220dcc409_params_ins(&(*_self_), _2305155d2_ins.get()._field_params);
				_91217_obj+=jule::Str(" ", 1);
				_91217_obj+=_2201e3b2d_func_scope((*_self_)._field_sc.ptr(), _2305155d2_ins);
				if ((_2305155d2_ins.get()._field_scope != nullptr)) {
					_91217_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_2305154b1:;
			++it;
			goto _iter_begin_2305154b1;
		}
		_iter_end_2305154b1:;
	}
	return _91217_obj;
}



inline jule::Str _220dd25da_pkg_funcs(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21eb4d269_Package>& _92633_p) {
	jule::Str _92717_obj = jule::Str();
	{
		auto &expr = _92633_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_230518382:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2305184a3_f = *it;
			{
				{
					auto &expr = _2305184a3_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_230518b46:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> _230518be0_f = *it;
						{
							if ((!(_2359a6a90_TEST)) && _220dd6622_has_directive(_230518be0_f.get()._field_directives,jule::Str("test", 4))) {
								goto _iter_next_230518b46;
							}
							if ((!(_230518be0_f.get()._field_cpp_linked)) && (_230518be0_f.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
								_92717_obj+=_220dd2233_func(&(*_self_), _230518be0_f);
								_92717_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_230518b46:;
						++it;
						goto _iter_begin_230518b46;
					}
					_iter_end_230518b46:;
				}
			}
			_iter_next_230518382:;
			++it;
			goto _iter_begin_230518382;
		}
		_iter_end_230518382:;
	}
	return _92717_obj;
}



inline jule::Str _220dd2992_structure_methods(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _94341_s) {
	jule::Str _94417_obj = jule::Str();
	{
		auto &expr = _94341_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_23051b6c6:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _23051b7e7_f = *it;
			{
				_94417_obj+=_220d82623_indent(&(*_self_));
				_94417_obj+=_220dd2233_func(&(*_self_), _23051b7e7_f);
				_94417_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_23051b6c6:;
			++it;
			goto _iter_begin_23051b6c6;
		}
		_iter_end_23051b6c6:;
	}
	return _94417_obj;
}



inline jule::Str _220dd2d49_structure_ostream(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _95441_s) {
	jule::Str _95517_obj = jule::Str();
	_95517_obj+=_220d82623_indent(&(*_self_));
	_95517_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48);
	_95517_obj+=static__220265b6c_structure_ins(_95441_s);
	_95517_obj+=jule::Str(" _Src) {\n", 9);
	_22026e58d_add_indent(&(*_self_));
	_95517_obj+=_220d82623_indent(&(*_self_));
	jule::Ptr<_21dd19249_Fn> _96317_fts = _21dd07963_find_method(_95441_s.ptr(), jule::Str("to_str", 6),false);
	if (static__21eb76c21_to_str(_96317_fts)) {
		_95517_obj+=jule::Str("_Stream << ", 11);
		_95517_obj+=static__220264b27_func(_96317_fts);
		_95517_obj+=jule::Str("(&_Src);\n", 9);
	} else {
		_95517_obj+=jule::Str("_Stream << \"", 12);
		_95517_obj+=_95441_s.get()._field_decl.get()._field_ident;
		_95517_obj+=jule::Str("{\";\n", 4);
		{
			auto &expr = _95441_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_230521a83:;
			if (it != expr.end()) {
				jule::I64 _230521d2a_i = it - expr.begin();
				jule::Ptr<_21dd05be7_FieldIns> _230521ec3_f = *it;
				{
					_95517_obj+=_220d82623_indent(&(*_self_));
					_95517_obj+=jule::Str("_Stream << \"", 12);
					_95517_obj+=_230521ec3_f.get()._field_decl.get()._field_ident;
					_95517_obj+=jule::Str(":", 1);
					jule::Ptr<_21dd06742_StructIns> _98021_strct = _21ec09ca4_strct(_230521ec3_f.get()._field_kind.ptr());
					if (((_98021_strct != nullptr) && (_98021_strct.get()._field_decl != nullptr)) && _98021_strct.get()._field_decl.get()._field_cpp_linked) {
						_95517_obj+=jule::Str(" cpp.", 5);
						_95517_obj+=static__220265e7a_field(_230521ec3_f.get()._field_decl);
						_95517_obj+=jule::Str("\"", 1);
					} else {
						_95517_obj+=jule::Str("\" << _Src.", 10);
						_95517_obj+=static__220265e7a_field(_230521ec3_f.get()._field_decl);
					}
					if ((_230521d2a_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_95441_s.get()._field_fields.len()))) {
						_95517_obj+=jule::Str(" << \", \"", 8);
					}
					_95517_obj+=jule::Str(";\n", 2);
				}
				_iter_next_230521a83:;
				++it;
				_230521d2a_i++;
				goto _iter_begin_230521a83;
			}
			_iter_end_230521a83:;
		}
		_95517_obj+=_220d82623_indent(&(*_self_));
		_95517_obj+=jule::Str("_Stream << \"}\";\n", 16);
	}
	_95517_obj+=_220d82623_indent(&(*_self_));
	_95517_obj+=jule::Str("return _Stream;\n", 16);
	_220d82cb6_done_indent(&(*_self_));
	_95517_obj+=_220d82623_indent(&(*_self_));
	_95517_obj+=jule::Str("}", 1);
	return _95517_obj;
}



inline jule::Str _220dd3201_structure_derive_defs(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _100845_s) {
	jule::Str _100917_obj = jule::Str();
	if (_21dd05015_is_derives(_100845_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_100917_obj+=_220d82623_indent(&(*_self_));
		_100917_obj+=static__220262042_clone_func_def(_100845_s.get()._field_decl);
		_100917_obj+=jule::Str("{\n", 2);
		_22026e58d_add_indent(&(*_self_));
		_100917_obj+=_220d82623_indent(&(*_self_));
		_100917_obj+=static__220dda769_structure_ins(_100845_s);
		_100917_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _100845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_23052931b:;
			if (it != expr.end()) {
				jule::Ptr<_21dd05be7_FieldIns> _23052a32d_f = *it;
				{
					jule::Str _101921_ident = static__220265e7a_field(_23052a32d_f.get()._field_decl);
					_100917_obj+=_220d82623_indent(&(*_self_));
					_100917_obj+=jule::Str("clone.", 6);
					_100917_obj+=_101921_ident;
					_100917_obj+=jule::Str(" = jule::clone(this->", 21);
					_100917_obj+=_101921_ident;
					_100917_obj+=jule::Str(");\n", 3);
				}
				_iter_next_23052931b:;
				++it;
				goto _iter_begin_23052931b;
			}
			_iter_end_23052931b:;
		}
		_100917_obj+=_220d82623_indent(&(*_self_));
		_100917_obj+=jule::Str("return clone;\n", 14);
		_220d82cb6_done_indent(&(*_self_));
		_100917_obj+=_220d82623_indent(&(*_self_));
		_100917_obj+=jule::Str("}", 1);
	}
	return _100917_obj;
}



inline jule::Str _220dd35a8_structure_ins(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd06742_StructIns>& _103737_s) {
	jule::Str _103817_obj = _220dd2992_structure_methods(&(*_self_), _103737_s);
	_103817_obj+=jule::Str("\n\n", 2);
	_103817_obj+=_220dd3201_structure_derive_defs(&(*_self_), _103737_s);
	_103817_obj+=jule::Str("\n\n", 2);
	_103817_obj+=_220dd2d49_structure_ostream(&(*_self_), _103737_s);
	return _103817_obj;
}



inline jule::Str _220dd3960_structure(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21dd03266_Struct>& _104733_s) {
	jule::Str _104817_obj = jule::Str();
	{
		auto &expr = _104733_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_230530a92:;
		if (it != expr.end()) {
			jule::Ptr<_21dd06742_StructIns> _230530bb3_ins = *it;
			{
				_104817_obj+=_220dd35a8_structure_ins(&(*_self_), _230530bb3_ins);
				_104817_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_230530a92:;
			++it;
			goto _iter_begin_230530a92;
		}
		_iter_end_230530a92:;
	}
	return _104817_obj;
}



inline jule::Str _220dd3c3a_structures(_220d8cc38_ObjectCoder* _self_) {
	jule::Str _105817_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_230532511:;
		if (it != expr.end()) {
			jule::Ptr<_21dd03266_Struct> _230532588_s = *it;
			{
				if ((!(_230532588_s.get()._field_cpp_linked)) && (_230532588_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_105817_obj+=_220dd3960_structure(&(*_self_), _230532588_s);
					_105817_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_230532511:;
			++it;
			goto _iter_begin_230532511;
		}
		_iter_end_230532511:;
	}
	return _105817_obj;
}



inline jule::Str _220dd4015_funcs(_220d8cc38_ObjectCoder* _self_) {
	jule::Str _107017_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_230534854:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2305348ed_u = *it;
			{
				if ((!(_2305348ed_u.get()._field_cpp_linked))) {
					_107017_obj+=_220dd25da_pkg_funcs(&(*_self_), _2305348ed_u.get()._field_package);
				}
			}
			_iter_next_230534854:;
			++it;
			goto _iter_begin_230534854;
		}
		_iter_end_230534854:;
	}
	_107017_obj+=_220dd25da_pkg_funcs(&(*_self_), (*_self_)._field_ir.get()._field_main);
	return _107017_obj;
}



inline void _220dd4411_push_init(_220d8cc38_ObjectCoder* _self_,jule::Ptr<_21eb4d269_Package>& _108029_pkg,jule::Str& _108049_obj) {
	
	{
		auto &expr = _108029_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_230537093:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2305371b4_file = *it;
			{
				{
					auto &expr = _2305371b4_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_230537857:;
					if (it != expr.end()) {
						jule::Ptr<_21dd19249_Fn> &_230537901_f = *it;
						{
							if ((_230537901_f.get()._field_ident == jule::Str("init", 4))) {
								_108049_obj+=jule::Str("\n\t", 2);
								_108049_obj+=static__220264b27_func(_230537901_f);
								_108049_obj+=jule::Str("();", 3);
							}
						}
						_iter_next_230537857:;
						++it;
						goto _iter_begin_230537857;
					}
					_iter_end_230537857:;
				}
			}
			_iter_next_230537093:;
			++it;
			goto _iter_begin_230537093;
		}
		_iter_end_230537093:;
	}
}



inline jule::Str _220dd47b8_init_caller(_220d8cc38_ObjectCoder* _self_,jule::Str& _109431_global_initializers) {
	jule::Str _109517_obj = jule::Str("void ", 5);
	_109517_obj+=jule::Str("__jule_call_initializers", 24);
	_109517_obj+=jule::Str("(void) {\n", 9);
	_109517_obj+=_109431_global_initializers;
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_230539947:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _230539a02_u = *it;
			{
				if ((!(_230539a02_u.get()._field_cpp_linked))) {
					_220dd4411_push_init(&(*_self_), _230539a02_u.get()._field_package,_109517_obj);
				}
			}
			_iter_next_230539947:;
			++it;
			goto _iter_begin_230539947;
		}
		_iter_end_230539947:;
	}
	_220dd4411_push_init(&(*_self_), (*_self_)._field_ir.get()._field_main,_109517_obj);
	_109517_obj+=jule::Str("\n}", 2);
	return _109517_obj;
}



inline void _220dd4ad7_append_standard(_220d8cc38_ObjectCoder* _self_,jule::Str& _111339_obj_code) {
	_220dc6722_Time _111413_time = static__220dc6d60_now();
	_220dc5e6e_AbsTime _111513_abs = _220dc8812_abs(&_111413_time);
	jule::Str _111717_time_str = jule::Str();
	_111717_time_str+=_21ea2e502_fmt_uint(_111513_abs._field_day,10LL);
	_111717_time_str+=jule::Str("/", 1);
	_111717_time_str+=_21ea2e502_fmt_uint(_111513_abs._field_month,10LL);
	_111717_time_str+=jule::Str("/", 1);
	_111717_time_str+=_21ea2e502_fmt_uint(_111513_abs._field_year,10LL);
	_111717_time_str+=jule::Str(" ", 1);
	_111717_time_str+=_21ea2e502_fmt_uint(_111513_abs._field_hour,10LL);
	_111717_time_str+=jule::Str(".", 1);
	_111717_time_str+=_21ea2e502_fmt_uint(_111513_abs._field_minute,10LL);
	_111717_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _112917_s = jule::Str();
	_112917_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_112917_s+=jule::Str("// JuleC version: ", 18);
	_112917_s+=jule::Str("jule0.0.10 @master", 18);
	_112917_s+=jule::Str("\n", 1);
	_112917_s+=jule::Str("// Date: ", 9);
	_112917_s+=_111717_time_str;
	_112917_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_112917_s+=(*_self_)._field_info._field_compiler;
	_112917_s+=jule::Str(" ", 1);
	_112917_s+=(*_self_)._field_info._field_compiler_command;
	_112917_s+=jule::Str("\n\n", 2);
	if (_2359a5011_PRODUCTION) {
		_112917_s+=jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34);
	}
	if ((!(_2359a6c49_RC))) {
		_112917_s+=jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43);
	}
	if ((!(_2359a6e8b_SAFETY))) {
		_112917_s+=jule::Str("#define __JULE_DISABLE__SAFETY\n", 31);
	}
	_112917_s+=jule::Str("\n\n#include \"", 12);
	_112917_s+=_21c35ba79_PATH_API;
	_112917_s+=jule::Str("\"\n\n", 3);
	_112917_s+=_111339_obj_code;
	_112917_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 149);
	if (_2359a6a90_TEST) {
		_112917_s+=jule::Str("test_point();", 13);
	} else {
		_112917_s+=jule::Str("entry_point();", 14);
	}
	_112917_s+=jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28);
	_111339_obj_code=_112917_s;
}



inline jule::Str _220dd4db2_serialize(_220d8cc38_ObjectCoder* _self_) {
	_220dcc849_prepare_structures(&(*_self_));
	_220dd1265_process_traits(&(*_self_));
	jule::Str _118217_global_initializers = jule::Str();
	jule::Str _118317_obj = jule::Str();
	_118317_obj+=_220d90752_links(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_220dd1540_decls(&(*_self_));
	_118317_obj+=jule::Str("\n\n", 2);
	_118317_obj+=_220dd1d7b_globals(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_220dd3c3a_structures(&(*_self_));
	_118317_obj+=_220dd4015_funcs(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_220dd47b8_init_caller(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	return _118317_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _220d8cc38_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "trait_declarations:" << _Src._field_trait_declarations << ", ";
	_Stream << "trait_wrappers:" << _Src._field_trait_wrappers << ", ";
	_Stream << "trait_data:" << _Src._field_trait_data << ", ";
	_Stream << "trait_data_t:" << _Src._field_trait_data_t << ", ";
	_Stream << "trait_map:" << _Src._field_trait_map << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21dd3d59d_to_str(_21deee929_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _21dd40bdd_equals(jule::Ptr<_21deee929_Trait> _self_,jule::Ptr<_21ec06223_TypeKind> _2626_other) {
	jule::Ptr<_21deee929_Trait> _2713_trt = _21ec0a07e_trt(_2626_other.ptr());
	return _self_ == _2713_trt;
}



inline jule::Bool _21dd79c7c_is_builtin(_21deee929_Trait* _self_) {
	return (*_self_)._field_token._field_id == static_cast<jule::U64>(0LLU);
}



inline jule::Ptr<_21dd19249_Fn> _21dd94deb_find_method(_21deee929_Trait* _self_,jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_2226db189:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _2226db255_f = *it;
			{
				if (_2226db255_f.get()._field_ident == _4034_ident) {
					return _2226db255_f;
				}
			}
			_iter_next_2226db189:;
			++it;
			goto _iter_begin_2226db189;
		}
		_iter_end_2226db189:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _21deee929_Trait _Src) {
	_Stream << _21dd3d59d_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _21ddd8318_auto_expr(_21dd39e29_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21dd39e29_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _21e0b22e4_to_str(_21ddb6aee_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _21e0ba2db_equals(jule::Ptr<_21ddb6aee_Enum> _self_,jule::Ptr<_21ec06223_TypeKind> _3826_other) {
	jule::Ptr<_21ddb6aee_Enum> _3913_enm = _21ec09149_enm(_3826_other.ptr());
	return _self_ == _3913_enm;
}



inline jule::Ptr<_21dd39e29_EnumItem> _21e0e5ca6_find_item(_21ddb6aee_Enum* _self_,jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_2226e028c:;
		if (it != expr.end()) {
			jule::Ptr<_21dd39e29_EnumItem> _2226e0358_item = *it;
			{
				if (_2226e0358_item.get()._field_ident == _4732_ident) {
					return _2226e0358_item;
				}
			}
			_iter_next_2226e028c:;
			++it;
			goto _iter_begin_2226e028c;
		}
		_iter_end_2226e028c:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _21ddb6aee_Enum _Src) {
	_Stream << _21e0b22e4_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _21c550d7d_is_decl(_21c523c63_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c646d0e_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_21c641633_FnDecl>>() || _match_expr.type_is<jule::Ptr<_21c647c11_StructDecl>>() || _match_expr.type_is<jule::Ptr<_21c6481b7_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_21c644ea5_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_21c64756d_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_21c6460a5_UseDecl>>() || _match_expr.type_is<jule::Ptr<_21c64205c_VarDecl>>() || _match_expr.type_is<jule::Ptr<_21c5d253b_TypeDecl>>()) {
			_case_begin_2217cab3c:;
			{
				return true;
			}
		}
		else {
			_case_begin_2217cade5:;
			{
				return false;
			}
		}
		_match_end_2217cad90:;
	}
}



inline jule::Bool _21c5a4596_is_directive(_21c523c63_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c525490_Directive>>()) {
			_case_begin_2217cc37a:;
			{
				return true;
			}
		}
		else {
			_case_begin_2217ccb2d:;
			{
				return false;
			}
		}
		_match_end_2217ccac8:;
	}
}



inline jule::Bool _21c5bb6e0_is_impl(_21c523c63_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c64866d_Impl>>()) {
			_case_begin_2217cd645:;
			{
				return true;
			}
		}
		else {
			_case_begin_2217cda52:;
			{
				return false;
			}
		}
		_match_end_2217cd9ec:;
	}
}



inline jule::Bool _21c5c76c9_is_use_decl(_21c523c63_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21c6460a5_UseDecl>>()) {
			_case_begin_2217ce437:;
			{
				return true;
			}
		}
		else {
			_case_begin_2217ce998:;
			{
				return false;
			}
		}
		_match_end_2217ce943:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _21c523c63_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _220e04266_parse_integer_0(_220e03b39_ArgParser* _self_,jule::Str& _18632_s,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _18640_parser) {
	jule::I64 _18684_x = jule::I64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s.empty()) {
			_case_begin_2305bd2e4:;
			{
				_18684_x = 0LL;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_236849954_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_2305bd954:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_236849954_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_2305bd9ba:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_236849954_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_2305bda31:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_2305bced6:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_2305bce70:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_2305bcda4:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}

inline std::tuple<jule::U64,jule::Bool> _220e04266_parse_integer_1(_220e03b39_ArgParser* _self_,jule::Str& _18632_s,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _18640_parser) {
	jule::U64 _18684_x = jule::U64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s.empty()) {
			_case_begin_2305c781a:;
			{
				_18684_x = 0LLU;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_236849954_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_2305c7e7a:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_236849954_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_2305c7ee1:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_236849954_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_2305c8057:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_2305c750c:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_2305c7496:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_2305c73ca:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}



inline jule::Str _220e04541_get_data(_220e03b39_ArgParser* _self_) {
	if (((*_self_)._field_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()))) {
		return jule::Str();
	}
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _220e04860_process_flag(_220e03b39_ArgParser* _self_,jule::Trait<_220dee393_CommonFlag>& _21236_flag) {
	{
		auto &_match_expr{ _21236_flag };
		
		if (_match_expr.type_is<jule::Ptr<_220dee78e_Flag_3>>()) {
			_case_begin_2305b564e:;
			{
				jule::Ptr<_220dee78e_Flag_3> _21521_bf = _21236_flag.operator jule::Ptr<_220dee78e_Flag_3>();
				(*(_21521_bf.get()._field__data))=(!(_21521_bf.get()._field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_2305b5561:;
	}
	jule::Str _22013_data = _220e04541_get_data(&(*_self_));
	if (_22013_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _220dee393_CommonFlag_mptr_data[(_21236_flag).type_offset]._220dedc66_name(_21236_flag)) + jule::Str(": expression missing", 20)));
	}
	{
		auto &_match_expr{ _21236_flag };
		
		if (_match_expr.type_is<jule::Ptr<_220dee78e_Flag_0>>()) {
			_case_begin_2305b6c8d:;
			{
				jule::Ptr<_220dee78e_Flag_0> _22721_intf = _21236_flag.operator jule::Ptr<_220dee78e_Flag_0>();
				jule::Bool _22833_ok;
				std::tie((*(_22721_intf.get()._field__data)),_22833_ok) = _220e04266_parse_integer_0(&(*_self_), _22013_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _22872_s,jule::I64 _22880_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _21e21d609_parse_int(_22872_s,_22880_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_22833_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _220dee393_CommonFlag_mptr_data[(_21236_flag).type_offset]._220dedc66_name(_21236_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220dee78e_Flag_1>>()) {
			_case_begin_2305b780a:;
			{
				jule::Ptr<_220dee78e_Flag_1> _23521_uintf = _21236_flag.operator jule::Ptr<_220dee78e_Flag_1>();
				jule::Bool _23634_ok;
				std::tie((*(_23521_uintf.get()._field__data)),_23634_ok) = _220e04266_parse_integer_1(&(*_self_), _22013_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23673_s,jule::I64 _23681_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _21e69629b_parse_uint(_23673_s,_23681_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_23634_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _220dee393_CommonFlag_mptr_data[(_21236_flag).type_offset]._220dedc66_name(_21236_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220dee78e_Flag_2>>()) {
			_case_begin_2305b7871:;
			{
				jule::Ptr<_220dee78e_Flag_2> _24321_ff = _21236_flag.operator jule::Ptr<_220dee78e_Flag_2>();
				(*(_24321_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _21e4567a9_parse_float(_22013_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _220dee393_CommonFlag_mptr_data[(_21236_flag).type_offset]._220dedc66_name(_21236_flag)) + jule::Str(": expression must be valid floating-point", 41)));
						return jule::VoidExceptional(((jule::Str("--", 2) + _220dee393_CommonFlag_mptr_data[(_21236_flag).type_offset]._220dedc66_name(_21236_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_220dee78e_Flag_4>>()) {
			_case_begin_2305b78d7:;
			{
				(*(_21236_flag.operator jule::Ptr<_220dee78e_Flag_4>().get()._field__data))=_22013_data;
			}
		}
		_match_end_2305b6aa1:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _220e04b7e_single_dash(_220e03b39_ArgParser* _self_,jule::Str& _25231_arg) {
	jule::Slice<jule::I32> _25313_rarg = static_cast<jule::Slice<jule::I32>>(_25231_arg).slice(1LL);
	{
		auto &expr = _25313_rarg;
		auto it = expr.begin();
		_iter_begin_2305ce9dc:;
		if (it != expr.end()) {
			jule::I32 &_2305ceab9_r = *it;
			{
				jule::Trait<_220dee393_CommonFlag> _25521_flag = _220e018b2_find_flag_short(&(*_self_)._field_set, _2305ceab9_r);
				if ((_25521_flag == nullptr)) {
					return jule::VoidExceptional((_25231_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_2305ceab9_r));
				}
				({
					auto except = _220e04860_process_flag(&(*_self_), _25521_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_2305ce9dc:;
			++it;
			goto _iter_begin_2305ce9dc;
		}
		_iter_end_2305ce9dc:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _220e04e9d_double_dash(_220e03b39_ArgParser* _self_,jule::Str& _26431_arg) {
	jule::Trait<_220dee393_CommonFlag> _26517_flag = _220e0150a_find_flag(&(*_self_)._field_set, _26431_arg.slice(2LL));
	if ((_26517_flag == nullptr)) {
		return jule::VoidExceptional((_26431_arg + jule::Str(": flag is not exist", 19)));
	}
	({
		auto except = _220e04860_process_flag(&(*_self_), _26517_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _220e051e0_try_arg(_220e03b39_ArgParser* _self_) {
	jule::Str _27413_arg = (*_self_)._field_args[(*_self_)._field_i];
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();
	}
	if (_27413_arg[0LL] == '-') {
		if (((*_self_)._field_args.len() > 1LL) && (_27413_arg[1LL] == '-')) {
			({
				auto except = _220e04e9d_double_dash(&(*_self_), _27413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = _220e04b7e_single_dash(&(*_self_), _27413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_27413_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _220e05432_parse(_220e03b39_ArgParser* _self_) {
	for (; (*_self_)._field_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); ((*_self_)._field_i)++) {
		{
			({
				auto except = _220e051e0_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_2305d19de:;
	}
	_iter_end_2305d19de:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _220e03b39_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2359a5c59_push_opt_level(jule::I64 _3323_level) {
	_2359a5132_OPT_COPY=_3323_level >= static_cast<jule::I64>(1LL);
	_2359a5253_OPT_DEADCODE=_3323_level >= static_cast<jule::I64>(1LL);
	_2359a53eb_OPT_APPEND=_3323_level >= static_cast<jule::I64>(1LL);
	_2359a551c_OPT_MATH=_3323_level >= static_cast<jule::I64>(1LL);
	_2359a563d_OPT_ACCESS=_3323_level >= static_cast<jule::I64>(1LL);
	_2359a575e_OPT_INLINE=_3323_level >= static_cast<jule::I64>(1LL);
	_2359a5990_OPT_PTR=_3323_level >= static_cast<jule::I64>(1LL);
	_2359a5ab1_OPT_COND=_3323_level >= static_cast<jule::I64>(1LL);
}



inline void _235a95ae6_free(void* _4524_ptr) {
	free(_4524_ptr);
}



inline jule::Str _235abcdb5_byte_ptr_to_str(jule::U8* _6931_s) {
	if ((_6931_s == nullptr)) {
		return jule::Str();
	}
	{
		return static_cast<jule::Str>(_6931_s);
	}
}



inline jule::I64 _235a3ac89_get_last_errno(void) {
	return errno;
}



inline jule::I64 _235a44523_stat(jule::U8* _4020_path,struct stat* _4037_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4020_path)), _4037_stat));
}



inline jule::I64 _235a9276e_open(jule::U8* _4520_path,jule::I64 _4533_flag,jule::I64 _4544_mode) {
	return static_cast<jule::I64>(open(((char*)(_4520_path)),_4533_flag,_4544_mode));
}



inline jule::U8* _235a7e23e_getcwd(jule::U8* _5122_buff,jule::U64 _5135_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5122_buff)),_5135_bufflen)));
}



inline DIR* _235abd1d4_opendir(jule::U8* _5623_path) {
	return opendir(((char*)(_5623_path)));
}



inline struct dirent* _235abd349_readdir(DIR* _5927_dir) {
	return readdir(_5927_dir);
}



inline jule::I64 _235abd6e0_closedir(DIR* _6228_dir) {
	return static_cast<jule::I64>(closedir(_6228_dir));
}



inline jule::I64 _235abdb30_mkdir(jule::U8* _7121_path,jule::I64 _7134_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7121_path)),_7134_mode));
}



inline jule::I64 _235abdc95_rmdir(jule::U8* _7621_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7621_path))));
}



inline jule::I64 _235abde0a_unlink(jule::U8* _7922_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7922_path))));
}



inline jule::I64 _235ac03d4_seek(jule::I64 _2613_handle,jule::I64 _2626_offset,jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _235ac089b_read(jule::I64 _3120_handle,void* _3137_buff,jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _235ac0c42_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _235ac1209_write(jule::I64 _3921_handle,void* _3934_buff,jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _235ac147e_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline jule::I64 _235b5cc8a_get_last_os_error(void) {
	jule::I64 _309_err = _235a3ac89_get_last_errno();
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_220e71701:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_220e71767:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_220e717cd:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_220e71844:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_220e719ed:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_220e71a64:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_220e71aca:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_220e7168a:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_220e71635:;
	}
}



inline jule::Slice<jule::Str> _235b5dac1_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _235b5de9a_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _235b5e96d___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _235b5e96d___getwd(void) {
	jule::U8* _1113_buff = _235a7e23e_getcwd(nullptr,0LLU);
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_235b5cc8a_get_last_os_error());
	}
	jule::Str _159_pwd = _235abcdb5_byte_ptr_to_str(_1113_buff);
	{
		_235a95ae6_free(_1113_buff);
	}
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _2367dab37_stobs(jule::Str& _915_s) {
	{
		jule::Slice<jule::U8> slice;;
		slice.data.alloc = _915_s.begin();;
		slice.data.ref = nullptr;;
		slice._slice = slice.data.alloc;;
		slice._len = slice._cap = _915_s.len();;
		return slice;
	}
}



inline jule::Bool _21c2957c6_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_21c2d1955__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	}
	return _21c2d8bc1_is_excluding_latin(_21c29b975_LETTER,_7618_r);
}



inline jule::Bool _21c2d7e78_is16(jule::Slice<_21c2d5d88_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_2214c6e21:;
			if (it != expr.end()) {
				jule::I64 _2214c7b69_i = it - expr.begin();
				{
					_21c2d5d88_Range16* _19417_range = (&(_1919_ranges[_2214c7b69_i]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_2214c6e21:;
				++it;
				_2214c7b69_i++;
				goto _iter_begin_2214c6e21;
			}
			_iter_end_2214c6e21:;
		}
		return false;
	}
	jule::I64 _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::I64 _21113_m = _20813_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_20913_hi - _20813_lo))) >> 1LLU));
			_21c2d5d88_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LLU);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				}
			}
		}
	_iter_next_2214c6371:;
	}
	_iter_end_2214c6371:;
	return false;
}



inline jule::Bool _21c2d8363_is32(jule::Slice<_21c2d642c_Range32> _2289_ranges,jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_2214ce764:;
			if (it != expr.end()) {
				jule::I64 _2214ce984_i = it - expr.begin();
				{
					_21c2d642c_Range32* _23117_range = (&(_2289_ranges[_2214ce984_i]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_2214ce764:;
				++it;
				_2214ce984_i++;
				goto _iter_begin_2214ce764;
			}
			_iter_end_2214ce764:;
		}
		return false;
	}
	jule::I64 _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::I64 _24813_m = _24513_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_24613_hi - _24513_lo))) >> 1LLU));
			_21c2d642c_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LLU);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				}
			}
		}
	_iter_next_2214cb8c6:;
	}
	_iter_end_2214cb8c6:;
	return false;
}



inline jule::Bool _21c2d8bc1_is_excluding_latin(jule::Ptr<_21c2d697c_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_21c2d5d88_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi))))) {
			return _21c2d7e78_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		}
	}
	jule::Slice<_21c2d642c_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_28710_r32[0LL]._field_lo))))) {
		return _21c2d8363_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	}
	return false;
}



inline std::tuple<jule::I32,jule::I64> _2368b6262_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _2368b4e64_FIRST[static_cast<jule::I64>(_1869_p0)];
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>((_1879_x << 31LLU))) >> 31LLU));
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_18220_p[0LL]))) & static_cast<jule::I32>(static_cast<jule::I32>((~(_19213_mask)))))) | static_cast<jule::I32>(static_cast<jule::I32>(65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));
	_2368b5519_accept_range _1969_accept = _2368b5838_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 31LLU)))) << 6LL))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LLU) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 15LLU)))) << 12LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LLU) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 7LLU)))) << 18LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 12LL))))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2149_b3 & 63LLU)))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _2368b68c2_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = (_2809_end - 1LL);
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = (_2809_end - 4LL);
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_2368b8660_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_22152c7e5;
			}
		}
	_iter_next_22152c7e5:;
	}
	_iter_end_22152c7e5:;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _2368b6262_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::Slice<jule::U8> _2368b784b_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if ((_39835_r <= 127LL)) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_39835_r))}));
	}
	return _2368b7c36_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _2368b7c36_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		
		if ((_4079_i <= 2047LLU)) {
			_case_begin_221546a1d:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		else if ((_4079_i > 1114111LLU) || (55296LL <= _4079_i) && (_4079_i <= 57343LLU)) {
			_case_begin_221546a84:;
			{
				_40545_r=65533LL;
				goto _case_begin_221546aea;
			}
		}
		else if ((_4079_i <= 65535LLU)) {
			_case_begin_221546aea:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 12LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		else {
			_case_begin_2215438d8:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 18LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 12LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		_match_end_22154381c:;
	}
}



inline jule::I64 _2368b8352_rune_count_str(jule::Str _46623_s) {
	jule::I64 _46633_n = jule::I64();
	jule::I64 _46713_i = 0LL;
	for (; _46713_i < static_cast<jule::I64>(static_cast<jule::I64>(_46623_s.len())); (_46633_n)++) {
		{
			jule::U8 _46917_c = _46623_s[_46713_i];
			if ((_46917_c < 128LLU)) {
				(_46713_i)++;
				goto _iter_next_221551c8c;
			}
			jule::U8 _47513_x = _2368b4e64_FIRST[static_cast<jule::I64>(_46917_c)];
			if ((_47513_x == 241LLU)) {
				(_46713_i)++;
				goto _iter_next_221551c8c;
			}
			jule::I64 _48017_size = static_cast<jule::I64>((_47513_x & 7LLU));
			if ((_46713_i + _48017_size) > static_cast<jule::I64>(static_cast<jule::I64>(_46623_s.len()))) {
				(_46713_i)++;
				goto _iter_next_221551c8c;
			}
			_2368b5519_accept_range _48513_accept = _2368b5838_ACCEPT_RANGES[static_cast<jule::I64>((_47513_x >> 4LLU))];
			_46917_c=_46623_s[(_46713_i + 1LL)];
			if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
				_48017_size=1LL;
			} else if ((_48017_size == 2LL)) {
			} else {
				_46917_c=_46623_s[(_46713_i + 2LL)];
				if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
					_48017_size=1LL;
				} else if ((_48017_size == 3LL)) {
				} else {
					_46917_c=_46623_s[(_46713_i + 3LL)];
					if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
						_48017_size=1LL;
					}
				}
			}
			_46713_i+=_48017_size;
		}
	_iter_next_221551c8c:;
	}
	_iter_end_221551c8c:;
	return _46633_n;
}



inline jule::Bool _2368b8660_rune_start(jule::U8 _51019_b) {
	return ((_51019_b & 192LLU) != 128LLU);
}



inline jule::Str _2368293b2_repeat(jule::Str _1415_s,jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	}
	jule::Str _1913_ss = _1415_s;
	for (; (_1427_n > 1LL); (_1427_n)--) {
		{
			_1913_ss+=_1415_s;
		}
	_iter_next_2215920c9:;
	}
	_iter_end_2215920c9:;
	return _1913_ss;
}



inline jule::Bool _2368395d1__has_prefix(jule::Str& _2617_s,jule::Str& _2626_sub,jule::I64 _2640_start) {
	if ((_2626_sub.len() == 0LL) || ((_2617_s.len() - _2640_start) < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())))) {
		return false;
	}
	jule::I64 _3113_i = 0LL;
	for (; _3113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())); std::tie(_3113_i,_2640_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2640_start + 1LL)))) {
		{
			if (_2617_s[_2640_start] != _2626_sub[_3113_i]) {
				return false;
			}
		}
	_iter_next_2215941b9:;
	}
	_iter_end_2215941b9:;
	return true;
}



inline jule::Bool _236849954_has_prefix(jule::Str _4119_s,jule::Str _4127_sub) {
	return _2368395d1__has_prefix(_4119_s,_4127_sub,0LL);
}



inline jule::Bool _236852187__has_suffix(jule::Str& _4517_s,jule::Str& _4526_sub,jule::I64 _4540_start) {
	if ((_4526_sub.len() == 0LL) || ((_4517_s.len() - _4540_start) < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())))) {
		return false;
	}
	_4540_start=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4517_s.len())) - _4540_start);
	jule::I64 _5113_i = 0LL;
	for (; _5113_i < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())); (_5113_i)++) {
		{
			if (_4517_s[((_4540_start - _5113_i) - 1LL)] != _4526_sub[((_4526_sub.len() - _5113_i) - 1LL)]) {
				return false;
			}
		}
	_iter_next_221595e24:;
	}
	_iter_end_221595e24:;
	return true;
}



inline jule::Bool _23688d1b2_has_suffix(jule::Str _6119_s,jule::Str _6127_sub) {
	return _236852187__has_suffix(_6119_s,_6127_sub,0LL);
}



inline jule::I64 _236819e1e_find_at(jule::Str _6916_s,jule::Str _6924_sub,jule::I64 _6938_i) {
	if (((_6938_i < 0LL) || (_6916_s.len() < static_cast<jule::I64>(static_cast<jule::I64>(_6924_sub.len())))) || (_6924_sub.len() == 0LL)) {
		return -1LL;
	}
	for (; _6938_i < static_cast<jule::I64>(static_cast<jule::I64>(_6916_s.len())); (_6938_i)++) {
		{
			if (_2368395d1__has_prefix(_6916_s,_6924_sub,_6938_i)) {
				return _6938_i;
			}
		}
	_iter_next_22159abd7:;
	}
	_iter_end_22159abd7:;
	return -1LL;
}



inline jule::I64 _2368b9353_find_last_at(jule::Str _9221_s,jule::Str _9229_sub,jule::I64 _9239_i) {
	jule::I64 _9313_j = ((_9239_i - static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len()))) + 1LL);
	if ((((_9229_sub.len() == 0LL) || (_9239_i < 0LL)) || (_9239_i >= static_cast<jule::I64>(static_cast<jule::I64>(_9221_s.len())))) || (_9313_j < 0LL)) {
		return -1LL;
	}
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;
			jule::I64 _10017_z = 0LL;
			for (; _10017_z < static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len())); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if (_9221_s[_9917_k] != _9229_sub[_10017_z]) {
						goto _iter_next_22159daa8;
					}
				}
			_iter_next_2215a0e84:;
			}
			_iter_end_2215a0e84:;
			return _9313_j;
		}
	_iter_next_22159daa8:;
	}
	_iter_end_22159daa8:;
	return -1LL;
}



inline jule::I64 _2368b94b8_find_last(jule::Str _11418_s,jule::Str _11426_sub) {
	return static_cast<jule::I64>(_2368b9353_find_last_at(_11418_s,_11426_sub,static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_11418_s.len())) - 1LL))));
}



inline jule::I64 _2368b9bd3__find_rune(jule::Slice<jule::U8>& _17016_s,jule::I32 _17027_r) {
	jule::I64 _17113_i = 0LL;
	while (_17113_i < static_cast<jule::I64>(static_cast<jule::I64>(_17016_s.len()))) {
		{
			jule::I32 _17314_br;
			jule::I64 _17318_n;
			std::tie(_17314_br,_17318_n) = _2368b6262_decode_rune(_17016_s.slice(_17113_i));
			if (_17027_r == _17314_br) {
				return _17113_i;
			}
			_17113_i+=_17318_n;
		}
	_iter_next_2215aa961:;
	}
	_iter_end_2215aa961:;
	return -1LL;
}



inline jule::I64 _2368ba1de_find_last_byte(jule::Str _19723_s,jule::U8 _19731_b) {
	jule::I64 _19813_i = (_19723_s.len() - 1LL);
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if (_19723_s[_19813_i] == _19731_b) {
				return _19813_i;
			}
		}
	_iter_next_2215ad59b:;
	}
	_iter_end_2215ad59b:;
	return -1LL;
}



inline jule::I64 _2368ba794_find_any(jule::Str _23817_s,jule::Str _23825_runes) {
	jule::Slice<jule::U8> _2399_sb = _2367dab37_stobs(_23817_s);
	jule::Slice<jule::U8> _24013_rb = _2367dab37_stobs(_23825_runes);
	jule::I64 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2399_sb.len()))) {
		{
			jule::I32 _24314_r;
			jule::I64 _24317_n;
			std::tie(_24314_r,_24317_n) = _2368b6262_decode_rune(_2399_sb.slice(_24113_i));
			if ((_2368b9bd3__find_rune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			}
			_24113_i+=_24317_n;
		}
	_iter_next_2215b3529:;
	}
	_iter_end_2215b3529:;
	return -1LL;
}



inline jule::Slice<jule::Str> _2368baa6e_split(jule::Str _27214_s,jule::Str _27222_sub,jule::I64 _27236_n) {
	jule::Slice<jule::Str> _27313_parts = jule::Slice<jule::Str>::alloc(0LL,static_cast<jule::I64>((((_27236_n < 0LL)) ? (10LL) : (_27236_n))));
	if ((_27236_n == 0LL)) {
		return _27313_parts;
	}
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	}
	jule::I64 _28013_i = 0LL;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28213_j = _236819e1e_find_at(_27214_s,_27222_sub,_28013_i);
			if ((_28213_j == -1LL)) {
				goto _iter_end_2215b9aa2;
			}
			_27313_parts = jule::alloc_for_append(_27313_parts,1);_27313_parts.__push(_27214_s.slice(_28013_i,_28213_j));
			_28013_i=static_cast<jule::I64>(_28213_j + static_cast<jule::I64>(static_cast<jule::I64>(_27222_sub.len())));
		}
	_iter_next_2215b9aa2:;
	}
	_iter_end_2215b9aa2:;
	if ((_27236_n > 0LL) && (_28013_i < static_cast<jule::I64>(static_cast<jule::I64>(_27214_s.len())))) {
		_27313_parts = jule::alloc_for_append(_27313_parts,1);_27313_parts.__push(_27214_s.slice(_28013_i));
	}
	return _27313_parts;
}



inline jule::Bool _2368babd4_contains(jule::Str _29617_s,jule::Str _29625_sub) {
	return (_236819e1e_find_at(_29617_s,_29625_sub,0LL) != -1LL);
}



inline jule::Bool _2368bb6a7_contains_any(jule::Str _31221_s,jule::Str _31229_runes) {
	return (_2368ba794_find_any(_31221_s,_31229_runes) != -1LL);
}



inline jule::Str _2368bc136_replace(jule::Str _33816_s,jule::Str _33824_sub,jule::Str _33834_new,jule::I64 _33848_n) {
	if ((_33848_n == 0LL) || (_33824_sub == _33834_new)) {
		return _33816_s;
	}
	if ((_33848_n < 0LL)) {
		_33848_n=static_cast<jule::I64>(_33816_s.len());
	}
	jule::Str _34713_ss = jule::Str();
	jule::I64 _34813_i = 0LL;
	for (; (_33848_n > 0LL); (_33848_n)--) {
		{
			jule::I64 _35013_j = _236819e1e_find_at(_33816_s,_33824_sub,_34813_i);
			if ((_35013_j == -1LL)) {
				goto _iter_end_2215c4c11;
			}
			_34713_ss+=_33816_s.slice(_34813_i,_35013_j);
			_34713_ss+=_33834_new;
			_34813_i=static_cast<jule::I64>(_35013_j + static_cast<jule::I64>(static_cast<jule::I64>(_33824_sub.len())));
		}
	_iter_next_2215c4c11:;
	}
	_iter_end_2215c4c11:;
	_34713_ss+=_33816_s.slice(_34813_i);
	return _34713_ss;
}



inline void _2368bd236__trim_left(jule::Slice<jule::U8>& _39020_s,jule::Slice<jule::U8>& _39032_cutset) {
	jule::I64 _39113_i = 0LL;
	while (_39113_i < static_cast<jule::I64>(static_cast<jule::I64>(_39020_s.len()))) {
		{
			jule::I32 _39314_r;
			jule::I64 _39317_n;
			std::tie(_39314_r,_39317_n) = _2368b6262_decode_rune(_39020_s.slice(_39113_i));
			if ((_2368b9bd3__find_rune(_39032_cutset,_39314_r) == -1LL)) {
				_39020_s=_39020_s.slice(_39113_i);
				return;
			}
			_39113_i+=_39317_n;
		}
	_iter_next_2215ca893:;
	}
	_iter_end_2215ca893:;
	_39020_s=nullptr;
}



inline jule::Str _2368bd5bb_trim_left(jule::Str _40518_s,jule::Str _40526_cutset) {
	jule::Slice<jule::U8> _40613_bytes = _2367dab37_stobs(_40518_s);
	jule::Slice<jule::U8> _4079_bcutset = _2367dab37_stobs(_40526_cutset);
	_2368bd236__trim_left(_40613_bytes,_4079_bcutset);
	return static_cast<jule::Str>(_40613_bytes);
}



inline void _2368bd91d__trim_right(jule::Slice<jule::U8>& _41221_s,jule::Slice<jule::U8>& _41233_cutset) {
	jule::I64 _41313_i = _41221_s.len();
	while ((_41313_i > 0LL)) {
		{
			jule::I32 _41514_r;
			jule::I64 _41517_n;
			std::tie(_41514_r,_41517_n) = _2368b68c2_decode_last_rune(_41221_s.slice(0LL,_41313_i));
			if ((_2368b9bd3__find_rune(_41233_cutset,_41514_r) == -1LL)) {
				_41221_s=_41221_s.slice(0LL,_41313_i);
				return;
			}
			_41313_i-=_41517_n;
		}
	_iter_next_2215ce07d:;
	}
	_iter_end_2215ce07d:;
	_41221_s=nullptr;
}



inline jule::Str _2368be1e3_trim(jule::Str _43613_s,jule::Str _43621_cutset) {
	jule::Slice<jule::U8> _43713_bytes = _2367dab37_stobs(_43613_s);
	jule::Slice<jule::U8> _4389_bcutset = _2367dab37_stobs(_43621_cutset);
	_2368bd236__trim_left(_43713_bytes,_4389_bcutset);
	_2368bd91d__trim_right(_43713_bytes,_4389_bcutset);
	return static_cast<jule::Str>(_43713_bytes);
}



inline jule::Str _235b71430_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;
	jule::I64 _1109_vol_len = _235ba5cb1_volume_name_len(_10818_path);
	(_10818_path).mut_slice(_1109_vol_len);
	if (_10818_path.empty()) {
		if (((_1109_vol_len > 1LL) && _235bb5d04_is_path_sep(_1099_original_path[0LL])) && _235bb5d04_is_path_sep(_1099_original_path[1LL])) {
			return _235b7d7c2_from_slash(_1099_original_path);
		}
		return (_1099_original_path + jule::Str(".", 1));
	}
	jule::Bool _1199_rooted = _235bb5d04_is_path_sep(_10818_path[0LL]);
	jule::I64 _1269_n = _10818_path.len();
	_2368be776_LazyBuff _12713_out = _2368be776_LazyBuff(_10818_path,jule::Slice<jule::U8>(),jule::I64(),_1099_original_path,_1109_vol_len);
	jule::I64 _13214_r = 0LL;
	jule::I64 _13221_dotdot = 0LL;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_235b66799_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13214_r < _1269_n) {
		{
			{
				
				if (_235bb5d04_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_2215ed685:;
					{
						(_13214_r)++;
					}
				}
				else if ((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _235bb5d04_is_path_sep(_10818_path[(_13214_r + 1LL)]))) {
					_case_begin_2215ee455:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _235bb5d04_is_path_sep(_10818_path[(_13214_r + 2LL)]))) {
					_case_begin_2215ee4bb:;
					{
						_13214_r+=2LL;
						{
							
							if (_12713_out._field_w > _13221_dotdot) {
								_case_begin_221602c3e:;
								{
									(_12713_out._field_w)--;
									while ((_12713_out._field_w > _13221_dotdot) && (!(_235bb5d04_is_path_sep(static_cast<jule::U8>(_235b4dd58_index(&_12713_out, _12713_out._field_w)))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_2216036e0:;
									}
									_iter_end_2216036e0:;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_221602d0a:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_235b66799_append(&_12713_out, 47LLU);
									}
									_235b66799_append(&_12713_out, '.');
									_235b66799_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_221602ba6:;
						}
					}
				}
				else {
					_case_begin_2215e8c13:;
					{
						if ((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL))) {
							_235b66799_append(&_12713_out, 47LLU);
						}
						
						for (; (_13214_r < _1269_n) && (!(_235bb5d04_is_path_sep(_10818_path[_13214_r]))); (_13214_r)++) {
							{
								_235b66799_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_2215ea6b5:;
						}
						_iter_end_2215ea6b5:;
					}
				}
				_match_end_2215e874b:;
			}
		}
	_iter_next_2215e8a7b:;
	}
	_iter_end_2215e8a7b:;
	if ((_12713_out._field_w == 0LL)) {
		_235b66799_append(&_12713_out, '.');
	}
	return _235b7d7c2_from_slash(_235b6c0c9_string(&_12713_out));
}



inline jule::Str _235b7d7c2_from_slash(jule::Str _21119_path) {
	if (47LL == '/') {
		return _21119_path;
	}
	return _2368bc136_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _235b71c27_join(jule::Slice<jule::Str> _22513_elem) {
	return _2368beb0b___join(_22513_elem);
}



inline jule::Str _235b88975_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);
	for (; (_23113_i >= 0LL) && (!(_235bb5d04_is_path_sep(_23012_path[_23113_i]))); (_23113_i)--) {
		{
			if (_23012_path[_23113_i] == '.') {
				return _23012_path.slice(_23113_i);
			}
		}
	_iter_next_22160898c:;
	}
	_iter_end_22160898c:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _235b9c428_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;
	jule::Bool _24620_ok;
	std::tie(_24610_abs_path,_24620_ok) = _2367d2d82___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _235ba4c8d_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	}
	while ((_25417_path.len() > 0LL) && _235bb5d04_is_path_sep(_25417_path[(_25417_path.len() - 1LL)])) {
		{
			(_25417_path).mut_slice(0LL,_25417_path.len() - 1LL);
		}
	_iter_next_22160be68:;
	}
	_iter_end_22160be68:;
	(_25417_path).mut_slice(_235baba0e_volume_name(_25417_path).len());
	jule::I64 _26513_i = (_25417_path.len() - 1LL);
	while ((_26513_i >= 0LL) && (!(_235bb5d04_is_path_sep(_25417_path[_26513_i])))) {
		{
			(_26513_i)--;
		}
	_iter_next_22160c919:;
	}
	_iter_end_22160c919:;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice(_26513_i + 1LL);
	}
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25417_path;
}



inline jule::Str _235ba6432_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _235baba0e_volume_name(_28512_path);
	jule::I64 _28713_i = (_28512_path.len() - 1LL);
	while ((_28713_i >= static_cast<jule::I64>(static_cast<jule::I64>(_2869_vol.len()))) && (!(_235bb5d04_is_path_sep(_28512_path[_28713_i])))) {
		{
			(_28713_i)--;
		}
	_iter_next_221610411:;
	}
	_iter_end_221610411:;
	jule::Str _2919_dir = _235b71430_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));
	if ((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL)) {
		return _2869_vol;
	}
	return _2869_vol + _2919_dir;
}



inline jule::Str _235baba0e_volume_name(jule::Str _30320_path) {
	return _235b7d7c2_from_slash(_30320_path.slice(0LL,_235ba5cb1_volume_name_len(_30320_path)));
}



inline jule::Bool _235bb5d04_is_path_sep(jule::U8 _4820_c) {
	return 47LL == _4820_c;
}



inline jule::Bool _235ba363d_is_abs(jule::Str _5315_path) {
	return _236849954_has_prefix(_5315_path,jule::Str("/", 1));
}



inline jule::I64 _235ba5cb1_volume_name_len(jule::Str _5920_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _2367d2d82___abs(jule::Str _6310_path) {
	jule::Bool _6328_ok = jule::Bool();
	if (_235ba363d_is_abs(_6310_path)) {
		_6328_ok = true;
		return std::make_tuple(_235b71430_clean(_6310_path),_6328_ok);
	}
	jule::Str _679_wd = ({
		auto except = _235b5de9a_working_dir();
		(except.ok()) ? (except.result) : ({{
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
		} jule::Str();});
	});
	_6328_ok = true;
	return std::make_tuple(_2368beb0b___join(jule::Slice<jule::Str>({_679_wd,_6310_path})),_6328_ok);
}



inline jule::Str _2368be996_str_join(jule::Slice<jule::Str> _7313_elems,jule::Str _7327_sep) {
	{
		auto _match_expr{ _7313_elems.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_221617946:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2216179ac:;
			{
				return _7313_elems[0LL];
			}
		}
		_match_end_221617715:;
	}
	jule::Str _7913_s = _7313_elems[0LL];
	{
		auto expr = _7313_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_221617d75:;
		if (it != expr.end()) {
			jule::Str &_221618b34_elem = *it;
			{
				_7913_s+=_7327_sep + _221618b34_elem;
			}
			_iter_next_221617d75:;
			++it;
			goto _iter_begin_221617d75;
		}
		_iter_end_221617d75:;
	}
	return _7913_s;
}



inline jule::Str _2368beb0b___join(jule::Slice<jule::Str> _8611_elem) {
	{
		auto &expr = _8611_elem;
		auto it = expr.begin();
		_iter_begin_221618e53:;
		if (it != expr.end()) {
			jule::I64 _22161965c_i = it - expr.begin();
			jule::Str &_2216197c2_e = *it;
			{
				if ((!(_2216197c2_e.empty()))) {
					return _235b71430_clean(_2368be996_str_join(_8611_elem.slice(_22161965c_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_221618e53:;
			++it;
			_22161965c_i++;
			goto _iter_begin_221618e53;
		}
		_iter_end_221618e53:;
	}
	return jule::Str();
}



inline jule::I64 _235a1c573_get_last_fs_error(void) {
	jule::I64 _729_err = _235a3ac89_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_221645336:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2216453e1:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_221645457:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_221644d2a:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_221644d91:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_221644e07:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_221644e6d:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_221645677:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_2216456dd:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_221645754:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_2216457ba:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_221645831:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_2216458a8:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_221645930:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_2216459a7:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_221645a2e:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_221645aa6:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_221645b2d:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_221645ba5:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_221645c2c:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_221645ca4:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_221645d2b:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_221645da3:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_221645e2a:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_221645ea2:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_221646029:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_2216460a1:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_221646128:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_221644cb4:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_221644c5e:;
	}
}



inline jule::I64 _21c383e03_get_last_process_error(void) {
	jule::I64 _429_err = _235a3ac89_get_last_errno();
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_22165d23e:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_22165d2a5:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_22165cb89:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_22165cc00:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_22165cc66:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_22165cccc:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_22165ce75:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_22165cedb:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_22165d052:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_22165d0b8:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_22165d12e:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_22165a0e8:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_22165ca79:;
	}
}



inline jule::Slice<char*> _21c38727a_str_slice_to_cstr_slice(jule::Slice<jule::Str> _2128_s) {
	jule::Slice<char*> _2213_cs = jule::Slice<char*>::alloc(0LL,static_cast<jule::I64>((_2128_s.len() + 1LL)));
	{
		auto &expr = _2128_s;
		auto it = expr.begin();
		_iter_begin_22166197e:;
		if (it != expr.end()) {
			jule::I64 _221661ece_i = it - expr.begin();
			{
				_2213_cs = jule::alloc_for_append(_2213_cs,1);_2213_cs.__push(((char*)((&(_2128_s[_221661ece_i][0LL])))));
			}
			_iter_next_22166197e:;
			++it;
			_221661ece_i++;
			goto _iter_begin_22166197e;
		}
		_iter_end_22166197e:;
	}
	_2213_cs = jule::alloc_for_append(_2213_cs,1);_2213_cs.__push(nullptr);
	return _2213_cs;
}



inline jule::I64 _21c3876dc_execvp(jule::Str _3011_file,jule::Slice<jule::Str> _3022_argv) {
	jule::Slice<char*> _319_cargv = _21c38727a_str_slice_to_cstr_slice(_3022_argv);
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_3011_file[0LL])))), (char*const*)(&(_319_cargv[0LL]))));
	}
}



inline jule::I64 _21c387ba4_execve(jule::Str _3711_file,jule::Slice<jule::Str> _3722_argv,jule::Slice<jule::Str> _3735_env) {
	jule::Slice<char*> _389_cargv = _21c38727a_str_slice_to_cstr_slice(_3722_argv);
	jule::Slice<char*> _399_cenv = _21c38727a_str_slice_to_cstr_slice(_3735_env);
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3711_file[0LL])))), (char*const*)(&(_389_cargv[0LL])), (char*const*)((&(_399_cenv[0LL])))));
	}
}



inline void _21c388963_exit(jule::I64 _1213_code) {
	_235ac147e_exit(_1213_code);
}



inline jule::Str _21c388b94_executable(void) {
	return jule::executable();
}



inline jule::Bool _236920794_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _236920909_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _2359d9a6d_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_221693b04:;
		if (it != expr.end()) {
			jule::Str &_221695276_valid_ext = *it;
			{
				if (_3128_ext == _221695276_valid_ext) {
					return true;
				}
			}
			_iter_next_221693b04:;
			++it;
			goto _iter_begin_221693b04;
		}
		_iter_end_221693b04:;
	}
	return false;
}



inline jule::Bool _236920ae6_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	}
	{
		auto &expr = _236920552_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_221696145:;
		if (it != expr.end()) {
			jule::Str &_221695584_e = *it;
			{
				if (_4225_ext == _221695584_e) {
					return true;
				}
			}
			_iter_next_221696145:;
			++it;
			goto _iter_begin_221696145;
		}
		_iter_end_221696145:;
	}
	{
		auto &expr = _236920673_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_221696dc1:;
		if (it != expr.end()) {
			jule::Str &_221696882_e = *it;
			{
				if (_4225_ext == _221696882_e) {
					return true;
				}
			}
			_iter_next_221696dc1:;
			++it;
			goto _iter_begin_221696dc1;
		}
		_iter_end_221696dc1:;
	}
	return false;
}



inline jule::Str _21c34911b_logf(jule::Str _29213_fmt,jule::Slice<jule::Any> _29226_args) {
	return _21c349baa_apply_fmt(_29213_fmt,_29226_args);
}



inline jule::Str _21c34946d_arg_to_str(jule::Any _29615_arg) {
	{
		auto &_match_expr{ _29615_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_221697ad6:;
			{
				return _29615_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_221698620:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_221698686:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_22169387e:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_221693829:;
	}
}



inline jule::I64 _21c34977b_find_next_fmt(jule::Str _30518_fmt) {
	{
		auto &expr = _30518_fmt;
		auto it = expr.begin();
		_iter_begin_221699203:;
		if (it != expr.end()) {
			jule::I64 _221698d07_i = it - expr.begin();
			jule::U8 &_2216998da_b = *it;
			{
				if (_2216998da_b == '@') {
					return _221698d07_i;
				}
			}
			_iter_next_221699203:;
			++it;
			_221698d07_i++;
			goto _iter_begin_221699203;
		}
		_iter_end_221699203:;
	}
	return -1LL;
}



inline jule::Str _21c349baa_apply_fmt(jule::Str _31418_fmt,jule::Slice<jule::Any> _31428_args) {
	jule::Str _31513_s = jule::Str();
	{
		auto &expr = _31428_args;
		auto it = expr.begin();
		_iter_begin_22169aa51:;
		if (it != expr.end()) {
			jule::Any &_22169aaea_arg = *it;
			{
				jule::I64 _31813_i = _21c34977b_find_next_fmt(_31418_fmt);
				if ((_31813_i == -1LL)) {
					goto _iter_end_22169aa51;
				}
				_31513_s+=_31418_fmt.slice(0LL,_31813_i);
				_31513_s+=_21c34946d_arg_to_str(_22169aaea_arg);
				(_31418_fmt).mut_slice(_31813_i + 1LL);
			}
			_iter_next_22169aa51:;
			++it;
			goto _iter_begin_22169aa51;
		}
		_iter_end_22169aa51:;
	}
	_31513_s+=_31418_fmt;
	return _31513_s;
}



inline jule::Bool _21c34adba_is_top_directive(jule::Str _2825_directive) {
	return (_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5));
}



inline jule::Bool _21c34cb36_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _21c34ce88_is_darwin(jule::Str _5318_os) {
	return (_5318_os == jule::Str("darwin", 6));
}



inline jule::Bool _21c34d296_is_linux(jule::Str _5517_os) {
	return (_5517_os == jule::Str("linux", 5));
}



inline jule::Bool _21c34d5e8_is_i386(jule::Str _5716_arch) {
	return (_5716_arch == jule::Str("i386", 4));
}



inline jule::Bool _21c34d906_is_amd64(jule::Str _5917_arch) {
	return (_5917_arch == jule::Str("amd64", 5));
}



inline jule::Bool _21c34dc14_is_arm64(jule::Str _6117_arch) {
	return (_6117_arch == jule::Str("arm64", 5));
}



inline jule::Bool _21c34e022_is_unix(jule::Str _6316_os) {
	return _21c34ce88_is_darwin(_6316_os) || _21c34d296_is_linux(_6316_os);
}



inline jule::Bool _21c34e3b8_is_32bit(jule::Str _6517_arch) {
	return _21c34d5e8_is_i386(_6517_arch);
}



inline jule::Bool _21c34e6c6_is_64bit(jule::Str _6717_arch) {
	return _21c34d906_is_amd64(_6717_arch) || _21c34dc14_is_arm64(_6717_arch);
}



inline void _21c35d33e_init(void) {
	jule::Str _2513_path = _21c388b94_executable();
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	}
	jule::Str _309_pwd = ({
		auto except = _235b5de9a_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;
			return;
		} jule::Str();});
	});
	jule::Str _359_path_exec = _235ba6432_dir(_2513_path);
	_2513_path=_235b71c27_join(jule::Slice<jule::Str>({_359_path_exec,jule::Str("..", 2)}));
	{
		_21c35a539_PATH_WD=_309_pwd;
		_21c36c86a_PATH_EXEC=_359_path_exec;
		_21c35922a_PATH_STDLIB=_235b71c27_join(jule::Slice<jule::Str>({_2513_path,jule::Str("std", 3)}));
		_21c35ba79_PATH_API=_235b71c27_join(jule::Slice<jule::Str>({_21c36c86a_PATH_EXEC,jule::Str("..", 2)}));
		_21c35ba79_PATH_API=_235b71c27_join(jule::Slice<jule::Str>({_21c35ba79_PATH_API,jule::Str("api", 3)}));
		_21c35ba79_PATH_API=_235b71c27_join(jule::Slice<jule::Str>({_21c35ba79_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _21c628708_is_unary_op(jule::Str _31820_kind) {
	{
		auto &expr = _21c52a2db_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_221750de2:;
		if (it != expr.end()) {
			jule::Str &_221750e36_op = *it;
			{
				if (_31820_kind == _221750e36_op) {
					return true;
				}
			}
			_iter_next_221750de2:;
			++it;
			goto _iter_begin_221750de2;
		}
		_iter_end_221750de2:;
	}
	return false;
}



inline jule::Bool _21c628a5a_is_bin_op(jule::Str _32918_kind) {
	{
		auto &expr = _21c52a40c_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_22175192b:;
		if (it != expr.end()) {
			jule::Str &_221751123_op = *it;
			{
				if (_32918_kind == _221751123_op) {
					return true;
				}
			}
			_iter_next_22175192b:;
			++it;
			goto _iter_begin_22175192b;
		}
		_iter_end_22175192b:;
	}
	return false;
}



inline jule::Bool _21c6291ba_is_str(jule::Str _35115_k) {
	return (!(_35115_k.empty())) && ((_35115_k[0LL] == '\"') || _21c6294c8_is_raw_str(_35115_k));
}



inline jule::Bool _21c6294c8_is_raw_str(jule::Str _35319_k) {
	return (!(_35319_k.empty())) && (_35319_k[0LL] == '`');
}



inline jule::Bool _21c6297d6_is_rune(jule::Str _35616_k) {
	return (!(_35616_k.empty())) && (_35616_k[0LL] == '\'');
}



inline jule::Bool _21c629e8a_is_bool(jule::Str _36016_k) {
	return (_36016_k == jule::Str("true", 4)) || (_36016_k == jule::Str("false", 5));
}



inline jule::Bool _21c62a298_is_float(jule::Str _36317_k) {
	if (_236849954_has_prefix(_36317_k,jule::Str("0x", 2))) {
		return _2368bb6a7_contains_any(_36317_k,jule::Str(".pP", 3));
	}
	return _2368bb6a7_contains_any(_36317_k,jule::Str(".eE", 3));
}



inline jule::Bool _21c62a5a6_is_num(jule::Str _37115_k) {
	if (_37115_k.empty()) {
		return false;
	}
	jule::U8 _3769_b = _37115_k[0LL];
	return (_3769_b == '.') || (('0' <= _3769_b) && (_3769_b <= '9'));
}



inline jule::Bool _21c62abc2_is_ignore_ident(jule::Str _38624_ident) {
	return (_38624_ident == jule::Str("_", 1));
}



inline jule::Bool _21c62aed0_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _21c62b5eb_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _21c52aeac_SPACES;
		auto it = expr.begin();
		_iter_begin_22175ba35:;
		if (it != expr.end()) {
			jule::I32 &_22175b22c_cr = *it;
			{
				if (_40217_r == _22175b22c_cr) {
					return true;
				}
			}
			_iter_next_22175ba35:;
			++it;
			goto _iter_begin_22175ba35;
		}
		_iter_end_22175ba35:;
	}
	return false;
}



inline jule::Bool _21c62ba2a_is_letter(jule::I32 _41318_r) {
	return _21c2957c6_is_letter(_41318_r);
}



inline jule::Bool _21c62c146_is_decimal(jule::U8 _43519_b) {
	return ('0' <= _43519_b) && (_43519_b <= '9');
}



inline jule::Bool _21c62c454_is_binary(jule::U8 _43718_b) {
	return (_43718_b == '0') || (_43718_b == '1');
}



inline jule::Bool _21c62c762_is_octal(jule::U8 _43917_b) {
	return ('0' <= _43917_b) && (_43917_b <= '7');
}



inline jule::Bool _21c62ca70_is_hex(jule::U8 _44215_b) {
	{
		
		if (('0' <= _44215_b) && (_44215_b <= '9')) {
			_case_begin_22176192a:;
			{
				return true;
			}
		}
		else if (('a' <= _44215_b) && (_44215_b <= 'f')) {
			_case_begin_221761a18:;
			{
				return true;
			}
		}
		else if (('A' <= _44215_b) && (_44215_b <= 'F')) {
			_case_begin_221761a7e:;
			{
				return true;
			}
		}
		else {
			_case_begin_2217612cb:;
			{
				return false;
			}
		}
		_match_end_22175e692:;
	}
}



inline jule::Bool _21c62cd7d_is_assign(jule::U64 _45418_id) {
	return ((((((_45418_id == static_cast<jule::U64>(2LLU)) || (_45418_id == static_cast<jule::U64>(31LLU))) || (_45418_id == static_cast<jule::U64>(34LLU))) || (_45418_id == static_cast<jule::U64>(20LLU))) || (_45418_id == static_cast<jule::U64>(28LLU))) || (_45418_id == static_cast<jule::U64>(3LLU))) || (_45418_id == static_cast<jule::U64>(7LLU));
}



inline jule::Bool _21c62d18b_is_postfix_op(jule::Str _46722_kind) {
	{
		auto &expr = _21c52a64e_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_2217633aa:;
		if (it != expr.end()) {
			jule::Str &_2217655aa_op = *it;
			{
				if (_46722_kind == _2217655aa_op) {
					return true;
				}
			}
			_iter_next_2217633aa:;
			++it;
			goto _iter_begin_2217633aa;
		}
		_iter_end_2217633aa:;
	}
	return false;
}



inline jule::Bool _21c62d499_is_assign_op(jule::Str _47821_kind) {
	if (_21c62d18b_is_postfix_op(_47821_kind)) {
		return true;
	}
	{
		auto &expr = _21c620711_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_2217657ca:;
		if (it != expr.end()) {
			jule::Str &_22176581e_op = *it;
			{
				if (_47821_kind == _22176581e_op) {
					return true;
				}
			}
			_iter_next_2217657ca:;
			++it;
			goto _iter_begin_2217657ca;
		}
		_iter_end_2217657ca:;
	}
	return false;
}



inline jule::Ptr<_21c62e038_File> _21c6308ca_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_21c62e038_File>(_21c62e038_File(_6321_path,jule::Slice<jule::U8>(),jule::Slice<_21c627dde_Token>()));
}



inline _21c348b32_Log _21c632404_make_err(jule::I64 _11113_row,jule::I64 _11123_col,jule::Ptr<_21c62e038_File>& _11134_f,jule::Str _11144_fmt,jule::Slice<jule::Any> _11157_args) {
	return _21c348b32_Log(static_cast<jule::I64>(1LL),_11113_row,_11123_col,_11134_f.get()._field_path,_21c34911b_logf(_11144_fmt,_11157_args),jule::Str(),jule::Str());
}



inline jule::Bool _21c632833_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes,jule::Str _12137_prefix) {
	if (_12122_bytes.len() < static_cast<jule::I64>(static_cast<jule::I64>(_12137_prefix.len()))) {
		return false;
	}
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_22176934a:;
		if (it != expr.end()) {
			jule::I64 _2217697ac_i = it - expr.begin();
			{
				if (_12122_bytes[_2217697ac_i] != _12137_prefix[_2217697ac_i]) {
					return false;
				}
			}
			_iter_next_22176934a:;
			++it;
			_2217697ac_i++;
			goto _iter_begin_22176934a;
		}
		_iter_end_22176934a:;
	}
	return true;
}



inline jule::Str _21c632c1d_float_fmt_e(jule::Slice<jule::U8>& _13317_txt,jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
		return _13344_lit;
	}
	jule::U8 _13913_b = _13317_txt[_13334_i];
	if (_13913_b == '_') {
		return _13344_lit;
	}
	if ((_13913_b == '+') || (_13913_b == '-')) {
		(_13334_i)++;
		if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
			return _13344_lit;
		}
		if (_13317_txt[_13334_i] == '_') {
			return _13344_lit;
		}
	}
	jule::I64 _1539_first = _13334_i;
	for (; _13334_i < static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len())); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if ((_13913_b != '_') && (!(_21c62c146_is_decimal(_13913_b)))) {
				goto _iter_end_22176c87b;
			}
		}
	_iter_next_22176c87b:;
	}
	_iter_end_22176c87b:;
	if (_13334_i == _1539_first) {
		_13344_lit = jule::Str();
		return _13344_lit;
	}
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _21c63314c_float_fmt_p(jule::Slice<jule::U8>& _16717_txt,jule::I64 _16730_i) {
	return _21c632c1d_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _21c633537_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt,jule::I64 _17138_i) {
	if (_17121_txt[_17138_i] != '.') {
		return jule::Str();
	}
	(_17138_i)++;
	_julec_label_loop:;
	for (; _17138_i < static_cast<jule::I64>(static_cast<jule::I64>(_17121_txt.len())); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];
			{
				
				if (_17913_b == '_' || _21c62c146_is_decimal(_17913_b)) {
					_case_begin_22177197e:;
					{
						goto _iter_next_221770ad2;
					}
				}
				else if (_21c635171_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_2217719e5:;
					{
						return _21c63314c_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_2217718d5:;
					{
						goto _iter_end_221770ad2;
					}
				}
				_match_end_221771880:;
			}
		}
	_iter_next_221770ad2:;
	}
	_iter_end_221770ad2:;
	return jule::Str();
}



inline jule::Str _21c633922_float_fmt_dotfp(jule::Slice<jule::U8>& _19421_txt,jule::I64 _19438_i) {
	_19438_i+=2LL;
	return _21c632c1d_float_fmt_e(_19421_txt,_19438_i);
}



inline jule::Str _21c633d0c_float_fmt_dotp(jule::Slice<jule::U8>& _19920_txt,jule::I64 _19937_i) {
	(_19937_i)++;
	return _21c632c1d_float_fmt_e(_19920_txt,_19937_i);
}



inline jule::Str _21c634280_float_num(jule::Slice<jule::U8>& _20415_txt,jule::I64 _20432_i) {
	jule::Str _20442_lit = jule::Str();
	(_20432_i)++;
	if (_20432_i >= static_cast<jule::I64>(static_cast<jule::I64>(_20415_txt.len()))) {
		_20442_lit = static_cast<jule::Str>(_20415_txt);
		return _20442_lit;
	}
	if (_20415_txt[_20432_i] == '_') {
		(_20432_i)--;
		_20442_lit = static_cast<jule::Str>(_20415_txt.slice(0LL,_20432_i));
		return _20442_lit;
	}
	for (; _20432_i < static_cast<jule::I64>(static_cast<jule::I64>(_20415_txt.len())); (_20432_i)++) {
		{
			jule::U8 _21413_b = _20415_txt[_20432_i];
			if ((_20432_i > 1LL) && ((_21413_b == 'e') || (_21413_b == 'E'))) {
				_20442_lit = _21c632c1d_float_fmt_e(_20415_txt,_20432_i);
				return _20442_lit;
			}
			if ((_21413_b != '_') && (!(_21c62c146_is_decimal(_21413_b)))) {
				goto _iter_end_221775d5c;
			}
		}
	_iter_next_221775d5c:;
	}
	_iter_end_221775d5c:;
	if ((_20432_i == 1LL)) {
		return _20442_lit;
	}
	_20442_lit = static_cast<jule::Str>(_20415_txt.slice(0LL,_20432_i));
	return _20442_lit;
}



inline jule::Str _21c63458d_common_num(jule::Slice<jule::U8>& _22916_txt) {
	jule::Str _22931_lit = jule::Str();
	jule::I64 _23013_i = 0LL;
	_julec_label_loop:;
	for (; _23013_i < static_cast<jule::I64>(static_cast<jule::I64>(_22916_txt.len())); (_23013_i)++) {
		{
			jule::U8 _23313_b = _22916_txt[_23013_i];
			{
				
				if (_23313_b == '.') {
					_case_begin_221779b96:;
					{
						_22931_lit = _21c634280_float_num(_22916_txt,_23013_i);
						return _22931_lit;
					}
				}
				else if (_23313_b == '_') {
					_case_begin_221779c1d:;
					{
						goto _iter_next_2217790c4;
					}
				}
				else if (_21c634c86_is_float_fmt_e(_23313_b,_23013_i)) {
					_case_begin_221779c95:;
					{
						_22931_lit = _21c632c1d_float_fmt_e(_22916_txt,_23013_i);
						return _22931_lit;
					}
				}
				else if ((!(_21c62c146_is_decimal(_23313_b)))) {
					_case_begin_221779d1c:;
					{
						goto _iter_end_2217790c4;
					}
				}
				_match_end_221779aa8:;
			}
		}
	_iter_next_2217790c4:;
	}
	_iter_end_2217790c4:;
	if ((_23013_i == 0LL)) {
		return _22931_lit;
	}
	_22931_lit = static_cast<jule::Str>(_22916_txt.slice(0LL,_23013_i));
	return _22931_lit;
}



inline jule::Str _21c63489b_binary_num(jule::Slice<jule::U8>& _25216_txt) {
	jule::Str _25231_lit = jule::Str();
	if ((!(_21c632833_bytes_has_prefix(_25216_txt,jule::Str("0b", 2))))) {
		_25231_lit = jule::Str();
		return _25231_lit;
	}
	if ((_25216_txt.len() < 2LL)) {
		return _25231_lit;
	}
	
	jule::I64 _26113_i = 2LL;
	for (; _26113_i < static_cast<jule::I64>(static_cast<jule::I64>(_25216_txt.len())); (_26113_i)++) {
		{
			if ((_25216_txt[_26113_i] != '_') && (!(_21c62c454_is_binary(_25216_txt[_26113_i])))) {
				goto _iter_end_22177db89;
			}
		}
	_iter_next_22177db89:;
	}
	_iter_end_22177db89:;
	if ((_26113_i == 2LL)) {
		return _25231_lit;
	}
	_25231_lit = static_cast<jule::Str>(_25216_txt.slice(0LL,_26113_i));
	return _25231_lit;
}



inline jule::Bool _21c634c86_is_float_fmt_e(jule::U8 _27419_b,jule::I64 _27428_i) {
	return (_27428_i > 0LL) && ((_27419_b == 'e') || (_27419_b == 'E'));
}



inline jule::Bool _21c635171_is_float_fmt_p(jule::U8 _27819_b,jule::I64 _27828_i) {
	return (_27828_i > 0LL) && ((_27819_b == 'p') || (_27819_b == 'P'));
}



inline jule::Bool _21c63555b_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28224_txt,jule::I64 _28241_i) {
	if (_28224_txt[_28241_i] != '.') {
		return false;
	}
	(_28241_i)++;
	_julec_label_loop:;
	for (; _28241_i < static_cast<jule::I64>(static_cast<jule::I64>(_28224_txt.len())); (_28241_i)++) {
		{
			jule::U8 _28913_b = _28224_txt[_28241_i];
			{
				
				if (_28913_b == '_' || _21c62c146_is_decimal(_28913_b)) {
					_case_begin_221783d37:;
					{
						goto _iter_next_2217830ab;
					}
				}
				else if (_21c635171_is_float_fmt_p(_28913_b,_28241_i)) {
					_case_begin_221783d9d:;
					{
						return true;
					}
				}
				else {
					_case_begin_221783c8d:;
					{
						goto _iter_end_2217830ab;
					}
				}
				_match_end_221783c38:;
			}
		}
	_iter_next_2217830ab:;
	}
	_iter_end_2217830ab:;
	return false;
}



inline jule::Bool _21c635946_is_float_fmt_dotp(jule::Slice<jule::U8>& _30323_txt,jule::I64 _30336_i) {
	{
		
		if ((_30323_txt.len() < 3LL)) {
			_case_begin_221785eb0:;
			{
				goto _case_begin_22178609d;
			}
		}
		else if (_30323_txt[_30336_i] != '.') {
			_case_begin_22178609d:;
			{
				goto _case_begin_221786114;
			}
		}
		else if ((_30323_txt[(_30336_i + 1LL)] != 'p') && (_30323_txt[(_30336_i + 1LL)] != 'P')) {
			_case_begin_221786114:;
			{
				return false;
			}
		}
		else {
			_case_begin_221785861:;
			{
				return true;
			}
		}
		_match_end_2217857b7:;
	}
}



inline jule::Bool _21c635d31_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31624_txt,jule::I64 _31637_i) {
	{
		
		if ((_31624_txt.len() < 4LL)) {
			_case_begin_221788534:;
			{
				goto _case_begin_221788611;
			}
		}
		else if (_31624_txt[_31637_i] != '.') {
			_case_begin_221788611:;
			{
				goto _case_begin_221788677;
			}
		}
		else if ((_31624_txt[(_31637_i + 1LL)] != 'f') && (_31624_txt[(_31637_i + 1LL)] != 'F')) {
			_case_begin_221788677:;
			{
				goto _case_begin_221788336;
			}
		}
		else if ((_31624_txt[(_31637_i + 2LL)] != 'p') && (_31624_txt[(_31637_i + 1LL)] != 'P')) {
			_case_begin_221788336:;
			{
				return false;
			}
		}
		else {
			_case_begin_221787b60:;
			{
				return true;
			}
		}
		_match_end_221787ab6:;
	}
}



inline jule::Str _21c636260_octal_num(jule::Slice<jule::U8>& _33115_txt) {
	jule::Str _33130_lit = jule::Str();
	if (_33115_txt[0LL] != '0') {
		_33130_lit = jule::Str();
		return _33130_lit;
	}
	if ((_33115_txt.len() < 2LL)) {
		return _33130_lit;
	}
	jule::I64 _33913_octal_start = 1LL;
	jule::Bool _34113_o = false;
	if (_33115_txt[1LL] == 'o') {
		if ((_33115_txt.len() < 3LL)) {
			return _33130_lit;
		}
		(_33913_octal_start)++;
		_34113_o=true;
	}
	jule::I64 _35013_i = _33913_octal_start;
	for (; _35013_i < static_cast<jule::I64>(static_cast<jule::I64>(_33115_txt.len())); (_35013_i)++) {
		{
			jule::U8 _35213_b = _33115_txt[_35013_i];
			if (_35213_b == '.') {
				if (_34113_o) {
					_33130_lit = jule::Str();
					return _33130_lit;
				}
				_33130_lit = _21c634280_float_num(_33115_txt,_35013_i);
				return _33130_lit;
			}
			if (_21c634c86_is_float_fmt_e(_35213_b,_35013_i)) {
				_33130_lit = _21c632c1d_float_fmt_e(_33115_txt,_35013_i);
				return _33130_lit;
			}
			if ((_35213_b != '_') && (!(_21c62c762_is_octal(_35213_b)))) {
				goto _iter_end_22178cd1e;
			}
		}
	_iter_next_22178cd1e:;
	}
	_iter_end_22178cd1e:;
	if (_35013_i == _33913_octal_start) {
		return _33130_lit;
	}
	_33130_lit = static_cast<jule::Str>(_33115_txt.slice(0LL,_35013_i));
	return _33130_lit;
}



inline jule::Str _21c63656d_hex_num(jule::Slice<jule::U8>& _37313_txt) {
	jule::Str _37328_lit = jule::Str();
	if ((_37313_txt.len() < 3LL)) {
		return _37328_lit;
	}
	if ((_37313_txt[0LL] != '0') || ((_37313_txt[1LL] != 'x') && (_37313_txt[1LL] != 'X'))) {
		return _37328_lit;
	}
	
	jule::I64 _38213_i = 2LL;
	_julec_label_loop:;
	for (; _38213_i < static_cast<jule::I64>(static_cast<jule::I64>(_37313_txt.len())); (_38213_i)++) {
		{
			jule::U8 _38513_b = _37313_txt[_38213_i];
			{
				
				if (_21c635946_is_float_fmt_dotp(_37313_txt,_38213_i)) {
					_case_begin_221794793:;
					{
						_37328_lit = _21c633d0c_float_fmt_dotp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_21c635d31_is_float_fmt_dotfp(_37313_txt,_38213_i)) {
					_case_begin_22179481a:;
					{
						_37328_lit = _21c633922_float_fmt_dotfp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_21c635171_is_float_fmt_p(_38513_b,_38213_i)) {
					_case_begin_221794892:;
					{
						_37328_lit = _21c63314c_float_fmt_p(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_21c63555b_is_float_fmt_dotnp(_37313_txt,_38213_i)) {
					_case_begin_221794919:;
					{
						_37328_lit = _21c633537_float_fmt_dotnp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if ((_38513_b != '_') && (!(_21c62ca70_is_hex(_38513_b)))) {
					_case_begin_221794991:;
					{
						goto _iter_end_221793c04;
					}
				}
				_match_end_221794694:;
			}
		}
	_iter_next_221793c04:;
	}
	_iter_end_221793c04:;
	if ((_38213_i == 2LL)) {
		return _37328_lit;
	}
	_37328_lit = static_cast<jule::Str>(_37313_txt.slice(0LL,_38213_i));
	return _37328_lit;
}



inline jule::Str _21c636958_hex_escape(jule::Slice<jule::U8>& _40616_txt,jule::I64 _40629_n) {
	jule::Str _40639_seq = jule::Str();
	if (_40616_txt.len() < _40629_n) {
		return _40639_seq;
	}
	
	jule::I64 _41213_i = 2LL;
	for (; _41213_i < _40629_n; (_41213_i)++) {
		{
			if ((!(_21c62ca70_is_hex(_40616_txt[_41213_i])))) {
				return _40639_seq;
			}
		}
	_iter_next_22179792d:;
	}
	_iter_end_22179792d:;
	_40639_seq=static_cast<jule::Str>(_40616_txt.slice(0LL,_40629_n));
	return _40639_seq;
}



inline jule::Str _21c636caa_big_unicode_point_escape(jule::Slice<jule::U8>& _42430_txt) {
	return _21c636958_hex_escape(_42430_txt,10LL);
}



inline jule::Str _21c6370eb_little_unicode_point_escape(jule::Slice<jule::U8>& _42933_txt) {
	return _21c636958_hex_escape(_42933_txt,6LL);
}



inline jule::Str _21c6373e8_hex_byte_escape(jule::Slice<jule::U8>& _43421_txt) {
	return _21c636958_hex_escape(_43421_txt,4LL);
}



inline jule::Str _21c637706_byte_escape(jule::Slice<jule::U8>& _43917_txt) {
	jule::Str _43932_seq = jule::Str();
	if ((_43917_txt.len() < 4LL)) {
		return _43932_seq;
	}
	if (((!(_21c62c762_is_octal(_43917_txt[1LL]))) || (!(_21c62c762_is_octal(_43917_txt[2LL])))) || (!(_21c62c762_is_octal(_43917_txt[3LL])))) {
		return _43932_seq;
	}
	_43932_seq = static_cast<jule::Str>(_43917_txt.slice(0LL,4LL));
	return _43932_seq;
}



inline jule::Slice<_21c348b32_Log> _21c63d223_lex(jule::Ptr<_21c62e038_File> _83216_f,jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	}
	_21c638097_Lex _83713_lex = _21c638097_Lex(_83226_mode,jule::Slice<_21c627dde_Token>(),_83216_f,0LL,jule::I64(),-1LL,jule::Slice<_21c348b32_Log>());
	_21c63b4b8_new_line(&_83713_lex);
	_21c638d56_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	}
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _21c4a3682_find_module_file(jule::Slice<jule::Ptr<_235a1da19_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_2217e0305:;
		if (it != expr.end()) {
			jule::Ptr<_235a1da19_DirEntry> &_2217e0349_d = *it;
			{
				if ((!(_235a3a11d_is_dir(_2217e0349_d.get()._field_stat.ptr()))) && (_2217e0349_d.get()._field_name == jule::Str("jule.mod", 8))) {
					return true;
				}
			}
			_iter_next_2217e0305:;
			++it;
			goto _iter_begin_2217e0305;
		}
		_iter_end_2217e0305:;
	}
	return false;
}



inline jule::Str _21c491d79_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_235a1da19_DirEntry>> _2617_dirents = ({
				auto except = static__235b24ec7_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_2217e07cd;
					goto _iter_end_2217e07cd;
				} jule::Slice<jule::Ptr<_235a1da19_DirEntry>>();});
			});
			jule::Bool _3013_exist = _21c4a3682_find_module_file(_2617_dirents);
			if (_3013_exist) {
				return _2434_path;
			}
			jule::I64 _3513_n = _2434_path.len();
			_2434_path=_235ba6432_dir(_2434_path);
			if (_2434_path.len() == _3513_n) {
				goto _iter_end_2217e07cd;
			}
		}
	_iter_next_2217e07cd:;
	}
	_iter_end_2217e07cd:;
	return jule::Str();
}



inline jule::Slice<_21c348b32_Log> _21c4924c8_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__235a2b97d_read(_235b71c27_join(jule::Slice<jule::Str>({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_21c348b32_Log>({_21c348b32_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
			return jule::Slice<_21c348b32_Log>({_21c348b32_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
		} jule::Slice<jule::U8>();});
	});
	jule::Str _549_s = _2368be1e3_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_21c348b32_Log>({_21c348b32_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file has syntax error(s)", 31),jule::Str(),jule::Str())});
	}
	return nullptr;
}



inline jule::Ptr<_21cb7e09e_FileInfo> _21cb7e4de_parse_file(jule::Ptr<_21c62e038_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_21cb7e09e_FileInfo> _2813_finf = jule::new_ptr<_21cb7e09e_FileInfo>(_21cb7e09e_FileInfo());
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _21cb7e841_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	}
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_21c4cc2b0_Ast>,jule::Slice<_21c348b32_Log>> _21cb7e841_parse_fileset(jule::Ptr<_21c62e038_File> _6022_f) {
	jule::Ptr<_21cba92b6_Parser> _6113_p = jule::new_ptr<_21cba92b6_Parser>(_21cba92b6_Parser());
	_21cbbbc68_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_21c6411e3_ScopeTree> _21cb80523_new_scope(void) {
	return jule::new_ptr<_21c6411e3_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _21cb80798_is_st(_21c627dde_Token _4710_current,_21c627dde_Token _4726_prev) {
	jule::Bool _4741_ok = jule::Bool();
	jule::Bool _4751_terminated = jule::Bool();
	_4741_ok=(_4710_current._field_id == static_cast<jule::U64>(5LLU)) || (_4726_prev._field_row < _4710_current._field_row);
	_4751_terminated=_4710_current._field_id == static_cast<jule::U64>(5LLU);
	return std::make_tuple(_4741_ok,_4751_terminated);
}



inline jule::Bool _21cb80bc7_prev_is_incomplete_expr(jule::Slice<_21c627dde_Token>& _5329_tokens,jule::I64& _5347_i) {
	if ((_5347_i > 1LL) && (_5329_tokens[(_5347_i - 2LL)]._field_id == static_cast<jule::U64>(23LLU))) {
		return false;
	}
	{
		_21c627dde_Token* _5913_prev = (&(_5329_tokens[(_5347_i - 1LL)]));
		return (_5913_prev->_field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev->_field_id == static_cast<jule::U64>(7LLU)) && _21c628a5a_is_bin_op(_5913_prev->_field_kind)) && (_5913_prev->_field_row < _5329_tokens[_5347_i]._field_row));
	}
}



inline std::tuple<jule::I64,jule::Bool> _21cb810e5_next_st_pos(jule::Slice<_21c627dde_Token>& _6817_tokens,jule::I64 _6834_start) {
	jule::I64 _6913_brace_n = 0LL;
	jule::I64 _7013_i = _6834_start;
	for (; _7013_i < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			_21c627dde_Token _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_221be2680:;
					{
						{
							auto &_match_expr{ _7413_tok._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_221be4b49:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6834_start)) {
										if ((!(_21cb80bc7_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _21cb80798_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_221be2ebb:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())))) {
										std::tie(_7217_ok,_7317_terminated) = _21cb80798_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_221be320d:;
						}
						goto _iter_next_221be13d7;
					}
				}
				_match_end_221be28a0:;
			}
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_221be13d7;
			}
			if (_7013_i > _6834_start) {
				if (_21cb80bc7_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_221be13d7;
				}
				std::tie(_7217_ok,_7317_terminated) = _21cb80798_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _21cb80798_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_221be13d7;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_221be13d7:;
	}
	_iter_end_221be13d7:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<_21c627dde_Token>,jule::Bool> _21cb814d0_skip_st(jule::I64& _13017_i,jule::Slice<_21c627dde_Token> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;
	jule::Bool _13213_terminated = false;
	std::tie(_13017_i,_13213_terminated) = _21cb810e5_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<_21c627dde_Token> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _21cb814d0_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		}
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_21cb81876_Stmt>> _21cb81c83_split_stmts(jule::Slice<_21c627dde_Token>& _15221_tokens) {
	jule::Slice<jule::Ptr<_21cb81876_Stmt>> _15313_stmts = nullptr;
	jule::I64 _15413_pos = 0LL;
	while (_15413_pos < static_cast<jule::I64>(static_cast<jule::I64>(_15221_tokens.len()))) {
		{
			jule::Slice<_21c627dde_Token> _15618_stmt;
			jule::Bool _15624_terminated;
			std::tie(_15618_stmt,_15624_terminated) = _21cb814d0_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_21cb81876_Stmt>(_21cb81876_Stmt(_15618_stmt,_15624_terminated)));
		}
	_iter_next_221bed2e5:;
	}
	_iter_end_221bed2e5:;
	return _15313_stmts;
}



inline jule::Ptr<_21cb95ec8_CallData> _21cb963a2_get_call_data(jule::Slice<_21c627dde_Token>& _4523_tokens) {
	jule::Ptr<_21cb95ec8_CallData> _4613_data = jule::new_ptr<_21cb95ec8_CallData>(_21cb95ec8_CallData());
	std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_args_tokens) = _21cba7737_range_last(_4523_tokens);
	if ((_4613_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4613_data;
	}
	_21c627dde_Token _539_token = _4613_data.get()._field_expr_tokens[(_4613_data.get()._field_expr_tokens.len() - 1LL)];
	if ((_539_token._field_id == static_cast<jule::U64>(3LLU)) && (_539_token._field_kind == jule::Str("]", 1))) {
		std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_generics_tokens) = _21cba7737_range_last(_4613_data.get()._field_expr_tokens);
	}
	return _4613_data;
}



inline jule::Slice<_21c627dde_Token> _21cb96704_get_block_expr(jule::Slice<_21c627dde_Token>& _6124_tokens) {
	jule::I64 _6213_brace_n = 0LL;
	jule::I64 _6313_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_221c038d3:;
		if (it != expr.end()) {
			jule::I64 _221c0397c_i = it - expr.begin();
			_21c627dde_Token _221c03c02_tok = *it;
			{
				{
					auto &_match_expr{ _221c03c02_tok._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_221c041a8:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_221c0452c:;
						{
							{
								auto &_match_expr{ _221c03c02_tok._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_221c0596d:;
									{
										if ((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL)) {
											if ((_6313_skip_to_next_brace_close > 0LL)) {
												(_6313_skip_to_next_brace_close)--;
											}
											(_6213_brace_n)++;
											goto _match_end_221c055c7;
										}
										return _6124_tokens.slice(0LL,_221c0397c_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_221c05bd2:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_221c0540c:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_221c055c7:;
							}
						}
					}
					_match_end_221c044c7:;
				}
			}
			_iter_next_221c038d3:;
			++it;
			_221c0397c_i++;
			goto _iter_begin_221c038d3;
		}
		_iter_end_221c038d3:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_21c627dde_Token>,jule::Slice<_21c627dde_Token>> _21cb96a12_split_colon(jule::Slice<_21c627dde_Token>& _9521_tokens) {
	jule::I64 _9613_range_n = 0LL;
	{
		auto &expr = _9521_tokens;
		auto it = expr.begin();
		_iter_begin_221c06d59:;
		if (it != expr.end()) {
			jule::I64 _221c06e03_i = it - expr.begin();
			_21c627dde_Token _221c03e66_token = *it;
			{
				{
					auto &_match_expr{ _221c03e66_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_221c07772:;
						{
							{
								auto &_match_expr{ _221c03e66_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_221c087d9:;
									{
										(_9613_range_n)++;
										goto _iter_next_221c06d59;
									}
								}
								else {
									_case_begin_221c081ce:;
									{
										(_9613_range_n)--;
									}
								}
								_match_end_221c08421:;
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_221c07a91:;
						{
							if ((_9613_range_n < 1LL)) {
								jule::Slice<_21c627dde_Token> _11325_l = _9521_tokens.slice(0LL,_221c06e03_i);
								jule::Slice<_21c627dde_Token> _11425_r = _9521_tokens.slice((_221c06e03_i + 1LL));
								return std::make_tuple(_11325_l,_11425_r);
							}
						}
					}
					_match_end_221c07a3b:;
				}
			}
			_iter_next_221c06d59:;
			++it;
			_221c06e03_i++;
			goto _iter_begin_221c06d59;
		}
		_iter_end_221c06d59:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _21cb96d64_find_lowest_prec_op(jule::Slice<_21c627dde_Token>& _12425_tokens) {
	jule::U8 _12913_prec = 255LLU;
	jule::I64 _13013_prec_pos = -1LL;
	jule::I64 _13213_brace_n = 0LL;
	jule::Bool _13313_skip_to_next_brace_open = false;
	{
		auto &expr = _12425_tokens;
		auto it = expr.begin();
		_iter_begin_221c0b006:;
		if (it != expr.end()) {
			jule::I64 _221c0b0a0_i = it - expr.begin();
			_21c627dde_Token &_221c0b325_token = *it;
			{
				{
					
					if (_221c0b325_token._field_id == static_cast<jule::U64>(3LLU)) {
						_case_begin_221c0ba2e:;
						{
							{
								auto &_match_expr{ _221c0b325_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_221c0cd4e:;
									{
										_13313_skip_to_next_brace_open=false;
										goto _case_begin_221c0d06e;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_221c0d06e:;
									{
										(_13213_brace_n)++;
									}
								}
								else {
									_case_begin_221c0c7dd:;
									{
										(_13213_brace_n)--;
									}
								}
								_match_end_221c0c9b9:;
							}
							goto _iter_next_221c0b006;
						}
					}
					else if (_13313_skip_to_next_brace_open) {
						_case_begin_221c0baa6:;
						{
							goto _iter_next_221c0b006;
						}
					}
					else if (_221c0b325_token._field_id == static_cast<jule::U64>(16LLU)) {
						_case_begin_221c0bb2d:;
						{
							_13313_skip_to_next_brace_open=true;
							goto _iter_next_221c0b006;
						}
					}
					else if ((_221c0b0a0_i == 0LL)) {
						_case_begin_221c0bba5:;
						{
							goto _iter_next_221c0b006;
						}
					}
					else if (_221c0b325_token._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_221c0bc2c:;
						{
							goto _iter_next_221c0b006;
						}
					}
					else if ((_13213_brace_n > 0LL)) {
						_case_begin_221c0bca4:;
						{
							goto _iter_next_221c0b006;
						}
					}
					_match_end_221c0b8ca:;
				}
				_21c627dde_Token _16113_left = _12425_tokens[(_221c0b0a0_i - 1LL)];
				if ((_16113_left._field_id == static_cast<jule::U64>(7LLU)) || (_16113_left._field_id == static_cast<jule::U64>(11LLU))) {
					goto _iter_next_221c0b006;
				}
				if (((_221c0b0a0_i > 1LL) && (_16113_left._field_id == static_cast<jule::U64>(3LLU))) && (_16113_left._field_kind == jule::Str("]", 1))) {
					_21c627dde_Token _16917_lleft = _12425_tokens[(_221c0b0a0_i - 2LL)];
					if ((_16917_lleft._field_id == static_cast<jule::U64>(3LLU)) && (_16917_lleft._field_kind == jule::Str("[", 1))) {
						if ((_221c0b325_token._field_kind == jule::Str("&", 1)) || (_221c0b325_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_221c0b006;
						}
					}
				}
				jule::U8 _17813_p = _21c628340_prec(&_221c0b325_token);
				if ((_17813_p != 0LLU) && (_17813_p <= _12913_prec)) {
					_12913_prec=_17813_p;
					_13013_prec_pos=_221c0b0a0_i;
				}
			}
			_iter_next_221c0b006:;
			++it;
			_221c0b0a0_i++;
			goto _iter_begin_221c0b006;
		}
		_iter_end_221c0b006:;
	}
	return _13013_prec_pos;
}



inline jule::Ptr<_21c4d8b4b_IdentExpr> _21cb97172_build_ident_expr(_21c627dde_Token& _18826_token) {
	return jule::new_ptr<_21c4d8b4b_IdentExpr>(_21c4d8b4b_IdentExpr(_18826_token,_18826_token._field_kind,false));
}



inline std::tuple<jule::Slice<_21c627dde_Token>,jule::I64> _21cb97480_get_range_expr_tokens(jule::Slice<_21c627dde_Token>& _19631_tokens) {
	jule::I64 _19713_range_n = 0LL;
	jule::I64 _19813_i = (_19631_tokens.len() - 1LL);
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			_21c627dde_Token _20013_tok = _19631_tokens[_19813_i];
			if (_20013_tok._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _20013_tok._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_221c16cae:;
						{
							(_19713_range_n)++;
						}
					}
					else {
						_case_begin_221c1664e:;
						{
							(_19713_range_n)--;
						}
					}
					_match_end_221c1697e:;
				}
			}
			if ((_19713_range_n == 0LL)) {
				return std::make_tuple(_19631_tokens.slice(0LL,_19813_i),_19713_range_n);
			}
		}
	_iter_next_221c151a8:;
	}
	_iter_end_221c151a8:;
	return std::make_tuple(nullptr,_19713_range_n);
}



inline jule::Bool _21cba558c_check_assign_tokens(jule::Slice<_21c627dde_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_21c62cd7d_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::I64 _2013_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_221c1918a:;
		if (it != expr.end()) {
			_21c627dde_Token &_221c19234_t = *it;
			{
				if (_221c19234_t._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _221c19234_t._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_221c1a246:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_221c19ad6:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_221c19e16:;
					}
				}
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_221c1918a;
				} else if ((_221c19234_t._field_id == static_cast<jule::U64>(7LLU)) && _21c62d499_is_assign_op(_221c19234_t._field_kind)) {
					return true;
				}
			}
			_iter_next_221c1918a:;
			++it;
			goto _iter_begin_221c1918a;
		}
		_iter_end_221c1918a:;
	}
	return false;
}



inline _21c348b32_Log _21cba6d74_make_err(jule::I64 _4913_row,jule::I64 _4923_col,jule::Ptr<_21c62e038_File>& _4934_f,jule::Str _4944_fmt,jule::Slice<jule::Any> _4957_args) {
	return _21c348b32_Log(static_cast<jule::I64>(1LL),_4913_row,_4923_col,_4934_f.get()._field_path,_21c34911b_logf(_4944_fmt,_4957_args),jule::Str(),jule::Str());
}



inline jule::Slice<_21c627dde_Token> _21cba7429_range(jule::I64& _6815_i,jule::Str _6823_open,jule::Str _6840_close,jule::Slice<_21c627dde_Token>& _6863_tokens) {
	if (_6815_i >= static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))) {
		return nullptr;
	}
	_21c627dde_Token _739_tok = _6863_tokens[_6815_i];
	if ((_739_tok._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok._field_kind != _6823_open)) {
		return nullptr;
	}
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;
	jule::I64 _809_start = _6815_i;
	for (; (_7913_range_n != 0LL) && (_6815_i < static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))); (_6815_i)++) {
		{
			_21c627dde_Token _8213_token = _6863_tokens[_6815_i];
			if (_8213_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _8213_token._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_221c210a4:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_221c21428:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_221c213c3:;
				}
			}
		}
	_iter_next_221c202e5:;
	}
	_iter_end_221c202e5:;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<_21c627dde_Token>,jule::Slice<_21c627dde_Token>> _21cba7737_range_last(jule::Slice<_21c627dde_Token>& _10120_tokens) {
	jule::Slice<_21c627dde_Token> _10139_cutted = jule::Slice<_21c627dde_Token>();
	jule::Slice<_21c627dde_Token> _10156_cut = jule::Slice<_21c627dde_Token>();
	if ((_10120_tokens.len() == 0LL)) {
		_10139_cutted = _10120_tokens;
		_10156_cut = nullptr;
		return std::make_tuple(_10139_cutted,_10156_cut);
	} else if (_10120_tokens[(_10120_tokens.len() - 1LL)]._field_id != static_cast<jule::U64>(3LLU)) {
		_10139_cutted = _10120_tokens;
		_10156_cut = nullptr;
		return std::make_tuple(_10139_cutted,_10156_cut);
	}
	jule::I64 _10813_brace_n = 0LL;
	jule::I64 _10913_i = (_10120_tokens.len() - 1LL);
	for (; (_10913_i >= 0LL); (_10913_i)--) {
		{
			_21c627dde_Token _11113_token = _10120_tokens[_10913_i];
			if (_11113_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _11113_token._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_221c25c68:;
						{
							(_10813_brace_n)++;
							goto _iter_next_221c2244b;
						}
					}
					else {
						_case_begin_221c25608:;
						{
							(_10813_brace_n)--;
						}
					}
					_match_end_221c25938:;
				}
			}
			if ((_10813_brace_n == 0LL)) {
				_10139_cutted = _10120_tokens.slice(0LL,_10913_i);
				_10156_cut = _10120_tokens.slice(_10913_i);
				return std::make_tuple(_10139_cutted,_10156_cut);
			}
		}
	_iter_next_221c2244b:;
	}
	_iter_end_221c2244b:;
	_10139_cutted = _10120_tokens;
	_10156_cut = nullptr;
	return std::make_tuple(_10139_cutted,_10156_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_21c627dde_Token>>,jule::Slice<_21c348b32_Log>> _21cba7c43_parts(jule::Slice<_21c627dde_Token>& _13915_tokens,jule::U64 _13932_id,jule::Bool _13945_expr_must) {
	if ((_13915_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_21c627dde_Token>> _14413_parts = nullptr;
	jule::Slice<_21c348b32_Log> _14513_errors = nullptr;
	jule::I64 _14713_range_n = 0LL;
	jule::I64 _14813_last = 0LL;
	{
		auto &expr = _13915_tokens;
		auto it = expr.begin();
		_iter_begin_221c28cc1:;
		if (it != expr.end()) {
			jule::I64 _221c28e9c_i = it - expr.begin();
			_21c627dde_Token _221c291de_token = *it;
			{
				if (_221c291de_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _221c291de_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_221c2a1ac:;
							{
								(_14713_range_n)++;
								goto _iter_next_221c28cc1;
							}
						}
						else {
							_case_begin_221c29a4c:;
							{
								(_14713_range_n)--;
							}
						}
						_match_end_221c29d7c:;
					}
				}
				if ((_14713_range_n > 0LL)) {
					goto _iter_next_221c28cc1;
				}
				if (_221c291de_token._field_id == _13932_id) {
					if (_13945_expr_must && ((_221c28e9c_i - _14813_last) <= 0LL)) {
						_21c348b32_Log _16821_err = _21cba6d74_make_err(_221c291de_token._field_row,_221c291de_token._field_column,_221c291de_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14513_errors = jule::alloc_for_append(_14513_errors,1);_14513_errors.__push(_16821_err);
					}
					_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(_13915_tokens.slice(_14813_last,_221c28e9c_i));
					_14813_last=static_cast<jule::I64>((_221c28e9c_i + 1LL));
				}
			}
			_iter_next_221c28cc1:;
			++it;
			_221c28e9c_i++;
			goto _iter_begin_221c28cc1;
		}
		_iter_end_221c28cc1:;
	}
	if (_14813_last < static_cast<jule::I64>(static_cast<jule::I64>(_13915_tokens.len()))) {
		_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(_13915_tokens.slice(_14813_last));
	} else if ((!(_13945_expr_must))) {
		_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(jule::Slice<_21c627dde_Token>());
	}
	return std::make_tuple(_14413_parts,_14513_errors);
}



inline jule::Str _21cba8095_get_close_kind_of_brace(jule::Str _18528_left) {
	{
		auto &_match_expr{ _18528_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_221c2e58a:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_221c2e601:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_221c2e700:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_221c28d8c:;
			{
				return jule::Str();
			}
		}
		_match_end_221c2d3ad:;
	}
}



inline _21c348b32_Log _21cba854b_compiler_err(_21c627dde_Token& _19418_token,jule::Str& _19433_fmt,jule::Slice<jule::Any> _19446_args) {
	return _21c348b32_Log(static_cast<jule::I64>(1LL),_19418_token._field_row,_19418_token._field_column,_19418_token._field_file.get()._field_path,_21c34911b_logf(_19433_fmt,_19446_args),_21c630512_get_row(_19418_token._field_file.ptr(), _19418_token._field_row),jule::Str());
}



inline void _21cba897a_push_suggestion(_21c348b32_Log* _20531_log,jule::Str _20542_fmt,jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_21c34911b_logf(_20542_fmt,_20555_args);
}



inline jule::Str _21cba8d21_tokstoa(jule::Slice<_21c627dde_Token>& _20913_tokens) {
	jule::Str _21013_s = jule::Str();
	{
		auto &expr = _20913_tokens;
		auto it = expr.begin();
		_iter_begin_221c32bdc:;
		if (it != expr.end()) {
			_21c627dde_Token &_221c32c86_token = *it;
			{
				_21013_s+=_221c32c86_token._field_kind;
			}
			_iter_next_221c32bdc:;
			++it;
			goto _iter_begin_221c32bdc;
		}
		_iter_end_221c32bdc:;
	}
	return _21013_s;
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbce78_build_void_type(void) {
	return jule::new_ptr<_21c5d253b_TypeDecl>();
}



inline jule::Ptr<_21c5d253b_TypeDecl> _21cbbd1cb_build_prim_type(_21c627dde_Token _2224_t) {
	return jule::new_ptr<_21c5d253b_TypeDecl>(_21c5d253b_TypeDecl(_2224_t,jule::Any(jule::Any(jule::new_ptr<_21c529e9a_IdentTypeDecl>(_21c529e9a_IdentTypeDecl(_2224_t,_2224_t._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_21c5d253b_TypeDecl>>()))))));
}



inline std::tuple<jule::Slice<_21c627dde_Token>,jule::I64> _21cbbd5b6_split_map_range(jule::Slice<_21c627dde_Token>& _3525_tokens,jule::I64& _3547_i) {
	jule::Slice<_21c627dde_Token> _3557_range_tokens = jule::Slice<_21c627dde_Token>();
	jule::I64 _3580_colon = jule::I64();
	_3580_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;
	jule::I64 _389_start = _3547_i;
	for (; _3547_i < static_cast<jule::I64>(static_cast<jule::I64>(_3525_tokens.len())); (_3547_i)++) {
		{
			_21c627dde_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_221c36460:;
						{
							(_3713_range_n)++;
							goto _iter_next_221c34a9b;
						}
					}
					else {
						_case_begin_221c35d00:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_221c36130:;
				}
			}
			if ((_3713_range_n == 0LL)) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3547_i);
				goto _iter_end_221c34a9b;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_221c34a9b;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == static_cast<jule::U64>(11LLU))) {
				_3580_colon=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3547_i - _389_start)) - 1LL));
			}
		}
	_iter_next_221c34a9b:;
	}
	_iter_end_221c34a9b:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline jule::I64 _21e9ecd50_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>(64LL - static_cast<jule::I64>(static_cast<jule::I64>(_21ea056d7_len64(_6124_x))));
}



inline jule::I64 _21e9ed8de_trailing_zeros(jule::U64 _8323_x) {
	
	return static_cast<jule::I64>(_21e9ee6ae_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _21e9ee3a1_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_21e9ed27e_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & static_cast<jule::U32>(static_cast<jule::U32>((-(_10525_x))))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _21e9ee6ae_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_21e9ed625_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & static_cast<jule::U64>(static_cast<jule::U64>((-(_11425_x))))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _21ea053c9_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	}
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::I64>(_35228_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)]))));
	return _35228_n;
}



inline jule::I64 _21ea056d7_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	}
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	}
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::I64>(_36628_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)]))));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _21ea0662d_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x + _41522_y)) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x & _41522_y))) | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x | _41522_y))) & static_cast<jule::U64>(static_cast<jule::U64>((~(_41544_sum)))))))))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _21ea08234_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + static_cast<jule::U64>(static_cast<jule::U64>((_5059_w0 >> 32LLU)));
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5029_x1 * _5049_y1)) + _5089_w2)) + static_cast<jule::U64>(static_cast<jule::U64>((_50713_w1 >> 32LLU))));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _21e934957_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _21e934b99_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _21e934ea7_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _21e935309_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _21e9375a3_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_221d558c0:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_21e96c4a6_is_inf(_4718_f,0LL) || _21e95a52c_is_nan(_4718_f)) {
			_case_begin_221d55947:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_221d557b0:;
	}
	std::tie(_4718_f,_4739_exp) = _21e989803_normalize(_4718_f);
	jule::U64 _5613_x = _21e934ea7_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)))) - 1023LL))) + 1LL));
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_21e935309_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _21e957b45_nan(void) {
	return static_cast<jule::F64>(_21e935309_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _21e95a52c_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _21e95aa7c_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_21e935309_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_21e935309_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _21e96c4a6_is_inf(jule::F64 _7215_f,jule::I64 _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::I64> _21e989803_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	
	if ((_21ea0b5bc_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _21e980365_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		
		if (_21e95a52c_is_nan(_11112_x) || _21e96c4a6_is_inf(_11112_x,1LL)) {
			_case_begin_221dadb8c:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_221dadc14:;
			{
				return static_cast<jule::F64>(_21e957b45_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_221dadc8b:;
			{
				return static_cast<jule::F64>(_21e95aa7c_inf(-1LL));
			}
		}
		_match_end_221dadae3:;
	}
	jule::F64 _13314_f1;
	jule::I64 _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _21e9375a3_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = (_13314_f1 - 1LL);
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(2LL + _1389_f))));
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.6666666666666735 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.2857142874366239 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.1818357216161805 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.14798198605116586))))))))))))))));
	jule::F64 _1469_t2 = _1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.3999999999940942 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.22222198432149784 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.15313837699209373)))))))))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.6931471803691238))) - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1429_s * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq + _1479_R))))) + static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.00000000019082149292705877))))))))) - _1389_f))));
}



inline jule::F64 _21ea0b5bc_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_21e935309_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_21e934ea7_f64_bits(_4312_x))) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _21ea0d190_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _21ea0b5bc_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_221e4850c:;
		}
		_iter_end_221e4850c:;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _21ea0d624_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::I64 _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _21e9375a3_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	}
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((static_cast<jule::F64>(static_cast<jule::F64>(_21e980365_log(_4510_frac))) * 1.4426950408889634))) + static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_4516_exp))));
}



inline jule::Str _21e2789d8_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::I64 _7837_prec,jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_21e29451a_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_21e413304_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL))),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _21e29451a_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::I64 _8259_prec,jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	jule::Ptr<_21e68dda9_FloatInfo> _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_22220ba78:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_21e934957_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_21e68dda9_FloatInfo>)((&(_21e205a0e_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22220b79d:;
			{
				_8313_bits=static_cast<jule::U64>(_21e934ea7_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_21e68dda9_FloatInfo>)((&(_21e20c263_F64_INFO))));
			}
		}
		else {
			_case_begin_22220b171:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_22220b391:;
	}
	jule::Bool _969_neg = ((_8313_bits >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)))) != 0LLU);
	jule::I64 _9713_exp = static_cast<jule::I64>(_8313_bits >> _8413_flt.get()._field_mantbits) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))));
	jule::U64 _9813_mant = _8313_bits & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits)) - 1LLU))));
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))) {
			_case_begin_22220b8be:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_222213772:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_222213882:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_2222124eb:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'+','i','n','f'}));
						}
					}
					_match_end_222212430:;
				}
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_222211a6c:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_22220b3e6:;
			{
				_9813_mant|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_222210d68:;
	}
	_9713_exp+=_8413_flt.get()._field_bias;
	if (_8244_fmt == 'b') {
		return _21e294828_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _21e2642cb_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	
	_21e223b3c_DecimalSlice _13213_digs = _21e223b3c_DecimalSlice();
	jule::Bool _13313_ok = false;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_21e21e6d7_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_222217248:;
				{
					_8259_prec=static_cast<jule::I64>(_21e413304_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_222218777:;
				{
					_8259_prec=static_cast<jule::I64>(_21e413304_max(static_cast<jule::I64>(_13213_digs._field_nd - _13213_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_222218810:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_222218722:;
		}
	} else if (_8244_fmt != 'f') {
		jule::I64 _15217_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22221b2c4:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22221ae72:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					}
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_22221a79b:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_222218d93:;
		}
		if ((_8270_bit_size == 32LL) && (_15217_digits <= 9LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_21e469019_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_21e65910a_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		}
	}
	if ((!(_13313_ok))) {
		return _21e2dd630_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _21e426449_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _21e2dd630_big_ftoa(jule::Slice<jule::U8> _18217_dst,jule::I64 _18234_prec,jule::U8 _18245_fmt,jule::Bool _18256_neg,jule::U64 _18313_mant,jule::I64 _18324_exp,_21e68dda9_FloatInfo& _18335_flt) {
	_21ea2ce18_Decimal _18413_d = _21ea2ce18_Decimal();
	_21ea2d138_assign(&_18413_d, _18313_mant);
	_21ea2d29d_shift(&_18413_d, static_cast<jule::I64>(_18324_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_18335_flt._field_mantbits)))));
	_21e223b3c_DecimalSlice _18713_digs = _21e223b3c_DecimalSlice();
	jule::Bool _1889_shortest = (_18234_prec < 0LL);
	if (_1889_shortest) {
		_21e467d92_round_shortest(_18413_d,_18313_mant,_18324_exp,_18335_flt);
		_18713_digs=_21e223b3c_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_222225399:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_222225443:;
				{
					_18234_prec=static_cast<jule::I64>(_21e413304_max(static_cast<jule::I64>(_18713_digs._field_nd - _18713_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_2222254a9:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_222224475:;
		}
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_2222240ce:;
				{
					_21ea2d6dd_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_222224145:;
				{
					_21ea2d6dd_round(&_18413_d, static_cast<jule::I64>(_18413_d._field_dp + _18234_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_2222241ab:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					}
					_21ea2d6dd_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_2222271ae:;
		}
		_18713_digs=_21e223b3c_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
	}
	return _21e426449_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _21e426449_fmt_digits(jule::Slice<jule::U8> _21919_dst,jule::Bool _21932_shortest,jule::Bool _21948_neg,_21e223b3c_DecimalSlice _22013_digs,jule::I64 _22037_prec,jule::U8 _22048_fmt) {
	{
		auto &_match_expr{ _22048_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_22222b36c:;
			{
				return _21e601bc9_fmt_e(_21919_dst,_21948_neg,_22013_digs,_22037_prec,_22048_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_22222b438:;
			{
				return _21e24e63a_fmt_f(_21919_dst,_21948_neg,_22013_digs,_22037_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_22222b49e:;
			{
				jule::I64 _22817_eprec = _22037_prec;
				if ((_22817_eprec > _22013_digs._field_nd) && (_22013_digs._field_nd >= _22013_digs._field_dp)) {
					_22817_eprec=_22013_digs._field_nd;
				}
				if (_21932_shortest) {
					_22817_eprec=6LL;
				}
				jule::I64 _23813_exp = (_22013_digs._field_dp - 1LL);
				if ((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec)) {
					if (_22037_prec > _22013_digs._field_nd) {
						_22037_prec=_22013_digs._field_nd;
					}
					return _21e601bc9_fmt_e(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::I64>((_22037_prec - 1LL)),static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_22048_fmt + 'e')) - 'g'));
				}
				if (_22037_prec > _22013_digs._field_dp) {
					_22037_prec=_22013_digs._field_nd;
				}
				return _21e24e63a_fmt_f(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::I64>(_21e413304_max(static_cast<jule::I64>(_22037_prec - _22013_digs._field_dp),0LL)));
			}
		}
		_match_end_22222b317:;
	}
	return jule::append(_21919_dst,jule::Slice<jule::U8>({'%',_22048_fmt}));
}



inline void _21e467d92_round_shortest(_21ea2ce18_Decimal& _25724_d,jule::U64 _25736_mant,jule::I64 _25747_exp,_21e68dda9_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;
	}
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);
	if ((_25747_exp > _2789_minexp) && ((332LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25724_d._field_dp - _25724_d._field_nd)))) >= static_cast<jule::I64>(static_cast<jule::I64>(100LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits)))))))))) {
		return;
	}
	_21ea2ce18_Decimal _28713_upper = _21ea2ce18_Decimal();
	_21ea2d138_assign(&_28713_upper, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) + 1LLU)));
	_21ea2d29d_shift(&_28713_upper, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;
	jule::I64 _29813_explo = 0LL;
	if ((_25736_mant > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _25758_flt._field_mantbits))) || (_25747_exp == _2789_minexp)) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	}
	_21ea2ce18_Decimal _30613_lower = _21ea2ce18_Decimal();
	_21ea2d138_assign(&_30613_lower, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_29713_mantlo << 1LLU)) + 1LLU)));
	_21ea2d29d_shift(&_30613_lower, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_29813_explo - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);
	jule::U8 _32613_upperdelta = 0LLU;
	jule::I64 _33013_ui = 0LL;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = (_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp;
			if (_33513_mi >= _25724_d._field_nd) {
				goto _iter_end_22223729b;
			}
			jule::I64 _33913_li = (_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);
			if ((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd)) {
				_34017_l=_30613_lower._field_d[_33913_li];
			}
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			}
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);
			if (_33013_ui < _28713_upper._field_nd) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			}
			jule::Bool _35613_okdown = (_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd));
			{
				
				if ((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u)) {
					_case_begin_22224220c:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if ((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u)) {
					_case_begin_222242284:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if ((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0'))) {
					_case_begin_22224230b:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_222242196:;
			}
			jule::Bool _37713_okup = (_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd));
			{
				
				if (_35613_okdown && _37713_okup) {
					_case_begin_2222457c6:;
					{
						_21ea2d6dd_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_35613_okdown) {
					_case_begin_22224583c:;
					{
						_21ea2d413_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_37713_okup) {
					_case_begin_2222458a3:;
					{
						_21ea2d578_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				_match_end_2222446e8:;
			}
		}
	_iter_next_22223729b:;
	}
	_iter_end_22223729b:;
}



inline jule::Slice<jule::U8> _21e601bc9_fmt_e(jule::Slice<jule::U8> _39614_dst,jule::Bool _39627_neg,_21e223b3c_DecimalSlice _39638_d,jule::I64 _39655_prec,jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');
	}
	jule::U8 _40313_ch = '0';
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');
		jule::I64 _41217_i = 1LL;
		jule::I64 _41313_m = _21e2cb222_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));
		if (_41217_i < _41313_m) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		}
		for (; _41217_i <= _39655_prec; (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');
			}
		_iter_next_22224b38c:;
		}
		_iter_end_22224b38c:;
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	}
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_22224d6be:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp))) + '0'));
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_22224d735:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_22224da65:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 100LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) % 10LL))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		_match_end_22224da10:;
	}
	return _39614_dst;
}



inline jule::Slice<jule::U8> _21e24e63a_fmt_f(jule::Slice<jule::U8> _45114_dst,jule::Bool _45127_neg,_21e223b3c_DecimalSlice _45138_d,jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');
	}
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _21e2cb222_min(_45138_d._field_nd,_45138_d._field_dp);
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; _45917_m < _45138_d._field_dp; (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
			}
		_iter_next_222253dcd:;
		}
		_iter_end_222253dcd:;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
	}
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');
		jule::I64 _47017_i = 0LL;
		for (; _47017_i < _45155_prec; (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);
				jule::I64 _47317_j = _45138_d._field_dp + _47017_i;
				if ((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd)) {
					_47221_ch=_45138_d._field_d[_47317_j];
				}
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);
			}
		_iter_next_222255b49:;
		}
		_iter_end_222255b49:;
	}
	return _45114_dst;
}



inline jule::Slice<jule::U8> _21e294828_fmt_b(jule::Slice<jule::U8> _48414_dst,jule::Bool _48427_neg,jule::U64 _48438_mant,jule::I64 _48453_exp,_21e68dda9_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');
	}
	std::tie(_48414_dst,std::ignore) = _21ea2ec1c_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');
	_48453_exp-=static_cast<jule::I64>(static_cast<jule::I64>(_48464_flt._field_mantbits));
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');
	}
	std::tie(_48414_dst,std::ignore) = _21ea2ec1c_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _21e2642cb_fmt_x(jule::Slice<jule::U8> _50614_dst,jule::I64 _50627_prec,jule::U8 _50638_fmt,jule::Bool _50649_neg,jule::U64 _50713_mant,jule::I64 _50728_exp,_21e68dda9_FloatInfo& _50739_flt) {
	if ((_50713_mant == 0LLU)) {
		_50728_exp=0LL;
	}
	_50713_mant<<=static_cast<jule::U64>(60LLU - _50739_flt._field_mantbits);
	while ((_50713_mant != 0LLU) && ((_50713_mant & 1152921504606846976LLU) == 0LLU)) {
		{
			_50713_mant<<=1LLU;
			(_50728_exp)--;
		}
	_iter_next_22225c3c0:;
	}
	_iter_end_22225c3c0:;
	if ((_50627_prec >= 0LL) && (_50627_prec < 15LL)) {
		jule::U64 _52113_shift = static_cast<jule::U64>(_50627_prec << 2LLU);
		jule::U64 _52213_extra = ((_50713_mant << _52113_shift) & 1152921504606846975LLU);
		_50713_mant>>=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_52213_extra | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_50713_mant & 1LLU))))) > 576460752303423488LLU)) {
			(_50713_mant)++;
		}
		_50713_mant<<=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_50713_mant & 2305843009213693952LLU) != 0LLU)) {
			_50713_mant>>=1LLU;
			(_50728_exp)++;
		}
	}
	jule::Str _5359_hex = (((_50638_fmt == 'X')) ? (jule::Str("0123456789ABCDEF", 16)) : (jule::Str("0123456789abcdef", 16)));
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>('0' + static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50713_mant >> 60LLU) & 1LLU))))));
	_50713_mant<<=4LLU;
	if ((_50627_prec < 0LL) && (_50713_mant != 0LLU)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		while ((_50713_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_5359_hex[static_cast<jule::I64>(((_50713_mant >> 60LLU) & 15LLU))]);
				_50713_mant<<=4LLU;
			}
		_iter_next_222263519:;
		}
		_iter_end_222263519:;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		jule::I64 _55317_i = 0LL;
		for (; _55317_i < _50627_prec; (_55317_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_5359_hex[static_cast<jule::I64>(((_50713_mant >> 60LLU) & 15LLU))]);
				_50713_mant<<=4LLU;
			}
		_iter_next_222262d43:;
		}
		_iter_end_222262d43:;
	}
	jule::U8 _56113_ch = static_cast<jule::U8>(80LLU);
	if (_50638_fmt == static_cast<jule::U8>(static_cast<jule::U8>(_21e417b44_lower(_50638_fmt)))) {
		_56113_ch='p';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56113_ch);
	if ((_50728_exp < 0LL)) {
		_56113_ch='-';
		_50728_exp=static_cast<jule::I64>((-(_50728_exp)));
	} else {
		_56113_ch='+';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56113_ch);
	{
		
		if ((_50728_exp < 100LL)) {
			_case_begin_22226aa2c:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		else if ((_50728_exp < 1000LL)) {
			_case_begin_222267b28:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 100LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50728_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_22226189c:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 1000LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 100LL)))) % 10LL))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50728_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		_match_end_222267dd1:;
	}
	return _50614_dst;
}



inline jule::I64 _21e2cb222_min(jule::I64 _5868_a,jule::I64 _58616_b) {
	return static_cast<jule::I64>((((_5868_a < _58616_b)) ? (_5868_a) : (_58616_b)));
}



inline jule::I64 _21e413304_max(jule::I64 _5908_a,jule::I64 _59016_b) {
	return static_cast<jule::I64>((((_5908_a > _59016_b)) ? (_5908_a) : (_59016_b)));
}



inline jule::U8 _21e417b44_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>(_4710_c | ('x' - 'X'));
}



inline std::tuple<jule::U64,jule::I64> _21e5dd028___parse_uint(jule::Str _5121_s,jule::I64 _5133_base,jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	}
	{
		
		if ((2LL <= _5133_base) && (_5133_base <= 36LL)) {
			_case_begin_222271417:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_2222712a2:;
			{
				_5133_base=10LL;
				if (_5121_s[0LL] == '0') {
					{
						
						if ((_5121_s.len() >= 3LL) && (_21e417b44_lower(_5121_s[1LL]) == 'b')) {
							_case_begin_222273408:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_21e417b44_lower(_5121_s[1LL]) == 'o')) {
							_case_begin_22227300c:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_21e417b44_lower(_5121_s[1LL]) == 'x')) {
							_case_begin_222272bee:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else {
							_case_begin_222272b88:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);
							}
						}
						_match_end_222272abc:;
					}
				}
			}
		}
		else {
			_case_begin_2222704b0:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_22227045a:;
	}
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if ((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL)) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	}
	jule::U64 _9013_cutoff = 0LLU;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_22227881a:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_222278463:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_222277dad:;
			{
				_9013_cutoff=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5133_base)))))) + 1LLU));
			}
		}
		_match_end_222278100:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_222278265:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_222279b07:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_222279145:;
	}
	jule::U64 _10813_n = 0LLU;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_22227a09c:;
		if (it != expr.end()) {
			jule::U8 _22227ac29_c = *it;
			{
				jule::U8 _11017_d = 0LLU;
				{
					
					if (('0' <= _22227ac29_c) && (_22227ac29_c <= '9')) {
						_case_begin_22227bca2:;
						{
							_11017_d=static_cast<jule::U8>(_22227ac29_c - '0');
						}
					}
					else if (('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_21e417b44_lower(_22227ac29_c)))) && (_21e417b44_lower(_22227ac29_c) <= 'z')) {
						_case_begin_22227bb3c:;
						{
							_11017_d=static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_21e417b44_lower(_22227ac29_c))) - 'a')) + 10LLU));
						}
					}
					else if (_22227ac29_c == '_') {
						_case_begin_22227bba3:;
						{
							goto _iter_next_22227a09c;
						}
					}
					else {
						_case_begin_22227b6ca:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_22227b653:;
				}
				if (_11017_d >= static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_5133_base)))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				}
				if (_10813_n >= _9013_cutoff) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n*=static_cast<jule::U64>(static_cast<jule::U64>(_5133_base));
				jule::U64 _13213_n1 = _10813_n + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_11017_d)));
				if ((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n=_13213_n1;
			}
			_iter_next_22227a09c:;
			++it;
			goto _iter_begin_22227a09c;
		}
		_iter_end_22227a09c:;
	}
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _21e69629b_parse_uint(jule::Str _14623_s,jule::I64 _14635_base,jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;
	jule::I64 _14714_err;
	std::tie(_14710_un,_14714_err) = _21e5dd028___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if (_14714_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::U64>(_14714_err);
	}
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _21e21d609_parse_int(jule::Str _17222_s,jule::I64 _17230_base,jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	}
	jule::Bool _17813_neg = false;
	if (_17222_s[0LL] == '+') {
		(_17222_s).mut_slice(1LL);
	} else if (_17222_s[0LL] == '-') {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);
	}
	jule::U64 _18714_un;
	jule::I64 _18718_err;
	std::tie(_18714_un,_18718_err) = _21e5dd028___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if ((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	}
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	}
	jule::U64 _1969_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_17245_bit_size - 1LL)))));
	if ((!(_17813_neg)) && (_18714_un >= _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	if (_17813_neg && (_18714_un > _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _21e2e2dd7_eisel_lemire64(jule::U64 _4123_man,jule::I64 _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_21e935309_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::I64 _579_clz = _21e9ecd50_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_579_clz));
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_579_clz)));
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _21ea08234_mul64(_4123_man,_21e290d30_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _21ea08234_mul64(_4123_man,_21e290d30_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_799_msb + 9LLU))));
	_6013_ret_exp2-=static_cast<jule::U64>(1LLU ^ _799_msb);
	if (((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>((_8013_ret_mantissa & 1LLU));
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	}
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_8013_ret_mantissa & 4503599627370495LLU)));
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_21e935309_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _21e393707_eisel_lemire32(jule::U64 _11023_man,jule::I64 _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_21e934b99_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::I64 _1329_clz = _21e9ecd50_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz));
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz)));
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _21ea08234_mul64(_11023_man,_21e290d30_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _21ea08234_mul64(_11023_man,_21e290d30_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1549_msb + 38LLU))));
	_13513_ret_exp2-=static_cast<jule::U64>(1LLU ^ _1549_msb);
	if (((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>((_15513_ret_mantissa & 1LLU));
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	}
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_15513_ret_mantissa & 8388607LLU)));
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	}
	_11058_f = static_cast<jule::F32>(_21e934b99_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _21e42b9c1_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > static_cast<jule::I64>(static_cast<jule::I64>(_4534_s.len()))) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::I64 _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+='a' - 'A';
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_2222a83a5:;
	}
	_iter_end_2222a83a5:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _21e22381d_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::I64 _7213_sign = 1LL;
	jule::I64 _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_2222accc2:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);
				goto _case_begin_2222acd38;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_2222acd38:;
			{
				jule::I64 _8317_case_n = _21e42b9c1_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_21e95aa7c_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_2222acd9e:;
			{
				if ((_21e42b9c1_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_21e957b45_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_2222acc6c:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _21e4eace3_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::I64 _10449_i = jule::I64();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		
		if (_10315_s[_10449_i] == '+') {
			_case_begin_2222b4724:;
			{
				(_10449_i)++;
			}
		}
		else if (_10315_s[_10449_i] == '-') {
			_case_begin_2222b4b75:;
			{
				_10350_neg=true;
				(_10449_i)++;
			}
		}
		_match_end_2222b46be:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::I64 _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_10315_s[_10449_i] == '0')) && (_21e417b44_lower(_10315_s[(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LLU;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::I64 _13013_nd = 0LL;
	jule::I64 _13113_nd_mant = 0LL;
	jule::I64 _13213_dp = 0LL;
	for (; _10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len())); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				
				if (_13413_c == '_') {
					_case_begin_2222ba9b1:;
					{
						goto _iter_next_2222b9e55;
					}
				}
				else if (_13413_c == '.') {
					_case_begin_2222baa38:;
					{
						if (_12813_sawdot) {
							goto _julec_label_loop_end;
						}
						_12813_sawdot=true;
						_13213_dp=_13013_nd;
						goto _iter_next_2222b9e55;
					}
				}
				else if (('0' <= _13413_c) && (_13413_c <= '9')) {
					_case_begin_2222baab0:;
					{
						_12913_sawdigits=true;
						if ((_13413_c == '0') && (_13013_nd == 0LL)) {
							(_13213_dp)--;
							goto _iter_next_2222b9e55;
						}
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=_11813_base;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(_13413_c - '0'));
							(_13113_nd_mant)++;
						} else if (_13413_c != '0') {
							_10425_trunc=true;
						}
						goto _iter_next_2222b9e55;
					}
				}
				else if (((_11813_base == 16LLU) && ('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_21e417b44_lower(_13413_c))))) && (_21e417b44_lower(_13413_c) <= 'f')) {
					_case_begin_2222bab37:;
					{
						_12913_sawdigits=true;
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(((_21e417b44_lower(_13413_c) - 'a') + 10LLU)));
							(_13113_nd_mant)++;
						} else {
							_10425_trunc=true;
						}
						goto _iter_next_2222b9e55;
					}
				}
				_match_end_2222ba8c3:;
			}
			goto _iter_end_2222b9e55;
		}
	_iter_next_2222b9e55:;
	}
	_iter_end_2222b9e55:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if ((_11813_base == 16LLU)) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_21e417b44_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::I64 _19717_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19717_esign=-1LL;
		}
		if (((_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::I64 _20717_e = 0LL;
		for (; (_10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && ((('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')) || (_10315_s[_10449_i] == '_')); (_10449_i)++) {
			{
				if (_10315_s[_10449_i] == '_') {
					goto _iter_next_2222c6758;
				}
				if ((_20717_e < 10000LL)) {
					_20717_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_20717_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_10315_s[_10449_i]))))) - '0');
				}
			}
		_iter_next_2222c6758:;
		}
		_iter_end_2222c6758:;
		_13213_dp+=static_cast<jule::I64>(_20717_e * _19717_esign);
	} else if ((_11813_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _21e32d20d_atof64exact(jule::U64 _48216_mantissa,jule::I64 _48235_exp,jule::Bool _48245_neg) {
	jule::F64 _48258_f = jule::F64();
	jule::Bool _48266_ok = jule::Bool();
	if (((_48216_mantissa >> _21e20c263_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48258_f,_48266_ok);
	}
	_48258_f=static_cast<jule::F64>(static_cast<jule::F64>(_48216_mantissa));
	if (_48245_neg) {
		_48258_f=static_cast<jule::F64>((-(_48258_f)));
	}
	{
		
		if ((_48235_exp == 0LL)) {
			_case_begin_2222d854a:;
			{
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp > 0LL) && (_48235_exp <= 37LL)) {
			_case_begin_2222d85c2:;
			{
				if ((_48235_exp > 22LL)) {
					_48258_f*=_21e2e5eea_F64_POW10[(_48235_exp - 22LL)];
					_48235_exp=22LL;
				}
				if ((_48258_f > 1000000000000000LL) || (_48258_f < -1000000000000000LL)) {
					return std::make_tuple(_48258_f,_48266_ok);
				}
				_48258_f = static_cast<jule::F64>(_48258_f * _21e2e5eea_F64_POW10[_48235_exp]);
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp < 0LL) && (_48235_exp >= -22LL)) {
			_case_begin_2222d8649:;
			{
				_48258_f = static_cast<jule::F64>(jule::div(_48258_f,_21e2e5eea_F64_POW10[(-(_48235_exp))]));
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		_match_end_2222d846d:;
	}
	return std::make_tuple(_48258_f,_48266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _21e5890e5_atof32exact(jule::U64 _51616_mantissa,jule::I64 _51635_exp,jule::Bool _51649_neg) {
	jule::F32 _51662_f = jule::F32();
	jule::Bool _51670_ok = jule::Bool();
	if (((_51616_mantissa >> _21e205a0e_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51662_f,_51670_ok);
	}
	_51662_f=static_cast<jule::F32>(static_cast<jule::F32>(_51616_mantissa));
	if (_51649_neg) {
		_51662_f=static_cast<jule::F32>((-(_51662_f)));
	}
	{
		
		if ((_51635_exp == 0LL)) {
			_case_begin_2222ddd8b:;
			{
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp > 0LL) && (_51635_exp <= 17LL)) {
			_case_begin_2222dde13:;
			{
				if ((_51635_exp > 10LL)) {
					_51662_f*=_21e32d609_F32_POW10[(_51635_exp - 10LL)];
					_51635_exp=10LL;
				}
				if ((_51662_f > 10000000LL) || (_51662_f < -10000000LL)) {
					return std::make_tuple(_51662_f,_51670_ok);
				}
				_51662_f = static_cast<jule::F32>(_51662_f * _21e32d609_F32_POW10[_51635_exp]);
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp < 0LL) && (_51635_exp >= -10LL)) {
			_case_begin_2222dde8a:;
			{
				_51662_f = static_cast<jule::F32>(jule::div(_51662_f,_21e32d609_F32_POW10[(-(_51635_exp))]));
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		_match_end_2222ddcae:;
	}
	return std::make_tuple(_51662_f,_51670_ok);
}



inline std::tuple<jule::F64,jule::I64> _21e6098c4_atof_hex(jule::Str _55213_s,_21e68dda9_FloatInfo& _55222_flt,jule::U64 _55242_mantissa,jule::I64 _55261_exp,jule::Bool _55271_neg,jule::Bool _55282_trunc) {
	jule::I64 _5539_max_exp = ((static_cast<jule::I64>(1LL << _55222_flt._field_expbits) + _55222_flt._field_bias) - 2LL);
	jule::I64 _5549_min_exp = (_55222_flt._field_bias + 1LL);
	_55261_exp+=static_cast<jule::I64>(static_cast<jule::I64>(_55222_flt._field_mantbits));
	while ((_55242_mantissa != 0LLU) && ((_55242_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55222_flt._field_mantbits + 2LLU))))) == 0LLU)) {
		{
			_55242_mantissa<<=1LLU;
			(_55261_exp)--;
		}
	_iter_next_2222e4de7:;
	}
	_iter_end_2222e4de7:;
	if (_55282_trunc) {
		_55242_mantissa|=1LLU;
	}
	while (((_55242_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55222_flt._field_mantbits)) + 2LLU))))) != 0LLU)) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa & 1LLU))));
			(_55261_exp)++;
		}
	_iter_next_2222e6602:;
	}
	_iter_end_2222e6602:;
	while ((_55242_mantissa > 1LLU) && (_55261_exp < static_cast<jule::I64>(static_cast<jule::I64>((_5549_min_exp - 2LL))))) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa & 1LLU))));
			(_55261_exp)++;
		}
	_iter_next_2222e6866:;
	}
	_iter_end_2222e6866:;
	jule::U64 _58413_round = (_55242_mantissa & 3LLU);
	_55242_mantissa>>=2LLU;
	_58413_round|=static_cast<jule::U64>((_55242_mantissa & 1LLU));
	_55261_exp+=2LL;
	if ((_58413_round == 3LLU)) {
		(_55242_mantissa)++;
		if (_55242_mantissa == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55222_flt._field_mantbits)))))) {
			_55242_mantissa>>=1LLU;
			(_55261_exp)++;
		}
	}
	if (((_55242_mantissa >> _55222_flt._field_mantbits) == 0LLU)) {
		_55261_exp=_55222_flt._field_bias;
	}
	jule::I64 _59913_err = static_cast<jule::I64>(0LL);
	if (_55261_exp > _5539_max_exp) {
		_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(1LL << _55222_flt._field_mantbits));
		_55261_exp=static_cast<jule::I64>((_5539_max_exp + 1LL));
		_59913_err=static_cast<jule::I64>(1LL);
	}
	jule::U64 _60613_bits = _55242_mantissa & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits)) - 1LLU))));
	_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55261_exp - _55222_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _55222_flt._field_expbits) - 1LL))))))) << _55222_flt._field_mantbits);
	if (_55271_neg) {
		_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits)) << _55222_flt._field_expbits);
	}
	if (_55222_flt == _21e205a0e_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_21e934b99_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60613_bits))))),_59913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_21e935309_f64_from_bits(_60613_bits)),_59913_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _21e71ae9c_atof32(jule::Str _61711_s) {
	jule::F32 _61721_f = jule::F32();
	jule::I64 _61729_n = jule::I64();
	jule::I64 _61737_err = 0LL;
	{
		jule::F64 _61914_val;
		jule::I64 _61919__n;
		jule::Bool _61923_ok;
		std::tie(_61914_val,_61919__n,_61923_ok) = _21e22381d_special(_61711_s);
		if (_61923_ok) {
			_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_61914_val));
			_61729_n = _61919__n;
			_61737_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61721_f,_61729_n,_61737_err);
		}
	}
	jule::U64 _62510_mantissa;
	jule::I64 _62520_exp;
	jule::Bool _62525_neg;
	jule::Bool _62530_trunc;
	jule::Bool _62537_hex;
	jule::I64 _62542__n;
	jule::Bool _62550_ok;
	std::tie(_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc,_62537_hex,_62542__n,_62550_ok) = _21e4eace3_read_float(_61711_s);
	_61729_n=_62542__n;
	if ((!(_62550_ok))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	if (_62537_hex) {
		jule::F64 _63217_ff = 0LL;
		std::tie(_63217_ff,_61737_err) = _21e6098c4_atof_hex(_61711_s.slice(0LL,_61729_n),_21e205a0e_F32_INFO,_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc);
		_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_63217_ff));
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	{
		if ((!(_62530_trunc))) {
			std::tie(_61721_f,_62550_ok) = _21e5890e5_atof32exact(_62510_mantissa,_62520_exp,_62525_neg);
			if (_62550_ok) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
		std::tie(_61721_f,_62550_ok) = _21e393707_eisel_lemire32(_62510_mantissa,_62520_exp,_62525_neg);
		if (_62550_ok) {
			if ((!(_62530_trunc))) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
			jule::F32 _65421_f_up = 0LL;
			std::tie(_65421_f_up,_62550_ok) = _21e393707_eisel_lemire32(static_cast<jule::U64>((_62510_mantissa + 1LLU)),_62520_exp,_62525_neg);
			if (_62550_ok && (_61721_f == _65421_f_up)) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
	}
	_21ea2ce18_Decimal _66313_d = _21ea2ce18_Decimal();
	if ((!(_21e5a61bc_set(&_66313_d, _61711_s.slice(0LL,_61729_n))))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	jule::U64 _66710_b;
	jule::Bool _66713_ovf;
	std::tie(_66710_b,_66713_ovf) = _21e2516b4_float_bits(&_66313_d, _21e205a0e_F32_INFO);
	_61721_f=static_cast<jule::F32>(_21e934b99_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66710_b))));
	if (_66713_ovf) {
		_61737_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_61721_f,_61729_n,_61737_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _21e7a3a90_atof64(jule::Str _67511_s) {
	jule::F64 _67521_f = jule::F64();
	jule::I64 _67529_n = jule::I64();
	jule::I64 _67537_err = 0LL;
	{
		jule::F64 _67714_val;
		jule::I64 _67719__n;
		jule::Bool _67723_ok;
		std::tie(_67714_val,_67719__n,_67723_ok) = _21e22381d_special(_67511_s);
		if (_67723_ok) {
			_67521_f = _67714_val;
			_67529_n = _67719__n;
			_67537_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67521_f,_67529_n,_67537_err);
		}
	}
	jule::U64 _68310_mantissa;
	jule::I64 _68320_exp;
	jule::Bool _68325_neg;
	jule::Bool _68330_trunc;
	jule::Bool _68337_hex;
	jule::I64 _68342__n;
	jule::Bool _68350_ok;
	std::tie(_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc,_68337_hex,_68342__n,_68350_ok) = _21e4eace3_read_float(_67511_s);
	_67529_n=_68342__n;
	if ((!(_68350_ok))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	if (_68337_hex) {
		std::tie(_67521_f,_67537_err) = _21e6098c4_atof_hex(_67511_s.slice(0LL,_67529_n),_21e20c263_F64_INFO,_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	{
		if ((!(_68330_trunc))) {
			std::tie(_67521_f,_68350_ok) = _21e32d20d_atof64exact(_68310_mantissa,_68320_exp,_68325_neg);
			if (_68350_ok) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
		std::tie(_67521_f,_68350_ok) = _21e2e2dd7_eisel_lemire64(_68310_mantissa,_68320_exp,_68325_neg);
		if (_68350_ok) {
			if ((!(_68330_trunc))) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
			jule::F64 _71121_f_up = 0LL;
			std::tie(_71121_f_up,_68350_ok) = _21e2e2dd7_eisel_lemire64(static_cast<jule::U64>((_68310_mantissa + 1LLU)),_68320_exp,_68325_neg);
			if (_68350_ok && (_67521_f == _71121_f_up)) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
	}
	_21ea2ce18_Decimal _72013_d = _21ea2ce18_Decimal();
	if ((!(_21e5a61bc_set(&_72013_d, _67511_s.slice(0LL,_67529_n))))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	jule::U64 _72410_b;
	jule::Bool _72413_ovf;
	std::tie(_72410_b,_72413_ovf) = _21e2516b4_float_bits(&_72013_d, _21e20c263_F64_INFO);
	_67521_f=static_cast<jule::F64>(_21e935309_f64_from_bits(_72410_b));
	if (_72413_ovf) {
		_67537_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_67521_f,_67529_n,_67537_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _21e6b41a9_parse_float_prefix(jule::Str _73223_s,jule::I64 _73231_bit_size) {
	if ((_73231_bit_size == 32LL)) {
		jule::F32 _73414_f;
		jule::I64 _73417_n;
		jule::I64 _73420_err;
		std::tie(_73414_f,_73417_n,_73420_err) = _21e71ae9c_atof32(_73223_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73414_f)),_73417_n,_73420_err);
	}
	jule::F64 _73810_f;
	jule::I64 _73813_n;
	jule::I64 _73816_err;
	std::tie(_73810_f,_73813_n,_73816_err) = _21e7a3a90_atof64(_73223_s);
	return std::make_tuple(_73810_f,_73813_n,_73816_err);
}



inline jule::Exceptional<jule::F64> _21e4567a9_parse_float(jule::Str _76620_s,jule::I64 _76628_bit_size) {
	jule::F64 _76710_f;
	jule::I64 _76713_n;
	jule::I64 _76716_err;
	std::tie(_76710_f,_76713_n,_76716_err) = _21e6b41a9_parse_float_prefix(_76620_s,_76628_bit_size);
	if ((_76713_n != static_cast<jule::I64>(static_cast<jule::I64>(_76620_s.len()))) && ((_76716_err == static_cast<jule::I64>(0LL)) || (_76716_err != static_cast<jule::I64>(2LL)))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	}
	if (_76716_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::F64>(_76716_err);
	}
	return jule::Exceptional<jule::F64>(jule::Any(),_76710_f);
}



inline void _21e469019_ryu_ftoa_fixed32(_21e223b3c_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::I64 _4958_exp,jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	}
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	}
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _6213_e2 = _4958_exp;
	jule::I64 _639_b = _21ea053c9_len32(_4947_mant);
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>(static_cast<jule::U64>(25LL - _639_b));
		_6213_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_639_b))) - 25LL));
	}
	jule::I64 _749_q = (((-(_21e205316_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::I64 _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _21ea2c489_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _21ea2c764_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) || ((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && (!(_8129_d0)))) || (((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU));
	} else {
		_9913_round_up=((_9713_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))) == 1LLU);
	}
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	}
	_21e21e572_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _21e65910a_ryu_ftoa_fixed64(_21e223b3c_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::I64 _12358_exp,jule::I64 _12368_prec) {
	if ((_12368_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:125:9"));;
	}
	if ((_12347_mant == 0LLU)) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _13313_e2 = _12358_exp;
	jule::I64 _1349_b = _21ea056d7_len64(_12347_mant);
	if ((_1349_b < 55LL)) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(55LL - _1349_b))));
		_13313_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1349_b))) - 55LL));
	}
	jule::I64 _1489_q = (((-(_21e205316_mul_by_log2_log10(static_cast<jule::I64>((_13313_e2 + 54LL))))) + _12368_prec) - 1LL);
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::I64 _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _21ea2c5ee_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if ((_15518_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:157:9"));;
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _21ea2c764_divisible_by_pow5(_12347_mant,static_cast<jule::I64>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::U64 _1689_extra = static_cast<jule::U64>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>(((1LL << _1689_extra) - 1LL));
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) || ((_17113_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) && (!(_15529_d0)))) || (((_17113_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) && _15529_d0) && ((_15514_di & 1LLU) == 1LLU));
	} else {
		_17313_round_up=((_17113_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))) == 1LLU);
	}
	if ((_17113_dfrac != 0LLU)) {
		_15529_d0=false;
	}
	_21e21e572_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _21e21e572_format_decimal(_21e223b3c_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::I64 _20490_prec) {
	jule::U64 _2059_max = _21e46917e_U64_POW10[_20490_prec];
	jule::I64 _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = (_20445_m / 10LLU);
			jule::U64 _20817_b = (_20445_m % 10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple((_20445_m / 10LLU),(_20445_m % 10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if ((_20817_b > 5LLU)) {
				_20474_round_up=true;
			} else if ((_20817_b < 5LLU)) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LLU) == 1LLU);
			}
			if ((_20817_b != 0LLU)) {
				_20457_trunc=true;
			}
		}
	_iter_next_222338ab7:;
	}
	_iter_end_222338ab7:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m/=10LLU;
		(_20613_trimmed)++;
	}
	jule::U64 _23313_n = static_cast<jule::U64>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20490_prec));
	jule::U64 _23513_v = _20445_m;
	while ((_23513_v >= 100LLU)) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if (((_23513_v >> 32LLU) == 0LLU)) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23513_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23513_v) % 100LL))));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>((_23513_v / 100LLU)),static_cast<jule::U64>((_23513_v % 100LL)));
			}
			_23313_n-=2LLU;
			_20424_d._field_d[static_cast<jule::I64>((_23313_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23817_v2) + 1LLU))]);
			_20424_d._field_d[static_cast<jule::I64>((_23313_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23817_v2) + 0LLU))]);
			_23513_v=_23717_v1;
		}
	_iter_next_22233c22a:;
	}
	_iter_end_22233c22a:;
	if ((_23513_v > 0LLU)) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::I64>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23513_v) + 1LLU))]);
	}
	if ((_23513_v >= 10LLU)) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::I64>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[(_20424_d._field_nd - 1LL)] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_22234374d:;
	}
	_iter_end_22234374d:;
	_20424_d._field_dp=static_cast<jule::I64>(_20424_d._field_nd + _20613_trimmed);
}



inline void _21e21e6d7_ryu_ftoa_shortest(_21e223b3c_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::I64 _26559_exp,_21e68dda9_FloatInfo& _26570_flt) {
	if ((_26548_mant == 0LLU)) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_21e9ee6ae_trailing_zeros64(_26548_mant) >= static_cast<jule::I64>(static_cast<jule::I64>((-(_26559_exp)))))) {
		_26548_mant>>=static_cast<jule::U64>(static_cast<jule::U64>((-(_26559_exp))));
		_21e2aaa09_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::I64 _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _21e2aa894_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if ((_27726_e2 == 0LL)) {
		_21e2aaa09_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::I64 _2839_q = (_21e205316_mul_by_log2_log10(static_cast<jule::I64>((-(_27726_e2)))) + 1LL);
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _21e205a0e_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _21ea2c489_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27710_ml)),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _21ea2c489_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27714_mc)),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _21ea2c489_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27718_mu)),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29417_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29517_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29617_du32)));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _21ea2c5ee_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _21ea2c5ee_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _21ea2c5ee_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if ((_27726_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:307:9"));;
	}
	if ((_2839_q > 55LL)) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_21ea2c764_divisible_by_pow5(_27710_ml,static_cast<jule::I64>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_21ea2c764_divisible_by_pow5(_27714_mc,static_cast<jule::I64>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_21ea2c764_divisible_by_pow5(_27718_mu,static_cast<jule::I64>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::U64 _3299_extra = static_cast<jule::U64>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>(((1LL << _3299_extra) - 1LL));
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LLU);
	if (_29213_du0 && (_33613_fracu == 0LLU)) {
		_34213_uok=((_26548_mant & 1LLU) == 0LLU);
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))))) || ((_33413_fracc == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))))) && ((_28813_dc & 1LLU) == 1LLU));
	} else {
		_35113_cup=((_33413_fracc >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))) == 1LLU);
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LLU)) && ((_26548_mant & 1LLU) == 0LLU);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LLU);
	_21e2aaa09_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::I64 _21e205316_mul_by_log2_log10(jule::I64 _38322_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_38322_x * 78913LL)))) >> 18LL));
}



inline jule::I64 _21e20547b_mul_by_log10_log2(jule::I64 _39322_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_39322_x * 108853LL)))) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _21e2aa894_compute_bounds(jule::U64 _40119_mant,jule::I64 _40130_exp,_21e68dda9_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::I64 _40274_e2 = jule::I64();
	if ((_40119_mant != static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _40218_flt._field_mantbits))) || (_40130_exp == static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_40218_flt._field_bias + 1LL))) - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_40218_flt._field_mantbits))))))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant)) - 1LLU)),static_cast<jule::U64>(2LLU * _40119_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant)) + 1LLU)));
		_40274_e2=static_cast<jule::I64>((_40130_exp - 1LL));
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant)) - 1LLU)),static_cast<jule::U64>(4LLU * _40119_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant)) + 2LLU)));
		_40274_e2=static_cast<jule::I64>((_40130_exp - 2LL));
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _21e2aaa09_ryu_digits(_21e223b3c_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _21ea2c8c9_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _21ea2c8c9_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _21ea2c8c9_divmod1e9(_41563_upper);
	if ((_41810_uhi == 0LLU)) {
		_21ea2c324_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if ((_41619_llo != 0LLU)) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LLU);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_21ea2c324_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::U64 _43417_n = static_cast<jule::U64>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while ((_43517_v > 0LLU)) {
			{
				jule::U32 _43718_v1 = (_43517_v / 10LLU);
				jule::U32 _43722_v2 = (_43517_v % 10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple((_43517_v / 10LLU),(_43517_v % 10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::I64>(_43417_n)]=static_cast<jule::U8>(static_cast<jule::U8>(_43722_v2 + '0'));
			}
		_iter_next_222369862:;
		}
		_iter_end_222369862:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::I64>(_43417_n));
		_41520_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(9LL - _43417_n));
		_21ea2c324_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::I64>((_41520_d._field_nd + 8LL)));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[(_41520_d._field_nd - 1LL)] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_222369b1a:;
	}
	_iter_end_222369b1a:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_22236d4ae:;
	}
	_iter_end_22236d4ae:;
}



inline void _21ea2c324_ryu_digits32(_21e223b3c_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::I64 _46166_endindex) {
	if ((_46121_upper == 0LLU)) {
		_46022_d._field_dp=static_cast<jule::I64>((_46166_endindex + 1LL));
		return;
	}
	jule::I64 _46613_trimmed = 0LL;
	jule::I64 _46913_c_next_digit = 0LL;
	while ((_46121_upper > 0LLU)) {
		{
			jule::U32 _47613_l = ((_46043_lower + 9LLU) / 10LLU);
			jule::U32 _47718_c = (_46059_central / 10LLU);
			jule::U32 _47725_cdigit = (_46059_central % 10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple((_46059_central / 10LLU),(_46059_central % 10LL));
			jule::U32 _47813_u = (_46121_upper / 10LLU);
			if (_47613_l > _47813_u) {
				goto _iter_end_2223712a3;
			}
			if ((_47613_l == static_cast<jule::U32>(static_cast<jule::U32>((_47718_c + 1LLU)))) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LLU;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47725_cdigit));
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_2223712a3:;
	}
	_iter_end_2223712a3:;
	if ((_46613_trimmed > 0LL)) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LLU) == 1LLU));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::I64 _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = (_51713_v / 100LLU);
			jule::U32 _52018_v2 = (_51713_v % 100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple((_51713_v / 100LLU),(_51713_v % 100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _52018_v2) + 1LLU))]);
			_46022_d._field_d[(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _52018_v2) + 0LLU))]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_222377c7c:;
	}
	_iter_end_222377c7c:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(static_cast<jule::U8>(_51713_v + '0'));
	}
	_46022_d._field_nd=static_cast<jule::I64>((_46166_endindex + 1LL));
	_46022_d._field_dp=static_cast<jule::I64>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _21ea2c489_mult64bit_pow10(jule::U32 _54220_m,jule::I64 _54232_e2,jule::I64 _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::I64 _54262_resE = jule::I64();
	jule::Bool _54273_exact = jule::Bool();
	if ((_54241_q == 0LL)) {
		_54251_resM = static_cast<jule::U32>((_54220_m << 6LLU));
		_54262_resE = static_cast<jule::I64>((_54232_e2 - 6LL));
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:549:9"));;
	}
	jule::U64 _55113_pow = _21e290d30_DETAILED_POWS_OF_TEN[(_54241_q - -348LL)][1LL];
	if ((_54241_q < 0LL)) {
		_55113_pow+=1LLU;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _21ea08234_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_54220_m)),_55113_pow);
	_54232_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_21e20547b_mul_by_log10_log2(_54241_q))) - 63LL))) + 57LL));
	_54251_resM = static_cast<jule::U32>(static_cast<jule::U32>((_55610_hi << 7LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_55614_lo >> 57LLU)))));
	_54262_resE = _54232_e2;
	_54273_exact = ((_55614_lo << 7LLU) == 0LLU);
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _21ea2c5ee_mult128bit_pow10(jule::U64 _57021_m,jule::I64 _57033_e2,jule::I64 _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::I64 _57063_resE = jule::I64();
	jule::Bool _57074_exact = jule::Bool();
	if ((_57042_q == 0LL)) {
		_57052_resM = static_cast<jule::U64>((_57021_m << 8LLU));
		_57063_resE = static_cast<jule::I64>((_57033_e2 - 8LL));
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:577:9"));;
	}
	jule::Array<jule::U64,2> _57913_pow = _21e290d30_DETAILED_POWS_OF_TEN[(_57042_q - -348LL)];
	if ((_57042_q < 0LL)) {
		_57913_pow[0LL]+=1LLU;
	}
	_57033_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_21e20547b_mul_by_log10_log2(_57042_q))) - 127LL))) + 119LL));
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _21ea08234_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _21ea08234_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _21ea0662d_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_58814_h1 << 9LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_58910_mid >> 55LLU))));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LLU) == 0LLU) && (_58714_l0 == 0LLU);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _21ea2c764_divisible_by_pow5(jule::U64 _59426_m,jule::I64 _59434_k) {
	if ((_59426_m == 0LLU)) {
		return true;
	}
	jule::I64 _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (((_59426_m % 5LL) != 0LLU)) {
				return false;
			}
			_59426_m/=5LLU;
		}
	_iter_next_22238a50e:;
	}
	_iter_end_22238a50e:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _21ea2c8c9_divmod1e9(jule::U64 _61014_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_61014_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_61014_x % 1000000000LL))));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _21ea08234_mul64(static_cast<jule::U64>((_61014_x >> 1LLU)),9903520314283042200LLU);
	jule::U64 _6169_q = (_61510_hi >> 28LLU);
	return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_6169_q)),static_cast<jule::U32>(static_cast<jule::U32>(_61014_x - static_cast<jule::U64>(static_cast<jule::U64>((_6169_q * 1000000000LL))))));
}



inline void _21ea2db2d_trim(_21ea2ce18_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[(_27514_a._field_nd - 1LL)] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_22238e7cc:;
	}
	_iter_end_22238e7cc:;
	if ((_27514_a._field_nd == 0LL)) {
		_27514_a._field_dp=0LL;
	}
}



inline void _21ea2dc93_right_shift(_21ea2ce18_Decimal& _28521_a,jule::U64 _28533_k) {
	jule::I64 _28613_r = 0LL;
	jule::I64 _28713_w = 0LL;
	jule::U64 _29013_n = 0LLU;
	for (; ((_29013_n >> _28533_k) == 0LLU); (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if ((_29013_n == 0LLU)) {
					_28521_a._field_nd=0LL;
					return;
				}
				while (((_29013_n >> _28533_k) == 0LLU)) {
					{
						_29013_n=static_cast<jule::U64>((_29013_n * 10LLU));
						(_28613_r)++;
					}
				_iter_next_222393836:;
				}
				_iter_end_222393836:;
				goto _iter_end_222391d62;
			}
			jule::U64 _30413_c = static_cast<jule::U64>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_29013_n * 10LLU))) + _30413_c)) - '0');
		}
	_iter_next_222391d62:;
	}
	_iter_end_222391d62:;
	_28521_a._field_dp-=static_cast<jule::I64>((_28613_r - 1LL));
	jule::U64 _3099_mask = static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LL << _28533_k))) - 1LLU));
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::U64 _31313_c = static_cast<jule::U64>(_28521_a._field_d[_28613_r]);
			jule::U64 _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_31413_dig + '0'));
			(_28713_w)++;
			_29013_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_29013_n * 10LLU))) + _31313_c)) - '0');
		}
	_iter_next_222395c23:;
	}
	_iter_end_222395c23:;
	while ((_29013_n > 0LLU)) {
		{
			jule::U64 _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if ((_28713_w < 800LL)) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_32313_dig + '0'));
				(_28713_w)++;
			} else if ((_32313_dig > 0LLU)) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::U64>((_29013_n * 10LLU));
		}
	_iter_next_222397362:;
	}
	_iter_end_222397362:;
	_28521_a._field_nd=_28713_w;
	_21ea2db2d_trim(_28521_a);
}



inline jule::Bool _21ea2de08_prefix_is_less_than(jule::Array<jule::U8,800> _33924_b,jule::I64 _33938_end,jule::Str _33948_s) {
	jule::I64 _34013_i = 0LL;
	for (; _34013_i < static_cast<jule::I64>(static_cast<jule::I64>(_33948_s.len())); (_34013_i)++) {
		{
			if (_34013_i >= _33938_end) {
				return true;
			}
			if (_33924_b[_34013_i] != _33948_s[_34013_i]) {
				return _33924_b[_34013_i] < _33948_s[_34013_i];
			}
		}
	_iter_next_22239b355:;
	}
	_iter_end_22239b355:;
	return false;
}



inline void _21ea2e06d_left_shift(_21ea2ce18_Decimal& _35320_a,jule::U64 _35332_k) {
	jule::I64 _35413_delta = _21e4262d4_LEFTCHEATS[static_cast<jule::I64>(_35332_k)]._field_delta;
	if (_21ea2de08_prefix_is_less_than(_35320_a._field_d,_35320_a._field_nd,_21e4262d4_LEFTCHEATS[static_cast<jule::I64>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::I64 _35913_r = _35320_a._field_nd;
	jule::I64 _36013_w = _35320_a._field_nd + _35413_delta;
	jule::U64 _36313_n = 0LLU;
	(_35913_r)--;
	for (; (_35913_r >= 0LL); (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_35320_a._field_d[_35913_r]))) - '0'))) << _35332_k);
			jule::U64 _36713_quo = (_36313_n / 10LLU);
			jule::U64 _36813_rem = _36313_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _36713_quo));
			(_36013_w)--;
			if ((_36013_w < 800LL)) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_36813_rem + '0'));
			} else if ((_36813_rem != 0LLU)) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_22239ee5d:;
	}
	_iter_end_22239ee5d:;
	while ((_36313_n > 0LLU)) {
		{
			jule::U64 _38013_quo = (_36313_n / 10LLU);
			jule::U64 _38113_rem = _36313_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _38013_quo));
			(_36013_w)--;
			if ((_36013_w < 800LL)) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_38113_rem + '0'));
			} else if ((_38113_rem != 0LLU)) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_2223a347d:;
	}
	_iter_end_2223a347d:;
	_35320_a._field_nd+=_35413_delta;
	if ((_35320_a._field_nd >= 800LL)) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_21ea2db2d_trim(_35320_a);
}



inline jule::Bool _21ea2e1d3_should_round_up(_21ea2ce18_Decimal& _40021_a,jule::I64 _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (((_40021_a._field_d[(_40033_nd - 1LL)] - '0') & 1LL) != 0LLU);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _21ea2e502_fmt_uint(jule::U64 _6217_i,jule::I64 _6225_base) {
	if ((true && (_6217_i < 100LLU)) && (_6225_base == 10LL)) {
		return _21ea2e942_small(static_cast<jule::I64>(static_cast<jule::I64>(_6217_i)));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _21ea2ec1c_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _21ea2e667_fmt_int(jule::I64 _7316_i,jule::I64 _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _21ea2e942_small(static_cast<jule::I64>(static_cast<jule::I64>(_7316_i)));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _21ea2ec1c_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7316_i)),_7324_base,(_7316_i < 0LL),false);
	return _7713_s;
}



inline jule::Str _21ea2e7cc_itoa(jule::I64 _8213_i) {
	return _21ea2e667_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8213_i)),10LL);
}



inline jule::Str _21ea2e942_small(jule::I64 _8710_i) {
	if ((_8710_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8710_i,(_8710_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8710_i << 1LLU,((_8710_i << 1LLU) + 2LL));
}



inline jule::Bool _21ea2eaa7_is_power_of_two(jule::I64 _9420_x) {
	return ((_9420_x & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_9420_x - 1LL))))) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _21ea2ec1c_fmt_bits(jule::Slice<jule::U8> _10317_dst,jule::U64 _10334_u,jule::I64 _10342_base,jule::Bool _10353_neg,jule::Bool _10364_append_) {
	jule::Slice<jule::U8> _10381_d = jule::Slice<jule::U8>();
	jule::Str _10392_s = jule::Str();
	if ((_10342_base < 2LL) || (_10342_base > 36LL)) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:105:9"));;
	}
	jule::Slice<jule::U8> _10913_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::I64 _11013_i = _10913_a.len();
	if (_10353_neg) {
		_10334_u=static_cast<jule::U64>((-(_10334_u)));
	}
	if ((_10342_base == 10LL)) {
		
		jule::U64 _15117_us = static_cast<jule::U64>(_10334_u);
		while ((_15117_us >= 100LLU)) {
			{
				jule::U64 _15317_is = (_15117_us % 100LL) << 1LLU;
				_15117_us/=100LLU;
				_11013_i-=2LL;
				_10913_a[(_11013_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15317_is + 1LLU))]);
				_10913_a[(_11013_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15317_is + 0LLU))]);
			}
		_iter_next_2223b4626:;
		}
		_iter_end_2223b4626:;
		jule::U64 _16113_is = _15117_us << 1LLU;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_16113_is + 1LLU))]);
		if ((_15117_us >= 10LLU)) {
			(_11013_i)--;
			_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_16113_is)]);
		}
	} else if (_21ea2eaa7_is_power_of_two(_10342_base)) {
		jule::U64 _17613_shift = (static_cast<jule::U64>(_21e9ed8de_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10342_base)))) & 7LLU);
		jule::U64 _17713_b = static_cast<jule::U64>(_10342_base);
		jule::U64 _17813_m = (static_cast<jule::U64>(_10342_base) - 1LLU);
		while (_10334_u >= _17713_b) {
			{
				(_11013_i)--;
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u) & _17813_m)]);
				_10334_u>>=_17613_shift;
			}
		_iter_next_2223be114:;
		}
		_iter_end_2223be114:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u))]);
	} else {
		jule::U64 _18913_b = static_cast<jule::U64>(_10342_base);
		while (_10334_u >= _18913_b) {
			{
				(_11013_i)--;
				jule::U64 _19517_q = jule::div(_10334_u,_18913_b);
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u - static_cast<jule::U64>(static_cast<jule::U64>(_19517_q * _18913_b))))]);
				_10334_u=_19517_q;
			}
		_iter_next_2223c1842:;
		}
		_iter_end_2223c1842:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u))]);
	}
	if (_10353_neg) {
		(_11013_i)--;
		_10913_a[_11013_i]='-';
	}
	if (_10364_append_) {
		_10381_d=jule::append(_10317_dst,_10913_a.slice(_11013_i));
		return std::make_tuple(_10381_d,_10392_s);
	}
	_10392_s=static_cast<jule::Str>(_10913_a.slice(_11013_i));
	return std::make_tuple(_10381_d,_10392_s);
}



inline void _21eaa7d50_lshift_unsig(_21ea9d450_Const& _56722_c,_21ea9d450_Const& _56733_x) {
	jule::U64 _5689_l = _21eaa09d5_as_u64(&_56722_c);
	jule::U64 _5699_r = _21eaa09d5_as_u64(&_56733_x);
	_21eaa13ed_set_u64(&_56722_c, static_cast<jule::U64>(_5689_l << _5699_r));
}



inline void _21eaa81e6_rshift_unsig(_21ea9d450_Const& _57322_c,_21ea9d450_Const& _57333_x) {
	jule::U64 _5749_l = _21eaa09d5_as_u64(&_57322_c);
	jule::U64 _5759_r = _21eaa09d5_as_u64(&_57333_x);
	_21eaa13ed_set_u64(&_57322_c, static_cast<jule::U64>(_5749_l >> _5759_r));
}



inline jule::Str _21eb1ea87_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_222465ab2:;
			{
				return _21eb1e559_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_222465b28:;
			{
				return _21eb1e67a_SYS_UINT;
			}
		}
		else {
			_case_begin_222461904:;
			{
				return _4521_kind;
			}
		}
		_match_end_222461be0:;
	}
}



inline jule::I64 _21eb1ed2e_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_2224678d8:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_22246794e:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_22246750e:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_222467575:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_2224675ec:;
			{
				return _21eb1e438_BIT_SIZE;
			}
		}
		else {
			_case_begin_2224611c8:;
			{
				return -1LL;
			}
		}
		_match_end_222467289:;
	}
}



inline jule::Str _21eb2015e_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_222469896:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_2224699a6:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_222469a1c:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_222469698:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_222468202:;
			{
				return jule::Str();
			}
		}
		_match_end_22246917b:;
	}
}



inline jule::Str _21eb2046c_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_22246ad92:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_22246aea2:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_22246b018:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22246ab94:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_22246a38b:;
			{
				return jule::Str();
			}
		}
		_match_end_22246a930:;
	}
}



inline jule::Str _21eb2077a_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_22246c338:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22246c39e:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_22246b887:;
			{
				return jule::Str();
			}
		}
		_match_end_22246be2b:;
	}
}



inline jule::Bool _21eb214c3_check_bit_float(jule::Str _15024_val,jule::I64 _15034_bit) {
	({
		auto except = _21e4567a9_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _21eb217d1_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if ((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0)) {
			_case_begin_2224723d7:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_222472c89:;
			{
				return 64LL;
			}
		}
		_match_end_222472bbd:;
	}
}



inline jule::I64 _21eb21ade_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if ((-128LL <= _17623_x) && (_17623_x <= 127LL)) {
			_case_begin_222474197:;
			{
				return 8LL;
			}
		}
		else if ((-32768LL <= _17623_x) && (_17623_x <= 32767LL)) {
			_case_begin_22247420d:;
			{
				return 16LL;
			}
		}
		else if ((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL)) {
			_case_begin_2224742da:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_222473839:;
			{
				return 64LL;
			}
		}
		_match_end_222474032:;
	}
}



inline jule::I64 _21eb21dec_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_22247641e:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_222476485:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_222476562:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_2224761dd:;
			{
				return 64LL;
			}
		}
		_match_end_2224760de:;
	}
}



inline void _21eb22095_update_target(void) {
	{
		{
			auto &_match_expr{ _21c3828a2_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_2224765c8:;
				{
					_21eb1e438_BIT_SIZE=64LL;
					_21eb1e559_SYS_INT=jule::Str("i64", 3);
					_21eb1e67a_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_2224775a7:;
				{
					_21eb1e438_BIT_SIZE=32LL;
					_21eb1e559_SYS_INT=jule::Str("i32", 3);
					_21eb1e67a_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_222477a80:;
		}
	}
}



inline void _21eb2223d_init(void) {
	_21eb22095_update_target();
}



inline jule::F64 _21eb24a59_min(jule::Str _4716_k) {
	_4716_k=_21eb1ea87_real_kind_of(_4716_k);
	{
		auto &_match_expr{ _4716_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_22247ab60:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22247a940:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22247a9a6:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22247aa1c:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22247a797:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22247a80d:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_222477266:;
			{
				return 0LL;
			}
		}
		_match_end_222477de3:;
	}
}



inline jule::F64 _21eb24dab_max(jule::Str _6916_k) {
	_6916_k=_21eb1ea87_real_kind_of(_6916_k);
	{
		auto &_match_expr{ _6916_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_22247c920:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22247c986:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22247c9ec:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22247c777:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_22247c7dd:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_22247c854:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_22247c3c0:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_22247c436:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22247c49c:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22247c513:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_22247a423:;
			{
				return 0LL;
			}
		}
		_match_end_22247b3e1:;
	}
}



inline jule::Bool _21eb25384_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _21eb256d6_is_i16_compatible(jule::Str _1130_k) {
	return (_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3));
}



inline jule::Bool _21eb259e4_is_i32_compatible(jule::Str _1730_k) {
	return (((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2));
}



inline jule::Bool _21eb25d46_is_i64_compatible(jule::Str _2530_k) {
	return (((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3));
}



inline jule::Bool _21eb26154_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _21eb26462_is_u16_compatible(jule::Str _3830_k) {
	return (_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3));
}



inline jule::Bool _21eb26770_is_u32_compatible(jule::Str _4330_k) {
	return ((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3));
}



inline jule::Bool _21eb26b16_is_u64_compatible(jule::Str _5030_k) {
	return (((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3));
}



inline jule::Bool _21eb26e24_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _21eb27232_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _21eb2761c_types_are_compatible(jule::Str _7033_k1,jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_222486d7a:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_222486de1:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_222486eac:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_222487023:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_222486990:;
			{
				return _21eb25384_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_222486a06:;
			{
				return _21eb256d6_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_222486a6c:;
			{
				return _21eb259e4_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_222486ad3:;
			{
				return _21eb25d46_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_2224870cd:;
			{
				return _21eb26154_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_222487144:;
			{
				return _21eb26462_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2224871aa:;
			{
				return _21eb26770_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_222487221:;
			{
				return _21eb26b16_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_222487287:;
			{
				return _21eb26e24_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_2224872ed:;
			{
				return _21eb27232_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_222487375:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_2224873ec:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_222480615:;
			{
				return false;
			}
		}
		_match_end_22248057c:;
	}
}



inline jule::Bool _21eb2792a_is_i16_greater(jule::Str _10927_k) {
	return (_10927_k == jule::Str("i8", 2));
}



inline jule::Bool _21eb27c38_is_i32_greater(jule::Str _11427_k) {
	return (_11427_k == jule::Str("i8", 2)) || (_11427_k == jule::Str("i16", 3));
}



inline jule::Bool _21eb28046_is_i64_greater(jule::Str _11927_k) {
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _21eb28354_is_u16_greater(jule::Str _12627_k) {
	return (_12627_k == jule::Str("u8", 2));
}



inline jule::Bool _21eb28783_is_u32_greater(jule::Str _13127_k) {
	return (_13127_k == jule::Str("u8", 2)) || (_13127_k == jule::Str("u16", 3));
}



inline jule::Bool _21eb28a91_is_u64_greater(jule::Str _13727_k) {
	return ((_13727_k == jule::Str("u8", 2)) || (_13727_k == jule::Str("u16", 3))) || (_13727_k == jule::Str("u32", 3));
}



inline jule::Bool _21eb28d9e_is_f32_greater(jule::Str _14423_k) {
	return (_14423_k != jule::Str("f64", 3));
}



inline jule::Bool _21eb291ac_is_f64_greater(jule::Str _14923_k) {
	return true;
}



inline jule::Bool _21eb29597_is_greater(jule::Str _15423_k1,jule::Str _15432_k2) {
	{
		auto &_match_expr{ _15423_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_222491c97:;
			{
				return _21eb2aac6_is_sig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_222491d0d:;
			{
				return _21eb2ae28_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_2224919bc:;
			{
				return _21eb2ae28_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_222491a33:;
			{
				return _21eb2792a_is_i16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_222491a99:;
			{
				return _21eb27c38_is_i32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_2224917d0:;
			{
				return _21eb28046_is_i64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_222491846:;
			{
				return _21eb28354_is_u16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2224918ac:;
			{
				return _21eb28783_is_u32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_222491923:;
			{
				return _21eb28a91_is_u64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_222491db8:;
			{
				return _21eb28d9e_is_f32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_222491e2e:;
			{
				return _21eb291ac_is_f64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_222491e95:;
			{
				return true;
			}
		}
		else {
			_case_begin_2224914a0:;
			{
				return false;
			}
		}
		_match_end_222491538:;
	}
}



inline jule::Bool _21eb2aac6_is_sig_int(jule::Str _2723_k) {
	return ((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3));
}



inline jule::Bool _21eb2ae28_is_unsig_int(jule::Str _3625_k) {
	return (((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7));
}



inline jule::Bool _21eb2b236_is_int(jule::Str _4615_k) {
	return _21eb2aac6_is_sig_int(_4615_k) || _21eb2ae28_is_unsig_int(_4615_k);
}



inline jule::Bool _21eb2b588_is_float(jule::Str _5117_k) {
	return (_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3));
}



inline jule::Bool _21eb2b896_is_num(jule::Str _5615_k) {
	return _21eb2b236_is_int(_5615_k) || _21eb2b588_is_float(_5615_k);
}



inline jule::Bool _21eb7ee5a_is_ascii(jule::I32 _1017_r) {
	
	return (_1017_r <= 127LL);
}



inline jule::I32 _21eb80444_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::I64 _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_21eba3d08_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _2368b6262_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _21eba32ad_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _21eba3610_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::I64 _4813_i = 0LL;
	while (_4813_i < static_cast<jule::I64>(static_cast<jule::I64>(_4215_bytes.len()))) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_21eba41e3_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::I64 _5421_size;
				std::tie(_5418_r,_5421_size) = _2368b6262_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_2368b784b_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_2224a2109:;
	}
	_iter_end_2224a2109:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _21eba391d_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_2224a6251:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_2224a6e99:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_2224a7010:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_2224a7076:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_2224a70dc:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_2224a7164:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_2224a71db:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_2224a7263:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_2224a72da:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_2224a7362:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_2224a6d78:;
	}
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _21eba3d08_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::I64& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _21eba391d_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_8510_b));
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_2224ace8e:;
			{
				
				jule::I32 _9513_r = static_cast<jule::I32>(({
					auto except = _21e69629b_parse_uint(static_cast<jule::Str>(_8422_bytes.slice((_8442_i + 1LL),(_8442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:95:22"));
					(except.result);
				}));
				_8442_i+=5LL;
				return _9513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2224ac6ca:;
			{
				
				jule::I32 _10013_r = static_cast<jule::I32>(({
					auto except = _21e69629b_parse_uint(static_cast<jule::Str>(_8422_bytes.slice((_8442_i + 1LL),(_8442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:100:22"));
					(except.result);
				}));
				_8442_i+=9LL;
				return _10013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_2224ac543:;
			{
				
				jule::Slice<jule::U8> _10513_seq = _8422_bytes.slice((_8442_i + 1LL),(_8442_i + 3LL));
				_8442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _21e69629b_parse_uint(static_cast<jule::Str>(_10513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:107:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_2224abe7c:;
			{
				
				jule::Slice<jule::U8> _11013_seq = _8422_bytes.slice(_8442_i,(_8442_i + 3LL));
				_8442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _21e69629b_parse_uint(static_cast<jule::Str>(_11013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:112:18"));
					(except.result);
				})));
			}
		}
		_match_end_2224ab531:;
	}
}



inline jule::Slice<jule::U8> _21eba41e3_str_esq_seq(jule::Slice<jule::U8> _11616_bytes,jule::I64& _11636_i) {
	jule::I32 _1179_r = _21eba3d08_rune_from_esq_seq(_11616_bytes,_11636_i);
	if ((_1179_r <= 255LL)) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1179_r)))});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1179_r));
}



inline jule::I64 _21ec7e675_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;
	while (_1013_i < static_cast<jule::I64>(static_cast<jule::I64>(_924_bytes.len()))) {
		{
			jule::I32 _1214_r;
			jule::I64 _1217_size;
			std::tie(_1214_r,_1217_size) = _2368b6262_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_2224deda0:;
	}
	_iter_end_2224deda0:;
	return -1LL;
}



inline jule::Slice<jule::U8> _21ec5d6ed_get_format_range(jule::I64& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;
	jule::I64 _2813_braces = 0LL;
	while (_2630_i < static_cast<jule::I64>(static_cast<jule::I64>(_2643_bytes.len()))) {
		{
			jule::I32 _3014_r;
			jule::I64 _3017_size;
			std::tie(_3014_r,_3017_size) = _2368b6262_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_2224e32b0:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_2224e347a:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						}
					}
				}
				_match_end_2224e3425:;
			}
		}
	_iter_next_2224e248a:;
	}
	_iter_end_2224e248a:;
	return nullptr;
}



inline jule::Slice<jule::U8> _21ec69dd0_fmt_by_default(jule::Any& _4620_arg) {
	if (_4620_arg == jule::Any(jule::Any(nullptr))) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4620_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_2224e558c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21e2789d8_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4620_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2224e4c2e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21e2789d8_fmt_float(static_cast<jule::F64>(_4620_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_2224e54e3:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e667_fmt_int(static_cast<jule::I8>(_4620_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_2224e58ab:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e667_fmt_int(static_cast<jule::I16>(_4620_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_2224e50c5:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e667_fmt_int(static_cast<jule::I32>(_4620_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_2224e513b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e667_fmt_int(static_cast<jule::I64>(_4620_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_2224e51a2:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e502_fmt_uint(static_cast<jule::U8>(_4620_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_2224e5218:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e502_fmt_uint(static_cast<jule::U16>(_4620_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_2224e527e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e502_fmt_uint(static_cast<jule::U32>(_4620_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_2224e52e5:;
			{
				return static_cast<jule::Slice<jule::U8>>(_21ea2e502_fmt_uint(static_cast<jule::U64>(_4620_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_2224e5955:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4620_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_2224e59bb:;
			{
				if (_4620_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				}
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_2224e49cb:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4620_arg));
			}
		}
		_match_end_2224e4437:;
	}
}



inline jule::Slice<jule::U8> _21ec5bc4b_apply_fmt_by_default(jule::I64& _7530_j,jule::Slice<jule::Any>& _7539_args) {
	jule::Any _769_arg = _7539_args[_7530_j];
	(_7530_j)++;
	return _21ec69dd0_fmt_by_default(_769_arg);
}



inline jule::Slice<jule::U8> _21ec73c41_apply_fmt(jule::Slice<jule::U8>& _8319_fmt,jule::I64& _8337_j,jule::Slice<jule::Any>& _8346_args) {
	if ((_8319_fmt.len() == 2LL)) {
		return _21ec5bc4b_apply_fmt_by_default(_8337_j,_8346_args);
	}
	if ((_8319_fmt.len() == 4LL) && (_8319_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _8319_fmt;
}



inline jule::Slice<jule::U8> _21ec66b79_format_bytes(jule::Str _9717_fmt,jule::Slice<jule::Any> _9727_args) {
	jule::Slice<jule::U8> _9813_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_9717_fmt);
	if ((_9727_args.len() == 0LL)) {
		return _9813_fmt_bytes;
	}
	jule::Slice<jule::U8> _10413_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_9717_fmt.len()));
	jule::I64 _10613_j = 0LL;
	jule::I64 _10713_last = 0LL;
	jule::I64 _10813_i = _21ec7e675_find_format_prefix(_9813_fmt_bytes,_10713_last);
	for (; (_10813_i != -1LL); _10813_i=static_cast<jule::I64>(_21ec7e675_find_format_prefix(_9813_fmt_bytes,_10813_i))) {
		{
			_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last,_10813_i));
			jule::Slice<jule::U8> _11117_format = _21ec5d6ed_get_format_range(_10813_i,_9813_fmt_bytes);
			if ((_11117_format == nullptr)) {
				goto _iter_next_2225031e3;
			}
			_10413_bytes=jule::append(_10413_bytes,_21ec73c41_apply_fmt(_11117_format,_10613_j,_9727_args));
			if (_10613_j >= static_cast<jule::I64>(static_cast<jule::I64>(_9727_args.len()))) {
				_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10813_i));
				_10713_last=static_cast<jule::I64>(_9813_fmt_bytes.len());
				goto _iter_end_2225031e3;
			}
			_10713_last=_10813_i;
		}
	_iter_next_2225031e3:;
	}
	_iter_end_2225031e3:;
	if (_10713_last < static_cast<jule::I64>(static_cast<jule::I64>(_9813_fmt_bytes.len()))) {
		_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last));
	}
	return _10413_bytes;
}



inline jule::Str _21ec78075_format(jule::Str _15715_fmt,jule::Slice<jule::Any> _15725_args) {
	return static_cast<jule::Str>(_21ec66b79_format_bytes(_15715_fmt,_15725_args));
}



inline jule::Bool _21dd1e89d_kind_uses_generics(jule::Ptr<_21ec06223_TypeKind> _40523_k,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>& _40538_generics) {
	jule::Str _4069_pk = _21ec06641_to_str(_40523_k.ptr());
	{
		auto &expr = _40538_generics;
		auto it = expr.begin();
		_iter_begin_22edd4512:;
		if (it != expr.end()) {
			jule::Ptr<_21c640423_GenericDecl> &_22edd4600_g = *it;
			{
				if (_2368babd4_contains(_4069_pk,_22edd4600_g.get()._field_ident)) {
					return true;
				}
			}
			_iter_next_22edd4512:;
			++it;
			goto _iter_begin_22edd4512;
		}
		_iter_end_22edd4512:;
	}
	return false;
}



inline jule::Bool _21dd1ed21_parameter_uses_generics(jule::Ptr<_21dd17423_Param>& _41529_p,jule::Slice<jule::Ptr<_21c640423_GenericDecl>>& _41541_generics) {
	if (_21dd17b2c_is_self(_41529_p.ptr())) {
		return false;
	}
	return _21dd1e89d_kind_uses_generics(_41529_p.get()._field_kind.get()._field_kind,_41541_generics);
}



inline jule::Ptr<_21ec0aa85_TypeSymbol> _21dd27ec2_build_type(jule::Ptr<_21c5d253b_TypeDecl> _8419_t) {
	if ((_8419_t == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(_8419_t,jule::Ptr<_21ec06223_TypeKind>()));
}



inline jule::Ptr<_21ebbe362_Value> _21dd28324_build_expr(jule::Ptr<_21c4d7b4a_Expr> _9319_expr) {
	if ((_9319_expr == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_21ebbe362_Value>(_21ebbe362_Value(_9319_expr,jule::Ptr<_21ebbd053_Data>()));
}



inline jule::Ptr<_21ec05288_TypeAlias> _21dd28632_build_type_alias(jule::Ptr<_21c644ea5_TypeAliasDecl> _10225_decl) {
	return jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(_10225_decl.get()._field_scope,_10225_decl.get()._field_public,_10225_decl.get()._field_cpp_linked,jule::Bool(),jule::Bool(),_10225_decl.get()._field_token,_10225_decl.get()._field_ident,_21dd27ec2_build_type(_10225_decl.get()._field_kind),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>()));
}



inline jule::Ptr<_21dc10607_Field> _21dd28984_build_field(jule::Ptr<_21c64756d_FieldDecl> _11320_decl) {
	return jule::new_ptr<_21dc10607_Field>(_21dc10607_Field(jule::Ptr<_21dd03266_Struct>(),_11320_decl.get()._field_token,_11320_decl.get()._field_public,_11320_decl.get()._field_mutable,_11320_decl.get()._field_ident,_21dd27ec2_build_type(_11320_decl.get()._field_kind),_11320_decl.get()._field_default));
}



inline jule::Slice<jule::Ptr<_21dc10607_Field>> _21dd28c92_build_fields(jule::Slice<jule::Ptr<_21c64756d_FieldDecl>>& _12422_decls) {
	jule::Slice<jule::Ptr<_21dc10607_Field>> _12513_fields = jule::Slice<jule::Ptr<_21dc10607_Field>>::alloc(0LL,static_cast<jule::I64>(_12422_decls.len()));
	{
		auto &expr = _12422_decls;
		auto it = expr.begin();
		_iter_begin_22edd9a56:;
		if (it != expr.end()) {
			jule::Ptr<_21c64756d_FieldDecl> _22edd967c_decl = *it;
			{
				_12513_fields = jule::alloc_for_append(_12513_fields,1);_12513_fields.__push(_21dd28984_build_field(_22edd967c_decl));
			}
			_iter_next_22edd9a56:;
			++it;
			goto _iter_begin_22edd9a56;
		}
		_iter_end_22edd9a56:;
	}
	return _12513_fields;
}



inline jule::Ptr<_21dd03266_Struct> _21dd290a0_build_struct(jule::Ptr<_21c647c11_StructDecl> _13221_decl) {
	return jule::new_ptr<_21dd03266_Struct>(_21dd03266_Struct(jule::Ptr<_21eb5443a_Sema>(),jule::Slice<jule::Ptr<_21dd03266_Struct>>(),jule::Slice<jule::Ptr<_21dd03266_Struct>>(),_13221_decl.get()._field_token,_13221_decl.get()._field_ident,_21dd28c92_build_fields(_13221_decl.get()._field_fields),jule::Slice<jule::Ptr<_21dd19249_Fn>>(),jule::Slice<jule::Ptr<_21eb75615_Var>>(),_13221_decl.get()._field_public,_13221_decl.get()._field_cpp_linked,_13221_decl.get()._field_directives,_13221_decl.get()._field_generics,jule::Slice<jule::Ptr<_21deee929_Trait>>(),jule::Slice<jule::Ptr<_21dd06742_StructIns>>()));
}



inline jule::Ptr<_21dd17423_Param> _21dd293ad_build_param(jule::Ptr<_21c641413_ParamDecl> _14420_decl) {
	return jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_14420_decl.get()._field_token,_14420_decl.get()._field_mutable,_14420_decl.get()._field_variadic,_14420_decl.get()._field_reference,_21dd27ec2_build_type(_14420_decl.get()._field_kind),_14420_decl.get()._field_ident));
}



inline jule::Slice<jule::Ptr<_21dd17423_Param>> _21dd29754_build_params(jule::Slice<jule::Ptr<_21c641413_ParamDecl>>& _15522_decls) {
	jule::Slice<jule::Ptr<_21dd17423_Param>> _15613_params = jule::Slice<jule::Ptr<_21dd17423_Param>>::alloc(0LL,static_cast<jule::I64>(_15522_decls.len()));
	{
		auto &expr = _15522_decls;
		auto it = expr.begin();
		_iter_begin_22eddd153:;
		if (it != expr.end()) {
			jule::Ptr<_21c641413_ParamDecl> _22eddcc79_decl = *it;
			{
				_15613_params = jule::alloc_for_append(_15613_params,1);_15613_params.__push(_21dd293ad_build_param(_22eddcc79_decl));
			}
			_iter_next_22eddd153:;
			++it;
			goto _iter_begin_22eddd153;
		}
		_iter_end_22eddd153:;
	}
	return _15613_params;
}



inline jule::Ptr<_21dd16ac6_RetType> _21dd29a62_build_ret_type(jule::Ptr<_21c4d792a_RetTypeDecl> _16323_decl) {
	if ((_16323_decl.get()._field_idents == nullptr) && (_16323_decl.get()._field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_21dd16ac6_RetType>(_21dd16ac6_RetType(_21dd27ec2_build_type(_16323_decl.get()._field_kind),_16323_decl.get()._field_idents));
}



inline jule::Ptr<_21dd19249_Fn> _21dd29d70_build_fn(jule::Ptr<_21c641633_FnDecl> _17317_decl) {
	return jule::new_ptr<_21dd19249_Fn>(_21dd19249_Fn(jule::Ptr<_21eb5443a_Sema>(),_17317_decl.get()._field_token,_17317_decl.get()._field_global,_17317_decl.get()._field_unsafety,_17317_decl.get()._field_public,_17317_decl.get()._field_cpp_linked,_17317_decl.get()._field_statically,_17317_decl.get()._field_exceptional,_17317_decl.get()._field_ident,_17317_decl.get()._field_directives,_17317_decl.get()._field_scope,_17317_decl.get()._field_generics,_21dd29a62_build_ret_type(_17317_decl.get()._field_result),_21dd29754_build_params(_17317_decl.get()._field_params),jule::Ptr<_21dd03266_Struct>(),jule::Slice<jule::Ptr<_21dd1cc42_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_21dd19249_Fn>> _21dd2a17d_build_methods(jule::Slice<jule::Ptr<_21c641633_FnDecl>>& _19123_decls) {
	jule::Slice<jule::Ptr<_21dd19249_Fn>> _19213_methods = jule::Slice<jule::Ptr<_21dd19249_Fn>>::alloc(0LL,static_cast<jule::I64>(_19123_decls.len()));
	{
		auto &expr = _19123_decls;
		auto it = expr.begin();
		_iter_begin_22ede270c:;
		if (it != expr.end()) {
			jule::Ptr<_21c641633_FnDecl> _22ede28b6_decl = *it;
			{
				_19213_methods = jule::alloc_for_append(_19213_methods,1);_19213_methods.__push(_21dd29d70_build_fn(_22ede28b6_decl));
			}
			_iter_next_22ede270c:;
			++it;
			goto _iter_begin_22ede270c;
		}
		_iter_end_22ede270c:;
	}
	return _19213_methods;
}



inline jule::Ptr<_21deee929_Trait> _21dd2a48b_build_trait(jule::Ptr<_21c6481b7_TraitDecl> _19920_decl) {
	return jule::new_ptr<_21deee929_Trait>(_21deee929_Trait(_19920_decl.get()._field_token,_19920_decl.get()._field_ident,_19920_decl.get()._field_public,jule::Bool(),_21dd2a17d_build_methods(_19920_decl.get()._field_methods),jule::Slice<jule::Ptr<_21dd03266_Struct>>()));
}



inline jule::Ptr<_21dd39e29_EnumItem> _21dd2a799_build_enum_item(jule::Ptr<_21c6464b2_EnumItemDecl> _20824_decl) {
	return jule::new_ptr<_21dd39e29_EnumItem>(_21dd39e29_EnumItem(_20824_decl.get()._field_token,_20824_decl.get()._field_ident,_21dd28324_build_expr(_20824_decl.get()._field_expr)));
}



inline jule::Slice<jule::Ptr<_21dd39e29_EnumItem>> _21dd2aaa7_build_enum_items(jule::Slice<jule::Ptr<_21c6464b2_EnumItemDecl>>& _21626_decls) {
	jule::Slice<jule::Ptr<_21dd39e29_EnumItem>> _21713_items = jule::Slice<jule::Ptr<_21dd39e29_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_21626_decls.len()));
	{
		auto &expr = _21626_decls;
		auto it = expr.begin();
		_iter_begin_22ede539c:;
		if (it != expr.end()) {
			jule::Ptr<_21c6464b2_EnumItemDecl> _22ede4ed4_decl = *it;
			{
				_21713_items = jule::alloc_for_append(_21713_items,1);_21713_items.__push(_21dd2a799_build_enum_item(_22ede4ed4_decl));
			}
			_iter_next_22ede539c:;
			++it;
			goto _iter_begin_22ede539c;
		}
		_iter_end_22ede539c:;
	}
	return _21713_items;
}



inline jule::Ptr<_21ddb6aee_Enum> _21dd2adb5_build_enum(jule::Ptr<_21c646d0e_EnumDecl> _22419_decl) {
	return jule::new_ptr<_21ddb6aee_Enum>(_21ddb6aee_Enum(_22419_decl.get()._field_token,_22419_decl.get()._field_public,_22419_decl.get()._field_ident,_21dd27ec2_build_type(_22419_decl.get()._field_kind),_21dd2aaa7_build_enum_items(_22419_decl.get()._field_items)));
}



inline jule::Ptr<_21eb75615_Var> _21dd2b2e4_build_var(jule::Ptr<_21c64205c_VarDecl> _23418_decl) {
	return jule::new_ptr<_21eb75615_Var>(_21eb75615_Var(jule::Ptr<_21eb1472a_Scope>(),_23418_decl.get()._field_token,_23418_decl.get()._field_ident,_23418_decl.get()._field_cpp_linked,_23418_decl.get()._field_constant,_23418_decl.get()._field_mutable,_23418_decl.get()._field_public,jule::Bool(),_23418_decl.get()._field_statically,_23418_decl.get()._field_reference,_21dd27ec2_build_type(_23418_decl.get()._field_kind),_21dd28324_build_expr(_23418_decl.get()._field_expr),static__21dd2672e_new(),_23418_decl.get()._field_directives,jule::Ptr<_21eb74306_IterRelation>(),jule::Slice<jule::Ptr<_21eb75615_Var>>()));
}



inline jule::Slice<jule::Ptr<_21eb75615_Var>> _21dd2b602_build_vars(jule::Slice<jule::Ptr<_21c64205c_VarDecl>> _25119_decls) {
	jule::Slice<jule::Ptr<_21eb75615_Var>> _25213_vars = jule::Slice<jule::Ptr<_21eb75615_Var>>::alloc(0LL,static_cast<jule::I64>(_25119_decls.len()));
	{
		auto &expr = _25119_decls;
		auto it = expr.begin();
		_iter_begin_22ede9428:;
		if (it != expr.end()) {
			jule::Ptr<_21c64205c_VarDecl> _22ede9060_decl = *it;
			{
				_25213_vars = jule::alloc_for_append(_25213_vars,1);_25213_vars.__push(_21dd2b2e4_build_var(_22ede9060_decl));
			}
			_iter_next_22ede9428:;
			++it;
			goto _iter_begin_22ede9428;
		}
		_iter_end_22ede9428:;
	}
	return _25213_vars;
}



inline jule::Ptr<_21de24992_Impl> _21dd2b910_build_impl(jule::Ptr<_21c64866d_Impl> _25919_decl) {
	return jule::new_ptr<_21de24992_Impl>(_21de24992_Impl(_25919_decl.get()._field_base,_25919_decl.get()._field_dest,_21dd2a17d_build_methods(_25919_decl.get()._field_methods),_21dd2b602_build_vars(_25919_decl.get()._field_statics)));
}



inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21eb06d9e_new_scope_checker_base(jule::Ptr<_21eb5443a_Sema>& _4032_s,jule::Ptr<_21dd1cc42_FnIns> _4046_owner) {
	return jule::new_ptr<_21eb2ed2d_ScopeChecker>(_21eb2ed2d_ScopeChecker(jule::Ptr<_21c627dde_Token>(),_4032_s,_4046_owner,jule::Ptr<_21eb2ed2d_ScopeChecker>(),jule::I64(),jule::new_ptr<_21ebb6c0b_SymbolTable>(_21ebb6c0b_SymbolTable()),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21c6411e3_ScopeTree>(),jule::Ptr<_21ec06223_TypeKind>(),jule::U64(),jule::U64(),jule::Ptr<jule::Slice<jule::Ptr<_21eb2e8dd_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_21eb2eb0d_ScopeGoto>>>(),jule::I64()));
}



inline jule::Ptr<_21eb2ed2d_ScopeChecker> _21ead1c69_new_scope_checker(jule::Ptr<_21eb5443a_Sema>& _4827_s,jule::Ptr<_21dd1cc42_FnIns> _4841_owner) {
	jule::Ptr<_21eb2ed2d_ScopeChecker> _4913_base = _21eb06d9e_new_scope_checker_base(_4827_s,_4841_owner);
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_21eb2e8dd_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_21eb2eb0d_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_21eb2e8dd_ScopeLabel> _21eac4c90_find_label_parent(jule::Str _5822_ident,jule::Ptr<_21eb2ed2d_ScopeChecker> _5838_scope) {
	jule::Ptr<_21eb2e8dd_ScopeLabel> _5913_label = _21eb32c98_find_label_scope(_5838_scope, _5822_ident);
	while ((_5913_label == nullptr)) {
		{
			if ((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr)) {
				return nullptr;
			}
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_21eb32c98_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_22edece87:;
	}
	_iter_end_22edece87:;
	return _5913_label;
}



inline jule::Bool _21eadbb75_stmt_is_goto_scope(jule::Any& _7224_stmt,jule::Ptr<_21eb1472a_Scope>& _7236_sc) {
	{
		auto &_match_expr{ _7224_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_21eb1472a_Scope>>()) {
			_case_begin_22ee006d7:;
			{
				return _7224_stmt.operator jule::Ptr<_21eb1472a_Scope>() == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c6cc_InfIter>>()) {
			_case_begin_22ee0074d:;
			{
				return _7224_stmt.operator jule::Ptr<_21eb2c6cc_InfIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2cb1c_RangeIter>>()) {
			_case_begin_22ee001ed:;
			{
				return _7224_stmt.operator jule::Ptr<_21eb2cb1c_RangeIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c8ec_WhileIter>>()) {
			_case_begin_22ee00264:;
			{
				return _7224_stmt.operator jule::Ptr<_21eb2c8ec_WhileIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2dd2c_Match>>()) {
			_case_begin_22ee002ca:;
			{
				jule::Ptr<_21eb2dd2c_Match> _8713_m = _7224_stmt.operator jule::Ptr<_21eb2dd2c_Match>();
				{
					auto &expr = _8713_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_22ee02e15:;
					if (it != expr.end()) {
						jule::Ptr<_21eb2e27d_Case> &_22ee02e59_c = *it;
						{
							if (_22ee02e59_c.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_22ee02e15:;
						++it;
						goto _iter_begin_22ee02e15;
					}
					_iter_end_22ee02e15:;
				}
				return (_8713_m.get()._field_default != nullptr) && (_8713_m.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb2c4ac_Conditional>>()) {
			_case_begin_22ee00341:;
			{
				jule::Ptr<_21eb2c4ac_Conditional> _9613_c = _7224_stmt.operator jule::Ptr<_21eb2c4ac_Conditional>();
				{
					auto &expr = _9613_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_22ee04983:;
					if (it != expr.end()) {
						jule::Ptr<_235bb50ab_If> &_22ee049c7_elif = *it;
						{
							if (_22ee049c7_elif.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_22ee04983:;
						++it;
						goto _iter_begin_22ee04983;
					}
					_iter_end_22ee04983:;
				}
				return (_9613_c.get()._field_default != nullptr) && (_9613_c.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else {
			_case_begin_22ee00099:;
			{
				return false;
			}
		}
		_match_end_22edeeebc:;
	}
}



inline jule::I64 _21eb15165_count_match_type(jule::Ptr<_21eb2dd2c_Match>& _10922_m,jule::Ptr<_21ec06223_TypeKind>& _10934_t) {
	jule::I64 _11013_n = 0LL;
	jule::Str _1119_kind = _21ec06641_to_str(_10934_t.ptr());
	_julec_label_loop:;
	{
		auto &expr = _10922_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22ee06743:;
		if (it != expr.end()) {
			jule::Ptr<_21eb2e27d_Case> &_22ee06941_c = *it;
			{
				if ((_22ee06941_c == nullptr)) {
					goto _iter_next_22ee06743;
				}
				{
					auto &expr = _22ee06941_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_22ee06ea2:;
					if (it != expr.end()) {
						jule::Ptr<_21ebbd053_Data> &_22ee07601_expr = *it;
						{
							if ((_22ee07601_expr == nullptr)) {
								goto _iter_end_22ee06743;
							}
							if (_1119_kind == _21ec06641_to_str(_22ee07601_expr.get()._field_model.operator jule::Ptr<_21ec06223_TypeKind>().ptr())) {
								(_11013_n)++;
							}
						}
						_iter_next_22ee06ea2:;
						++it;
						goto _iter_begin_22ee06ea2;
					}
					_iter_end_22ee06ea2:;
				}
			}
			_iter_next_22ee06743:;
			++it;
			goto _iter_begin_22ee06743;
		}
		_iter_end_22ee06743:;
	}
	return _11013_n;
}



inline jule::Slice<jule::Ptr<_21ebbd053_Data>> _21eadccb9_get_datas_from_tuple_data(jule::Ptr<_21ebbd053_Data>& _13335_d) {
	if ((_21ec0a634_tup(_13335_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _13335_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_21dd10b03_TupleExprModel>>()) {
				_case_begin_22ee08e82:;
				{
					return _13335_d.get()._field_model.operator jule::Ptr<_21dd10b03_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_22ee08e1b:;
				{
					jule::Ptr<_21ec11b46_Tuple> _14021_t = _21ec0a634_tup(_13335_d.get()._field_kind.ptr());
					jule::Slice<jule::Ptr<_21ebbd053_Data>> _14121_r = jule::Slice<jule::Ptr<_21ebbd053_Data>>::alloc(0LL,static_cast<jule::I64>(_14021_t.get()._field_types.len()));
					{
						auto &expr = _14021_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_22ee0a56b:;
						if (it != expr.end()) {
							jule::Ptr<_21ec06223_TypeKind> _22ee0a5b0_kind = *it;
							{
								_14121_r = jule::alloc_for_append(_14121_r,1);_14121_r.__push(jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(_22ee0a5b0_kind,jule::Ptr<_21ec06223_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>())));
							}
							_iter_next_22ee0a56b:;
							++it;
							goto _iter_begin_22ee0a56b;
						}
						_iter_end_22ee0a56b:;
					}
					return _14121_r;
				}
			}
			_match_end_22ee08db6:;
		}
	} else {
		return jule::Slice<jule::Ptr<_21ebbd053_Data>>({_13335_d});
	}
}



inline jule::Slice<jule::Any> _21eae17e5_get_expr_models(jule::Any& _15525_m) {
	{
		auto &_match_expr{ _15525_m };
		
		if (_match_expr.type_is<jule::Ptr<_21c4d808a_TupleExpr>>()) {
			_case_begin_22ee089ed:;
			{
				jule::Ptr<_21c4d808a_TupleExpr> _15817_tup = _15525_m.operator jule::Ptr<_21c4d808a_TupleExpr>();
				jule::Slice<jule::Any> _15917_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15817_tup.get()._field_expr.len()));
				{
					auto &expr = _15817_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_22ee0ccee:;
					if (it != expr.end()) {
						jule::Ptr<_21c4d7b4a_Expr> _22ee0d44d_expr = *it;
						{
							_15917_models = jule::alloc_for_append(_15917_models,1);_15917_models.__push(_22ee0d44d_expr.get()._field_kind);
						}
						_iter_next_22ee0ccee:;
						++it;
						goto _iter_begin_22ee0ccee;
					}
					_iter_end_22ee0ccee:;
				}
				return _15917_models;
			}
		}
		else {
			_case_begin_22ee0bd31:;
			{
				return jule::Slice<jule::Any>({_15525_m});
			}
		}
		_match_end_22ee0bc65:;
	}
}



inline jule::Bool _21eae23c8_check_mut(jule::Ptr<_21eb5443a_Sema>& _17019_s,jule::Ptr<_21ebbd053_Data>& _17030_left,jule::Ptr<_21ebbd053_Data> _17047_right,_21c627dde_Token _17061_op) {
	jule::Bool _17074_ok = jule::Bool();
	{
		
		if ((!(_17030_left.get()._field_mutable))) {
			_case_begin_22ee0ebad:;
			{
				_21eb576a2_push_err(_17019_s.ptr(), _17061_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_17074_ok = false;
				return _17074_ok;
			}
		}
		else if (((_17047_right != nullptr) && (!(_17047_right.get()._field_mutable))) && _21ec07884_mutable(_17047_right.get()._field_kind.ptr())) {
			_case_begin_22ee0ec8a:;
			{
				if ((_17061_op._field_kind != jule::Str("=", 1)) && (_21ec09ca4_strct(_17047_right.get()._field_kind.ptr()) != nullptr)) {
					_17074_ok = true;
					return _17074_ok;
				}
				_21eb576a2_push_err(_17019_s.ptr(), _17061_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_17047_right.get()._field_kind.ptr()))}));
				_17074_ok = false;
				return _17074_ok;
			}
		}
		else {
			_case_begin_22ee0e51a:;
			{
				_17074_ok = true;
				return _17074_ok;
			}
		}
		_match_end_22ee0e471:;
	}
}



inline jule::Bool _21eae350b_check_assign(jule::Ptr<_21eb5443a_Sema>& _18922_s,jule::Ptr<_21ebbd053_Data>& _18937_left,jule::Ptr<_21ebbd053_Data> _18954_right,_21c627dde_Token _18968_op) {
	jule::Bool _18981_ok = jule::Bool();
	jule::Ptr<_21dd1cc42_FnIns> _1909_f = _21ec099c9_fnc(_18937_left.get()._field_kind.ptr());
	if (((_1909_f != nullptr) && (_1909_f.get()._field_decl != nullptr)) && _1909_f.get()._field_decl.get()._field_global) {
		_21eb576a2_push_err(_18922_s.ptr(), _18968_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18981_ok = false;
		return _18981_ok;
	}
	{
		
		if (_21ebbda59_is_const(_18937_left.ptr())) {
			_case_begin_22ee159d8:;
			{
				_21eb576a2_push_err(_18922_s.ptr(), _18968_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_21eb57a9d_push_suggestion(_18922_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else if ((!(_18937_left.get()._field_lvalue))) {
			_case_begin_22ee15aa4:;
			{
				_21eb576a2_push_err(_18922_s.ptr(), _18968_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else if ((!(_21eae23c8_check_mut(_18922_s,_18937_left,_18954_right,_18968_op)))) {
			_case_begin_22ee15b1a:;
			{
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else {
			_case_begin_22ee1539a:;
			{
				_18981_ok = true;
				return _18981_ok;
			}
		}
		_match_end_22ee152bd:;
	}
}



inline jule::Bool _21eae6641_is_valid_ast_st_for_next_st(jule::Any& _21137_n) {
	{
		auto &_match_expr{ _21137_n };
		
		if (_match_expr.type_is<jule::Ptr<_21c640ec3_AssignSt>>()) {
			_case_begin_22ee18678:;
			{
				return (!(_21137_n.operator jule::Ptr<_21c640ec3_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21c63dc90_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_21c4d7b4a_Expr>>()) {
			_case_begin_22ee186de:;
			{
				return true;
			}
		}
		else {
			_case_begin_22ee1806d:;
			{
				return false;
			}
		}
		_match_end_22ee18216:;
	}
}



inline jule::Bool _21eae7224_is_valid_st_for_next_st(jule::Any& _22329_st) {
	{
		auto &_match_expr{ _22329_st };
		
		if (_match_expr.type_is<jule::Ptr<_21dd0b23b_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eb2d6bc_Postfix>>() || _match_expr.type_is<jule::Ptr<_21eb2d8dc_Assign>>() || _match_expr.type_is<jule::Ptr<_21eb2db0c_MultiAssign>>()) {
			_case_begin_22ee19954:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_22ee199ba:;
			{
				{
					auto &_match_expr{ _22329_st.operator jule::Ptr<_21ebbd053_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_21dd0b23b_FnCallExprModel>>()) {
						_case_begin_22ee1a13b:;
						{
							return true;
						}
					}
					else {
						_case_begin_22ee1a889:;
						{
							return false;
						}
					}
					_match_end_22ee1a834:;
				}
			}
		}
		else {
			_case_begin_22ee191e5:;
			{
				return false;
			}
		}
		_match_end_22ee189b9:;
	}
}



inline jule::Bool _21eae7d07_st_is_def(jule::Any& _24015_st) {
	{
		auto &_match_expr{ _24015_st };
		
		if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_22ee1a911:;
			{
				return true;
			}
		}
		else {
			_case_begin_22ee19ca6:;
			{
				return false;
			}
		}
		_match_end_22ee1a9aa:;
	}
}



inline jule::Ptr<_21eb75615_Var> _21eb4761a_find_var_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _4129_files,jule::Str _4152_ident,jule::Bool _4164_cpp_linked) {
	{
		auto &expr = _4129_files;
		auto it = expr.begin();
		_iter_begin_22ee1bbba:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22ee1bc97_f = *it;
			{
				jule::Ptr<_21eb75615_Var> _4317_v = _21ebb7aec_find_var(_22ee1bc97_f.ptr(), _4152_ident,_4164_cpp_linked);
				if ((_4317_v != nullptr)) {
					return _4317_v;
				}
			}
			_iter_next_22ee1bbba:;
			++it;
			goto _iter_begin_22ee1bbba;
		}
		_iter_end_22ee1bbba:;
	}
	return nullptr;
}



inline jule::Ptr<_21ec05288_TypeAlias> _21eb47b6a_find_type_alias_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _5336_files,jule::Str _5359_ident,jule::Bool _5371_cpp_linked) {
	{
		auto &expr = _5336_files;
		auto it = expr.begin();
		_iter_begin_22ee1c1d7:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22ee1d408_f = *it;
			{
				jule::Ptr<_21ec05288_TypeAlias> _5517_ta = _21ebb8081_find_type_alias(_22ee1d408_f.ptr(), _5359_ident,_5371_cpp_linked);
				if ((_5517_ta != nullptr)) {
					return _5517_ta;
				}
			}
			_iter_next_22ee1c1d7:;
			++it;
			goto _iter_begin_22ee1c1d7;
		}
		_iter_end_22ee1c1d7:;
	}
	return nullptr;
}



inline jule::Ptr<_21dd03266_Struct> _21eb48121_find_struct_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _6532_files,jule::Str _6555_ident,jule::Bool _6567_cpp_linked) {
	{
		auto &expr = _6532_files;
		auto it = expr.begin();
		_iter_begin_22ee1d848:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22ee1ea69_f = *it;
			{
				jule::Ptr<_21dd03266_Struct> _6717_s = _21ebb8515_find_struct(_22ee1ea69_f.ptr(), _6555_ident,_6567_cpp_linked);
				if ((_6717_s != nullptr)) {
					return _6717_s;
				}
			}
			_iter_next_22ee1d848:;
			++it;
			goto _iter_begin_22ee1d848;
		}
		_iter_end_22ee1d848:;
	}
	return nullptr;
}



inline jule::Ptr<_21dd19249_Fn> _21eb4862c_find_fn_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _7728_files,jule::Str _7751_ident,jule::Bool _7763_cpp_linked) {
	{
		auto &expr = _7728_files;
		auto it = expr.begin();
		_iter_begin_22ee1eea9:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22ee211ca_file = *it;
			{
				jule::Ptr<_21dd19249_Fn> _7917_f = _21ebb8999_find_fn(_22ee211ca_file.ptr(), _7751_ident,_7763_cpp_linked);
				if ((_7917_f != nullptr)) {
					return _7917_f;
				}
			}
			_iter_next_22ee1eea9:;
			++it;
			goto _iter_begin_22ee1eea9;
		}
		_iter_end_22ee1eea9:;
	}
	return nullptr;
}



inline jule::Ptr<_21deee929_Trait> _21eb48a17_find_trait_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _8931_files,jule::Str _8954_ident) {
	{
		auto &expr = _8931_files;
		auto it = expr.begin();
		_iter_begin_22ee227a3:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22ee214d8_f = *it;
			{
				jule::Ptr<_21deee929_Trait> _9117_t = _21ebb8d51_find_trait(_22ee214d8_f.ptr(), _8954_ident);
				if ((_9117_t != nullptr)) {
					return _9117_t;
				}
			}
			_iter_next_22ee227a3:;
			++it;
			goto _iter_begin_22ee227a3;
		}
		_iter_end_22ee227a3:;
	}
	return nullptr;
}



inline jule::Ptr<_21ddb6aee_Enum> _21eb48e02_find_enum_in_package(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _10130_files,jule::Str _10153_ident) {
	{
		auto &expr = _10130_files;
		auto it = expr.begin();
		_iter_begin_22ee23375:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22ee23452_f = *it;
			{
				jule::Ptr<_21ddb6aee_Enum> _10317_e = _21ebb9208_find_enum(_22ee23452_f.ptr(), _10153_ident);
				if ((_10317_e != nullptr)) {
					return _10317_e;
				}
			}
			_iter_next_22ee23375:;
			++it;
			goto _iter_begin_22ee23375;
		}
		_iter_end_22ee23375:;
	}
	return nullptr;
}



inline jule::Bool _21eb50bb7_is_std_package(jule::Str _32219_f,jule::Str _32227_p) {
	return _236849954_has_prefix(_32219_f,_235b71c27_join(jule::Slice<jule::Str>({_21c35922a_PATH_STDLIB,_32227_p})));
}



inline jule::Bool _21eb52108_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_22ee25d06:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0e294_StructSubIdentExprModel>>()) {
			_case_begin_22ee25d6c:;
			{
				jule::Ptr<_21dd0e294_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_21dd0e294_StructSubIdentExprModel>();
				return _21eb52108_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>>()) {
			_case_begin_22ee2582d:;
			{
				jule::Ptr<_21dd0d88c_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_21dd0d88c_TraitSubIdentExprModel>();
				return _21eb52108_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd09349_UnaryExprModel>>()) {
			_case_begin_22ee25894:;
			{
				jule::Ptr<_21dd09349_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_21dd09349_UnaryExprModel>();
				if ((_2317_unary.get()._field_op._field_kind != jule::Str("*", 1))) {
					return false;
				}
				if ((_21ec08d6e_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				}
				if ((_21ec08a94_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				}
				return _21eb52108_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_22ee248e8:;
			{
				return false;
			}
		}
		_match_end_22ee24893:;
	}
}



inline _21c348b32_Log _21eb52658_compiler_err(_21c627dde_Token& _4118_token,jule::Bool _4132_line,jule::Str _4144_fmt,jule::Slice<jule::Any> _4157_args) {
	_21c348b32_Log _4213_log = _21c348b32_Log(static_cast<jule::I64>(1LL),_4118_token._field_row,_4118_token._field_column,_4118_token._field_file.get()._field_path,_21c34911b_logf(_4144_fmt,_4157_args),jule::Str(),jule::Str());
	if (_4132_line) {
		_4213_log._field_line=_21c630512_get_row(_4118_token._field_file.ptr(), _4118_token._field_row);
	}
	return _4213_log;
}



inline jule::Bool _21eb52a43_imp_is_lookupable(jule::Ptr<_21eb49c8d_ImportInfo>& _5523_i,jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	}
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _21eb4cb09_exist_ident(_5523_i.ptr(), _5539_ident);
		}
	}
	return _5523_i.get()._field_import_all;
}



inline jule::Slice<jule::Ptr<_21eb75615_Var>> _21eb52d95_build_ret_vars(jule::Ptr<_21dd1cc42_FnIns>& _6824_f) {
	if (_21dd19711_is_void(_6824_f.get()._field_decl.ptr()) || (_6824_f.get()._field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21eb75615_Var>> _7313_vars = nullptr;
	jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _7413_types = _21eb8092d_get_result_types(_6824_f.get()._field_result);
	{
		auto &expr = _6824_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_22ee301c8:;
		if (it != expr.end()) {
			jule::I64 _22ee30580_i = it - expr.begin();
			_21c627dde_Token _22ee307c2_ident = *it;
			{
				if (_21c62abc2_is_ignore_ident(_22ee307c2_ident._field_kind)) {
					goto _iter_next_22ee301c8;
				}
				jule::Ptr<_21eb75615_Var> _8017_v = jule::new_ptr<_21eb75615_Var>(_21eb75615_Var(_6824_f.get()._field_scope,_22ee307c2_ident,_22ee307c2_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_7413_types[_22ee30580_i])),jule::new_ptr<_21ebbe362_Value>(_21ebbe362_Value(jule::Ptr<_21c4d7b4a_Expr>(),jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data()))),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21eb74306_IterRelation>(),jule::Slice<jule::Ptr<_21eb75615_Var>>()));
				_7313_vars = jule::alloc_for_append(_7313_vars,1);_7313_vars.__push(_8017_v);
			}
			_iter_next_22ee301c8:;
			++it;
			_22ee30580_i++;
			goto _iter_begin_22ee301c8;
		}
		_iter_end_22ee301c8:;
	}
	return _7313_vars;
}



inline jule::Slice<jule::Ptr<_21eb75615_Var>> _21eb531a3_build_param_vars(jule::Ptr<_21dd1cc42_FnIns>& _9726_f) {
	if ((_9726_f.get()._field_params.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21eb75615_Var>> _10213_vars = jule::Slice<jule::Ptr<_21eb75615_Var>>::alloc(0LL,static_cast<jule::I64>(_9726_f.get()._field_params.len()));
	{
		auto &expr = _9726_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22ee33770:;
		if (it != expr.end()) {
			jule::Ptr<_21dd1badc_ParamIns> _22ee338b3_p = *it;
			{
				jule::Ptr<_21eb75615_Var> _10417_v = jule::new_ptr<_21eb75615_Var>(_21eb75615_Var(_9726_f.get()._field_scope,_22ee338b3_p.get()._field_decl.get()._field_token,_22ee338b3_p.get()._field_decl.get()._field_ident,jule::Bool(),jule::Bool(),_22ee338b3_p.get()._field_decl.get()._field_mutable,jule::Bool(),true,jule::Bool(),_22ee338b3_p.get()._field_decl.get()._field_reference,jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol()),jule::new_ptr<_21ebbe362_Value>(_21ebbe362_Value(jule::Ptr<_21c4d7b4a_Expr>(),jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data()))),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21eb74306_IterRelation>(),jule::Slice<jule::Ptr<_21eb75615_Var>>()));
				{
					
					if (_21dd17b2c_is_self(_22ee338b3_p.get()._field_decl.ptr())) {
						_case_begin_22ee35d16:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_21ec05bd4_Kind>(_9726_f.get()._field_owner, 0)));
							_10417_v.get()._field_reference=(!(_21dd17e07_is_ref(_22ee338b3_p.get()._field_decl.ptr())));
							if (_21dd17e07_is_ref(_22ee338b3_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec103e7_Sptr>(_21ec103e7_Sptr(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_10417_v.get()._field_kind.get()._field_kind.get()._field_kind)))), 6);
							}
						}
					}
					else if (_22ee338b3_p.get()._field_decl.get()._field_variadic) {
						_case_begin_22ee358a4:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec10eca_Slc>(_21ec10eca_Slc(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(_22ee338b3_p.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_22ee338b3_p.get()._field_kind.get()._field_kind)))), 7)));
						}
					}
					else {
						_case_begin_22ee35552:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_22ee338b3_p.get()._field_kind;
						}
					}
					_match_end_22ee354ec:;
				}
				_10213_vars = jule::alloc_for_append(_10213_vars,1);_10213_vars.__push(_10417_v);
			}
			_iter_next_22ee33770:;
			++it;
			goto _iter_begin_22ee33770;
		}
		_iter_end_22ee33770:;
	}
	return _10213_vars;
}



inline jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _21eb53505_build_generic_type_aliases(jule::Ptr<_21dd1cc42_FnIns>& _15836_f) {
	jule::I64 _15913_size = _15836_f.get()._field_generics.len();
	if ((_15836_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15913_size+=static_cast<jule::I64>(_15836_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	if ((_15913_size == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_21ec05288_TypeAlias>> _16813_aliases = jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>::alloc(0LL,_15913_size);
	{
		auto &expr = _15836_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22ee3c15d:;
		if (it != expr.end()) {
			jule::I64 _22ee3c306_i = it - expr.begin();
			jule::Ptr<_21ec06223_TypeKind> _22ee3c526_g = *it;
			{
				jule::Ptr<_21c640423_GenericDecl> _17117_decl = _15836_f.get()._field_decl.get()._field_generics[_22ee3c306_i];
				_16813_aliases = jule::alloc_for_append(_16813_aliases,1);_16813_aliases.__push(jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(_15836_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_17117_decl.get()._field_token,_17117_decl.get()._field_ident,jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_22ee3c526_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>())));
			}
			_iter_next_22ee3c15d:;
			++it;
			_22ee3c306_i++;
			goto _iter_begin_22ee3c15d;
		}
		_iter_end_22ee3c15d:;
	}
	if ((_15836_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_21dd06742_StructIns> _18517_owner = _15836_f.get()._field_owner;
		{
			auto &expr = _18517_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_22ee3d56b:;
			if (it != expr.end()) {
				jule::I64 _22ee3e88b_i = it - expr.begin();
				jule::Ptr<_21ec06223_TypeKind> _22ee3eaab_g = *it;
				{
					jule::Ptr<_21c640423_GenericDecl> _18721_decl = _18517_owner.get()._field_decl.get()._field_generics[_22ee3e88b_i];
					_16813_aliases = jule::alloc_for_append(_16813_aliases,1);_16813_aliases.__push(jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(_15836_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_18721_decl.get()._field_token,_18721_decl.get()._field_ident,jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),_22ee3eaab_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>())));
				}
				_iter_next_22ee3d56b:;
				++it;
				_22ee3e88b_i++;
				goto _iter_begin_22ee3d56b;
			}
			_iter_end_22ee3d56b:;
		}
	}
	return _16813_aliases;
}



inline jule::Ptr<_21ebb6c0b_SymbolTable> _21eb538ce_find_file(jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>& _20419_files,jule::Ptr<_21c62e038_File>& _20443_handler) {
	{
		auto &expr = _20419_files;
		auto it = expr.begin();
		_iter_begin_22ee3eec9:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _22ee40b12_fl = *it;
			{
				if (_22ee40b12_fl.get()._field_file == _20443_handler) {
					return _22ee40b12_fl;
				}
			}
			_iter_next_22ee3eec9:;
			++it;
			goto _iter_begin_22ee3eec9;
		}
		_iter_end_22ee3eec9:;
	}
	return nullptr;
}



inline void _21eb53d96_push_suggestion(_21c348b32_Log* _21331_log,jule::Str _21342_fmt,jule::Slice<jule::Any> _21355_args) {
	_21331_log->_field_suggestion=_21c34911b_logf(_21342_fmt,_21355_args);
}



inline jule::Slice<jule::Ptr<_21ec06223_TypeKind>> _21eb8092d_get_result_types(jule::Ptr<_21ec06223_TypeKind>& _2626_result) {
	{
		
		if ((_2626_result == nullptr)) {
			_case_begin_22ee43ad2:;
			{
				return nullptr;
			}
		}
		else if ((_21ec0a634_tup(_2626_result.ptr()) == nullptr)) {
			_case_begin_22ee43906:;
			{
				return jule::Slice<jule::Ptr<_21ec06223_TypeKind>>({_2626_result});
			}
		}
		else {
			_case_begin_22ee432eb:;
			{
				return _21ec0a634_tup(_2626_result.ptr()).get()._field_types;
			}
		}
		_match_end_22ee42905:;
	}
}



inline jule::Bool _21eb81b0a_trait_has_reference_receiver(jule::Ptr<_21deee929_Trait>& _3934_t) {
	{
		auto &expr = _3934_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22ee44a28:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> &_22ee44594_f = *it;
			{
				if (_22ee44594_f.get()._field_statically) {
					goto _iter_next_22ee44a28;
				}
				jule::Ptr<_21dd17423_Param> _4613_p = _22ee44594_f.get()._field_params[0LL];
				if (_21dd17e07_is_ref(_4613_p.ptr()) && _21dd17b2c_is_self(_4613_p.ptr())) {
					return true;
				}
			}
			_iter_next_22ee44a28:;
			++it;
			goto _iter_begin_22ee44a28;
		}
		_iter_end_22ee44a28:;
	}
	return false;
}



inline jule::Bool _21eb86868_float_assignable(jule::Str _5421_kind,jule::Ptr<_21ebbd053_Data>& _5433_d) {
	jule::Str _559_value = _21e2789d8_fmt_float(static_cast<jule::F64>(_21eaa0cb0_as_f64(_5433_d.get()._field_constant.ptr())),'g',-1LL,64LL);
	return _21eb214c3_check_bit_float(_559_value,static_cast<jule::I64>(_21eb1ed2e_bitsize_of(_5421_kind)));
}



inline jule::Bool _21eb942c1_sig_assignable(jule::Str _5919_kind,jule::Ptr<_21ebbd053_Data>& _5931_d) {
	jule::F64 _609_min = _21eb24a59_min(_5919_kind);
	jule::F64 _619_max = _21eb24dab_max(_5919_kind);
	{
		
		if (_21eaa2ed2_is_f64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_22ee48a1b:;
			{
				jule::F64 _6413_x = _21eaa0430_read_f64(_5931_d.get()._field_constant.ptr());
				jule::F64 _6514_i;
				jule::F64 _6517_frac;
				std::tie(_6514_i,_6517_frac) = _21ea0d190_modf(_6413_x);
				if ((_6517_frac != 0LL)) {
					return false;
				}
				return (_6514_i >= _609_min) && (_6514_i <= _619_max);
			}
		}
		else if (_21eaa2652_is_u64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_22ee48a82:;
			{
				jule::F64 _7113_x = _21eaa0cb0_as_f64(_5931_d.get()._field_constant.ptr());
				if (_7113_x <= _619_max) {
					return true;
				}
			}
		}
		else if (_21eaa2377_is_i64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_22ee48ae8:;
			{
				jule::F64 _7613_x = _21eaa0cb0_as_f64(_5931_d.get()._field_constant.ptr());
				return (_609_min <= _7613_x) && (_7613_x <= _619_max);
			}
		}
		_match_end_22ee488b7:;
	}
	return false;
}



inline jule::Bool _21eba4479_unsig_assignable(jule::Str _8221_kind,jule::Ptr<_21ebbd053_Data>& _8233_d) {
	jule::F64 _839_max = _21eb24dab_max(_8221_kind);
	if (_8233_d.get()._field_is_rune && (_8221_kind == jule::Str("u8", 2))) {
		return _21eb7ee5a_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_21ea9e7c5_read_i64(_8233_d.get()._field_constant.ptr()))));
	}
	{
		
		if (_21eaa2ed2_is_f64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_22ee4e4e4:;
			{
				jule::F64 _9013_x = _21eaa0430_read_f64(_8233_d.get()._field_constant.ptr());
				if ((_9013_x < 0LL)) {
					return false;
				}
				jule::F64 _9414_i;
				jule::F64 _9417_frac;
				std::tie(_9414_i,_9417_frac) = _21ea0d190_modf(_9013_x);
				if ((_9417_frac != 0LL)) {
					return false;
				}
				return _9414_i <= _839_max;
			}
		}
		else if (_21eaa2652_is_u64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_22ee4e55a:;
			{
				jule::F64 _10013_x = _21eaa0cb0_as_f64(_8233_d.get()._field_constant.ptr());
				if (_10013_x <= _839_max) {
					return true;
				}
			}
		}
		else if (_21eaa2377_is_i64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_22ee4e5c1:;
			{
				jule::F64 _10513_x = _21eaa0cb0_as_f64(_8233_d.get()._field_constant.ptr());
				return (0LL <= _10513_x) && (_10513_x <= _839_max);
			}
		}
		_match_end_22ee4d8de:;
	}
	return false;
}



inline jule::Bool _21eba47ed_int_assignable(jule::Str _11119_kind,jule::Ptr<_21ebbd053_Data>& _11131_d) {
	{
		
		if (_21eb2aac6_is_sig_int(_11119_kind)) {
			_case_begin_22ee545a4:;
			{
				return _21eb942c1_sig_assignable(_11119_kind,_11131_d);
			}
		}
		else if (_21eb2ae28_is_unsig_int(_11119_kind)) {
			_case_begin_22ee546a3:;
			{
				return _21eba4479_unsig_assignable(_11119_kind,_11131_d);
			}
		}
		else {
			_case_begin_22ee5001c:;
			{
				return false;
			}
		}
		_match_end_22ee4eeb7:;
	}
}



inline jule::Ptr<_21c525490_Directive> _21ebeeaac_find_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>& _419124_directives,jule::Str _419166_d) {
	{
		auto &expr = _419124_directives;
		auto it = expr.begin();
		_iter_begin_22ee548e5:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _22ee5586e_dr = *it;
			{
				if (_22ee5586e_dr.get()._field_tag._field_kind == _419166_d) {
					return _22ee5586e_dr;
				}
			}
			_iter_next_22ee548e5:;
			++it;
			goto _iter_begin_22ee548e5;
		}
		_iter_end_22ee548e5:;
	}
	return nullptr;
}



inline jule::Any _21ebeeedb_find_builtins_import(jule::Str _420025_ident,jule::Ptr<_21eb49c8d_ImportInfo> _420037_imp) {
	return _21ec4b4dd_find_package_builtin_def(_420037_imp.get()._field_link_path,_420025_ident);
}



inline void _21ec00261_fit_bitsize(jule::Ptr<_21ebbd053_Data>& _420721_d) {
	jule::Ptr<_21ec0b58b_Prim> _420813_prim = _21ec087b9_prim(_420721_d.get()._field_kind.ptr());
	jule::I64 _42099_z = _21eb1ed2e_bitsize_of(_21ec0b965_to_str(_420813_prim.ptr()));
	if ((_42099_z == 64LL)) {
		return;
	}
	jule::I64 _421413_k = 0LL;
	{
		
		if (_21eaa2377_is_i64(_420721_d.get()._field_constant.ptr())) {
			_case_begin_22ee58388:;
			{
				_421413_k=static_cast<jule::I64>(_21eb21ade_bitsize_of_int(static_cast<jule::I64>(_21ea9e7c5_read_i64(_420721_d.get()._field_constant.ptr()))));
				if (_421413_k > _42099_z) {
					_420813_prim.get()._field_kind=_21eb2015e_int_from_bits(_421413_k);
				}
			}
		}
		else if (_21eaa2652_is_u64(_420721_d.get()._field_constant.ptr())) {
			_case_begin_22ee58410:;
			{
				_421413_k=static_cast<jule::I64>(_21eb21dec_bitsize_of_uint(static_cast<jule::U64>(_21ea9eaa0_read_u64(_420721_d.get()._field_constant.ptr()))));
				if (_421413_k > _42099_z) {
					_420813_prim.get()._field_kind=_21eb2046c_uint_from_bits(_421413_k);
				}
			}
		}
		else if (_21eaa2ed2_is_f64(_420721_d.get()._field_constant.ptr())) {
			_case_begin_22ee58487:;
			{
				_421413_k=static_cast<jule::I64>(_21eb217d1_bitsize_of_float(static_cast<jule::F64>(_21eaa0430_read_f64(_420721_d.get()._field_constant.ptr()))));
				if (_421413_k > _42099_z) {
					_420813_prim.get()._field_kind=_21eb2077a_float_from_bits(_421413_k);
				}
			}
		}
		_match_end_22ee582cd:;
	}
}



inline void _21ec00607_make_struct_lit_alloc(jule::Ptr<_21ebbd053_Data>& _423431_d,jule::Ptr<_21dd09c40_StructLitExprModel>& _423446_lit) {
	_423431_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec103e7_Sptr>(_21ec103e7_Sptr(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_423446_lit.get()._field_strct, 0))))), 6)));
	_423431_d.get()._field_model=jule::Any(jule::new_ptr<_21dd0a12a_AllocStructLitExprModel>(_21dd0a12a_AllocStructLitExprModel(_423446_lit)));
}



inline jule::Ptr<_21eb75615_Var> _21ec009e2_build_error_var(jule::Ptr<_21eb1472a_Scope>& _424525_s,jule::Ptr<_21c63dc90_FnCallExpr>& _424541_fc) {
	return jule::new_ptr<_21eb75615_Var>(_21eb75615_Var(_424525_s,_424541_fc.get()._field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("any", 3)), 5))))),jule::new_ptr<_21ebbe362_Value>(_21ebbe362_Value(jule::Ptr<_21c4d7b4a_Expr>(),jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data()))),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Slice<jule::Ptr<_21c525490_Directive>>(),jule::Ptr<_21eb74306_IterRelation>(),jule::Slice<jule::Ptr<_21eb75615_Var>>()));
}



inline jule::Any _21ec00dcc_find_builtins_sema(jule::Str _426423_ident,jule::Ptr<_21eb5443a_Sema> _426439_s) {
	{
		auto &expr = _426439_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ee603b2:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _22ee6067b_imp = *it;
			{
				if (_22ee6067b_imp.get()._field_import_all || _21eb4cb09_exist_ident(_22ee6067b_imp.ptr(), _426423_ident)) {
					jule::Any _426721_def = _21ebeeedb_find_builtins_import(_426423_ident,_22ee6067b_imp);
					if (_426721_def != jule::Any(jule::Any(nullptr))) {
						return _426721_def;
					}
				}
			}
			_iter_next_22ee603b2:;
			++it;
			goto _iter_begin_22ee603b2;
		}
		_iter_end_22ee603b2:;
	}
	jule::Str _427513_ppath = _21c62eaa5_dir(_426439_s.get()._field_file.get()._field_file.ptr());
	if (_236849954_has_prefix(_427513_ppath,_21c35922a_PATH_STDLIB)) {
		(_427513_ppath).mut_slice(_21c35922a_PATH_STDLIB.len());
		_427513_ppath=jule::Str("std", 3) + _2368bc136_replace(_427513_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
		return _21ec4b4dd_find_package_builtin_def(_427513_ppath,_426423_ident);
	}
	return jule::Any(nullptr);
}



inline jule::Bool _21ec011da_is_ok_for_shifting(jule::Ptr<_21ebbd053_Data>& _428928_d) {
	if (_21ebbda59_is_const(_428928_d.ptr())) {
		{
			
			if (_21eaa2377_is_i64(_428928_d.get()._field_constant.ptr())) {
				_case_begin_22ee64a6a:;
				{
					return (_21ea9e7c5_read_i64(_428928_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_21eaa2652_is_u64(_428928_d.get()._field_constant.ptr())) {
				_case_begin_22ee64b58:;
				{
					return true;
				}
			}
			else if (_21eaa2ed2_is_f64(_428928_d.get()._field_constant.ptr())) {
				_case_begin_22ee64bbe:;
				{
					return (_21eaa0430_read_f64(_428928_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_22ee6441b:;
				{
					return false;
				}
			}
			_match_end_22ee64350:;
		}
	}
	jule::Ptr<_21ec0b58b_Prim> _43029_prim = _21ec087b9_prim(_428928_d.get()._field_kind.ptr());
	return (_43029_prim != nullptr) && _21eb2b236_is_int(_21ec0b965_to_str(_43029_prim.ptr()));
}



inline jule::Bool _21ec01581_is_instanced_struct(jule::Ptr<_21dd06742_StructIns> _430624_s) {
	return _430624_s.get()._field_decl.get()._field_generics.len() == static_cast<jule::I64>(static_cast<jule::I64>(_430624_s.get()._field_generics.len()));
}



inline jule::Bool _21ec01905_is_ptr_arithmetic_compatible_int(jule::Ptr<_21ebbd053_Data>& _431042_d) {
	if (_21ebbda59_is_const(_431042_d.ptr())) {
		return _21eba47ed_int_assignable(jule::Str("int", 3),_431042_d);
	}
	_21eba4e2a_TypeCompatibilityChecker _431413_tcc = _21eba4e2a_TypeCompatibilityChecker(jule::Ptr<_21eb5443a_Sema>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),_431042_d.get()._field_kind,_21c627dde_Token());
	return _21eba6129_check(&_431413_tcc);
}



inline void _21ec01b47_apply_cast_kind_model(jule::Ptr<_21ebbd053_Data>& _432331_d) {
	_432331_d.get()._field_model=jule::Any(jule::new_ptr<_21dd0a757_CastingExprModel>(_21dd0a757_CastingExprModel(_21c627dde_Token(),_432331_d.get()._field_model,_432331_d.get()._field_cast_kind,_432331_d.get()._field_kind)));
}



inline void _21ec01dbc_apply_cast_kind(jule::Ptr<_21ebbd053_Data>& _433125_d) {
	if ((_433125_d.get()._field_cast_kind == nullptr)) {
		return;
	}
	_21ec01b47_apply_cast_kind_model(_433125_d);
	_433125_d.get()._field_kind=_433125_d.get()._field_cast_kind;
	_433125_d.get()._field_cast_kind=nullptr;
}



inline jule::Ptr<_21ebbd053_Data> _21ec020ed_build_void_data(void) {
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("void", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Str _21ec02450_check_data_for_integer_indexing(jule::Ptr<_21ebbd053_Data>& _435241_d) {
	jule::Str _435253_err_fmt = jule::Str();
	if ((_435241_d == nullptr)) {
		_435253_err_fmt = jule::Str();
		return _435253_err_fmt;
	}
	{
		
		if ((_21ec087b9_prim(_435241_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_22ee6c5cd:;
			{
				_435253_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435253_err_fmt;
			}
		}
		else if ((!(_21eb2b236_is_int(_21ec0b965_to_str(_21ec087b9_prim(_435241_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_22ee6c644:;
			{
				_435253_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435253_err_fmt;
			}
		}
		else if (_21ebbda59_is_const(_435241_d.ptr())) {
			_case_begin_22ee6c6aa:;
			{
				if ((_21eaa0cb0_as_f64(_435241_d.get()._field_constant.ptr()) < 0LL)) {
					_435253_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _435253_err_fmt;
				}
			}
		}
		else if ((_21ec087b9_prim(_435241_d.get()._field_kind.ptr()) == nullptr) || _21ebbda59_is_const(_435241_d.ptr()) || _21eb1ea87_real_kind_of(_21ec0b965_to_str(_21ec087b9_prim(_435241_d.get()._field_kind.ptr()).ptr())) != _21eb1ea87_real_kind_of(jule::Str("int", 3))) {
			_case_begin_22ee6c721:;
			{
				_435241_d.get()._field_cast_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5)));
				_21ec01dbc_apply_cast_kind(_435241_d);
			}
		}
		_match_end_22ee6cb61:;
	}
	_435253_err_fmt = jule::Str();
	return _435253_err_fmt;
}



inline void _21ec027d5_apply_cast_model_by_enum(jule::Ptr<_21ebbd053_Data>& _437834_d,jule::Ptr<_21ddb6aee_Enum> _437848_e) {
	if ((_437848_e == nullptr)) {
		return;
	}
	jule::Ptr<_21ec0b58b_Prim> _43829_p = _21ec087b9_prim(_437848_e.get()._field_kind.get()._field_kind.ptr());
	if (_21ec0ecba_is_str(_43829_p.ptr())) {
		return;
	}
	_437834_d.get()._field_cast_kind=_437848_e.get()._field_kind.get()._field_kind;
	_21ec01b47_apply_cast_kind_model(_437834_d);
	_437834_d.get()._field_cast_kind=nullptr;
}



inline void _21ec02b26_cast_const_by_type(jule::Str& _439124_t,jule::Ptr<_21ebbd053_Data>& _439137_d) {
	{
		
		if (_21eb2aac6_is_sig_int(_439124_t)) {
			_case_begin_22ee74a58:;
			{
				{
					auto _match_expr{ _21eb1ed2e_bitsize_of(_21eb1ea87_real_kind_of(_439124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_22ee75097:;
						{
							_21eaa10ce_set_i64(_439137_d.get()._field_constant.ptr(), static_cast<jule::I64>(_21eaa070a_as_i64(_439137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_22ee7598d:;
						{
							_21eaa10ce_set_i64(_439137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_21eaa070a_as_i64(_439137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_22ee75a04:;
						{
							_21eaa10ce_set_i64(_439137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_21eaa070a_as_i64(_439137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_22ee75a6a:;
						{
							_21eaa10ce_set_i64(_439137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_21eaa070a_as_i64(_439137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_22ee754e8:;
				}
			}
		}
		else if (_21eb2ae28_is_unsig_int(_439124_t)) {
			_case_begin_22ee74ad0:;
			{
				{
					auto _match_expr{ _21eb1ed2e_bitsize_of(_21eb1ea87_real_kind_of(_439124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_22ee79c6c:;
						{
							_21eaa13ed_set_u64(_439137_d.get()._field_constant.ptr(), static_cast<jule::U64>(_21eaa09d5_as_u64(_439137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_22ee79cd3:;
						{
							_21eaa13ed_set_u64(_439137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_21eaa09d5_as_u64(_439137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_22ee79d49:;
						{
							_21eaa13ed_set_u64(_439137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_21eaa09d5_as_u64(_439137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_22ee79db0:;
						{
							_21eaa13ed_set_u64(_439137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_21eaa09d5_as_u64(_439137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_22ee752b7:;
				}
			}
		}
		else if (_21eb2b588_is_float(_439124_t)) {
			_case_begin_22ee74b57:;
			{
				{
					auto _match_expr{ _21eb1ed2e_bitsize_of(_21eb1ea87_real_kind_of(_439124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_22ee7e0a1:;
						{
							_21eaa1d5a_set_f64(_439137_d.get()._field_constant.ptr(), static_cast<jule::F64>(_21eaa0cb0_as_f64(_439137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_22ee7e117:;
						{
							_21eaa1d5a_set_f64(_439137_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_21eaa0cb0_as_f64(_439137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_22ee75ecc:;
				}
			}
		}
		_match_end_22ee74959:;
	}
}



inline jule::Bool _21ec045a6_has_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>& _3323_directives,jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_22ee7a3bb:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _22ee7e3e2_dr = *it;
			{
				if (_22ee7e3e2_dr.get()._field_tag._field_kind == _3354_tag) {
					return true;
				}
			}
			_iter_next_22ee7a3bb:;
			++it;
			goto _iter_begin_22ee7a3bb;
		}
		_iter_end_22ee7a3bb:;
	}
	return false;
}



inline jule::Bool _21ec15287_can_get_ptr(jule::Ptr<_21ebbd053_Data>& _54621_d) {
	if ((!(_54621_d.get()._field_lvalue)) || _21ebbda59_is_const(_54621_d.ptr())) {
		return false;
	}
	{
		
		if ((_21ec099c9_fnc(_54621_d.get()._field_kind.ptr()) != nullptr) || (_21ec09149_enm(_54621_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22ee82a44:;
			{
				return false;
			}
		}
		else {
			_case_begin_22ee8246c:;
			{
				return true;
			}
		}
		_match_end_22ee82417:;
	}
}



inline jule::Bool _21ec15595_is_valid_for_sptr_type(jule::Ptr<_21ec06223_TypeKind>& _56132_t) {
	jule::Ptr<_21dd06742_StructIns> _56213_s = _21ec09ca4_strct(_56132_t.ptr());
	if (((_56213_s != nullptr) && (_56213_s.get()._field_decl != nullptr)) && _56213_s.get()._field_decl.get()._field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _21ec158e7_is_valid_for_ref(jule::Ptr<_21ec06223_TypeKind>& _57026_t) {
	return (_21ec099c9_fnc(_57026_t.ptr()) == nullptr);
}



inline jule::Bool _21ec15c49_is_builtin_str_convertable(jule::Ptr<_21ec06223_TypeKind>& _57336_t) {
	return ((!(_21ec075a9_void(_57336_t.ptr()))) && (_21ec099c9_fnc(_57336_t.ptr()) == nullptr)) && (_21ec0a634_tup(_57336_t.ptr()) == nullptr);
}



inline jule::Str _21ec1608a_build_link_path_by_tokens(jule::Slice<_21c627dde_Token>& _57731_tokens) {
	jule::Str _57813_s = _57731_tokens[0LL]._field_kind;
	{
		auto expr = _57731_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_22ee87142:;
		if (it != expr.end()) {
			_21c627dde_Token &_22ee873b7_token = *it;
			{
				_57813_s+=jule::Str("::", 2);
				_57813_s+=_22ee873b7_token._field_kind;
			}
			_iter_next_22ee87142:;
			++it;
			goto _iter_begin_22ee87142;
		}
		_iter_end_22ee87142:;
	}
	return _57813_s;
}



inline jule::Ptr<_21ec0b58b_Prim> _21ec16387_build_prim_type(jule::Str _58620_kind) {
	return jule::new_ptr<_21ec0b58b_Prim>(_21ec0b58b_Prim(_58620_kind));
}



inline jule::Ptr<_21dd03266_Struct> _21ec1672d_get_struct_from_kind(jule::Ptr<_21ec06223_TypeKind> _59229_k) {
	{
		
		if ((_59229_k == nullptr)) {
			_case_begin_22ee88a6c:;
			{
				return nullptr;
			}
		}
		else if ((_21ec09ca4_strct(_59229_k.ptr()) != nullptr)) {
			_case_begin_22ee88ad3:;
			{
				return _21ec09ca4_strct(_59229_k.ptr()).get()._field_decl;
			}
		}
		else if ((_21ec08a94_sptr(_59229_k.ptr()) != nullptr)) {
			_case_begin_22ee887c5:;
			{
				return _21ec1672d_get_struct_from_kind(_21ec08a94_sptr(_59229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_21ec096ee_slc(_59229_k.ptr()) != nullptr)) {
			_case_begin_22ee8883b:;
			{
				return _21ec1672d_get_struct_from_kind(_21ec096ee_slc(_59229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_21ec09424_arr(_59229_k.ptr()) != nullptr)) {
			_case_begin_22ee888a2:;
			{
				return _21ec1672d_get_struct_from_kind(_21ec09424_arr(_59229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_21ec08d6e_ptr(_59229_k.ptr()) != nullptr)) {
			_case_begin_22ee883da:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_22ee88330:;
			{
				return nullptr;
			}
		}
		_match_end_22ee88077:;
	}
}



inline jule::Bool _21ec16a3b_is_prim(jule::Str _62112_kind) {
	return (((((((((((((((_62112_kind == jule::Str("i8", 2)) || (_62112_kind == jule::Str("i16", 3))) || (_62112_kind == jule::Str("i32", 3))) || (_62112_kind == jule::Str("i64", 3))) || (_62112_kind == jule::Str("u8", 2))) || (_62112_kind == jule::Str("u16", 3))) || (_62112_kind == jule::Str("u32", 3))) || (_62112_kind == jule::Str("u64", 3))) || (_62112_kind == jule::Str("f32", 3))) || (_62112_kind == jule::Str("f64", 3))) || (_62112_kind == jule::Str("int", 3))) || (_62112_kind == jule::Str("uint", 4))) || (_62112_kind == jule::Str("uintptr", 7))) || (_62112_kind == jule::Str("bool", 4))) || (_62112_kind == jule::Str("str", 3))) || (_62112_kind == jule::Str("any", 3));
}



inline void _21ec2134d_apply_implicit_cast(jule::Ptr<_21ec06223_TypeKind>& _150029_dest,jule::Ptr<_21ebbd053_Data>& _150051_d) {
	if (_21ec072ce_is_nil(_150051_d.get()._field_kind.ptr())) {
		return;
	}
	if ((_21ec0a07e_trt(_150029_dest.ptr()) != nullptr) && (_21ec0a07e_trt(_150051_d.get()._field_kind.ptr()) == nullptr)) {
		_150051_d.get()._field_cast_kind=_150029_dest;
		_21ec01b47_apply_cast_kind_model(_150051_d);
		_150051_d.get()._field_cast_kind=nullptr;
	}
}



inline std::tuple<jule::Ptr<_21ebb6c0b_SymbolTable>,jule::Slice<_21c348b32_Log>> _21ec248d4_build_symbols(jule::Ptr<_21c4cc2b0_Ast>& _1523_ast,jule::Trait<_21eb471a8_Importer>& _1539_importer,jule::Ptr<_21dd2c0a3_SymbolBuilder> _1563_owner) {
	jule::Ptr<_21dd2c0a3_SymbolBuilder> _1613_sb = jule::new_ptr<_21dd2c0a3_SymbolBuilder>(_21dd2c0a3_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_21c348b32_Log>(),_1523_ast,jule::Ptr<_21ebb6c0b_SymbolTable>()));
	_21dd333a6_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_21eb4d269_Package>,jule::Slice<_21c348b32_Log>> _21ec24de0___analyze_package(jule::Slice<jule::Ptr<_21c4cc2b0_Ast>>& _2927_files,jule::Trait<_21eb471a8_Importer>& _2947_importer,jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_22ee961ea:;
		if (it != expr.end()) {
			jule::Ptr<_21c4cc2b0_Ast> _22ee95d21_f = *it;
			{
				jule::Ptr<_21ebb6c0b_SymbolTable> _3318_table;
				jule::Slice<_21c348b32_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _21ec248d4_build_symbols(_22ee95d21_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);
			}
			_iter_next_22ee961ea:;
			++it;
			goto _iter_begin_22ee961ea;
		}
		_iter_end_22ee961ea:;
	}
	jule::Ptr<_21eb5443a_Sema> _4013_sema = jule::new_ptr<_21eb5443a_Sema>(_21eb5443a_Sema(jule::Slice<_21c348b32_Log>(),jule::Slice<jule::Ptr<_21ebb6c0b_SymbolTable>>(),jule::Ptr<_21ebb6c0b_SymbolTable>(),_2968_flags));
	_21eb71b61_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	}
	jule::Ptr<_21eb4d269_Package> _4813_pkg = jule::new_ptr<_21eb4d269_Package>(_21eb4d269_Package(_4013_sema.get()._field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_21eb4d269_Package>,jule::Slice<_21c348b32_Log>> _21ec253a7_analyze_package(jule::Slice<jule::Ptr<_21c4cc2b0_Ast>> _7228_files,jule::Trait<_21eb471a8_Importer> _7247_importer,jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_21eb4d269_Package> _7714_package;
	jule::Slice<_21c348b32_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _21ec24de0___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_21dd1cc42_FnIns> _21ec29d07_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_22ee9e5ee:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _2420_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec66e54_builtin_caller_out),jule::Bool()));
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_22ee9e665:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _2720_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec670b9_builtin_caller_outln),jule::Bool()));
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_22ee9e357:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _3020_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec266d8_builtin_caller_new),jule::Bool()));
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_22ee9e3bd:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _3320_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec2684d_builtin_caller_panic),jule::Bool()));
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_22ee9e434:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _3620_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec67ebb_builtin_caller_make),jule::Bool()));
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_22ee9e115:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _3920_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec68131_builtin_caller_append),jule::Bool()));
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_22ee9e17b:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _4220_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec68296_builtin_caller_copy),jule::Bool()));
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_22ee9e1e2:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _4520_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec6840b_builtin_caller_clone),jule::Bool()));
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_22ee9e258:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _4820_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8a54e_builtin_caller_assert),jule::Bool()));
				return _4820_f;
			}
		}
		else {
			_case_begin_22ee9da82:;
			{
				return nullptr;
			}
		}
		_match_end_22ee9ddc3:;
	}
}



inline jule::Ptr<_21ec05288_TypeAlias> _21ec4ca3e_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_22eea4da7:;
			{
				static jule::Ptr<_21ec05288_TypeAlias> _5820_t = jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(jule::Ptr<_21c6411e3_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_21c627dde_Token(),jule::Str(),jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("u8", 2)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>()));
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_22eea4e73:;
			{
				static jule::Ptr<_21ec05288_TypeAlias> _6820_t = jule::new_ptr<_21ec05288_TypeAlias>(_21ec05288_TypeAlias(jule::Ptr<_21c6411e3_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_21c627dde_Token(),jule::Str(),jule::new_ptr<_21ec0aa85_TypeSymbol>(_21ec0aa85_TypeSymbol(jule::Ptr<_21c5d253b_TypeDecl>(),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("i32", 3)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_21ec05288_TypeAlias>>()));
				return _6820_t;
			}
		}
		else {
			_case_begin_22eea4901:;
			{
				return nullptr;
			}
		}
		_match_end_22eea4aaa:;
	}
}



inline jule::Ptr<_21deee929_Trait> _21ec781da_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _21ec2ca41_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_21dd1cc42_FnIns> _8713_f = _21ec29d07_find_builtin_fn(_8621_ident);
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	}
	jule::Ptr<_21ec05288_TypeAlias> _9213_ta = _21ec4ca3e_find_builtin_type_alias(_8621_ident);
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	}
	jule::Ptr<_21deee929_Trait> _9713_t = _21ec781da_find_builtin_trait(_8621_ident);
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _21ec2d855_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_22eea97c4:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _10820_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8c540_builtin_caller_std_debug_out),jule::Bool()));
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_22eea962b:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _11120_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8ca3a_builtin_caller_std_debug_outln),jule::Bool()));
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_22eea91ec:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_22eea7b9b:;
	}
}



inline jule::Any _21ec2e669_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_22eeab1cc:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _12120_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8aa5a_builtin_caller_std_mem_size_of),jule::Bool()));
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_22eeab243:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _12420_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8b055_builtin_caller_std_mem_align_of),jule::Bool()));
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_22eeab034:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _12720_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8b550_builtin_caller_std_mem_free),jule::Bool()));
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_22eeaa62c:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_22eeaae46:;
	}
}



inline jule::Any _21ec31b44_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_22eead7d9:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _13720_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8ba6c_builtin_caller_std_jule_integrated_to_str),jule::Bool()));
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_22eead641:;
			{
				static jule::Ptr<_21dd1cc42_FnIns> _14020_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>(),jule::Ptr<_21ec06223_TypeKind>(),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec8c067_builtin_caller_std_jule_integrated_emit),jule::Bool()));
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_22eeab09a:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_22eead3aa:;
	}
}



inline jule::Any _21ec4b4dd_find_package_builtin_def(jule::Str _14729_link_path,jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_22eeb038a:;
			{
				return _21ec2d855_find_builtin_def_std_debug(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_22eeb0401:;
			{
				return _21ec2e669_find_builtin_def_std_mem(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_22eeb01e2:;
			{
				return _21ec31b44_find_builtin_def_std_jule_integrated(_14745_ident);
			}
		}
		else {
			_case_begin_22eeaeba3:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_22eeaeb4d:;
	}
}



inline jule::Ptr<_21ebbd053_Data> _21ec51306_builtin_caller_common_plain(jule::Ptr<_21ebc00aa_Eval>& _16037_e,jule::Ptr<_21c63dc90_FnCallExpr>& _16052_fc,jule::Ptr<_21ebbd053_Data>& _16074_d) {
	jule::Ptr<_21dd1cc42_FnIns> _16113_f = _21ec099c9_fnc(_16074_d.get()._field_kind.ptr());
	_21ebabbbd_FnCallArgChecker _16313_fcac = _21ebabbbd_FnCallArgChecker(_16037_e,_16052_fc.get()._field_args,_16052_fc.get()._field_token,_16113_f,false,jule::Slice<jule::Any>());
	if ((!(_21ebae7c5_check(&_16313_fcac)))) {
		return nullptr;
	}
	jule::Ptr<_21dd0b23b_FnCallExprModel> _17413_model = jule::new_ptr<_21dd0b23b_FnCallExprModel>(_21dd0b23b_FnCallExprModel(_16052_fc.get()._field_token,_16113_f,jule::Bool(),_16074_d.get()._field_model,_16313_fcac._field_arg_models,jule::Ptr<_21eb1472a_Scope>(),jule::Bool()));
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_21ec020ed_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(_16113_f.get()._field_result,jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
	}
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec28b91_builtin_caller_common(jule::Ptr<_21ebc00aa_Eval>& _19331_e,jule::Ptr<_21c63dc90_FnCallExpr>& _19346_fc,jule::Ptr<_21ebbd053_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _21ec51306_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_21ebbd053_Data> _21ec26a90_builtin_caller_common_mut(jule::Ptr<_21ebc00aa_Eval>& _20135_e,jule::Ptr<_21c63dc90_FnCallExpr>& _20150_fc,jule::Ptr<_21ebbd053_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_21ebc0693_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	return _21ec28b91_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_21ebbd053_Data> _21ec26c05_builtin_caller_error(jule::Ptr<_21ebc00aa_Eval>& _20830_e,jule::Ptr<_21c63dc90_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _21913_expr = _21ebe0718_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);
	if ((_21913_expr == nullptr)) {
		return nullptr;
	}
	if (_21ebbd4a4_is_nil(_21913_expr.ptr())) {
		_21ebc0693_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _22813_d = _21ec020ed_build_void_data();
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_21dd13a07_BuiltinErrorCallExprModel>(_21dd13a07_BuiltinErrorCallExprModel(jule::Ptr<_21dd1cc42_FnIns>(),_21913_expr.get()._field_model)));
	return _22813_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec66e54_builtin_caller_out(jule::Ptr<_21ebc00aa_Eval>& _23628_e,jule::Ptr<_21c63dc90_FnCallExpr>& _23643_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _24813_expr = _21ebe0718_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);
	if ((_24813_expr == nullptr)) {
		return nullptr;
	}
	if ((!(_21ec15c49_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_21ebc0693_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _25813_d = _21ec020ed_build_void_data();
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_21dd110dc_BuiltinOutCallExprModel>(_21dd110dc_BuiltinOutCallExprModel(_24813_expr.get()._field_model,jule::Bool())));
	return _25813_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec670b9_builtin_caller_outln(jule::Ptr<_21ebc00aa_Eval>& _26330_e,jule::Ptr<_21c63dc90_FnCallExpr>& _26345_fc,jule::Ptr<_21ebbd053_Data>& _26367_d) {
	_26367_d=_21ec66e54_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	}
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_21dd115a4_BuiltinOutlnCallExprModel>(_21dd115a4_BuiltinOutlnCallExprModel(_26367_d.get()._field_model.operator jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>().get()._field_expr,jule::Bool())));
	return _26367_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec266d8_builtin_caller_new(jule::Ptr<_21ebc00aa_Eval>& _27528_e,jule::Ptr<_21c63dc90_FnCallExpr>& _27543_fc,jule::Ptr<_21ebbd053_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_21ebc0693_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _28713_t = _21ebdeea9_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);
	if ((_28713_t == nullptr)) {
		return nullptr;
	}
	if ((!(_28713_t.get()._field_decl))) {
		_21ebc0693_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_21ec15595_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_21dd06742_StructIns> _29817_s = _21ec09ca4_strct(_28713_t.get()._field_kind.ptr());
		if (((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked) {
			_21ebc0693_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27565_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(jule::new_ptr<_21ec103e7_Sptr>(_21ec103e7_Sptr(_28713_t.get()._field_kind)), 6)));
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_21ec06223_TypeKind> _31217_old = _27528_e.get()._field_prefix;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_21ebbd053_Data> _31517_init = _21ebe0718_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			_21c627dde_Token _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;
			
			_21eb6117d_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_21eb5dbe7_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_21dd11e34_BuiltinNewCallExprModel>(_21dd11e34_BuiltinNewCallExprModel(_28713_t.get()._field_kind,_31517_init.get()._field_model)));
		}
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_21dd11e34_BuiltinNewCallExprModel>(_21dd11e34_BuiltinNewCallExprModel(_28713_t.get()._field_kind,jule::Any())));
	}
	return _27565_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec2684d_builtin_caller_panic(jule::Ptr<_21ebc00aa_Eval>& _34030_e,jule::Ptr<_21c63dc90_FnCallExpr>& _34045_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _35213_expr = _21ebe0718_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);
	if ((_35213_expr == nullptr)) {
		return nullptr;
	}
	if ((_21ec087b9_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_21ec0ecba_is_str(_21ec087b9_prim(_35213_expr.get()._field_kind.ptr()).ptr())))) {
		_21ebc0693_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _36113_d = _21ec020ed_build_void_data();
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_21dd123eb_BuiltinPanicCallExprModel>(_21dd123eb_BuiltinPanicCallExprModel(_34045_fc.get()._field_token,_35213_expr.get()._field_model)));
	return _36113_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec67ebb_builtin_caller_make(jule::Ptr<_21ebc00aa_Eval>& _36929_e,jule::Ptr<_21c63dc90_FnCallExpr>& _36944_fc,jule::Ptr<_21ebbd053_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_21ebc0693_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_21ebc0693_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if ((_36944_fc.get()._field_args.len() > 3LL)) {
		_21ebc0693_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _38513_t = _21ebdeea9_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);
	if ((_38513_t == nullptr)) {
		return nullptr;
	}
	if ((!(_38513_t.get()._field_decl)) || (_21ec096ee_slc(_38513_t.get()._field_kind.ptr()) == nullptr)) {
		_21ebc0693_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_36966_d.get()._field_kind=_38513_t.get()._field_kind;
	jule::Ptr<_21ebbd053_Data> _39713_len = _21ebe0718_eval_expr(_21eb5d202_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);
	if ((_39713_len == nullptr)) {
		return _36966_d;
	}
	_21ebcabba_check_integer_indexing_by_data(_36929_e.ptr(), _39713_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_21ebbd053_Data> _40517_cap = _21ebe0718_eval_expr(_21eb5d202_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);
		if ((_40517_cap == nullptr)) {
			return _36966_d;
		}
		_21ebcabba_check_integer_indexing_by_data(_36929_e.ptr(), _40517_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_21dd13078_BuiltinMakeCallExprModel>(_21dd13078_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,_40517_cap.get()._field_model)));
	} else {
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_21dd13078_BuiltinMakeCallExprModel>(_21dd13078_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,jule::Any())));
	}
	return _36966_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec68131_builtin_caller_append(jule::Ptr<_21ebc00aa_Eval>& _42631_e,jule::Ptr<_21c63dc90_FnCallExpr>& _42646_fc,jule::Ptr<_21ebbd053_Data>& _42668_d) {
	if ((_42646_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_42646_fc.get()._field_args.len() < 2LL)) {
		if ((_42646_fc.get()._field_args.len() == 1LL)) {
			_21ebc0693_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_21ebc0693_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _43913_t = _21ebe0718_eval_expr(_42631_e, _42646_fc.get()._field_args[0LL]);
	if ((_43913_t == nullptr)) {
		return nullptr;
	}
	if ((_21ec096ee_slc(_43913_t.get()._field_kind.ptr()) == nullptr)) {
		_21ebc0693_push_err(_42631_e.ptr(), _42646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21dd1cc42_FnIns> _44913_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>({jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str())),_43913_t.get()._field_kind)),jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(jule::new_ptr<_21dd17423_Param>(_21dd17423_Param(_21c627dde_Token(),true,true,jule::Bool(),jule::Ptr<_21ec0aa85_TypeSymbol>(),jule::Str())),_21ec096ee_slc(_43913_t.get()._field_kind.ptr()).get()._field_elem))}),_43913_t.get()._field_kind,jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec51306_builtin_caller_common_plain),jule::Bool()));
	_42668_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_44913_f, 1)));
	_42668_d.get()._field_model=jule::Any(jule::new_ptr<_21dd100db_CommonIdentExprModel>(_21dd100db_CommonIdentExprModel(jule::Str("append", 6))));
	_42668_d=_21ec51306_builtin_caller_common_plain(_42631_e,_42646_fc,_42668_d);
	if ((_42668_d != nullptr)) {
		jule::Ptr<_21dd0b23b_FnCallExprModel> _47717_model = _42668_d.get()._field_model.operator jule::Ptr<_21dd0b23b_FnCallExprModel>();
		_42668_d.get()._field_model=jule::Any(jule::new_ptr<_21dd13540_BuiltinAppendCallExprModel>(_21dd13540_BuiltinAppendCallExprModel(_47717_model.get()._field_args[0LL],_47717_model.get()._field_args[1LL])));
	}
	return _42668_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec68296_builtin_caller_copy(jule::Ptr<_21ebc00aa_Eval>& _48629_e,jule::Ptr<_21c63dc90_FnCallExpr>& _48644_fc,jule::Ptr<_21ebbd053_Data>& _48666_d) {
	if ((_48644_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_48644_fc.get()._field_args.len() < 2LL)) {
		if ((_48644_fc.get()._field_args.len() == 1LL)) {
			_21ebc0693_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_21ebc0693_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if ((_48644_fc.get()._field_args.len() > 2LL)) {
		_21ebc0693_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _50213_dest = _21ebe0718_eval_expr(_48629_e, _48644_fc.get()._field_args[0LL]);
	if ((_50213_dest == nullptr)) {
		return nullptr;
	}
	if ((_21ec096ee_slc(_50213_dest.get()._field_kind.ptr()) == nullptr)) {
		_21ebc0693_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_50213_dest.get()._field_mutable))) {
		_21ebc0693_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21dd17423_Param> _51413_empty_param = jule::new_ptr<_21dd17423_Param>();
	jule::Ptr<_21dd1cc42_FnIns> _51513_f = jule::new_ptr<_21dd1cc42_FnIns>(_21dd1cc42_FnIns(jule::Ptr<_21dd06742_StructIns>(),jule::Ptr<_21dd19249_Fn>(),jule::Slice<jule::Ptr<_21ec06223_TypeKind>>(),jule::Slice<jule::Ptr<_21dd1badc_ParamIns>>({jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind)),jule::new_ptr<_21dd1badc_ParamIns>(_21dd1badc_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind))}),jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_21eb1472a_Scope>(),jule::Ptr<_21dd264ba_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_21ebbd053_Data>(jule::Ptr<_21ebc00aa_Eval>&,jule::Ptr<_21c63dc90_FnCallExpr>&,jule::Ptr<_21ebbd053_Data>&)>(_21ec51306_builtin_caller_common_plain),jule::Bool()));
	_48666_d.get()._field_kind=jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_51513_f, 1)));
	_48666_d.get()._field_model=jule::Any(jule::new_ptr<_21dd100db_CommonIdentExprModel>(_21dd100db_CommonIdentExprModel(jule::Str("copy", 4))));
	_48666_d=_21ec51306_builtin_caller_common_plain(_48629_e,_48644_fc,_48666_d);
	if ((_48666_d != nullptr)) {
		jule::Ptr<_21ebbd053_Data> _54017_src = _48666_d.get()._field_model.operator jule::Ptr<_21dd0b23b_FnCallExprModel>().get()._field_args[1LL].operator jule::Ptr<_21ebbd053_Data>();
		jule::Ptr<_21ec10eca_Slc> _54117_slc = _21ec096ee_slc(_54017_src.get()._field_kind.ptr());
		if ((!(_54017_src.get()._field_mutable)) && _21ec07884_mutable(_54117_slc.get()._field_elem.ptr())) {
			_21ebc0693_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		}
	}
	return _48666_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec6840b_builtin_caller_clone(jule::Ptr<_21ebc00aa_Eval>& _54930_e,jule::Ptr<_21c63dc90_FnCallExpr>& _54945_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_54945_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_54945_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_54945_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _56213_d = _21ebdeea9_eval_expr_kind(_54930_e, _54945_fc.get()._field_args[0LL].get()._field_kind);
	if ((_56213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_21ec08214_supports_cloning(_56213_d.get()._field_kind.ptr())))) {
		{
			
			if ((_21ec096ee_slc(_56213_d.get()._field_kind.ptr()) != nullptr) || (_21ec0a359_map(_56213_d.get()._field_kind.ptr()) != nullptr) || (_21ec09424_arr(_56213_d.get()._field_kind.ptr()) != nullptr) || (_21ec08a94_sptr(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_23001ba78:;
				{
					{
						_21ebc0693_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_56213_d.get()._field_kind.ptr()))}));
					}
				}
			}
			else if ((_21ec09ca4_strct(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_23001b418:;
				{
					{
						_21ebc0693_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			else {
				_case_begin_23001b3a2:;
				{
					{
						_21ebc0693_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>({jule::Any(_21ec06641_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_23001ac31:;
		}
	}
	_56213_d.get()._field_mutable=true;
	_56213_d.get()._field_model=jule::Any(jule::new_ptr<_21dd1196c_BuiltinCloneCallExprModel>(_21dd1196c_BuiltinCloneCallExprModel(_56213_d.get()._field_model)));
	return _56213_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec8a54e_builtin_caller_assert(jule::Ptr<_21ebc00aa_Eval>& _59531_e,jule::Ptr<_21c63dc90_FnCallExpr>& _59546_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_59546_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_59546_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_59546_fc.get()._field_args.len() > 2LL)) {
		_21ebc0693_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _60713_expr = _21ebe0718_eval_expr(_59531_e, _59546_fc.get()._field_args[0LL]);
	if ((_60713_expr == nullptr)) {
		return nullptr;
	}
	if ((_21ec087b9_prim(_60713_expr.get()._field_kind.ptr()) == nullptr) || (!(_21ec0e9e0_is_bool(_21ec087b9_prim(_60713_expr.get()._field_kind.ptr()).ptr())))) {
		_21ebc0693_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21dd129b2_BuiltinAssertCallExprModel> _61613_model = jule::new_ptr<_21dd129b2_BuiltinAssertCallExprModel>(_21dd129b2_BuiltinAssertCallExprModel(_59546_fc.get()._field_token,_60713_expr.get()._field_model,jule::Str("assertion failed", 16)));
	if ((_59546_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_21ebbd053_Data> _62417_log = _21ebe0718_eval_expr(_59531_e, _59546_fc.get()._field_args[1LL]);
		if ((_62417_log == nullptr)) {
			return nullptr;
		}
		if (((!(_21ebbda59_is_const(_62417_log.ptr()))) || (_21ec087b9_prim(_62417_log.get()._field_kind.ptr()) == nullptr)) || (!(_21ec0ecba_is_str(_21ec087b9_prim(_62417_log.get()._field_kind.ptr()).ptr())))) {
			_21ebc0693_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("const str", 9)),jule::Any(_21ec06641_to_str(_62417_log.get()._field_kind.ptr()))}));
			return nullptr;
		}
		_61613_model.get()._field_log=_21eaa0155_read_str(_62417_log.get()._field_constant.ptr());
	}
	jule::Ptr<_21ebbd053_Data> _63713_d = _21ec020ed_build_void_data();
	_63713_d.get()._field_model=jule::Any(_61613_model);
	return _63713_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec8aa5a_builtin_caller_std_mem_size_of(jule::Ptr<_21ebc00aa_Eval>& _64240_e,jule::Ptr<_21c63dc90_FnCallExpr>& _64255_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_64255_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _64613_result = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
	if ((_64255_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _64613_result;
	}
	if ((_64255_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_64240_e.ptr(), _64255_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _65813_d = _21ebdeea9_eval_expr_kind(_64240_e, _64255_fc.get()._field_args[0LL].get()._field_kind);
	if ((_65813_d == nullptr)) {
		return _64613_result;
	}
	_64613_result.get()._field_model=jule::Any(jule::new_ptr<_21dd13d37_SizeofExprModel>(_21dd13d37_SizeofExprModel(_65813_d.get()._field_model)));
	return _64613_result;
}



inline jule::Ptr<_21ebbd053_Data> _21ec8b055_builtin_caller_std_mem_align_of(jule::Ptr<_21ebc00aa_Eval>& _66741_e,jule::Ptr<_21c63dc90_FnCallExpr>& _66756_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_66756_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _67113_result = jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
	if ((_66756_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _67113_result;
	}
	if ((_66756_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_66741_e.ptr(), _66756_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _68313_d = _21ebdeea9_eval_expr_kind(_66741_e, _66756_fc.get()._field_args[0LL].get()._field_kind);
	if ((_68313_d == nullptr)) {
		return _67113_result;
	}
	_67113_result.get()._field_model=jule::Any(jule::new_ptr<_21dd144db_AlignofExprModel>(_21dd144db_AlignofExprModel(_68313_d.get()._field_model)));
	return _67113_result;
}



inline jule::Ptr<_21ebbd053_Data> _21ec8b550_builtin_caller_std_mem_free(jule::Ptr<_21ebc00aa_Eval>& _69237_e,jule::Ptr<_21c63dc90_FnCallExpr>& _69252_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_69252_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_69252_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	}
	if ((_69252_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _70513_d = _21ebdeea9_eval_expr_kind(_69237_e, _69252_fc.get()._field_args[0LL].get()._field_kind);
	if ((_70513_d == nullptr)) {
		return nullptr;
	}
	if ((!(_21ec07e39_performs_rc(_70513_d.get()._field_kind.ptr())))) {
		_21ebc0693_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _71413_result = _21ec020ed_build_void_data();
	_71413_result.get()._field_model=jule::Any(jule::new_ptr<_21dd158e9_FreeExprModel>(_21dd158e9_FreeExprModel(_70513_d.get()._field_model)));
	return _71413_result;
}



inline jule::Ptr<_21ebbd053_Data> _21ec8ba6c_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_21ebc00aa_Eval>& _71951_e,jule::Ptr<_21c63dc90_FnCallExpr>& _71966_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((_71966_fc.get()._field_generics.len() > 0LL)) {
		_21ebc0693_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_71966_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_71966_fc.get()._field_args.len() > 1LL)) {
		_21ebc0693_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_21ebbd053_Data> _73213_d = _21ebdeea9_eval_expr_kind(_71951_e, _71966_fc.get()._field_args[0LL].get()._field_kind);
	if ((_73213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_21ec15c49_is_builtin_str_convertable(_73213_d.get()._field_kind)))) {
		_21ebc0693_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_21ebbd053_Data>(_21ebbd053_Data(jule::new_ptr<_21ec06223_TypeKind>(_21ec06223_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_21ec05bd4_Kind>(_21ec16387_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_21ec06223_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_21dd14b18_IntegratedToStrExprModel>(_21dd14b18_IntegratedToStrExprModel(_73213_d.get()._field_model)))),jule::Bool(),jule::Ptr<_21ea9d450_Const>()));
}



inline jule::Ptr<_21ebbd053_Data> _21ec8c067_builtin_caller_std_jule_integrated_emit(jule::Ptr<_21ebc00aa_Eval>& _75049_e,jule::Ptr<_21c63dc90_FnCallExpr>& _75064_fc,jule::Ptr<_21ebbd053_Data>& ) {
	if ((!(_21ebc12ed_is_unsafe(_75049_e.ptr())))) {
		_21ebc0693_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	if ((_75064_fc.get()._field_args.len() < 1LL)) {
		_21ebc0693_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _76013_d = _21ebe0718_eval_expr(_75049_e, _75064_fc.get()._field_args[0LL]);
	if ((_76013_d == nullptr)) {
		return nullptr;
	}
	if ((_21ec087b9_prim(_76013_d.get()._field_kind.ptr()) == nullptr) || (!(_21ec0ecba_is_str(_21ec087b9_prim(_76013_d.get()._field_kind.ptr()).ptr())))) {
		_21ebc0693_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_21ec06641_to_str(_76013_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	if ((!(_21ebbda59_is_const(_76013_d.ptr()))) || (!(_21eaa2c07_is_str(_76013_d.get()._field_constant.ptr())))) {
		_21ebc0693_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_21ebbd053_Data> _77513_r = _21ec020ed_build_void_data();
	if ((_75064_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_21eb59000_check_generic_quantity(_75049_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_75064_fc.get()._field_generics.len()),_75064_fc.get()._field_token)))) {
			return nullptr;
		}
		jule::Ptr<_21ec0aa85_TypeSymbol> _78117_k = _21dd27ec2_build_type(_75064_fc.get()._field_generics[0LL]);
		if ((!(_21eb5b9d6_check_type(_75049_e.get()._field_s, _78117_k,_75049_e.get()._field_lookup)))) {
			return nullptr;
		}
		_77513_r.get()._field_kind=_78117_k.get()._field_kind;
	}
	jule::Ptr<_21dd15597_BackendEmitExprModel> _78813_model = jule::new_ptr<_21dd15597_BackendEmitExprModel>(_21dd15597_BackendEmitExprModel(_21eaa0155_read_str(_76013_d.get()._field_constant.ptr()),jule::Slice<jule::Any>()));
	if ((_75064_fc.get()._field_args.len() > 1LL)) {
		_78813_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>((_75064_fc.get()._field_args.len() - 1LL)));
		{
			auto expr = _75064_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_230052691:;
			if (it != expr.end()) {
				jule::Ptr<_21c4d7b4a_Expr> _230053098_arg = *it;
				{
					jule::Ptr<_21ebbd053_Data> _79521_argd = _21ebdeea9_eval_expr_kind(_75049_e, _230053098_arg.get()._field_kind);
					if ((_79521_argd == nullptr)) {
						return nullptr;
					}
					_78813_model.get()._field_exprs = jule::alloc_for_append(_78813_model.get()._field_exprs,1);_78813_model.get()._field_exprs.__push(_79521_argd.get()._field_model);
				}
				_iter_next_230052691:;
				++it;
				goto _iter_begin_230052691;
			}
			_iter_end_230052691:;
		}
	}
	_77513_r.get()._field_model=jule::Any(_78813_model);
	return _77513_r;
}



inline jule::Ptr<_21ebbd053_Data> _21ec8c540_builtin_caller_std_debug_out(jule::Ptr<_21ebc00aa_Eval>& _80738_e,jule::Ptr<_21c63dc90_FnCallExpr>& _80753_fc,jule::Ptr<_21ebbd053_Data>& _80775_d) {
	_80775_d=_21ec66e54_builtin_caller_out(_80738_e,_80753_fc,_80775_d);
	if ((_80775_d == nullptr)) {
		return nullptr;
	}
	_80775_d.get()._field_model.operator jule::Ptr<_21dd110dc_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _80775_d;
}



inline jule::Ptr<_21ebbd053_Data> _21ec8ca3a_builtin_caller_std_debug_outln(jule::Ptr<_21ebc00aa_Eval>& _81740_e,jule::Ptr<_21c63dc90_FnCallExpr>& _81755_fc,jule::Ptr<_21ebbd053_Data>& _81777_d) {
	_81777_d=_21ec670b9_builtin_caller_outln(_81740_e,_81755_fc,_81777_d);
	if ((_81777_d == nullptr)) {
		return nullptr;
	}
	_81777_d.get()._field_model.operator jule::Ptr<_21dd115a4_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _81777_d;
}



inline std::tuple<jule::Bool,jule::Bool> _21c482144_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_2300933c4:;
			{
				_925_ok=_21c34cb36_is_windows(_21c35c393_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_230092d0d:;
			{
				_925_ok=_21c34ce88_is_darwin(_21c35c393_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_230092d74:;
			{
				_925_ok=_21c34d296_is_linux(_21c35c393_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_230092dda:;
			{
				_925_ok=_21c34e022_is_unix(_21c35c393_OS);
			}
		}
		else {
			_case_begin_230092549:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_2300929ab:;
	}
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _21c4822a9_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_230096064:;
			{
				_3027_ok=_21c34d5e8_is_i386(_21c3828a2_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_23009599d:;
			{
				_3027_ok=_21c34d906_is_amd64(_21c3828a2_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_230095a14:;
			{
				_3027_ok=_21c34dc14_is_arm64(_21c3828a2_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_230095a7a:;
			{
				_3027_ok=_21c34e6c6_is_64bit(_21c3828a2_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_230095ae1:;
			{
				_3027_ok=_21c34e3b8_is_32bit(_21c3828a2_ARCH);
			}
		}
		else {
			_case_begin_2300951d9:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_23009564b:;
	}
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _21c48241e_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_235ba4c8d_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();
	(_5432_p).mut_slice(0LL,_569_n - static_cast<jule::I64>(static_cast<jule::I64>(_235b88975_ext(_5432_p).len())));
	jule::Str _6213_a1 = jule::Str();
	jule::Str _6513_a2 = jule::Str();
	jule::I64 _6813_i = _2368ba1de_find_last_byte(_5432_p,'_');
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;
		jule::Bool _7126_exist;
		std::tie(_7118_ok,_7126_exist) = _21c482144_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		}
		std::tie(_7118_ok,_7126_exist) = _21c4822a9_check_arch(_5432_p);
		return (!(_7126_exist)) || _7118_ok;
	}
	if ((_6813_i + 1LL) >= _569_n) {
		return true;
	}
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);
	_6813_i=static_cast<jule::I64>(_2368ba1de_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	}
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;
		jule::Bool _9226_exist;
		std::tie(_9218_ok,_9226_exist) = _21c482144_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		}
		std::tie(_9218_ok,_9226_exist) = _21c4822a9_check_arch(_6213_a1);
		return (!(_9226_exist)) || _9218_ok;
	}
	jule::Bool _10014_ok;
	jule::Bool _10022_exist;
	std::tie(_10014_ok,_10022_exist) = _21c4822a9_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		}
		std::tie(_10014_ok,_10022_exist) = _21c482144_check_os(_6513_a2);
		return (!(_10022_exist)) || _10014_ok;
	}
	std::tie(_10014_ok,_10022_exist) = _21c482144_check_os(_6213_a1);
	return (!(_10022_exist)) || _10014_ok;
}



inline void _21c483574_set_os_vars(jule::Slice<jule::Str>& _3321_vars) {
	_3321_vars = jule::alloc_for_append(_3321_vars,1);_3321_vars.__push(_21c35c393_OS);
	if (_21c34e022_is_unix(_21c35c393_OS)) {
		_3321_vars = jule::alloc_for_append(_3321_vars,1);_3321_vars.__push(jule::Str("unix", 4));
	}
}



inline void _21c48383d_set_arch_vars(jule::Slice<jule::Str>& _4123_vars) {
	_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(_21c3828a2_ARCH);
	if (_21c34e6c6_is_64bit(_21c3828a2_ARCH)) {
		_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(jule::Str("x64", 3));
	}
	if (_21c34e3b8_is_32bit(_21c3828a2_ARCH)) {
		_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(jule::Str("x32", 3));
	}
}



inline void _21c483b90_init_vars(jule::Slice<jule::Str>& _5219_vars,_21c483200_CompileInfo& _5233_info) {
	_21c483574_set_os_vars(_5219_vars);
	_21c48383d_set_arch_vars(_5219_vars);
	if (_5233_info._field_prod) {
		_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("production", 10));
	}
	if (_5233_info._field_test) {
		_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("test", 4));
	}
	{
		auto &_match_expr{ _5233_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2300a245a:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("clang", 5));
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2300a4407:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("gcc", 3));
			}
		}
		_match_end_2300a43a2:;
	}
	{
		auto &_match_expr{ _5233_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2300a4c76:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2300a446d:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2300a54d5:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp20", 5));
			}
		}
		_match_end_2300a4c21:;
	}
}



inline jule::Slice<jule::U8> _21cbd812a_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__235a2b97d_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			
			_21c388963_exit(1LL);
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _21c348b32_Log _21cbdb54b_flat_compiler_err(jule::Str _4122_text) {
	return _21c348b32_Log(static_cast<jule::I64>(1LL),jule::I64(),jule::I64(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline void _21cd6ad18_push_passes(jule::Ptr<_21eb4d269_Package>& _9021_p,jule::Slice<jule::Str>& _9045_passes) {
	{
		auto &expr = _9021_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_2300b9be2:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _2300b8a7b_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _2300b8a7b_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_2300c28cb:;
					if (it != expr.end()) {
						_21dd27b09_Pass _2300c2920_pass = *it;
						{
							if (_2300c2920_pass._field_text.empty()) {
								goto _iter_next_2300c28cb;
							}
							{
								auto &expr = _9045_passes;
								auto it = expr.begin();
								_iter_begin_2300c36bd:;
								if (it != expr.end()) {
									jule::Str _2300c33e3_cpass = *it;
									{
										if (_2300c33e3_cpass == _2300c2920_pass._field_text) {
											goto _iter_next_2300c28cb;
										}
									}
									_iter_next_2300c36bd:;
									++it;
									goto _iter_begin_2300c36bd;
								}
								_iter_end_2300c36bd:;
							}
							_9045_passes = jule::alloc_for_append(_9045_passes,1);_9045_passes.__push(_2300c2920_pass._field_text);
						}
						_iter_next_2300c28cb:;
						++it;
						goto _iter_begin_2300c28cb;
					}
					_iter_end_2300c28cb:;
				}
			}
			_iter_next_2300b9be2:;
			++it;
			goto _iter_begin_2300b9be2;
		}
		_iter_end_2300b9be2:;
	}
}



inline jule::Slice<jule::Str> _21cd6e79a_get_all_unique_passes(jule::Ptr<_21eb4d269_Package>& _10731_pkg,jule::Slice<jule::Ptr<_21eb49c8d_ImportInfo>> _10756_uses) {
	jule::Slice<jule::Str> _10813_passes = nullptr;
	_21cd6ad18_push_passes(_10731_pkg,_10813_passes);
	{
		auto &expr = _10756_uses;
		auto it = expr.begin();
		_iter_begin_2300c4b86:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> _2300c5181_u = *it;
			{
				if ((!(_2300c5181_u.get()._field_cpp_linked))) {
					_21cd6ad18_push_passes(_2300c5181_u.get()._field_package,_10813_passes);
				}
			}
			_iter_next_2300c4b86:;
			++it;
			goto _iter_begin_2300c4b86;
		}
		_iter_end_2300c4b86:;
	}
	return _10813_passes;
}



inline _21c483200_CompileInfo _21cd73ace_build_compile_info(void) {
	_21c483200_CompileInfo _12113_info = _21c483200_CompileInfo(_2359a5011_PRODUCTION,_2359a6a90_TEST,jule::Str("clang", 5),jule::Str("cpp14", 5));
	{
		auto &_match_expr{ _2359a6177_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2300c64c3:;
			{
				_12113_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2300c6539:;
			{
				_12113_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_2300c646d:;
	}
	{
		auto &_match_expr{ _2359a652e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2300c65a0:;
			{
				_12113_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2300c7095:;
			{
				_12113_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2300c710b:;
			{
				_12113_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_2300c687a:;
	}
	return _12113_info;
}



inline jule::Ptr<_21c525490_Directive> _21c3e2e51_find_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>& _3324_directives,jule::Str _3355_tag) {
	{
		auto &expr = _3324_directives;
		auto it = expr.begin();
		_iter_begin_2300dd81a:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _2300dd892_dr = *it;
			{
				if (_2300dd892_dr.get()._field_tag._field_kind == _3355_tag) {
					return _2300dd892_dr;
				}
			}
			_iter_next_2300dd81a:;
			++it;
			goto _iter_begin_2300dd81a;
		}
		_iter_end_2300dd81a:;
	}
	return nullptr;
}



inline jule::Bool _21c3ed91d_has_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>& _4319_directives,jule::Str _4350_tag) {
	return (_21c3e2e51_find_directive(_4319_directives,_4350_tag) != nullptr);
}



inline jule::Bool _21c3d908a_is_exist(jule::Slice<jule::Any> _4813_arr,jule::Any _4825_t) {
	{
		auto &expr = _4813_arr;
		auto it = expr.begin();
		_iter_begin_2300de8c6:;
		if (it != expr.end()) {
			jule::Any &_2300e04a9_ref = *it;
			{
				if (_4825_t == _2300e04a9_ref) {
					return true;
				}
			}
			_iter_next_2300de8c6:;
			++it;
			goto _iter_begin_2300de8c6;
		}
		_iter_end_2300de8c6:;
	}
	return false;
}



inline jule::Bool _21c41149c_is_dead(jule::Any _5816_ref) {
	jule::Bool _5828_dead = jule::Bool();
	if (_21c3d908a_is_exist(_21c3e8330_deads,_5816_ref)) {
		_5828_dead = true;
		return _5828_dead;
	}
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_21dd1cc42_FnIns>>()) {
			_case_begin_2300e2a50:;
			{
				if (_21dd1a091_is_init(_5816_ref.operator jule::Ptr<_21dd1cc42_FnIns>().get()._field_decl.ptr())) {
					goto _match_end_2300e1576;
				}
				goto _case_begin_2300e192d;
			}
		}
		else {
			_case_begin_2300e192d:;
			{
				if ((_21c41721c_current == _5816_ref) || (_21c42006b_main_current == _5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
				if (_21c3d908a_is_exist(_21c40ac6b_checking,_5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
			}
		}
		_match_end_2300e1576:;
	}
	jule::Any _7913_old = _21c41721c_current;
	_21c41721c_current=_5816_ref;
	jule::I64 _819_len = _21c40ac6b_checking.len();
	_21c40ac6b_checking = jule::alloc_for_append(_21c40ac6b_checking,1);_21c40ac6b_checking.__push(_5816_ref);
	__JULE_DEFER({
		_21c41721c_current=_7913_old;
		_21ce8485a_drop_ref(_21c40ac6b_checking,_819_len);
	});
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_21dd1cc42_FnIns>>()) {
			_case_begin_2300e4c2d:;
			{
				_5828_dead = _21ceaad59_is_fn_dead(_5816_ref.operator jule::Ptr<_21dd1cc42_FnIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21eb75615_Var>>()) {
			_case_begin_2300e4cd8:;
			{
				_5828_dead = _21d021254_is_var_dead(_5816_ref.operator jule::Ptr<_21eb75615_Var>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd06742_StructIns>>()) {
			_case_begin_2300e4d4e:;
			{
				_5828_dead = _21d0908de_is_struct_dead(_5816_ref.operator jule::Ptr<_21dd06742_StructIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21deee929_Trait>>()) {
			_case_begin_2300e48ed:;
			{
				_5828_dead = _21d09289c_is_trait_dead(_5816_ref.operator jule::Ptr<_21deee929_Trait>());
				return _5828_dead;
			}
		}
		else {
			_case_begin_2300e4656:;
			{
				_5828_dead = false;
				return _5828_dead;
			}
		}
		_match_end_2300e47aa:;
	}
}



inline void _21ce8485a_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::I64 _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,_10631_pos);
}



inline jule::Bool _21cea458e_is_all_references_are_dead(jule::Ptr<_21dd264ba_ReferenceStack> _11435_references) {
	jule::I64 _11513_i = 0LL;
	for (; _11513_i < static_cast<jule::I64>(static_cast<jule::I64>(_21dd26b2a_len(_11435_references.ptr()))); (_11513_i)++) {
		{
			jule::Any _11717_ref = _21dd26ed2_at(_11435_references.ptr(), _11513_i);
			if (_11717_ref == _21c41721c_current) {
				goto _iter_next_2300e7527;
			}
			if (_11717_ref == _21c42006b_main_current) {
				goto _iter_next_2300e7527;
			}
			if ((!(_21c41149c_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_2300e7527:;
	}
	_iter_end_2300e7527:;
	return true;
}



inline jule::Bool _21ceaad59_is_fn_dead(jule::Ptr<_21dd1cc42_FnIns> _13119_f) {
	if (_13119_f.get()._field_decl.get()._field_cpp_linked || _13119_f.get()._field_anon) {
		return false;
	}
	if (_21dd19cb6_is_entry_point(_13119_f.get()._field_decl.ptr()) || _21dd1a091_is_init(_13119_f.get()._field_decl.ptr())) {
		return (!(_13119_f.get()._field_decl.get()._field_statically));
	}
	if (_2359a6a90_TEST && _21c3ed91d_has_directive(_13119_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		return false;
	}
	if ((_13119_f.get()._field_owner != nullptr)) {
		if (_21c3d908a_is_exist(_21c40ac6b_checking,jule::Any(_13119_f.get()._field_owner))) {
			return true;
		}
		return _21c41149c_is_dead(jule::Any(_13119_f.get()._field_owner));
	}
	return _21cea458e_is_all_references_are_dead(_13119_f.get()._field_references);
}



inline jule::Bool _21d021254_is_var_dead(jule::Ptr<_21eb75615_Var> _16120_v) {
	if (_16120_v.get()._field_constant) {
		return true;
	}
	if (_16120_v.get()._field_cpp_linked) {
		return false;
	}
	return _21cea458e_is_all_references_are_dead(_16120_v.get()._field_references);
}



inline jule::Bool _21d0908de_is_struct_dead(jule::Ptr<_21dd06742_StructIns> _20623_s) {
	return false;
}



inline jule::Bool _21d09289c_is_trait_dead(jule::Ptr<_21deee929_Trait> _22322_t) {
	return false;
}



inline void _21d0a45c3_eliminate_dead_functions(jule::Slice<jule::Ptr<_21dd19249_Fn>>& _24034_funcs) {
	jule::I64 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I64>(static_cast<jule::I64>(_24034_funcs.len()))) {
		{
			jule::Ptr<_21dd19249_Fn> _24317_f = _24034_funcs[_24113_i];
			jule::I64 _24417_j = 0LL;
			while (_24417_j < static_cast<jule::I64>(static_cast<jule::I64>(_24317_f.get()._field_instances.len()))) {
				{
					jule::Ptr<_21dd1cc42_FnIns> _24621_ins = _24317_f.get()._field_instances[_24417_j];
					_21c42006b_main_current=jule::Any(_24621_ins);
					if (_21ceaad59_is_fn_dead(_24621_ins)) {
						_21c3e8330_deads = jule::alloc_for_append(_21c3e8330_deads,1);_21c3e8330_deads.__push(jule::Any(_24621_ins));
						_24317_f.get()._field_instances=jule::append(_24317_f.get()._field_instances.slice(0LL,_24417_j),_24317_f.get()._field_instances.slice((_24417_j + 1LL)));
					} else {
						(_24417_j)++;
					}
				}
			_iter_next_230108c97:;
			}
			_iter_end_230108c97:;
			if ((_24317_f.get()._field_instances.len() == 0LL)) {
				_24034_funcs=jule::append(_24034_funcs.slice(0LL,_24113_i),_24034_funcs.slice((_24113_i + 1LL)));
				goto _iter_next_2301080d7;
			}
			(_24113_i)++;
		}
	_iter_next_2301080d7:;
	}
	_iter_end_2301080d7:;
}



inline void _21d0a6b69_eliminate_dead_globals(jule::Ptr<_21eb4d269_Package>& _26532_pkg) {
	{
		auto &expr = _26532_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_23010b96a:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _23010c3c7_f = *it;
			{
				jule::I64 _26717_i = 0LL;
				while (_26717_i < static_cast<jule::I64>(static_cast<jule::I64>(_23010c3c7_f.get()._field_vars.len()))) {
					{
						jule::Ptr<_21eb75615_Var> _26921_v = _23010c3c7_f.get()._field_vars[_26717_i];
						_21c42006b_main_current=jule::Any(_26921_v);
						if (_21d021254_is_var_dead(_26921_v)) {
							_21c3e8330_deads = jule::alloc_for_append(_21c3e8330_deads,1);_21c3e8330_deads.__push(jule::Any(_26921_v));
							_23010c3c7_f.get()._field_vars=jule::append(_23010c3c7_f.get()._field_vars.slice(0LL,_26717_i),_23010c3c7_f.get()._field_vars.slice((_26717_i + 1LL)));
						} else {
							(_26717_i)++;
						}
					}
				_iter_next_23010cbbe:;
				}
				_iter_end_23010cbbe:;
			}
			_iter_next_23010b96a:;
			++it;
			goto _iter_begin_23010b96a;
		}
		_iter_end_23010b96a:;
	}
}



inline void _21d249c85_eliminate_dead_functions_package(jule::Ptr<_21eb4d269_Package>& _28142_pkg) {
	{
		auto &expr = _28142_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_23010abab:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _23010e055_f = *it;
			{
				_21d0a45c3_eliminate_dead_functions(_23010e055_f.get()._field_funcs);
			}
			_iter_next_23010abab:;
			++it;
			goto _iter_begin_23010abab;
		}
		_iter_end_23010abab:;
	}
}



inline void _21d2a5818_keep_alive_init(jule::Ptr<_21eb4d269_Package>& _32925_pkg) {
	
	
	jule::Ptr<_21dd19249_Fn> _33213_f = _21eb4eeb3_find_fn(_32925_pkg.ptr(), jule::Str("init", 4),false);
	if ((_33213_f != nullptr)) {
		_33213_f.get()._field_statically=true;
	}
}



inline void _21d32ca9e_eliminate_package(jule::Ptr<_21eb4d269_Package>& _33827_pkg) {
	_21c3e8330_deads=jule::Slice<jule::Any>::alloc(0LL,1024LL);
	_21d2a5818_keep_alive_init(_33827_pkg);
	_21d0a6b69_eliminate_dead_globals(_33827_pkg);
	_21d249c85_eliminate_dead_functions_package(_33827_pkg);
}



inline void _21d341013_eliminate_defines(jule::Ptr<_21ccec4b4_IR>& _35031_ir) {
	jule::I64 _35113_i = (_35031_ir.get()._field_used.len() - 1LL);
	for (; (_35113_i >= 0LL); (_35113_i)--) {
		{
			jule::Ptr<_21eb49c8d_ImportInfo> _35317_u = _35031_ir.get()._field_used[_35113_i];
			if ((!(_35317_u.get()._field_cpp_linked))) {
				_21d32ca9e_eliminate_package(_35317_u.get()._field_package);
			}
		}
	_iter_next_230119945:;
	}
	_iter_end_230119945:;
	_21d32ca9e_eliminate_package(_35031_ir.get()._field_main);
	_21c3e8330_deads=nullptr;
	_21c40ac6b_checking=nullptr;
	_21c41721c_current=jule::Any(nullptr);
}



inline void _21d1170b4_eliminate_dead_code_of_scope(jule::Ptr<_21eb1472a_Scope> _7937_s) {
	jule::Ptr<_21cd7c19d_ScopeDeadCode> _8013_sdc = jule::new_ptr<_21cd7c19d_ScopeDeadCode>(_21cd7c19d_ScopeDeadCode(jule::Ptr<_21cd7c19d_ScopeDeadCode>(),_7937_s,(&(_7937_s.get()._field_stmts)),jule::I64()));
	{
		_21d109d98_optimize_stmts(_8013_sdc);
	}
}



inline void _21d118cdb_eliminate_scope_functions(jule::Slice<jule::Ptr<_21dd19249_Fn>>& _8835_funcs) {
	{
		auto &expr = _8835_funcs;
		auto it = expr.begin();
		_iter_begin_23011e483:;
		if (it != expr.end()) {
			jule::Ptr<_21dd19249_Fn> _23011e95b_func = *it;
			{
				{
					auto &expr = _23011e95b_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_2301201ba:;
					if (it != expr.end()) {
						jule::Ptr<_21dd1cc42_FnIns> _230120253_ins = *it;
						{
							_21d1170b4_eliminate_dead_code_of_scope(_230120253_ins.get()._field_scope);
						}
						_iter_next_2301201ba:;
						++it;
						goto _iter_begin_2301201ba;
					}
					_iter_end_2301201ba:;
				}
			}
			_iter_next_23011e483:;
			++it;
			goto _iter_begin_23011e483;
		}
		_iter_end_23011e483:;
	}
}



inline void _21d11a65b_eliminate_functions_scope_package(jule::Ptr<_21eb4d269_Package>& _9643_pkg) {
	{
		auto &expr = _9643_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_23011edac:;
		if (it != expr.end()) {
			jule::Ptr<_21ebb6c0b_SymbolTable> _230120495_f = *it;
			{
				_21d118cdb_eliminate_scope_functions(_230120495_f.get()._field_funcs);
			}
			_iter_next_23011edac:;
			++it;
			goto _iter_begin_23011edac;
		}
		_iter_end_23011edac:;
	}
}



inline void _21d120a07_eliminate_scope_package(jule::Ptr<_21eb4d269_Package>& _10233_pkg) {
	_21d11a65b_eliminate_functions_scope_package(_10233_pkg);
}



inline void _21d128108_eliminate_scopes(jule::Ptr<_21ccec4b4_IR>& _10730_ir) {
	jule::I64 _10813_i = (_10730_ir.get()._field_used.len() - 1LL);
	for (; (_10813_i >= 0LL); (_10813_i)--) {
		{
			jule::Ptr<_21eb49c8d_ImportInfo> _11017_u = _10730_ir.get()._field_used[_10813_i];
			if ((!(_11017_u.get()._field_cpp_linked))) {
				_21d120a07_eliminate_scope_package(_11017_u.get()._field_package);
			}
		}
	_iter_next_2301205d8:;
	}
	_iter_end_2301205d8:;
	_21d120a07_eliminate_scope_package(_10730_ir.get()._field_main);
}



inline void _21d161bbe_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_21c388963_exit(1LL);
}



inline jule::Bool _220246dc3_is_std_package(jule::Str _37319_f,jule::Str _37327_p) {
	return _236849954_has_prefix(_37319_f,_235b71c27_join(jule::Slice<jule::Str>({_21c35922a_PATH_STDLIB,_37327_p})));
}



inline jule::Bool _22024728b_is_constant_valid_conditional_case(jule::Ptr<_235bb50ab_If>& _37740_i) {
	{
		auto &_match_expr{ _37740_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
			_case_begin_2301eb7d5:;
			{
				jule::Ptr<_21ea9d450_Const> _38013_c = _37740_i.get()._field_expr.operator jule::Ptr<_21ea9d450_Const>();
				return _21eaa292c_is_bool(_38013_c.ptr()) && _21ea9ed7a_read_bool(_38013_c.ptr());
			}
		}
		_match_end_2301eb780:;
	}
	return false;
}



inline jule::Bool _220247566_is_unreachable_expr(jule::Any& _38625_expr) {
	{
		auto &_match_expr{ _38625_expr };
		
		if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
			_case_begin_2301ec2db:;
			{
				jule::Ptr<_21ea9d450_Const> _38913_c = _38625_expr.operator jule::Ptr<_21ea9d450_Const>();
				return _21eaa292c_is_bool(_38913_c.ptr()) && (!(_21ea9ed7a_read_bool(_38913_c.ptr())));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21dd08de8_BinopExprModel>>()) {
			_case_begin_2301ec352:;
			{
				jule::Ptr<_21dd08de8_BinopExprModel> _39213_m = _38625_expr.operator jule::Ptr<_21dd08de8_BinopExprModel>();
				if ((_39213_m.get()._field_op._field_kind == jule::Str("&&", 2))) {
					return _220247566_is_unreachable_expr(_39213_m.get()._field_left.get()._field_model) || _220247566_is_unreachable_expr(_39213_m.get()._field_right.get()._field_model);
				}
			}
		}
		_match_end_2301ece46:;
	}
	return false;
}



inline jule::Bool _22024790c_is_constant_valid_match_case(jule::Ptr<_21eb2e27d_Case>& _40034_case) {
	{
		auto &expr = _40034_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_230201389:;
		if (it != expr.end()) {
			jule::Ptr<_21ebbd053_Data> &_230201422_expr = *it;
			{
				if ((_21ebbda59_is_const(_230201422_expr.ptr()) && _21eaa292c_is_bool(_230201422_expr.get()._field_constant.ptr())) && _21ea9ed7a_read_bool(_230201422_expr.get()._field_constant.ptr())) {
					return true;
				}
			}
			_iter_next_230201389:;
			++it;
			goto _iter_begin_230201389;
		}
		_iter_end_230201389:;
	}
	return false;
}



inline jule::Bool _220247c4d_is_unreachable_conditional_case(jule::Ptr<_235bb50ab_If>& _40937_i) {
	return _220247566_is_unreachable_expr(_40937_i.get()._field_expr);
}



inline jule::Bool _22024808e_is_unreachable_match_case(jule::Ptr<_21eb2e27d_Case>& _41331_case) {
	{
		auto &expr = _41331_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_230202eb2:;
		if (it != expr.end()) {
			jule::Ptr<_21ebbd053_Data> &_2302030a0_expr = *it;
			{
				if ((!(_220247566_is_unreachable_expr(_2302030a0_expr.get()._field_model)))) {
					return false;
				}
			}
			_iter_next_230202eb2:;
			++it;
			goto _iter_begin_230202eb2;
		}
		_iter_end_230202eb2:;
	}
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _220251c57_check_for_bit_shift_opt(jule::Ptr<_21dd08854_OperandExprModel>& _43329_l,jule::Ptr<_21dd08854_OperandExprModel>& _43352_r) {
	jule::Bool _43376_ok = jule::Bool();
	jule::U64 _43386_x = jule::U64();
	if ((!(_21eb2b236_is_int(_21ec06641_to_str(_43329_l.get()._field_kind.ptr())))) || (!(_21eb2b236_is_int(_21ec06641_to_str(_43352_r.get()._field_kind.ptr()))))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	}
	{
		auto &_match_expr{ _43352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21ea9d450_Const>>()) {
			_case_begin_23020613b:;
			{
				goto _match_end_230205aec;
			}
		}
		else {
			_case_begin_230205b96:;
			{
				_43376_ok = false;
				_43386_x = 0LLU;
				return std::make_tuple(_43376_ok,_43386_x);
			}
		}
		_match_end_230205aec:;
	}
	_43386_x=static_cast<jule::U64>(_21eaa09d5_as_u64(_43352_r.get()._field_model.operator jule::Ptr<_21ea9d450_Const>().ptr()));
	if ((_43386_x == 0LLU) || ((_43386_x & 1LL) != 0LLU)) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	}
	jule::F64 _4479_j = _21ea0d624_log2(static_cast<jule::F64>(static_cast<jule::F64>(_43386_x)));
	jule::U64 _4489_z = static_cast<jule::U64>(_4479_j);
	if (static_cast<jule::F64>(_4489_z) != _4479_j) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	}
	_43376_ok = true;
	_43386_x = _4489_z;
	return std::make_tuple(_43376_ok,_43386_x);
}



inline jule::U64 _220dcb12d_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _220dcb518_unix_year_to_seconds(jule::U64 _25725_y,jule::Bool& _25743_leap) {
	if (((_25725_y - 2LLU) <= 136LLU)) {
		jule::U64 _25917_leaps = ((_25725_y - 68LLU) >> 2LLU);
		_25743_leap=(((_25725_y - 68LLU) & 3LLU) == 0LLU);
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(31536000LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_25725_y - 70LLU)))))) + static_cast<jule::U64>(static_cast<jule::U64>(86400LLU * _25917_leaps)));
	}
	jule::U64 _26713_leaps = 0LLU;
	jule::U64 _26813_centuries = 0LLU;
	jule::U64 _26913_cycles = ((_25725_y - 100LLU) / 400LLU);
	jule::U64 _27013_rem = ((_25725_y - 100LLU) % 400LL);
	if ((_27013_rem < 0LLU)) {
		(_26913_cycles)--;
		_27013_rem+=400LLU;
	}
	if ((_27013_rem == 0LLU)) {
		_25743_leap=true;
		_26813_centuries=0LLU;
		_26713_leaps=0LLU;
	} else {
		if ((_27013_rem >= 200LLU)) {
			if ((_27013_rem >= 300LLU)) {
				_26813_centuries=3LLU;
				_27013_rem-=300LLU;
			} else {
				_26813_centuries=2LLU;
				_27013_rem-=200LLU;
			}
		} else {
			if ((_27013_rem >= 100LLU)) {
				_26813_centuries=1LLU;
				_27013_rem-=100LLU;
			} else {
				_26813_centuries=0LLU;
			}
		}
		if ((_27013_rem == 0LLU)) {
			_25743_leap=false;
			_26713_leaps=0LLU;
		} else {
			_26713_leaps=static_cast<jule::U64>(_27013_rem >> 2LLU);
			_27013_rem%=4LL;
			_25743_leap=(_27013_rem == 0LLU);
		}
	}
	_26713_leaps+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(97LLU * _26913_cycles)) + static_cast<jule::U64>(static_cast<jule::U64>(24LLU * _26813_centuries)));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_25725_y - 100LLU)))) * 31536000LLU))) + static_cast<jule::U64>(static_cast<jule::U64>((_26713_leaps * 86400LLU))))) + 946684800LLU))) + 86400LLU));
}



inline jule::U64 _220dcb947_unix_month_to_seconds(jule::U64 _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto &_match_expr{ _31426_m };
		
		if (_match_expr == 1LL) {
			_case_begin_230237106:;
			{
				_31613_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_230238d61:;
			{
				_31613_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_230238dc7:;
			{
				_31613_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_230238e3d:;
			{
				_31613_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_230238ea4:;
			{
				_31613_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_23023901a:;
			{
				_31613_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_230239081:;
			{
				_31613_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_2302390e7:;
			{
				_31613_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_23023916e:;
			{
				_31613_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_2302391e6:;
			{
				_31613_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_23023926d:;
			{
				_31613_t=28857600LLU;
			}
		}
		_match_end_230238beb:;
	}
	if (_31439_leap && (_31426_m >= 2LLU)) {
		_31613_t+=86400LLU;
	}
	return _31613_t;
}



inline jule::Bool _2201e48dc_is_copy_optimizable(jule::Ptr<_21ebbd053_Data>& _75225_expr) {
	if ((!(_75225_expr.get()._field_lvalue))) {
		return false;
	}
	{
		auto &_match_expr{ _75225_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_21dd0d23d_SlicingExprModel>>()) {
			_case_begin_23057a713:;
			{
				return false;
			}
		}
		_match_end_23057a67a:;
	}
	return true;
}



inline jule::Bool _2201e5cc8_is_iter_copy_optimizable(jule::Ptr<_21ebbd053_Data>& _76330_expr,jule::Ptr<_21eb75615_Var>& _76344_v) {
	if ((!(_76330_expr.get()._field_lvalue)) && (!(_21ec07884_mutable(_76330_expr.get()._field_kind.ptr())))) {
		return true;
	}
	return (!(_76344_v.get()._field_mutable)) && (!(_76330_expr.get()._field_mutable));
}



inline jule::Str _22025e1b5_concat_all_parts(jule::Slice<_21c627dde_Token> _115821_parts) {
	jule::Str _115913_s = jule::Str();
	{
		auto &expr = _115821_parts;
		auto it = expr.begin();
		_iter_begin_23057e22d:;
		if (it != expr.end()) {
			_21c627dde_Token &_23057e2c7_p = *it;
			{
				_115913_s+=_23057e2c7_p._field_kind;
			}
			_iter_next_23057e22d:;
			++it;
			goto _iter_begin_23057e22d;
		}
		_iter_end_23057e22d:;
	}
	return _115913_s;
}



inline jule::Str _22025e517_decompose_common_esq(jule::U8 _116625_b) {
	{
		auto &_match_expr{ _116625_b };
		
		if (_match_expr == '\\') {
			_case_begin_23058040a:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_230580471:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_2305800ec:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_230580163:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_2305801c9:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_23057edaa:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_23057ee21:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_23057ee87:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_23057eeed:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_230580509:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_23057ec89:;
			{
				return jule::Str();
			}
		}
		_match_end_23057e5d5:;
	}
}



inline jule::Str _22025e825_sbtoa(jule::U8 _119310_b) {
	if ((_119310_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	}
	if ((_119310_b < 128LLU)) {
		jule::Str _119813_seq = _22025e517_decompose_common_esq(_119310_b);
		if ((!(_119813_seq.empty()))) {
			return _119813_seq;
		}
		if ((32LL <= _119310_b) && (_119310_b <= 126LLU)) {
			return static_cast<jule::Str>(_119310_b);
		}
	}
	jule::Str _12069_seq = _21ea2e502_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_119310_b)),8LL);
	if ((_12069_seq.len() == 2LL)) {
		return jule::Str("\\0", 2) + _12069_seq;
	}
	return jule::Str("\\", 1) + _12069_seq;
}



inline jule::Str _22025eb77_cstr_bytes(jule::Slice<jule::U8> _121315_bytes) {
	jule::Str _121413_lit = jule::Str();
	{
		auto &expr = _121315_bytes;
		auto it = expr.begin();
		_iter_begin_230585ed2:;
		if (it != expr.end()) {
			jule::U8 &_230586114_b = *it;
			{
				_121413_lit+=_22025e825_sbtoa(_230586114_b);
			}
			_iter_next_230585ed2:;
			++it;
			goto _iter_begin_230585ed2;
		}
		_iter_end_230585ed2:;
	}
	return _121413_lit;
}



inline jule::Str _22025ee85_cstr_lit(jule::Slice<jule::U8> _122113_bytes) {
	return ((jule::Str("\"", 1) + _22025eb77_cstr_bytes(_122113_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _220260370_ftoa(jule::F64 _12259_f,jule::I64 _122517_bitsize) {
	if ((_122517_bitsize != 32LL)) {
		if (_12259_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::I64>(_12259_f))))) {
			return _22026067d_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12259_f)));
		}
		if (_12259_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::U64>(_12259_f))))) {
			return _220260a24_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12259_f)));
		}
	}
	jule::Str _123413_m = _21e2789d8_fmt_float(_12259_f,'f',-1LL,_122517_bitsize);
	if ((!(_2368babd4_contains(_123413_m,jule::Str(".", 1))))) {
		_123413_m+=jule::Str(".0", 2);
	}
	return _123413_m;
}



inline jule::Str _22026067d_itoa(jule::I64 _12419_x) {
	{
		
		if ((_12419_x == jule::MAX_I64)) {
			_case_begin_23058a789:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12419_x == jule::MIN_I64)) {
			_case_begin_23058a811:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_23058a679:;
	}
	jule::Str _12499_fmt = _21ea2e667_fmt_int(_12419_x,10LL);
	if (_21c34e6c6_is_64bit(jule::Str("arm64", 5))) {
		return (_12499_fmt + jule::Str("LL", 2));
	}
	return (_12499_fmt + jule::Str("L", 1));
}



inline jule::Str _220260a24_utoa(jule::U64 _12569_x) {
	{
		
		if ((_12569_x == jule::MAX_U64)) {
			_case_begin_23058bc52:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_23058bbb9:;
	}
	jule::Str _12629_fmt = _21ea2e502_fmt_uint(_12569_x,10LL);
	if (_21c34e6c6_is_64bit(jule::Str("arm64", 5))) {
		return (_12629_fmt + jule::Str("LLU", 3));
	}
	return (_12629_fmt + jule::Str("LU", 2));
}



inline jule::Bool _220260d32_is_forwarded(jule::Ptr<_21eb1472a_Scope>& _126918_s) {
	jule::Any _12709_last = _126918_s.get()._field_stmts[(_126918_s.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _12709_last };
		
		if (_match_expr.type_is<jule::Ptr<_21ebbd053_Data>>()) {
			_case_begin_23059041a:;
			{
				{
					auto &_match_expr{ _12709_last.operator jule::Ptr<_21ebbd053_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_21dd13a07_BuiltinErrorCallExprModel>>()) {
						_case_begin_230590063:;
						{
							return true;
						}
					}
					else {
						_case_begin_2305909e2:;
						{
							return false;
						}
					}
					_match_end_23059098c:;
				}
			}
		}
		else {
			_case_begin_23058ecbb:;
			{
				return true;
			}
		}
		_match_end_23058ec66:;
	}
}



inline jule::Bool _220261184_is_builtin_call_has_debuginf(jule::Ptr<_21dd0b23b_FnCallExprModel>& _128434_m) {
	if ((!(_21dd1d8be_is_builtin(_128434_m.get()._field_func.ptr())))) {
		return false;
	}
	{
		auto &_match_expr{ _128434_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_21dd107c3_CommonSubIdentExprModel>>()) {
			_case_begin_230591e99:;
			{
				jule::Ptr<_21dd107c3_CommonSubIdentExprModel> _129013_csie = _128434_m.get()._field_expr.operator jule::Ptr<_21dd107c3_CommonSubIdentExprModel>();
				return (_129013_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_230591806:;
			{
				return false;
			}
		}
		_match_end_2305917a1:;
	}
}



inline jule::Bool _220dd527a_is_cpp_header_file(jule::Str _119923_path) {
	jule::I64 _12009_offset = _2368ba1de_find_last_byte(_119923_path,'.');
	if ((_12009_offset == -1LL)) {
		return false;
	}
	return _236920909_is_valid_header_ext(_119923_path.slice(_12009_offset));
}



inline jule::Ptr<_21c525490_Directive> _220dd61d2_find_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>& _3024_directives,jule::Str _3055_tag) {
	{
		auto &expr = _3024_directives;
		auto it = expr.begin();
		_iter_begin_230593d36:;
		if (it != expr.end()) {
			jule::Ptr<_21c525490_Directive> _230593e24_dr = *it;
			{
				if (_230593e24_dr.get()._field_tag._field_kind == _3055_tag) {
					return _230593e24_dr;
				}
			}
			_iter_next_230593d36:;
			++it;
			goto _iter_begin_230593d36;
		}
		_iter_end_230593d36:;
	}
	return nullptr;
}



inline jule::Bool _220dd6622_has_directive(jule::Slice<jule::Ptr<_21c525490_Directive>>& _4019_directives,jule::Str _4050_tag) {
	return (_220dd61d2_find_directive(_4019_directives,_4050_tag) != nullptr);
}



inline void _2368db5d9_print_error_message(jule::Str _3124_msg) {
	jule::outln(_3124_msg);
}



inline void _23691668b_help(jule::Slice<jule::Str>& _3610_args) {
	if ((_3610_args.len() > 2LL)) {
		_2368db5d9_print_error_message(jule::Str("invalid command: ", 17) + _3610_args[2LL]);
		return;
	}
	jule::I64 _4213_max = _23691e694_HELP_MAP[0LL][0LL].len();
	{
		auto &expr = _23691e694_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_2305e5b79:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_2305e731d_k = *it;
			{
				jule::I64 _4413_n = _2305e731d_k[0LL].len();
				if (_4413_n > _4213_max) {
					_4213_max=_4413_n;
				}
			}
			_iter_next_2305e5b79:;
			++it;
			goto _iter_begin_2305e5b79;
		}
		_iter_end_2305e5b79:;
	}
	jule::Str _5013_s = jule::Str();
	
	{
		auto &expr = _23691e694_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_2305e8891:;
		if (it != expr.end()) {
			jule::I64 _2305e8ab1_i = it - expr.begin();
			jule::Array<jule::Str,2> &_2305e8c37_part = *it;
			{
				_5013_s+=_2305e8c37_part[0LL];
				_5013_s+=_2368293b2_repeat(jule::Str(" ", 1),static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4213_max - static_cast<jule::I64>(static_cast<jule::I64>(_2305e8c37_part[0LL].len()))))) + 5LL)));
				_5013_s+=_2305e8c37_part[1LL];
				if (((_2305e8ab1_i + 1LL) < 5LL)) {
					_5013_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_2305e8891:;
			++it;
			_2305e8ab1_i++;
			goto _iter_begin_2305e8891;
		}
		_iter_end_2305e8891:;
	}
	jule::outln(_5013_s);
}



inline void _2368ed0e0_version(jule::Slice<jule::Str>& _6413_args) {
	if ((_6413_args.len() > 2LL)) {
		_2368db5d9_print_error_message(jule::Str("invalid command: ", 17) + _6413_args[2LL]);
		return;
	}
	jule::outln(jule::Str("jule0.0.10 @master", 18));
}



inline void _2369025de_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _21c34c63b_DISTOS;
		auto it = expr.begin();
		_iter_begin_2305ec411:;
		if (it != expr.end()) {
			jule::Str &_2305ec785_os = *it;
			{
				jule::out(_2305ec785_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_2305ec411:;
			++it;
			goto _iter_begin_2305ec411;
		}
		_iter_end_2305ec411:;
	}
	jule::outln(jule::Str());
}



inline void _23690bb37_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _21c34c86c_DISTARCH;
		auto it = expr.begin();
		_iter_begin_2305ecbb4:;
		if (it != expr.end()) {
			jule::Str &_2305ed456_arch = *it;
			{
				jule::out(_2305ed456_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_2305ecbb4:;
			++it;
			goto _iter_begin_2305ecbb4;
		}
		_iter_end_2305ecbb4:;
	}
	jule::outln(jule::Str());
}



inline void _2369142e3_tool(jule::Slice<jule::Str>& _9310_args) {
	if ((_9310_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if ((_9310_args.len() > 3LL)) {
		_2368db5d9_print_error_message(jule::Str("invalid command: ", 17) + _9310_args[3LL]);
		return;
	}
	jule::Str _1049_cmd = _9310_args[2LL];
	{
		auto &_match_expr{ _1049_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_2306011b2:;
			{
				_2369025de_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_230600d3d:;
			{
				_23690bb37_tool_distarch();
			}
		}
		else {
			_case_begin_2305ed7b9:;
			{
				_2368db5d9_print_error_message(jule::Str("undefined command: ", 19) + _1049_cmd);
			}
		}
		_match_end_2306009ca:;
	}
}



inline void _21c37938d_julenv(jule::Slice<jule::Str>& _11312_args) {
	if ((_11312_args.len() > 2LL)) {
		_2368db5d9_print_error_message(jule::Str("invalid command: ", 17) + _11312_args[2LL]);
		return;
	}
	jule::outln(jule::Str("julec version: jule0.0.10 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln(jule::Str("default compiler: ", 18) + _2359a6177_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _2359a652e_CPP_STD);
}



inline void _23690e82c_mod(jule::Slice<jule::Str>& _1269_args) {
	if ((_1269_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;
	}
	if ((_1269_args.len() > 3LL)) {
		_2368db5d9_print_error_message(jule::Str("invalid command: ", 17) + _1269_args[3LL]);
		return;
	}
	{
		auto &_match_expr{ _1269_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_230605b45:;
			{
				({
					auto except = static__235a2c594_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_2368db5d9_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_230603e1d:;
			{
				_2368db5d9_print_error_message(jule::Str("invalid command: ", 17) + _1269_args[2LL]);
			}
		}
		_match_end_23060566c:;
	}
}



inline jule::Bool _236910410_process_command(jule::Slice<jule::Str>& _15021_args) {
	{
		auto &_match_expr{ _15021_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_230607c24:;
			{
				_23691668b_help(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_230607ce0:;
			{
				_2368ed0e0_version(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_230607d56:;
			{
				_2369142e3_tool(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_230607460:;
			{
				_21c37938d_julenv(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_2306074c6:;
			{
				_23690e82c_mod(_15021_args);
			}
		}
		else {
			_case_begin_2306079b0:;
			{
				return false;
			}
		}
		_match_end_230607031:;
	}
	return true;
}



inline void _236910ee3_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18013_args = _235b5dac1_args();
	if ((_18013_args.len() < 2LL)) {
		_236910ee3_show_info();
		return;
	}
	if (_236910410_process_command(_18013_args)) {
		return;
	}
	_220e08149_compile_command(_18013_args);
}



inline void _220de0d9b_init(void) {
	_2359a6177_COMPILER=jule::Str("clang", 5);
}



inline void _220de7237_write_output(jule::Str _5017_path,jule::Str _5028_content) {
	jule::Str _519_dir = _235ba6432_dir(_5017_path);
	({
		auto except = static__235a252a1_of(_519_dir);
		if (!except.ok()) {
			({
				auto except = static__235b27716_create(_519_dir);
				if (!except.ok()) {
					_21d161bbe_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = static__235a2c594_write(_5017_path,static_cast<jule::Slice<jule::U8>>(_5028_content),432LL);
		if (!except.ok()) {
			_21d161bbe_throw(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _220e05bd5_clear_objects(void) {
	({
		auto except = static__235a27160_remove(_220e06d6d_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	static__235b2b792_remove(_21c3bb358_OUT_DIR);
}



inline void _220e064dd_compile_ir(jule::Str _7815_compiler,jule::Str _7830_compiler_cmd) {
	jule::Ptr<_21c384552_Cmd> _7913_cmd = static__21c3849e7_new(_7815_compiler);
	_7913_cmd.get()._field_args=jule::Slice<jule::Str>({_7815_compiler});
	_7913_cmd.get()._field_args=jule::append(_7913_cmd.get()._field_args,_2368baa6e_split(_7830_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _829_status = ({
		auto except = _21c384cc2_spawn(_7913_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (_match_expr == static_cast<jule::I64>(12LL)) {
					_case_begin_2306121b2:;
					{
						static__21d12a6b0_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(3LL)) {
					_case_begin_230611ea3:;
					{
						static__21d12a6b0_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(9LL)) {
					_case_begin_230612019:;
					{
						static__21d12a6b0_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(0LL)) {
					_case_begin_230612080:;
					{
						static__21d12a6b0_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_230611bea:;
					{
						static__21d12a6b0_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_230611c83:;
			}
			_21d161bbe_throw(jule::Str());
			0LL;
		});
	});
	if ((_829_status != 0LL)) {
		jule::Str _9913_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _2359a6177_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));
		static__21d12a6b0_print(jule::Str("\033[31m", 5),_9913_error_message);
		_21d161bbe_throw(jule::Str());
	}
	_220e05bd5_clear_objects();
}



inline void _220e06653_do_spell(jule::Str _11013_obj,jule::Str _11023_compiler,jule::Str _11038_compiler_cmd) {
	jule::Str _1119_path = _220e06d6d_get_compile_path();
	_220de7237_write_output(_1119_path,_11013_obj);
	if ((!(_2359a68d6_TRANSPILATION))) {
		_220e064dd_compile_ir(_11023_compiler,_11038_compiler_cmd);
	}
}



inline jule::Bool _220e067b8_is_cpp_source_file(jule::Str _11823_path) {
	jule::I64 _1199_offset = _2368ba1de_find_last_byte(_11823_path,'.');
	if ((_1199_offset == -1LL)) {
		return false;
	}
	return _236920ae6_is_valid_cpp_ext(_11823_path.slice(_1199_offset));
}



inline void _220e0692d_push_comp_cmd_clang(jule::Str& _12629_cmd) {
	_12629_cmd+=jule::Str("-Wno-everything ", 16);
	_12629_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2359a652e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_23061961a:;
			{
				_12629_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_230619681:;
			{
				_12629_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2306196e7:;
			{
				_12629_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_23061953d:;
	}
	_12629_cmd+=jule::Str(" ", 1);
	if (_2359a5011_PRODUCTION) {
		_12629_cmd+=jule::Str("-O3 ", 4);
		_12629_cmd+=jule::Str("-flto ", 6);
		_12629_cmd+=jule::Str("-DNDEBUG ", 9);
		_12629_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_12629_cmd+=jule::Str("-O0 ", 4);
	}
}



inline void _220e06a93_push_comp_cmd_gcc(jule::Str& _14927_cmd) {
	_14927_cmd+=jule::Str("-w ", 3);
	_14927_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2359a652e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_23061975d:;
			{
				_14927_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_23061be25:;
			{
				_14927_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_23061be8b:;
			{
				_14927_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_23061bcc1:;
	}
	_14927_cmd+=jule::Str(" ", 1);
	if (_2359a5011_PRODUCTION) {
		_14927_cmd+=jule::Str("-O3 ", 4);
		_14927_cmd+=jule::Str("-DNDEBUG ", 9);
		_14927_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14927_cmd+=jule::Str("-O0 ", 4);
	}
}



inline std::tuple<jule::Str,jule::Str> _220e06c08_gen_compile_cmd(jule::Str _17220_source_path,jule::Ptr<_21ccec4b4_IR>& _17239_ir) {
	jule::Str &_17310_compiler = _2359a6375_COMPILER_PATH;
	jule::Str _17413_cmd = jule::Str();
	{
		auto &_match_expr{ _2359a6177_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_23061e4cc:;
			{
				_220e06a93_push_comp_cmd_gcc(_17413_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_23061e8b7:;
			{
				_220e0692d_push_comp_cmd_clang(_17413_cmd);
			}
		}
		_match_end_23061e7da:;
	}
	{
		auto &expr = _17239_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_2306208a7:;
		if (it != expr.end()) {
			jule::Str &_23061ebc5_pass = *it;
			{
				_17413_cmd+=_23061ebc5_pass;
				_17413_cmd+=jule::Str(" ", 1);
			}
			_iter_next_2306208a7:;
			++it;
			goto _iter_begin_2306208a7;
		}
		_iter_end_2306208a7:;
	}
	{
		auto &expr = _17239_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_2306211d2:;
		if (it != expr.end()) {
			jule::Ptr<_21eb49c8d_ImportInfo> &_230620b3d_u = *it;
			{
				if (_230620b3d_u.get()._field_cpp_linked && _220e067b8_is_cpp_source_file(_230620b3d_u.get()._field_path)) {
					_17413_cmd+=_230620b3d_u.get()._field_path;
					_17413_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_2306211d2:;
			++it;
			goto _iter_begin_2306211d2;
		}
		_iter_end_2306211d2:;
	}
	if ((!(_21c3c8189_OUT.empty()))) {
		_17413_cmd+=jule::Str("-o ", 3);
		_17413_cmd+=_21c3c8189_OUT;
		_17413_cmd+=jule::Str(" ", 1);
	}
	_17413_cmd+=_17220_source_path;
	return std::make_tuple(_17310_compiler,_17413_cmd);
}



inline jule::Str _220e06d6d_get_compile_path(void) {
	return _235b71c27_join(jule::Slice<jule::Str>({_21c3bb358_OUT_DIR,_21c3c4b03_OUT_NAME}));
}



inline void _220e06ed3_apply_target_independent_optimizations(jule::Ptr<_21ccec4b4_IR>& _21548_ir) {
	if (_2359a5253_OPT_DEADCODE) {
		_21d341013_eliminate_defines(_21548_ir);
	}
	jule::Ptr<_220252b04_Optimizer> _22213_opt = static__220252ebc_new(_21548_ir);
	_2202548e7_optimize(_22213_opt.ptr());
	if (_2359a5253_OPT_DEADCODE) {
		_21d128108_eliminate_scopes(_21548_ir);
	}
}



inline void _220e07148_check_compiler_flag(void) {
	{
		auto &_match_expr{ _2359a6177_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_230624db7:;
			{
				_21d161bbe_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_23062546c:;
			{
				if (_2359a6375_COMPILER_PATH.empty()) {
					_2359a6375_COMPILER_PATH=jule::Str("clang++", 7);
				}
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_230624625:;
			{
				if (_2359a6375_COMPILER_PATH.empty()) {
					_2359a6375_COMPILER_PATH=jule::Str("g++", 3);
				}
			}
		}
		else {
			_case_begin_230624559:;
			{
				_21d161bbe_throw(jule::Str("invalid option value for --compiler: ", 37) + _2359a6177_COMPILER);
			}
		}
		_match_end_230624977:;
	}
}



inline void _220e072ad_check_target_arch(jule::Str _24822_arch) {
	{
		auto &expr = _21c34c86c_DISTARCH;
		auto it = expr.begin();
		_iter_begin_2306261e8:;
		if (it != expr.end()) {
			jule::Str &_230625659_distarch = *it;
			{
				if (_24822_arch == _230625659_distarch) {
					return;
				}
			}
			_iter_next_2306261e8:;
			++it;
			goto _iter_begin_2306261e8;
		}
		_iter_end_2306261e8:;
	}
	_21d161bbe_throw(jule::Str("--target: unsupported/undefined architecture: ", 46) + _24822_arch);
}



inline void _220e07423_check_target_os(jule::Str _25720_os) {
	{
		auto &expr = _21c34c63b_DISTOS;
		auto it = expr.begin();
		_iter_begin_230627e20:;
		if (it != expr.end()) {
			jule::Str &_230627e97_distos = *it;
			{
				if (_25720_os == _230627e97_distos) {
					return;
				}
			}
			_iter_next_230627e20:;
			++it;
			goto _iter_begin_230627e20;
		}
		_iter_end_230627e20:;
	}
	_21d161bbe_throw(jule::Str("--target: unsupported/undefined operating system: ", 50) + _25720_os);
}



inline void _220e07588_check_target_flag(jule::Str& _26623_target) {
	if (_26623_target.empty()) {
		_21d161bbe_throw(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2719_parts = _2368baa6e_split(_26623_target,jule::Str("-", 1),-1LL);
	if ((_2719_parts.len() != 2LL)) {
		_21d161bbe_throw(jule::Str("--target: undefined platform target format: ", 44) + _26623_target);
	}
	jule::Str _27610_os = _2719_parts[0LL];
	jule::Str _27614_arch = _2719_parts[1LL];
	std::tie(_27610_os,_27614_arch) = std::make_tuple(_2719_parts[0LL],_2719_parts[1LL]);
	if ((_27610_os != jule::Str("native", 6))) {
		_220e07423_check_target_os(_27610_os);
		_21c35c393_OS=_27610_os;
	}
	if ((_27614_arch != jule::Str("native", 6))) {
		_220e072ad_check_target_arch(_27614_arch);
		_21c3828a2_ARCH=_27614_arch;
	}
	_21eb22095_update_target();
}



inline void _220e0792e_check_opt_flag(jule::Str& _28920_opt) {
	if (_28920_opt.empty()) {
		_21d161bbe_throw(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _28920_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_23062d9a3:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_23062d6a6:;
			{
				_2359a5c59_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_23062cde2:;
			{
				_21d161bbe_throw(jule::Str("--opt: invalid optimization level: ", 35) + _28920_opt);
			}
		}
		_match_end_230624ec7:;
	}
}



inline void _220e07a94_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _2359a652e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_23063018b:;
			{
				goto _match_end_23062d72d;
			}
		}
		else {
			_case_begin_23062e498:;
			{
				_21d161bbe_throw(jule::Str("--cppstd: invalid optimization level: ", 38) + _2359a652e_CPP_STD);
			}
		}
		_match_end_23062d72d:;
	}
}



inline jule::Slice<jule::Str> _220e07c09_check_flags(jule::Slice<jule::Str>& _31217_args) {
	jule::Str _31313_opt = jule::Str("L0", 2);
	jule::Str _31413_target = jule::Str("native-native", 13);
	jule::Ptr<_220e00b7a_FlagSet> _31613_fs = static__220e00e99_new();
	_220e034da_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_220e034da_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_220e034da_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21c3c8189_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a672c_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a68d6_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_220e034da_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2359a6177_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_220e034da_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2359a6375_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a5011_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a6c49_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a6e8b_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_220e034da_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2359a652e_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a5132_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a5253_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a53eb_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a551c_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a563d_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a575e_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a5990_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_220e034da_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359a5ab1_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _33813_content = ({
		auto except = _220e02044_parse(_31613_fs.ptr(), _31217_args);
		(except.ok()) ? (except.result) : ({
			_21d161bbe_throw(except.error.operator jule::Str());
			nullptr;
		});
	});
	_220e07148_check_compiler_flag();
	_220e07a94_check_cpp_std_flag();
	_220e07588_check_target_flag(_31413_target);
	_220e0792e_check_opt_flag(_31313_opt);
	return _33813_content;
}



inline void _220e07d6e_setup_sema_flags(jule::I64& _35126_flags) {
	if (_2359a672c_SHADOWING) {
		_35126_flags|=static_cast<jule::I64>(1LL);
	}
}



inline jule::Ptr<_21ccec4b4_IR> _220e07ed4_build_ir(jule::Slice<jule::Str>& _35714_args) {
	jule::Slice<jule::Str> _3589_content = _220e07c09_check_flags(_35714_args);
	jule::I64 _36013_sema_flags = static_cast<jule::I64>(0LL);
	_220e07d6e_setup_sema_flags(_36013_sema_flags);
	if ((_3589_content.len() == 0LL)) {
		_21d161bbe_throw(_21c34911b_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3589_content.len() > 1LL)) {
		_21d161bbe_throw(jule::Str("undefined content: ", 19) + _3589_content[1LL]);
	}
	jule::Str _36814_path;
	jule::Bool _36820_ok;
	std::tie(_36814_path,_36820_ok) = _235b9c428_abs(_3589_content[0LL]);
	if ((!(_36820_ok))) {
		_21d161bbe_throw(jule::Str("compile path could not processed because of a problem", 53));
	}
	jule::Ptr<_235a75ae8_Status> _3749_inf = ({
		auto except = static__235a252a1_of(_21c35922a_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_21d161bbe_throw(_21c34911b_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_235a75ae8_Status>();});
	});
	if ((!(_235a3a11d_is_dir(_3749_inf.ptr())))) {
		_21d161bbe_throw(_21c34911b_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	jule::Ptr<_21ccec4b4_IR> _38214_ir;
	jule::Slice<_21c348b32_Log> _38218_logs;
	std::tie(_38214_ir,_38218_logs) = static__21c441004_build(_36814_path,_36013_sema_flags);
	if ((_38214_ir == nullptr) && (_38218_logs == nullptr)) {
		_21d161bbe_throw(_21c34911b_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>({jule::Any(_36814_path)})));
	}
	if ((_38218_logs != nullptr)) {
		static__21d15eb78_print_logs(_38218_logs);
		_21d161bbe_throw(jule::Str());
	}
	return _38214_ir;
}



inline void _220e08149_compile_command(jule::Slice<jule::Str>& _39725_args) {
	_39725_args=_39725_args.slice(1LL);
	if ((_39725_args[0LL] == jule::Str("test", 4))) {
		_2359a6a90_TEST=true;
		_39725_args=_39725_args.slice(1LL);
	}
	jule::Ptr<_21ccec4b4_IR> _40313_ir = _220e07ed4_build_ir(_39725_args);
	
	if ((!(_2359a6a90_TEST))) {
		jule::Ptr<_21dd19249_Fn> _40817_f = _21eb4eeb3_find_fn(_40313_ir.get()._field_main.ptr(), jule::Str("main", 4),false);
		if ((_40817_f == nullptr)) {
			_21d161bbe_throw(_21c34911b_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		}
		_40817_f.get()._field_statically=true;
	}
	jule::Ptr<_21dd19249_Fn> _41413_f = _21eb4eeb3_find_fn(_40313_ir.get()._field_main.ptr(), jule::Str("init", 4),false);
	if ((_41413_f != nullptr)) {
		_41413_f.get()._field_statically=true;
	}
	_220e06ed3_apply_target_independent_optimizations(_40313_ir);
	_21cd69d06_order(_40313_ir.ptr());
	jule::Str _42410_compiler;
	jule::Str _42420_compiler_cmd;
	std::tie(_42410_compiler,_42420_compiler_cmd) = _220e06c08_gen_compile_cmd(_220e06d6d_get_compile_path(),_40313_ir);
	jule::Ptr<_220d8cc38_ObjectCoder> _42613_oc = static__220d8ae01_new(_40313_ir,_220da8b44_SerializationInfo(_42410_compiler,_42420_compiler_cmd));
	jule::Str _43013_obj = _220dd4db2_serialize(_42613_oc.ptr());
	if (_2359a6a90_TEST) {
		jule::Ptr<_2200e5326_TestCoder> _43317_tc = static__220143c59_new(_42613_oc);
		_220145255_serialize(_43317_tc.ptr(), _43013_obj);
	}
	_220dd4ad7_append_standard(_42613_oc.ptr(), _43013_obj);
	_220e06653_do_spell(_43013_obj,_42410_compiler,_42420_compiler_cmd);
}




void __jule_call_initializers(void) {
	_2359a5011_PRODUCTION = false;
	_2359a5132_OPT_COPY = false;
	_2359a5253_OPT_DEADCODE = false;
	_2359a53eb_OPT_APPEND = false;
	_2359a551c_OPT_MATH = false;
	_2359a563d_OPT_ACCESS = false;
	_2359a575e_OPT_INLINE = false;
	_2359a5990_OPT_PTR = false;
	_2359a5ab1_OPT_COND = false;
	_2359a6177_COMPILER = jule::Str();
	_2359a6375_COMPILER_PATH = jule::Str();
	_2359a652e_CPP_STD = jule::Str("cpp17", 5);
	_2359a672c_SHADOWING = false;
	_2359a68d6_TRANSPILATION = false;
	_2359a6a90_TEST = false;
	_2359a6c49_RC = true;
	_2359a6e8b_SAFETY = true;
	_21c297256__L = jule::new_ptr<_21c2d697c_RangeTable>(_21c2d697c_RangeTable(jule::Slice<_21c2d5d88_Range16>({_21c2d5d88_Range16(65LLU,90LLU,1LLU),_21c2d5d88_Range16(97LLU,122LLU,1LLU),_21c2d5d88_Range16(170LLU,181LLU,11LLU),_21c2d5d88_Range16(186LLU,192LLU,6LLU),_21c2d5d88_Range16(193LLU,214LLU,1LLU),_21c2d5d88_Range16(216LLU,246LLU,1LLU),_21c2d5d88_Range16(248LLU,705LLU,1LLU),_21c2d5d88_Range16(710LLU,721LLU,1LLU),_21c2d5d88_Range16(736LLU,740LLU,1LLU),_21c2d5d88_Range16(748LLU,750LLU,2LLU),_21c2d5d88_Range16(880LLU,884LLU,1LLU),_21c2d5d88_Range16(886LLU,887LLU,1LLU),_21c2d5d88_Range16(890LLU,893LLU,1LLU),_21c2d5d88_Range16(895LLU,902LLU,7LLU),_21c2d5d88_Range16(904LLU,906LLU,1LLU),_21c2d5d88_Range16(908LLU,910LLU,2LLU),_21c2d5d88_Range16(911LLU,929LLU,1LLU),_21c2d5d88_Range16(931LLU,1013LLU,1LLU),_21c2d5d88_Range16(1015LLU,1153LLU,1LLU),_21c2d5d88_Range16(1162LLU,1327LLU,1LLU),_21c2d5d88_Range16(1329LLU,1366LLU,1LLU),_21c2d5d88_Range16(1369LLU,1376LLU,7LLU),_21c2d5d88_Range16(1377LLU,1416LLU,1LLU),_21c2d5d88_Range16(1488LLU,1514LLU,1LLU),_21c2d5d88_Range16(1519LLU,1522LLU,1LLU),_21c2d5d88_Range16(1568LLU,1610LLU,1LLU),_21c2d5d88_Range16(1646LLU,1647LLU,1LLU),_21c2d5d88_Range16(1649LLU,1747LLU,1LLU),_21c2d5d88_Range16(1749LLU,1765LLU,16LLU),_21c2d5d88_Range16(1766LLU,1774LLU,8LLU),_21c2d5d88_Range16(1775LLU,1786LLU,11LLU),_21c2d5d88_Range16(1787LLU,1788LLU,1LLU),_21c2d5d88_Range16(1791LLU,1808LLU,17LLU),_21c2d5d88_Range16(1810LLU,1839LLU,1LLU),_21c2d5d88_Range16(1869LLU,1957LLU,1LLU),_21c2d5d88_Range16(1969LLU,1994LLU,25LLU),_21c2d5d88_Range16(1995LLU,2026LLU,1LLU),_21c2d5d88_Range16(2036LLU,2037LLU,1LLU),_21c2d5d88_Range16(2042LLU,2048LLU,6LLU),_21c2d5d88_Range16(2049LLU,2069LLU,1LLU),_21c2d5d88_Range16(2074LLU,2084LLU,10LLU),_21c2d5d88_Range16(2088LLU,2112LLU,24LLU),_21c2d5d88_Range16(2113LLU,2136LLU,1LLU),_21c2d5d88_Range16(2144LLU,2154LLU,1LLU),_21c2d5d88_Range16(2160LLU,2183LLU,1LLU),_21c2d5d88_Range16(2185LLU,2190LLU,1LLU),_21c2d5d88_Range16(2208LLU,2249LLU,1LLU),_21c2d5d88_Range16(2308LLU,2361LLU,1LLU),_21c2d5d88_Range16(2365LLU,2384LLU,19LLU),_21c2d5d88_Range16(2392LLU,2401LLU,1LLU),_21c2d5d88_Range16(2417LLU,2432LLU,1LLU),_21c2d5d88_Range16(2437LLU,2444LLU,1LLU),_21c2d5d88_Range16(2447LLU,2448LLU,1LLU),_21c2d5d88_Range16(2451LLU,2472LLU,1LLU),_21c2d5d88_Range16(2474LLU,2480LLU,1LLU),_21c2d5d88_Range16(2482LLU,2486LLU,4LLU),_21c2d5d88_Range16(2487LLU,2489LLU,1LLU),_21c2d5d88_Range16(2493LLU,2510LLU,17LLU),_21c2d5d88_Range16(2524LLU,2525LLU,1LLU),_21c2d5d88_Range16(2527LLU,2529LLU,1LLU),_21c2d5d88_Range16(2544LLU,2545LLU,1LLU),_21c2d5d88_Range16(2556LLU,2565LLU,9LLU),_21c2d5d88_Range16(2566LLU,2570LLU,1LLU),_21c2d5d88_Range16(2575LLU,2576LLU,1LLU),_21c2d5d88_Range16(2579LLU,2600LLU,1LLU),_21c2d5d88_Range16(2602LLU,2608LLU,1LLU),_21c2d5d88_Range16(2610LLU,2611LLU,1LLU),_21c2d5d88_Range16(2613LLU,2614LLU,1LLU),_21c2d5d88_Range16(2616LLU,2617LLU,1LLU),_21c2d5d88_Range16(2649LLU,2652LLU,1LLU),_21c2d5d88_Range16(2654LLU,2674LLU,20LLU),_21c2d5d88_Range16(2675LLU,2676LLU,1LLU),_21c2d5d88_Range16(2693LLU,2701LLU,1LLU),_21c2d5d88_Range16(2703LLU,2705LLU,1LLU),_21c2d5d88_Range16(2707LLU,2728LLU,1LLU),_21c2d5d88_Range16(2730LLU,2736LLU,1LLU),_21c2d5d88_Range16(2738LLU,2739LLU,1LLU),_21c2d5d88_Range16(2741LLU,2745LLU,1LLU),_21c2d5d88_Range16(2749LLU,2768LLU,19LLU),_21c2d5d88_Range16(2784LLU,2785LLU,1LLU),_21c2d5d88_Range16(2809LLU,2821LLU,12LLU),_21c2d5d88_Range16(2822LLU,2828LLU,1LLU),_21c2d5d88_Range16(2831LLU,2832LLU,1LLU),_21c2d5d88_Range16(2835LLU,2856LLU,1LLU),_21c2d5d88_Range16(2858LLU,2864LLU,1LLU),_21c2d5d88_Range16(2866LLU,2867LLU,1LLU),_21c2d5d88_Range16(2869LLU,2873LLU,1LLU),_21c2d5d88_Range16(2877LLU,2908LLU,31LLU),_21c2d5d88_Range16(2909LLU,2911LLU,2LLU),_21c2d5d88_Range16(2912LLU,2913LLU,1LLU),_21c2d5d88_Range16(2929LLU,2947LLU,18LLU),_21c2d5d88_Range16(2949LLU,2954LLU,1LLU),_21c2d5d88_Range16(2958LLU,2960LLU,1LLU),_21c2d5d88_Range16(2962LLU,2965LLU,1LLU),_21c2d5d88_Range16(2969LLU,2970LLU,1LLU),_21c2d5d88_Range16(2972LLU,2974LLU,2LLU),_21c2d5d88_Range16(2975LLU,2979LLU,4LLU),_21c2d5d88_Range16(2980LLU,2984LLU,4LLU),_21c2d5d88_Range16(2985LLU,2986LLU,1LLU),_21c2d5d88_Range16(2990LLU,3001LLU,1LLU),_21c2d5d88_Range16(3024LLU,3077LLU,53LLU),_21c2d5d88_Range16(3078LLU,3084LLU,1LLU),_21c2d5d88_Range16(3086LLU,3088LLU,1LLU),_21c2d5d88_Range16(3090LLU,3112LLU,1LLU),_21c2d5d88_Range16(3114LLU,3129LLU,1LLU),_21c2d5d88_Range16(3133LLU,3160LLU,27LLU),_21c2d5d88_Range16(3161LLU,3162LLU,1LLU),_21c2d5d88_Range16(3165LLU,3168LLU,3LLU),_21c2d5d88_Range16(3169LLU,3200LLU,31LLU),_21c2d5d88_Range16(3205LLU,3212LLU,1LLU),_21c2d5d88_Range16(3214LLU,3216LLU,1LLU),_21c2d5d88_Range16(3218LLU,3240LLU,1LLU),_21c2d5d88_Range16(3242LLU,3251LLU,1LLU),_21c2d5d88_Range16(3253LLU,3257LLU,1LLU),_21c2d5d88_Range16(3261LLU,3293LLU,32LLU),_21c2d5d88_Range16(3294LLU,3296LLU,2LLU),_21c2d5d88_Range16(3297LLU,3313LLU,16LLU),_21c2d5d88_Range16(3314LLU,3332LLU,18LLU),_21c2d5d88_Range16(3333LLU,3340LLU,1LLU),_21c2d5d88_Range16(3342LLU,3344LLU,1LLU),_21c2d5d88_Range16(3346LLU,3386LLU,1LLU),_21c2d5d88_Range16(3389LLU,3406LLU,17LLU),_21c2d5d88_Range16(3412LLU,3414LLU,1LLU),_21c2d5d88_Range16(3423LLU,3425LLU,1LLU),_21c2d5d88_Range16(3450LLU,3455LLU,1LLU),_21c2d5d88_Range16(3461LLU,3478LLU,1LLU),_21c2d5d88_Range16(3482LLU,3505LLU,1LLU),_21c2d5d88_Range16(3507LLU,3515LLU,1LLU),_21c2d5d88_Range16(3517LLU,3520LLU,3LLU),_21c2d5d88_Range16(3521LLU,3526LLU,1LLU),_21c2d5d88_Range16(3585LLU,3632LLU,1LLU),_21c2d5d88_Range16(3634LLU,3635LLU,1LLU),_21c2d5d88_Range16(3648LLU,3654LLU,1LLU),_21c2d5d88_Range16(3713LLU,3714LLU,1LLU),_21c2d5d88_Range16(3716LLU,3718LLU,2LLU),_21c2d5d88_Range16(3719LLU,3722LLU,1LLU),_21c2d5d88_Range16(3724LLU,3747LLU,1LLU),_21c2d5d88_Range16(3749LLU,3751LLU,2LLU),_21c2d5d88_Range16(3752LLU,3760LLU,1LLU),_21c2d5d88_Range16(3762LLU,3763LLU,1LLU),_21c2d5d88_Range16(3773LLU,3776LLU,3LLU),_21c2d5d88_Range16(3777LLU,3780LLU,1LLU),_21c2d5d88_Range16(3782LLU,3804LLU,22LLU),_21c2d5d88_Range16(3805LLU,3807LLU,1LLU),_21c2d5d88_Range16(3840LLU,3904LLU,64LLU),_21c2d5d88_Range16(3905LLU,3911LLU,1LLU),_21c2d5d88_Range16(3913LLU,3948LLU,1LLU),_21c2d5d88_Range16(3976LLU,3980LLU,1LLU),_21c2d5d88_Range16(4096LLU,4138LLU,1LLU),_21c2d5d88_Range16(4159LLU,4176LLU,17LLU),_21c2d5d88_Range16(4177LLU,4181LLU,1LLU),_21c2d5d88_Range16(4186LLU,4189LLU,1LLU),_21c2d5d88_Range16(4193LLU,4197LLU,4LLU),_21c2d5d88_Range16(4198LLU,4206LLU,8LLU),_21c2d5d88_Range16(4207LLU,4208LLU,1LLU),_21c2d5d88_Range16(4213LLU,4225LLU,1LLU),_21c2d5d88_Range16(4238LLU,4256LLU,18LLU),_21c2d5d88_Range16(4257LLU,4293LLU,1LLU),_21c2d5d88_Range16(4295LLU,4301LLU,6LLU),_21c2d5d88_Range16(4304LLU,4346LLU,1LLU),_21c2d5d88_Range16(4348LLU,4680LLU,1LLU),_21c2d5d88_Range16(4682LLU,4685LLU,1LLU),_21c2d5d88_Range16(4688LLU,4694LLU,1LLU),_21c2d5d88_Range16(4696LLU,4698LLU,2LLU),_21c2d5d88_Range16(4699LLU,4701LLU,1LLU),_21c2d5d88_Range16(4704LLU,4744LLU,1LLU),_21c2d5d88_Range16(4746LLU,4749LLU,1LLU),_21c2d5d88_Range16(4752LLU,4784LLU,1LLU),_21c2d5d88_Range16(4786LLU,4789LLU,1LLU),_21c2d5d88_Range16(4792LLU,4798LLU,1LLU),_21c2d5d88_Range16(4800LLU,4802LLU,2LLU),_21c2d5d88_Range16(4803LLU,4805LLU,1LLU),_21c2d5d88_Range16(4808LLU,4822LLU,1LLU),_21c2d5d88_Range16(4824LLU,4880LLU,1LLU),_21c2d5d88_Range16(4882LLU,4885LLU,1LLU),_21c2d5d88_Range16(4888LLU,4954LLU,1LLU),_21c2d5d88_Range16(4992LLU,5007LLU,1LLU),_21c2d5d88_Range16(5024LLU,5109LLU,1LLU),_21c2d5d88_Range16(5112LLU,5117LLU,1LLU),_21c2d5d88_Range16(5121LLU,5740LLU,1LLU),_21c2d5d88_Range16(5743LLU,5759LLU,1LLU),_21c2d5d88_Range16(5761LLU,5786LLU,1LLU),_21c2d5d88_Range16(5792LLU,5866LLU,1LLU),_21c2d5d88_Range16(5873LLU,5880LLU,1LLU),_21c2d5d88_Range16(5888LLU,5905LLU,1LLU),_21c2d5d88_Range16(5919LLU,5937LLU,1LLU),_21c2d5d88_Range16(5952LLU,5969LLU,1LLU),_21c2d5d88_Range16(5984LLU,5996LLU,1LLU),_21c2d5d88_Range16(5998LLU,6000LLU,1LLU),_21c2d5d88_Range16(6016LLU,6067LLU,1LLU),_21c2d5d88_Range16(6103LLU,6108LLU,5LLU),_21c2d5d88_Range16(6176LLU,6264LLU,1LLU),_21c2d5d88_Range16(6272LLU,6276LLU,1LLU),_21c2d5d88_Range16(6279LLU,6312LLU,1LLU),_21c2d5d88_Range16(6314LLU,6320LLU,6LLU),_21c2d5d88_Range16(6321LLU,6389LLU,1LLU),_21c2d5d88_Range16(6400LLU,6430LLU,1LLU),_21c2d5d88_Range16(6480LLU,6509LLU,1LLU),_21c2d5d88_Range16(6512LLU,6516LLU,1LLU),_21c2d5d88_Range16(6528LLU,6571LLU,1LLU),_21c2d5d88_Range16(6576LLU,6601LLU,1LLU),_21c2d5d88_Range16(6656LLU,6678LLU,1LLU),_21c2d5d88_Range16(6688LLU,6740LLU,1LLU),_21c2d5d88_Range16(6823LLU,6917LLU,94LLU),_21c2d5d88_Range16(6918LLU,6963LLU,1LLU),_21c2d5d88_Range16(6981LLU,6988LLU,1LLU),_21c2d5d88_Range16(7043LLU,7072LLU,1LLU),_21c2d5d88_Range16(7086LLU,7087LLU,1LLU),_21c2d5d88_Range16(7098LLU,7141LLU,1LLU),_21c2d5d88_Range16(7168LLU,7203LLU,1LLU),_21c2d5d88_Range16(7245LLU,7247LLU,1LLU),_21c2d5d88_Range16(7258LLU,7293LLU,1LLU),_21c2d5d88_Range16(7296LLU,7304LLU,1LLU),_21c2d5d88_Range16(7312LLU,7354LLU,1LLU),_21c2d5d88_Range16(7357LLU,7359LLU,1LLU),_21c2d5d88_Range16(7401LLU,7404LLU,1LLU),_21c2d5d88_Range16(7406LLU,7411LLU,1LLU),_21c2d5d88_Range16(7413LLU,7414LLU,1LLU),_21c2d5d88_Range16(7418LLU,7424LLU,6LLU),_21c2d5d88_Range16(7425LLU,7615LLU,1LLU),_21c2d5d88_Range16(7680LLU,7957LLU,1LLU),_21c2d5d88_Range16(7960LLU,7965LLU,1LLU),_21c2d5d88_Range16(7968LLU,8005LLU,1LLU),_21c2d5d88_Range16(8008LLU,8013LLU,1LLU),_21c2d5d88_Range16(8016LLU,8023LLU,1LLU),_21c2d5d88_Range16(8025LLU,8031LLU,2LLU),_21c2d5d88_Range16(8032LLU,8061LLU,1LLU),_21c2d5d88_Range16(8064LLU,8116LLU,1LLU),_21c2d5d88_Range16(8118LLU,8124LLU,1LLU),_21c2d5d88_Range16(8126LLU,8130LLU,4LLU),_21c2d5d88_Range16(8131LLU,8132LLU,1LLU),_21c2d5d88_Range16(8134LLU,8140LLU,1LLU),_21c2d5d88_Range16(8144LLU,8147LLU,1LLU),_21c2d5d88_Range16(8150LLU,8155LLU,1LLU),_21c2d5d88_Range16(8160LLU,8172LLU,1LLU),_21c2d5d88_Range16(8178LLU,8180LLU,1LLU),_21c2d5d88_Range16(8182LLU,8188LLU,1LLU),_21c2d5d88_Range16(8305LLU,8319LLU,14LLU),_21c2d5d88_Range16(8336LLU,8348LLU,1LLU),_21c2d5d88_Range16(8450LLU,8455LLU,5LLU),_21c2d5d88_Range16(8458LLU,8467LLU,1LLU),_21c2d5d88_Range16(8469LLU,8473LLU,4LLU),_21c2d5d88_Range16(8474LLU,8477LLU,1LLU),_21c2d5d88_Range16(8484LLU,8490LLU,2LLU),_21c2d5d88_Range16(8491LLU,8493LLU,1LLU),_21c2d5d88_Range16(8495LLU,8505LLU,1LLU),_21c2d5d88_Range16(8508LLU,8511LLU,1LLU),_21c2d5d88_Range16(8517LLU,8521LLU,1LLU),_21c2d5d88_Range16(8526LLU,8579LLU,53LLU),_21c2d5d88_Range16(8580LLU,11264LLU,2684LLU),_21c2d5d88_Range16(11265LLU,11492LLU,1LLU),_21c2d5d88_Range16(11499LLU,11502LLU,1LLU),_21c2d5d88_Range16(11506LLU,11507LLU,1LLU),_21c2d5d88_Range16(11520LLU,11557LLU,1LLU),_21c2d5d88_Range16(11559LLU,11565LLU,6LLU),_21c2d5d88_Range16(11568LLU,11623LLU,1LLU),_21c2d5d88_Range16(11631LLU,11648LLU,17LLU),_21c2d5d88_Range16(11649LLU,11670LLU,1LLU),_21c2d5d88_Range16(11680LLU,11686LLU,1LLU),_21c2d5d88_Range16(11688LLU,11694LLU,1LLU),_21c2d5d88_Range16(11696LLU,11702LLU,1LLU),_21c2d5d88_Range16(11704LLU,11710LLU,1LLU),_21c2d5d88_Range16(11712LLU,11718LLU,1LLU),_21c2d5d88_Range16(11720LLU,11726LLU,1LLU),_21c2d5d88_Range16(11728LLU,11734LLU,1LLU),_21c2d5d88_Range16(11736LLU,11742LLU,1LLU),_21c2d5d88_Range16(11823LLU,12293LLU,470LLU),_21c2d5d88_Range16(12294LLU,12337LLU,43LLU),_21c2d5d88_Range16(12338LLU,12341LLU,1LLU),_21c2d5d88_Range16(12347LLU,12348LLU,1LLU),_21c2d5d88_Range16(12353LLU,12438LLU,1LLU),_21c2d5d88_Range16(12445LLU,12447LLU,1LLU),_21c2d5d88_Range16(12449LLU,12538LLU,1LLU),_21c2d5d88_Range16(12540LLU,12543LLU,1LLU),_21c2d5d88_Range16(12549LLU,12591LLU,1LLU),_21c2d5d88_Range16(12593LLU,12686LLU,1LLU),_21c2d5d88_Range16(12704LLU,12735LLU,1LLU),_21c2d5d88_Range16(12784LLU,12799LLU,1LLU),_21c2d5d88_Range16(13312LLU,19903LLU,1LLU),_21c2d5d88_Range16(19968LLU,42124LLU,1LLU),_21c2d5d88_Range16(42192LLU,42237LLU,1LLU),_21c2d5d88_Range16(42240LLU,42508LLU,1LLU),_21c2d5d88_Range16(42512LLU,42527LLU,1LLU),_21c2d5d88_Range16(42538LLU,42539LLU,1LLU),_21c2d5d88_Range16(42560LLU,42606LLU,1LLU),_21c2d5d88_Range16(42623LLU,42653LLU,1LLU),_21c2d5d88_Range16(42656LLU,42725LLU,1LLU),_21c2d5d88_Range16(42775LLU,42783LLU,1LLU),_21c2d5d88_Range16(42786LLU,42888LLU,1LLU),_21c2d5d88_Range16(42891LLU,42954LLU,1LLU),_21c2d5d88_Range16(42960LLU,42961LLU,1LLU),_21c2d5d88_Range16(42963LLU,42965LLU,2LLU),_21c2d5d88_Range16(42966LLU,42969LLU,1LLU),_21c2d5d88_Range16(42994LLU,43009LLU,1LLU),_21c2d5d88_Range16(43011LLU,43013LLU,1LLU),_21c2d5d88_Range16(43015LLU,43018LLU,1LLU),_21c2d5d88_Range16(43020LLU,43042LLU,1LLU),_21c2d5d88_Range16(43072LLU,43123LLU,1LLU),_21c2d5d88_Range16(43138LLU,43187LLU,1LLU),_21c2d5d88_Range16(43250LLU,43255LLU,1LLU),_21c2d5d88_Range16(43259LLU,43261LLU,2LLU),_21c2d5d88_Range16(43262LLU,43274LLU,12LLU),_21c2d5d88_Range16(43275LLU,43301LLU,1LLU),_21c2d5d88_Range16(43312LLU,43334LLU,1LLU),_21c2d5d88_Range16(43360LLU,43388LLU,1LLU),_21c2d5d88_Range16(43396LLU,43442LLU,1LLU),_21c2d5d88_Range16(43471LLU,43488LLU,17LLU),_21c2d5d88_Range16(43489LLU,43492LLU,1LLU),_21c2d5d88_Range16(43494LLU,43503LLU,1LLU),_21c2d5d88_Range16(43514LLU,43518LLU,1LLU),_21c2d5d88_Range16(43520LLU,43560LLU,1LLU),_21c2d5d88_Range16(43584LLU,43586LLU,1LLU),_21c2d5d88_Range16(43588LLU,43595LLU,1LLU),_21c2d5d88_Range16(43616LLU,43638LLU,1LLU),_21c2d5d88_Range16(43642LLU,43646LLU,4LLU),_21c2d5d88_Range16(43647LLU,43695LLU,1LLU),_21c2d5d88_Range16(43697LLU,43701LLU,4LLU),_21c2d5d88_Range16(43702LLU,43705LLU,3LLU),_21c2d5d88_Range16(43706LLU,43709LLU,1LLU),_21c2d5d88_Range16(43712LLU,43714LLU,2LLU),_21c2d5d88_Range16(43739LLU,43741LLU,1LLU),_21c2d5d88_Range16(43744LLU,43754LLU,1LLU),_21c2d5d88_Range16(43762LLU,43764LLU,1LLU),_21c2d5d88_Range16(43777LLU,43782LLU,1LLU),_21c2d5d88_Range16(43785LLU,43790LLU,1LLU),_21c2d5d88_Range16(43793LLU,43798LLU,1LLU),_21c2d5d88_Range16(43808LLU,43814LLU,1LLU),_21c2d5d88_Range16(43816LLU,43822LLU,1LLU),_21c2d5d88_Range16(43824LLU,43866LLU,1LLU),_21c2d5d88_Range16(43868LLU,43881LLU,1LLU),_21c2d5d88_Range16(43888LLU,44002LLU,1LLU),_21c2d5d88_Range16(44032LLU,55203LLU,1LLU),_21c2d5d88_Range16(55216LLU,55238LLU,1LLU),_21c2d5d88_Range16(55243LLU,55291LLU,1LLU),_21c2d5d88_Range16(63744LLU,64109LLU,1LLU),_21c2d5d88_Range16(64112LLU,64217LLU,1LLU),_21c2d5d88_Range16(64256LLU,64262LLU,1LLU),_21c2d5d88_Range16(64275LLU,64279LLU,1LLU),_21c2d5d88_Range16(64285LLU,64287LLU,2LLU),_21c2d5d88_Range16(64288LLU,64296LLU,1LLU),_21c2d5d88_Range16(64298LLU,64310LLU,1LLU),_21c2d5d88_Range16(64312LLU,64316LLU,1LLU),_21c2d5d88_Range16(64318LLU,64320LLU,2LLU),_21c2d5d88_Range16(64321LLU,64323LLU,2LLU),_21c2d5d88_Range16(64324LLU,64326LLU,2LLU),_21c2d5d88_Range16(64327LLU,64433LLU,1LLU),_21c2d5d88_Range16(64467LLU,64829LLU,1LLU),_21c2d5d88_Range16(64848LLU,64911LLU,1LLU),_21c2d5d88_Range16(64914LLU,64967LLU,1LLU),_21c2d5d88_Range16(65008LLU,65019LLU,1LLU),_21c2d5d88_Range16(65136LLU,65140LLU,1LLU),_21c2d5d88_Range16(65142LLU,65276LLU,1LLU),_21c2d5d88_Range16(65313LLU,65338LLU,1LLU),_21c2d5d88_Range16(65345LLU,65370LLU,1LLU),_21c2d5d88_Range16(65382LLU,65470LLU,1LLU),_21c2d5d88_Range16(65474LLU,65479LLU,1LLU),_21c2d5d88_Range16(65482LLU,65487LLU,1LLU),_21c2d5d88_Range16(65490LLU,65495LLU,1LLU),_21c2d5d88_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_21c2d642c_Range32>({_21c2d642c_Range32(65536LLU,65547LLU,1LLU),_21c2d642c_Range32(65549LLU,65574LLU,1LLU),_21c2d642c_Range32(65576LLU,65594LLU,1LLU),_21c2d642c_Range32(65596LLU,65597LLU,1LLU),_21c2d642c_Range32(65599LLU,65613LLU,1LLU),_21c2d642c_Range32(65616LLU,65629LLU,1LLU),_21c2d642c_Range32(65664LLU,65786LLU,1LLU),_21c2d642c_Range32(66176LLU,66204LLU,1LLU),_21c2d642c_Range32(66208LLU,66256LLU,1LLU),_21c2d642c_Range32(66304LLU,66335LLU,1LLU),_21c2d642c_Range32(66349LLU,66368LLU,1LLU),_21c2d642c_Range32(66370LLU,66377LLU,1LLU),_21c2d642c_Range32(66384LLU,66421LLU,1LLU),_21c2d642c_Range32(66432LLU,66461LLU,1LLU),_21c2d642c_Range32(66464LLU,66499LLU,1LLU),_21c2d642c_Range32(66504LLU,66511LLU,1LLU),_21c2d642c_Range32(66560LLU,66717LLU,1LLU),_21c2d642c_Range32(66736LLU,66771LLU,1LLU),_21c2d642c_Range32(66776LLU,66811LLU,1LLU),_21c2d642c_Range32(66816LLU,66855LLU,1LLU),_21c2d642c_Range32(66864LLU,66915LLU,1LLU),_21c2d642c_Range32(66928LLU,66938LLU,1LLU),_21c2d642c_Range32(66940LLU,66954LLU,1LLU),_21c2d642c_Range32(66956LLU,66962LLU,1LLU),_21c2d642c_Range32(66964LLU,66965LLU,1LLU),_21c2d642c_Range32(66967LLU,66977LLU,1LLU),_21c2d642c_Range32(66979LLU,66993LLU,1LLU),_21c2d642c_Range32(66995LLU,67001LLU,1LLU),_21c2d642c_Range32(67003LLU,67004LLU,1LLU),_21c2d642c_Range32(67072LLU,67382LLU,1LLU),_21c2d642c_Range32(67392LLU,67413LLU,1LLU),_21c2d642c_Range32(67424LLU,67431LLU,1LLU),_21c2d642c_Range32(67456LLU,67461LLU,1LLU),_21c2d642c_Range32(67463LLU,67504LLU,1LLU),_21c2d642c_Range32(67506LLU,67514LLU,1LLU),_21c2d642c_Range32(67584LLU,67589LLU,1LLU),_21c2d642c_Range32(67592LLU,67594LLU,2LLU),_21c2d642c_Range32(67595LLU,67637LLU,1LLU),_21c2d642c_Range32(67639LLU,67640LLU,1LLU),_21c2d642c_Range32(67644LLU,67647LLU,3LLU),_21c2d642c_Range32(67648LLU,67669LLU,1LLU),_21c2d642c_Range32(67680LLU,67702LLU,1LLU),_21c2d642c_Range32(67712LLU,67742LLU,1LLU),_21c2d642c_Range32(67808LLU,67826LLU,1LLU),_21c2d642c_Range32(67828LLU,67829LLU,1LLU),_21c2d642c_Range32(67840LLU,67861LLU,1LLU),_21c2d642c_Range32(67872LLU,67897LLU,1LLU),_21c2d642c_Range32(67968LLU,68023LLU,1LLU),_21c2d642c_Range32(68030LLU,68031LLU,1LLU),_21c2d642c_Range32(68096LLU,68112LLU,16LLU),_21c2d642c_Range32(68113LLU,68115LLU,1LLU),_21c2d642c_Range32(68117LLU,68119LLU,1LLU),_21c2d642c_Range32(68121LLU,68149LLU,1LLU),_21c2d642c_Range32(68192LLU,68220LLU,1LLU),_21c2d642c_Range32(68224LLU,68252LLU,1LLU),_21c2d642c_Range32(68288LLU,68295LLU,1LLU),_21c2d642c_Range32(68297LLU,68324LLU,1LLU),_21c2d642c_Range32(68352LLU,68405LLU,1LLU),_21c2d642c_Range32(68416LLU,68437LLU,1LLU),_21c2d642c_Range32(68448LLU,68466LLU,1LLU),_21c2d642c_Range32(68480LLU,68497LLU,1LLU),_21c2d642c_Range32(68608LLU,68680LLU,1LLU),_21c2d642c_Range32(68736LLU,68786LLU,1LLU),_21c2d642c_Range32(68800LLU,68850LLU,1LLU),_21c2d642c_Range32(68864LLU,68899LLU,1LLU),_21c2d642c_Range32(69248LLU,69289LLU,1LLU),_21c2d642c_Range32(69296LLU,69297LLU,1LLU),_21c2d642c_Range32(69376LLU,69404LLU,1LLU),_21c2d642c_Range32(69415LLU,69424LLU,9LLU),_21c2d642c_Range32(69425LLU,69445LLU,1LLU),_21c2d642c_Range32(69488LLU,69505LLU,1LLU),_21c2d642c_Range32(69552LLU,69572LLU,1LLU),_21c2d642c_Range32(69600LLU,69622LLU,1LLU),_21c2d642c_Range32(69635LLU,69687LLU,1LLU),_21c2d642c_Range32(69745LLU,69746LLU,1LLU),_21c2d642c_Range32(69749LLU,69763LLU,14LLU),_21c2d642c_Range32(69764LLU,69807LLU,1LLU),_21c2d642c_Range32(69840LLU,69864LLU,1LLU),_21c2d642c_Range32(69891LLU,69926LLU,1LLU),_21c2d642c_Range32(69956LLU,69959LLU,3LLU),_21c2d642c_Range32(69968LLU,70002LLU,1LLU),_21c2d642c_Range32(70006LLU,70019LLU,13LLU),_21c2d642c_Range32(70020LLU,70066LLU,1LLU),_21c2d642c_Range32(70081LLU,70084LLU,1LLU),_21c2d642c_Range32(70106LLU,70108LLU,2LLU),_21c2d642c_Range32(70144LLU,70161LLU,1LLU),_21c2d642c_Range32(70163LLU,70187LLU,1LLU),_21c2d642c_Range32(70207LLU,70208LLU,1LLU),_21c2d642c_Range32(70272LLU,70278LLU,1LLU),_21c2d642c_Range32(70280LLU,70282LLU,2LLU),_21c2d642c_Range32(70283LLU,70285LLU,1LLU),_21c2d642c_Range32(70287LLU,70301LLU,1LLU),_21c2d642c_Range32(70303LLU,70312LLU,1LLU),_21c2d642c_Range32(70320LLU,70366LLU,1LLU),_21c2d642c_Range32(70405LLU,70412LLU,1LLU),_21c2d642c_Range32(70415LLU,70416LLU,1LLU),_21c2d642c_Range32(70419LLU,70440LLU,1LLU),_21c2d642c_Range32(70442LLU,70448LLU,1LLU),_21c2d642c_Range32(70450LLU,70451LLU,1LLU),_21c2d642c_Range32(70453LLU,70457LLU,1LLU),_21c2d642c_Range32(70461LLU,70480LLU,19LLU),_21c2d642c_Range32(70493LLU,70497LLU,1LLU),_21c2d642c_Range32(70656LLU,70708LLU,1LLU),_21c2d642c_Range32(70727LLU,70730LLU,1LLU),_21c2d642c_Range32(70751LLU,70753LLU,1LLU),_21c2d642c_Range32(70784LLU,70831LLU,1LLU),_21c2d642c_Range32(70852LLU,70853LLU,1LLU),_21c2d642c_Range32(70855LLU,71040LLU,185LLU),_21c2d642c_Range32(71041LLU,71086LLU,1LLU),_21c2d642c_Range32(71128LLU,71131LLU,1LLU),_21c2d642c_Range32(71168LLU,71215LLU,1LLU),_21c2d642c_Range32(71236LLU,71296LLU,60LLU),_21c2d642c_Range32(71297LLU,71338LLU,1LLU),_21c2d642c_Range32(71352LLU,71424LLU,72LLU),_21c2d642c_Range32(71425LLU,71450LLU,1LLU),_21c2d642c_Range32(71488LLU,71494LLU,1LLU),_21c2d642c_Range32(71680LLU,71723LLU,1LLU),_21c2d642c_Range32(71840LLU,71903LLU,1LLU),_21c2d642c_Range32(71935LLU,71942LLU,1LLU),_21c2d642c_Range32(71945LLU,71948LLU,3LLU),_21c2d642c_Range32(71949LLU,71955LLU,1LLU),_21c2d642c_Range32(71957LLU,71958LLU,1LLU),_21c2d642c_Range32(71960LLU,71983LLU,1LLU),_21c2d642c_Range32(71999LLU,72001LLU,2LLU),_21c2d642c_Range32(72096LLU,72103LLU,1LLU),_21c2d642c_Range32(72106LLU,72144LLU,1LLU),_21c2d642c_Range32(72161LLU,72163LLU,2LLU),_21c2d642c_Range32(72192LLU,72203LLU,11LLU),_21c2d642c_Range32(72204LLU,72242LLU,1LLU),_21c2d642c_Range32(72250LLU,72272LLU,22LLU),_21c2d642c_Range32(72284LLU,72329LLU,1LLU),_21c2d642c_Range32(72349LLU,72368LLU,19LLU),_21c2d642c_Range32(72369LLU,72440LLU,1LLU),_21c2d642c_Range32(72704LLU,72712LLU,1LLU),_21c2d642c_Range32(72714LLU,72750LLU,1LLU),_21c2d642c_Range32(72768LLU,72818LLU,50LLU),_21c2d642c_Range32(72819LLU,72847LLU,1LLU),_21c2d642c_Range32(72960LLU,72966LLU,1LLU),_21c2d642c_Range32(72968LLU,72969LLU,1LLU),_21c2d642c_Range32(72971LLU,73008LLU,1LLU),_21c2d642c_Range32(73030LLU,73056LLU,26LLU),_21c2d642c_Range32(73057LLU,73061LLU,1LLU),_21c2d642c_Range32(73063LLU,73064LLU,1LLU),_21c2d642c_Range32(73066LLU,73097LLU,1LLU),_21c2d642c_Range32(73112LLU,73440LLU,328LLU),_21c2d642c_Range32(73441LLU,73458LLU,1LLU),_21c2d642c_Range32(73474LLU,73476LLU,2LLU),_21c2d642c_Range32(73477LLU,73488LLU,1LLU),_21c2d642c_Range32(73490LLU,73523LLU,1LLU),_21c2d642c_Range32(73648LLU,73728LLU,80LLU),_21c2d642c_Range32(73729LLU,74649LLU,1LLU),_21c2d642c_Range32(74880LLU,75075LLU,1LLU),_21c2d642c_Range32(77712LLU,77808LLU,1LLU),_21c2d642c_Range32(77824LLU,78895LLU,1LLU),_21c2d642c_Range32(78913LLU,78918LLU,1LLU),_21c2d642c_Range32(82944LLU,83526LLU,1LLU),_21c2d642c_Range32(92160LLU,92728LLU,1LLU),_21c2d642c_Range32(92736LLU,92766LLU,1LLU),_21c2d642c_Range32(92784LLU,92862LLU,1LLU),_21c2d642c_Range32(92880LLU,92909LLU,1LLU),_21c2d642c_Range32(92928LLU,92975LLU,1LLU),_21c2d642c_Range32(92992LLU,92995LLU,1LLU),_21c2d642c_Range32(93027LLU,93047LLU,1LLU),_21c2d642c_Range32(93053LLU,93071LLU,1LLU),_21c2d642c_Range32(93760LLU,93823LLU,1LLU),_21c2d642c_Range32(93952LLU,94026LLU,1LLU),_21c2d642c_Range32(94032LLU,94099LLU,67LLU),_21c2d642c_Range32(94100LLU,94111LLU,1LLU),_21c2d642c_Range32(94176LLU,94177LLU,1LLU),_21c2d642c_Range32(94179LLU,94208LLU,29LLU),_21c2d642c_Range32(94209LLU,100343LLU,1LLU),_21c2d642c_Range32(100352LLU,101589LLU,1LLU),_21c2d642c_Range32(101632LLU,101640LLU,1LLU),_21c2d642c_Range32(110576LLU,110579LLU,1LLU),_21c2d642c_Range32(110581LLU,110587LLU,1LLU),_21c2d642c_Range32(110589LLU,110590LLU,1LLU),_21c2d642c_Range32(110592LLU,110882LLU,1LLU),_21c2d642c_Range32(110898LLU,110928LLU,30LLU),_21c2d642c_Range32(110929LLU,110930LLU,1LLU),_21c2d642c_Range32(110933LLU,110948LLU,15LLU),_21c2d642c_Range32(110949LLU,110951LLU,1LLU),_21c2d642c_Range32(110960LLU,111355LLU,1LLU),_21c2d642c_Range32(113664LLU,113770LLU,1LLU),_21c2d642c_Range32(113776LLU,113788LLU,1LLU),_21c2d642c_Range32(113792LLU,113800LLU,1LLU),_21c2d642c_Range32(113808LLU,113817LLU,1LLU),_21c2d642c_Range32(119808LLU,119892LLU,1LLU),_21c2d642c_Range32(119894LLU,119964LLU,1LLU),_21c2d642c_Range32(119966LLU,119967LLU,1LLU),_21c2d642c_Range32(119970LLU,119973LLU,3LLU),_21c2d642c_Range32(119974LLU,119977LLU,3LLU),_21c2d642c_Range32(119978LLU,119980LLU,1LLU),_21c2d642c_Range32(119982LLU,119993LLU,1LLU),_21c2d642c_Range32(119995LLU,119997LLU,2LLU),_21c2d642c_Range32(119998LLU,120003LLU,1LLU),_21c2d642c_Range32(120005LLU,120069LLU,1LLU),_21c2d642c_Range32(120071LLU,120074LLU,1LLU),_21c2d642c_Range32(120077LLU,120084LLU,1LLU),_21c2d642c_Range32(120086LLU,120092LLU,1LLU),_21c2d642c_Range32(120094LLU,120121LLU,1LLU),_21c2d642c_Range32(120123LLU,120126LLU,1LLU),_21c2d642c_Range32(120128LLU,120132LLU,1LLU),_21c2d642c_Range32(120134LLU,120138LLU,4LLU),_21c2d642c_Range32(120139LLU,120144LLU,1LLU),_21c2d642c_Range32(120146LLU,120485LLU,1LLU),_21c2d642c_Range32(120488LLU,120512LLU,1LLU),_21c2d642c_Range32(120514LLU,120538LLU,1LLU),_21c2d642c_Range32(120540LLU,120570LLU,1LLU),_21c2d642c_Range32(120572LLU,120596LLU,1LLU),_21c2d642c_Range32(120598LLU,120628LLU,1LLU),_21c2d642c_Range32(120630LLU,120654LLU,1LLU),_21c2d642c_Range32(120656LLU,120686LLU,1LLU),_21c2d642c_Range32(120688LLU,120712LLU,1LLU),_21c2d642c_Range32(120714LLU,120744LLU,1LLU),_21c2d642c_Range32(120746LLU,120770LLU,1LLU),_21c2d642c_Range32(120772LLU,120779LLU,1LLU),_21c2d642c_Range32(122624LLU,122654LLU,1LLU),_21c2d642c_Range32(122661LLU,122666LLU,1LLU),_21c2d642c_Range32(122928LLU,122989LLU,1LLU),_21c2d642c_Range32(123136LLU,123180LLU,1LLU),_21c2d642c_Range32(123191LLU,123197LLU,1LLU),_21c2d642c_Range32(123214LLU,123536LLU,322LLU),_21c2d642c_Range32(123537LLU,123565LLU,1LLU),_21c2d642c_Range32(123584LLU,123627LLU,1LLU),_21c2d642c_Range32(124112LLU,124139LLU,1LLU),_21c2d642c_Range32(124896LLU,124902LLU,1LLU),_21c2d642c_Range32(124904LLU,124907LLU,1LLU),_21c2d642c_Range32(124909LLU,124910LLU,1LLU),_21c2d642c_Range32(124912LLU,124926LLU,1LLU),_21c2d642c_Range32(124928LLU,125124LLU,1LLU),_21c2d642c_Range32(125184LLU,125251LLU,1LLU),_21c2d642c_Range32(125259LLU,126464LLU,1205LLU),_21c2d642c_Range32(126465LLU,126467LLU,1LLU),_21c2d642c_Range32(126469LLU,126495LLU,1LLU),_21c2d642c_Range32(126497LLU,126498LLU,1LLU),_21c2d642c_Range32(126500LLU,126503LLU,3LLU),_21c2d642c_Range32(126505LLU,126514LLU,1LLU),_21c2d642c_Range32(126516LLU,126519LLU,1LLU),_21c2d642c_Range32(126521LLU,126523LLU,2LLU),_21c2d642c_Range32(126530LLU,126535LLU,5LLU),_21c2d642c_Range32(126537LLU,126541LLU,2LLU),_21c2d642c_Range32(126542LLU,126543LLU,1LLU),_21c2d642c_Range32(126545LLU,126546LLU,1LLU),_21c2d642c_Range32(126548LLU,126551LLU,3LLU),_21c2d642c_Range32(126553LLU,126561LLU,2LLU),_21c2d642c_Range32(126562LLU,126564LLU,2LLU),_21c2d642c_Range32(126567LLU,126570LLU,1LLU),_21c2d642c_Range32(126572LLU,126578LLU,1LLU),_21c2d642c_Range32(126580LLU,126583LLU,1LLU),_21c2d642c_Range32(126585LLU,126588LLU,1LLU),_21c2d642c_Range32(126590LLU,126592LLU,2LLU),_21c2d642c_Range32(126593LLU,126601LLU,1LLU),_21c2d642c_Range32(126603LLU,126619LLU,1LLU),_21c2d642c_Range32(126625LLU,126627LLU,1LLU),_21c2d642c_Range32(126629LLU,126633LLU,1LLU),_21c2d642c_Range32(126635LLU,126651LLU,1LLU),_21c2d642c_Range32(131072LLU,173791LLU,1LLU),_21c2d642c_Range32(173824LLU,177977LLU,1LLU),_21c2d642c_Range32(177984LLU,178205LLU,1LLU),_21c2d642c_Range32(178208LLU,183969LLU,1LLU),_21c2d642c_Range32(183984LLU,191456LLU,1LLU),_21c2d642c_Range32(194560LLU,195101LLU,1LLU),_21c2d642c_Range32(196608LLU,201546LLU,1LLU),_21c2d642c_Range32(201552LLU,205743LLU,1LLU)}),6LL));
	_21c29b975_LETTER = _21c297256__L;
	_21c2d1955__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
	_2368b4e64_FIRST = jule::Array<jule::U8,256>({});
	_2368b5838_ACCEPT_RANGES = jule::Array<_2368b5519_accept_range,16>({_2368b5519_accept_range(128LLU,191LLU),_2368b5519_accept_range(160LLU,191LLU),_2368b5519_accept_range(128LLU,159LLU),_2368b5519_accept_range(144LLU,191LLU),_2368b5519_accept_range(128LLU,143LLU)});
	_2359d9a6d_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
	_236920552_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
	_236920673_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
	_21c34c63b_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
	_21c34c86c_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
	_21c35922a_PATH_STDLIB = jule::Str();
	_21c36c86a_PATH_EXEC = jule::Str();
	_21c35a539_PATH_WD = jule::Str();
	_21c35ba79_PATH_API = jule::Str();
	_21c35c393_OS = jule::Str("linux", 5);
	_21c3828a2_ARCH = jule::Str("arm64", 5);
	_21c52aeac_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
	_21c52a2db_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
	_21c52a40c_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
	_21c52a64e_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
	_21c620711_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
	_21c631a96_KEYWORDS = jule::Array<_21c631766_KindPair,47>({_21c631766_KindPair(jule::Str("i8", 2),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("i16", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("i32", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("i64", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("u8", 2),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("u16", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("u32", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("u64", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("f32", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("f64", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("uint", 4),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("int", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("uintptr", 7),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("bool", 4),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("str", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("any", 3),static_cast<jule::U64>(1LLU)),_21c631766_KindPair(jule::Str("true", 4),static_cast<jule::U64>(6LLU)),_21c631766_KindPair(jule::Str("false", 5),static_cast<jule::U64>(6LLU)),_21c631766_KindPair(jule::Str("nil", 3),static_cast<jule::U64>(6LLU)),_21c631766_KindPair(jule::Str("const", 5),static_cast<jule::U64>(9LLU)),_21c631766_KindPair(jule::Str("ret", 3),static_cast<jule::U64>(4LLU)),_21c631766_KindPair(jule::Str("type", 4),static_cast<jule::U64>(10LLU)),_21c631766_KindPair(jule::Str("for", 3),static_cast<jule::U64>(12LLU)),_21c631766_KindPair(jule::Str("break", 5),static_cast<jule::U64>(13LLU)),_21c631766_KindPair(jule::Str("continue", 8),static_cast<jule::U64>(14LLU)),_21c631766_KindPair(jule::Str("in", 2),static_cast<jule::U64>(15LLU)),_21c631766_KindPair(jule::Str("if", 2),static_cast<jule::U64>(16LLU)),_21c631766_KindPair(jule::Str("else", 4),static_cast<jule::U64>(17LLU)),_21c631766_KindPair(jule::Str("use", 3),static_cast<jule::U64>(19LLU)),_21c631766_KindPair(jule::Str("pub", 3),static_cast<jule::U64>(21LLU)),_21c631766_KindPair(jule::Str("goto", 4),static_cast<jule::U64>(22LLU)),_21c631766_KindPair(jule::Str("enum", 4),static_cast<jule::U64>(24LLU)),_21c631766_KindPair(jule::Str("struct", 6),static_cast<jule::U64>(25LLU)),_21c631766_KindPair(jule::Str("co", 2),static_cast<jule::U64>(26LLU)),_21c631766_KindPair(jule::Str("match", 5),static_cast<jule::U64>(27LLU)),_21c631766_KindPair(jule::Str("self", 4),static_cast<jule::U64>(28LLU)),_21c631766_KindPair(jule::Str("trait", 5),static_cast<jule::U64>(29LLU)),_21c631766_KindPair(jule::Str("impl", 4),static_cast<jule::U64>(30LLU)),_21c631766_KindPair(jule::Str("cpp", 3),static_cast<jule::U64>(31LLU)),_21c631766_KindPair(jule::Str("fall", 4),static_cast<jule::U64>(32LLU)),_21c631766_KindPair(jule::Str("fn", 2),static_cast<jule::U64>(33LLU)),_21c631766_KindPair(jule::Str("let", 3),static_cast<jule::U64>(34LLU)),_21c631766_KindPair(jule::Str("unsafe", 6),static_cast<jule::U64>(35LLU)),_21c631766_KindPair(jule::Str("mut", 3),static_cast<jule::U64>(36LLU)),_21c631766_KindPair(jule::Str("defer", 5),static_cast<jule::U64>(37LLU)),_21c631766_KindPair(jule::Str("static", 6),static_cast<jule::U64>(38LLU)),_21c631766_KindPair(jule::Str("error", 5),static_cast<jule::U64>(40LLU))});
	_21c631cc7_BASIC_OPS = jule::Array<_21c631766_KindPair,39>({_21c631766_KindPair(jule::Str("::", 2),static_cast<jule::U64>(23LLU)),_21c631766_KindPair(jule::Str(":", 1),static_cast<jule::U64>(11LLU)),_21c631766_KindPair(jule::Str(";", 1),static_cast<jule::U64>(5LLU)),_21c631766_KindPair(jule::Str(",", 1),static_cast<jule::U64>(8LLU)),_21c631766_KindPair(jule::Str("...", 3),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str(".", 1),static_cast<jule::U64>(20LLU)),_21c631766_KindPair(jule::Str("+=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("-=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("*=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("/=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("%=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("<<=", 3),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str(">>=", 3),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("^=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("&=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("|=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("==", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("!=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str(">=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("<=", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("&&", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("||", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("<<", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str(">>", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("++", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("--", 2),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("+", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("-", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("*", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("/", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("%", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("&", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("|", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("^", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("!", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("<", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str(">", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("=", 1),static_cast<jule::U64>(7LLU)),_21c631766_KindPair(jule::Str("#", 1),static_cast<jule::U64>(39LLU))});
	_21e9ed27e_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
	_21e9ed625_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
	_21e205a0e_F32_INFO = _21e68dda9_FloatInfo(23LLU,8LLU,-127LL);
	_21e20c263_F64_INFO = _21e68dda9_FloatInfo(52LLU,11LLU,-1023LL);
	_21e290d30_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
	_21e321b6e_POWTAB = jule::Slice<jule::I64>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
	_21e2e5eea_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
	_21e32d609_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
	_21e46917e_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
	_21e4262d4_LEFTCHEATS = jule::Slice<_21ea2cbe8_LeftCheat>({_21ea2cbe8_LeftCheat(0LL,jule::Str()),_21ea2cbe8_LeftCheat(1LL,jule::Str("5", 1)),_21ea2cbe8_LeftCheat(1LL,jule::Str("25", 2)),_21ea2cbe8_LeftCheat(1LL,jule::Str("125", 3)),_21ea2cbe8_LeftCheat(2LL,jule::Str("625", 3)),_21ea2cbe8_LeftCheat(2LL,jule::Str("3125", 4)),_21ea2cbe8_LeftCheat(2LL,jule::Str("15625", 5)),_21ea2cbe8_LeftCheat(3LL,jule::Str("78125", 5)),_21ea2cbe8_LeftCheat(3LL,jule::Str("390625", 6)),_21ea2cbe8_LeftCheat(3LL,jule::Str("1953125", 7)),_21ea2cbe8_LeftCheat(4LL,jule::Str("9765625", 7)),_21ea2cbe8_LeftCheat(4LL,jule::Str("48828125", 8)),_21ea2cbe8_LeftCheat(4LL,jule::Str("244140625", 9)),_21ea2cbe8_LeftCheat(4LL,jule::Str("1220703125", 10)),_21ea2cbe8_LeftCheat(5LL,jule::Str("6103515625", 10)),_21ea2cbe8_LeftCheat(5LL,jule::Str("30517578125", 11)),_21ea2cbe8_LeftCheat(5LL,jule::Str("152587890625", 12)),_21ea2cbe8_LeftCheat(6LL,jule::Str("762939453125", 12)),_21ea2cbe8_LeftCheat(6LL,jule::Str("3814697265625", 13)),_21ea2cbe8_LeftCheat(6LL,jule::Str("19073486328125", 14)),_21ea2cbe8_LeftCheat(7LL,jule::Str("95367431640625", 14)),_21ea2cbe8_LeftCheat(7LL,jule::Str("476837158203125", 15)),_21ea2cbe8_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_21ea2cbe8_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_21ea2cbe8_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_21ea2cbe8_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_21ea2cbe8_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_21ea2cbe8_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_21ea2cbe8_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_21ea2cbe8_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_21ea2cbe8_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_21ea2cbe8_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_21ea2cbe8_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_21ea2cbe8_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_21ea2cbe8_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_21ea2cbe8_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_21ea2cbe8_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_21ea2cbe8_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_21ea2cbe8_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_21ea2cbe8_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_21ea2cbe8_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_21ea2cbe8_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_21ea2cbe8_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_21ea2cbe8_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_21ea2cbe8_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_21ea2cbe8_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_21ea2cbe8_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_21ea2cbe8_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_21ea2cbe8_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_21ea2cbe8_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_21ea2cbe8_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_21ea2cbe8_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_21ea2cbe8_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_21ea2cbe8_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_21ea2cbe8_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_21ea2cbe8_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_21ea2cbe8_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_21ea2cbe8_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_21ea2cbe8_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_21ea2cbe8_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_21ea2cbe8_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
	_21eb1e438_BIT_SIZE = 0LL;
	_21eb1e559_SYS_INT = jule::Str();
	_21eb1e67a_SYS_UINT = jule::Str();
	_21c3e8330_deads = nullptr;
	_21c40ac6b_checking = nullptr;
	_21c41721c_current = jule::Any(nullptr);
	_21c42006b_main_current = jule::Any(nullptr);
	_220dc526a_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
	_23691e694_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
	_21c3bb358_OUT_DIR = jule::Str("dist", 4);
	_21c3c4b03_OUT_NAME = jule::Str("ir.cpp", 6);
	_21c3c8189_OUT = jule::Str();

	_21c35d33e_init();
	_21eb2223d_init();
	_220de0d9b_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}