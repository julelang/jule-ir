// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 26/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>

struct _1d6271ac4_Importer{};
struct _1d631b9a4_Kind{};
struct _1d633797b_Lookup{};
struct _1d7396874_CommonFlag{};
struct _218108ece_Range16;
struct _218109452_Range32;
struct _2181098c5_RangeTable;
struct _21862780a_accept_range;
struct _2186313b3_LazyBuff;
struct _2316d6a05_DirEntry;
struct _2316d6be2_Directory;
struct _2316d7286_File;
struct _2316d7d8b_Status;
struct _1ed64e462_Cmd;
struct _21868a483_Log;
struct _1ee538d51_Token;
struct _1ee53e1db_File;
struct _1ee541243_KindPair;
struct _1ee546d70_Lex;
struct _1d5574b0e_Ast;
struct _1d557588a_Node;
struct _1d5575c86_Directive;
struct _1d55a968d_TypeDecl;
struct _1d55a9c54_IdentTypeDecl;
struct _1d55aa3a3_SubIdentTypeDecl;
struct _1d55aa75a_NamespaceTypeDecl;
struct _1d55aaa46_SptrTypeDecl;
struct _1d55aae42_SlcTypeDecl;
struct _1d55ab22d_TupleTypeDecl;
struct _1d55ab519_PtrTypeDecl;
struct _1d55abb9b_ArrTypeDecl;
struct _1d55ac3e9_MapTypeDecl;
struct _1d55ac7a1_RetTypeDecl;
struct _1d55adbae_Expr;
struct _1d55ade9a_RangeExpr;
struct _1d55ae550_UseExpr;
struct _1d55ae83b_TupleExpr;
struct _1d55aebe3_LitExpr;
struct _1d55b03ec_UnsafeExpr;
struct _1d55b07a4_CoExpr;
struct _1d55b0c27_IdentExpr;
struct _1d55b1431_UnaryExpr;
struct _1d55b17d8_VariadicExpr;
struct _1d55b1b90_CastExpr;
struct _1d55b2047_NsSelectionExpr;
struct _1d55b24ba_SubIdentExpr;
struct _1d55b293d_BinopExpr;
struct _1d55b3048_FnCallExpr;
struct _1d55b39c7_FieldExprPair;
struct _1d55b4225_StructLit;
struct _1d55b4698_BraceLit;
struct _1d55b51b0_KeyValPair;
struct _1d55b5633_SliceExpr;
struct _1d55b5ec4_IndexingExpr;
struct _1d55b65ce_SlicingExpr;
struct _1d55b68ba_Constraint;
struct _1d55b6d3d_GenericDecl;
struct _1d55b71e5_LabelSt;
struct _1d55b759c_GotoSt;
struct _1d55b7888_FallSt;
struct _1d55b7e93_AssignLeft;
struct _1d55b84d2_AssignSt;
struct _1d55b946c_Stmt;
struct _1d55b9a77_ScopeTree;
struct _1d55ba24d_ParamDecl;
struct _1d55bb56d_FnDecl;
struct _1d55bc54c_VarDecl;
struct _1d55bc904_RetSt;
struct _1d55bd064_Iter;
struct _1d55bd839_WhileKind;
struct _1d55be1ca_RangeKind;
struct _1d55be582_BreakSt;
struct _1d55be939_ContSt;
struct _1d55bedac_If;
struct _1d55c0264_Else;
struct _1d55c06d7_Conditional;
struct _1d55c0dad_TypeAliasDecl;
struct _1d55c1331_Case;
struct _1d55c1a07_MatchCase;
struct _1d55c2299_UseDecl;
struct _1d55c271c_EnumItemDecl;
struct _1d55c3245_EnumDecl;
struct _1d55c3c4b_TypeEnumItemDecl;
struct _1d55c3e49_TypeEnumDecl;
struct _1d55c4499_FieldDecl;
struct _1d55c4d07_StructDecl;
struct _1d55c5412_TraitDecl;
struct _1d55c5a1c_Impl;
struct _1d561288e_Const;
struct _1d5c8e5e2_FloatInfo;
struct _1d5b95086_DecimalSlice;
struct _1d61c0a34_LeftCheat;
struct _1d61c0d97_Decimal;
struct _1d558c385_Field;
struct _1d559b7e5_Operators;
struct _1d5599dba_Struct;
struct _1d55a2532_FieldIns;
struct _1d5654dba_OperandExprModel;
struct _1d567337d_BinopExprModel;
struct _1d567356a_UnaryExprModel;
struct _1d5673757_StructArgExprModel;
struct _1d5673944_StructLitExprModel;
struct _1d5673b31_AllocStructLitExprModel;
struct _1d5673d1d_CastingExprModel;
struct _1d567400a_FnCallExprModel;
struct _1d56741e7_SliceExprModel;
struct _1d56743d4_IndexingExprModel;
struct _1d56745c1_AnonFnExprModel;
struct _1d56747ad_KeyValPairExprModel;
struct _1d567499a_MapExprModel;
struct _1d5674b87_SlicingExprModel;
struct _1d5674d74_TraitSubIdentExprModel;
struct _1d5675292_StructSubIdentExprModel;
struct _1d567547e_StructStaticIdentExprModel;
struct _1d567566b_ArrayExprModel;
struct _1d5675858_CommonIdentExprModel;
struct _1d5675a45_CommonSubIdentExprModel;
struct _1d5675c32_TupleExprModel;
struct _1d5675e1e_BuiltinOutCallExprModel;
struct _1d567610b_BuiltinOutlnCallExprModel;
struct _1d56762e8_BuiltinCloneCallExprModel;
struct _1d56764d5_BuiltinNewCallExprModel;
struct _1d56766c2_BuiltinPanicCallExprModel;
struct _1d56768ae_BuiltinAssertCallExprModel;
struct _1d5676a9b_BuiltinMakeCallExprModel;
struct _1d5676c88_BuiltinAppendCallExprModel;
struct _1d5676e75_BuiltinCopyCallExprModel;
struct _1d5677162_BuiltinErrorCallExprModel;
struct _1d5675061_SizeofExprModel;
struct _1d56777c2_AlignofExprModel;
struct _1d56779ae_RuneExprModel;
struct _1d5677b9b_IntegratedToStrExprModel;
struct _1d5677d88_BackendEmitExprModel;
struct _1d5678075_FreeExprModel;
struct _1d5678817_RetType;
struct _1d5678eaa_Param;
struct _1d567a7e7_Fn;
struct _1d567c5c9_ParamIns;
struct _1d567d498_FnIns;
struct _1d5680c5e_ReferenceStack;
struct _1d5682128_Pass;
struct _1d56865c2_SymbolBuilder;
struct _1d59c3e1a_Trait;
struct _1d581b2c3_EnumItem;
struct _1d5692820_Enum;
struct _1d580d749_TypeEnumItem;
struct _1d5a788b5_TypeEnum;
struct _1d61c75c9_ConstraintChecker;
struct _1d62470d8_Impl;
struct _1d6255beb_Scope;
struct _1d6255dd8_If;
struct _1d62560c5_Else;
struct _1d625646b_Conditional;
struct _1d6256757_InfIter;
struct _1d6256bca_WhileIter;
struct _1d62575b0_RangeIter;
struct _1d62579ab_ContSt;
struct _1d6257d63_BreakSt;
struct _1d625814e_Label;
struct _1d625843a_GotoSt;
struct _1d62587e2_Postfix;
struct _1d6258c65_Assign;
struct _1d625911c_MultiAssign;
struct _1d625965b_Match;
struct _1d625a1a6_Case;
struct _1d625a75b_FallSt;
struct _1d625abce_RetSt;
struct _1d625b2d9_ScopeLabel;
struct _1d625b75c_ScopeGoto;
struct _1d625c571_ScopeChecker;
struct _1d626d6b4_DirectiveChecker;
struct _1d62743bd_ImportInfo;
struct _1d6277327_Package;
struct _1d627c519_Sema;
struct _1d6296379_MissingRetChecker;
struct _1d629803a_IterRelation;
struct _1d6298ea3_Var;
struct _1d62999cb_FuncPattern;
struct _1d62ca545_TypeCompatibilityChecker;
struct _1d62cc16d_AssignTypeChecker;
struct _1d62cda87_DynamicTypeAnnotation;
struct _1d62d342c_FnCallArgChecker;
struct _1d62d5d36_StructLitChecker;
struct _1d62d791a_RangeChecker;
struct _1d62d9aa4_RetTypeChecker;
struct _1d62db952_SymbolTable;
struct _1d62e16b0_Data;
struct _1d62e2738_Value;
struct _1d62e322d_Eval;
struct _1d630da1d_UnaryEval;
struct _1d63107ab_BinaryEval;
struct _1d631a6a6_InsGeneric;
struct _1d631b1e0_TypeAlias;
struct _1d631bdd3_TypeKind;
struct _1d632103b_TypeSymbol;
struct _1d63218aa_Prim;
struct _1d632513e_Sptr;
struct _1d6325a9b_Slc;
struct _1d6326629_Tuple;
struct _1d6327152_Map;
struct _1d6327c46_Arr;
struct _1d63286a3_Ptr;
struct _1d63295e9_Referencer;
struct _1d632a342_TypeChecker;
struct _1d6332a53_IdentTypeLookup;
struct _1d6ac11e2_FileInfo;
struct _1d6b228c5_stmt;
struct _1d6b23200_ScopeParser;
struct _1d6b2e7c2_CallData;
struct _1d6b30c57_ExprBuilder;
struct _1d6b3aed7_AssignInfo;
struct _1d6b3e55c_Parser;
struct _1d6b50936_TypeBuilder;
struct _1d647966c_CompileInfo;
struct _1d647a9c0_DirectiveEval;
struct _1d6573689_JuleImporter;
struct _1d67916a9_OrderedDefines;
struct _1d6419909_DefineOrderer;
struct _1d6c19417_LiveTable;
struct _1d6c4b9ee_ScopeDeadCode;
struct _1d6c5098c_ExprDeadCode;
struct _1d50b232d_UnsafeBinopExprModel;
struct _1d53dbc84_UnsafeIndexingExprModel;
struct _1d50e0636_PushToSliceExprModel;
struct _1d53aee66_MutSlicingExprModel;
struct _1d52e0715_StrInsertBeginExprModel;
struct _1d52c0959_ScopeOptimizer;
struct _1d52bce51_ExprOptimizer;
struct _1d6bbca80_Optimizer;
struct _1d6c6a941_AnsiEscape;
struct _1d6c6be5e_Logger;
struct _1d73506eb_AbsTime;
struct _1d7350d8e_Time;
struct _1d72c9752_ScopeCoder;
struct _1d72d22c6_ExprCoder;
struct _1d72e01c4_DeriveCoder;
struct _1d72e1604_TestCoder;
struct _1d72e3c55_IdentCoder;
struct _1d73561b3_SerializationInfo;
struct _1d73563a0_TraitHash;
struct _1d735c10e_CustomType;
struct _1d735c906_TypeCoder;
struct _1d9b78de0_Flag;
struct _1d9b7caa3_Flag;
struct _1d9b8158a_Flag;
struct _1d9b850b6_Flag;
struct _1d9b88a9d_Flag;
struct _1d73986bc_FlagSet;
struct _1d6998e55_IR;
struct _1d55c62d1_StructIns;
struct _1d6c196d1_ObjectDeadCode;
struct _1d735658c_ObjectCoder;
struct _1d739ad95_ArgParser;
struct _218108ece_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_218108ece_Range16(void) = default;

	inline bool operator==(_218108ece_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_218108ece_Range16 _other) { return !this->operator==(_other); }


};
struct _218109452_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_218109452_Range32(void) = default;

	inline bool operator==(_218109452_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_218109452_Range32 _other) { return !this->operator==(_other); }


};
struct _2181098c5_RangeTable {
	jule::Slice<_218108ece_Range16> _field_r16 = jule::Slice<_218108ece_Range16>();
	jule::Slice<_218109452_Range32> _field_r32 = jule::Slice<_218109452_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_2181098c5_RangeTable(void) = default;

	inline bool operator==(_2181098c5_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_2181098c5_RangeTable _other) { return !this->operator==(_other); }


};
struct _21862780a_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_21862780a_accept_range(void) = default;

	inline bool operator==(_21862780a_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_21862780a_accept_range _other) { return !this->operator==(_other); }


};
inline jule::U8 _218631836_index(_2186313b3_LazyBuff*, jule::I64);
inline void _218631aab_append(_2186313b3_LazyBuff*, jule::U8);
inline jule::Str _218631d20_string(_2186313b3_LazyBuff*);
struct _2186313b3_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_2186313b3_LazyBuff(void) = default;

	inline bool operator==(_2186313b3_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_2186313b3_LazyBuff _other) { return !this->operator==(_other); }


};
struct _2316d6a05_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_2316d7d8b_Status> _field_stat = jule::Ptr<_2316d7d8b_Status>();
	

	_2316d6a05_DirEntry(void) = default;

	inline bool operator==(_2316d6a05_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_2316d6a05_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>> static__2318742be_read(jule::Str);
inline jule::VoidExceptional static__2318849d8_create(jule::Str);
inline jule::VoidExceptional static__2318855aa_remove(jule::Str);
struct _2316d6be2_Directory {
	

	_2316d6be2_Directory(void) = default;

	inline bool operator==(_2316d6be2_Directory _other) { return true; }

	inline bool operator!=(_2316d6be2_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_2316d7286_File>> static__2315d2093_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__2315d55d5_remove(jule::Str);
inline jule::Exceptional<jule::I64> _231612678_write(_2316d7286_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _2315d2626_read(_2316d7286_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_2316d7286_File> static__2316d7473_new(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2316d7286_File>> static__2316d75a5_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2316d76d7_read(jule::Str);
inline jule::VoidExceptional static__2316d7819_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2316d794b_seek(_2316d7286_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _2316d7a7d_close(_2316d7286_File*);
struct _2316d7286_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_2316d7286_File(void) = default;

	inline bool operator==(_2316d7286_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2316d7286_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_2316d7d8b_Status>> static__2315d2bdc_of(jule::Str);
inline jule::Bool _2316d8078_is_dir(_2316d7d8b_Status*);
inline jule::Bool _2316d81aa_is_reg(_2316d7d8b_Status*);
struct _2316d7d8b_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_2316d7d8b_Status(void) = default;

	inline bool operator==(_2316d7d8b_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2316d7d8b_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ed64e462_Cmd> static__1ed64e891_new(jule::Str);
inline jule::Exceptional<jule::I64> _1ed64eb05_spawn(_1ed64e462_Cmd*);
inline jule::Exceptional<jule::I64> _1ed652a92___spawn(_1ed64e462_Cmd*);
struct _1ed64e462_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_1ed64e462_Cmd(void) = default;

	inline bool operator==(_1ed64e462_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1ed64e462_Cmd _other) { return !this->operator==(_other); }


};
struct _21868a483_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_21868a483_Log(void) = default;

	inline bool operator==(_21868a483_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_21868a483_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1ee539208_prec(_1ee538d51_Token*);
struct _1ee538d51_Token {
	jule::Ptr<_1ee53e1db_File> _field_file = jule::Ptr<_1ee53e1db_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_1ee538d51_Token(void) = default;

	inline bool operator==(_1ee538d51_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ee538d51_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ee53e5e8_is_ok(_1ee53e1db_File*);
inline void _1ee53e86d_fill(_1ee53e1db_File*, jule::Slice<jule::U8>);
inline jule::Str _1ee53ead2_dir(_1ee53e1db_File*);
inline jule::Str _1ee53ed46_name(_1ee53e1db_File*);
inline jule::Uintptr _1ee5400aa_addr(_1ee53e1db_File*);
inline jule::Str _1ee5403b8_get_row(_1ee53e1db_File*, jule::I64);
struct _1ee53e1db_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	

	_1ee53e1db_File(void) = default;

	inline bool operator==(_1ee53e1db_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1ee53e1db_File _other) { return !this->operator==(_other); }


};
struct _1ee541243_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1ee541243_KindPair(void) = default;

	inline bool operator==(_1ee541243_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ee541243_KindPair _other) { return !this->operator==(_other); }


};
inline void _1ee547414_push_err(_1ee546d70_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1ee547733_push_err_tok(_1ee546d70_Lex*, jule::Ptr<_1ee538d51_Token>&, jule::Str);
inline void _1ee54790e_lex(_1ee546d70_Lex*);
inline jule::Str _1ee547c1c_id(_1ee546d70_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1ee547e81_resume(_1ee546d70_Lex*);
inline void _1ee548206_lex_line_comment(_1ee546d70_Lex*, jule::Ptr<_1ee538d51_Token>&);
inline void _1ee54847b_lex_range_comment(_1ee546d70_Lex*, jule::Ptr<_1ee538d51_Token>&);
inline jule::Str _1ee548789_num(_1ee546d70_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1ee548a97_escape_seq(_1ee546d70_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1ee548e4e_get_rune(_1ee546d70_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1ee54925c_lex_rune(_1ee546d70_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1ee5494c1_lex_str(_1ee546d70_Lex*);
inline jule::Bool _1ee549735_is_first_token_of_line(_1ee546d70_Lex*);
inline void _1ee549911_new_line(_1ee546d70_Lex*);
inline jule::Bool _1ee549e0b_is_op(_1ee546d70_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1ee538d51_Token>&);
inline jule::Bool _1ee54a2b3_lex_basic_ops(_1ee546d70_Lex*, jule::Slice<jule::U8>, jule::Ptr<_1ee538d51_Token>&);
inline jule::Bool _1ee54a66a_lex_id(_1ee546d70_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Bool _1ee54aa22_lex_num(_1ee546d70_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Ptr<_1ee538d51_Token> _1ee54ac86_token(_1ee546d70_Lex*);
struct _1ee546d70_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Ptr<_1ee53e1db_File> _field_file = jule::Ptr<_1ee53e1db_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_21868a483_Log> _field_errors = jule::Slice<_21868a483_Log>();
	

	_1ee546d70_Lex(void) = default;

	inline bool operator==(_1ee546d70_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1ee546d70_Lex _other) { return !this->operator==(_other); }


};
struct _1d5574b0e_Ast {
	jule::Ptr<_1ee53e1db_File> _field_file = jule::Ptr<_1ee53e1db_File>();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Slice<jule::Ptr<_1d55c2299_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1d55c2299_UseDecl>>();
	jule::Slice<_1d557588a_Node> _field_nodes = jule::Slice<_1d557588a_Node>();
	

	_1d5574b0e_Ast(void) = default;

	inline bool operator==(_1d5574b0e_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1d5574b0e_Ast _other) { return !this->operator==(_other); }


};
struct _1d557588a_Node {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_data = jule::Any();
	

	_1d557588a_Node(void) = default;

	inline bool operator==(_1d557588a_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d557588a_Node _other) { return !this->operator==(_other); }


};
struct _1d5575c86_Directive {
	jule::Ptr<_1ee538d51_Token> _field_tag = jule::Ptr<_1ee538d51_Token>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_args = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	

	_1d5575c86_Directive(void) = default;

	inline bool operator==(_1d5575c86_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1d5575c86_Directive _other) { return !this->operator==(_other); }


};
struct _1d55a968d_TypeDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1d55a968d_TypeDecl(void) = default;

	inline bool operator==(_1d55a968d_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d55a968d_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55aa0b7_is_prim(_1d55a9c54_IdentTypeDecl*);
struct _1d55a9c54_IdentTypeDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>();
	

	_1d55a9c54_IdentTypeDecl(void) = default;

	inline bool operator==(_1d55a9c54_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d55a9c54_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55aa3a3_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1d55a9c54_IdentTypeDecl>> _field_idents = jule::Slice<jule::Ptr<_1d55a9c54_IdentTypeDecl>>();
	

	_1d55aa3a3_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1d55aa3a3_SubIdentTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1d55aa3a3_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55aa75a_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_idents = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d55aa75a_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1d55aa75a_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d55aa75a_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55aaa46_SptrTypeDecl {
	jule::Ptr<_1d55a968d_TypeDecl> _field_elem = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d55aaa46_SptrTypeDecl(void) = default;

	inline bool operator==(_1d55aaa46_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d55aaa46_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55aae42_SlcTypeDecl {
	jule::Ptr<_1d55a968d_TypeDecl> _field_elem = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d55aae42_SlcTypeDecl(void) = default;

	inline bool operator==(_1d55aae42_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d55aae42_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55ab22d_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>();
	

	_1d55ab22d_TupleTypeDecl(void) = default;

	inline bool operator==(_1d55ab22d_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1d55ab22d_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55ab86b_is_unsafe(_1d55ab519_PtrTypeDecl*);
struct _1d55ab519_PtrTypeDecl {
	jule::Ptr<_1d55a968d_TypeDecl> _field_elem = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d55ab519_PtrTypeDecl(void) = default;

	inline bool operator==(_1d55ab519_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d55ab519_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55ac075_auto_sized(_1d55abb9b_ArrTypeDecl*);
struct _1d55abb9b_ArrTypeDecl {
	jule::Ptr<_1d55a968d_TypeDecl> _field_elem = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d55adbae_Expr> _field_size = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55abb9b_ArrTypeDecl(void) = default;

	inline bool operator==(_1d55abb9b_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d55abb9b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55ac3e9_MapTypeDecl {
	jule::Ptr<_1d55a968d_TypeDecl> _field_key = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d55a968d_TypeDecl> _field_val = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d55ac3e9_MapTypeDecl(void) = default;

	inline bool operator==(_1d55ac3e9_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1d55ac3e9_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55ac7a1_RetTypeDecl {
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_idents = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	

	_1d55ac7a1_RetTypeDecl(void) = default;

	inline bool operator==(_1d55ac7a1_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1d55ac7a1_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d55adbae_Expr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1d55adbae_Expr(void) = default;

	inline bool operator==(_1d55adbae_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d55adbae_Expr _other) { return !this->operator==(_other); }


};
struct _1d55ade9a_RangeExpr {
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55ade9a_RangeExpr(void) = default;

	inline bool operator==(_1d55ade9a_RangeExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55ade9a_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1d55ae550_UseExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55ae550_UseExpr(void) = default;

	inline bool operator==(_1d55ae550_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55ae550_UseExpr _other) { return !this->operator==(_other); }


};
struct _1d55ae83b_TupleExpr {
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_expr = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	

	_1d55ae83b_TupleExpr(void) = default;

	inline bool operator==(_1d55ae83b_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55ae83b_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55b0045_is_nil(_1d55aebe3_LitExpr*);
struct _1d55aebe3_LitExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_value = jule::Str();
	

	_1d55aebe3_LitExpr(void) = default;

	inline bool operator==(_1d55aebe3_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1d55aebe3_LitExpr _other) { return !this->operator==(_other); }


};
struct _1d55b03ec_UnsafeExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b03ec_UnsafeExpr(void) = default;

	inline bool operator==(_1d55b03ec_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55b03ec_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1d55b07a4_CoExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b07a4_CoExpr(void) = default;

	inline bool operator==(_1d55b07a4_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55b07a4_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55b1079_is_self(_1d55b0c27_IdentExpr*);
struct _1d55b0c27_IdentExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_1d55b0c27_IdentExpr(void) = default;

	inline bool operator==(_1d55b0c27_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1d55b0c27_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1d55b1431_UnaryExpr {
	jule::Ptr<_1ee538d51_Token> _field_op = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b1431_UnaryExpr(void) = default;

	inline bool operator==(_1d55b1431_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55b1431_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1d55b17d8_VariadicExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b17d8_VariadicExpr(void) = default;

	inline bool operator==(_1d55b17d8_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55b17d8_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1d55b1b90_CastExpr {
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b1b90_CastExpr(void) = default;

	inline bool operator==(_1d55b1b90_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55b1b90_CastExpr _other) { return !this->operator==(_other); }


};
struct _1d55b2047_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_ns = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Ptr<_1ee538d51_Token> _field_ident = jule::Ptr<_1ee538d51_Token>();
	

	_1d55b2047_NsSelectionExpr(void) = default;

	inline bool operator==(_1d55b2047_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d55b2047_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1d55b24ba_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1ee538d51_Token> _field_ident = jule::Ptr<_1ee538d51_Token>();
	

	_1d55b24ba_SubIdentExpr(void) = default;

	inline bool operator==(_1d55b24ba_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d55b24ba_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1d55b293d_BinopExpr {
	jule::Ptr<_1d55adbae_Expr> _field_left = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d55adbae_Expr> _field_right = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1ee538d51_Token> _field_op = jule::Ptr<_1ee538d51_Token>();
	

	_1d55b293d_BinopExpr(void) = default;

	inline bool operator==(_1d55b293d_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d55b293d_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55b33ab_unhandled(_1d55b3048_FnCallExpr*);
inline jule::Bool _1d55b3620_ignored(_1d55b3048_FnCallExpr*);
struct _1d55b3048_FnCallExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>();
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_args = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_exception = jule::Ptr<_1d55b9a77_ScopeTree>();
	

	_1d55b3048_FnCallExpr(void) = default;

	inline bool operator==(_1d55b3048_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1d55b3048_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55b3d29_is_targeted(_1d55b39c7_FieldExprPair*);
struct _1d55b39c7_FieldExprPair {
	jule::Ptr<_1ee538d51_Token> _field_field = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b39c7_FieldExprPair(void) = default;

	inline bool operator==(_1d55b39c7_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55b39c7_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1d55b4225_StructLit {
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	

	_1d55b4225_StructLit(void) = default;

	inline bool operator==(_1d55b4225_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d55b4225_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55b4d19_is_empty(_1d55b4698_BraceLit*);
struct _1d55b4698_BraceLit {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	

	_1d55b4698_BraceLit(void) = default;

	inline bool operator==(_1d55b4698_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d55b4698_BraceLit _other) { return !this->operator==(_other); }


};
struct _1d55b51b0_KeyValPair {
	jule::Ptr<_1d55adbae_Expr> _field_key = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d55adbae_Expr> _field_val = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1ee538d51_Token> _field_colon = jule::Ptr<_1ee538d51_Token>();
	

	_1d55b51b0_KeyValPair(void) = default;

	inline bool operator==(_1d55b51b0_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1d55b51b0_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55b5985_is_empty(_1d55b5633_SliceExpr*);
struct _1d55b5633_SliceExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	

	_1d55b5633_SliceExpr(void) = default;

	inline bool operator==(_1d55b5633_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d55b5633_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1d55b5ec4_IndexingExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d55adbae_Expr> _field_index = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b5ec4_IndexingExpr(void) = default;

	inline bool operator==(_1d55b5ec4_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1d55b5ec4_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1d55b65ce_SlicingExpr {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d55adbae_Expr> _field_start = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d55adbae_Expr> _field_to = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b65ce_SlicingExpr(void) = default;

	inline bool operator==(_1d55b65ce_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1d55b65ce_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1d55b68ba_Constraint {
	jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _field_mask = jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>();
	

	_1d55b68ba_Constraint(void) = default;

	inline bool operator==(_1d55b68ba_Constraint _other) {
		return 
			this->_field_mask == _other._field_mask;
	}

	inline bool operator!=(_1d55b68ba_Constraint _other) { return !this->operator==(_other); }


};
struct _1d55b6d3d_GenericDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d55b68ba_Constraint> _field_constraint = jule::Ptr<_1d55b68ba_Constraint>();
	

	_1d55b6d3d_GenericDecl(void) = default;

	inline bool operator==(_1d55b6d3d_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_constraint == _other._field_constraint;
	}

	inline bool operator!=(_1d55b6d3d_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1d55b71e5_LabelSt {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1d55b71e5_LabelSt(void) = default;

	inline bool operator==(_1d55b71e5_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d55b71e5_LabelSt _other) { return !this->operator==(_other); }


};
struct _1d55b759c_GotoSt {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_label = jule::Ptr<_1ee538d51_Token>();
	

	_1d55b759c_GotoSt(void) = default;

	inline bool operator==(_1d55b759c_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d55b759c_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d55b7888_FallSt {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	

	_1d55b7888_FallSt(void) = default;

	inline bool operator==(_1d55b7888_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1d55b7888_FallSt _other) { return !this->operator==(_other); }


};
struct _1d55b7e93_AssignLeft {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b7e93_AssignLeft(void) = default;

	inline bool operator==(_1d55b7e93_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55b7e93_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1d55b84d2_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_1ee538d51_Token> _field_setter = jule::Ptr<_1ee538d51_Token>();
	jule::Slice<jule::Ptr<_1d55b7e93_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1d55b7e93_AssignLeft>>();
	jule::Ptr<_1d55adbae_Expr> _field_right = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55b84d2_AssignSt(void) = default;

	inline bool operator==(_1d55b84d2_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1d55b84d2_AssignSt _other) { return !this->operator==(_other); }


};
struct _1d55b946c_Stmt {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_data = jule::Any();
	

	_1d55b946c_Stmt(void) = default;

	inline bool operator==(_1d55b946c_Stmt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d55b946c_Stmt _other) { return !this->operator==(_other); }


};
struct _1d55b9a77_ScopeTree {
	jule::Ptr<_1d55b9a77_ScopeTree> _field_parent = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1d55b946c_Stmt> _field_stmts = jule::Slice<_1d55b946c_Stmt>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	

	_1d55b9a77_ScopeTree(void) = default;

	inline bool operator==(_1d55b9a77_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d55b9a77_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55ba5b1_is_self(_1d55ba24d_ParamDecl*);
inline jule::Bool _1d55ba825_is_ref(_1d55ba24d_ParamDecl*);
struct _1d55ba24d_ParamDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_1d55ba24d_ParamDecl(void) = default;

	inline bool operator==(_1d55ba24d_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d55ba24d_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55bb8c0_is_anon(_1d55bb56d_FnDecl*);
struct _1d55bb56d_FnDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>();
	jule::Ptr<_1d55ac7a1_RetTypeDecl> _field_result = jule::Ptr<_1d55ac7a1_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>>();
	

	_1d55bb56d_FnDecl(void) = default;

	inline bool operator==(_1d55bb56d_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1d55bb56d_FnDecl _other) { return !this->operator==(_other); }


};
struct _1d55bc54c_VarDecl {
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55bc54c_VarDecl(void) = default;

	inline bool operator==(_1d55bc54c_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55bc54c_VarDecl _other) { return !this->operator==(_other); }


};
struct _1d55bc904_RetSt {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55bc904_RetSt(void) = default;

	inline bool operator==(_1d55bc904_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55bc904_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55bd3b6_is_inf(_1d55bd064_Iter*);
struct _1d55bd064_Iter {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	

	_1d55bd064_Iter(void) = default;

	inline bool operator==(_1d55bd064_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d55bd064_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55bdb8b_is_while_next(_1d55bd839_WhileKind*);
struct _1d55bd839_WhileKind {
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1ee538d51_Token> _field_next_token = jule::Ptr<_1ee538d51_Token>();
	

	_1d55bd839_WhileKind(void) = default;

	inline bool operator==(_1d55bd839_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1d55bd839_WhileKind _other) { return !this->operator==(_other); }


};
struct _1d55be1ca_RangeKind {
	jule::Ptr<_1ee538d51_Token> _field_in_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d55bc54c_VarDecl> _field_key_a = jule::Ptr<_1d55bc54c_VarDecl>();
	jule::Ptr<_1d55bc54c_VarDecl> _field_key_b = jule::Ptr<_1d55bc54c_VarDecl>();
	

	_1d55be1ca_RangeKind(void) = default;

	inline bool operator==(_1d55be1ca_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1d55be1ca_RangeKind _other) { return !this->operator==(_other); }


};
struct _1d55be582_BreakSt {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_label = jule::Ptr<_1ee538d51_Token>();
	

	_1d55be582_BreakSt(void) = default;

	inline bool operator==(_1d55be582_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d55be582_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d55be939_ContSt {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_label = jule::Ptr<_1ee538d51_Token>();
	

	_1d55be939_ContSt(void) = default;

	inline bool operator==(_1d55be939_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d55be939_ContSt _other) { return !this->operator==(_other); }


};
struct _1d55bedac_If {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	

	_1d55bedac_If(void) = default;

	inline bool operator==(_1d55bedac_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d55bedac_If _other) { return !this->operator==(_other); }


};
struct _1d55c0264_Else {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	

	_1d55c0264_Else(void) = default;

	inline bool operator==(_1d55c0264_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d55c0264_Else _other) { return !this->operator==(_other); }


};
struct _1d55c06d7_Conditional {
	jule::Ptr<_1d55bedac_If> _field_head = jule::Ptr<_1d55bedac_If>();
	jule::Slice<jule::Ptr<_1d55bedac_If>> _field_tail = jule::Slice<jule::Ptr<_1d55bedac_If>>();
	jule::Ptr<_1d55c0264_Else> _field_default = jule::Ptr<_1d55c0264_Else>();
	

	_1d55c06d7_Conditional(void) = default;

	inline bool operator==(_1d55c06d7_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d55c06d7_Conditional _other) { return !this->operator==(_other); }


};
struct _1d55c0dad_TypeAliasDecl {
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d55c0dad_TypeAliasDecl(void) = default;

	inline bool operator==(_1d55c0dad_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d55c0dad_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1d55c1331_Case {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	

	_1d55c1331_Case(void) = default;

	inline bool operator==(_1d55c1331_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d55c1331_Case _other) { return !this->operator==(_other); }


};
struct _1d55c1a07_MatchCase {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Slice<jule::Ptr<_1d55c1331_Case>> _field_cases = jule::Slice<jule::Ptr<_1d55c1331_Case>>();
	jule::Ptr<_1d55c0264_Else> _field_default = jule::Ptr<_1d55c0264_Else>();
	

	_1d55c1a07_MatchCase(void) = default;

	inline bool operator==(_1d55c1a07_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d55c1a07_MatchCase _other) { return !this->operator==(_other); }


};
struct _1d55c2299_UseDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_selected = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_1d55c2299_UseDecl(void) = default;

	inline bool operator==(_1d55c2299_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1d55c2299_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55c2a6e_auto_expr(_1d55c271c_EnumItemDecl*);
struct _1d55c271c_EnumItemDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55c271c_EnumItemDecl(void) = default;

	inline bool operator==(_1d55c271c_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d55c271c_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55c37c8_default_typed(_1d55c3245_EnumDecl*);
struct _1d55c3245_EnumDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	

	_1d55c3245_EnumDecl(void) = default;

	inline bool operator==(_1d55c3245_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d55c3245_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1d55c3c4b_TypeEnumItemDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d55c3c4b_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1d55c3c4b_TypeEnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d55c3c4b_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1d55c3e49_TypeEnumDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	

	_1d55c3e49_TypeEnumDecl(void) = default;

	inline bool operator==(_1d55c3e49_TypeEnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d55c3e49_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1d55c4499_FieldDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d55a968d_TypeDecl> _field_kind = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d55adbae_Expr> _field_default = jule::Ptr<_1d55adbae_Expr>();
	

	_1d55c4499_FieldDecl(void) = default;

	inline bool operator==(_1d55c4499_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d55c4499_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1d55c4d07_StructDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d55c4499_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1d55c4499_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>();
	

	_1d55c4d07_StructDecl(void) = default;

	inline bool operator==(_1d55c4d07_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d55c4d07_StructDecl _other) { return !this->operator==(_other); }


};
struct _1d55c5412_TraitDecl {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>>();
	

	_1d55c5412_TraitDecl(void) = default;

	inline bool operator==(_1d55c5412_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1d55c5412_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d55c5d80_is_trait_impl(_1d55c5a1c_Impl*);
inline jule::Bool _1d55c60e4_is_struct_impl(_1d55c5a1c_Impl*);
struct _1d55c5a1c_Impl {
	jule::Ptr<_1ee538d51_Token> _field_end = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55a968d_TypeDecl> _field_base = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d55a968d_TypeDecl> _field_dest = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>>();
	jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>>();
	

	_1d55c5a1c_Impl(void) = default;

	inline bool operator==(_1d55c5a1c_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1d55c5a1c_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d561288e_Const> static__1d5669eac_new_i64(jule::I64);
inline jule::Ptr<_1d561288e_Const> static__1d566a0de_new_u64(jule::U64);
inline jule::Ptr<_1d561288e_Const> static__1d566a221_new_bool(jule::Bool);
inline jule::Ptr<_1d561288e_Const> static__1d566a452_new_str(jule::Str);
inline jule::Ptr<_1d561288e_Const> static__1d566a6e9_new_f64(jule::F64);
inline jule::Ptr<_1d561288e_Const> static__1d566a8e7_new_nil(void);
inline jule::I64 _1d566aee1_read_i64(_1d561288e_Const*);
inline jule::U64 _1d566b255_read_u64(_1d561288e_Const*);
inline jule::Bool _1d566b4b9_read_bool(_1d561288e_Const*);
inline jule::Str _1d566b72d_read_str(_1d561288e_Const*);
inline jule::F64 _1d566b992_read_f64(_1d561288e_Const*);
inline jule::I64 _1d566bc06_as_i64(_1d561288e_Const*);
inline jule::U64 _1d566be6a_as_u64(_1d561288e_Const*);
inline jule::F64 _1d566c1ce_as_f64(_1d561288e_Const*);
inline void _1d566c454_set_i64(_1d561288e_Const*, jule::I64);
inline void _1d566c6c9_set_u64(_1d561288e_Const*, jule::U64);
inline void _1d566c94e_set_bool(_1d561288e_Const*, jule::Bool);
inline void _1d566cbc4_set_str(_1d561288e_Const*, jule::Str);
inline void _1d566ce49_set_f64(_1d561288e_Const*, jule::F64);
inline void _1d566d125_set_nil(_1d561288e_Const*);
inline jule::Bool _1d566d389_is_i64(_1d561288e_Const*);
inline jule::Bool _1d566d5ed_is_u64(_1d561288e_Const*);
inline jule::Bool _1d566d862_is_bool(_1d561288e_Const*);
inline jule::Bool _1d566dac6_is_str(_1d561288e_Const*);
inline jule::Bool _1d566dd3a_is_f64(_1d561288e_Const*);
inline jule::Bool _1d566e09e_is_nil(_1d561288e_Const*);
inline jule::Bool _1d566e3ac_are_same_types(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d566e6ba_and(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d566e9c8_or(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d566ecd6_eq(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d56700e4_lt(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5670402_lt_eq(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5670710_gt(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5670a1d_gt_eq(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5670d2b_add(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5671139_sub(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5671447_mul(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5671755_div(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5671a63_mod(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5671d71_bitwise_and(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d567217e_bitwise_or(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d567248c_xor(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d567279a_lshift(_1d561288e_Const*, _1d561288e_Const);
inline jule::Bool _1d5672aa8_rshift(_1d561288e_Const*, _1d561288e_Const);
struct _1d561288e_Const {
	jule::Any _field_data = jule::Any();
	

	_1d561288e_Const(void) = default;

	inline jule::Bool operator==(_1d561288e_Const _other) { return _1d566ecd6_eq(this, _other); }

	inline bool operator!=(_1d561288e_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1d561288e_Const _other) { return _1d5670710_gt(this, _other); }

	inline jule::Bool operator>=(_1d561288e_Const _other) { return _1d5670a1d_gt_eq(this, _other); }

	inline jule::Bool operator<(_1d561288e_Const _other) { return _1d56700e4_lt(this, _other); }

	inline jule::Bool operator<=(_1d561288e_Const _other) { return _1d5670402_lt_eq(this, _other); }


};
struct _1d5c8e5e2_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1d5c8e5e2_FloatInfo(void) = default;

	inline bool operator==(_1d5c8e5e2_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1d5c8e5e2_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1d5b95086_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1d5b95086_DecimalSlice(void) = default;

	inline bool operator==(_1d5b95086_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1d5b95086_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1d61c0a34_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1d61c0a34_LeftCheat(void) = default;

	inline bool operator==(_1d61c0a34_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1d61c0a34_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d5e98400_set(_1d61c0d97_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1d5ed6a48_float_bits(_1d61c0d97_Decimal*, _1d5c8e5e2_FloatInfo&);
inline void _1d61c1084_assign(_1d61c0d97_Decimal*, jule::U64);
inline void _1d61c11b6_shift(_1d61c0d97_Decimal*, jule::I64);
inline void _1d61c12e8_round_down(_1d61c0d97_Decimal*, jule::I64);
inline void _1d61c142a_round_up(_1d61c0d97_Decimal*, jule::I64);
inline void _1d61c155c_round(_1d61c0d97_Decimal*, jule::I64);
inline jule::U64 _1d61c168e_rounded_integer(_1d61c0d97_Decimal*);
struct _1d61c0d97_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1d61c0d97_Decimal(void) = default;

	inline bool operator==(_1d61c0d97_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1d61c0d97_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d55a2532_FieldIns> _1d557aebc_instance(jule::Ptr<_1d558c385_Field>);
struct _1d558c385_Field {
	jule::Ptr<_1d5599dba_Struct> _field_owner = jule::Ptr<_1d5599dba_Struct>();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d632103b_TypeSymbol> _field_kind = jule::Ptr<_1d632103b_TypeSymbol>();
	jule::Ptr<_1d55adbae_Expr> _field_default = jule::Ptr<_1d55adbae_Expr>();
	

	_1d558c385_Field(void) = default;

	inline bool operator==(_1d558c385_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d558c385_Field _other) { return !this->operator==(_other); }


};
struct _1d559b7e5_Operators {
	jule::Ptr<_1d567d498_FnIns> _field_eq = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_gt = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_gt_eq = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_lt = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_lt_eq = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_shl = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_shr = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_add = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_sub = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_div = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_mul = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_mod = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_bit_and = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_bit_or = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_bit_xor = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_neg = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_pos = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_bit_not = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_add_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_sub_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_div_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_mul_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_mod_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_shl_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_shr_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_bit_or_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_bit_and_assign = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567d498_FnIns> _field_bit_xor_assign = jule::Ptr<_1d567d498_FnIns>();
	

	_1d559b7e5_Operators(void) = default;

	inline bool operator==(_1d559b7e5_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1d559b7e5_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d55c62d1_StructIns> _1d55820b1_instance(jule::Ptr<_1d5599dba_Struct>);
inline jule::Ptr<_1d55c62d1_StructIns> _1d5586329_append_instance(_1d5599dba_Struct*, jule::Ptr<_1d55c62d1_StructIns>&);
inline jule::Ptr<_1d567a7e7_Fn> _1d5587083_find_method(_1d5599dba_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1d6298ea3_Var> _1d55892d8_find_static(_1d5599dba_Struct*, jule::Str);
inline jule::Ptr<_1d558c385_Field> _1d558a2ea_find_field(_1d5599dba_Struct*, jule::Str);
inline jule::Bool _1d5589739_is_implements(_1d5599dba_Struct*, jule::Ptr<_1d59c3e1a_Trait>);
inline jule::Bool _1d558ba16_is_derives(_1d5599dba_Struct*, jule::Str);
inline jule::Bool _1d558ae22_is_uses(_1d5599dba_Struct*, jule::Ptr<_1d5599dba_Struct>);
inline jule::Bool _1d558ebc3_has_ref_accessible(_1d5599dba_Struct*);
struct _1d5599dba_Struct {
	jule::Ptr<_1d627c519_Sema> _field_sema = jule::Ptr<_1d627c519_Sema>();
	jule::Slice<jule::Ptr<_1d5599dba_Struct>> _field_depends = jule::Slice<jule::Ptr<_1d5599dba_Struct>>();
	jule::Slice<jule::Ptr<_1d5599dba_Struct>> _field_uses = jule::Slice<jule::Ptr<_1d5599dba_Struct>>();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d558c385_Field>> _field_fields = jule::Slice<jule::Ptr<_1d558c385_Field>>();
	jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1d567a7e7_Fn>>();
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_statics = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1d59c3e1a_Trait>> _field_implements = jule::Slice<jule::Ptr<_1d59c3e1a_Trait>>();
	jule::Slice<jule::Ptr<_1d55c62d1_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1d55c62d1_StructIns>>();
	

	_1d5599dba_Struct(void) = default;

	inline bool operator==(_1d5599dba_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1d5599dba_Struct _other) { return !this->operator==(_other); }


};
struct _1d55a2532_FieldIns {
	jule::Ptr<_1d558c385_Field> _field_decl = jule::Ptr<_1d558c385_Field>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d62e16b0_Data> _field_default = jule::Ptr<_1d62e16b0_Data>();
	

	_1d55a2532_FieldIns(void) = default;

	inline bool operator==(_1d55a2532_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d55a2532_FieldIns _other) { return !this->operator==(_other); }


};
struct _1d5654dba_OperandExprModel {
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1d5654dba_OperandExprModel(void) = default;

	inline bool operator==(_1d5654dba_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1d5654dba_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1d567337d_BinopExprModel {
	jule::Ptr<_1d5654dba_OperandExprModel> _field_left = jule::Ptr<_1d5654dba_OperandExprModel>();
	jule::Ptr<_1d5654dba_OperandExprModel> _field_right = jule::Ptr<_1d5654dba_OperandExprModel>();
	jule::Ptr<_1ee538d51_Token> _field_op = jule::Ptr<_1ee538d51_Token>();
	

	_1d567337d_BinopExprModel(void) = default;

	inline bool operator==(_1d567337d_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d567337d_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1d567356a_UnaryExprModel {
	jule::Ptr<_1d62e16b0_Data> _field_expr = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1ee538d51_Token> _field_op = jule::Ptr<_1ee538d51_Token>();
	

	_1d567356a_UnaryExprModel(void) = default;

	inline bool operator==(_1d567356a_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d567356a_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1d5673757_StructArgExprModel {
	jule::Ptr<_1d55a2532_FieldIns> _field_field = jule::Ptr<_1d55a2532_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1d5673757_StructArgExprModel(void) = default;

	inline bool operator==(_1d5673757_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d5673757_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1d5673944_StructLitExprModel {
	jule::Ptr<_1d55c62d1_StructIns> _field_strct = jule::Ptr<_1d55c62d1_StructIns>();
	jule::Slice<jule::Ptr<_1d5673757_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1d5673757_StructArgExprModel>>();
	

	_1d5673944_StructLitExprModel(void) = default;

	inline bool operator==(_1d5673944_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1d5673944_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1d5673b31_AllocStructLitExprModel {
	jule::Ptr<_1d5673944_StructLitExprModel> _field_lit = jule::Ptr<_1d5673944_StructLitExprModel>();
	

	_1d5673b31_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1d5673b31_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1d5673b31_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1d5673d1d_CastingExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_expr_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d5673d1d_CastingExprModel(void) = default;

	inline bool operator==(_1d5673d1d_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1d5673d1d_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1d567400a_FnCallExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d567d498_FnIns> _field_func = jule::Ptr<_1d567d498_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1d6255beb_Scope> _field_except = jule::Ptr<_1d6255beb_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1d567400a_FnCallExprModel(void) = default;

	inline bool operator==(_1d567400a_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1d567400a_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d56741e7_SliceExprModel {
	jule::Ptr<_1d631bdd3_TypeKind> _field_elem_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1d56741e7_SliceExprModel(void) = default;

	inline bool operator==(_1d56741e7_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1d56741e7_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1d56743d4_IndexingExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d62e16b0_Data> _field_expr = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1d62e16b0_Data> _field_index = jule::Ptr<_1d62e16b0_Data>();
	

	_1d56743d4_IndexingExprModel(void) = default;

	inline bool operator==(_1d56743d4_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1d56743d4_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1d56745c1_AnonFnExprModel {
	jule::Ptr<_1d567d498_FnIns> _field_func = jule::Ptr<_1d567d498_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1d56745c1_AnonFnExprModel(void) = default;

	inline bool operator==(_1d56745c1_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1d56745c1_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1d56747ad_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1d56747ad_KeyValPairExprModel(void) = default;

	inline bool operator==(_1d56747ad_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1d56747ad_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1d567499a_MapExprModel {
	jule::Ptr<_1d631bdd3_TypeKind> _field_key_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_val_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Slice<jule::Ptr<_1d56747ad_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1d56747ad_KeyValPairExprModel>>();
	

	_1d567499a_MapExprModel(void) = default;

	inline bool operator==(_1d567499a_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1d567499a_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1d5674b87_SlicingExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1d5674b87_SlicingExprModel(void) = default;

	inline bool operator==(_1d5674b87_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1d5674b87_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1d5674d74_TraitSubIdentExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1d567a7e7_Fn> _field_method = jule::Ptr<_1d567a7e7_Fn>();
	jule::Ptr<_1d59c3e1a_Trait> _field_trt = jule::Ptr<_1d59c3e1a_Trait>();
	

	_1d5674d74_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1d5674d74_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1d5674d74_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d5675292_StructSubIdentExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d62e16b0_Data> _field_expr = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_expr_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d567d498_FnIns> _field_method = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d55a2532_FieldIns> _field_field = jule::Ptr<_1d55a2532_FieldIns>();
	

	_1d5675292_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1d5675292_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1d5675292_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d567547e_StructStaticIdentExprModel {
	jule::Ptr<_1d55c62d1_StructIns> _field_structure = jule::Ptr<_1d55c62d1_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1d567d498_FnIns> _field_method = jule::Ptr<_1d567d498_FnIns>();
	

	_1d567547e_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1d567547e_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1d567547e_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d567566b_ArrayExprModel {
	jule::Ptr<_1d6327c46_Arr> _field_kind = jule::Ptr<_1d6327c46_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1d567566b_ArrayExprModel(void) = default;

	inline bool operator==(_1d567566b_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1d567566b_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1d5675858_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1d5675858_CommonIdentExprModel(void) = default;

	inline bool operator==(_1d5675858_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d5675858_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d5675a45_CommonSubIdentExprModel {
	jule::Ptr<_1d631bdd3_TypeKind> _field_expr_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1d5675a45_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1d5675a45_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d5675a45_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d5675c32_TupleExprModel {
	jule::Slice<jule::Ptr<_1d62e16b0_Data>> _field_datas = jule::Slice<jule::Ptr<_1d62e16b0_Data>>();
	

	_1d5675c32_TupleExprModel(void) = default;

	inline bool operator==(_1d5675c32_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1d5675c32_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1d5675e1e_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1d5675e1e_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1d5675e1e_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1d5675e1e_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d567610b_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1d567610b_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1d567610b_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1d567610b_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d56762e8_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1d56762e8_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1d56762e8_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d56762e8_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d56764d5_BuiltinNewCallExprModel {
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1d56764d5_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1d56764d5_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1d56764d5_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d56766c2_BuiltinPanicCallExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1d56766c2_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1d56766c2_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d56766c2_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d56768ae_BuiltinAssertCallExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1d56768ae_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1d56768ae_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1d56768ae_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d5676a9b_BuiltinMakeCallExprModel {
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1d5676a9b_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1d5676a9b_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1d5676a9b_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d5676c88_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1d5676c88_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1d5676c88_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1d5676c88_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d5676e75_BuiltinCopyCallExprModel {
	jule::Ptr<_1d62e16b0_Data> _field_dest = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1d62e16b0_Data> _field_src = jule::Ptr<_1d62e16b0_Data>();
	

	_1d5676e75_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1d5676e75_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1d5676e75_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d5677162_BuiltinErrorCallExprModel {
	jule::Ptr<_1d567d498_FnIns> _field_func = jule::Ptr<_1d567d498_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1d5677162_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1d5677162_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1d5677162_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d5675061_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1d5675061_SizeofExprModel(void) = default;

	inline bool operator==(_1d5675061_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d5675061_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1d56777c2_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1d56777c2_AlignofExprModel(void) = default;

	inline bool operator==(_1d56777c2_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d56777c2_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1d56779ae_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1d56779ae_RuneExprModel(void) = default;

	inline bool operator==(_1d56779ae_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1d56779ae_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1d5677b9b_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1d5677b9b_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1d5677b9b_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d5677b9b_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1d5677d88_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1d5677d88_BackendEmitExprModel(void) = default;

	inline bool operator==(_1d5677d88_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d5677d88_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1d5678075_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1d5678075_FreeExprModel(void) = default;

	inline bool operator==(_1d5678075_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d5678075_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1d5678817_RetType {
	jule::Ptr<_1d632103b_TypeSymbol> _field_kind = jule::Ptr<_1d632103b_TypeSymbol>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_idents = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	

	_1d5678817_RetType(void) = default;

	inline bool operator==(_1d5678817_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1d5678817_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d567c5c9_ParamIns> _1d5679373_instance(jule::Ptr<_1d5678eaa_Param>);
inline jule::Bool _1d56795d7_is_self(_1d5678eaa_Param*);
inline jule::Bool _1d567984b_is_ref(_1d5678eaa_Param*);
struct _1d5678eaa_Param {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1d632103b_TypeSymbol> _field_kind = jule::Ptr<_1d632103b_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1d5678eaa_Param(void) = default;

	inline bool operator==(_1d5678eaa_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d5678eaa_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d567ac59_is_void(_1d567a7e7_Fn*);
inline jule::Bool _1d567aebd_is_method(_1d567a7e7_Fn*);
inline jule::Bool _1d567b232_is_entry_point(_1d567a7e7_Fn*);
inline jule::Bool _1d567b496_is_init(_1d567a7e7_Fn*);
inline jule::Bool _1d567b70a_is_anon(_1d567a7e7_Fn*);
inline jule::Bool _1d567b96e_any_var(_1d567a7e7_Fn*);
inline jule::Ptr<_1d567d498_FnIns> _1d567bbd3_instance_force(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Ptr<_1d567d498_FnIns> _1d567be47_instance(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Ptr<_1d567d498_FnIns> _1d567c222_append_instance(_1d567a7e7_Fn*, jule::Ptr<_1d567d498_FnIns>&);
struct _1d567a7e7_Fn {
	jule::Ptr<_1d627c519_Sema> _field_sema = jule::Ptr<_1d627c519_Sema>();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>();
	jule::Ptr<_1d5678817_RetType> _field_result = jule::Ptr<_1d5678817_RetType>();
	jule::Slice<jule::Ptr<_1d5678eaa_Param>> _field_params = jule::Slice<jule::Ptr<_1d5678eaa_Param>>();
	jule::Ptr<_1d5599dba_Struct> _field_owner = jule::Ptr<_1d5599dba_Struct>();
	jule::Slice<jule::Ptr<_1d567d498_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1d567d498_FnIns>>();
	

	_1d567a7e7_Fn(void) = default;

	inline bool operator==(_1d567a7e7_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1d567a7e7_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1d567c9a3_to_str(_1d567c5c9_ParamIns*);
struct _1d567c5c9_ParamIns {
	jule::Ptr<_1d5678eaa_Param> _field_decl = jule::Ptr<_1d5678eaa_Param>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d567c5c9_ParamIns(void) = default;

	inline bool operator==(_1d567c5c9_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d567c5c9_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1d567d7c8_to_str(_1d567d498_FnIns*);
inline jule::Bool _1d567dad6_equals(jule::Ptr<_1d567d498_FnIns>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _1d567de7c_types(_1d567d498_FnIns*);
inline jule::Bool _1d567e1e1_is_builtin(_1d567d498_FnIns*);
inline jule::Bool _1d567e455_is_anon(_1d567d498_FnIns*);
inline jule::Bool _1d567e763_same(_1d567d498_FnIns*, jule::Ptr<_1d567d498_FnIns>);
inline jule::Str _1d567ea71_get_kind_str(_1d567d498_FnIns*, jule::Bool);
struct _1d567d498_FnIns {
	jule::Ptr<_1d55c62d1_StructIns> _field_owner = jule::Ptr<_1d55c62d1_StructIns>();
	jule::Ptr<_1d567a7e7_Fn> _field_decl = jule::Ptr<_1d567a7e7_Fn>();
	jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>>();
	jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_result = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	jule::Ptr<_1d5680c5e_ReferenceStack> _field_refers = jule::Ptr<_1d5680c5e_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1d567d498_FnIns(void) = default;

	inline bool operator==(_1d567d498_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1d567d498_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d5680c5e_ReferenceStack> static__1d568104a_new(void);
inline jule::I64 _1d56813d0_len(_1d5680c5e_ReferenceStack*);
inline jule::Any _1d56816dd_at(_1d5680c5e_ReferenceStack*, jule::I64);
inline void _1d5681963_push(_1d5680c5e_ReferenceStack*, jule::Any);
inline jule::Bool _1d8c41b24_exist(_1d5680c5e_ReferenceStack*, jule::Ptr<_1d567d498_FnIns>);
inline jule::Bool _1d8c56661_exist(_1d5680c5e_ReferenceStack*, jule::Ptr<_1d6298ea3_Var>);
inline jule::Bool _1d8cdb4e8_exist(_1d5680c5e_ReferenceStack*, jule::Ptr<_1d55c62d1_StructIns>);
inline jule::Bool _1d90730a9_exist(_1d5680c5e_ReferenceStack*, jule::Ptr<_1d59c3e1a_Trait>);
struct _1d5680c5e_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1d5680c5e_ReferenceStack(void) = default;

	inline bool operator==(_1d5680c5e_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1d5680c5e_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1d5682128_Pass {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_text = jule::Str();
	

	_1d5682128_Pass(void) = default;

	inline bool operator==(_1d5682128_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1d5682128_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d56865c2_SymbolBuilder> _1d5686a78_get_root(jule::Ptr<_1d56865c2_SymbolBuilder>);
inline void _1d5686e41_push_err(_1d56865c2_SymbolBuilder*, jule::Ptr<_1ee538d51_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1d5687309_push_err_text(_1d56865c2_SymbolBuilder*, jule::Ptr<_1ee538d51_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1d5687628_push_suggestion(_1d56865c2_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d5687a02_check_cpp_use_decl_path(_1d56865c2_SymbolBuilder*, jule::Ptr<_1d55c2299_UseDecl>&, jule::Str);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d5687d10_build_cpp_header_import(_1d56865c2_SymbolBuilder*, jule::Ptr<_1d55c2299_UseDecl>&);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d568812e_build_std_import(_1d56865c2_SymbolBuilder*, jule::Ptr<_1d55c2299_UseDecl>&);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d568843c_build_ident_import(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Ptr<_1d55c2299_UseDecl>&);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d568874a_build_import(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Ptr<_1d55c2299_UseDecl>&);
inline jule::Bool _1d5688a7a_check_duplicate_use_decl(_1d56865c2_SymbolBuilder*, jule::Ptr<_1d62743bd_ImportInfo>&);
inline void _1d5688daa_impl_import_selections(_1d56865c2_SymbolBuilder*, jule::Ptr<_1d62743bd_ImportInfo>&, jule::Ptr<_1d55c2299_UseDecl>&);
inline jule::Str _1d56891b8_get_as_link_path(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Str);
inline void _1d5689581_push_cycle_error(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Ptr<_1d56865c2_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1d5689949_push_cross_cycle_error(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Ptr<_1d56865c2_SymbolBuilder>&, jule::Ptr<_1d62743bd_ImportInfo>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Bool _1d5689d01_check_import_cycles(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Ptr<_1d62743bd_ImportInfo>, jule::Ptr<_1d55c2299_UseDecl>&);
inline void _1d568a1db_check_package_accessibility(_1d56865c2_SymbolBuilder*, jule::Ptr<_1d55c2299_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1d568a5a4_import_package(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Ptr<_1d62743bd_ImportInfo>&, jule::Ptr<_1d55c2299_UseDecl>&);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d568a8b2_import_use_decl(jule::Ptr<_1d56865c2_SymbolBuilder>, jule::Ptr<_1d55c2299_UseDecl>&);
inline void _1d568aa8d_import_use_decls(jule::Ptr<_1d56865c2_SymbolBuilder>);
inline void _1d568ad13_append_node(_1d56865c2_SymbolBuilder*, _1d557588a_Node&);
inline void _1d568aede_append_nodes(_1d56865c2_SymbolBuilder*);
inline void _1d568b264_push_directive_pass(_1d56865c2_SymbolBuilder*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d568b440_append_top_directives(_1d56865c2_SymbolBuilder*);
inline void _1d568b61b_build(jule::Ptr<_1d56865c2_SymbolBuilder>);
struct _1d56865c2_SymbolBuilder {
	jule::Ptr<_1d56865c2_SymbolBuilder> _field_owner = jule::Ptr<_1d56865c2_SymbolBuilder>();
	jule::Trait<_1d6271ac4_Importer> _field_importer = jule::Trait<_1d6271ac4_Importer>();
	jule::Slice<_21868a483_Log> _field_errors = jule::Slice<_21868a483_Log>();
	jule::Ptr<_1d5574b0e_Ast> _field_ast = jule::Ptr<_1d5574b0e_Ast>();
	jule::Ptr<_1d62db952_SymbolTable> _field_table = jule::Ptr<_1d62db952_SymbolTable>();
	

	_1d56865c2_SymbolBuilder(void) = default;

	inline bool operator==(_1d56865c2_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1d56865c2_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1d56dc804_to_str(_1d59c3e1a_Trait*);
inline jule::Bool _1d56dcc55_equals(jule::Ptr<_1d59c3e1a_Trait>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Bool _1d570be61_is_builtin(_1d59c3e1a_Trait*);
inline jule::Ptr<_1d567a7e7_Fn> _1d5724187_find_method(_1d59c3e1a_Trait*, jule::Str);
struct _1d59c3e1a_Trait {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1d567a7e7_Fn>>();
	jule::Slice<jule::Ptr<_1d5599dba_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1d5599dba_Struct>>();
	

	_1d59c3e1a_Trait(void) = default;

	inline bool operator==(_1d59c3e1a_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1d59c3e1a_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d573819b_auto_expr(_1d581b2c3_EnumItem*);
struct _1d581b2c3_EnumItem {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d62e2738_Value> _field_value = jule::Ptr<_1d62e2738_Value>();
	

	_1d581b2c3_EnumItem(void) = default;

	inline bool operator==(_1d581b2c3_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1d581b2c3_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1d5779561_to_str(_1d5692820_Enum*);
inline jule::Bool _1d5781c83_equals(jule::Ptr<_1d5692820_Enum>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Ptr<_1d581b2c3_EnumItem> _1d580e33d_find_item(_1d5692820_Enum*, jule::Str);
struct _1d5692820_Enum {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d632103b_TypeSymbol> _field_kind = jule::Ptr<_1d632103b_TypeSymbol>();
	jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>>();
	

	_1d5692820_Enum(void) = default;

	inline bool operator==(_1d5692820_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1d5692820_Enum _other) { return !this->operator==(_other); }


};
struct _1d580d749_TypeEnumItem {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d632103b_TypeSymbol> _field_kind = jule::Ptr<_1d632103b_TypeSymbol>();
	

	_1d580d749_TypeEnumItem(void) = default;

	inline bool operator==(_1d580d749_TypeEnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d580d749_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1d5904301_to_str(_1d5a788b5_TypeEnum*);
inline jule::Bool _1d5923562_equals(jule::Ptr<_1d5a788b5_TypeEnum>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Ptr<_1d580d749_TypeEnumItem> _1d59c4756_find_item(_1d5a788b5_TypeEnum*, jule::Str);
struct _1d5a788b5_TypeEnum {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>> _field_items = jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>>();
	

	_1d5a788b5_TypeEnum(void) = default;

	inline bool operator==(_1d5a788b5_TypeEnum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1d5a788b5_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1d627c519_Sema>&,jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>&)> _1d61d9542_ready_fn(jule::Ptr<_1d61c75c9_ConstraintChecker>);
inline jule::Bool _1d62052a5_ready_fi(jule::Ptr<_1d61c75c9_ConstraintChecker>);
inline jule::Bool _1d62203ad_ready_si(jule::Ptr<_1d61c75c9_ConstraintChecker>);
inline jule::Bool _1d6222206_ready(jule::Ptr<_1d61c75c9_ConstraintChecker>);
inline jule::Bool _1d62233e4_check(jule::Ptr<_1d61c75c9_ConstraintChecker>);
struct _1d61c75c9_ConstraintChecker {
	jule::Ptr<_1d627c519_Sema> _field_s = jule::Ptr<_1d627c519_Sema>();
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _field_generics_d = jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>>();
	jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _field_generics_a = jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>();
	jule::Ptr<_1d567d498_FnIns> _field_fi = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d55c62d1_StructIns> _field_si = jule::Ptr<_1d55c62d1_StructIns>();
	jule::Ptr<_1ee538d51_Token> _field_et = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1d61c75c9_ConstraintChecker(void) = default;

	inline bool operator==(_1d61c75c9_ConstraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_generics_d == _other._field_generics_d &&
			this->_field_generics == _other._field_generics &&
			this->_field_generics_a == _other._field_generics_a &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1d61c75c9_ConstraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d6227173_is_trait_impl(_1d62470d8_Impl*);
inline jule::Bool _1d622eb70_is_struct_impl(_1d62470d8_Impl*);
struct _1d62470d8_Impl {
	jule::Ptr<_1d55a968d_TypeDecl> _field_base = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d55a968d_TypeDecl> _field_dest = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1d567a7e7_Fn>>();
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_statics = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	

	_1d62470d8_Impl(void) = default;

	inline bool operator==(_1d62470d8_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1d62470d8_Impl _other) { return !this->operator==(_other); }


};
struct _1d6255beb_Scope {
	jule::Ptr<_1d6255beb_Scope> _field_parent = jule::Ptr<_1d6255beb_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1d6255beb_Scope(void) = default;

	inline bool operator==(_1d6255beb_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1d6255beb_Scope _other) { return !this->operator==(_other); }


};
struct _1d6255dd8_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	

	_1d6255dd8_If(void) = default;

	inline bool operator==(_1d6255dd8_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d6255dd8_If _other) { return !this->operator==(_other); }


};
struct _1d62560c5_Else {
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	

	_1d62560c5_Else(void) = default;

	inline bool operator==(_1d62560c5_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d62560c5_Else _other) { return !this->operator==(_other); }


};
struct _1d625646b_Conditional {
	jule::Slice<jule::Ptr<_1d6255dd8_If>> _field_elifs = jule::Slice<jule::Ptr<_1d6255dd8_If>>();
	jule::Ptr<_1d62560c5_Else> _field_default = jule::Ptr<_1d62560c5_Else>();
	

	_1d625646b_Conditional(void) = default;

	inline bool operator==(_1d625646b_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d625646b_Conditional _other) { return !this->operator==(_other); }


};
struct _1d6256757_InfIter {
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	

	_1d6256757_InfIter(void) = default;

	inline bool operator==(_1d6256757_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d6256757_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d6257071_is_while_next(_1d6256bca_WhileIter*);
struct _1d6256bca_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	

	_1d6256bca_WhileIter(void) = default;

	inline bool operator==(_1d6256bca_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d6256bca_WhileIter _other) { return !this->operator==(_other); }


};
struct _1d62575b0_RangeIter {
	jule::Ptr<_1d62e16b0_Data> _field_expr = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	jule::Ptr<_1d6298ea3_Var> _field_key_a = jule::Ptr<_1d6298ea3_Var>();
	jule::Ptr<_1d6298ea3_Var> _field_key_b = jule::Ptr<_1d6298ea3_Var>();
	

	_1d62575b0_RangeIter(void) = default;

	inline bool operator==(_1d62575b0_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1d62575b0_RangeIter _other) { return !this->operator==(_other); }


};
struct _1d62579ab_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();
	

	_1d62579ab_ContSt(void) = default;

	inline bool operator==(_1d62579ab_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1d62579ab_ContSt _other) { return !this->operator==(_other); }


};
struct _1d6257d63_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();
	

	_1d6257d63_BreakSt(void) = default;

	inline bool operator==(_1d6257d63_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1d6257d63_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d625814e_Label {
	jule::Str _field_ident = jule::Str();
	

	_1d625814e_Label(void) = default;

	inline bool operator==(_1d625814e_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d625814e_Label _other) { return !this->operator==(_other); }


};
struct _1d625843a_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1d625843a_GotoSt(void) = default;

	inline bool operator==(_1d625843a_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d625843a_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d62587e2_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1d62587e2_Postfix(void) = default;

	inline bool operator==(_1d62587e2_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d62587e2_Postfix _other) { return !this->operator==(_other); }


};
struct _1d6258c65_Assign {
	jule::Ptr<_1d5654dba_OperandExprModel> _field_l = jule::Ptr<_1d5654dba_OperandExprModel>();
	jule::Ptr<_1d5654dba_OperandExprModel> _field_r = jule::Ptr<_1d5654dba_OperandExprModel>();
	jule::Ptr<_1ee538d51_Token> _field_op = jule::Ptr<_1ee538d51_Token>();
	

	_1d6258c65_Assign(void) = default;

	inline bool operator==(_1d6258c65_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d6258c65_Assign _other) { return !this->operator==(_other); }


};
struct _1d625911c_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1d625911c_MultiAssign(void) = default;

	inline bool operator==(_1d625911c_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1d625911c_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d6259b67_is_generic_type_match(_1d625965b_Match*);
struct _1d625965b_Match {
	jule::Ptr<_1d62e16b0_Data> _field_expr = jule::Ptr<_1d62e16b0_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1d625a1a6_Case>> _field_cases = jule::Slice<jule::Ptr<_1d625a1a6_Case>>();
	jule::Ptr<_1d625a1a6_Case> _field_default = jule::Ptr<_1d625a1a6_Case>();
	

	_1d625965b_Match(void) = default;

	inline bool operator==(_1d625965b_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d625965b_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d625a470_is_default(_1d625a1a6_Case*);
struct _1d625a1a6_Case {
	jule::Ptr<_1d625965b_Match> _field_owner = jule::Ptr<_1d625965b_Match>();
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	jule::Slice<jule::Ptr<_1d62e16b0_Data>> _field_exprs = jule::Slice<jule::Ptr<_1d62e16b0_Data>>();
	jule::Ptr<_1d625a1a6_Case> _field_next = jule::Ptr<_1d625a1a6_Case>();
	

	_1d625a1a6_Case(void) = default;

	inline bool operator==(_1d625a1a6_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1d625a1a6_Case _other) { return !this->operator==(_other); }


};
struct _1d625a75b_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();
	

	_1d625a75b_FallSt(void) = default;

	inline bool operator==(_1d625a75b_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1d625a75b_FallSt _other) { return !this->operator==(_other); }


};
struct _1d625abce_RetSt {
	jule::Ptr<_1d567d498_FnIns> _field_func = jule::Ptr<_1d567d498_FnIns>();
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_vars = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1d625abce_RetSt(void) = default;

	inline bool operator==(_1d625abce_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d625abce_RetSt _other) { return !this->operator==(_other); }


};
struct _1d625b2d9_ScopeLabel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d625814e_Label> _field_label = jule::Ptr<_1d625814e_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1d625c571_ScopeChecker> _field_scope = jule::Ptr<_1d625c571_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1d625b2d9_ScopeLabel(void) = default;

	inline bool operator==(_1d625b2d9_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1d625b2d9_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1d625b75c_ScopeGoto {
	jule::Ptr<_1d55b759c_GotoSt> _field_gt = jule::Ptr<_1d55b759c_GotoSt>();
	jule::Ptr<_1d625c571_ScopeChecker> _field_scope = jule::Ptr<_1d625c571_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1d625b75c_ScopeGoto(void) = default;

	inline bool operator==(_1d625b75c_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1d625b75c_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d62743bd_ImportInfo> _1d625c9c2_find_package(_1d625c571_ScopeChecker*, jule::Str);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d625ccd0_select_package(_1d625c571_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>);
inline jule::Ptr<_1d6298ea3_Var> _1d625d187_find_var(_1d625c571_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d625d53e_find_type_alias(_1d625c571_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d5599dba_Struct> _1d625d8e6_find_struct(_1d625c571_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d567a7e7_Fn> _1d625dc9d_find_fn(_1d625c571_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d59c3e1a_Trait> _1d625e0ab_find_trait(_1d625c571_ScopeChecker*, jule::Str);
inline jule::Ptr<_1d5692820_Enum> _1d625e3b9_find_enum(_1d625c571_ScopeChecker*, jule::Str);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d625e6c7_find_type_enum(_1d625c571_ScopeChecker*, jule::Str);
inline jule::Bool _1d625ea07_is_unsafe(jule::Ptr<_1d625c571_ScopeChecker>);
inline jule::Bool _1d625ec6b_is_root(_1d625c571_ScopeChecker*);
inline void _1d625ee47_stop(_1d625c571_ScopeChecker*);
inline jule::Bool _1d62601ab_stopped(_1d625c571_ScopeChecker*);
inline jule::Bool _1d6260420_is_deferred(jule::Ptr<_1d625c571_ScopeChecker>);
inline jule::Ptr<_1d625c571_ScopeChecker> _1d6260684_get_root(jule::Ptr<_1d625c571_ScopeChecker>);
inline jule::Ptr<_1d625c571_ScopeChecker> _1d62608e8_get_hard_root(jule::Ptr<_1d625c571_ScopeChecker>);
inline jule::Ptr<_1d625814e_Label> _1d6260c06_find_label(_1d625c571_ScopeChecker*, jule::Str);
inline jule::Ptr<_1d625b2d9_ScopeLabel> _1d6261014_find_label_scope(jule::Ptr<_1d625c571_ScopeChecker>, jule::Str);
inline jule::Ptr<_1d625b2d9_ScopeLabel> _1d6261322_find_label_all(_1d625c571_ScopeChecker*, jule::Str);
inline jule::Bool _1d62616c9_is_duplicated_ident(_1d625c571_ScopeChecker*, jule::Uintptr, jule::Str);
inline void _1d626194e_check_var_decl(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55bc54c_VarDecl>);
inline void _1d6261bc4_check_type_alias_decl(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c0dad_TypeAliasDecl>);
inline jule::Ptr<_1d6255beb_Scope> _1d6261e38_get_child(_1d625c571_ScopeChecker*);
inline void _1d6262301_check_child_ssc(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b9a77_ScopeTree>&, jule::Ptr<_1d6255beb_Scope>&, jule::Ptr<_1d625c571_ScopeChecker>&);
inline jule::Ptr<_1d6255beb_Scope> _1d62626a8_check_child_sc(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b9a77_ScopeTree>&, jule::Ptr<_1d625c571_ScopeChecker>&);
inline jule::Ptr<_1d6255beb_Scope> _1d62629b6_check_child(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b9a77_ScopeTree>&);
inline void _1d6262c3b_check_anon_scope(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b9a77_ScopeTree>);
inline void _1d626305a_process_error_call(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>&, jule::Ptr<_1ee538d51_Token>);
inline void _1d62632d0_check_expr(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55adbae_Expr>);
inline void _1d6263555_check_co_expr(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b07a4_CoExpr>);
inline jule::Ptr<_1d6255dd8_If> _1d6263863_check_if(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55bedac_If>);
inline jule::Ptr<_1d62560c5_Else> _1d6263b71_check_else(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c0264_Else>);
inline void _1d6263de6_check_conditional(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c06d7_Conditional>);
inline void _1d6264358_check_iter_scope_ssc(jule::Ptr<_1d625c571_ScopeChecker>, jule::Uintptr, jule::Ptr<_1d55b9a77_ScopeTree>, jule::Ptr<_1d6255beb_Scope>&, jule::Ptr<_1d625c571_ScopeChecker>);
inline jule::Ptr<_1d6255beb_Scope> _1d62647a9_check_iter_scope_sc(jule::Ptr<_1d625c571_ScopeChecker>, jule::Uintptr, jule::Ptr<_1d55b9a77_ScopeTree>, jule::Ptr<_1d625c571_ScopeChecker>);
inline jule::Ptr<_1d6255beb_Scope> _1d6264b61_check_iter_scope(jule::Ptr<_1d625c571_ScopeChecker>, jule::Uintptr, jule::Ptr<_1d55b9a77_ScopeTree>&);
inline void _1d6264dd6_check_inf_iter(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55bd064_Iter>&);
inline void _1d626515b_check_while_iter(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55bd064_Iter>&);
inline void _1d62653d1_check_range_iter(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55bd064_Iter>&);
inline void _1d6265656_check_iter(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55bd064_Iter>);
inline jule::Bool _1d6265964_check_valid_cont_label(jule::Ptr<_1d625c571_ScopeChecker>, jule::Uintptr);
inline jule::Bool _1d6265c94_check_valid_break_label(jule::Ptr<_1d625c571_ScopeChecker>, jule::Uintptr);
inline jule::Ptr<_1d62579ab_ContSt> _1d62660b3_check_cont_valid_scope(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55be939_ContSt>);
inline void _1d6266338_check_cont(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55be939_ContSt>);
inline void _1d62665ad_check_label(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b71e5_LabelSt>);
inline void _1d6266833_push_goto(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b759c_GotoSt>);
inline void _1d6266aa8_check_postfix(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b84d2_AssignSt>);
inline jule::Bool _1d6266db6_is_new_assign_ident(_1d625c571_ScopeChecker*, jule::Str);
inline jule::Bool _1d6267339_check_structure_assign_op(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1d55b84d2_AssignSt>&, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d62675c0_check_single_assign(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b84d2_AssignSt>&);
inline void _1d6267b0e___process_end_part_of_multi_assign(_1d625c571_ScopeChecker*, jule::Ptr<_1d625911c_MultiAssign>, jule::Ptr<_1d55b84d2_AssignSt>, jule::Ptr<_1d55b7e93_AssignLeft>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1d62e16b0_Data>);
inline void _1d6267d84_check_ret_multi_assign(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b84d2_AssignSt>&);
inline void _1d6268109_check_multi_assign(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b84d2_AssignSt>&);
inline void _1d626837e_check_assign_st(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b84d2_AssignSt>);
inline jule::Ptr<_1d6255beb_Scope> _1d6268736_check_case_scope(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d625a1a6_Case>&, jule::Ptr<_1d55b9a77_ScopeTree>&);
inline jule::Ptr<_1d625a1a6_Case> _1d6268c31_check_case(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d625965b_Match>, jule::I64, jule::Ptr<_1d55c1331_Case>, jule::Ptr<_1d62e16b0_Data>);
inline void _1d62690e9_check_cases(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c1a07_MatchCase>&, jule::Ptr<_1d625965b_Match>, jule::Ptr<_1d62e16b0_Data>);
inline jule::Ptr<_1d625a1a6_Case> _1d62694a1_check_default(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d625965b_Match>, jule::Ptr<_1d55c0264_Else>);
inline void _1d6269726_check_comptime_panic(_1d625c571_ScopeChecker*, jule::Ptr<_1d6255beb_Scope>&);
inline void _1d6269a45_push_type_match(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d625965b_Match>, jule::Ptr<_1d55c1a07_MatchCase>&);
inline void _1d6269cba_check_type_match(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c1a07_MatchCase>&);
inline void _1d626a040_check_common_match(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c1a07_MatchCase>&);
inline void _1d626a2b5_check_match(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55c1a07_MatchCase>);
inline void _1d626a53a_check_fall(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b7888_FallSt>);
inline jule::Ptr<_1d6257d63_BreakSt> _1d626a848_check_break_with_label(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55be582_BreakSt>);
inline jule::Ptr<_1d6257d63_BreakSt> _1d626ab56_check_plain_break(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55be582_BreakSt>);
inline void _1d626adcb_check_break(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55be582_BreakSt>);
inline void _1d626b151_check_ret(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55bc904_RetSt>);
inline void _1d626b3c6_check_use_expr(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55ae550_UseExpr>);
inline void _1d626b64b_check_node(jule::Ptr<_1d625c571_ScopeChecker>, jule::Any&);
inline void _1d626b827_check_result(jule::Ptr<_1d625c571_ScopeChecker>);
inline void _1d626ba03_check_tree(jule::Ptr<_1d625c571_ScopeChecker>);
inline void _1d626bd22_check_goto(_1d625c571_ScopeChecker*, jule::Ptr<_1d625b75c_ScopeGoto>&, jule::Ptr<_1d625b2d9_ScopeLabel>&);
inline void _1d626beed_check_gotos(_1d625c571_ScopeChecker*);
inline void _1d626c1c9_check_labels(_1d625c571_ScopeChecker*);
inline void _1d626c3a5_check_vars(_1d625c571_ScopeChecker*);
inline void _1d626c581_check_aliases(_1d625c571_ScopeChecker*);
inline void _1d626c8a0_check(jule::Ptr<_1d625c571_ScopeChecker>, jule::Ptr<_1d55b9a77_ScopeTree>&, jule::Ptr<_1d6255beb_Scope>&);
inline jule::Ptr<_1d625c571_ScopeChecker> _1d626cb14_new_child_checker(jule::Ptr<_1d625c571_ScopeChecker>);
struct _1d625c571_ScopeChecker {
	jule::Ptr<_1ee538d51_Token> _field_called_from = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d627c519_Sema> _field_s = jule::Ptr<_1d627c519_Sema>();
	jule::Ptr<_1d567d498_FnIns> _field_owner = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d625c571_ScopeChecker> _field_parent = jule::Ptr<_1d625c571_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1d62db952_SymbolTable> _field_table = jule::Ptr<_1d62db952_SymbolTable>();
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_tree = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Ptr<_1d567d498_FnIns> _field_result = jule::Ptr<_1d567d498_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1d625b2d9_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1d625b2d9_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1d625b75c_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1d625b75c_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1d625c571_ScopeChecker(void) = default;

	inline bool operator==(_1d625c571_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d625c571_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1d626db04_check_cdef(_1d626d6b4_DirectiveChecker*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d626dd79_check_typedef(_1d626d6b4_DirectiveChecker*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d626e0ee_check_derive(_1d626d6b4_DirectiveChecker*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d626e374_check_namespace(_1d626d6b4_DirectiveChecker*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d626e5e9_check_deprecated(_1d626d6b4_DirectiveChecker*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d626e86e_check_test(_1d626d6b4_DirectiveChecker*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d626eae4_check_directive(_1d626d6b4_DirectiveChecker*, jule::Ptr<_1d5575c86_Directive>&);
inline void _1d626ecc0_check(_1d626d6b4_DirectiveChecker*);
struct _1d626d6b4_DirectiveChecker {
	jule::Ptr<_1d627c519_Sema> _field_s = jule::Ptr<_1d627c519_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1d5575c86_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1d5575c86_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1d626d6b4_DirectiveChecker(void) = default;

	inline bool operator==(_1d626d6b4_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1d626d6b4_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d62743bd_ImportInfo> _1d62748da_find_package(_1d62743bd_ImportInfo*, jule::Str);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6274be8_select_package(_1d62743bd_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>);
inline jule::Ptr<_1d6298ea3_Var> _1d62750a0_find_var(_1d62743bd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d6275457_find_type_alias(_1d62743bd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d5599dba_Struct> _1d627580e_find_struct(_1d62743bd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d567a7e7_Fn> _1d6275bb6_find_fn(_1d62743bd_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d59c3e1a_Trait> _1d6275ec4_find_trait(_1d62743bd_ImportInfo*, jule::Str);
inline jule::Ptr<_1d5692820_Enum> _1d62762d2_find_enum(_1d62743bd_ImportInfo*, jule::Str);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d62765e0_find_type_enum(_1d62743bd_ImportInfo*, jule::Str);
inline jule::Bool _1d6276986_is_lookupable(_1d62743bd_ImportInfo*, jule::Str);
inline jule::Bool _1d6276c94_exist_ident(_1d62743bd_ImportInfo*, jule::Str);
inline jule::Bool _1d627702a_is_accessible_via_selection(_1d62743bd_ImportInfo*);
struct _1d62743bd_ImportInfo {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_selected = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Ptr<_1d6277327_Package> _field_package = jule::Ptr<_1d6277327_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_1d62743bd_ImportInfo(void) = default;

	inline bool operator==(_1d62743bd_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1d62743bd_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6277800_find_package(_1d6277327_Package*, jule::Str);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6277b0d_select_package(_1d6277327_Package*, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>);
inline jule::Ptr<_1d6298ea3_Var> _1d6277eb5_find_var(_1d6277327_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d627836c_find_type_alias(_1d6277327_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d5599dba_Struct> _1d6278724_find_struct(_1d6277327_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d567a7e7_Fn> _1d6278acb_find_fn(_1d6277327_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d59c3e1a_Trait> _1d6278dd9_find_trait(_1d6277327_Package*, jule::Str);
inline jule::Ptr<_1d5692820_Enum> _1d62791e7_find_enum(_1d6277327_Package*, jule::Str);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d6279505_find_type_enum(_1d6277327_Package*, jule::Str);
struct _1d6277327_Package {
	jule::Slice<jule::Ptr<_1d62db952_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>();
	

	_1d6277327_Package(void) = default;

	inline bool operator==(_1d6277327_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1d6277327_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d62743bd_ImportInfo> _1d627ca36_find_package(_1d627c519_Sema*, jule::Str);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d627cd44_select_package(_1d627c519_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>);
inline jule::Ptr<_1d6298ea3_Var> _1d627d1eb_find_var(_1d627c519_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d627d5a3_find_type_alias(_1d627c519_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d5599dba_Struct> _1d627d95a_find_struct(_1d627c519_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d567a7e7_Fn> _1d627dd12_find_fn(_1d627c519_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d59c3e1a_Trait> _1d627e120_find_trait(_1d627c519_Sema*, jule::Str);
inline jule::Ptr<_1d5692820_Enum> _1d627e42d_find_enum(_1d627c519_Sema*, jule::Str);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d627e73b_find_type_enum(_1d627c519_Sema*, jule::Str);
inline jule::Bool _1d627ea8d_is_flag(_1d627c519_Sema*, jule::I64);
inline void _1d627ed13_set_current_file(_1d627c519_Sema*, jule::Ptr<_1d62db952_SymbolTable>);
inline void _1d62801cb_push_err(_1d627c519_Sema*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d62804ea_push_suggestion(_1d627c519_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d62808a2_is_accessible_define(_1d627c519_Sema*, jule::Bool, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d6280d03_is_duplicated_ident(_1d627c519_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1d6281122_check_directives(jule::Ptr<_1d627c519_Sema>, jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Any);
inline jule::Bool _1d6281573_check_generic_quantity(_1d627c519_Sema*, jule::I64, jule::I64, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d628194c_is_duplicated_import_selection(_1d627c519_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1d6281d15_get_import_def(_1d627c519_Sema*, jule::Str, jule::Ptr<_1d62743bd_ImportInfo>&);
inline jule::Bool _1d6282145_check_import_selections(_1d627c519_Sema*, jule::Ptr<_1d62743bd_ImportInfo>&);
inline jule::Bool _1d6282486_is_use_alias_duplication(_1d627c519_Sema*, jule::Ptr<_1d62743bd_ImportInfo>&);
inline jule::Bool _1d62827a5_check_import(_1d627c519_Sema*, jule::Ptr<_1d62743bd_ImportInfo>&);
inline void _1d6282981_check_imports(_1d627c519_Sema*);
inline void _1d6282b5c_impl_file_impls(jule::Ptr<_1d627c519_Sema>);
inline void _1d6282d38_impl_impls(jule::Ptr<_1d627c519_Sema>);
inline void _1d6283014_check_enums(jule::Ptr<_1d627c519_Sema>);
inline jule::Ptr<_1d631bdd3_TypeKind> _1d628350e_build_type_with_refers(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55a968d_TypeDecl>&, jule::Trait<_1d633797b_Lookup>, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>, jule::Ptr<_1d63295e9_Referencer>);
inline jule::Bool _1d6283a09_check_type_with_refers(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d632103b_TypeSymbol>&, jule::Trait<_1d633797b_Lookup>, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>, jule::Ptr<_1d63295e9_Referencer>);
inline jule::Ptr<_1d61c75c9_ConstraintChecker> _1d6283c6d_constraint_checker(jule::Ptr<_1d627c519_Sema>);
inline jule::Bool _1d6284125_check_type(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d632103b_TypeSymbol>&, jule::Trait<_1d633797b_Lookup>);
inline jule::Ptr<_1d631bdd3_TypeKind> _1d6284598_build_type_with_generics(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55a968d_TypeDecl>&, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>, jule::Ptr<_1d5680c5e_ReferenceStack>);
inline jule::Ptr<_1d631bdd3_TypeKind> _1d62848b7_build_type(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55a968d_TypeDecl>&);
inline jule::Ptr<_1d631bdd3_TypeKind> _1d6284bc5_select_type(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55a968d_TypeDecl>&);
inline jule::Ptr<_1d62e322d_Eval> _1d6285126_evalpd(jule::Ptr<_1d627c519_Sema>, jule::Trait<_1d633797b_Lookup>, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d6298ea3_Var>);
inline jule::Ptr<_1d62e322d_Eval> _1d62854cd_evalp(jule::Ptr<_1d627c519_Sema>, jule::Trait<_1d633797b_Lookup>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Ptr<_1d62e322d_Eval> _1d62857db_eval(jule::Ptr<_1d627c519_Sema>, jule::Trait<_1d633797b_Lookup>);
inline jule::Bool _1d6285cd6_check_assign_type(jule::Ptr<_1d627c519_Sema>, jule::Bool, jule::Ptr<_1d631bdd3_TypeKind>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d6286259_check_type_compatibility(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d631bdd3_TypeKind>&, jule::Ptr<_1d631bdd3_TypeKind>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Ptr<_1d631bdd3_TypeKind> _1d6286644_build_non_generic_type_kind(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55a968d_TypeDecl>&, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>&);
inline void _1d62868ec_build_fn_non_generic_type_kinds(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567d498_FnIns>&);
inline jule::Ptr<_1d567d498_FnIns> _1d6286c3d_get_trait_check_fn_kind(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567a7e7_Fn>&);
inline jule::Bool _1d62871a0_check_constraints_fn(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567d498_FnIns>&, jule::Ptr<_1ee538d51_Token>&, jule::Ptr<_1d567d498_FnIns>);
inline jule::Bool _1d6287623_check_constraints_struct(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1ee538d51_Token>&, jule::Ptr<_1d55c62d1_StructIns>);
inline jule::Bool _1d62879db_fn_environment(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567d498_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1d627c519_Sema>&,jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>&)>);
inline jule::Bool _1d6287ce9_reload_fn_ins_types(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567d498_FnIns>);
inline jule::Bool _1d628827d_check_ref_validity_for_init_expr(jule::Ptr<_1d627c519_Sema>, jule::Bool, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Bool _1d6288877_check_validity_for_init_expr(jule::Ptr<_1d627c519_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1d631bdd3_TypeKind>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Bool _1d6288c2e_check_type_alias_decl_kind(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d631b1e0_TypeAlias>&, jule::Trait<_1d633797b_Lookup>);
inline void _1d628905e_check_type_alias_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d631b1e0_TypeAlias>&, jule::Trait<_1d633797b_Lookup>);
inline void _1d6289306_check_type_alias_decl_dup(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d631b1e0_TypeAlias>&);
inline jule::Bool _1d628957b_check_type_alias_decls(jule::Ptr<_1d627c519_Sema>);
inline void _1d895398a_check_enum_items_dup(_1d627c519_Sema*, jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>>);
inline void _1d895e369_check_enum_items_dup(_1d627c519_Sema*, jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>>);
inline void _1d6289a76_check_enum_items_str(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5692820_Enum>&);
inline void _1d6289ceb_check_enum_items_int(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5692820_Enum>&);
inline void _1d628a071_check_enum_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5692820_Enum>&);
inline void _1d628a2e6_check_type_enum_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5a788b5_TypeEnum>&);
inline jule::Bool _1d628a55a_check_enum_decls(jule::Ptr<_1d627c519_Sema>);
inline jule::Bool _1d628a7be_check_type_enum_decls(jule::Ptr<_1d627c519_Sema>);
inline jule::Bool _1d628aacc_check_decl_generics(_1d627c519_Sema*, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>&);
inline jule::Bool _1d628ae0c_check_fn_decl_params_dup(_1d627c519_Sema*, jule::Ptr<_1d567a7e7_Fn>&);
inline jule::Bool _1d628b24d_check_fn_decl_result_dup(_1d627c519_Sema*, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d628b506_check_fn_decl_prototype(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d628b7ae_check_trait_decl_method(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d628ba67_check_trait_decl_methods(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d59c3e1a_Trait>&);
inline void _1d628bced_check_trait_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d59c3e1a_Trait>&);
inline jule::Bool _1d628c062_check_trait_decls(jule::Ptr<_1d627c519_Sema>);
inline jule::Bool _1d628c43b_check_trait_impl_methods(_1d627c519_Sema*, jule::Ptr<_1d59c3e1a_Trait>&, jule::Ptr<_1d62470d8_Impl>&);
inline jule::Bool _1d628c804_impl_to_struct(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5599dba_Struct>&, jule::Ptr<_1d62470d8_Impl>&);
inline void _1d628ca79_impl_trait(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d62470d8_Impl>&);
inline void _1d628ccee_impl_struct(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d62470d8_Impl>&);
inline void _1d628d074_impl_impl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d62470d8_Impl>&);
inline void _1d628d393_check_var_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d6298ea3_Var>&, jule::Trait<_1d633797b_Lookup>);
inline void _1d628d618_check_global_var_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d6298ea3_Var>&);
inline jule::Bool _1d628d87c_check_global_decls(jule::Ptr<_1d627c519_Sema>);
inline jule::Bool _1d628dc56_check_struct_trait_impl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5599dba_Struct>&, jule::Ptr<_1d59c3e1a_Trait>&);
inline jule::Bool _1d628e075_check_struct_impls(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5599dba_Struct>&);
inline jule::Bool _1d628e383_check_struct_fields(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5599dba_Struct>&);
inline void _1d628e608_check_struct_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5599dba_Struct>&);
inline jule::Bool _1d628e86c_check_struct_decls(jule::Ptr<_1d627c519_Sema>);
inline void _1d628eae2_check_fn_decl(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567a7e7_Fn>&);
inline jule::Bool _1d628ed56_check_fn_decls(jule::Ptr<_1d627c519_Sema>);
inline void _1d629021e_push_cycle_error(_1d627c519_Sema*, jule::Ptr<_1d5599dba_Struct>&, jule::Ptr<_1d5599dba_Struct>&, jule::Str&);
inline jule::Bool _1d6290670_check_cross_cycle(_1d627c519_Sema*, jule::Ptr<_1d5599dba_Struct>&, jule::Ptr<_1d5599dba_Struct>&, jule::Str&);
inline jule::Bool _1d6290b04_check_struct_derive_illegal_cycles(_1d627c519_Sema*, jule::Str, jule::Ptr<_1d5599dba_Struct>&, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d6290e34_check_struct_ins_derive_clone(_1d627c519_Sema*, jule::Ptr<_1d55c62d1_StructIns>);
inline void _1d6291121_check_package_decls(jule::Ptr<_1d627c519_Sema>);
inline void _1d6291462_check_data_for_type_inference(_1d627c519_Sema*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>&);
inline void _1d62916e8_check_var(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d6298ea3_Var>&);
inline void _1d6291a17_check_type_var(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d6298ea3_Var>&, jule::Trait<_1d633797b_Lookup>);
inline void _1d6291be3_check_global_types(jule::Ptr<_1d627c519_Sema>);
inline jule::Ptr<_1d567d498_FnIns> _1d629209a_ready_to_check_fn(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d62923b9_check_type_method(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1d567a7e7_Fn>&);
inline jule::Ptr<_1d567d498_FnIns> _1d629281a_check_struct_ins_op(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1d567a7e7_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>);
inline jule::Bool _1d6292bc2_check_struct_env(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d6293079_precheck_struct_ins(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1ee538d51_Token>);
inline void _1d62932ee_check_struct_ins(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d6293574_check_type_struct(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5599dba_Struct>&);
inline void _1d6293750_check_struct_types(jule::Ptr<_1d627c519_Sema>);
inline void _1d62939e7_check_struct_ins_operators(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d55c62d1_StructIns>);
inline void _1d6293c7d_precheck_struct_type(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d5599dba_Struct>&);
inline void _1d6293e59_precheck_struct_types(jule::Ptr<_1d627c519_Sema>);
inline void _1d62941ce_check_rets(_1d627c519_Sema*, jule::Ptr<_1d567d498_FnIns>&);
inline void _1d62944ed_check_fn_ins_sc(_1d627c519_Sema*, jule::Ptr<_1d567d498_FnIns>&, jule::Ptr<_1d625c571_ScopeChecker>&);
inline void _1d629481c_check_fn_ins_caller(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567d498_FnIns>&, jule::Ptr<_1ee538d51_Token>);
inline void _1d6294a92_check_fn_ins(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567d498_FnIns>&);
inline void _1d6294d17_check_type_fn(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d629508c_check_test_fn(_1d627c519_Sema*, jule::Ptr<_1d567d498_FnIns>&);
inline void _1d6295312_precheck_type_fn(jule::Ptr<_1d627c519_Sema>, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d62954dd_precheck_fn_types(jule::Ptr<_1d627c519_Sema>);
inline void _1d62956b9_check_fn_types(jule::Ptr<_1d627c519_Sema>);
inline void _1d6295895_check_package_types(jule::Ptr<_1d627c519_Sema>);
inline void _1d6295a71_set_file_sema_fields(jule::Ptr<_1d627c519_Sema>);
inline void _1d6295c4c_set_sema_fields(jule::Ptr<_1d627c519_Sema>);
inline void _1d6295ec2_check(jule::Ptr<_1d627c519_Sema>, jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&);
struct _1d627c519_Sema {
	jule::Slice<_21868a483_Log> _field_errors = jule::Slice<_21868a483_Log>();
	jule::Slice<jule::Ptr<_1d62db952_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>();
	jule::Ptr<_1d62db952_SymbolTable> _field_file = jule::Ptr<_1d62db952_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1d627c519_Sema(void) = default;

	inline bool operator==(_1d627c519_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1d627c519_Sema _other) { return !this->operator==(_other); }


};
inline _1d6296379_MissingRetChecker static__1d6296742_new(void);
inline jule::Bool _1d6296a1c_check_conditional(_1d6296379_MissingRetChecker*, jule::Ptr<_1d625646b_Conditional>);
inline jule::Bool _1d6296d2a_check_match(_1d6296379_MissingRetChecker*, jule::Ptr<_1d625965b_Match>);
inline jule::Bool _1d6297138_check_inf_iter(_1d6296379_MissingRetChecker*, jule::Ptr<_1d6256757_InfIter>);
inline jule::Bool _1d6297446_check_scope(_1d6296379_MissingRetChecker*, jule::Ptr<_1d6255beb_Scope>);
inline jule::Bool _1d6297754_check(_1d6296379_MissingRetChecker*, jule::Ptr<_1d6255beb_Scope>);
struct _1d6296379_MissingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1d6296379_MissingRetChecker(void) = default;

	inline bool operator==(_1d6296379_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1d6296379_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1d629803a_IterRelation {
	jule::Ptr<_1d6298ea3_Var> _field_range = jule::Ptr<_1d6298ea3_Var>();
	

	_1d629803a_IterRelation(void) = default;

	inline bool operator==(_1d629803a_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1d629803a_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d629935a_is_initialized(_1d6298ea3_Var*);
inline jule::Bool _1d62995be_is_type_inferred(_1d6298ea3_Var*);
struct _1d6298ea3_Var {
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1d632103b_TypeSymbol> _field_kind = jule::Ptr<_1d632103b_TypeSymbol>();
	jule::Ptr<_1d62e2738_Value> _field_value = jule::Ptr<_1d62e2738_Value>();
	jule::Ptr<_1d5680c5e_ReferenceStack> _field_refers = jule::Ptr<_1d5680c5e_ReferenceStack>();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Ptr<_1d629803a_IterRelation> _field_iter_relation = jule::Ptr<_1d629803a_IterRelation>();
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_depends = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	

	_1d6298ea3_Var(void) = default;

	inline bool operator==(_1d6298ea3_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1d6298ea3_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1d629a14c_dispose(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629a3e4_to_str(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629a735_logical(jule::Ptr<_1d567a7e7_Fn>&, jule::Str);
inline jule::Bool static__1d629a9cc_eq(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629ac74_gt(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629b01b_gt_eq(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629b2b3_lt(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629b55a_lt_eq(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629b89b_result(jule::Ptr<_1d567a7e7_Fn>&, jule::Str);
inline jule::Bool static__1d629bb43_shl(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629bdda_shr(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629c182_add(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629c429_sub(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629c6c1_div(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629c968_mul(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629cc10_mod(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629cea7_bit_and(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629d24e_bit_or(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629d4e6_bit_xor(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629d837_unary(jule::Ptr<_1d567a7e7_Fn>&, jule::Str);
inline jule::Bool static__1d629dace_neg(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629dd76_pos(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629e11d_bit_not(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629e45e_assign(jule::Ptr<_1d567a7e7_Fn>&, jule::Str);
inline jule::Bool static__1d629e706_add_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629e99d_sub_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629ec45_div_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d629eedc_mul_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d62a0284_mod_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d62a052b_shl_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d62a07c3_shr_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d62a0a6a_bit_or_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d62a0d12_bit_and_assign(jule::Ptr<_1d567a7e7_Fn>);
inline jule::Bool static__1d62a10a9_bit_xor_assign(jule::Ptr<_1d567a7e7_Fn>);
struct _1d62999cb_FuncPattern {
	

	_1d62999cb_FuncPattern(void) = default;

	inline bool operator==(_1d62999cb_FuncPattern _other) { return true; }

	inline bool operator!=(_1d62999cb_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1d62caa62_push_err(_1d62ca545_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d62cacc6_check_trait(_1d62ca545_TypeCompatibilityChecker*);
inline jule::Bool _1d62cb03a_check_ptr(_1d62ca545_TypeCompatibilityChecker*);
inline jule::Bool _1d62cb29e_check_prim(_1d62ca545_TypeCompatibilityChecker*);
inline jule::Bool _1d62cb656___type_enum(_1d62ca545_TypeCompatibilityChecker*, jule::Ptr<_1d5a788b5_TypeEnum>&, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62cb8ba_check_type_enum(_1d62ca545_TypeCompatibilityChecker*);
inline jule::Bool _1d62cbb2e_check(_1d62ca545_TypeCompatibilityChecker*);
struct _1d62ca545_TypeCompatibilityChecker {
	jule::Ptr<_1d627c519_Sema> _field_s = jule::Ptr<_1d627c519_Sema>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_dest = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_src = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1ee538d51_Token> _field_error_token = jule::Ptr<_1ee538d51_Token>();
	

	_1d62ca545_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1d62ca545_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1d62ca545_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1d62cc5d0_push_err(_1d62cc16d_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d62cc844_check_validity(_1d62cc16d_AssignTypeChecker*);
inline jule::Bool _1d62ccaa8_check_const(_1d62cc16d_AssignTypeChecker*);
inline jule::Bool _1d62ccd1c_is_prim(_1d62cc16d_AssignTypeChecker*);
inline jule::Bool _1d62cd081_check_compatibility(_1d62cc16d_AssignTypeChecker*);
inline jule::Bool _1d62cd2e5_check(_1d62cc16d_AssignTypeChecker*);
struct _1d62cc16d_AssignTypeChecker {
	jule::Ptr<_1d627c519_Sema> _field_s = jule::Ptr<_1d627c519_Sema>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_dest = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d62e16b0_Data> _field_d = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1ee538d51_Token> _field_error_token = jule::Ptr<_1ee538d51_Token>();
	

	_1d62cc16d_AssignTypeChecker(void) = default;

	inline bool operator==(_1d62cc16d_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1d62cc16d_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d8aea071_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d8aeaadd_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d8aeee55_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d8b0518b_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62ce4c2_annotate_constraint_map(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62ce813_annotate_constraint_tup(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62ceb32_annotate_constraint_fn(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62cee62_annotate_constraint_ident(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d0281_annotate_constraint(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline void _1d62d05a0_push_generic(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&, jule::I64);
inline jule::Bool _1d62d08ad_annotate_prim(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d0bbb_annotate_arr(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d0ec9_annotate_slc(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d1381_check_map_key(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d168e_annotate_map(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d199c_annotate_fn(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d1caa_annotate_ptr(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d20b8_annotate_sptr(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d23c6_annotate_struct(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d26d4_annotate_any(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d29e2_annotate_kind(_1d62cda87_DynamicTypeAnnotation*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d62d2c56_annotate(_1d62cda87_DynamicTypeAnnotation*);
struct _1d62cda87_DynamicTypeAnnotation {
	jule::Ptr<_1d62e322d_Eval> _field_e = jule::Ptr<_1d62e322d_Eval>();
	jule::Ptr<_1d567d498_FnIns> _field_f = jule::Ptr<_1d567d498_FnIns>();
	jule::Ptr<_1d567c5c9_ParamIns> _field_p = jule::Ptr<_1d567c5c9_ParamIns>();
	jule::Ptr<_1d62e16b0_Data> _field_a = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1ee538d51_Token> _field_error_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d631bdd3_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1d55a968d_TypeDecl> _field_c = jule::Ptr<_1d55a968d_TypeDecl>();
	

	_1d62cda87_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1d62cda87_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1d62cda87_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1d62d397c_push_err_token(_1d62d342c_FnCallArgChecker*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d62d3c9b_push_err(_1d62d342c_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>> _1d62d4010_get_params(_1d62d342c_FnCallArgChecker*);
inline jule::Bool _1d62d431d_check_counts(_1d62d342c_FnCallArgChecker*, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>&);
inline jule::Bool _1d62d476e_check_arg(_1d62d342c_FnCallArgChecker*, jule::Ptr<_1d567c5c9_ParamIns>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Bool _1d62d4b26_push(_1d62d342c_FnCallArgChecker*, jule::Ptr<_1d567c5c9_ParamIns>&, jule::Ptr<_1d55adbae_Expr>);
inline jule::Bool _1d62d4ecd_push_variadic(_1d62d342c_FnCallArgChecker*, jule::Ptr<_1d567c5c9_ParamIns>&, jule::I64);
inline jule::Bool _1d62d52db_check_args(_1d62d342c_FnCallArgChecker*, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>&);
inline jule::Bool _1d62d5572_check_dynamic_type_annotation(_1d62d342c_FnCallArgChecker*);
inline jule::Bool _1d62d57e7_check(_1d62d342c_FnCallArgChecker*);
struct _1d62d342c_FnCallArgChecker {
	jule::Ptr<_1d62e322d_Eval> _field_e = jule::Ptr<_1d62e322d_Eval>();
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_args = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	jule::Ptr<_1ee538d51_Token> _field_error_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d567d498_FnIns> _field_f = jule::Ptr<_1d567d498_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1d62d342c_FnCallArgChecker(void) = default;

	inline bool operator==(_1d62d342c_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1d62d342c_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1d62d6342_push_err(_1d62d5d36_StructLitChecker*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d62d6661_push_suggestion(_1d62d5d36_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1d62d6a29_push_match(_1d62d5d36_StructLitChecker*, jule::Ptr<_1d55a2532_FieldIns>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>&);
inline void _1d62d6d48_check_pair(_1d62d5d36_StructLitChecker*, jule::Ptr<_1d55b39c7_FieldExprPair>&, jule::Slice<jule::Ptr<_1d55adbae_Expr>>&);
inline jule::Bool _1d62d7156_ready_exprs(_1d62d5d36_StructLitChecker*, jule::Slice<jule::Ptr<_1d55adbae_Expr>>&);
inline void _1d62d73cb_check(_1d62d5d36_StructLitChecker*, jule::Slice<jule::Ptr<_1d55adbae_Expr>>&);
struct _1d62d5d36_StructLitChecker {
	jule::Ptr<_1d62e322d_Eval> _field_e = jule::Ptr<_1d62e322d_Eval>();
	jule::Ptr<_1ee538d51_Token> _field_error_token = jule::Ptr<_1ee538d51_Token>();
	jule::Ptr<_1d55c62d1_StructIns> _field_s = jule::Ptr<_1d55c62d1_StructIns>();
	jule::Slice<jule::Ptr<_1d5673757_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1d5673757_StructArgExprModel>>();
	

	_1d62d5d36_StructLitChecker(void) = default;

	inline bool operator==(_1d62d5d36_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1d62d5d36_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d6298ea3_Var> _1d62d7db0_build_var(_1d62d791a_RangeChecker*, jule::Ptr<_1d55bc54c_VarDecl>&);
inline void _1d62d808b_set_size_key(_1d62d791a_RangeChecker*);
inline void _1d62d8476_check_range_expr_validity(_1d62d791a_RangeChecker*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d6298ea3_Var>&, jule::Ptr<_1d631bdd3_TypeKind>&);
inline void _1d62d8663_check_slice(_1d62d791a_RangeChecker*);
inline void _1d62d883e_check_array(_1d62d791a_RangeChecker*);
inline void _1d62d8a1a_check_map_key_a(_1d62d791a_RangeChecker*);
inline void _1d62d8be6_check_map_key_b(_1d62d791a_RangeChecker*);
inline void _1d62d8dc2_check_map(_1d62d791a_RangeChecker*);
inline void _1d62d909d_check_str(_1d62d791a_RangeChecker*);
inline jule::Bool _1d62d9312_check(_1d62d791a_RangeChecker*);
struct _1d62d791a_RangeChecker {
	jule::Ptr<_1d625c571_ScopeChecker> _field_sc = jule::Ptr<_1d625c571_ScopeChecker>();
	jule::Ptr<_1d55be1ca_RangeKind> _field_rang = jule::Ptr<_1d55be1ca_RangeKind>();
	jule::Ptr<_1d62575b0_RangeIter> _field_kind = jule::Ptr<_1d62575b0_RangeIter>();
	jule::Ptr<_1d62e16b0_Data> _field_d = jule::Ptr<_1d62e16b0_Data>();
	

	_1d62d791a_RangeChecker(void) = default;

	inline bool operator==(_1d62d791a_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1d62d791a_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1d62da05a_prepare_types(_1d62d9aa4_RetTypeChecker*);
inline void _1d62da2d0_prepare_exprs(_1d62d9aa4_RetTypeChecker*, jule::Ptr<_1d55adbae_Expr>&);
inline void _1d62da4ab_ret_vars(_1d62d9aa4_RetTypeChecker*);
inline void _1d62da687_check_exprs(_1d62d9aa4_RetTypeChecker*);
inline jule::Bool _1d62da995_check(_1d62d9aa4_RetTypeChecker*, jule::Ptr<_1d55adbae_Expr>&);
struct _1d62d9aa4_RetTypeChecker {
	jule::Ptr<_1d625c571_ScopeChecker> _field_sc = jule::Ptr<_1d625c571_ScopeChecker>();
	jule::Ptr<_1d567d498_FnIns> _field_f = jule::Ptr<_1d567d498_FnIns>();
	jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>>();
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d55adbae_Expr>>();
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_vars = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	jule::Ptr<_1ee538d51_Token> _field_error_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_model = jule::Any();
	

	_1d62d9aa4_RetTypeChecker(void) = default;

	inline bool operator==(_1d62d9aa4_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1d62d9aa4_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d62743bd_ImportInfo> _1d62dbe6e_find_package(_1d62db952_SymbolTable*, jule::Str);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d62dc27c_select_package(_1d62db952_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>);
inline jule::Ptr<_1d6298ea3_Var> _1d62dc634_find_var(_1d62db952_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d62dc9db_find_type_alias(_1d62db952_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d5599dba_Struct> _1d62dcd93_find_struct(_1d62db952_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d567a7e7_Fn> _1d62dd24a_find_fn(_1d62db952_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d59c3e1a_Trait> _1d62dd558_find_trait(_1d62db952_SymbolTable*, jule::Str);
inline jule::Ptr<_1d5692820_Enum> _1d62dd866_find_enum(_1d62db952_SymbolTable*, jule::Str);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d62ddb74_find_type_enum(_1d62db952_SymbolTable*, jule::Str);
inline jule::Ptr<_1d6298ea3_Var> _1d62de1e6___find_var(_1d62db952_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d62de647___find_type_alias(_1d62db952_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1d62de9ee_def_by_ident(_1d62db952_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1d62dee50_is_duplicated_ident(_1d62db952_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1d62db952_SymbolTable {
	jule::Ptr<_1ee53e1db_File> _field_file = jule::Ptr<_1ee53e1db_File>();
	jule::Slice<_1d5682128_Pass> _field_passes = jule::Slice<_1d5682128_Pass>();
	jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>>();
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_vars = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>();
	jule::Slice<jule::Ptr<_1d5599dba_Struct>> _field_structs = jule::Slice<jule::Ptr<_1d5599dba_Struct>>();
	jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1d567a7e7_Fn>>();
	jule::Slice<jule::Ptr<_1d59c3e1a_Trait>> _field_traits = jule::Slice<jule::Ptr<_1d59c3e1a_Trait>>();
	jule::Slice<jule::Ptr<_1d5692820_Enum>> _field_enums = jule::Slice<jule::Ptr<_1d5692820_Enum>>();
	jule::Slice<jule::Ptr<_1d5a788b5_TypeEnum>> _field_type_enums = jule::Slice<jule::Ptr<_1d5a788b5_TypeEnum>>();
	jule::Slice<jule::Ptr<_1d62470d8_Impl>> _field_impls = jule::Slice<jule::Ptr<_1d62470d8_Impl>>();
	

	_1d62db952_SymbolTable(void) = default;

	inline bool operator==(_1d62db952_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_type_enums == _other._field_type_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1d62db952_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d62e1a9a_is_nil(_1d62e16b0_Data*);
inline jule::Bool _1d62e1d0e_is_void(_1d62e16b0_Data*);
inline jule::Bool _1d62e2073_is_const(_1d62e16b0_Data*);
inline jule::Bool _1d62e2381_good_operand(_1d62e16b0_Data*, jule::Ptr<_1d62e16b0_Data>&);
struct _1d62e16b0_Data {
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1d561288e_Const> _field_constant = jule::Ptr<_1d561288e_Const>();
	

	_1d62e16b0_Data(void) = default;

	inline bool operator==(_1d62e16b0_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1d62e16b0_Data _other) { return !this->operator==(_other); }


};
struct _1d62e2738_Value {
	jule::Ptr<_1d55adbae_Expr> _field_expr = jule::Ptr<_1d55adbae_Expr>();
	jule::Ptr<_1d62e16b0_Data> _field_data = jule::Ptr<_1d62e16b0_Data>();
	

	_1d62e2738_Value(void) = default;

	inline bool operator==(_1d62e2738_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d62e2738_Value _other) { return !this->operator==(_other); }


};
inline void _1d62e3739_push_err(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d62e3a58_push_suggestion(_1d62e322d_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1d62e3c34_allow_builtin(_1d62e322d_Eval*);
inline void _1d62e3e10_disallow_builtin(_1d62e322d_Eval*);
inline jule::Bool _1d62e4174_is_unsafe(_1d62e322d_Eval*);
inline jule::Bool _1d62e43d8_is_global(_1d62e322d_Eval*);
inline jule::Bool _1d62e46b3_apply_numeric_prefix(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e4927_lit_nil(_1d62e322d_Eval*);
inline jule::Ptr<_1d62e16b0_Data> _1d62e4c35_lit_str(_1d62e322d_Eval*, jule::Ptr<_1d55aebe3_LitExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e5043_lit_bool(_1d62e322d_Eval*, jule::Ptr<_1d55aebe3_LitExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e5351_lit_rune(_1d62e322d_Eval*, jule::Ptr<_1d55aebe3_LitExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e565e_lit_float(_1d62e322d_Eval*, jule::Ptr<_1d55aebe3_LitExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e596c_lit_int(_1d62e322d_Eval*, jule::Ptr<_1d55aebe3_LitExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e5c7a_lit_num(_1d62e322d_Eval*, jule::Ptr<_1d55aebe3_LitExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e6088_eval_lit(_1d62e322d_Eval*, jule::Ptr<_1d55aebe3_LitExpr>);
inline jule::Any _1d62e6396_find_builtins(_1d62e322d_Eval*, jule::Str);
inline jule::Any _1d62e674d_get_def(_1d62e322d_Eval*, jule::Str, jule::Bool);
inline void _1d8c3e2a3_push_reference(_1d62e322d_Eval*, jule::Ptr<_1d567d498_FnIns>&);
inline void _1d8c54054_push_reference(_1d62e322d_Eval*, jule::Ptr<_1d6298ea3_Var>&);
inline void _1d8cd8bbb_push_reference(_1d62e322d_Eval*, jule::Ptr<_1d55c62d1_StructIns>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62e6cd1___eval_enum(_1d62e322d_Eval*, jule::Ptr<_1d5692820_Enum>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e7188_eval_enum(_1d62e322d_Eval*, jule::Ptr<_1d5692820_Enum>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e7496___eval_type_enum(_1d62e322d_Eval*, jule::Ptr<_1d5a788b5_TypeEnum>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e784d_eval_type_enum(_1d62e322d_Eval*, jule::Ptr<_1d5a788b5_TypeEnum>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e7b5b___eval_struct(_1d62e322d_Eval*, jule::Ptr<_1d55c62d1_StructIns>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e8013_eval_struct(_1d62e322d_Eval*, jule::Ptr<_1d55c62d1_StructIns>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e8321_eval_fn_ins(_1d62e322d_Eval*, jule::Ptr<_1d567d498_FnIns>);
inline void _1d62e8640_check_deprecated(_1d62e322d_Eval*, jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e89e7_eval_fn(_1d62e322d_Eval*, jule::Ptr<_1d567a7e7_Fn>, jule::Ptr<_1ee538d51_Token>);
inline void _1d62e8dd2_push_illegal_cycle_error(_1d62e322d_Eval*, jule::Ptr<_1d6298ea3_Var>&, jule::Ptr<_1d6298ea3_Var>&, jule::Str&);
inline jule::Bool _1d62e929a_check_cross_cycle(_1d62e322d_Eval*, jule::Ptr<_1d6298ea3_Var>&, jule::Str&);
inline jule::Bool _1d62e9652_check_illegal_cycles(_1d62e322d_Eval*, jule::Ptr<_1d6298ea3_Var>&, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e9a09_eval_var(_1d62e322d_Eval*, jule::Ptr<_1d6298ea3_Var>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62e9db1_eval_type_alias(_1d62e322d_Eval*, jule::Ptr<_1d631b1e0_TypeAlias>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62ea268_eval_def(_1d62e322d_Eval*, jule::Any, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d62ea576_eval_ident(_1d62e322d_Eval*, jule::Ptr<_1d55b0c27_IdentExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d62ea884_eval_unary(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b1431_UnaryExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d62eab92_eval_variadic(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b17d8_VariadicExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d62eaea0_eval_unsafe(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b03ec_UnsafeExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d62eb2ad_eval_arr(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b5633_SliceExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d62eb70e_eval_exp_slc(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b5633_SliceExpr>, jule::Ptr<_1d631bdd3_TypeKind>, jule::Any);
inline jule::Ptr<_1d62e16b0_Data> _1d62eba1c_eval_slice_expr(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b5633_SliceExpr>);
inline void _1d62ebd5d_check_integer_indexing_by_data(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>);
inline void _1d62ec237_indexing_ptr(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline void _1d62ec600_indexing_arr(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline void _1d62ec9b8_indexing_slc(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline void _1d62ecd81_indexing_map(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline void _1d62ed249_indexing_str(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline void _1d62ed612_to_indexing(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline jule::Bool _1d62eda96_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b24ba_SubIdentExpr>&, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline jule::Bool _1d62edea3_push_generics_from_index_data(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62ee35a_eval_ident_decl_from_indexing(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b5ec4_IndexingExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d62ee679_eval_indexing(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b5ec4_IndexingExpr>);
inline std::tuple<jule::Ptr<_1d62e16b0_Data>,jule::Ptr<_1d62e16b0_Data>> _1d62ee987_eval_slicing_exprs(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b65ce_SlicingExpr>&);
inline void _1d62eec0c_slicing_arr(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d63000c5_slicing_str(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6300537_check_slicing(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d55b65ce_SlicingExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d6300845_eval_slicing(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b65ce_SlicingExpr>);
inline void _1d6300c0d_cast_ptr(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d63010c6_cast_struct(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d630148e_cast_ref(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d6301857_cast_slc(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d6301b76_cast_str(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d630203e_cast_int(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d6302407_cast_num(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d63027c0_cast_prim(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline void _1d6302ade_cast_constant(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>&, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6302ea7_cast_type_enum(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Ptr<_1d62e16b0_Data> _1d630342a_eval_cast_by_type_n_data(_1d62e322d_Eval*, jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6303749_eval_cast(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b1b90_CastExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d6303a57_eval_ns_selection(_1d62e322d_Eval*, jule::Ptr<_1d55b2047_NsSelectionExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d6303eca_eval_struct_lit_explicit(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55c62d1_StructIns>, jule::Slice<jule::Ptr<_1d55adbae_Expr>>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d63042e9_eval_struct_lit(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b4225_StructLit>);
inline jule::Ptr<_1d62e16b0_Data> _1d6304607_eval_type(_1d62e322d_Eval*, jule::Ptr<_1d55a968d_TypeDecl>);
inline void _1d6304926_call_type_fn(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1d6304ccd_check_fn_call_generics(_1d62e322d_Eval*, jule::Ptr<_1d567d498_FnIns>, jule::Ptr<_1d55b3048_FnCallExpr>);
inline void _1d63050ec_call_builtin_fn(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d630543d_check_fn_of_concurrent_call(_1d62e322d_Eval*, jule::Ptr<_1d567d498_FnIns>&, jule::Ptr<_1ee538d51_Token>);
inline void _1d6305839_process_exceptional_handler(_1d62e322d_Eval*, jule::Ptr<_1d567d498_FnIns>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6305b69_call_fn(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d6305e77_eval_fn_call(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b3048_FnCallExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d630632e_eval_enum_static(_1d62e322d_Eval*, jule::Ptr<_1d5692820_Enum>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d63066d6_eval_type_enum_static(_1d62e322d_Eval*, jule::Ptr<_1d5a788b5_TypeEnum>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6306a8d_eval_struct_static(_1d62e322d_Eval*, jule::Ptr<_1d55c62d1_StructIns>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6306ede_eval_trait_sub_ident(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1d59c3e1a_Trait>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d63074d9_eval_struct_sub_ident(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1d55c62d1_StructIns>, jule::Ptr<_1d55b24ba_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1d62e16b0_Data> _1d6307891_eval_slice_sub_ident(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6307c48_eval_array_sub_ident(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6308100_eval_map_sub_ident(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d63084a7_eval_str_sub_ident(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d63087b5_eval_int_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6308ac3_eval_uint_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6308dd1_eval_i8_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d63091de_eval_i16_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d63094ec_eval_i32_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d630980a_eval_i64_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6309b18_eval_u8_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d6309e26_eval_u16_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d630a234_eval_u32_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d630a542_eval_u64_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d630a850_eval_f32_type_tatic(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d630ab5d_eval_f64_type_static(_1d62e322d_Eval*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d630b015_eval_prim_static(_1d62e322d_Eval*, jule::Str, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d62e16b0_Data> _1d630b3bc_eval_type_static(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1d55b24ba_SubIdentExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d630b774_eval_obj_sub_ident(_1d62e322d_Eval*, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1d55b24ba_SubIdentExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d630ba82_eval_sub_ident(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b24ba_SubIdentExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d630bd90_eval_tuple(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55ae83b_TupleExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d630c247_eval_map(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d6327152_Map>, jule::Ptr<_1d55b4698_BraceLit>);
inline jule::Ptr<_1d62e16b0_Data> _1d630c555_eval_brace_lit(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b4698_BraceLit>);
inline jule::Ptr<_1d62e16b0_Data> _1d630c863_eval_anon_fn(_1d62e322d_Eval*, jule::Ptr<_1d55bb56d_FnDecl>);
inline jule::Ptr<_1d62e16b0_Data> _1d630cb71_eval_binop(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55b293d_BinopExpr>);
inline jule::Ptr<_1d62e16b0_Data> _1d630ce7e_eval_expr_kind(jule::Ptr<_1d62e322d_Eval>, jule::Any);
inline jule::Ptr<_1d62e16b0_Data> _1d630d28c_eval(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55adbae_Expr>);
inline jule::Ptr<_1d62e16b0_Data> _1d630d59a_eval_expr(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1d55adbae_Expr>);
struct _1d62e322d_Eval {
	jule::Ptr<_1d627c519_Sema> _field_s = jule::Ptr<_1d627c519_Sema>();
	jule::Trait<_1d633797b_Lookup> _field_lookup = jule::Trait<_1d633797b_Lookup>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_prefix = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1d6298ea3_Var> _field_owner = jule::Ptr<_1d6298ea3_Var>();
	jule::Ptr<_1d55a2532_FieldIns> _field_field = jule::Ptr<_1d55a2532_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1d62e322d_Eval(void) = default;

	inline bool operator==(_1d62e322d_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1d62e322d_Eval _other) { return !this->operator==(_other); }


};
inline _1d630da1d_UnaryEval static__1d630dec4_new(jule::Ptr<_1d62e322d_Eval>);
inline void _1d630e1a0_minus(_1d630da1d_UnaryEval*);
inline void _1d630e37b_plus(_1d630da1d_UnaryEval*);
inline void _1d630e557_caret(_1d630da1d_UnaryEval*);
inline void _1d630e733_excl(_1d630da1d_UnaryEval*);
inline void _1d630e90e_star(_1d630da1d_UnaryEval*);
inline void _1d630eada_amper(_1d630da1d_UnaryEval*);
inline void _1d630ecb6_type_decl(_1d630da1d_UnaryEval*);
inline void _1d630ee92_eval_data(_1d630da1d_UnaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d631026c_eval(_1d630da1d_UnaryEval*, jule::Ptr<_1d55b1431_UnaryExpr>);
struct _1d630da1d_UnaryEval {
	jule::Ptr<_1d62e322d_Eval> _field_e = jule::Ptr<_1d62e322d_Eval>();
	jule::Ptr<_1d62e16b0_Data> _field_d = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1d55b1431_UnaryExpr> _field_u = jule::Ptr<_1d55b1431_UnaryExpr>();
	

	_1d630da1d_UnaryEval(void) = default;

	inline bool operator==(_1d630da1d_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1d630da1d_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1d63107ab_BinaryEval static__1d6310d72_new_plain(jule::Ptr<_1d62e322d_Eval>);
inline _1d63107ab_BinaryEval static__1d63111b3_new(jule::Ptr<_1d62e322d_Eval>, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d6311449_check_type_compatibility(_1d63107ab_BinaryEval*);
inline jule::Bool _1d6311702_check_struct_common_operator_compatibility(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6311999_eval_nil(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6311c0d_eval_enum(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6311e72_eval_type_enum(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d63121d6_eval_sptr(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d631244a_eval_ptr(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d63126ae_eval_arr(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6312923_eval_slc(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6312b87_eval_fn(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6312deb_eval_struct(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6313160_eval_trait(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d63133c4_eval_any(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6313638_eval_bool(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d631389c_eval_str(_1d63107ab_BinaryEval*);
inline void _1d6313a78_set_type_to_greater(_1d63107ab_BinaryEval*);
inline void _1d6313cba_check_mod_data(_1d63107ab_BinaryEval*, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6313e96_mod(_1d63107ab_BinaryEval*);
inline jule::Bool _1d6314370_numbers_are_compatibile(_1d63107ab_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1d62e16b0_Data> _1d63145e5_eval_float(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6314859_eval_int(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6314abd_eval_prim(_1d63107ab_BinaryEval*);
inline jule::Ptr<_1d62e16b0_Data> _1d6314d32_eval_op(_1d63107ab_BinaryEval*);
inline void _1d63150a7_eval_const(_1d63107ab_BinaryEval*, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d631532c_check_data(_1d63107ab_BinaryEval*, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6315508_check_datas(_1d63107ab_BinaryEval*);
inline void _1d631577d_set_model(_1d63107ab_BinaryEval*, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6315a03_post_eval(_1d63107ab_BinaryEval*, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d6315daa_solve_explicit(_1d63107ab_BinaryEval*, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63161b8_eval(_1d63107ab_BinaryEval*, jule::Ptr<_1d55b293d_BinopExpr>&);
struct _1d63107ab_BinaryEval {
	jule::Ptr<_1d62e322d_Eval> _field_e = jule::Ptr<_1d62e322d_Eval>();
	jule::Ptr<_1d62e16b0_Data> _field_l = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1d62e16b0_Data> _field_r = jule::Ptr<_1d62e16b0_Data>();
	jule::Ptr<_1ee538d51_Token> _field_op = jule::Ptr<_1ee538d51_Token>();
	

	_1d63107ab_BinaryEval(void) = default;

	inline bool operator==(_1d63107ab_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d63107ab_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1d631a6a6_InsGeneric {
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _field_constraint = jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>>();
	

	_1d631a6a6_InsGeneric(void) = default;

	inline bool operator==(_1d631a6a6_InsGeneric _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_constraint == _other._field_constraint;
	}

	inline bool operator!=(_1d631a6a6_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1d631b1e0_TypeAlias {
	jule::Ptr<_1d55b9a77_ScopeTree> _field_scope = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d632103b_TypeSymbol> _field_kind = jule::Ptr<_1d632103b_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>();
	

	_1d631b1e0_TypeAlias(void) = default;

	inline bool operator==(_1d631b1e0_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d631b1e0_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1d631c2ce_to_str(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631c5dc_equals(jule::Ptr<_1d631bdd3_TypeKind>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Bool _1d631ca93_cpp_linked(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631cd07_is_nil(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631d06b_void(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631d2d0_mutable(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631d544_nil_compatible(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631d7a8_performs_rc(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631da1c_supports_cloning(_1d631bdd3_TypeKind*);
inline jule::Bool _1d631dc81_variadicable(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d63218aa_Prim> _1d631dee5_prim(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d632513e_Sptr> _1d631e259_sptr(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d63286a3_Ptr> _1d631e4bd_ptr(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d5692820_Enum> _1d631e732_enm(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d631e996_tenm(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d6327c46_Arr> _1d631ec0a_arr(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d6325a9b_Slc> _1d631ee6e_slc(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d567d498_FnIns> _1d63201d3_fnc(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d55c62d1_StructIns> _1d6320447_strct(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d59c3e1a_Trait> _1d63206ab_trt(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d6327152_Map> _1d6320920_map(_1d631bdd3_TypeKind*);
inline jule::Ptr<_1d6326629_Tuple> _1d6320b84_tup(_1d631bdd3_TypeKind*);
struct _1d631bdd3_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1d631b9a4_Kind> _field_kind = jule::Trait<_1d631b9a4_Kind>();
	

	_1d631bdd3_TypeKind(void) = default;

	inline bool operator==(_1d631bdd3_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d631bdd3_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d63213e3_checked(_1d632103b_TypeSymbol*);
inline void _1d63215be_remove_kind(_1d632103b_TypeSymbol*);
struct _1d632103b_TypeSymbol {
	jule::Ptr<_1d55a968d_TypeDecl> _field_decl = jule::Ptr<_1d55a968d_TypeDecl>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_kind = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d632103b_TypeSymbol(void) = default;

	inline bool operator==(_1d632103b_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d632103b_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1d6321c1d_to_str(_1d63218aa_Prim*);
inline jule::Bool _1d632202b_equals(jule::Ptr<_1d63218aa_Prim>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Bool _1d632249e_is_constraint(_1d63218aa_Prim*);
inline jule::Bool _1d6322713_is_i8(_1d63218aa_Prim*);
inline jule::Bool _1d6322977_is_i16(_1d63218aa_Prim*);
inline jule::Bool _1d6322bdb_is_i32(_1d63218aa_Prim*);
inline jule::Bool _1d6322e50_is_i64(_1d63218aa_Prim*);
inline jule::Bool _1d63231b4_is_u8(_1d63218aa_Prim*);
inline jule::Bool _1d6323428_is_u16(_1d63218aa_Prim*);
inline jule::Bool _1d632368c_is_u32(_1d63218aa_Prim*);
inline jule::Bool _1d6323901_is_u64(_1d63218aa_Prim*);
inline jule::Bool _1d6323b65_is_f32(_1d63218aa_Prim*);
inline jule::Bool _1d6323dc9_is_f64(_1d63218aa_Prim*);
inline jule::Bool _1d632413d_is_int(_1d63218aa_Prim*);
inline jule::Bool _1d63243a2_is_uint(_1d63218aa_Prim*);
inline jule::Bool _1d6324616_is_uintptr(_1d63218aa_Prim*);
inline jule::Bool _1d632487a_is_bool(_1d63218aa_Prim*);
inline jule::Bool _1d6324ade_is_str(_1d63218aa_Prim*);
inline jule::Bool _1d6324d53_is_any(_1d63218aa_Prim*);
struct _1d63218aa_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1d63218aa_Prim(void) = default;

	inline bool operator==(_1d63218aa_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d63218aa_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1d63254a2_to_str(_1d632513e_Sptr*);
inline jule::Bool _1d63257b0_equals(jule::Ptr<_1d632513e_Sptr>, jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d632513e_Sptr {
	jule::Ptr<_1d631bdd3_TypeKind> _field_elem = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d632513e_Sptr(void) = default;

	inline bool operator==(_1d632513e_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d632513e_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1d63260a7_to_str(_1d6325a9b_Slc*);
inline jule::Bool _1d63263b5_equals(jule::Ptr<_1d6325a9b_Slc>, jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d6325a9b_Slc {
	jule::Ptr<_1d631bdd3_TypeKind> _field_elem = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d6325a9b_Slc(void) = default;

	inline bool operator==(_1d6325a9b_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d6325a9b_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1d632698c_to_str(_1d6326629_Tuple*);
inline jule::Bool _1d6326c9a_equals(jule::Ptr<_1d6326629_Tuple>, jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d6326629_Tuple {
	jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>>();
	

	_1d6326629_Tuple(void) = default;

	inline bool operator==(_1d6326629_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1d6326629_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1d63274b5_to_str(_1d6327152_Map*);
inline jule::Bool _1d63277c3_equals(jule::Ptr<_1d6327152_Map>, jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d6327152_Map {
	jule::Ptr<_1d631bdd3_TypeKind> _field_key = jule::Ptr<_1d631bdd3_TypeKind>();
	jule::Ptr<_1d631bdd3_TypeKind> _field_val = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d6327152_Map(void) = default;

	inline bool operator==(_1d6327152_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1d6327152_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1d63280a9_to_str(_1d6327c46_Arr*);
inline jule::Bool _1d63283b7_equals(jule::Ptr<_1d6327c46_Arr>, jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d6327c46_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1d631bdd3_TypeKind> _field_elem = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d6327c46_Arr(void) = default;

	inline bool operator==(_1d6327c46_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d6327c46_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1d6328a16_to_str(_1d63286a3_Ptr*);
inline jule::Bool _1d6328d24_equals(jule::Ptr<_1d63286a3_Ptr>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Bool _1d6329176_is_unsafe(_1d63286a3_Ptr*);
struct _1d63286a3_Ptr {
	jule::Ptr<_1d631bdd3_TypeKind> _field_elem = jule::Ptr<_1d631bdd3_TypeKind>();
	

	_1d63286a3_Ptr(void) = default;

	inline bool operator==(_1d63286a3_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d63286a3_Ptr _other) { return !this->operator==(_other); }


};
struct _1d63295e9_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1d63295e9_Referencer(void) = default;

	inline bool operator==(_1d63295e9_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1d63295e9_Referencer _other) { return !this->operator==(_other); }


};
inline void _1d632aa4b_push_err(_1d632a342_TypeChecker*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d632ac27_allow_builtin(_1d632a342_TypeChecker*);
inline void _1d632ae03_disallow_builtin(_1d632a342_TypeChecker*);
inline jule::Ptr<_1d63218aa_Prim> _1d632b211_build_prim(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&);
inline void _1d906d390_push_reference(_1d632a342_TypeChecker*, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d907141a_push_reference(_1d632a342_TypeChecker*, jule::Ptr<_1d59c3e1a_Trait>&);
inline void _1d632b70b_push_reference_by_kind(_1d632a342_TypeChecker*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline void _1d632bac4_push_cycle_error(_1d632a342_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1d632be7b_check_cross_cycle(_1d632a342_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1d632c333_check_illegal_cycles(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1d631b9a4_Kind> _1d632c6da_from_type_alias(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d631b1e0_TypeAlias>&);
inline jule::Ptr<_1d5692820_Enum> _1d632ca92_from_enum(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d5692820_Enum>&);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d632ce49_from_type_enum(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d5a788b5_TypeEnum>&);
inline jule::Ptr<_1d59c3e1a_Trait> _1d632d301_from_trait(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d59c3e1a_Trait>&);
inline jule::Bool _1d632d6a8_check_struct_ins(_1d632a342_TypeChecker*, jule::Ptr<_1d55c62d1_StructIns>&, jule::Ptr<_1ee538d51_Token>&);
inline void _1d632d950_append_used_struct_reference(_1d632a342_TypeChecker*, jule::Ptr<_1d5599dba_Struct>&);
inline jule::Ptr<_1d55c62d1_StructIns> _1d632dd18_build_struct_instance(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d5599dba_Struct>&);
inline jule::Ptr<_1d55c62d1_StructIns> _1d632e1c0_from_struct(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&, jule::Ptr<_1d5599dba_Struct>&);
inline jule::Trait<_1d631b9a4_Kind> _1d632e4cd_get_def(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>&);
inline jule::Trait<_1d631b9a4_Kind> _1d632e7db_build_ident(_1d632a342_TypeChecker*, jule::Ptr<_1d55a9c54_IdentTypeDecl>);
inline jule::Trait<_1d631b9a4_Kind> _1d632eae9_build_sub_ident(_1d632a342_TypeChecker*, jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>);
inline jule::Ptr<_1d632513e_Sptr> _1d632ee07_build_sptr_from_type(_1d632a342_TypeChecker*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Ptr<_1d632513e_Sptr> _1d6330215_build_sptr(_1d632a342_TypeChecker*, jule::Ptr<_1d55aaa46_SptrTypeDecl>);
inline jule::Ptr<_1d63286a3_Ptr> _1d6330523_build_ptr_from_type(_1d632a342_TypeChecker*, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Ptr<_1d63286a3_Ptr> _1d6330831_build_ptr(_1d632a342_TypeChecker*, jule::Ptr<_1d55ab519_PtrTypeDecl>);
inline jule::Ptr<_1d6325a9b_Slc> _1d6330b3e_build_slc(_1d632a342_TypeChecker*, jule::Ptr<_1d55aae42_SlcTypeDecl>);
inline jule::Ptr<_1d6327c46_Arr> _1d6330e4c_build_arr(_1d632a342_TypeChecker*, jule::Ptr<_1d55abb9b_ArrTypeDecl>);
inline jule::Ptr<_1d6327152_Map> _1d633125a_build_map(_1d632a342_TypeChecker*, jule::Ptr<_1d55ac3e9_MapTypeDecl>);
inline jule::Ptr<_1d6326629_Tuple> _1d6331568_build_tuple(_1d632a342_TypeChecker*, jule::Ptr<_1d55ab22d_TupleTypeDecl>);
inline jule::Bool _1d6331876_check_fn_types(_1d632a342_TypeChecker*, jule::Ptr<_1d567d498_FnIns>&);
inline jule::Ptr<_1d567d498_FnIns> _1d6331b84_build_fn(_1d632a342_TypeChecker*, jule::Ptr<_1d55bb56d_FnDecl>);
inline jule::Trait<_1d631b9a4_Kind> _1d6331e92_build_by_namespace(_1d632a342_TypeChecker*, jule::Ptr<_1d55aa75a_NamespaceTypeDecl>);
inline jule::Ptr<_1d631bdd3_TypeKind> _1d63322a0_build(_1d632a342_TypeChecker*, jule::Any&);
inline jule::Ptr<_1d631bdd3_TypeKind> _1d63325ad_check_decl(_1d632a342_TypeChecker*, jule::Ptr<_1d55a968d_TypeDecl>&);
inline void _1d6332833_check(_1d632a342_TypeChecker*, jule::Ptr<_1d632103b_TypeSymbol>&);
struct _1d632a342_TypeChecker {
	jule::Ptr<_1d627c519_Sema> _field_s = jule::Ptr<_1d627c519_Sema>();
	jule::Trait<_1d633797b_Lookup> _field_lookup = jule::Trait<_1d633797b_Lookup>();
	jule::Ptr<_1d63295e9_Referencer> _field_referencer = jule::Ptr<_1d63295e9_Referencer>();
	jule::Ptr<_1d5680c5e_ReferenceStack> _field_refers = jule::Ptr<_1d5680c5e_ReferenceStack>();
	jule::Ptr<_1ee538d51_Token> _field_error_token = jule::Ptr<_1ee538d51_Token>();
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1d631b1e0_TypeAlias> _field_owner_alias = jule::Ptr<_1d631b1e0_TypeAlias>();
	jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1d632a342_TypeChecker(void) = default;

	inline bool operator==(_1d632a342_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1d632a342_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1d6332e93___ident_type_decl(jule::Str&, jule::Ptr<_1d55a9c54_IdentTypeDecl>);
inline jule::Bool static__1d63332d4_exist(jule::Str&, jule::Any&);
struct _1d6332a53_IdentTypeLookup {
	

	_1d6332a53_IdentTypeLookup(void) = default;

	inline bool operator==(_1d6332a53_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_1d6332a53_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _1d6ac11e2_FileInfo {
	jule::Ptr<_1d5574b0e_Ast> _field_ast = jule::Ptr<_1d5574b0e_Ast>();
	jule::Slice<_21868a483_Log> _field_errors = jule::Slice<_21868a483_Log>();
	

	_1d6ac11e2_FileInfo(void) = default;

	inline bool operator==(_1d6ac11e2_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d6ac11e2_FileInfo _other) { return !this->operator==(_other); }


};
struct _1d6b228c5_stmt {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1d6b228c5_stmt(void) = default;

	inline bool operator==(_1d6b228c5_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1d6b228c5_stmt _other) { return !this->operator==(_other); }


};
inline void _1d6b23882_stop(_1d6b23200_ScopeParser*);
inline jule::Bool _1d6b23ae6_stopped(_1d6b23200_ScopeParser*);
inline jule::Bool _1d6b23d5a_finished(_1d6b23200_ScopeParser*);
inline jule::Bool _1d6b240be_is_last_st(_1d6b23200_ScopeParser*);
inline void _1d6b243dd_push_err(_1d6b23200_ScopeParser*, jule::Ptr<_1ee538d51_Token>, jule::Str);
inline void _1d6b2470c_push_suggestion(_1d6b23200_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1d6b24982_insert_as_next(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d6b228c5_stmt> _1d6b24be6_next(_1d6b23200_ScopeParser*);
inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b2509d_build_scope(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b253ab_build_var_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55bc904_RetSt> _1d6b256b9_build_ret_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55bd064_Iter> _1d6b259c7_build_while_next_iter(_1d6b23200_ScopeParser*, jule::Ptr<_1d6b228c5_stmt>&);
inline jule::Ptr<_1d55bd839_WhileKind> _1d6b25cd5_build_while_iter_kind(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b26115_get_range_kind_keys_tokens(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b26434_build_range_kind_key(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>> _1d6b26742_build_range_kind_keys(_1d6b23200_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>&);
inline void _1d6b26a83_setup_range_kind_keys_plain(_1d6b23200_ScopeParser*, jule::Ptr<_1d55be1ca_RangeKind>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b26dd5_setup_range_kind_keys_explicit(_1d6b23200_ScopeParser*, jule::Ptr<_1d55be1ca_RangeKind>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b27215_setup_range_kind_keys(_1d6b23200_ScopeParser*, jule::Ptr<_1d55be1ca_RangeKind>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55be1ca_RangeKind> _1d6b27666_build_range_iter_kind(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Any _1d6b27a1d_build_common_iter_kind(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Ptr<_1d55bd064_Iter> _1d6b27d2b_build_common_iter(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55bd064_Iter> _1d6b28139_build_iter_st(_1d6b23200_ScopeParser*, jule::Ptr<_1d6b228c5_stmt>&);
inline jule::Ptr<_1d55be582_BreakSt> _1d6b28447_build_break_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55be939_ContSt> _1d6b28755_build_cont_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55bedac_If> _1d6b28a63_build_if(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55c0264_Else> _1d6b28d71_build_else(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55c06d7_Conditional> _1d6b2917e_build_if_else_chain(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b07a4_CoExpr> _1d6b2948c_build_co_call_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b759c_GotoSt> _1d6b2979a_build_goto_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b7888_FallSt> _1d6b29aa8_build_fall_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55c0dad_TypeAliasDecl> _1d6b29db6_build_type_alias_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b2a328_push_case_expr(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>, jule::Ptr<_1ee538d51_Token>, jule::Bool, jule::Slice<jule::Ptr<_1d55adbae_Expr>>&);
inline jule::Slice<jule::Ptr<_1d55adbae_Expr>> _1d6b2a6d0_build_case_exprs(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Bool);
inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b2a9dd_build_case_scope(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline std::tuple<jule::Ptr<_1d55c1331_Case>,jule::Bool> _1d6b2ad95_build_case(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1d55c1331_Case>>,jule::Ptr<_1d55c0264_Else>> _1d6b2b24c_build_cases(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>, jule::Bool);
inline jule::Ptr<_1d55c1a07_MatchCase> _1d6b2b55a_build_match_case(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b2b868_build_scope_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b71e5_LabelSt> _1d6b2bb76_build_label_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1d6b2be84_build_id_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d6b3aed7_AssignInfo> _1d6b2c292_build_assign_info(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b7e93_AssignLeft> _1d6b2c5a0_build_assign_l(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Ptr<_1d55b7e93_AssignLeft>> _1d6b2c8ad_build_assign_ls(_1d6b23200_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>&);
inline std::tuple<jule::Ptr<_1d55b84d2_AssignSt>,jule::Bool> _1d6b2cbbb_build_plain_assign(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline std::tuple<jule::Ptr<_1d55b84d2_AssignSt>,jule::Bool> _1d6b2cec9_build_decl_assign(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline std::tuple<jule::Ptr<_1d55b84d2_AssignSt>,jule::Bool> _1d6b2d2d7_build_assign_st(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55ae550_UseExpr> _1d6b2d5e5_build_use_expr(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Any _1d6b2d903_build_st(_1d6b23200_ScopeParser*, jule::Ptr<_1d6b228c5_stmt>&);
inline void _1d6b2dc22_build(_1d6b23200_ScopeParser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Ptr<_1d55b9a77_ScopeTree>&);
struct _1d6b23200_ScopeParser {
	jule::Ptr<_1d6b3e55c_Parser> _field_p = jule::Ptr<_1d6b3e55c_Parser>();
	jule::Ptr<_1d55b9a77_ScopeTree> _field_s = jule::Ptr<_1d55b9a77_ScopeTree>();
	jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1d6b228c5_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1d6b23200_ScopeParser(void) = default;

	inline bool operator==(_1d6b23200_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1d6b23200_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1d6b2e7c2_CallData {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	

	_1d6b2e7c2_CallData(void) = default;

	inline bool operator==(_1d6b2e7c2_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1d6b2e7c2_CallData _other) { return !this->operator==(_other); }


};
inline void _1d6b3151b_push_err(_1d6b30c57_ExprBuilder*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d6b3183a_push_suggestion(_1d6b30c57_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d55ae83b_TupleExpr> _1d6b31b48_build_tuple(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>&);
inline jule::Ptr<_1d55aebe3_LitExpr> _1d6b31e56_build_lit(_1d6b30c57_ExprBuilder*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b32264_build_primitive_type(_1d6b30c57_ExprBuilder*, jule::Ptr<_1ee538d51_Token>&);
inline jule::Any _1d6b32572_build_single(_1d6b30c57_ExprBuilder*, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d55b0c27_IdentExpr> _1d6b32880_build_cpp_linked_ident(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b1431_UnaryExpr> _1d6b32b8d_build_unary(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b24ba_SubIdentExpr> _1d6b32e9b_build_obj_sub_ident(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b2047_NsSelectionExpr> _1d6b332a9_build_ns_sub_ident(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b335b7_build_type(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Any _1d6b338c5_build_sub_ident(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b17d8_VariadicExpr> _1d6b33bd3_build_variadic(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Any _1d6b33ee1_build_op_right(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55ade9a_RangeExpr> _1d6b34321_build_between_parentheses(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b1b90_CastExpr> _1d6b34640_try_build_cast(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b34a08_push_arg(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1d55adbae_Expr>>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>, jule::Ptr<_1ee538d51_Token>);
inline jule::Slice<jule::Ptr<_1d55adbae_Expr>> _1d6b34d16_build_args(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _1d6b35124_build_call_generics(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b3048_FnCallExpr> _1d6b354cb_build_fn_call(_1d6b30c57_ExprBuilder*, jule::Ptr<_1ee538d51_Token>&, jule::Ptr<_1d6b2e7c2_CallData>&);
inline jule::Any _1d6b3580b_build_parentheses_range(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b03ec_UnsafeExpr> _1d6b35b2a_build_unsafe_expr(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b35e38_build_anon_fn(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Any _1d6b36246_build_unsafe(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b3660e_push_range_lit_part(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>, jule::Ptr<_1ee538d51_Token>, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b3693e_get_brace_range_lit_expr_parts(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b39c7_FieldExprPair> _1d6b36c5d_build_field_expr_pair(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55adbae_Expr> _1d6b3706b_build_struct_lit_expr(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Ptr<_1d55adbae_Expr>> _1d6b37379_build_struct_lit_exprs(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b4225_StructLit> _1d6b376a9_build_typed_struct_literal(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55adbae_Expr> _1d6b379c8_build_brace_lit_part(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b4698_BraceLit> _1d6b37cd6_build_brace_lit(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Any _1d6b380e4_build_brace_range(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b38402_get_enumerable_parts(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b5633_SliceExpr> _1d6b38710_build_slice(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b5ec4_IndexingExpr> _1d6b38b61_build_indexing(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>, jule::Slice<jule::Ptr<_1ee538d51_Token>>, jule::Ptr<_1ee538d51_Token>);
inline jule::Ptr<_1d55b65ce_SlicingExpr> _1d6b39205_build_slicing(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64&, jule::Ptr<_1ee538d51_Token>&, jule::Ptr<_1ee538d51_Token>);
inline jule::Any _1d6b39513_build_bracket_range(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Any _1d6b39821_build_data(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b293d_BinopExpr> _1d6b39bc8_build_binop(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64);
inline jule::Any _1d6b39ed6_build(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Any _1d6b3a2e4_build_kind(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55adbae_Expr> _1d6b3a602_build_from_tokens(_1d6b30c57_ExprBuilder*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
struct _1d6b30c57_ExprBuilder {
	jule::Ptr<_1d6b3e55c_Parser> _field_p = jule::Ptr<_1d6b3e55c_Parser>();
	

	_1d6b30c57_ExprBuilder(void) = default;

	inline bool operator==(_1d6b30c57_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1d6b30c57_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1d6b3aed7_AssignInfo {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_l = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_r = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Ptr<_1ee538d51_Token> _field_setter = jule::Ptr<_1ee538d51_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1d6b3aed7_AssignInfo(void) = default;

	inline bool operator==(_1d6b3aed7_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1d6b3aed7_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1d6b3e88c_stop(_1d6b3e55c_Parser*);
inline jule::Bool _1d6b3eb01_stopped(_1d6b3e55c_Parser*);
inline void _1d6b3eeb9_push_err(_1d6b3e55c_Parser*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d6b402d8_push_suggestion(_1d6b3e55c_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d55adbae_Expr> _1d6b405e6_build_expr(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d5575c86_Directive> _1d6b40904_build_directive(_1d6b3e55c_Parser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b40b79_push_directive(_1d6b3e55c_Parser*, jule::Ptr<_1d5575c86_Directive>);
inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b41031_build_scope(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Ptr<_1ee538d51_Token>);
inline std::tuple<jule::Ptr<_1d55a968d_TypeDecl>,jule::Bool> _1d6b41482___build_type(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1d55a968d_TypeDecl>,jule::Bool> _1d6b418d3_build_type(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1d55c0dad_TypeAliasDecl> _1d6b41be1_build_type_alias_decl(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b42032_build_var_type_and_expr(jule::Ptr<_1d6b3e55c_Parser>, jule::Ptr<_1d55bc54c_VarDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b422da_build_var_common(jule::Ptr<_1d6b3e55c_Parser>, jule::Ptr<_1d55bc54c_VarDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b426a3_build_var_begin(_1d6b3e55c_Parser*, jule::Ptr<_1d55bc54c_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b429b1_build_var(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55b6d3d_GenericDecl> _1d6b42cbe_build_generic(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _1d6b43176_build_generics(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Ptr<_1ee538d51_Token>&);
inline jule::Ptr<_1d55ba24d_ParamDecl> _1d6b43484_build_self_param(_1d6b3e55c_Parser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b4384c_param_type_begin(_1d6b3e55c_Parser*, jule::Ptr<_1d55ba24d_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b43b6b_build_param_type(jule::Ptr<_1d6b3e55c_Parser>, jule::Ptr<_1d55ba24d_ParamDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b43e8a_build_param_body(jule::Ptr<_1d6b3e55c_Parser>, jule::Ptr<_1d55ba24d_ParamDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55ba24d_ParamDecl> _1d6b44298_build_param(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b4451d_check_params(_1d6b3e55c_Parser*, jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>> _1d6b448c5_build_params(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1d55ac7a1_RetTypeDecl>,jule::Bool> _1d6b44c7c_build_multi_ret_type(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1d55ac7a1_RetTypeDecl>,jule::Bool> _1d6b45134_build_ret_type(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64&);
inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b45585_build_fn_prototype(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b459d6_build_fn(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1ee538d51_Token>> _1d6b45ce4_get_use_decl_selectors(_1d6b3e55c_Parser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b46113_build_cpp_use_decl(_1d6b3e55c_Parser*, jule::Ptr<_1d55c2299_UseDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b46432_build_std_use_decl(_1d6b3e55c_Parser*, jule::Ptr<_1d55c2299_UseDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b46751_build_ident_use_decl(_1d6b3e55c_Parser*, jule::Ptr<_1d55c2299_UseDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b46a70_parse_use_decl(_1d6b3e55c_Parser*, jule::Ptr<_1d55c2299_UseDecl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55c2299_UseDecl> _1d6b46e27_build_use_decl(_1d6b3e55c_Parser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>, jule::Bool);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b47301_build_type_enum_item_kind(jule::Ptr<_1d6b3e55c_Parser>, jule::I64&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>> _1d6b47620_build_type_enum_items(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55c3e49_TypeEnumDecl> _1d6b4792d_build_type_enum_decl(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55adbae_Expr> _1d6b47cd5_build_enum_item_expr(jule::Ptr<_1d6b3e55c_Parser>, jule::I64&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>> _1d6b480e3_build_enum_items(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55c3245_EnumDecl> _1d6b48401_build_enum_decl(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Any _1d6b4870e_build_node_enum_decl(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55c4499_FieldDecl> _1d6b48a1c_build_field(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Slice<jule::Ptr<_1d55c4499_FieldDecl>> _1d6b48d4c_build_struct_decl_fields(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55c4d07_StructDecl> _1d6b4916b_build_struct_decl(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b493e1_check_method_receiver(_1d6b3e55c_Parser*, jule::Ptr<_1d55bb56d_FnDecl>&);
inline jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>> _1d6b496ee_build_trait_methods(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55c5412_TraitDecl> _1d6b49a0c_build_trait_decl(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b49d1a_build_cpp_link_fn(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b4a128_build_cpp_link_var(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55c4d07_StructDecl> _1d6b4a436_build_cpp_link_struct(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55c0dad_TypeAliasDecl> _1d6b4a766_build_cpp_link_type_alias(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d55c2299_UseDecl> _1d6b4aa85_build_cpp_link_use(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Any _1d6b4ad93_build_cpp_link(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b4b1a1_get_method(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b4b4c0_parse_impl_body(jule::Ptr<_1d6b3e55c_Parser>, jule::Ptr<_1d55c5a1c_Impl>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55c5a1c_Impl> _1d6b4b7cd_build_impl(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Any _1d6b4badb_build_node_data(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b4be0a_apply_fn_meta(_1d6b3e55c_Parser*, jule::Ptr<_1d55bb56d_FnDecl>&, jule::Bool);
inline void _1d6b4c229_apply_meta(_1d6b3e55c_Parser*, _1d557588a_Node&, jule::Bool);
inline std::tuple<jule::Bool,jule::Any> _1d6b4c559_build_general_scope_node_data(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline void _1d6b4c7e0_push_use_decl(jule::Ptr<_1d6b3e55c_Parser>, jule::Ptr<_1d55c2299_UseDecl>&);
inline jule::Bool _1d6b4caed_push_meta_nodes(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline _1d557588a_Node _1d6b4ce0b_parse_node(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b4d181_append_node(jule::Ptr<_1d6b3e55c_Parser>, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b4d5e3_remove_range(_1d6b3e55c_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Slice<jule::I64>&);
inline void _1d6b4d9cd_push_wrong_order_close_err(_1d6b3e55c_Parser*, jule::Ptr<_1ee538d51_Token>&, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Slice<jule::I64>&);
inline void _1d6b4de51_push_range_close(_1d6b3e55c_Parser*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Slice<jule::I64>&);
inline void _1d6b4e1c6_check_ranges(_1d6b3e55c_Parser*, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline void _1d6b4e44b_parse(jule::Ptr<_1d6b3e55c_Parser>, jule::Ptr<_1ee53e1db_File>&);
struct _1d6b3e55c_Parser {
	jule::Ptr<_1d5574b0e_Ast> _field_ast = jule::Ptr<_1d5574b0e_Ast>();
	jule::Slice<jule::Ptr<_1d5575c86_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d5575c86_Directive>>();
	jule::Slice<_21868a483_Log> _field_errors = jule::Slice<_21868a483_Log>();
	

	_1d6b3e55c_Parser(void) = default;

	inline bool operator==(_1d6b3e55c_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d6b3e55c_Parser _other) { return !this->operator==(_other); }


};
inline void _1d6b50eca_push_err(_1d6b50936_TypeBuilder*, jule::Ptr<_1ee538d51_Token>, jule::Str);
inline void _1d6b512e9_push_suggestion(_1d6b50936_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b5155d_build_prim(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b517c2_build_namespace(_1d6b50936_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _1d6b51a36_build_generics(_1d6b50936_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b51c9a_ident_generics(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b5200e_build_ident(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b52273_build_cpp_link(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b524d7_build_fn(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b5274b_build_ptr(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b529b0_build_sptr(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b52c24_build_op(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b52e88_build_slc(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b531ec_build_arr(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b535a4_build_map(_1d6b50936_TypeBuilder*, jule::I64, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b53818_build_enumerable(_1d6b50936_TypeBuilder*);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b53a7c_step(_1d6b50936_TypeBuilder*);
inline std::tuple<jule::Ptr<_1d55a968d_TypeDecl>,jule::Bool> _1d6b53ce1_build(_1d6b50936_TypeBuilder*);
struct _1d6b50936_TypeBuilder {
	jule::Ptr<_1d6b3e55c_Parser> _field_p = jule::Ptr<_1d6b3e55c_Parser>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _field_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1d6b50936_TypeBuilder(void) = default;

	inline bool operator==(_1d6b50936_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1d6b50936_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1d647966c_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_1d647966c_CompileInfo(void) = default;

	inline bool operator==(_1d647966c_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1d647966c_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1d647b020_push_err(_1d647a9c0_DirectiveEval*, jule::Ptr<_1ee538d51_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d647b3c7_split_operans(_1d647a9c0_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Bool _1d647b6d5_eval_directive_ident(_1d647a9c0_DirectiveEval*, jule::Str);
inline jule::Bool _1d647b9e3_eval_directive_part(_1d647a9c0_DirectiveEval*, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Bool _1d647bc57_eval(_1d647a9c0_DirectiveEval*);
struct _1d647a9c0_DirectiveEval {
	jule::Slice<_21868a483_Log> _field_logs = jule::Slice<_21868a483_Log>();
	jule::Ptr<_1d5575c86_Directive> _field_d = jule::Ptr<_1d5575c86_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1d647a9c0_DirectiveEval(void) = default;

	inline bool operator==(_1d647a9c0_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1d647a9c0_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d6573689_JuleImporter> static__1d65874b1_new(_1d647966c_CompileInfo);
inline jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>> _1d6599d86_all_packages(_1d6573689_JuleImporter*);
inline void _1d659e3a7_set_mod_path(_1d6573689_JuleImporter*, jule::Str);
inline jule::Str _1d65cd040_get_mod_path(_1d6573689_JuleImporter*);
inline jule::Str _1d65dd490_mod_by_id(_1d6573689_JuleImporter*, jule::I64);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d65e77b8_get_import(_1d6573689_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1d5574b0e_Ast>>,jule::Slice<_21868a483_Log>> _1d65e8753_import_package(_1d6573689_JuleImporter*, jule::Str, jule::Bool);
inline void _1d6609a72_imported(_1d6573689_JuleImporter*, jule::Ptr<_1d62743bd_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_21868a483_Log>> _1d66239d1_is_pass_build_directives(_1d6573689_JuleImporter*, jule::Ptr<_1d5574b0e_Ast>&);
struct _1d6573689_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1d6573689_JuleImporter(void) = default;

	inline bool operator==(_1d6573689_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1d6573689_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1d67916a9_OrderedDefines {
	jule::Slice<jule::Ptr<_1d5599dba_Struct>> _field_structs = jule::Slice<jule::Ptr<_1d5599dba_Struct>>();
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_globals = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	

	_1d67916a9_OrderedDefines(void) = default;

	inline bool operator==(_1d67916a9_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1d67916a9_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d962ea2d_is_common_ordered(jule::Slice<jule::Ptr<_1d5599dba_Struct>>&, jule::Ptr<_1d5599dba_Struct>);
inline jule::Bool _1d9637ddd_is_common_ordered(jule::Slice<jule::Ptr<_1d6298ea3_Var>>&, jule::Ptr<_1d6298ea3_Var>);
inline void _1d962aa90_order_common(jule::Slice<jule::Ptr<_1d5599dba_Struct>>&);
inline void _1d962b3cb_order_common(jule::Slice<jule::Ptr<_1d6298ea3_Var>>&);
inline void static__1d6776e0e_order_structures(jule::Slice<jule::Ptr<_1d5599dba_Struct>>&);
inline void static__1d68da24d_order_vars(jule::Slice<jule::Ptr<_1d6298ea3_Var>>&);
struct _1d6419909_DefineOrderer {
	

	_1d6419909_DefineOrderer(void) = default;

	inline bool operator==(_1d6419909_DefineOrderer _other) { return true; }

	inline bool operator!=(_1d6419909_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _1d6c19417_LiveTable {
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _field_vars = jule::Slice<jule::Ptr<_1d6298ea3_Var>>();
	jule::Slice<jule::Ptr<_1d567d498_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1d567d498_FnIns>>();
	jule::Slice<jule::Ptr<_1d55c62d1_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1d55c62d1_StructIns>>();
	jule::Slice<jule::Ptr<_1d59c3e1a_Trait>> _field_traits = jule::Slice<jule::Ptr<_1d59c3e1a_Trait>>();
	

	_1d6c19417_LiveTable(void) = default;

	inline bool operator==(_1d6c19417_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1d6c19417_LiveTable _other) { return !this->operator==(_other); }


};
inline void _1d6c4bec7_optimize_child(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d6255beb_Scope>&);
inline void _1d6c4c26e_optimize_body_child_exceptional(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d6255beb_Scope>&);
inline void _1d6c4c505_optimize_body_child(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d6255beb_Scope>&);
inline void _1d6c4c77a_optimize_expr_model(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Any&);
inline void _1d6c4c956_eliminate_followed(_1d6c4b9ee_ScopeDeadCode*);
inline void _1d6c4cbcb_push_goto(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d625843a_GotoSt>);
inline void _1d6c4ce51_push_label(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d625814e_Label>);
inline void _1d6c4d1c6_optimize_range_iter(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d62575b0_RangeIter>);
inline void _1d6c4d44b_optimize_while_iter(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d6256bca_WhileIter>);
inline void _1d6c4d6c1_optimize_inf_iter(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d6256757_InfIter>);
inline void _1d6c4d946_optimize_conditional(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d625646b_Conditional>);
inline void _1d6c4dbbb_optimize_match(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d625965b_Match>);
inline void _1d6c4de41_optimize_assign(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d6258c65_Assign>);
inline void _1d6c4e1b6_optimize_multi_assign(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Ptr<_1d625911c_MultiAssign>);
inline void _1d6c4e43b_optimize_stmt(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>, jule::Any);
inline void _1d6c4e617_optimize_stmts(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>);
struct _1d6c4b9ee_ScopeDeadCode {
	jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _field_parent = jule::Ptr<_1d6c4b9ee_ScopeDeadCode>();
	jule::Ptr<_1d6255beb_Scope> _field_s = jule::Ptr<_1d6255beb_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1d625814e_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1d625814e_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1d625843a_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1d625843a_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1d6c4b9ee_ScopeDeadCode(void) = default;

	inline bool operator==(_1d6c4b9ee_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1d6c4b9ee_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1d6c5098c_ExprDeadCode static__1d6c51086_new(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>&);
inline void _1d6c5130b_binary(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d567337d_BinopExprModel>);
inline void _1d6c51581_unary(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d567356a_UnaryExprModel>);
inline void _1d6c51806_structure_lit(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5673944_StructLitExprModel>);
inline void _1d6c51a7b_alloc_structure(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5673b31_AllocStructLitExprModel>);
inline void _1d6c51d01_casting(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5673d1d_CastingExprModel>);
inline void _1d6c52076_args(_1d6c5098c_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _1d6c522eb_func_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d567400a_FnCallExprModel>);
inline void _1d6c52571_slice(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56741e7_SliceExprModel>);
inline void _1d6c527e6_array(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d567566b_ArrayExprModel>);
inline void _1d6c52a6b_indexing(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56743d4_IndexingExprModel>);
inline void _1d6c52ce1_anon_func(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56745c1_AnonFnExprModel>);
inline void _1d6c53066_map(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d567499a_MapExprModel>);
inline void _1d6c532db_slicing(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5674b87_SlicingExprModel>);
inline void _1d6c53561_trait_sub(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5674d74_TraitSubIdentExprModel>);
inline void _1d6c537d6_structure_sub(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5675292_StructSubIdentExprModel>);
inline void _1d6c53a5b_common_sub(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5675a45_CommonSubIdentExprModel>);
inline void _1d6c53cd1_tuple(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5675c32_TupleExprModel>);
inline void _1d6c54056_new_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>);
inline void _1d6c542cb_out_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>);
inline void _1d6c54551_outln_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>);
inline void _1d6c547c6_panic_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>);
inline void _1d6c54a4b_assert_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>);
inline void _1d6c54cc1_error_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>);
inline void _1d6c55046_make_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>);
inline void _1d6c552bb_append_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>);
inline void _1d6c55541_clone_call(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>);
inline void _1d6c557b6_sizeof(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5675061_SizeofExprModel>);
inline void _1d6c55a3b_alignof(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d56777c2_AlignofExprModel>);
inline void _1d6c55cb1_integrated_to_str(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>);
inline void _1d6c56036_free(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5678075_FreeExprModel>);
inline void _1d6c562ab_backend_emit(_1d6c5098c_ExprDeadCode*, jule::Ptr<_1d5677d88_BackendEmitExprModel>);
inline void _1d6c56531_optimize(_1d6c5098c_ExprDeadCode*, jule::Any&);
struct _1d6c5098c_ExprDeadCode {
	jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _field_s = jule::Ptr<_1d6c4b9ee_ScopeDeadCode>();
	

	_1d6c5098c_ExprDeadCode(void) = default;

	inline bool operator==(_1d6c5098c_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1d6c5098c_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _1d50b232d_UnsafeBinopExprModel {
	jule::Ptr<_1d567337d_BinopExprModel> _field_node = jule::Ptr<_1d567337d_BinopExprModel>();
	

	_1d50b232d_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1d50b232d_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1d50b232d_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1d53dbc84_UnsafeIndexingExprModel {
	jule::Ptr<_1d56743d4_IndexingExprModel> _field_node = jule::Ptr<_1d56743d4_IndexingExprModel>();
	

	_1d53dbc84_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1d53dbc84_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1d53dbc84_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1d50e0636_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1d56741e7_SliceExprModel> _field_elems = jule::Ptr<_1d56741e7_SliceExprModel>();
	

	_1d50e0636_PushToSliceExprModel(void) = default;

	inline bool operator==(_1d50e0636_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1d50e0636_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1d53aee66_MutSlicingExprModel {
	jule::Ptr<_1ee538d51_Token> _field_token = jule::Ptr<_1ee538d51_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1d53aee66_MutSlicingExprModel(void) = default;

	inline bool operator==(_1d53aee66_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1d53aee66_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1d52e0715_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_1d52e0715_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1d52e0715_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d52e0715_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d52c0959_ScopeOptimizer> static__230962b61_new(jule::Ptr<_1d6255beb_Scope>);
inline void _1d4e05517_set_current_stmt(_1d52c0959_ScopeOptimizer*, jule::Any);
inline void _1d4e0c794_optimize_data(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d62e16b0_Data>);
inline void _1d4e16e30_optimize_var(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d6298ea3_Var>);
inline void _1d4e24228_optimize_conditional(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d625646b_Conditional>);
inline void _1d4e45876_build_default_constat_true_case(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d625a1a6_Case>, jule::I64&, jule::Ptr<_1d625965b_Match>&);
inline void _1d4e5d2a6_optimize_match(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d625965b_Match>);
inline void _1d4e800ec_optimize_range_iter(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d62575b0_RangeIter>);
inline void _1d4e86d90_optimize_while_iter(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d6256bca_WhileIter>);
inline jule::Bool _1d4e9890c_substr(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d6258c65_Assign>);
inline jule::Bool _1d4ea8873_str_insert(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d6258c65_Assign>);
inline jule::Bool _1d4eb1150_str_assign(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d6258c65_Assign>);
inline void _1d502e4dc_optimize_assign(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d6258c65_Assign>);
inline void _1d503e013_optimize_multi_assign(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d625911c_MultiAssign>);
inline void _1d504da39_optimize_ret(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d625abce_RetSt>);
inline void _1d50513ee_optimize_stmt(_1d52c0959_ScopeOptimizer*, jule::Any);
inline void _1d5058ba9_optimize_child(_1d52c0959_ScopeOptimizer*, jule::Ptr<_1d6255beb_Scope>);
inline void _1d505b607_optimize(_1d52c0959_ScopeOptimizer*);
struct _1d52c0959_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1d6255beb_Scope> _field_scope = jule::Ptr<_1d6255beb_Scope>();
	

	_1d52c0959_ScopeOptimizer(void) = default;

	inline bool operator==(_1d52c0959_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d52c0959_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1d51394c6_optimize(jule::Any&);
inline jule::Bool _1d51444c0_str_cond(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d567337d_BinopExprModel>);
inline void _1d514c660_binary(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d567337d_BinopExprModel>);
inline void _1d519c4d4_unary(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d567356a_UnaryExprModel>);
inline void _1d50e7b5a_structure_lit(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5673944_StructLitExprModel>);
inline void _1d51a4420_alloc_structure(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5673b31_AllocStructLitExprModel>);
inline void _1d51ac22a_casting(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5673d1d_CastingExprModel>);
inline void _1d51bae2b_args(_1d52bce51_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _1d51c54da_scope(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d6255beb_Scope>&);
inline void _1d51c6530_func_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d567400a_FnCallExprModel>);
inline void _1d51d5b16_slice(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56741e7_SliceExprModel>);
inline void _1d52c7686_array(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d567566b_ArrayExprModel>);
inline void _1d5314492_indexing(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56743d4_IndexingExprModel>);
inline void _1d5320d2d_anon_func(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56745c1_AnonFnExprModel>);
inline void _1d53214d2_map(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d567499a_MapExprModel>);
inline void _1d5321cb8_slicing(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5674b87_SlicingExprModel>);
inline void _1d53317ab_trait_sub(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5674d74_TraitSubIdentExprModel>);
inline void _1d531e4ad_structure_sub(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5675292_StructSubIdentExprModel>);
inline void _1d53be7a0_common_sub(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5675a45_CommonSubIdentExprModel>);
inline void _1d53c4772_tuple(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5675c32_TupleExprModel>);
inline void _1d53c5168_new_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>);
inline void _1d53c7940_out_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>);
inline void _1d53cc082_outln_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>);
inline void _1d53e87b8_panic_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>);
inline void _1d54a849e_assert_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>);
inline void _1d54ad65d_error_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>);
inline void _1d54bc837_make_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>);
inline void _1d54c1c48_append_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>);
inline void _1d54e70c0_clone_call(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>);
inline void _1d550560b_sizeof(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5675061_SizeofExprModel>);
inline void _1d550e615_alignof(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d56777c2_AlignofExprModel>);
inline void _1d55233b5_integrated_to_str(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>);
inline void _1d4e31840_free(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5678075_FreeExprModel>);
inline void _1d4e3b6b3_backend_emit(_1d52bce51_ExprOptimizer*, jule::Ptr<_1d5677d88_BackendEmitExprModel>);
inline void _1d4eb9d5c_do(_1d52bce51_ExprOptimizer*);
struct _1d52bce51_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1d52bce51_ExprOptimizer(void) = default;

	inline bool operator==(_1d52bce51_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1d52bce51_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d6bbca80_Optimizer> static__1d6b85c35_new(jule::Ptr<_1d6998e55_IR>&);
inline void _1d6bb635e_optimize_global(_1d6bbca80_Optimizer*, jule::Ptr<_1d6298ea3_Var>&);
inline void _1d6bb9719_optimize_function(_1d6bbca80_Optimizer*, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d6bcdb29_optimize_struct(_1d6bbca80_Optimizer*, jule::Ptr<_1d5599dba_Struct>&);
inline void _1d6bce861_optimize_globals(_1d6bbca80_Optimizer*, jule::Ptr<_1d6277327_Package>&);
inline void _1d6be03aa_optimize_functions(_1d6bbca80_Optimizer*, jule::Ptr<_1d6277327_Package>&);
inline void _1d6be0982_optimize_structs(_1d6bbca80_Optimizer*, jule::Ptr<_1d6277327_Package>&);
inline void _1d6c1ab11_optimize_package(_1d6bbca80_Optimizer*, jule::Ptr<_1d6277327_Package>&);
inline void _1d6c23b3b_optimize(_1d6bbca80_Optimizer*);
struct _1d6bbca80_Optimizer {
	jule::Ptr<_1d6998e55_IR> _field_ir = jule::Ptr<_1d6998e55_IR>();
	

	_1d6bbca80_Optimizer(void) = default;

	inline bool operator==(_1d6bbca80_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1d6bbca80_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1d6c69753_reset(void);
inline void static__1d6c6ab2d_print(jule::Str, jule::Str);
struct _1d6c6a941_AnsiEscape {
	

	_1d6c6a941_AnsiEscape(void) = default;

	inline bool operator==(_1d6c6a941_AnsiEscape _other) { return true; }

	inline bool operator!=(_1d6c6a941_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1d6c6c217_log_flat(_21868a483_Log&);
inline void static__1d6c6c426_log_error(_21868a483_Log&);
inline void static__1d6c6c635_log(_21868a483_Log&);
inline void static__1d6c6c844_print_logs(jule::Slice<_21868a483_Log>&);
struct _1d6c6be5e_Logger {
	

	_1d6c6be5e_Logger(void) = default;

	inline bool operator==(_1d6c6be5e_Logger _other) { return true; }

	inline bool operator!=(_1d6c6be5e_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1d7350aa3_unix(_1d73506eb_AbsTime*);
struct _1d73506eb_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1d73506eb_AbsTime(void) = default;

	inline bool operator==(_1d73506eb_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1d73506eb_AbsTime _other) { return !this->operator==(_other); }


};
inline _1d7350d8e_Time static__1d7351235_unix(jule::U64);
inline _1d7350d8e_Time static__1d7351433_now(void);
inline jule::U64 _1d7351884_unix(_1d7350d8e_Time*);
inline jule::U64 _1d7351ae8_day(_1d7350d8e_Time*);
inline jule::U64 _1d7351d5c_month(_1d7350d8e_Time*);
inline jule::U64 _1d73520c1_year(_1d7350d8e_Time*);
inline jule::U64 _1d7352335_second(_1d7350d8e_Time*);
inline jule::U64 _1d7352599_minute(_1d7350d8e_Time*);
inline jule::U64 _1d735280d_hour(_1d7350d8e_Time*);
inline _1d73506eb_AbsTime _1d7352a72_abs(_1d7350d8e_Time*);
struct _1d7350d8e_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1d7350d8e_Time(void) = default;

	inline bool operator==(_1d7350d8e_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1d7350d8e_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d72c9752_ScopeCoder> static__1d72c9d6d_new(jule::Ptr<_1d735658c_ObjectCoder>&);
inline void _1d72ca0e3_range_index_iter(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d62575b0_RangeIter>&);
inline void _1d72ca368_range_hashmap_iter(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d62575b0_RangeIter>&);
inline void _1d72ca5dd_if_case(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6255dd8_If>);
inline void _1d72ca863_conditional(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625646b_Conditional>);
inline void _1d72caad8_inf_iter(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6256757_InfIter>);
inline void _1d72cad5d_while_iter(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6256bca_WhileIter>);
inline void _1d72cb0d3_range_iter(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d62575b0_RangeIter>);
inline void _1d72cb358_cont(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d62579ab_ContSt>);
inline void _1d72cb5cd_label(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625814e_Label>);
inline void _1d72cb853_goto_st(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625843a_GotoSt>);
inline void _1d72cbac8_postfix(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d62587e2_Postfix>);
inline void _1d72cbd4d_assign(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6258c65_Assign>);
inline void _1d72cc0c3_multi_assign(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625911c_MultiAssign>);
inline jule::Fn<void(void)> _1d72cc3d1_match_expr(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625965b_Match>);
inline void _1d72cc700_case(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625965b_Match>, jule::Ptr<_1d625a1a6_Case>);
inline void _1d72cc975_match_st(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625965b_Match>);
inline void _1d72ccbea_fall_st(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625a75b_FallSt>);
inline void _1d72cce70_break_st(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6257d63_BreakSt>);
inline void _1d72cd1e5_ret_with_vars(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625abce_RetSt>);
inline void _1d72cd46a_ret_tuple(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625abce_RetSt>);
inline void _1d72cd6e0_ret_with_exprs(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625abce_RetSt>);
inline void _1d72cd965_ret_st(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d625abce_RetSt>);
inline void _1d72cde60_var(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6298ea3_Var>);
inline void _1d72ce1d5_st(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Any);
inline void _1d72ce45a_scope_stmts(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6255beb_Scope>&);
inline void _1d72ce6d0_scope(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d6255beb_Scope>);
inline void _1d72ce955_func_scope(jule::Ptr<_1d72c9752_ScopeCoder>, jule::Ptr<_1d567d498_FnIns>);
struct _1d72c9752_ScopeCoder {
	jule::Ptr<_1d735658c_ObjectCoder> _field_oc = jule::Ptr<_1d735658c_ObjectCoder>();
	

	_1d72c9752_ScopeCoder(void) = default;

	inline bool operator==(_1d72c9752_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d72c9752_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d72d22c6_ExprCoder> static__1d72d26c2_new(jule::Ptr<_1d735658c_ObjectCoder>&);
inline void _1d72d2947_string(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d561288e_Const>&);
inline void _1d72d2bbc_boolean(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d561288e_Const>&);
inline void _1d72d2d98_nil_lit(jule::Ptr<_1d72d22c6_ExprCoder>);
inline jule::Bool _1d72d31a6_ftoa_special_cases(jule::Ptr<_1d72d22c6_ExprCoder>, jule::F64&);
inline void _1d72d342b_float32(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d561288e_Const>&);
inline void _1d72d36a1_float64(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d561288e_Const>&);
inline void _1d72d39c0_constant(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d561288e_Const>, jule::Bool);
inline void _1d72d3d88_div_by_zero_binary(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1ee538d51_Token>&, jule::Ptr<_1d5654dba_OperandExprModel>&, jule::Ptr<_1d5654dba_OperandExprModel>&);
inline void _1d72d410d_unsafe_binary(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567337d_BinopExprModel>);
inline void _1d72d4383_binary(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567337d_BinopExprModel>);
inline void _1d72d4608_var(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d6298ea3_Var>);
inline void _1d72d487d_structure_ins(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d55c62d1_StructIns>);
inline void _1d72d4b03_unary(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567356a_UnaryExprModel>);
inline void _1d72d4d78_structure_lit(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5673944_StructLitExprModel>);
inline void _1d72d50ed_alloc_structure(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5673b31_AllocStructLitExprModel>);
inline void _1d72d5373_casting(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5673d1d_CastingExprModel>);
inline void _1d72d55e8_args(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Slice<jule::Any>);
inline void _1d72d586d_model_for_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Any);
inline void _1d72d5ae3_push_call_inf(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567400a_FnCallExprModel>&);
inline jule::Bool _1d72d5e01_is_wrapped(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567400a_FnCallExprModel>&);
inline void _1d72d6176_pure_func_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567400a_FnCallExprModel>&);
inline void _1d72d63eb_func_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567400a_FnCallExprModel>);
inline void _1d72d6671_slice(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56741e7_SliceExprModel>);
inline void _1d72d68e6_indexing(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56743d4_IndexingExprModel>);
inline void _1d72d6b6b_unsafe_indexing(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d53dbc84_UnsafeIndexingExprModel>);
inline void _1d72d6de1_anon_func(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56745c1_AnonFnExprModel>);
inline void _1d72d7166_map(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567499a_MapExprModel>);
inline void _1d72d73db_slicing(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5674b87_SlicingExprModel>);
inline void _1d72d7661_trait_sub(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5674d74_TraitSubIdentExprModel>);
inline void _1d72d78d6_structure_sub(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5675292_StructSubIdentExprModel>);
inline void _1d72d7b5b_common_ident(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5675858_CommonIdentExprModel>);
inline void _1d72d7dd1_common_sub(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5675a45_CommonSubIdentExprModel>);
inline void _1d72d8156_array(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567566b_ArrayExprModel>);
inline void _1d72d83cb_func_ins_common(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567d498_FnIns>);
inline void _1d72d8651_func_ins(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567d498_FnIns>);
inline void _1d72d88c6_tuple(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5675c32_TupleExprModel>);
inline void _1d72d8b4b_new_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>);
inline void _1d72d8dc1_out_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>);
inline void _1d72d9146_outln_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>);
inline void _1d72d93bb_panic_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>);
inline void _1d72d9641_assert_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>);
inline void _1d72d98b6_error_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>);
inline void _1d72d9b3b_copy_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5676e75_BuiltinCopyCallExprModel>);
inline void _1d72d9db1_make_call_slice(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>&);
inline void _1d72da136_make_call_str(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>&);
inline void _1d72da3ab_make_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>);
inline void _1d72da631_push_to_slice(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d50e0636_PushToSliceExprModel>);
inline void _1d72da8a6_append_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>);
inline void _1d72dab2b_clone_call(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>);
inline void _1d72dada1_sizeof(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5675061_SizeofExprModel>);
inline void _1d72db126_alignof(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56777c2_AlignofExprModel>);
inline jule::Str _1d72db434_rune_lit(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d56779ae_RuneExprModel>);
inline void _1d72db6a9_structure_static(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d567547e_StructStaticIdentExprModel>);
inline void _1d72db92e_integrated_to_str(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>);
inline void _1d72dbba4_backend_emit(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5677d88_BackendEmitExprModel>);
inline void _1d72dbe29_free(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d5678075_FreeExprModel>);
inline void _1d72dc19e_mut_slicing(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d53aee66_MutSlicingExprModel>);
inline void _1d72dc424_str_insert_begin(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d52e0715_StrInsertBeginExprModel>);
inline void _1d72dc699_model(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Any);
inline void _1d72dc91e_expr(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Any);
inline void _1d72dcb94_val(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d62e2738_Value>);
inline void _1d72dce19_init_expr(jule::Ptr<_1d72d22c6_ExprCoder>, jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d72d22c6_ExprCoder {
	jule::Ptr<_1d735658c_ObjectCoder> _field_oc = jule::Ptr<_1d735658c_ObjectCoder>();
	

	_1d72d22c6_ExprCoder(void) = default;

	inline bool operator==(_1d72d22c6_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d72d22c6_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1d72e047c_clone_func_decl(jule::Ptr<_1d5599dba_Struct>&);
inline jule::Str static__1d72e0724_clone_func_def(jule::Ptr<_1d5599dba_Struct>&);
struct _1d72e01c4_DeriveCoder {
	

	_1d72e01c4_DeriveCoder(void) = default;

	inline bool operator==(_1d72e01c4_DeriveCoder _other) { return true; }

	inline bool operator!=(_1d72e01c4_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d72e1604_TestCoder> static__1d72e1a77_new(jule::Ptr<_1d735658c_ObjectCoder>&);
inline jule::Ptr<_1d62743bd_ImportInfo> _1d72e1cdb_find_testing_package(jule::Ptr<_1d72e1604_TestCoder>);
inline void _1d72e2061_append_test(jule::Ptr<_1d72e1604_TestCoder>, jule::Ptr<_1d567d498_FnIns>);
inline void _1d72e22d6_append_package_tests(jule::Ptr<_1d72e1604_TestCoder>, jule::Ptr<_1d6277327_Package>&);
inline jule::Bool _1d72e254a_ready_testing_package(jule::Ptr<_1d72e1604_TestCoder>);
inline void _1d72e2726_call_tm_reset(jule::Ptr<_1d72e1604_TestCoder>);
inline void _1d72e2902_call_tm_failed(jule::Ptr<_1d72e1604_TestCoder>);
inline void _1d72e2acd_call_tm_skipped(jule::Ptr<_1d72e1604_TestCoder>);
inline void _1d72e2ca9_serialize(jule::Ptr<_1d72e1604_TestCoder>);
struct _1d72e1604_TestCoder {
	jule::Ptr<_1d55c62d1_StructIns> _field_t = jule::Ptr<_1d55c62d1_StructIns>();
	jule::Ptr<_1d567a7e7_Fn> _field_tm_reset = jule::Ptr<_1d567a7e7_Fn>();
	jule::Ptr<_1d567a7e7_Fn> _field_tm_failed = jule::Ptr<_1d567a7e7_Fn>();
	jule::Ptr<_1d567a7e7_Fn> _field_tm_skipped = jule::Ptr<_1d567a7e7_Fn>();
	jule::Ptr<_1d735658c_ObjectCoder> _field_oc = jule::Ptr<_1d735658c_ObjectCoder>();
	

	_1d72e1604_TestCoder(void) = default;

	inline bool operator==(_1d72e1604_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1d72e1604_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1d72e4261_to_out(jule::Str&, jule::Uintptr);
inline jule::Str static__1d72e464b_to_local(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1d72e48e3_func(jule::Ptr<_1d567a7e7_Fn>&);
inline jule::Str static__1d72e4b8a_func_ins(jule::Ptr<_1d567d498_FnIns>&);
inline jule::Str static__1d72e4e32_trait_decl(jule::Ptr<_1d59c3e1a_Trait>);
inline jule::Str static__1d72e51c9_param(jule::Ptr<_1d5678eaa_Param>&);
inline jule::Str static__1d72e5471_structure(jule::Ptr<_1d5599dba_Struct>&);
inline jule::Str static__1d72e5718_structure_ins(jule::Ptr<_1d55c62d1_StructIns>&);
inline jule::Str static__1d72e59b0_field(jule::Ptr<_1d558c385_Field>&);
inline jule::Str static__1d72e5c57_var(jule::Ptr<_1d6298ea3_Var>);
inline jule::Str static__1d72e5eee_iter_begin(jule::Uintptr);
inline jule::Str static__1d72e6296_iter_end(jule::Uintptr);
inline jule::Str static__1d72e653d_iter_next(jule::Uintptr);
inline jule::Str static__1d72e67d5_label(jule::Str&);
inline jule::Str static__1d72e6a7c_match_end(jule::Uintptr);
inline jule::Str static__1d72e6d24_case_begin(jule::Uintptr);
struct _1d72e3c55_IdentCoder {
	

	_1d72e3c55_IdentCoder(void) = default;

	inline bool operator==(_1d72e3c55_IdentCoder _other) { return true; }

	inline bool operator!=(_1d72e3c55_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1d73561b3_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1d73561b3_SerializationInfo(void) = default;

	inline bool operator==(_1d73561b3_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1d73561b3_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1d73563a0_TraitHash {
	jule::Ptr<_1d59c3e1a_Trait> _field_t = jule::Ptr<_1d59c3e1a_Trait>();
	jule::Ptr<_1d55c62d1_StructIns> _field_s = jule::Ptr<_1d55c62d1_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1d73563a0_TraitHash(void) = default;

	inline bool operator==(_1d73563a0_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d73563a0_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1d735c3c8_to_str(_1d735c10e_CustomType*);
inline jule::Bool _1d735c6d6_equals(jule::Ptr<_1d735c10e_CustomType>, jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d735c10e_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1d735c10e_CustomType(void) = default;

	inline bool operator==(_1d735c10e_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d735c10e_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1d735ce34_to_type(jule::Str);
inline jule::Str static__1d735d1cb_prim(jule::Ptr<_1d63218aa_Prim>);
inline jule::Str static__1d735d473_tuple(jule::Ptr<_1d6326629_Tuple>);
inline jule::Str static__1d735d71a_as_sptr(jule::Str);
inline jule::Str static__1d735d9b2_as_ptr(jule::Str);
inline jule::Str static__1d735dc59_sptr(jule::Ptr<_1d632513e_Sptr>);
inline jule::Str static__1d735e001_ptr(jule::Ptr<_1d63286a3_Ptr>);
inline jule::Str static__1d735e298_enum_decl(jule::Ptr<_1d5692820_Enum>);
inline jule::Str static__1d735e540_type_enum_decl(jule::Ptr<_1d5a788b5_TypeEnum>);
inline jule::Str static__1d735e7d7_as_slice(jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Str static__1d735ea7e_slice(jule::Ptr<_1d6325a9b_Slc>);
inline jule::Str static__1d735ed26_map(jule::Ptr<_1d6327152_Map>);
inline jule::Str static__1d73600bd_trait_ident(jule::Str);
inline jule::Str static__1d7360365_trait_decl(jule::Ptr<_1d59c3e1a_Trait>);
inline jule::Str static__1d736060c_structure(jule::Ptr<_1d5599dba_Struct>);
inline jule::Str static__1d73608a4_structure_ins(jule::Ptr<_1d55c62d1_StructIns>);
inline jule::Str static__1d7360b4b_array(jule::Ptr<_1d6327c46_Arr>);
inline jule::Str static__1d736118a_param_ins(jule::Ptr<_1d567c5c9_ParamIns>&);
inline jule::Str static__1d73616c9_func_ins_result(jule::Ptr<_1d567d498_FnIns>&);
inline jule::Str static__1d7361971_anon_func(jule::Ptr<_1d567d498_FnIns>);
inline jule::Str static__1d7361c18_func(jule::Ptr<_1d567d498_FnIns>);
inline jule::Str static__1d7361eb0_kind(jule::Ptr<_1d631bdd3_TypeKind>);
struct _1d735c906_TypeCoder {
	

	_1d735c906_TypeCoder(void) = default;

	inline bool operator==(_1d735c906_TypeCoder _other) { return true; }

	inline bool operator!=(_1d735c906_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1d9973437_name(_1d9b78de0_Flag*);
inline jule::Str _1d9973569_what(_1d9b78de0_Flag*);
inline void _1d9b792ca_reset(_1d9b78de0_Flag*);
inline jule::I32 _1d9b7940c_short(_1d9b78de0_Flag*);
struct _1d9b78de0_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1d9b78de0_Flag(void) = default;

	inline bool operator==(_1d9b78de0_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1d9b78de0_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d9b7c5ec_name(_1d9b7caa3_Flag*);
inline jule::Str _1d9b7cd6c_what(_1d9b7caa3_Flag*);
inline void _1d9b7ce9e_reset(_1d9b7caa3_Flag*);
inline jule::I32 _1d9b7d0d1_short(_1d9b7caa3_Flag*);
struct _1d9b7caa3_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1d9b7caa3_Flag(void) = default;

	inline bool operator==(_1d9b7caa3_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1d9b7caa3_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d9b810d4_name(_1d9b8158a_Flag*);
inline jule::Str _1d9b81854_what(_1d9b8158a_Flag*);
inline void _1d9b81986_reset(_1d9b8158a_Flag*);
inline jule::I32 _1d9b81ab8_short(_1d9b8158a_Flag*);
struct _1d9b8158a_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1d9b8158a_Flag(void) = default;

	inline bool operator==(_1d9b8158a_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1d9b8158a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d9b84b10_name(_1d9b850b6_Flag*);
inline jule::Str _1d9b85380_what(_1d9b850b6_Flag*);
inline void _1d9b854b2_reset(_1d9b850b6_Flag*);
inline jule::I32 _1d9b855e4_short(_1d9b850b6_Flag*);
struct _1d9b850b6_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1d9b850b6_Flag(void) = default;

	inline bool operator==(_1d9b850b6_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1d9b850b6_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d9b885e7_name(_1d9b88a9d_Flag*);
inline jule::Str _1d9b88d67_what(_1d9b88a9d_Flag*);
inline void _1d9b88e99_reset(_1d9b88a9d_Flag*);
inline jule::I32 _1d9b890cb_short(_1d9b88a9d_Flag*);
struct _1d9b88a9d_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1d9b88a9d_Flag(void) = default;

	inline bool operator==(_1d9b88a9d_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1d9b88a9d_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d73986bc_FlagSet> static__1d73989a8_new(void);
inline jule::Trait<_1d7396874_CommonFlag> _1d7398e3c_find_flag(_1d73986bc_FlagSet*, jule::Str);
inline jule::Trait<_1d7396874_CommonFlag> _1d739924a_find_flag_short(_1d73986bc_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1d7396874_CommonFlag>> _1d73994ae_flags(_1d73986bc_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1d73997bc_parse(_1d73986bc_FlagSet*, jule::Slice<jule::Str>);
inline void _1d7399998_reset(_1d73986bc_FlagSet*);
inline jule::Ptr<_1d9b88a9d_Flag> _1d9c0d4a2_add_flag_common(_1d73986bc_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1d9b850b6_Flag> _1d9c170c1_add_flag_common(_1d73986bc_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1d9c0ae50_add_var(_1d73986bc_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1d9c14a5d_add_var(_1d73986bc_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1d73986bc_FlagSet {
	jule::Slice<jule::Trait<_1d7396874_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1d7396874_CommonFlag>>();
	

	_1d73986bc_FlagSet(void) = default;

	inline bool operator==(_1d73986bc_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1d73986bc_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1d6998e55_IR>,jule::Slice<_21868a483_Log>> static__1d640110a_build(jule::Str, jule::I64);
inline void _1d643469e_append_structs(_1d6998e55_IR*, jule::Ptr<_1d6277327_Package>&, jule::Slice<jule::Ptr<_1d5599dba_Struct>>&);
inline jule::Slice<jule::Ptr<_1d5599dba_Struct>> _1d643b772_get_all_structures(_1d6998e55_IR*);
inline void _1d6460785_append_globals(_1d6998e55_IR*, jule::Ptr<_1d6277327_Package>&, jule::Slice<jule::Ptr<_1d6298ea3_Var>>&);
inline jule::Slice<jule::Ptr<_1d6298ea3_Var>> _1d646be34_get_all_globals(_1d6998e55_IR*);
inline void _1d66d11cb_order(_1d6998e55_IR*);
struct _1d6998e55_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1d6277327_Package> _field_main = jule::Ptr<_1d6277327_Package>();
	jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>>();
	_1d67916a9_OrderedDefines _field_ordered = _1d67916a9_OrderedDefines();
	

	_1d6998e55_IR(void) = default;

	inline bool operator==(_1d6998e55_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1d6998e55_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1d5590388_to_str(_1d55c62d1_StructIns*);
inline jule::Bool _1d559ba9d_equals(jule::Ptr<_1d55c62d1_StructIns>, jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Bool _1d559cc14_same(_1d55c62d1_StructIns*, jule::Ptr<_1d55c62d1_StructIns>);
inline jule::Ptr<_1d567a7e7_Fn> _1d55a0068_find_method(_1d55c62d1_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1d55a2532_FieldIns> _1d55a1388_find_field(_1d55c62d1_StructIns*, jule::Str);
struct _1d55c62d1_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1d5599dba_Struct> _field_decl = jule::Ptr<_1d5599dba_Struct>();
	jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>>();
	jule::Slice<jule::Ptr<_1d55a2532_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1d55a2532_FieldIns>>();
	jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1d567a7e7_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1d5680c5e_ReferenceStack> _field_refers = jule::Ptr<_1d5680c5e_ReferenceStack>();
	_1d559b7e5_Operators _field_operators = _1d559b7e5_Operators();
	

	_1d55c62d1_StructIns(void) = default;

	inline bool operator==(_1d55c62d1_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1d55c62d1_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d6c196d1_ObjectDeadCode> static__1d6c19acc_new(jule::Ptr<_1d6998e55_IR>&);
inline jule::Bool _1d9662d3b_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d59c3e1a_Trait>&);
inline jule::Bool _1d966898a_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d567d498_FnIns>&);
inline jule::Bool _1d9671e8d_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d55c62d1_StructIns>&);
inline jule::Bool _1d9676bc9_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d6298ea3_Var>&);
inline void _1d9663864_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d59c3e1a_Trait>);
inline void _1d966c1ec_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d567d498_FnIns>);
inline void _1d9670332_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d55c62d1_StructIns>);
inline void _1d967a56d_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d6298ea3_Var>);
inline void _1d6c48798_set_references_as_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d5680c5e_ReferenceStack>&);
inline void _1d6c48a1d_inits(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d6277327_Package>&);
inline void _1d6c48c93_collect_live_package(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d6277327_Package>&);
inline void _1d6c48e6e_collect_live(jule::Ptr<_1d6c196d1_ObjectDeadCode>);
inline void _1d6c491e4_remove_dead_globals(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d6298ea3_Var>>&);
inline void _1d6c49469_remove_dead_fns(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d567a7e7_Fn>>&);
inline void _1d6c496de_remove_dead_structs(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d5599dba_Struct>>&);
inline void _1d6c49964_remove_dead_traits(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d59c3e1a_Trait>>&);
inline void _1d6c49bd9_remove_deads_file(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d62db952_SymbolTable>&);
inline void _1d6c49e5e_remove_deads_package(jule::Ptr<_1d6c196d1_ObjectDeadCode>, jule::Ptr<_1d6277327_Package>&);
inline void _1d6c4a13a_remove_deads(jule::Ptr<_1d6c196d1_ObjectDeadCode>);
inline void _1d6c4a316_elimanate(jule::Ptr<_1d6c196d1_ObjectDeadCode>);
struct _1d6c196d1_ObjectDeadCode {
	_1d6c19417_LiveTable _field_live = _1d6c19417_LiveTable();
	jule::Ptr<_1d6998e55_IR> _field_ir = jule::Ptr<_1d6998e55_IR>();
	

	_1d6c196d1_ObjectDeadCode(void) = default;

	inline bool operator==(_1d6c196d1_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1d6c196d1_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d735658c_ObjectCoder> static__1d7339570_new(jule::Ptr<_1d6998e55_IR>&, _1d73561b3_SerializationInfo);
inline void _1d73398a0_write(jule::Ptr<_1d735658c_ObjectCoder>, jule::Str);
inline void _1d733a142_add_indent(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d733b132_done_indent(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d733b880_indent(jule::Ptr<_1d735658c_ObjectCoder>);
inline jule::I64 _1d733ccb0_find_type_offset(_1d735658c_ObjectCoder*, jule::Ptr<_1d59c3e1a_Trait>, jule::Ptr<_1d631bdd3_TypeKind>);
inline void _1d731e852_loc_info(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1ee538d51_Token>&);
inline void _1d731c212_head(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d733a890_links(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7327e98_prepare_structures(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7328dab_iter_packages(jule::Ptr<_1d735658c_ObjectCoder>, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)>);
inline void _1d7329593_build_trait_map(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7329c7a_trait_decls(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7326ccc_structure_plain_decl(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d5599dba_Struct>&);
inline void _1d7320a40_structure_plain_decls(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7327915_field_decl(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55a2532_FieldIns>&);
inline void _1d7321e09_structure_destructor(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d732a462_structure_derive_defs_decls(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d7356b31_structure_operator_eq(jule::Ptr<_1d735658c_ObjectCoder>, jule::Str&, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d7356c63_structure_operator_not_eq(jule::Ptr<_1d735658c_ObjectCoder>, jule::Str&, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d7356d95_structure_operator(jule::Ptr<_1d735658c_ObjectCoder>, jule::Str&, jule::Ptr<_1d567d498_FnIns>&, jule::Str);
inline void _1d7356ec7_structure_operators(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d7357109_structure_ins_decl(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d735723b_structure_decl(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d5599dba_Struct>&);
inline void _1d735736d_structure_decls(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d73574a0_params_decls(jule::Ptr<_1d735658c_ObjectCoder>, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>&);
inline void _1d73575d2_func_head(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d567d498_FnIns>&, jule::Bool);
inline void _1d7357714_func_decl(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d567a7e7_Fn>&, jule::Bool);
inline void _1d7357846_func_decls(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7357978_trait_data_types(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7357b87_param_ins(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d567c5c9_ParamIns>&);
inline void _1d7357e0c_params_ins(jule::Ptr<_1d735658c_ObjectCoder>, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>&);
inline void _1d735822b_var_init_expr(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d6298ea3_Var>&, jule::Fn<void(void)>);
inline void _1d73584a1_var(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d6298ea3_Var>);
inline void _1d7358726_func(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d567a7e7_Fn>&);
inline void _1d7358902_trait_wrappers(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7358acd_trait_datas(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7358ca9_globals(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d7358e85_decls(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d735920a_structure_methods(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d7359480_structure_derive_defs(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d7359705_structure_ostream(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d735997a_structure_ins(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d55c62d1_StructIns>&);
inline void _1d7359c00_structure(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d5599dba_Struct>&);
inline void _1d7359dcb_structures(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d735a0a7_funcs(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d735a32c_push_init(jule::Ptr<_1d735658c_ObjectCoder>, jule::Ptr<_1d6277327_Package>&);
inline void _1d735a508_init_caller(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d735a6d4_end(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d735a8b0_serialize_head(jule::Ptr<_1d735658c_ObjectCoder>);
inline void _1d735aa8b_serialize(jule::Ptr<_1d735658c_ObjectCoder>);
struct _1d735658c_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1d6998e55_IR> _field_ir = jule::Ptr<_1d6998e55_IR>();
	_1d73561b3_SerializationInfo _field_info = _1d73561b3_SerializationInfo();
	jule::Slice<jule::Ptr<_1d73563a0_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1d73563a0_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1d72d22c6_ExprCoder> _field_ec = jule::Ptr<_1d72d22c6_ExprCoder>();
	jule::Ptr<_1d72c9752_ScopeCoder> _field_sc = jule::Ptr<_1d72c9752_ScopeCoder>();
	

	_1d735658c_ObjectCoder(void) = default;

	inline bool operator==(_1d735658c_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1d735658c_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1d9b9ccc1_parse_integer(_1d739ad95_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1d9ba5b86_parse_integer(_1d739ad95_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1d739b68c_get_data(_1d739ad95_ArgParser*);
inline jule::VoidExceptional _1d739b8ce_process_flag(_1d739ad95_ArgParser*, jule::Trait<_1d7396874_CommonFlag>&);
inline jule::VoidExceptional _1d739bb54_single_dash(_1d739ad95_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1d739bdc9_double_dash(_1d739ad95_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1d739c0a5_try_arg(_1d739ad95_ArgParser*);
inline jule::VoidExceptional _1d739c281_parse(_1d739ad95_ArgParser*);
struct _1d739ad95_ArgParser {
	_1d73986bc_FlagSet _field_set = _1d73986bc_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1d739ad95_ArgParser(void) = default;

	inline bool operator==(_1d739ad95_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d739ad95_ArgParser _other) { return !this->operator==(_other); }


};
inline void _231679cc8_free(void*);
inline jule::Str _2316a431e_byte_ptr_to_str(jule::U8*);
inline jule::I64 _2316318d9_get_last_errno(void);
inline jule::I64 _2316a4bd2_stat(jule::U8*, struct stat*);
inline jule::I64 _2316a4d14_open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _2316a4e46_getcwd(jule::U8*, jule::U64);
inline DIR* _2316a5078_opendir(jule::U8*);
inline struct dirent* _2316a51aa_readdir(DIR*);
inline jule::I64 _2316a551d_closedir(DIR*);
inline jule::I64 _2316a58b4_mkdir(jule::U8*, jule::I64);
inline jule::I64 _2316a59e6_rmdir(jule::U8*);
inline jule::I64 _2316a5b28_unlink(jule::U8*);
inline jule::I64 _2316a74dc_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2316a78c7_read(jule::I64, void*, jule::U64);
inline jule::I64 _2316a7c4b_close(jule::I64);
inline jule::I64 _2316a8136_write(jule::I64, void*, jule::U64);
inline void _2316a8345_exit(jule::I64);
inline jule::I64 _23086b927_get_last_os_error(void);
inline jule::Slice<jule::Str> _23086d022_args(void);
inline jule::Exceptional<jule::Str> _23086d495_working_dir(void);
inline jule::Exceptional<jule::Str> _23086dd47___getwd(void);
inline jule::Slice<jule::U8> _231a0a2e0_stobs(jule::Str&);
inline jule::Bool _231772596_is_letter(jule::I32);
inline jule::Bool _21810aa91_is16(jule::Slice<_218108ece_Range16>, jule::U16);
inline jule::Bool _21810add2_is32(jule::Slice<_218109452_Range32>, jule::U32);
inline jule::Bool _21810b674_is_excluding_latin(jule::Ptr<_2181098c5_RangeTable>, jule::I32);
inline std::tuple<jule::I32,jule::I64> _2186283dd_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _2186289a4_decode_last_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _218629752_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _218629a93_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _21862a0d2_rune_count_str(jule::Str);
inline jule::Bool _21862a379_rune_start(jule::U8);
inline jule::Str _2185adecd_repeat(jule::Str, jule::I64);
inline jule::Bool _2185d9e2c__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _2185eacc8_has_prefix(jule::Str, jule::Str);
inline jule::Bool _2185b0276__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _2185b7adb_has_suffix(jule::Str, jule::Str);
inline jule::I64 _2185cc392_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21862ae4b_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21862b07d_find_last(jule::Str, jule::Str);
inline jule::I64 _21862b688__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _21862bb2d_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _21862c106_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _21862c678_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _21862c9b9_contains(jule::Str, jule::Str);
inline jule::Bool _21862d48c_contains_any(jule::Str, jule::Str);
inline jule::I64 _21862d7cd_count(jule::Str, jule::Str);
inline jule::Str _21862dc62_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _21862b952__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _21862ed1d_trim_left(jule::Str, jule::Str);
inline void _2186300c6__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _218630758_trim(jule::Str, jule::Str);
inline jule::Str _218630a99_join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _218632172_clean(jule::Str);
inline jule::Str _218632705_from_slash(jule::Str);
inline jule::Str _218632a24_join(jule::Slice<jule::Str>);
inline jule::Str _218632cbb_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _218633063_abs(jule::Str);
inline jule::Str _21863330a_base(jule::Str);
inline jule::Str _21863367e_dir(jule::Str);
inline jule::Str _218633926_volume_name(jule::Str);
inline jule::Bool _21863476d_is_path_sep(jule::U8);
inline jule::Bool _218634a59_is_abs(jule::Str);
inline jule::I64 _218634d01_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _218635120___abs(jule::Str);
inline jule::Str _2186353b7___join(jule::Slice<jule::Str>);
inline jule::I64 _2315d1db7_get_last_fs_error(void);
inline jule::I64 _1ed64dbd1_get_last_process_error(void);
inline jule::Slice<char*> _1ed651e59_str_slice_to_cstr_slice(jule::Slice<jule::Str>);
inline jule::I64 _1ed6523bb_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1ed6527a6_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1ed6533bc_exit(jule::I64);
inline jule::Str _1ed6535ba_executable(void);
inline jule::Bool _21867d9b5_is_std_header_path(jule::Str);
inline jule::Bool _21867dae7_is_valid_header_ext(jule::Str);
inline jule::Bool _21867dd7d_is_valid_cpp_ext(jule::Str);
inline jule::Str _21868a8c3_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _21868abae_arg_to_str(jule::Any);
inline jule::I64 _21868ae56_find_next_fmt(jule::Str);
inline jule::Str _21868b2db_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21868c3a8_is_top_directive(jule::Str);
inline jule::Bool _21868de7b_is_windows(jule::Str);
inline jule::Bool _21868e267_is_darwin(jule::Str);
inline jule::Bool _21868e50e_is_linux(jule::Str);
inline jule::Bool _21868e82d_is_i386(jule::Str);
inline jule::Bool _21868eac5_is_amd64(jule::Str);
inline jule::Bool _21868ed6c_is_arm64(jule::Str);
inline jule::Bool _218690114_is_unix(jule::Str);
inline jule::Bool _218690488_is_32bit(jule::Str);
inline jule::Bool _218690730_is_64bit(jule::Str);
inline void _21869cb16_init(void);
inline jule::Bool _1ee53955a_is_unary_op(jule::Str);
inline jule::Bool _1ee539846_is_bin_op(jule::Str);
inline jule::Bool _1ee539e0c_is_str(jule::Str);
inline jule::Bool _1ee53a1a4_is_raw_str(jule::Str);
inline jule::Bool _1ee53a44b_is_rune(jule::Str);
inline jule::Bool _1ee53aa67_is_bool(jule::Str);
inline jule::Bool _1ee53ad0e_is_float(jule::Str);
inline jule::Bool _1ee53b0a6_is_num(jule::Str);
inline jule::Bool _1ee53b5e5_is_ignore_ident(jule::Str);
inline jule::Bool _1ee53b88c_is_anon_ident(jule::Str);
inline jule::Bool _1ee53bdcb_is_space(jule::I32);
inline jule::Bool _1ee53c32c_is_letter(jule::I32);
inline jule::Bool _1ee53c86b_is_decimal(jule::U8);
inline jule::Bool _1ee53cb13_is_binary(jule::U8);
inline jule::Bool _1ee53cdaa_is_octal(jule::U8);
inline jule::Bool _1ee53d152_is_hex(jule::U8);
inline jule::Bool _1ee53d3e9_is_assign(jule::U64);
inline jule::Bool _1ee53d691_is_postfix_op(jule::Str);
inline jule::Bool _1ee53d938_is_assign_op(jule::Str);
inline jule::Ptr<_1ee53e1db_File> _1ee54071a_new_file_set(jule::Str);
inline _21868a483_Log _1ee542046_make_err(jule::I64, jule::I64, jule::Ptr<_1ee53e1db_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ee5423cb_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1ee54271c_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee542aa2_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee542de3_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee543234_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee543575_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee5439c6_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee543c6d_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1ee544015_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1ee544356_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _1ee544697_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _1ee5449d8_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1ee544d29_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1ee54516a_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee5455bb_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1ee545863_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1ee545ba4_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1ee545e6d_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ee546138_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ee5463e1_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ee546688_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_21868a483_Log> _1ee54b182_lex(jule::Ptr<_1ee53e1db_File>, jule::I64);
inline void _1d5672e1b_lshift_unsig(_1d561288e_Const&, _1d561288e_Const&);
inline void _1d5673218_rshift_unsig(_1d561288e_Const&, _1d561288e_Const&);
inline jule::I64 _1d618094a_leading_zeros64(jule::U64);
inline jule::I64 _1d61819a1_trailing_zeros(jule::U64);
inline jule::I64 _1d6182397_trailing_zeros32(jule::U32);
inline jule::I64 _1d618263e_trailing_zeros64(jule::U64);
inline jule::I64 _1d6187db4_len32(jule::U32);
inline jule::I64 _1d618815b_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1d6188d1b_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1d618a49e_mul64(jule::U64, jule::U64);
inline jule::U32 _1d60a9401_f32_bits(jule::F32);
inline jule::F32 _1d60a96dc_f32_from_bits(jule::U32);
inline jule::U64 _1d60a9984_f64_bits(jule::F64);
inline jule::F64 _1d60a9ca3_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1d60ac3b0_frexp(jule::F64);
inline jule::F64 _1d6136aee_nan(void);
inline jule::Bool _1d613c1dc_is_nan(jule::F64);
inline jule::F64 _1d613e233_inf(jule::I64);
inline jule::Bool _1d6147d74_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1d6159094_normalize(jule::F64);
inline jule::F64 _1d615095e_log(jule::F64);
inline jule::F64 _1d613875a_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1d6193d48_modf(jule::F64);
inline jule::F64 _1d619460c_log2(jule::F64);
inline jule::Str _1d5ae8ca9_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1d5ae9826_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1d5b0e088_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1d5c8e5e2_FloatInfo&);
inline jule::Slice<jule::U8> _1d5b6c624_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1d5b95086_DecimalSlice, jule::I64, jule::U8);
inline void _1d5b94717_round_shortest(_1d61c0d97_Decimal&, jule::U64, jule::I64, _1d5c8e5e2_FloatInfo&);
inline jule::Slice<jule::U8> _1d5ba5ccd_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1d5b95086_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1d5ba7461_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1d5b95086_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1d5c6bd61_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1d5c8e5e2_FloatInfo&);
inline jule::Slice<jule::U8> _1d5c90648_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1d5c8e5e2_FloatInfo&);
inline jule::I64 _1d5c95a27_min(jule::I64, jule::I64);
inline jule::I64 _1d5d071d7_max(jule::I64, jule::I64);
inline jule::U8 _1d5d274c1_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1d5d49c85___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1d5dc7186_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1d5de8927_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1d5ada5d6_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1d5e6729d_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1d5d87223_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1d5ba4c22_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1d5e6cd20_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1d5b0eb27_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1d5b3150b_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1d5b7a984_atof_hex(jule::Str, _1d5c8e5e2_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1d5bcb1dd_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1d5d51550_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1d5dc77a2_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1d5e23b83_parse_float(jule::Str, jule::I64);
inline void _1d6037736_ryu_ftoa_fixed32(_1d5b95086_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1d609461c_ryu_ftoa_fixed64(_1d5b95086_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1d609b0a2_format_decimal(_1d5b95086_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1d5b54a3a_ryu_ftoa_shortest(_1d5b95086_DecimalSlice&, jule::U64, jule::I64, _1d5c8e5e2_FloatInfo&);
inline jule::I64 _1d5b9696c_mul_by_log2_log10(jule::I64);
inline jule::I64 _1d5ba5591_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1d5ba6482_compute_bounds(jule::U64, jule::I64, _1d5c8e5e2_FloatInfo&);
inline void _1d6035a20_ryu_digits(_1d5b95086_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1d61bee51_ryu_digits32(_1d5b95086_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1d61c0083_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1d61c01b5_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1d61c02e7_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1d61c0429_divmod1e9(jule::U64);
inline void _1d61c1903_trim(_1d61c0d97_Decimal&);
inline void _1d61c1a35_right_shift(_1d61c0d97_Decimal&, jule::U64);
inline jule::Bool _1d61c1b67_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1d61c1c99_left_shift(_1d61c0d97_Decimal&, jule::U64);
inline jule::Bool _1d61c1dcb_should_round_up(_1d61c0d97_Decimal&, jule::I64);
inline jule::Str _1d61c2959_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1d61c2a8b_fmt_int(jule::I64, jule::I64);
inline jule::Str _1d61c2bbd_itoa(jule::I64);
inline jule::Str _1d61c2d00_small(jule::I64);
inline jule::Bool _1d61c2e32_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1d61c3064_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1d6247eeb_real_kind_of(jule::Str);
inline jule::I64 _1d6248293_bitsize_of(jule::Str);
inline jule::Str _1d62485b2_int_from_bits(jule::I64);
inline jule::Str _1d6248859_uint_from_bits(jule::I64);
inline jule::Str _1d6248b01_float_from_bits(jule::I64);
inline jule::Bool _1d62496a1_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1d6249948_bitsize_of_float(jule::F64);
inline jule::I64 _1d6249be0_bitsize_of_int(jule::I64);
inline jule::I64 _1d6249e87_bitsize_of_uint(jule::U64);
inline void _1d624a0ec_update_target(void);
inline void _1d624a262_init(void);
inline jule::F64 _1d624e51e_min(jule::Str);
inline jule::F64 _1d624e80a_max(jule::Str);
inline jule::Bool _1d624eb7e_is_i8_compatible(jule::Str);
inline jule::Bool _1d624ee6a_is_i16_compatible(jule::Str);
inline jule::Bool _1d6250212_is_i32_compatible(jule::Str);
inline jule::Bool _1d6250531_is_i64_compatible(jule::Str);
inline jule::Bool _1d62507c8_is_u8_compatible(jule::Str);
inline jule::Bool _1d6250a70_is_u16_compatible(jule::Str);
inline jule::Bool _1d6250d17_is_u32_compatible(jule::Str);
inline jule::Bool _1d625118b_is_u64_compatible(jule::Str);
inline jule::Bool _1d6251433_is_f32_compatible(jule::Str);
inline jule::Bool _1d62516ca_is_f64_compatible(jule::Str);
inline jule::Bool _1d6251a1b_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1d6251cb3_is_i16_greater(jule::Str);
inline jule::Bool _1d625205a_is_i32_greater(jule::Str);
inline jule::Bool _1d6252302_is_i64_greater(jule::Str);
inline jule::Bool _1d6252599_is_u16_greater(jule::Str);
inline jule::Bool _1d62529ea_is_u32_greater(jule::Str);
inline jule::Bool _1d6252c92_is_u64_greater(jule::Str);
inline jule::Bool _1d6253039_is_f32_greater(jule::Str);
inline jule::Bool _1d62532d1_is_f64_greater(jule::Str);
inline jule::Bool _1d6253622_is_greater(jule::Str, jule::Str);
inline jule::Bool _1d6254656_is_sig_int(jule::Str);
inline jule::Bool _1d6254942_is_unsig_int(jule::Str);
inline jule::Bool _1d6254bd9_is_int(jule::Str);
inline jule::Bool _1d6255008_is_float(jule::Str);
inline jule::Bool _1d62552a0_is_num(jule::Str);
inline jule::Bool _1d6255547_is_sig_num(jule::Str);
inline jule::Bool _1d62b5d7c_is_ascii(jule::I32);
inline jule::I32 _1d62c7b08_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1d62b2483_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1d62c9797_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1d62c9a3e_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1d62c9d4c_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1d62ca18d_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1d63bb59d_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1d638ab55_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1d638a43a_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1d639a04e_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1d63a3bd4_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1d63bcea6_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1d63bc25d_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d567ee8e_parameter_uses_generics(jule::Ptr<_1d5678eaa_Param>&, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>&);
inline jule::Ptr<_1d632103b_TypeSymbol> _1d568247a_build_type(jule::Ptr<_1d55a968d_TypeDecl>);
inline jule::Ptr<_1d62e2738_Value> _1d5682766_build_expr(jule::Ptr<_1d55adbae_Expr>);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d5682a0d_build_type_alias(jule::Ptr<_1d55c0dad_TypeAliasDecl>);
inline jule::Ptr<_1d558c385_Field> _1d5682d2c_build_field(jule::Ptr<_1d55c4499_FieldDecl>);
inline jule::Slice<jule::Ptr<_1d558c385_Field>> _1d56830c4_build_fields(jule::Slice<jule::Ptr<_1d55c4499_FieldDecl>>&);
inline jule::Ptr<_1d5599dba_Struct> _1d568336b_build_struct(jule::Ptr<_1d55c4d07_StructDecl>);
inline jule::Ptr<_1d5678eaa_Param> _1d5683613_build_param(jule::Ptr<_1d55ba24d_ParamDecl>);
inline jule::Slice<jule::Ptr<_1d5678eaa_Param>> _1d5683987_build_params(jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>>&);
inline jule::Ptr<_1d5678817_RetType> _1d5683c2e_build_ret_type(jule::Ptr<_1d55ac7a1_RetTypeDecl>);
inline jule::Ptr<_1d567a7e7_Fn> _1d5683ec6_build_fn(jule::Ptr<_1d55bb56d_FnDecl>);
inline jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _1d568426d_build_methods(jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>>&);
inline jule::Ptr<_1d59c3e1a_Trait> _1d5684515_build_trait(jule::Ptr<_1d55c5412_TraitDecl>);
inline jule::Ptr<_1d581b2c3_EnumItem> _1d56847ac_build_enum_item(jule::Ptr<_1d55c271c_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>> _1d5684a54_build_enum_items(jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>>&);
inline jule::Ptr<_1d5692820_Enum> _1d5684ceb_build_enum(jule::Ptr<_1d55c3245_EnumDecl>);
inline jule::Ptr<_1d580d749_TypeEnumItem> _1d568524c_build_type_enum_item(jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>> _1d56854e4_build_type_enum_items(jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>>&);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d568578b_build_type_enum(jule::Ptr<_1d55c3e49_TypeEnumDecl>);
inline jule::Ptr<_1d6298ea3_Var> _1d5685a33_build_var(jule::Ptr<_1d55bc54c_VarDecl>);
inline jule::Slice<jule::Ptr<_1d6298ea3_Var>> _1d5685cca_build_vars(jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>>);
inline jule::Ptr<_1d62470d8_Impl> _1d5686072_build_impl(jule::Ptr<_1d55c5a1c_Impl>);
inline jule::Bool _1d6223b42_match_constraint(jule::Str&, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d6225737_is_builtin_constraint(jule::Str&);
inline jule::Ptr<_1d625c571_ScopeChecker> _1d62306ed_new_scope_checker_base(jule::Ptr<_1d627c519_Sema>&, jule::Ptr<_1d567d498_FnIns>);
inline jule::Ptr<_1d625c571_ScopeChecker> _1d62315ab_new_scope_checker(jule::Ptr<_1d627c519_Sema>&, jule::Ptr<_1d567d498_FnIns>);
inline jule::Ptr<_1d625b2d9_ScopeLabel> _1d622558e_find_label_parent(jule::Str, jule::Ptr<_1d625c571_ScopeChecker>);
inline jule::Bool _1d6232579_model_is_goto_scope(jule::Any, jule::Ptr<_1d6255beb_Scope>&);
inline jule::Bool _1d6233437_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1d6255beb_Scope>&);
inline jule::I64 _1d62415ee_count_match_type(jule::Ptr<_1d625965b_Match>&, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Slice<jule::Ptr<_1d62e16b0_Data>> _1d6244547_get_datas_from_tuple_data(jule::Ptr<_1d62e16b0_Data>&);
inline jule::Slice<jule::Any> _1d62450c5_get_expr_models(jule::Any&);
inline jule::Bool _1d6245b53_check_mut(jule::Ptr<_1d627c519_Sema>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d624127a_check_assign(jule::Ptr<_1d627c519_Sema>&, jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e16b0_Data>, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d6255855_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1d6255987_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1d6255ab9_stmt_is_def(jule::Any&);
inline jule::Ptr<_1d6298ea3_Var> _1d6271e59_find_var_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d62723aa_find_type_alias_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1d5599dba_Struct> _1d62727a6_find_struct_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1d567a7e7_Fn> _1d6272c18_find_fn_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1d59c3e1a_Trait> _1d6273026_find_trait_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1d5692820_Enum> _1d6273367_find_enum_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d62736ca_find_type_enum_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Str);
inline jule::Bool _1d6279901_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1d627a65a_is_valid_model_for_ref(jule::Any&);
inline _21868a483_Log _1d627ab00_compiler_err(jule::Ptr<_1ee538d51_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d627ae41_imp_is_lookupable(jule::Ptr<_1d62743bd_ImportInfo>&, jule::Str);
inline void _1d627b23d_append_ret_vars(jule::Slice<jule::Ptr<_1d6298ea3_Var>>&, jule::Ptr<_1d567d498_FnIns>&);
inline void _1d627b4e6_append_param_vars(jule::Slice<jule::Ptr<_1d6298ea3_Var>>&, jule::Ptr<_1d567d498_FnIns>&);
inline void _1d627b7c1_append_generic_type_aliases(jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>&, jule::Ptr<_1d567d498_FnIns>&);
inline jule::Ptr<_1d62db952_SymbolTable> _1d627bb23_find_file(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>&, jule::Ptr<_1ee53e1db_File>&);
inline void _1d627c085_push_suggestion(_21868a483_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d62c00a6_trait_has_reference_receiver(jule::Ptr<_1d59c3e1a_Trait>&);
inline jule::Bool _1d62b25d7_float_assignable(jule::Str, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Bool _1d62b2719_sig_assignable(jule::Str, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Bool _1d62c92be_unsig_assignable(jule::Str, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Bool _1d62c9401_int_assignable(jule::Str, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d5575c86_Directive> _1d63165b4_find_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Str);
inline jule::Any _1d6316949_find_builtins_import(jule::Str, jule::Ptr<_1d62743bd_ImportInfo>);
inline void _1d6316b58_fit_bitsize(jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6316e55_make_struct_lit_alloc(jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d5673944_StructLitExprModel>&);
inline jule::Ptr<_1d6298ea3_Var> _1d6317296_build_error_var(jule::Ptr<_1d6255beb_Scope>&, jule::Ptr<_1d55b3048_FnCallExpr>&);
inline jule::Any _1d63175d7_find_builtins_sema(jule::Str, jule::Ptr<_1d627c519_Sema>);
inline jule::Bool _1d631787e_is_ok_for_shifting(jule::Ptr<_1d62e16b0_Data>&);
inline jule::Bool _1d6317c36_is_instanced_struct(jule::Ptr<_1d55c62d1_StructIns>);
inline jule::Bool _1d6318011_is_ptr_arithmetic_compatible_int(jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6318242_apply_cast_kind_model(jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d631bdd3_TypeKind>&);
inline void _1d63184ea_apply_cast_kind(jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63186e8_build_void_data(void);
inline jule::Str _1d63189b2_check_data_for_integer_indexing(jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6318c9d_apply_cast_model_by_enum(jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d5692820_Enum>);
inline void _1d6319067_cast_const_by_type(jule::Str&, jule::Ptr<_1d62e16b0_Data>&);
inline void _1d6319573_update_model_to_generic_ins(jule::Ptr<_1d567400a_FnCallExprModel>&, jule::Ptr<_1d567d498_FnIns>&);
inline jule::Bool _1d63197d7_push_sub_ident_from_expr(jule::Any, jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>&);
inline jule::Bool _1d63336d0_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>&);
inline jule::Bool _1d6333a65_has_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Str);
inline jule::Bool _1d6333d0c_can_get_ptr(jule::Ptr<_1d62e16b0_Data>&);
inline jule::Bool _1d633412b_is_valid_for_sptr_type(jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d63343c3_is_valid_for_ref(jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Bool _1d633468c_is_builtin_str_convertable(jule::Ptr<_1d631bdd3_TypeKind>&);
inline jule::Str _1d6334934_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d63218aa_Prim> _1d6334cec_build_prim_type(jule::Str);
inline jule::Ptr<_1d5599dba_Struct> _1d6335094_get_struct_from_kind(jule::Ptr<_1d631bdd3_TypeKind>);
inline jule::Bool _1d633533b_is_prim(jule::Str);
inline void _1d63355e4_apply_implicit_cast(jule::Ptr<_1d631bdd3_TypeKind>&, jule::Ptr<_1d62e16b0_Data>&);
inline std::tuple<jule::Ptr<_1d62db952_SymbolTable>,jule::Slice<_21868a483_Log>> _1d63384d7_build_symbols(jule::Ptr<_1d5574b0e_Ast>&, jule::Trait<_1d6271ac4_Importer>&, jule::Ptr<_1d56865c2_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1d6277327_Package>,jule::Slice<_21868a483_Log>> _1d6338916___analyze_package(jule::Slice<jule::Ptr<_1d5574b0e_Ast>>&, jule::Trait<_1d6271ac4_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1d6277327_Package>,jule::Slice<_21868a483_Log>> _1d6338d01_analyze_package(jule::Slice<jule::Ptr<_1d5574b0e_Ast>>, jule::Trait<_1d6271ac4_Importer>, jule::I64);
inline jule::Ptr<_1d567d498_FnIns> _1d6345a11_find_builtin_fn(jule::Str);
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d634b3eb_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1d59c3e1a_Trait> _1d63758a9_find_builtin_trait(jule::Str);
inline jule::Any _1d6343c73_find_builtin_def(jule::Str);
inline jule::Any _1d6363358_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1d6399955_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1d63a43aa_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1d639a604_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1d62e16b0_Data> _1d6389e62_builtin_caller_common_plain(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63b9d2c_builtin_caller_common(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63a2760_builtin_caller_common_mut(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d639a923_builtin_caller_error(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&);
inline jule::Ptr<_1d62e16b0_Data> _1d639914c_builtin_caller_out(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63414ce_builtin_caller_outln(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63aeabe_builtin_caller_new(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d6362b2c_builtin_caller_panic(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d6362c5e_builtin_caller_make(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d634d783_builtin_caller_append(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d634d8b5_caller_copy_slice(jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d637e6e8_caller_copy_str(jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d637e82a_builtin_caller_copy(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63ca315_builtin_caller_clone(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63ca447_builtin_caller_assert(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63ca634_builtin_caller_std_mem_size_of(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63ca942_builtin_caller_std_mem_align_of(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63cad60_builtin_caller_std_mem_free(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63cb28e_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63cb6ac_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63cbaec_builtin_caller_std_debug_out(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Ptr<_1d62e16b0_Data> _1d63cbed7_builtin_caller_std_debug_outln(jule::Ptr<_1d62e322d_Eval>&, jule::Ptr<_1d55b3048_FnCallExpr>&, jule::Ptr<_1d62e16b0_Data>&);
inline jule::Bool _1d648a8d1_find_module_file(jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>&);
inline jule::Str _1d648aa13_find_module_file_deep(jule::Str);
inline jule::Slice<_21868a483_Log> _1d648ac99_check_module_file(jule::Str);
inline jule::Ptr<_1d6ac11e2_FileInfo> _1d6ac8ea8_parse_file(jule::Ptr<_1ee53e1db_File>);
inline std::tuple<jule::Ptr<_1d5574b0e_Ast>,jule::Slice<_21868a483_Log>> _1d6b20d68_parse_fileset(jule::Ptr<_1ee53e1db_File>);
inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b21770_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1d6b21a7d_is_st(jule::Ptr<_1ee538d51_Token>, jule::Ptr<_1ee538d51_Token>);
inline jule::Bool _1d6b21de1_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1d6b22287_next_st_pos(jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::Bool> _1d6b225c8_skip_st(jule::I64&, jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _1d6b22c6b_split_stmts(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d6b2e7c2_CallData> _1d6b2eb35_get_call_data(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Slice<jule::Ptr<_1ee538d51_Token>> _1d6b2ee21_get_block_expr(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b301b8_split_colon(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::I64 _1d6b304d7_find_lowest_prec_op(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55b0c27_IdentExpr> _1d6b3077e_build_ident_expr(jule::Ptr<_1ee538d51_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::I64> _1d6b30a26_get_range_expr_tokens(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Bool _1d6b3b37d_check_assign_tokens(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline _21868a483_Log _1d6b3c26e_make_err(jule::I64, jule::I64, jule::Ptr<_1ee53e1db_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ee538d51_Token>> _1d6b3c714_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b3c9ab_range_last(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>,jule::Slice<_21868a483_Log>> _1d6b3ce1d_parts_kind(jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>,jule::Slice<_21868a483_Log>> _1d6b3d308_parts(jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1d6b3d5c2_get_close_kind_of_brace(jule::Str);
inline _21868a483_Log _1d6b3d98a_compiler_err(jule::Ptr<_1ee538d51_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1d6b3ddec_push_suggestion(_21868a483_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1d6b3e194_tokstoa(jule::Slice<jule::Ptr<_1ee538d51_Token>>&);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b4ed75_build_void_type(void);
inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b500d9_build_prim_type(jule::Ptr<_1ee538d51_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::I64> _1d6b5042a_split_map_range(jule::Slice<jule::Ptr<_1ee538d51_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1d6464e1b_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1d645eda0_check_arch(jule::Str);
inline jule::Bool _1d645eed2_is_pass_file_annotation(jule::Str);
inline void _1d647997a_set_os_vars(jule::Slice<jule::Str>&);
inline void _1d6479bcd_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1d6479e86_init_vars(jule::Slice<jule::Str>&, _1d647966c_CompileInfo&);
inline jule::Slice<jule::U8> _1d65513e2_read_buff(jule::Str);
inline _21868a483_Log _1d656ccb0_flat_compiler_err(jule::Str);
inline void _1d66cee99_push_passes(jule::Ptr<_1d6277327_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1d66e6cb3_get_all_unique_passes(jule::Ptr<_1d6277327_Package>&, jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>>);
inline _1d647966c_CompileInfo _1d66eab0d_build_compile_info(void);
inline void _1d6c4a5d0_eliminate_defines(jule::Ptr<_1d6998e55_IR>&);
inline jule::Ptr<_1d5575c86_Directive> _1d6c4a965_find_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Str);
inline jule::Bool _1d6c4aca6_has_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Str);
inline void _1d6c4e903_eliminate_dead_code_of_scope(jule::Ptr<_1d6255beb_Scope>);
inline void _1d6c4eb89_eliminate_scope_functions(jule::Slice<jule::Ptr<_1d567a7e7_Fn>>&);
inline void _1d6c4eddc_eliminate_functions_scope_package(jule::Ptr<_1d6277327_Package>&);
inline void _1d6c50195_eliminate_scope_package(jule::Ptr<_1d6277327_Package>&);
inline void _1d6c50382_eliminate_scopes(jule::Ptr<_1d6998e55_IR>&);
inline jule::Bool _1d506526a_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1d50e852e_is_constant_valid_conditional_case(jule::Ptr<_1d6255dd8_If>&);
inline jule::Bool _1d50e98d7_is_unreachable_expr(jule::Any&);
inline jule::Bool _1d5108066_is_constant_valid_match_case(jule::Ptr<_1d625a1a6_Case>&);
inline jule::Bool _1d511c0be_is_unreachable_conditional_case(jule::Ptr<_1d6255dd8_If>&);
inline jule::Bool _1d512885b_is_unreachable_match_case(jule::Ptr<_1d625a1a6_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1d50ea90a_check_for_bit_shift_opt(jule::Ptr<_1d5654dba_OperandExprModel>&, jule::Ptr<_1d5654dba_OperandExprModel>&);
inline void _1d52beccc_push_opt_level(jule::I64);
inline void _1d6c28613_detect_enabled(void);
inline void _1d6c6d2b2_throw(jule::Str);
inline jule::U64 _1d7355877_unix(void);
inline jule::U64 _1d7355bb8_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1d735604d_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1d72ceca7_is_copy_optimizable(jule::Ptr<_1d62e16b0_Data>&);
inline jule::Bool _1d72d015e_is_iter_copy_optimizable(jule::Ptr<_1d62e16b0_Data>&, jule::Ptr<_1d6298ea3_Var>&);
inline jule::Str _1d72dd26b_decompose_common_esq(jule::U8);
inline jule::Str _1d72dd557_sbtoa(jule::U8);
inline jule::Str _1d72dd7ee_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1d72ddb1d_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1d72dde2b_ftoa(jule::F64, jule::I64);
inline jule::Str _1d72de1c3_itoa(jule::I64);
inline jule::Str _1d72de46a_utoa(jule::U64);
inline jule::Bool _1d72de822_is_forwarded(jule::Ptr<_1d6255beb_Scope>&);
inline jule::Bool _1d72deadb_is_builtin_call_has_debuginf(jule::Ptr<_1d567400a_FnCallExprModel>&);
inline void _1d735adee_iter_files(jule::Ptr<_1d6277327_Package>&, jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)>);
inline void _1d735b152_prepare_structure(jule::Ptr<_1d5599dba_Struct>&);
inline jule::Str _1d735b3e9_concat_all_parts(jule::Slice<jule::Ptr<_1ee538d51_Token>>);
inline jule::Ptr<_1d5575c86_Directive> _1d7364820_find_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Str);
inline jule::Bool _1d7364ba5_has_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>&, jule::Str);
inline void _1ed6539e9_print_error_message(jule::Str);
inline void _1ed653b2b_help(jule::Slice<jule::Str>&);
inline void _1ed653c5d_version(jule::Slice<jule::Str>&);
inline void _1ed653d90_tool_distos(void);
inline void _1ed653ec2_tool_distarch(void);
inline void _1ed654104_tool(jule::Slice<jule::Str>&);
inline void _1ed654236_julenv(jule::Slice<jule::Str>&);
inline void _1ed654478_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1ed6545aa_process_command(jule::Slice<jule::Str>&);
inline void _1ed6546dc_show_info(void);
void entry_point(void);
inline void _1d7297775_init(void);
inline jule::Ptr<_2316d7286_File> _1d7368813_open_output(jule::Str&);
inline void _1d736a408_clear_objects(void);
inline void _1d7366b63_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1d7268449_is_cpp_source_file(jule::Str);
inline void _1d71abdd7_push_comp_cmd_clang(jule::Str&);
inline void _1d737250e_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1d7365da4_gen_compile_cmd(jule::Str, jule::Ptr<_1d6998e55_IR>&);
inline jule::Str _1d7365ed6_get_compile_path(void);
inline void _1d739c4a1_apply_target_independent_optimizations(jule::Ptr<_1d6998e55_IR>&);
inline void _1d739c5d3_check_compiler_flag(void);
inline void _1d739c715_check_target_arch(jule::Str);
inline void _1d739c847_check_target_os(jule::Str);
inline void _1d739c979_check_target_flag(jule::Str&);
inline void _1d739caab_check_opt_flag(jule::Str&);
inline void _1d739ce1e_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1d739d051_check_flags(jule::Slice<jule::Str>&);
inline void _1d739d183_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1d6998e55_IR> _1d739d2b5_build_ir(jule::Slice<jule::Str>&);
inline void _1d739d3e7_compile_command(jule::Slice<jule::Str>&);


struct _1d6271ac4_ImporterMptrData {
	void(*_1d62709e6_set_mod_path)(jule::Trait<_1d6271ac4_Importer>, jule::Str);
	jule::Str(*_1d6270c38_get_mod_path)(jule::Trait<_1d6271ac4_Importer>);
	jule::Str(*_1d6271046_mod_by_id)(jule::Trait<_1d6271ac4_Importer>, jule::I64);
	jule::Ptr<_1d62743bd_ImportInfo>(*_1d6271354_get_import)(jule::Trait<_1d6271ac4_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1d5574b0e_Ast>>,jule::Slice<_21868a483_Log>>(*_1d627170b_import_package)(jule::Trait<_1d6271ac4_Importer>, jule::Str, jule::Bool);
	void(*_1d6271981_imported)(jule::Trait<_1d6271ac4_Importer>, jule::Ptr<_1d62743bd_ImportInfo>);
};

struct _1d631b9a4_KindMptrData {
	jule::Str(*_1d631b553_to_str)(jule::Trait<_1d631b9a4_Kind>);
	jule::Bool(*_1d631b861_equals)(jule::Trait<_1d631b9a4_Kind>, jule::Ptr<_1d631bdd3_TypeKind>);
};

struct _1d633797b_LookupMptrData {
	jule::Ptr<_1d62743bd_ImportInfo>(*_1d6335b33_find_package)(jule::Trait<_1d633797b_Lookup>, jule::Str);
	jule::Ptr<_1d62743bd_ImportInfo>(*_1d6335e41_select_package)(jule::Trait<_1d633797b_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>);
	jule::Ptr<_1d6298ea3_Var>(*_1d63362e8_find_var)(jule::Trait<_1d633797b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d631b1e0_TypeAlias>(*_1d63366a0_find_type_alias)(jule::Trait<_1d633797b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d5599dba_Struct>(*_1d6336a57_find_struct)(jule::Trait<_1d633797b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d567a7e7_Fn>(*_1d6336e0e_find_fn)(jule::Trait<_1d633797b_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d59c3e1a_Trait>(*_1d633721c_find_trait)(jule::Trait<_1d633797b_Lookup>, jule::Str);
	jule::Ptr<_1d5692820_Enum>(*_1d633752a_find_enum)(jule::Trait<_1d633797b_Lookup>, jule::Str);
	jule::Ptr<_1d5a788b5_TypeEnum>(*_1d6337838_find_type_enum)(jule::Trait<_1d633797b_Lookup>, jule::Str);
};

struct _1d7396874_CommonFlagMptrData {
	jule::Str(*_1d737a2a3_name)(jule::Trait<_1d7396874_CommonFlag>);
	jule::I32(*_1d7396c81_short)(jule::Trait<_1d7396874_CommonFlag>);
	jule::Str(*_1d7396db3_what)(jule::Trait<_1d7396874_CommonFlag>);
	void(*_1d7396ee5_reset)(jule::Trait<_1d7396874_CommonFlag>);
};



inline void _1d62709e6_set_mod_path_0(jule::Trait<_1d6271ac4_Importer> _self_, jule::Str _1735_path) {
	_1d659e3a7_set_mod_path(_self_.safe_ptr<_1d6573689_JuleImporter>(), _1735_path);
}
inline jule::Str _1d6270c38_get_mod_path_0(jule::Trait<_1d6271ac4_Importer> _self_) {
	return _1d65cd040_get_mod_path(_self_.safe_ptr<_1d6573689_JuleImporter>());
}
inline jule::Str _1d6271046_mod_by_id_0(jule::Trait<_1d6271ac4_Importer> _self_, jule::I64 _2528_id) {
	return _1d65dd490_mod_by_id(_self_.safe_ptr<_1d6573689_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6271354_get_import_0(jule::Trait<_1d6271ac4_Importer> _self_, jule::Str _3133_path) {
	return _1d65e77b8_get_import(_self_.safe_ptr<_1d6573689_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1d5574b0e_Ast>>,jule::Slice<_21868a483_Log>> _1d627170b_import_package_0(jule::Trait<_1d6271ac4_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1d65e8753_import_package(_self_.safe_ptr<_1d6573689_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1d6271981_imported_0(jule::Trait<_1d6271ac4_Importer> _self_, jule::Ptr<_1d62743bd_ImportInfo> _4135__0) {
	_1d6609a72_imported(_self_.safe_ptr<_1d6573689_JuleImporter>(), _4135__0);
}
inline jule::Str _1d631b553_to_str_0(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d5590388_to_str(_self_.safe_ptr<_1d55c62d1_StructIns>());
}
inline jule::Bool _1d631b861_equals_0(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d559ba9d_equals(_self_.data.as<_1d55c62d1_StructIns>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_1(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d567d7c8_to_str(_self_.safe_ptr<_1d567d498_FnIns>());
}
inline jule::Bool _1d631b861_equals_1(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d567dad6_equals(_self_.data.as<_1d567d498_FnIns>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_2(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d56dc804_to_str(_self_.safe_ptr<_1d59c3e1a_Trait>());
}
inline jule::Bool _1d631b861_equals_2(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d56dcc55_equals(_self_.data.as<_1d59c3e1a_Trait>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_3(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d5779561_to_str(_self_.safe_ptr<_1d5692820_Enum>());
}
inline jule::Bool _1d631b861_equals_3(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d5781c83_equals(_self_.data.as<_1d5692820_Enum>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_4(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d5904301_to_str(_self_.safe_ptr<_1d5a788b5_TypeEnum>());
}
inline jule::Bool _1d631b861_equals_4(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d5923562_equals(_self_.data.as<_1d5a788b5_TypeEnum>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_5(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d631c2ce_to_str(_self_.safe_ptr<_1d631bdd3_TypeKind>());
}
inline jule::Bool _1d631b861_equals_5(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d631c5dc_equals(_self_.data.as<_1d631bdd3_TypeKind>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_6(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d6321c1d_to_str(_self_.safe_ptr<_1d63218aa_Prim>());
}
inline jule::Bool _1d631b861_equals_6(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d632202b_equals(_self_.data.as<_1d63218aa_Prim>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_7(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d63254a2_to_str(_self_.safe_ptr<_1d632513e_Sptr>());
}
inline jule::Bool _1d631b861_equals_7(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d63257b0_equals(_self_.data.as<_1d632513e_Sptr>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_8(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d63260a7_to_str(_self_.safe_ptr<_1d6325a9b_Slc>());
}
inline jule::Bool _1d631b861_equals_8(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d63263b5_equals(_self_.data.as<_1d6325a9b_Slc>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_9(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d632698c_to_str(_self_.safe_ptr<_1d6326629_Tuple>());
}
inline jule::Bool _1d631b861_equals_9(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d6326c9a_equals(_self_.data.as<_1d6326629_Tuple>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_10(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d63274b5_to_str(_self_.safe_ptr<_1d6327152_Map>());
}
inline jule::Bool _1d631b861_equals_10(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d63277c3_equals(_self_.data.as<_1d6327152_Map>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_11(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d63280a9_to_str(_self_.safe_ptr<_1d6327c46_Arr>());
}
inline jule::Bool _1d631b861_equals_11(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d63283b7_equals(_self_.data.as<_1d6327c46_Arr>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_12(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d6328a16_to_str(_self_.safe_ptr<_1d63286a3_Ptr>());
}
inline jule::Bool _1d631b861_equals_12(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d6328d24_equals(_self_.data.as<_1d63286a3_Ptr>(), _5626_other);
}
inline jule::Str _1d631b553_to_str_13(jule::Trait<_1d631b9a4_Kind> _self_) {
	return _1d735c3c8_to_str(_self_.safe_ptr<_1d735c10e_CustomType>());
}
inline jule::Bool _1d631b861_equals_13(jule::Trait<_1d631b9a4_Kind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _5626_other) {
	return _1d735c6d6_equals(_self_.data.as<_1d735c10e_CustomType>(), _5626_other);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335b33_find_package_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _935_ident) {
	return _1d625c9c2_find_package(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335e41_select_package_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _1337_selector) {
	return _1d625ccd0_select_package(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1d6298ea3_Var> _1d63362e8_find_var_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1d625d187_find_var(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d63366a0_find_type_alias_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1d625d53e_find_type_alias(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d5599dba_Struct> _1d6336a57_find_struct_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1d625d8e6_find_struct(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1d567a7e7_Fn> _1d6336e0e_find_fn_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1d625dc9d_find_fn(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1d59c3e1a_Trait> _1d633721c_find_trait_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3333_ident) {
	return _1d625e0ab_find_trait(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1d5692820_Enum> _1d633752a_find_enum_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3732_ident) {
	return _1d625e3b9_find_enum(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d6337838_find_type_enum_0(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _4137_ident) {
	return _1d625e6c7_find_type_enum(_self_.safe_ptr<_1d625c571_ScopeChecker>(), _4137_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335b33_find_package_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _935_ident) {
	return _1d62748da_find_package(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335e41_select_package_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _1337_selector) {
	return _1d6274be8_select_package(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1d6298ea3_Var> _1d63362e8_find_var_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1d62750a0_find_var(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d63366a0_find_type_alias_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1d6275457_find_type_alias(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d5599dba_Struct> _1d6336a57_find_struct_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1d627580e_find_struct(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1d567a7e7_Fn> _1d6336e0e_find_fn_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1d6275bb6_find_fn(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1d59c3e1a_Trait> _1d633721c_find_trait_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3333_ident) {
	return _1d6275ec4_find_trait(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1d5692820_Enum> _1d633752a_find_enum_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3732_ident) {
	return _1d62762d2_find_enum(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d6337838_find_type_enum_1(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _4137_ident) {
	return _1d62765e0_find_type_enum(_self_.safe_ptr<_1d62743bd_ImportInfo>(), _4137_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335b33_find_package_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _935_ident) {
	return _1d6277800_find_package(_self_.safe_ptr<_1d6277327_Package>(), _935_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335e41_select_package_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _1337_selector) {
	return _1d6277b0d_select_package(_self_.safe_ptr<_1d6277327_Package>(), _1337_selector);
}
inline jule::Ptr<_1d6298ea3_Var> _1d63362e8_find_var_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1d6277eb5_find_var(_self_.safe_ptr<_1d6277327_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d63366a0_find_type_alias_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1d627836c_find_type_alias(_self_.safe_ptr<_1d6277327_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d5599dba_Struct> _1d6336a57_find_struct_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1d6278724_find_struct(_self_.safe_ptr<_1d6277327_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1d567a7e7_Fn> _1d6336e0e_find_fn_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1d6278acb_find_fn(_self_.safe_ptr<_1d6277327_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1d59c3e1a_Trait> _1d633721c_find_trait_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3333_ident) {
	return _1d6278dd9_find_trait(_self_.safe_ptr<_1d6277327_Package>(), _3333_ident);
}
inline jule::Ptr<_1d5692820_Enum> _1d633752a_find_enum_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3732_ident) {
	return _1d62791e7_find_enum(_self_.safe_ptr<_1d6277327_Package>(), _3732_ident);
}
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d6337838_find_type_enum_2(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _4137_ident) {
	return _1d6279505_find_type_enum(_self_.safe_ptr<_1d6277327_Package>(), _4137_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335b33_find_package_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _935_ident) {
	return _1d627ca36_find_package(_self_.safe_ptr<_1d627c519_Sema>(), _935_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335e41_select_package_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _1337_selector) {
	return _1d627cd44_select_package(_self_.safe_ptr<_1d627c519_Sema>(), _1337_selector);
}
inline jule::Ptr<_1d6298ea3_Var> _1d63362e8_find_var_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1d627d1eb_find_var(_self_.safe_ptr<_1d627c519_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d63366a0_find_type_alias_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1d627d5a3_find_type_alias(_self_.safe_ptr<_1d627c519_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d5599dba_Struct> _1d6336a57_find_struct_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1d627d95a_find_struct(_self_.safe_ptr<_1d627c519_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1d567a7e7_Fn> _1d6336e0e_find_fn_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1d627dd12_find_fn(_self_.safe_ptr<_1d627c519_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1d59c3e1a_Trait> _1d633721c_find_trait_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3333_ident) {
	return _1d627e120_find_trait(_self_.safe_ptr<_1d627c519_Sema>(), _3333_ident);
}
inline jule::Ptr<_1d5692820_Enum> _1d633752a_find_enum_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3732_ident) {
	return _1d627e42d_find_enum(_self_.safe_ptr<_1d627c519_Sema>(), _3732_ident);
}
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d6337838_find_type_enum_3(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _4137_ident) {
	return _1d627e73b_find_type_enum(_self_.safe_ptr<_1d627c519_Sema>(), _4137_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335b33_find_package_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _935_ident) {
	return _1d62dbe6e_find_package(_self_.safe_ptr<_1d62db952_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1d62743bd_ImportInfo> _1d6335e41_select_package_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _1337_selector) {
	return _1d62dc27c_select_package(_self_.safe_ptr<_1d62db952_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1d6298ea3_Var> _1d63362e8_find_var_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1d62dc634_find_var(_self_.safe_ptr<_1d62db952_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1d631b1e0_TypeAlias> _1d63366a0_find_type_alias_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1d62dc9db_find_type_alias(_self_.safe_ptr<_1d62db952_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d5599dba_Struct> _1d6336a57_find_struct_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1d62dcd93_find_struct(_self_.safe_ptr<_1d62db952_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1d567a7e7_Fn> _1d6336e0e_find_fn_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1d62dd24a_find_fn(_self_.safe_ptr<_1d62db952_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1d59c3e1a_Trait> _1d633721c_find_trait_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3333_ident) {
	return _1d62dd558_find_trait(_self_.safe_ptr<_1d62db952_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1d5692820_Enum> _1d633752a_find_enum_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _3732_ident) {
	return _1d62dd866_find_enum(_self_.safe_ptr<_1d62db952_SymbolTable>(), _3732_ident);
}
inline jule::Ptr<_1d5a788b5_TypeEnum> _1d6337838_find_type_enum_4(jule::Trait<_1d633797b_Lookup> _self_, jule::Str _4137_ident) {
	return _1d62ddb74_find_type_enum(_self_.safe_ptr<_1d62db952_SymbolTable>(), _4137_ident);
}
inline jule::Str _1d737a2a3_name_0(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9973437_name(_self_.safe_ptr<_1d9b78de0_Flag>());
}
inline jule::I32 _1d7396c81_short_0(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b7940c_short(_self_.safe_ptr<_1d9b78de0_Flag>());
}
inline jule::Str _1d7396db3_what_0(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9973569_what(_self_.safe_ptr<_1d9b78de0_Flag>());
}
inline void _1d7396ee5_reset_0(jule::Trait<_1d7396874_CommonFlag> _self_) {
	_1d9b792ca_reset(_self_.safe_ptr<_1d9b78de0_Flag>());
}
inline jule::Str _1d737a2a3_name_1(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b7c5ec_name(_self_.safe_ptr<_1d9b7caa3_Flag>());
}
inline jule::I32 _1d7396c81_short_1(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b7d0d1_short(_self_.safe_ptr<_1d9b7caa3_Flag>());
}
inline jule::Str _1d7396db3_what_1(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b7cd6c_what(_self_.safe_ptr<_1d9b7caa3_Flag>());
}
inline void _1d7396ee5_reset_1(jule::Trait<_1d7396874_CommonFlag> _self_) {
	_1d9b7ce9e_reset(_self_.safe_ptr<_1d9b7caa3_Flag>());
}
inline jule::Str _1d737a2a3_name_2(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b810d4_name(_self_.safe_ptr<_1d9b8158a_Flag>());
}
inline jule::I32 _1d7396c81_short_2(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b81ab8_short(_self_.safe_ptr<_1d9b8158a_Flag>());
}
inline jule::Str _1d7396db3_what_2(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b81854_what(_self_.safe_ptr<_1d9b8158a_Flag>());
}
inline void _1d7396ee5_reset_2(jule::Trait<_1d7396874_CommonFlag> _self_) {
	_1d9b81986_reset(_self_.safe_ptr<_1d9b8158a_Flag>());
}
inline jule::Str _1d737a2a3_name_3(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b84b10_name(_self_.safe_ptr<_1d9b850b6_Flag>());
}
inline jule::I32 _1d7396c81_short_3(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b855e4_short(_self_.safe_ptr<_1d9b850b6_Flag>());
}
inline jule::Str _1d7396db3_what_3(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b85380_what(_self_.safe_ptr<_1d9b850b6_Flag>());
}
inline void _1d7396ee5_reset_3(jule::Trait<_1d7396874_CommonFlag> _self_) {
	_1d9b854b2_reset(_self_.safe_ptr<_1d9b850b6_Flag>());
}
inline jule::Str _1d737a2a3_name_4(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b885e7_name(_self_.safe_ptr<_1d9b88a9d_Flag>());
}
inline jule::I32 _1d7396c81_short_4(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b890cb_short(_self_.safe_ptr<_1d9b88a9d_Flag>());
}
inline jule::Str _1d7396db3_what_4(jule::Trait<_1d7396874_CommonFlag> _self_) {
	return _1d9b88d67_what(_self_.safe_ptr<_1d9b88a9d_Flag>());
}
inline void _1d7396ee5_reset_4(jule::Trait<_1d7396874_CommonFlag> _self_) {
	_1d9b88e99_reset(_self_.safe_ptr<_1d9b88a9d_Flag>());
}


static _1d6271ac4_ImporterMptrData _1d6271ac4_Importer_mptr_data[] = {
	{
		._1d62709e6_set_mod_path=_1d62709e6_set_mod_path_0,
		._1d6270c38_get_mod_path=_1d6270c38_get_mod_path_0,
		._1d6271046_mod_by_id=_1d6271046_mod_by_id_0,
		._1d6271354_get_import=_1d6271354_get_import_0,
		._1d627170b_import_package=_1d627170b_import_package_0,
		._1d6271981_imported=_1d6271981_imported_0,
	},
};
static _1d631b9a4_KindMptrData _1d631b9a4_Kind_mptr_data[] = {
	{
		._1d631b553_to_str=_1d631b553_to_str_0,
		._1d631b861_equals=_1d631b861_equals_0,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_1,
		._1d631b861_equals=_1d631b861_equals_1,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_2,
		._1d631b861_equals=_1d631b861_equals_2,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_3,
		._1d631b861_equals=_1d631b861_equals_3,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_4,
		._1d631b861_equals=_1d631b861_equals_4,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_5,
		._1d631b861_equals=_1d631b861_equals_5,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_6,
		._1d631b861_equals=_1d631b861_equals_6,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_7,
		._1d631b861_equals=_1d631b861_equals_7,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_8,
		._1d631b861_equals=_1d631b861_equals_8,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_9,
		._1d631b861_equals=_1d631b861_equals_9,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_10,
		._1d631b861_equals=_1d631b861_equals_10,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_11,
		._1d631b861_equals=_1d631b861_equals_11,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_12,
		._1d631b861_equals=_1d631b861_equals_12,
	},
	{
		._1d631b553_to_str=_1d631b553_to_str_13,
		._1d631b861_equals=_1d631b861_equals_13,
	},
};
static _1d633797b_LookupMptrData _1d633797b_Lookup_mptr_data[] = {
	{
		._1d6335b33_find_package=_1d6335b33_find_package_0,
		._1d6335e41_select_package=_1d6335e41_select_package_0,
		._1d63362e8_find_var=_1d63362e8_find_var_0,
		._1d63366a0_find_type_alias=_1d63366a0_find_type_alias_0,
		._1d6336a57_find_struct=_1d6336a57_find_struct_0,
		._1d6336e0e_find_fn=_1d6336e0e_find_fn_0,
		._1d633721c_find_trait=_1d633721c_find_trait_0,
		._1d633752a_find_enum=_1d633752a_find_enum_0,
		._1d6337838_find_type_enum=_1d6337838_find_type_enum_0,
	},
	{
		._1d6335b33_find_package=_1d6335b33_find_package_1,
		._1d6335e41_select_package=_1d6335e41_select_package_1,
		._1d63362e8_find_var=_1d63362e8_find_var_1,
		._1d63366a0_find_type_alias=_1d63366a0_find_type_alias_1,
		._1d6336a57_find_struct=_1d6336a57_find_struct_1,
		._1d6336e0e_find_fn=_1d6336e0e_find_fn_1,
		._1d633721c_find_trait=_1d633721c_find_trait_1,
		._1d633752a_find_enum=_1d633752a_find_enum_1,
		._1d6337838_find_type_enum=_1d6337838_find_type_enum_1,
	},
	{
		._1d6335b33_find_package=_1d6335b33_find_package_2,
		._1d6335e41_select_package=_1d6335e41_select_package_2,
		._1d63362e8_find_var=_1d63362e8_find_var_2,
		._1d63366a0_find_type_alias=_1d63366a0_find_type_alias_2,
		._1d6336a57_find_struct=_1d6336a57_find_struct_2,
		._1d6336e0e_find_fn=_1d6336e0e_find_fn_2,
		._1d633721c_find_trait=_1d633721c_find_trait_2,
		._1d633752a_find_enum=_1d633752a_find_enum_2,
		._1d6337838_find_type_enum=_1d6337838_find_type_enum_2,
	},
	{
		._1d6335b33_find_package=_1d6335b33_find_package_3,
		._1d6335e41_select_package=_1d6335e41_select_package_3,
		._1d63362e8_find_var=_1d63362e8_find_var_3,
		._1d63366a0_find_type_alias=_1d63366a0_find_type_alias_3,
		._1d6336a57_find_struct=_1d6336a57_find_struct_3,
		._1d6336e0e_find_fn=_1d6336e0e_find_fn_3,
		._1d633721c_find_trait=_1d633721c_find_trait_3,
		._1d633752a_find_enum=_1d633752a_find_enum_3,
		._1d6337838_find_type_enum=_1d6337838_find_type_enum_3,
	},
	{
		._1d6335b33_find_package=_1d6335b33_find_package_4,
		._1d6335e41_select_package=_1d6335e41_select_package_4,
		._1d63362e8_find_var=_1d63362e8_find_var_4,
		._1d63366a0_find_type_alias=_1d63366a0_find_type_alias_4,
		._1d6336a57_find_struct=_1d6336a57_find_struct_4,
		._1d6336e0e_find_fn=_1d6336e0e_find_fn_4,
		._1d633721c_find_trait=_1d633721c_find_trait_4,
		._1d633752a_find_enum=_1d633752a_find_enum_4,
		._1d6337838_find_type_enum=_1d6337838_find_type_enum_4,
	},
};
static _1d7396874_CommonFlagMptrData _1d7396874_CommonFlag_mptr_data[] = {
	{
		._1d737a2a3_name=_1d737a2a3_name_0,
		._1d7396c81_short=_1d7396c81_short_0,
		._1d7396db3_what=_1d7396db3_what_0,
		._1d7396ee5_reset=_1d7396ee5_reset_0,
	},
	{
		._1d737a2a3_name=_1d737a2a3_name_1,
		._1d7396c81_short=_1d7396c81_short_1,
		._1d7396db3_what=_1d7396db3_what_1,
		._1d7396ee5_reset=_1d7396ee5_reset_1,
	},
	{
		._1d737a2a3_name=_1d737a2a3_name_2,
		._1d7396c81_short=_1d7396c81_short_2,
		._1d7396db3_what=_1d7396db3_what_2,
		._1d7396ee5_reset=_1d7396ee5_reset_2,
	},
	{
		._1d737a2a3_name=_1d737a2a3_name_3,
		._1d7396c81_short=_1d7396c81_short_3,
		._1d7396db3_what=_1d7396db3_what_3,
		._1d7396ee5_reset=_1d7396ee5_reset_3,
	},
	{
		._1d737a2a3_name=_1d737a2a3_name_4,
		._1d7396c81_short=_1d7396c81_short_4,
		._1d7396db3_what=_1d7396db3_what_4,
		._1d7396ee5_reset=_1d7396ee5_reset_4,
	},
};


jule::Str _1d736aabd_OUT_DIR = jule::Str("dist", 4);
jule::Str _1d736c608_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1d737b56d_OUT = jule::Str();
jule::Str _23076803d_COMPILER = jule::Str();
jule::Str _2307682a2_COMPILER_PATH = jule::Str();
jule::Str _230768516_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _23076877a_SHADOWING = false;
jule::Bool _2307689de_TRANSPILATION = false;
jule::Bool _230768c86_TEST = false;
jule::Bool _230769083_RC = true;
jule::Bool _2307694a1_SAFETY = true;
jule::Bool _2307697ae_PRODUCTION = false;
jule::Ptr<_2181098c5_RangeTable> _2317747eb__L = jule::new_ptr<_2181098c5_RangeTable>(_2181098c5_RangeTable{._field_r16=jule::Slice<_218108ece_Range16>::make({_218108ece_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_218108ece_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_218108ece_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_218108ece_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_218108ece_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_218108ece_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_218108ece_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_218108ece_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_218108ece_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_218108ece_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_218108ece_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_218108ece_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_218108ece_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_218108ece_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_218108ece_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_218108ece_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_218108ece_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_218108ece_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_218108ece_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_218108ece_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_218108ece_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_218108ece_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_218108ece_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_218108ece_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_218108ece_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_218108ece_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_218108ece_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_218108ece_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_218108ece_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_218108ece_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_218108ece_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_218108ece_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_218108ece_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_218108ece_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_218108ece_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_218108ece_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_218108ece_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_218108ece_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_218108ece_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_218108ece_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_218108ece_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_218108ece_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_218108ece_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_218108ece_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_218108ece_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_218108ece_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_218108ece_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_218108ece_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_218108ece_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_218108ece_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_218108ece_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_218108ece_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_218108ece_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_218108ece_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_218108ece_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_218109452_Range32>::make({_218109452_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_218109452_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_218109452_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_218109452_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_218109452_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_218109452_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_218109452_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_218109452_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_218109452_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_218109452_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_218109452_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_218109452_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_218109452_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_218109452_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_218109452_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_218109452_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_218109452_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_218109452_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_218109452_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_218109452_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_218109452_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_218109452_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_218109452_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_218109452_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_218109452_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_218109452_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_218109452_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_218109452_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_218109452_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_218109452_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_218109452_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_218109452_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_218109452_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _23185a5b3_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _21867c365_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _21867d8c7_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _21868d893_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _21868dc28_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _1ed63c6d6_PATH_STDLIB = jule::Str();
jule::Str _1ed64c76d_PATH_EXEC = jule::Str();
jule::Str _1ed64d054_PATH_WD = jule::Str();
jule::Str _1ed63c351_PATH_API = jule::Str();
jule::Array<jule::I32,5> _1ee4885a8_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1ee48881c_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1ee488b5d_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1ee533323_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1ee533664_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1ee541243_KindPair,47> _1ee5416c7_KEYWORDS = jule::Array<_1ee541243_KindPair,47>({_1ee541243_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1ee541243_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1ee541243_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1ee541243_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1ee541243_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1ee541243_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1ee541243_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1ee541243_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1ee541243_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1ee541243_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1ee541243_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1ee541243_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1ee541243_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1ee541243_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1ee541243_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_1ee541243_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_1ee541243_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1ee541243_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_1ee541243_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_1ee541243_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_1ee541243_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1ee541243_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_1ee541243_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_1ee541243_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_1ee541243_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_1ee541243_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_1ee541243_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_1ee541243_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_1ee541243_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_1ee541243_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_1ee541243_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_1ee541243_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1ee541243_KindPair,39> _1ee541a5c_BASIC_OPS = jule::Array<_1ee541243_KindPair,39>({_1ee541243_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_1ee541243_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1ee541243_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1ee541243_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1ee541243_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1ee541243_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1ee541243_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1d61810ee_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1d618174d_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1d5c8e5e2_FloatInfo _1d5ad9508_F32_INFO = _1d5c8e5e2_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1d5c8e5e2_FloatInfo _1d5ade9e7_F64_INFO = _1d5c8e5e2_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1d5b91978_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1d5bd48cd_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1d5beb780_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1d5c5d69e_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1d5c9176a_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1d61c0a34_LeftCheat> _1d5cb7c25_LEFTCHEATS = jule::Slice<_1d61c0a34_LeftCheat>::make({_1d61c0a34_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1d61c0a34_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1d61c0a34_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1d61c0a34_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1d61c0a34_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1d61c0a34_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1d61c0a34_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1d61c0a34_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1d61c0a34_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1d61c0a34_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1d61c0a34_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1d61c0a34_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1d61c0a34_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1d61c0a34_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1d61c0a34_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1d61c0a34_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1d61c0a34_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1d61c0a34_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1d61c0a34_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1d61c0a34_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1d61c0a34_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1d61c0a34_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1d61c0a34_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1d61c0a34_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1d61c0a34_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1d61c0a34_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1d61c0a34_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1d61c0a34_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1d61c0a34_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1d61c0a34_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1d61c0a34_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1d61c0a34_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1d61c0a34_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1d61c0a34_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1d61c0a34_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1d61c0a34_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1d61c0a34_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1d61c0a34_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1d61c0a34_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1d61c0a34_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1d61c0a34_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1d61c0a34_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1d61c0a34_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1d61c0a34_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1d61c0a34_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1d61c0a34_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1d61c0a34_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1d61c0a34_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1d61c0a34_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1d61c0a34_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1d61c0a34_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1d61c0a34_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1d61c0a34_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1d61c0a34_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1d61c0a34_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1d61c0a34_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1d61c0a34_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1d61c0a34_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1d61c0a34_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1d61c0a34_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1d61c0a34_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1d62473e6_BIT_SIZE = 0LL;
jule::Str _1d624765a_SYS_INT = jule::Str();
jule::Str _1d62478be_SYS_UINT = jule::Str();
jule::Slice<jule::Str> _1d61c7e6a_BUILTIN_CONSTRAINTS = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _230783bc4_COPY = false;
jule::Bool _230769902_DEADCODE = false;
jule::Bool _23094dae7_APPEND = false;
jule::Bool _230953c51_MATH = false;
jule::Bool _2309616ba_ACCESS = false;
jule::Bool _23095be8a_INLINE = false;
jule::Bool _1d4e1203a_PTR = false;
jule::Bool _1d4e1d2dd_COND = false;
jule::Bool _1d6b55e03_expr_enabled = false;
jule::Bool _1d6b57058_scope_enabled = false;
jule::Array<jule::U64,12> _1d734ec8e_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ed63cc7a_OS = jule::Str("linux", 5);
jule::Str _218695988_ARCH = jule::Str("arm64", 5);
jule::Array<_21862780a_accept_range,16> _218627b6d_ACCEPT_RANGES = jule::Array<_21862780a_accept_range,16>({_21862780a_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_21862780a_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_21862780a_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_21862780a_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_21862780a_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1ed65390b_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_2181098c5_RangeTable> _2180935d9_LETTER = _2317747eb__L;
jule::Array<jule::U8,256> _218102bba__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _218627288_FIRST = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _218108ece_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _218109452_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2181098c5_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21862780a_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _218631836_index(_2186313b3_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _218631aab_append(_2186313b3_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _218631d20_string(_2186313b3_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _2186313b3_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2316d6a05_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>> static__2318742be_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_2316d6a05_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>();
	DIR* _1617_dir = _2316a5078_opendir((&(_1524_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>>(_2315d1db7_get_last_fs_error());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _2316a51aa_readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1d7a9b573;
			};
			jule::Str _2517_name = _2316a431e_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_2316d7d8b_Status> _2621_stat = ({
				auto except = static__2315d2bdc_of(_218632a24_join(jule::Slice<jule::Str>::make({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>>(except.error);
				} jule::Ptr<_2316d7d8b_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_2316d6a05_DirEntry>(_2316d6a05_DirEntry{._field_name=_2517_name, ._field_stat=_2621_stat}));;
		}
	_iter_next_1d7a9b573:;
	}
	_iter_end_1d7a9b573:;;
	_2316a551d_closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__2318849d8_create(jule::Str _3926_path) {
	if ((_2316a58b4_mkdir((&(_3926_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_2315d1db7_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2318855aa_remove(jule::Str _5126_path) {
	if ((_2316a59e6_rmdir((&(_5126_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_2315d1db7_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2316d6be2_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2316d7286_File>> static__2315d2093_open(jule::Str _1824_path, jule::I64 _1835_flag, jule::I64 _1848_mode) {
	jule::I64 _1913_handle = _2316a4d14_open((&(_1824_path[0LL])),static_cast<jule::I64>(_1835_flag),_1848_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2316d7286_File>>(_2315d1db7_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_2316d7286_File>>(jule::Any(),static__2316d7473_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__2315d55d5_remove(jule::Str _3026_path) {
	if ((_2316a5b28_unlink((&(_3026_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_2315d1db7_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _231612678_write(_2316d7286_File* _self_, jule::Slice<jule::U8> _4428_buff) {
	jule::I64 _4445_n = jule::I64();
	if ((_4428_buff.len() == 0LL)) {
		_4445_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
	};
	_4445_n=static_cast<jule::I64>(_2316a8136_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4428_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4428_buff.len()))));
	if ((_4445_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2315d1db7_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::I64> _2315d2626_read(_2316d7286_File* _self_, jule::Slice<jule::U8> _6531_buff) {
	jule::I64 _6548_n = jule::I64();
	if ((_6531_buff.len() == 0LL)) {
		_6548_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
	};
	_6548_n=static_cast<jule::I64>(_2316a78c7_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6531_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6531_buff.len()))));
	if ((_6548_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2315d1db7_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
}



inline jule::Ptr<_2316d7286_File> static__2316d7473_new(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_2316d7286_File>(_2316d7286_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_2316d7286_File>> static__2316d75a5_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_2316d7286_File>>(jule::Any(),({
		auto except = static__2315d2093_open(_5526_path,((static_cast<jule::I64>(578LL) | 578LL) | 578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_2316d7286_File>>(except.error);
		} jule::Ptr<_2316d7286_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2316d76d7_read(jule::Str _6724_path) {
	jule::Ptr<_2316d7d8b_Status> _6813_s = ({
		auto except = static__2315d2bdc_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2316d7d8b_Status>();});
	});;
	if ((!(_2316d81aa_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_2316d7286_File> _7817_f = ({
		auto except = static__2315d2093_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2316d7286_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _2316d7a7d_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _2315d2626_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__2316d7819_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_2316d7286_File> _9217_f = ({
		auto except = static__2315d2093_open(_9125_path,((static_cast<jule::I64>(577LL) | 577LL) | 577LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2316d7286_File>();});
	});;
	({
		auto except = _231612678_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2316d7a7d_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2316d794b_seek(_2316d7286_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _2316a74dc_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_2315d1db7_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _2316d7a7d_close(_2316d7286_File* _self_) {
	if ((_2316a7c4b_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_2315d1db7_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2316d7286_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2316d7d8b_Status>> static__2315d2bdc_of(jule::Str _1122_path) {
	if (_1122_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2316d7d8b_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _2316a4bd2_stat((&(_1122_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_2316d7d8b_Status>>(jule::Any(),jule::new_ptr<_2316d7d8b_Status>(_2316d7d8b_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_2316d7d8b_Status>>(_2315d1db7_get_last_fs_error());
}



inline jule::Bool _2316d8078_is_dir(_2316d7d8b_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _2316d81aa_is_reg(_2316d7d8b_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _2316d7d8b_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ed64e462_Cmd> static__1ed64e891_new(jule::Str _2023_path) {
	return jule::new_ptr<_1ed64e462_Cmd>(_1ed64e462_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _1ed64eb05_spawn(_1ed64e462_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1ed652a92___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1ed652a92___spawn(_1ed64e462_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1d7ac02ab:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d7ac16db:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_1ed6523bb_execvp((*_self_)._field_path,(*_self_)._field_args));
				} else {
					_5421_status=static_cast<jule::I64>(_1ed6527a6_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_1ed6533bc_exit(255LL);
			}
		}
		_match_end_1d7ac1587:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1ed64dbd1_get_last_process_error());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _1ed64e462_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21868a483_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ee539208_prec(_1ee538d51_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1d7b73639:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1d7b736a0:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1d7b7302e:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1d7b73095:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1d7b7310b:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1d7b72ced:;
			{
				return 0LLU;
			}
		}
		_match_end_1d7b72429:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ee538d51_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ee53e5e8_is_ok(_1ee53e1db_File* _self_) {
	({
		auto except = static__2315d2bdc_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_2316d7d8b_Status>();});
	});
	return true;
}



inline void _1ee53e86d_fill(_1ee53e1db_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1ee53ead2_dir(_1ee53e1db_File* _self_) {
	return _21863367e_dir((*_self_)._field_path);
}



inline jule::Str _1ee53ed46_name(_1ee53e1db_File* _self_) {
	return _21863330a_base((*_self_)._field_path);
}



inline jule::Uintptr _1ee5400aa_addr(_1ee53e1db_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1ee5403b8_get_row(_1ee53e1db_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1d7b782dc;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1d7b782dc:;
	}
	_iter_end_1d7b782dc:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1ee53e1db_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ee541243_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ee547414_push_err(_1ee546d70_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ee542046_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _1ee547733_push_err_tok(_1ee546d70_Lex* _self_, jule::Ptr<_1ee538d51_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ee542046_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _1ee54790e_lex(_1ee546d70_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1ee549911_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_1ee538d51_Token> _47321_token = _1ee54ac86_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1d7bb019d:;
	}
	_iter_end_1d7bb019d:;;
}



inline jule::Str _1ee547c1c_id(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _2186283dd_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_1ee53c32c_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _2186283dd_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1ee53c86b_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1ee53c32c_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1d7bb357a:;
	}
	_iter_end_1d7bb357a:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1ee547e81_resume(_1ee546d70_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_1ee53bdcb_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1d7bbd09b:;
						{
							_1ee549911_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1d7bbd112:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1d7bb6160:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1d7bbcb06:;
				};
				goto _iter_next_1d7bb6418;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1d7bb7161;
					};
				}
			_iter_next_1d7bb7161:;
			}
			_iter_end_1d7bb7161:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1d7bb6418:;
	}
	_iter_end_1d7bb6418:;;
	return nullptr;
}



inline void _1ee548206_lex_line_comment(_1ee546d70_Lex* _self_, jule::Ptr<_1ee538d51_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1d7bc0a1b;
			};
		}
	_iter_next_1d7bc0a1b:;
	}
	_iter_end_1d7bc0a1b:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _1ee54847b_lex_range_comment(_1ee546d70_Lex* _self_, jule::Ptr<_1ee538d51_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1d7bc3dc6;
			};
			if ((_55517_r == '\n')) {
				_1ee549911_new_line(&(*_self_));
				goto _iter_next_1d7bc3dc6;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1d7bc3dc6:;
	}
	_iter_end_1d7bc3dc6:;;
	_1ee547414_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1ee548789_num(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_1ee545863_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1ee5455bb_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1ee544015_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1ee543c6d_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _1ee548a97_escape_seq(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1d7bce057:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1d7bcdc5a:;
			{
				_60217_seq=_1ee545e6d_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1d7bcdcc1:;
			{
				_60217_seq=_1ee546138_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1d7bcdd37:;
			{
				_60217_seq=_1ee5463e1_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1d7bcd4da:;
			{
				_60217_seq=_1ee546688_byte_escape(_60130_txt);
			}
		}
		_match_end_1d7bcdb17:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_1ee547414_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _1ee548e4e_get_rune(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _1ee548a97_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _2186283dd_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _1ee54925c_lex_rune(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1d7bd603c;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_1ee547414_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1ee549911_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _1ee548e4e_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_21862a0d2_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1d7bd603c;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1d7bd603c:;
	}
	_iter_end_1d7bd603c:;;
	if ((_64417_n == 0LL)) {
		_1ee547414_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_1ee547414_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _1ee5494c1_lex_str(_1ee546d70_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1d7bdc0ba;
			};
			if ((_68917_ch == '\n')) {
				_1ee549911_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_1ee547414_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _1ee548e4e_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_21862a0d2_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1d7bdc0ba;
			};
		}
	_iter_next_1d7bdc0ba:;
	}
	_iter_end_1d7bdc0ba:;;
	return _68117_s;
}



inline jule::Bool _1ee549735_is_first_token_of_line(_1ee546d70_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1ee549911_new_line(_1ee546d70_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1ee549e0b_is_op(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_1ee538d51_Token>& _72267_t) {
	if ((!(_1ee5423cb_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _1ee54a2b3_lex_basic_ops(_1ee546d70_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_1ee538d51_Token>& _73350_tok) {
	{
		auto &expr = _1ee541a5c_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1d7be36a9:;
		if (it != expr.end()) {
			_1ee541243_KindPair &_73416_pair = *it;
			{
				if (_1ee549e0b_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1d7be36a9:;
			++it;
			goto _iter_begin_1d7be36a9;
		}
		_iter_end_1d7be36a9:;
	};
	return false;
}



inline jule::Bool _1ee54a66a_lex_id(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_1ee538d51_Token>& _74344_t) {
	jule::Str _74413_lex = _1ee547c1c_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1ee54aa22_lex_num(_1ee546d70_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_1ee538d51_Token>& _75445_t) {
	jule::Str _75513_lex = _1ee548789_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1ee538d51_Token> _1ee54ac86_token(_1ee546d70_Lex* _self_) {
	jule::Ptr<_1ee538d51_Token> _76717_t = jule::new_ptr<_1ee538d51_Token>(_1ee538d51_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _1ee547e81_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_1ee54aa22_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1d7be9a9a:;
			{
				goto _match_end_1d7be85e3;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1d7be9b11:;
			{
				_76717_t.get()._field_kind=_1ee54925c_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1d7bea727:;
			{
				_76717_t.get()._field_kind=_1ee5494c1_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_1ee5423cb_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1d7bea78d:;
			{
				_1ee548206_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1ee5423cb_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1d7bea804:;
			{
				_1ee54847b_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1ee549e0b_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1ee549e0b_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1ee549e0b_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1ee549e0b_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1ee549e0b_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1ee549e0b_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1ee54a2b3_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1d7be901c:;
			{
				goto _match_end_1d7be85e3;
			}
		}
		else if (_1ee54a66a_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1d7be9083:;
			{
				{
					auto &expr = _1ee5416c7_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1d7c00c27:;
					if (it != expr.end()) {
						_1ee541243_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1d7c00c27;
							};
						}
						_iter_next_1d7c00c27:;
						++it;
						goto _iter_begin_1d7c00c27;
					}
					_iter_end_1d7c00c27:;
				};
			}
		}
		else {
			_case_begin_1d7be8ea6:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _2186283dd_decode_rune(_77213_txt);
				_1ee547414_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1d7be85e3:;
	};
	(*_self_)._field_column+=_21862a0d2_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1ee546d70_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5574b0e_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d557588a_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5575c86_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55a968d_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55aa0b7_is_prim(_1d55a9c54_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1d55a9c54_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55aa3a3_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55aa75a_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55aaa46_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55aae42_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ab22d_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55ab86b_is_unsafe(_1d55ab519_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ab519_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55ac075_auto_sized(_1d55abb9b_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55abb9b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ac3e9_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ac7a1_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55adbae_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ade9a_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ae550_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ae83b_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55b0045_is_nil(_1d55aebe3_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1d55aebe3_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b03ec_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b07a4_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55b1079_is_self(_1d55b0c27_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b0c27_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b1431_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b17d8_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b1b90_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b2047_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b24ba_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b293d_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55b33ab_unhandled(_1d55b3048_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1d55b3620_ignored(_1d55b3048_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b3048_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55b3d29_is_targeted(_1d55b39c7_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b39c7_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b4225_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55b4d19_is_empty(_1d55b4698_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b4698_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b51b0_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55b5985_is_empty(_1d55b5633_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b5633_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b5ec4_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b65ce_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b68ba_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "mask:" << _Src._field_mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b6d3d_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "constraint:" << _Src._field_constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b71e5_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b759c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b7888_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b7e93_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b84d2_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b946c_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55b9a77_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55ba5b1_is_self(_1d55ba24d_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1d55ba825_is_ref(_1d55ba24d_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1d55ba24d_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55bb8c0_is_anon(_1d55bb56d_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1d55bb56d_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55bc54c_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55bc904_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55bd3b6_is_inf(_1d55bd064_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55bd064_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55bdb8b_is_while_next(_1d55bd839_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55bd839_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55be1ca_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55be582_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55be939_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55bedac_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c0264_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c06d7_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c0dad_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c1331_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c1a07_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c2299_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55c2a6e_auto_expr(_1d55c271c_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c271c_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55c37c8_default_typed(_1d55c3245_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c3245_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c3c4b_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c3e49_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c4499_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c4d07_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c5412_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d55c5d80_is_trait_impl(_1d55c5a1c_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1d55c60e4_is_struct_impl(_1d55c5a1c_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c5a1c_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d561288e_Const> static__1d5669eac_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1d561288e_Const>(_1d561288e_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1d561288e_Const> static__1d566a0de_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1d561288e_Const>(_1d561288e_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1d561288e_Const> static__1d566a221_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1d561288e_Const>(_1d561288e_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1d561288e_Const> static__1d566a452_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1d561288e_Const>(_1d561288e_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1d561288e_Const> static__1d566a6e9_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1d561288e_Const>(_1d561288e_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1d561288e_Const> static__1d566a8e7_new_nil(void) {
	return jule::new_ptr<_1d561288e_Const>(_1d561288e_Const{._field_data=nullptr});
}



inline jule::I64 _1d566aee1_read_i64(_1d561288e_Const* _self_) {
	if ((!(_1d566d389_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1d566b255_read_u64(_1d561288e_Const* _self_) {
	if ((!(_1d566d5ed_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1d566b4b9_read_bool(_1d561288e_Const* _self_) {
	if ((!(_1d566d862_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1d566b72d_read_str(_1d561288e_Const* _self_) {
	if ((!(_1d566dac6_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1d566b992_read_f64(_1d561288e_Const* _self_) {
	if ((!(_1d566dd3a_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1d566bc06_as_i64(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d7c62b02:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d7c62b68:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d7c624e7:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1d7c6244d:;
			{
				return 0LL;
			}
		}
		_match_end_1d7c623e8:;
	};
}



inline jule::U64 _1d566be6a_as_u64(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d7c63a9d:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d7c6463c:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d7c646a3:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1d7c62926:;
			{
				return 0LLU;
			}
		}
		_match_end_1d7c628c1:;
	};
}



inline jule::F64 _1d566c1ce_as_f64(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d7c655d8:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d7c66177:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d7c661dd:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1d7c6485c:;
			{
				return 0LL;
			}
		}
		_match_end_1d7c64807:;
	};
}



inline void _1d566c454_set_i64(_1d561288e_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1d566c6c9_set_u64(_1d561288e_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1d566c94e_set_bool(_1d561288e_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1d566cbc4_set_str(_1d561288e_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1d566ce49_set_f64(_1d561288e_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1d566d125_set_nil(_1d561288e_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1d566d389_is_i64(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d7c69e28:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d7c69d4b:;
			{
				return false;
			}
		}
		_match_end_1d7c69ce6:;
	};
}



inline jule::Bool _1d566d5ed_is_u64(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d7c6a9ea:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d7c6a6cb:;
			{
				return false;
			}
		}
		_match_end_1d7c6a3e0:;
	};
}



inline jule::Bool _1d566d862_is_bool(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1d7c6b523:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d7c6b204:;
			{
				return false;
			}
		}
		_match_end_1d7c6ade6:;
	};
}



inline jule::Bool _1d566dac6_is_str(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1d7c6c04b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d7c6bc2c:;
			{
				return false;
			}
		}
		_match_end_1d7c6b91e:;
	};
}



inline jule::Bool _1d566dd3a_is_f64(_1d561288e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d7c6ca74:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d7c6c755:;
			{
				return false;
			}
		}
		_match_end_1d7c6c447:;
	};
}



inline jule::Bool _1d566e09e_is_nil(_1d561288e_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1d566e3ac_are_same_types(_1d561288e_Const* _self_, _1d561288e_Const _21033_x) {
	{
		
		if ((_1d566d389_is_i64(&(*_self_)) == _1d566d389_is_i64(&_21033_x))) {
			_case_begin_1d7c6e416:;
			{
				return true;
			}
		}
		else if ((_1d566d5ed_is_u64(&(*_self_)) == _1d566d5ed_is_u64(&_21033_x))) {
			_case_begin_1d7c6dba7:;
			{
				return true;
			}
		}
		else if ((_1d566dd3a_is_f64(&(*_self_)) == _1d566dd3a_is_f64(&_21033_x))) {
			_case_begin_1d7c6dc2e:;
			{
				return true;
			}
		}
		else if ((_1d566d862_is_bool(&(*_self_)) == _1d566d862_is_bool(&_21033_x))) {
			_case_begin_1d7c6dca6:;
			{
				return true;
			}
		}
		else if ((_1d566dac6_is_str(&(*_self_)) == _1d566dac6_is_str(&_21033_x))) {
			_case_begin_1d7c6dd2d:;
			{
				return true;
			}
		}
		else if ((_1d566e09e_is_nil(&(*_self_)) == _1d566e09e_is_nil(&_21033_x))) {
			_case_begin_1d7c6e0c5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d7c6db30:;
			{
				return false;
			}
		}
		_match_end_1d7c6da53:;
	};
}



inline jule::Bool _1d566e6ba_and(_1d561288e_Const* _self_, _1d561288e_Const _23522_x) {
	{
		
		if ((_1d566d862_is_bool(&(*_self_)) && _1d566d862_is_bool(&_23522_x))) {
			_case_begin_1d7c7287b:;
			{
				return (_1d566b4b9_read_bool(&(*_self_)) && _1d566b4b9_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1d7c71e85:;
			{
				return false;
			}
		}
		_match_end_1d7c71da8:;
	};
}



inline jule::Bool _1d566e9c8_or(_1d561288e_Const* _self_, _1d561288e_Const _24621_x) {
	{
		
		if ((_1d566d862_is_bool(&(*_self_)) && _1d566d862_is_bool(&_24621_x))) {
			_case_begin_1d7c73c9a:;
			{
				return (_1d566b4b9_read_bool(&(*_self_)) || _1d566b4b9_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1d7c72bde:;
			{
				return false;
			}
		}
		_match_end_1d7c72b12:;
	};
}



inline jule::Bool _1d566ecd6_eq(_1d561288e_Const* _self_, _1d561288e_Const _25721_x) {
	{
		
		if (_1d566e09e_is_nil(&(*_self_))) {
			_case_begin_1d7c7521e:;
			{
				return _1d566e09e_is_nil(&_25721_x);
			}
		}
		else if (_1d566d862_is_bool(&(*_self_))) {
			_case_begin_1d7c74a04:;
			{
				return (_1d566d862_is_bool(&_25721_x) && (_1d566b4b9_read_bool(&(*_self_)) == _1d566b4b9_read_bool(&_25721_x)));
			}
		}
		else if (_1d566dac6_is_str(&(*_self_))) {
			_case_begin_1d7c74a6a:;
			{
				return (_1d566dac6_is_str(&_25721_x) && (_1d566b72d_read_str(&(*_self_)) == _1d566b72d_read_str(&_25721_x)));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c74ae2:;
			{
				return (_1d566aee1_read_i64(&(*_self_)) == _1d566bc06_as_i64(&_25721_x));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c74b69:;
			{
				return (_1d566b255_read_u64(&(*_self_)) == _1d566be6a_as_u64(&_25721_x));
			}
		}
		else if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c74e00:;
			{
				return (_1d566b992_read_f64(&(*_self_)) == _1d566c1ce_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1d7c74141:;
			{
				return false;
			}
		}
		_match_end_1d7c74064:;
	};
}



inline jule::Bool _1d56700e4_lt(_1d561288e_Const* _self_, _1d561288e_Const _28421_x) {
	{
		
		if (_1d566dac6_is_str(&(*_self_))) {
			_case_begin_1d7c79476:;
			{
				return (_1d566dac6_is_str(&_28421_x) && (_1d566b72d_read_str(&(*_self_)) < _1d566b72d_read_str(&_28421_x)));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c78d27:;
			{
				return (_1d566aee1_read_i64(&(*_self_)) < _1d566bc06_as_i64(&_28421_x));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c78d8d:;
			{
				return (_1d566b255_read_u64(&(*_self_)) < _1d566be6a_as_u64(&_28421_x));
			}
		}
		else if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c78e04:;
			{
				return (_1d566b992_read_f64(&(*_self_)) < _1d566c1ce_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1d7c7554e:;
			{
				return false;
			}
		}
		_match_end_1d7c78783:;
	};
}



inline jule::Bool _1d5670402_lt_eq(_1d561288e_Const* _self_, _1d561288e_Const _30724_x) {
	{
		
		if (_1d566dac6_is_str(&(*_self_))) {
			_case_begin_1d7c7c512:;
			{
				return (_1d566dac6_is_str(&_30724_x) && (_1d566b72d_read_str(&(*_self_)) <= _1d566b72d_read_str(&_30724_x)));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c7bdb3:;
			{
				return (_1d566aee1_read_i64(&(*_self_)) <= _1d566bc06_as_i64(&_30724_x));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c7be29:;
			{
				return (_1d566b255_read_u64(&(*_self_)) <= _1d566be6a_as_u64(&_30724_x));
			}
		}
		else if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c7be90:;
			{
				return (_1d566b992_read_f64(&(*_self_)) <= _1d566c1ce_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1d7c79685:;
			{
				return false;
			}
		}
		_match_end_1d7c7b5cc:;
	};
}



inline jule::Bool _1d5670710_gt(_1d561288e_Const* _self_, _1d561288e_Const _33021_x) {
	{
		
		if (_1d566dac6_is_str(&(*_self_))) {
			_case_begin_1d7c8059d:;
			{
				return (_1d566dac6_is_str(&_33021_x) && (_1d566b72d_read_str(&(*_self_)) > _1d566b72d_read_str(&_33021_x)));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c7ee4e:;
			{
				return (_1d566aee1_read_i64(&(*_self_)) > _1d566bc06_as_i64(&_33021_x));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c7eeb5:;
			{
				return (_1d566b255_read_u64(&(*_self_)) > _1d566be6a_as_u64(&_33021_x));
			}
		}
		else if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c8002b:;
			{
				return (_1d566b992_read_f64(&(*_self_)) > _1d566c1ce_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1d7c7c721:;
			{
				return false;
			}
		}
		_match_end_1d7c7e668:;
	};
}



inline jule::Bool _1d5670a1d_gt_eq(_1d561288e_Const* _self_, _1d561288e_Const _35324_x) {
	{
		
		if (_1d566dac6_is_str(&(*_self_))) {
			_case_begin_1d7c83639:;
			{
				return (_1d566dac6_is_str(&_35324_x) && (_1d566b72d_read_str(&(*_self_)) >= _1d566b72d_read_str(&_35324_x)));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c82eda:;
			{
				return (_1d566aee1_read_i64(&(*_self_)) >= _1d566bc06_as_i64(&_35324_x));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c83051:;
			{
				return (_1d566b255_read_u64(&(*_self_)) >= _1d566be6a_as_u64(&_35324_x));
			}
		}
		else if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c830b7:;
			{
				return (_1d566b992_read_f64(&(*_self_)) >= _1d566c1ce_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1d7c807ac:;
			{
				return false;
			}
		}
		_match_end_1d7c82704:;
	};
}



inline jule::Bool _1d5670d2b_add(_1d561288e_Const* _self_, _1d561288e_Const _37426_x) {
	{
		
		if (_1d566dac6_is_str(&(*_self_))) {
			_case_begin_1d7c866c5:;
			{
				if ((!(_1d566dac6_is_str(&_37426_x)))) {
					return false;
				};
				_1d566cbc4_set_str(&(*_self_), (_1d566b72d_read_str(&(*_self_)) + _1d566b72d_read_str(&_37426_x)));
			}
		}
		else if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c86076:;
			{
				_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566b992_read_f64(&(*_self_)) + _1d566c1ce_as_f64(&_37426_x))));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c860dc:;
			{
				if (_1d566dd3a_is_f64(&_37426_x)) {
					_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566c1ce_as_f64(&(*_self_)) + _1d566b992_read_f64(&_37426_x))));
				} else {
					_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_1d566aee1_read_i64(&(*_self_)) + _1d566bc06_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c86153:;
			{
				if (_1d566dd3a_is_f64(&_37426_x)) {
					_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566c1ce_as_f64(&(*_self_)) + _1d566b992_read_f64(&_37426_x))));
				} else {
					_1d566c6c9_set_u64(&(*_self_), static_cast<jule::U64>((_1d566b255_read_u64(&(*_self_)) + _1d566be6a_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1d7c83848:;
			{
				return false;
			}
		}
		_match_end_1d7c85790:;
	};
	return true;
}



inline jule::Bool _1d5671139_sub(_1d561288e_Const* _self_, _1d561288e_Const _40326_x) {
	{
		
		if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c8c005:;
			{
				_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566b992_read_f64(&(*_self_)) - _1d566c1ce_as_f64(&_40326_x))));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c8b7da:;
			{
				if (_1d566dd3a_is_f64(&_40326_x)) {
					_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566c1ce_as_f64(&(*_self_)) - _1d566b992_read_f64(&_40326_x))));
				} else {
					_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_1d566aee1_read_i64(&(*_self_)) - _1d566bc06_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c8b851:;
			{
				if (_1d566dd3a_is_f64(&_40326_x)) {
					_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566c1ce_as_f64(&(*_self_)) - _1d566b992_read_f64(&_40326_x))));
				} else {
					_1d566c6c9_set_u64(&(*_self_), static_cast<jule::U64>((_1d566b255_read_u64(&(*_self_)) - _1d566be6a_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1d7c8b774:;
			{
				return false;
			}
		}
		_match_end_1d7c8ae05:;
	};
	return true;
}



inline jule::Bool _1d5671447_mul(_1d561288e_Const* _self_, _1d561288e_Const _42726_x) {
	{
		
		if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c91768:;
			{
				_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566b992_read_f64(&(*_self_)) * _1d566c1ce_as_f64(&_42726_x))));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c91070:;
			{
				if (_1d566dd3a_is_f64(&_42726_x)) {
					_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566c1ce_as_f64(&(*_self_)) * _1d566b992_read_f64(&_42726_x))));
				} else {
					_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_1d566aee1_read_i64(&(*_self_)) * _1d566bc06_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c910d6:;
			{
				if (_1d566dd3a_is_f64(&_42726_x)) {
					_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>((_1d566c1ce_as_f64(&(*_self_)) * _1d566b992_read_f64(&_42726_x))));
				} else {
					_1d566c6c9_set_u64(&(*_self_), static_cast<jule::U64>((_1d566b255_read_u64(&(*_self_)) * _1d566be6a_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1d7c91009:;
			{
				return false;
			}
		}
		_match_end_1d7c904ae:;
	};
	return true;
}



inline jule::Bool _1d5671755_div(_1d561288e_Const* _self_, _1d561288e_Const _45526_x) {
	{
		
		if (_1d566dd3a_is_f64(&(*_self_))) {
			_case_begin_1d7c95edc:;
			{
				jule::F64 _45817_l = _1d566c1ce_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1d566b992_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c957e4:;
			{
				jule::F64 _46417_l = _1d566c1ce_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1d566c1ce_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c9585a:;
			{
				jule::F64 _47017_l = _1d566c1ce_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1d566ce49_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1d566c1ce_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1d7c9577d:;
			{
				return false;
			}
		}
		_match_end_1d7c94c33:;
	};
	return true;
}



inline jule::Bool _1d5671a63_mod(_1d561288e_Const* _self_, _1d561288e_Const _48426_x) {
	{
		
		if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c9a7b6:;
			{
				jule::I64 _48717_l = _1d566bc06_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1d566aee1_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c9a08a:;
			{
				jule::U64 _49317_l = _1d566be6a_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1d566c6c9_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1d566b255_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1d7c9a024:;
			{
				return false;
			}
		}
		_match_end_1d7c99e47:;
	};
	return true;
}



inline jule::Bool _1d5671d71_bitwise_and(_1d561288e_Const* _self_, _1d561288e_Const _50634_x) {
	{
		
		if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7c9db1b:;
			{
				_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_1d566aee1_read_i64(&(*_self_)) & _1d566bc06_as_i64(&_50634_x))));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7c9d3e0:;
			{
				_1d566c6c9_set_u64(&(*_self_), static_cast<jule::U64>((_1d566b255_read_u64(&(*_self_)) & _1d566be6a_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1d7c9d379:;
			{
				return false;
			}
		}
		_match_end_1d7c9d29c:;
	};
	return true;
}



inline jule::Bool _1d567217e_bitwise_or(_1d561288e_Const* _self_, _1d561288e_Const _52033_x) {
	{
		
		if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7ca0ca5:;
			{
				_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_1d566aee1_read_i64(&(*_self_)) | _1d566bc06_as_i64(&_52033_x))));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7ca0579:;
			{
				_1d566c6c9_set_u64(&(*_self_), static_cast<jule::U64>((_1d566b255_read_u64(&(*_self_)) | _1d566be6a_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1d7ca0513:;
			{
				return false;
			}
		}
		_match_end_1d7ca0436:;
	};
	return true;
}



inline jule::Bool _1d567248c_xor(_1d561288e_Const* _self_, _1d561288e_Const _53426_x) {
	{
		
		if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7ca2e3e:;
			{
				_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_1d566aee1_read_i64(&(*_self_)) ^ _1d566bc06_as_i64(&_53426_x))));
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7ca2713:;
			{
				_1d566c6c9_set_u64(&(*_self_), static_cast<jule::U64>((_1d566b255_read_u64(&(*_self_)) ^ _1d566be6a_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1d7ca269c:;
			{
				return false;
			}
		}
		_match_end_1d7ca25c0:;
	};
	return true;
}



inline jule::Bool _1d567279a_lshift(_1d561288e_Const* _self_, _1d561288e_Const _54829_x) {
	{
		
		if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7ca50c8:;
			{
				jule::I64 _55117_l = _1d566bc06_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1d566be6a_as_u64(&_54829_x);;
					_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1d5672e1b_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7ca489c:;
			{
				_1d5672e1b_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1d7ca4836:;
			{
				return false;
			}
		}
		_match_end_1d7ca4759:;
	};
	return true;
}



inline jule::Bool _1d5672aa8_rshift(_1d561288e_Const* _self_, _1d561288e_Const _56829_x) {
	{
		
		if (_1d566d389_is_i64(&(*_self_))) {
			_case_begin_1d7ca7b14:;
			{
				jule::I64 _57117_l = _1d566bc06_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1d566be6a_as_u64(&_56829_x);;
					_1d566c454_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1d5673218_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1d566d5ed_is_u64(&(*_self_))) {
			_case_begin_1d7ca73d8:;
			{
				_1d5673218_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1d7ca7372:;
			{
				return false;
			}
		}
		_match_end_1d7ca7295:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1d561288e_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5c8e5e2_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5b95086_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d61c0a34_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d5e98400_set(_1d61c0d97_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1d82ede90:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1d82ee006:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1d82edce7:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1d830128e:;
					{
						goto _iter_next_1d83009ca;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1d8301316:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1d83009ca;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1d830138d:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1d83009ca;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1d83009ca;
					}
				}
				_match_end_1d830115c:;
			};
			goto _iter_end_1d83009ca;
		}
	_iter_next_1d83009ca:;
	}
	_iter_end_1d83009ca:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1d5d274c1_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1d8308cd0;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1d8308cd0:;
		}
		_iter_end_1d8308cd0:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1d5ed6a48_float_bits(_1d61c0d97_Decimal* _self_, _1d5c8e5e2_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1d5bd48cd_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1d5bd48cd_POWTAB[(*_self_)._field_dp];
			};
			_1d61c11b6_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1d83107dc:;
	}
	_iter_end_1d83107dc:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1d5bd48cd_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1d5bd48cd_POWTAB[(-((*_self_)._field_dp))];
			};
			_1d61c11b6_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1d8310ee6:;
	}
	_iter_end_1d8310ee6:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1d61c11b6_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1d61c11b6_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1d61c168e_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1d61c1084_assign(_1d61c0d97_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1d831e158:;
	}
	_iter_end_1d831e158:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1d8320643:;
	}
	_iter_end_1d8320643:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1d61c1903_trim((*_self_));
}



inline void _1d61c11b6_shift(_1d61c0d97_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1d8321cb5:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1d8321d3c:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1d61c1c99_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1d8322469:;
				}
				_iter_end_1d8322469:;;
				_1d61c1c99_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1d8321db4:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1d61c1a35_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1d8323217:;
				}
				_iter_end_1d8323217:;;
				_1d61c1a35_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1d8321b83:;
	};
}



inline void _1d61c12e8_round_down(_1d61c0d97_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1d61c1903_trim((*_self_));
}



inline void _1d61c142a_round_up(_1d61c0d97_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1d8326836:;
	}
	_iter_end_1d8326836:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1d61c155c_round(_1d61c0d97_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1d61c1dcb_should_round_up((*_self_),_29124_nd)) {
		_1d61c142a_round_up(&(*_self_), _29124_nd);
	} else {
		_1d61c12e8_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1d61c168e_rounded_integer(_1d61c0d97_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1d8329bbe:;
	}
	_iter_end_1d8329bbe:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1d832c232:;
	}
	_iter_end_1d832c232:;;
	if (_1d61c1dcb_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1d61c0d97_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d55a2532_FieldIns> _1d557aebc_instance(jule::Ptr<_1d558c385_Field> _self_) {
	return jule::new_ptr<_1d55a2532_FieldIns>(_1d55a2532_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1d558c385_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d559b7e5_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d55c62d1_StructIns> _1d55820b1_instance(jule::Ptr<_1d5599dba_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1d55c62d1_StructIns> _9917_ins = jule::new_ptr<_1d55c62d1_StructIns>(_1d55c62d1_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1d55a2532_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__1d568104a_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1d8605076:;
		if (it != expr.end()) {
			jule::Ptr<_1d558c385_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_1d557aebc_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _1d631d2d0_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1d8605076:;
			++it;
			goto _iter_begin_1d8605076;
		}
		_iter_end_1d8605076:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_1d567a7e7_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1d8608343:;
			if (it != expr.end()) {
				jule::Ptr<_1d567a7e7_Fn> _11625_f = *it;
				{
					jule::Ptr<_1d567a7e7_Fn> _11725_fins = jule::new_ptr<_1d567a7e7_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_1d8608343:;
				++it;
				goto _iter_begin_1d8608343;
			}
			_iter_end_1d8608343:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1d55c62d1_StructIns> _1d5586329_append_instance(_1d5599dba_Struct* _self_, jule::Ptr<_1d55c62d1_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1d860a7da:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c62d1_StructIns> _13421_ains = *it;
			{
				if (_1d559cc14_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1d860a7da:;
			++it;
			goto _iter_begin_1d860a7da;
		}
		_iter_end_1d860a7da:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_1d567a7e7_Fn> _1d5587083_find_method(_1d5599dba_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1d860bd3b:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1d860bd3b:;
			++it;
			goto _iter_begin_1d860bd3b;
		}
		_iter_end_1d860bd3b:;
	};
	return nullptr;
}



inline jule::Ptr<_1d6298ea3_Var> _1d55892d8_find_static(_1d5599dba_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1d860d090:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1d860d090:;
			++it;
			goto _iter_begin_1d860d090;
		}
		_iter_end_1d860d090:;
	};
	return nullptr;
}



inline jule::Ptr<_1d558c385_Field> _1d558a2ea_find_field(_1d5599dba_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1d860e02a:;
		if (it != expr.end()) {
			jule::Ptr<_1d558c385_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1d860e02a:;
			++it;
			goto _iter_begin_1d860e02a;
		}
		_iter_end_1d860e02a:;
	};
	return nullptr;
}



inline jule::Bool _1d5589739_is_implements(_1d5599dba_Struct* _self_, jule::Ptr<_1d59c3e1a_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1d860e503:;
		if (it != expr.end()) {
			jule::Ptr<_1d59c3e1a_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1d860e503:;
			++it;
			goto _iter_begin_1d860e503;
		}
		_iter_end_1d860e503:;
	};
	return false;
}



inline jule::Bool _1d558ba16_is_derives(_1d5599dba_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1d8610515:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_1d8610515:;
			++it;
			goto _iter_begin_1d8610515;
		}
		_iter_end_1d8610515:;
	};
	return false;
}



inline jule::Bool _1d558ae22_is_uses(_1d5599dba_Struct* _self_, jule::Ptr<_1d5599dba_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1d8612cba:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1d861356d:;
				}
				_iter_end_1d861356d:;;
			}
			_iter_next_1d8612cba:;
			++it;
			goto _iter_begin_1d8612cba;
		}
		_iter_end_1d8612cba:;
	};
	return false;
}



inline jule::Bool _1d558ebc3_has_ref_accessible(_1d5599dba_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1d861376b:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _1d567984b_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1d861376b:;
			++it;
			goto _iter_begin_1d861376b;
		}
		_iter_end_1d861376b:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5599dba_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55a2532_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5654dba_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567337d_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567356a_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5673757_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5673944_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5673b31_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5673d1d_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567400a_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56741e7_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56743d4_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56745c1_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56747ad_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567499a_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5674b87_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5674d74_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5675292_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567547e_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567566b_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5675858_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5675a45_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5675c32_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5675e1e_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567610b_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56762e8_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56764d5_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56766c2_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56768ae_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5676a9b_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5676c88_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5676e75_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5677162_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5675061_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56777c2_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d56779ae_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5677b9b_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5677d88_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5678075_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5678817_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d567c5c9_ParamIns> _1d5679373_instance(jule::Ptr<_1d5678eaa_Param> _self_) {
	return jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _1d56795d7_is_self(_1d5678eaa_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1d567984b_is_ref(_1d5678eaa_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1d5678eaa_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d567ac59_is_void(_1d567a7e7_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1d567aebd_is_method(_1d567a7e7_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1d567b232_is_entry_point(_1d567a7e7_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1d567b496_is_init(_1d567a7e7_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1d567b70a_is_anon(_1d567a7e7_Fn* _self_) {
	return _1ee53b88c_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1d567b96e_any_var(_1d567a7e7_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_1d567d498_FnIns> _1d567bbd3_instance_force(jule::Ptr<_1d567a7e7_Fn> _self_) {
	jule::Ptr<_1d567d498_FnIns> _10017_ins = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1d6255beb_Scope>(), ._field_refers=static__1d568104a_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d86271ec:;
		if (it != expr.end()) {
			jule::Ptr<_1d5678eaa_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_1d5679373_instance(_10721_p));;
			}
			_iter_next_1d86271ec:;
			++it;
			goto _iter_begin_1d86271ec;
		}
		_iter_end_1d86271ec:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1d567d498_FnIns> _1d567be47_instance(jule::Ptr<_1d567a7e7_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1d567bbd3_instance_force(_self_);
}



inline jule::Ptr<_1d567d498_FnIns> _1d567c222_append_instance(_1d567a7e7_Fn* _self_, jule::Ptr<_1d567d498_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1d862b2de:;
		if (it != expr.end()) {
			jule::Ptr<_1d567d498_FnIns> _14421_ains = *it;
			{
				if (_1d567e763_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1d862b2de:;
			++it;
			goto _iter_begin_1d862b2de;
		}
		_iter_end_1d862b2de:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567a7e7_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d567c9a3_to_str(_1d567c5c9_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1d56795d7_is_self((*_self_)._field_decl.ptr())) {
		if (_1d567984b_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_1d631c2ce_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567c5c9_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d567d7c8_to_str(_1d567d498_FnIns* _self_) {
	;
	return _1d567ea71_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1d567dad6_equals(jule::Ptr<_1d567d498_FnIns> _self_, jule::Ptr<_1d631bdd3_TypeKind> _21726_other) {
	jule::Ptr<_1d567d498_FnIns> _21813_f = _1d63201d3_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _21813_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _21813_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _21813_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1d567ac59_is_void(_self_.get()._field_decl.ptr()) != _1d567ac59_is_void(_21813_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _23917_i = 0LL;;
	for (; (_23917_i < _self_.get()._field_generics.len()); (_23917_i)++) {
		{
			if ((!(_1d631c5dc_equals(_self_.get()._field_generics[_23917_i].get()._field_kind, _21813_f.get()._field_generics[_23917_i].get()._field_kind)))) {
				return false;
			};
		}
	_iter_next_1d8635161:;
	}
	_iter_end_1d8635161:;;
	jule::Fn<jule::Bool(jule::Ptr<_1d567c5c9_ParamIns>,jule::Ptr<_1d567c5c9_ParamIns>)> _24613_check_params = jule::Fn<jule::Bool(jule::Ptr<_1d567c5c9_ParamIns>,jule::Ptr<_1d567c5c9_ParamIns>)>([=](jule::Ptr<_1d567c5c9_ParamIns> _24631_p1, jule::Ptr<_1d567c5c9_ParamIns> _24646_p2) mutable -> jule::Bool {
		if ((_24631_p1.get()._field_decl.get()._field_mutable != _24646_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1d56795d7_is_self(_24631_p1.get()._field_decl.ptr())) {
			if ((!(_1d56795d7_is_self(_24646_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1d567984b_is_ref(_24631_p1.get()._field_decl.ptr()) != _1d567984b_is_ref(_24646_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24631_p1.get()._field_decl.get()._field_reference != _24646_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24631_p1.get()._field_decl.get()._field_variadic != _24646_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1d631c5dc_equals(_24631_p1.get()._field_kind, _24646_p2.get()._field_kind);
	});;
	if ((_21813_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_23917_i=0LL;
	for (; (_23917_i < _self_.get()._field_params.len()); (_23917_i)++) {
		{
			if ((!(_24613_check_params(_self_.get()._field_params[_23917_i],_21813_f.get()._field_params[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1d8637361:;
	}
	_iter_end_1d8637361:;;
	if ((!(_1d567ac59_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1d631c5dc_equals(_self_.get()._field_result, _21813_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _1d567de7c_types(_1d567d498_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1d863cdd3:;
			{
				return nullptr;
			}
		}
		else if ((_1d6320b84_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1d863ce49:;
			{
				return jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1d863cd6c:;
			{
				return _1d6320b84_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1d863cc90:;
	};
}



inline jule::Bool _1d567e1e1_is_builtin(_1d567d498_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1d567e455_is_anon(_1d567d498_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1d567b70a_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1d567e763_same(_1d567d498_FnIns* _self_, jule::Ptr<_1d567d498_FnIns> _32323_f) {
	if ((((*_self_)._field_decl != _32323_f.get()._field_decl) || (_32323_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1d86417ee:;
		if (it != expr.end()) {
			jule::I64 _32813_i = it - expr.begin();
			jule::Ptr<_1d631a6a6_InsGeneric> &_32816_g = *it;
			{
				if ((!(_1d631c5dc_equals(_32816_g.get()._field_kind, _32323_f.get()._field_generics[_32813_i].get()._field_kind)))) {
					return false;
				};
			}
			_iter_next_1d86417ee:;
			++it;
			_32813_i++;
			goto _iter_begin_1d86417ee;
		}
		_iter_end_1d86417ee:;
	};
	return true;
}



inline jule::Str _1d567ea71_get_kind_str(_1d567d498_FnIns* _self_, jule::Bool _33931_ident) {
	jule::Str _34017_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34017_s+=jule::Str("unsafe ", 7);
	};
	_34017_s+=jule::Str("fn", 2);
	if ((_33931_ident && ((*_self_)._field_decl != nullptr))) {
		_34017_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1d864511b:;
			if (it != expr.end()) {
				jule::I64 _35417_i = it - expr.begin();
				jule::Ptr<_1d631a6a6_InsGeneric> &_35420_t = *it;
				{
					_34017_s+=_1d631c2ce_to_str(_35420_t.get()._field_kind.ptr());
					if (((_35417_i + 1LL) < (*_self_)._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1d864511b:;
				++it;
				_35417_i++;
				goto _iter_begin_1d864511b;
			}
			_iter_end_1d864511b:;
		};
		_34017_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1d8647162:;
			if (it != expr.end()) {
				jule::I64 _36317_i = it - expr.begin();
				jule::Ptr<_1d55b6d3d_GenericDecl> &_36320_g = *it;
				{
					_34017_s+=_36320_g.get()._field_ident;
					if (((_36317_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1d8647162:;
				++it;
				_36317_i++;
				goto _iter_begin_1d8647162;
			}
			_iter_end_1d8647162:;
		};
		_34017_s+=jule::Str("]", 1);
	};
	_34017_s+=jule::Str("(", 1);
	jule::I64 _37313_n = (*_self_)._field_params.len();;
	if ((_37313_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1d864985c:;
			if (it != expr.end()) {
				jule::Ptr<_1d567c5c9_ParamIns> &_37520_p = *it;
				{
					_34017_s+=_1d567c9a3_to_str(_37520_p.ptr());
					_34017_s+=jule::Str(",", 1);
				}
				_iter_next_1d864985c:;
				++it;
				goto _iter_begin_1d864985c;
			}
			_iter_end_1d864985c:;
		};
		(_34017_s).mut_slice(0LL,(_34017_s.len() - 1LL));;
	};
	_34017_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34017_s+=jule::Str("!", 1);
	};
	if ((!(_1d567ac59_is_void((*_self_)._field_decl.ptr())))) {
		_34017_s+=jule::Str(":", 1);
		_34017_s+=_1d631c2ce_to_str((*_self_)._field_result.ptr());
	};
	return _34017_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1d567d498_FnIns _Src) {
	_Stream << _1d567d7c8_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d5680c5e_ReferenceStack> static__1d568104a_new(void) {
	return jule::new_ptr<_1d5680c5e_ReferenceStack>(_1d5680c5e_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1d56813d0_len(_1d5680c5e_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1d56816dd_at(_1d5680c5e_ReferenceStack* _self_, jule::I64 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _1d5681963_push(_1d5680c5e_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _1d8c41b24_exist(_1d5680c5e_ReferenceStack* _self_, jule::Ptr<_1d567d498_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1d8c42d45:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1d8c42d45:;
			++it;
			goto _iter_begin_1d8c42d45;
		}
		_iter_end_1d8c42d45:;
	};
	return false;
}

inline jule::Bool _1d8c56661_exist(_1d5680c5e_ReferenceStack* _self_, jule::Ptr<_1d6298ea3_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1d8c5783d:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1d8c5783d:;
			++it;
			goto _iter_begin_1d8c5783d;
		}
		_iter_end_1d8c5783d:;
	};
	return false;
}

inline jule::Bool _1d8cdb4e8_exist(_1d5680c5e_ReferenceStack* _self_, jule::Ptr<_1d55c62d1_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1d8cdc719:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1d8cdc719:;
			++it;
			goto _iter_begin_1d8cdc719;
		}
		_iter_end_1d8cdc719:;
	};
	return false;
}

inline jule::Bool _1d90730a9_exist(_1d5680c5e_ReferenceStack* _self_, jule::Ptr<_1d59c3e1a_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1d9074286:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1d9074286:;
			++it;
			goto _iter_begin_1d9074286;
		}
		_iter_end_1d9074286:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5680c5e_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5682128_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d56865c2_SymbolBuilder> _1d5686a78_get_root(jule::Ptr<_1d56865c2_SymbolBuilder> _self_) {
	jule::Ptr<_1d56865c2_SymbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1d866305c:;
	}
	_iter_end_1d866305c:;;
	return _31617_root;
}



inline void _1d5686e41_push_err(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1ee538d51_Token>& _32328_token, jule::Str _32343_fmt, jule::Slice<jule::Any> _32356_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d627ab00_compiler_err(_32328_token,true,_32343_fmt,jule::Any(_32356_args)));;
}



inline void _1d5687309_push_err_text(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1ee538d51_Token>& _32733_token, jule::Str _32748_fmt, jule::Slice<jule::Any> _32761_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d627ab00_compiler_err(_32733_token,false,_32748_fmt,jule::Any(_32761_args)));;
}



inline void _1d5687628_push_suggestion(_1d56865c2_SymbolBuilder* _self_, jule::Str _33234_fmt, jule::Slice<jule::Any> _33247_args) {
	{
		_1d627c085_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33234_fmt,jule::Any(_33247_args));
	};
}



inline jule::Bool _1d5687a02_check_cpp_use_decl_path(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1d55c2299_UseDecl>& _33643_decl, jule::Str _33659_path) {
	jule::Bool _33672_ok = jule::Bool();
	jule::Str _33713_ext = _218632cbb_ext(_33659_path);;
	if (((!(_21867dae7_is_valid_header_ext(_33713_ext))) && (!(_21867dd7d_is_valid_cpp_ext(_33713_ext))))) {
		_1d5686e41_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33672_ok = false;
		return _33672_ok;
	};
	jule::Ptr<_2316d7d8b_Status> _34413_info = ({
		auto except = static__2315d2bdc_of(_33659_path);
		(except.ok()) ? (except.result) : ({{
			_1d5686e41_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
			_33672_ok = false;
			return _33672_ok;
		} jule::Ptr<_2316d7d8b_Status>();});
	});;
	if (_2316d8078_is_dir(_34413_info.ptr())) {
		_1d5686e41_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
		_33672_ok = false;
		return _33672_ok;
	};
	_33672_ok = true;
	return _33672_ok;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d5687d10_build_cpp_header_import(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1d55c2299_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl.get()._field_link_path;;
	if ((!(_21867d9b5_is_std_header_path(_35647_decl.get()._field_link_path)))) {
		_35717_path=_218632a24_join(jule::Slice<jule::Str>::make({_1ee53ead2_dir(_35647_decl.get()._field_token.get()._field_file.ptr()),_35647_decl.get()._field_link_path}));
		jule::Bool _36121_ok = _1d5687a02_check_cpp_use_decl_path(&(*_self_), _35647_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _218633063_abs(_35717_path);
		if ((!(_36121_ok))) {
			_1d5686e41_push_err(&(*_self_), _35647_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35647_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1d62743bd_ImportInfo>(_1d62743bd_ImportInfo{._field_token=_35647_decl.get()._field_token, ._field_path=_35717_path, ._field_link_path=_35647_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d568812e_build_std_import(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1d55c2299_UseDecl>& _38440_decl) {
	jule::Str _38517_path = _38440_decl.get()._field_link_path.slice(5LL);;
	_38517_path=_21862dc62_replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_218632a24_join(jule::Slice<jule::Str>::make({_1ed63c6d6_PATH_STDLIB,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _218633063_abs(_38517_path);
	if ((!(_38820_ok))) {
		_1d5686e41_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2316d7d8b_Status> _39513_info = ({
		auto except = static__2315d2bdc_of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1d5686e41_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2316d7d8b_Status>();});
	});;
	if ((!(_2316d8078_is_dir(_39513_info.ptr())))) {
		_1d5686e41_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_21862b07d_find_last(_38440_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38440_decl.get()._field_link_path.slice(_40513_i);;
	return jule::new_ptr<_1d62743bd_ImportInfo>(_1d62743bd_ImportInfo{._field_token=_38440_decl.get()._field_token, ._field_path=_38517_path, ._field_link_path=_38440_decl.get()._field_link_path, ._field_ident=_40613_ident, ._field_alias=_38440_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_38440_decl.get()._field_full, ._field_package=jule::new_ptr<_1d6277327_Package>(_1d6277327_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d568843c_build_ident_import(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Ptr<_1d55c2299_UseDecl>& _42343_decl) {
	jule::Str _42413_mod_path = _1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d6270c38_get_mod_path(_self_.get()._field_importer);;
	if ((_42413_mod_path.len() == 0LL)) {
		_1d5686e41_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1d5687628_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42343_decl.get()._field_link_path;;
	_43117_path=_21862dc62_replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_218632a24_join(jule::Slice<jule::Str>::make({_42413_mod_path,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _218633063_abs(_43117_path);
	if ((!(_43520_ok))) {
		_1d5686e41_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2316d7d8b_Status> _44213_info = ({
		auto except = static__2315d2bdc_of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1d5686e41_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2316d7d8b_Status>();});
	});;
	if ((!(_2316d8078_is_dir(_44213_info.ptr())))) {
		_1d5686e41_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_21862b07d_find_last(_42343_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42343_decl.get()._field_link_path.slice(_45213_i);;
	return jule::new_ptr<_1d62743bd_ImportInfo>(_1d62743bd_ImportInfo{._field_token=_42343_decl.get()._field_token, ._field_path=_43117_path, ._field_link_path=_42343_decl.get()._field_link_path, ._field_ident=_45313_ident, ._field_alias=_42343_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_42343_decl.get()._field_full, ._field_package=jule::new_ptr<_1d6277327_Package>(_1d6277327_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d568874a_build_import(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Ptr<_1d55c2299_UseDecl>& _47037_decl) {
	{
		
		if (_47037_decl.get()._field_cpp_linked) {
			_case_begin_1d86819c6:;
			{
				return _1d5687d10_build_cpp_header_import(_self_.ptr(), _47037_decl);
			}
		}
		else if (_47037_decl.get()._field_std) {
			_case_begin_1d8681c5c:;
			{
				return _1d568812e_build_std_import(_self_.ptr(), _47037_decl);
			}
		}
		else {
			_case_begin_1d8681256:;
			{
				return _1d568843c_build_ident_import(_self_, _47037_decl);
			}
		}
		_match_end_1d8681179:;
	};
}



inline jule::Bool _1d5688a7a_check_duplicate_use_decl(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1d62743bd_ImportInfo>& _48144_pkg) {
	jule::Bool _48164_ok = jule::Bool();
	jule::Ptr<_1d62743bd_ImportInfo> _48313_lpkg = _1d62dc27c_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>([=](jule::Ptr<_1d62743bd_ImportInfo> _48349_spkg) mutable -> jule::Bool {
		return (_48144_pkg.get()._field_path == _48349_spkg.get()._field_path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48164_ok = true;
		return _48164_ok;
	};
	_1d5686e41_push_err(&(*_self_), _48144_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48144_pkg.get()._field_link_path)}));
	_1d5687628_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48164_ok = false;
	return _48164_ok;
}



inline void _1d5688daa_impl_import_selections(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1d62743bd_ImportInfo>& _49546_imp, jule::Ptr<_1d55c2299_UseDecl>& _49569_decl) {
	_49546_imp.get()._field_selected=_49569_decl.get()._field_selected;
	{
		auto &expr = _49546_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1d86857cc:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> _49716_item = *it;
			{
				{
					auto &expr = _49546_imp.get()._field_selected;
					auto it = expr.begin();
					_iter_begin_1d868635a:;
					if (it != expr.end()) {
						jule::Ptr<_1ee538d51_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1d868635a;
							} else if ((_49716_item.get()._field_kind == _49820_citem.get()._field_kind)) {
								_1d5686e41_push_err(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_kind)}));
								_1d5687628_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1d868635a;
							};
						}
						_iter_next_1d868635a:;
						++it;
						goto _iter_begin_1d868635a;
					}
					_iter_end_1d868635a:;
				};
			}
			_iter_next_1d86857cc:;
			++it;
			goto _iter_begin_1d86857cc;
		}
		_iter_end_1d86857cc:;
	};
}



inline jule::Str _1d56891b8_get_as_link_path(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Str _51040_path) {
	if (_2185eacc8_has_prefix(_51040_path,_1ed63c6d6_PATH_STDLIB)) {
		(_51040_path).mut_slice(_1ed63c6d6_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _21862dc62_replace(_51040_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _218633063_abs(_1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d6270c38_get_mod_path(_self_.get()._field_importer));
	(_51040_path).mut_slice(_51614_root.len());;
	if ((_51040_path[0LL] == 47LLU)) {
		(_51040_path).mut_slice(1LL);;
	};
	return _21862dc62_replace(_51040_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1d5689581_push_cycle_error(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Ptr<_1d56865c2_SymbolBuilder>& _52437_sb, jule::Str _52457_path, jule::Str& _52473_message) {
	;
	jule::Str _52713_refers_to = _21868a8c3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1d56891b8_get_as_link_path(_self_, _1ee53ead2_dir(_52437_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1d56891b8_get_as_link_path(_self_, _52457_path))}));;
	(_52473_message).buffer.insert(0, (((_2185adecd_repeat(jule::Str(" ", 1),4LL) + _52713_refers_to) + jule::Str("\n", 1))));;
}



inline void _1d5689949_push_cross_cycle_error(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Ptr<_1d56865c2_SymbolBuilder>& _53443_target, jule::Ptr<_1d62743bd_ImportInfo>& _53468_imp, jule::Ptr<_1ee538d51_Token>& _53487_error_token) {
	jule::Str _53517_message = jule::Str();;
	_1d5689581_push_cycle_error(_self_, _self_,_53468_imp.get()._field_path,_53517_message);
	jule::Ptr<_1d56865c2_SymbolBuilder> _53917_owner = _self_.get()._field_owner;;
	jule::Ptr<_1d56865c2_SymbolBuilder> _54017_old = _self_;;
	while ((_53917_owner.get()._field_owner != nullptr)) {
		{
			_1d5689581_push_cycle_error(_self_, _54017_old.get()._field_owner,_1ee53ead2_dir(_54017_old.get()._field_table.get()._field_file.ptr()),_53517_message);
			if ((_53917_owner.get()._field_owner == _53443_target)) {
				_1d5689581_push_cycle_error(_self_, _53443_target,_1ee53ead2_dir(_53917_owner.get()._field_table.get()._field_file.ptr()),_53517_message);
				goto _iter_end_1d868ce44;
			};
			_54017_old=_53917_owner;
			_53917_owner=_53917_owner.get()._field_owner;
		}
	_iter_next_1d868ce44:;
	}
	_iter_end_1d868ce44:;;
	_1d5686e41_push_err(_self_.ptr(), _53487_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53517_message)}));
}



inline jule::Bool _1d5689d01_check_import_cycles(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Ptr<_1d62743bd_ImportInfo> _55739_imp, jule::Ptr<_1d55c2299_UseDecl>& _55758_decl) {
	if ((_55739_imp.get()._field_path == _1ee53ead2_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1d5686e41_push_err(_self_.ptr(), _55758_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1d56891b8_get_as_link_path(_self_, _55739_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1ee53ead2_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1d5689949_push_cross_cycle_error(_self_, _self_.get()._field_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1d56865c2_SymbolBuilder> _57217_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1ee53ead2_dir(_57217_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1d5689949_push_cross_cycle_error(_self_, _57217_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	if ((_57217_owner.get()._field_owner != nullptr)) {
		_57217_owner=_57217_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1d568a1db_check_package_accessibility(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1d55c2299_UseDecl>& _59347_decl, jule::Str& _59364_mod, jule::Str& _59375_path) {
	if (((_1d6271ac4_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1d6270c38_get_mod_path((*_self_)._field_importer) != _59364_mod) && _21862c9b9_contains(_59375_path,jule::Str("internal", 8)))) {
		_1d5686e41_push_err(&(*_self_), _59347_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d568a5a4_import_package(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Ptr<_1d62743bd_ImportInfo>& _59939_imp, jule::Ptr<_1d55c2299_UseDecl>& _59962_decl) {
	jule::Bool _59980_ok = jule::Bool();
	if (_59939_imp.get()._field_cpp_linked) {
		_59980_ok = true;
		return _59980_ok;
	};
	jule::Ptr<_1d62743bd_ImportInfo> _60417_port = _1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d6271354_get_import(_self_.get()._field_importer, _59939_imp.get()._field_path);;
	if ((_60417_port != nullptr)) {
		_59939_imp.get()._field_package=_60417_port.get()._field_package;
		_59939_imp.get()._field_duplicate=true;
		jule::Str _60917_old_mod = _1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d6270c38_get_mod_path(_self_.get()._field_importer);;
		_1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d62709e6_set_mod_path(_self_.get()._field_importer, _1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d6271046_mod_by_id(_self_.get()._field_importer, _59939_imp.get()._field_mod_id));
		_1d568a1db_check_package_accessibility(_self_.ptr(), _59962_decl,_60917_old_mod,_60417_port.get()._field_path);
		_1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d62709e6_set_mod_path(_self_.get()._field_importer, _60917_old_mod);
	} else {
		if ((!(_1d5689d01_check_import_cycles(_self_, _59939_imp,_59962_decl)))) {
			_59980_ok = false;
			return _59980_ok;
		};
		jule::Str _61817_old_mod = _1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d6270c38_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d62709e6_set_mod_path(_self_.get()._field_importer, _61817_old_mod);
		});;
		if (_59939_imp.get()._field_std) {
			_1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d62709e6_set_mod_path(_self_.get()._field_importer, _1ed63c6d6_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_1d5574b0e_Ast>> _62322_asts;;
		jule::Slice<_21868a483_Log> _62332_errors;;
		std::tie(_62322_asts,_62332_errors) = _1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d627170b_import_package(_self_.get()._field_importer, _59939_imp.get()._field_path,(!(_59939_imp.get()._field_std)));
		if ((_62332_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
			_59980_ok = false;
			return _59980_ok;
		};
		_1d568a1db_check_package_accessibility(_self_.ptr(), _59962_decl,_61817_old_mod,_59939_imp.get()._field_path);
		{
			auto &expr = _62322_asts;
			auto it = expr.begin();
			_iter_begin_1d869dcac:;
			if (it != expr.end()) {
				jule::Ptr<_1d5574b0e_Ast> _63125_ast = *it;
				{
					jule::Ptr<_1d62db952_SymbolTable> _63225_table = nullptr;;
					std::tie(_63225_table,_62332_errors) = _1d63384d7_build_symbols(_63125_ast,_self_.get()._field_importer,_self_);
					if ((_62332_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
						_1d5687309_push_err_text(_self_.ptr(), _59939_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59939_imp.get()._field_link_path)}));
						_59980_ok = false;
						return _59980_ok;
					};
					_59939_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_59939_imp.get()._field_package.get()._field_files,1);_59939_imp.get()._field_package.get()._field_files.__push(_63225_table);;
				}
				_iter_next_1d869dcac:;
				++it;
				goto _iter_begin_1d869dcac;
			}
			_iter_end_1d869dcac:;
		};
	};
	_1d5688daa_impl_import_selections(_self_.ptr(), _59939_imp,_59962_decl);
	_59980_ok = true;
	return _59980_ok;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d568a8b2_import_use_decl(jule::Ptr<_1d56865c2_SymbolBuilder> _self_, jule::Ptr<_1d55c2299_UseDecl>& _65140_decl) {
	jule::Ptr<_1d62743bd_ImportInfo> _65217_imp = _1d568874a_build_import(_self_, _65140_decl);;
	if ((_65217_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65817_ok = _1d5688a7a_check_duplicate_use_decl(_self_.ptr(), _65217_imp);;
	if ((!(_65817_ok))) {
		return nullptr;
	};
	_65817_ok=_1d568a5a4_import_package(_self_, _65217_imp,_65140_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_65217_imp);;
	if (_65817_ok) {
		_1d6271ac4_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d6271981_imported(_self_.get()._field_importer, _65217_imp);
		return _65217_imp;
	};
	return nullptr;
}



inline void _1d568aa8d_import_use_decls(jule::Ptr<_1d56865c2_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1d86a4554:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c2299_UseDecl> _67321_decl = *it;
			{
				_1d568a8b2_import_use_decl(_self_, _67321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1d86a4554;
				};
			}
			_iter_next_1d86a4554:;
			++it;
			goto _iter_begin_1d86a4554;
		}
		_iter_end_1d86a4554:;
	};
}



inline void _1d568ad13_append_node(_1d56865c2_SymbolBuilder* _self_, _1d557588a_Node& _68335_node) {
	{
		auto &_match_expr{ _68335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d55c5a1c_Impl>>()) {
			_case_begin_1d86a606c:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1d5686072_build_impl(_68335_node._field_data.operator jule::Ptr<_1d55c5a1c_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c0dad_TypeAliasDecl>>()) {
			_case_begin_1d86a4c4c:;
			{
				jule::Ptr<_1d631b1e0_TypeAlias> _68821_ta = _1d5682a0d_build_type_alias(_68335_node._field_data.operator jule::Ptr<_1d55c0dad_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_68821_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c4d07_StructDecl>>()) {
			_case_begin_1d86a5b71:;
			{
				jule::Ptr<_1d5599dba_Struct> _69121_srct = _1d568336b_build_struct(_68335_node._field_data.operator jule::Ptr<_1d55c4d07_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_69121_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bb56d_FnDecl>>()) {
			_case_begin_1d86a5bd7:;
			{
				jule::Ptr<_1d567a7e7_Fn> _69421_f = _1d5683ec6_build_fn(_68335_node._field_data.operator jule::Ptr<_1d55bb56d_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_69421_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c5412_TraitDecl>>()) {
			_case_begin_1d86a64bd:;
			{
				jule::Ptr<_1d59c3e1a_Trait> _69721_t = _1d5684515_build_trait(_68335_node._field_data.operator jule::Ptr<_1d55c5412_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_69721_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bc54c_VarDecl>>()) {
			_case_begin_1d86a6534:;
			{
				jule::Ptr<_1d6298ea3_Var> _70021_v = _1d5685a33_build_var(_68335_node._field_data.operator jule::Ptr<_1d55bc54c_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_70021_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c3245_EnumDecl>>()) {
			_case_begin_1d86a659a:;
			{
				jule::Ptr<_1d5692820_Enum> _70321_e = _1d5684ceb_build_enum(_68335_node._field_data.operator jule::Ptr<_1d55c3245_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_70321_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c3e49_TypeEnumDecl>>()) {
			_case_begin_1d86a6611:;
			{
				jule::Ptr<_1d5a788b5_TypeEnum> _70621_e = _1d568578b_build_type_enum(_68335_node._field_data.operator jule::Ptr<_1d55c3e49_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_type_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_type_enums,1);(*_self_)._field_table.get()._field_type_enums.__push(_70621_e);;
			}
		}
		else {
			_case_begin_1d86a5a2d:;
			{
				_1d5686e41_push_err(&(*_self_), _68335_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d86a4d07:;
	};
}



inline void _1d568aede_append_nodes(_1d56865c2_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1d86aed56:;
		if (it != expr.end()) {
			_1d557588a_Node _71421_node = *it;
			{
				_1d568ad13_append_node(&(*_self_), _71421_node);
			}
			_iter_next_1d86aed56:;
			++it;
			goto _iter_begin_1d86aed56;
		}
		_iter_end_1d86aed56:;
	};
}



inline void _1d568b264_push_directive_pass(_1d56865c2_SymbolBuilder* _self_, jule::Ptr<_1d5575c86_Directive>& _71943_d) {
	if ((_71943_d.get()._field_args.len() == 0LL)) {
		_1d5686e41_push_err(&(*_self_), _71943_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71943_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_1ee538d51_Token> _72417_arg = _71943_d.get()._field_args[1LL];;
		_1d5686e41_push_err(&(*_self_), _72417_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ee538d51_Token> _72813_arg = _71943_d.get()._field_args[0LL];;
	if ((_72813_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1d5686e41_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72813_arg.get()._field_kind[0LL] != '\"')) {
		_1d5686e41_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1d5682128_Pass{._field_token=_71943_d.get()._field_tag, ._field_text=_72813_arg.get()._field_kind.slice(1LL,(_72813_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1d568b440_append_top_directives(_1d56865c2_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1d86b2e69:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _74621_d = *it;
			{
				{
					auto &_match_expr{ _74621_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1d86b5e17:;
						{
							_1d568b264_push_directive_pass(&(*_self_), _74621_d);
						}
					}
					_match_end_1d86b5d5c:;
				};
			}
			_iter_next_1d86b2e69:;
			++it;
			goto _iter_begin_1d86b2e69;
		}
		_iter_end_1d86b2e69:;
	};
}



inline void _1d568b61b_build(jule::Ptr<_1d56865c2_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1d62db952_SymbolTable>(_1d62db952_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_1d568b440_append_top_directives(_self_.ptr());
	_1d568aa8d_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1d568aede_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d56865c2_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d56dc804_to_str(_1d59c3e1a_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1d56dcc55_equals(jule::Ptr<_1d59c3e1a_Trait> _self_, jule::Ptr<_1d631bdd3_TypeKind> _2626_other) {
	jule::Ptr<_1d59c3e1a_Trait> _2713_trt = _1d63206ab_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1d570be61_is_builtin(_1d59c3e1a_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1d567a7e7_Fn> _1d5724187_find_method(_1d59c3e1a_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1d86b9d83:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1d86b9d83:;
			++it;
			goto _iter_begin_1d86b9d83;
		}
		_iter_end_1d86b9d83:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d59c3e1a_Trait _Src) {
	_Stream << _1d56dc804_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1d573819b_auto_expr(_1d581b2c3_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d581b2c3_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d5779561_to_str(_1d5692820_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1d5781c83_equals(jule::Ptr<_1d5692820_Enum> _self_, jule::Ptr<_1d631bdd3_TypeKind> _3826_other) {
	jule::Ptr<_1d5692820_Enum> _3913_enm = _1d631e732_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1d581b2c3_EnumItem> _1d580e33d_find_item(_1d5692820_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1d86bc649:;
		if (it != expr.end()) {
			jule::Ptr<_1d581b2c3_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1d86bc649:;
			++it;
			goto _iter_begin_1d86bc649;
		}
		_iter_end_1d86bc649:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5692820_Enum _Src) {
	_Stream << _1d5779561_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d580d749_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d5904301_to_str(_1d5a788b5_TypeEnum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1d5923562_equals(jule::Ptr<_1d5a788b5_TypeEnum> _self_, jule::Ptr<_1d631bdd3_TypeKind> _8026_other) {
	jule::Ptr<_1d5a788b5_TypeEnum> _8113_tenm = _1d631e996_tenm(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1d580d749_TypeEnumItem> _1d59c4756_find_item(_1d5a788b5_TypeEnum* _self_, jule::Str _8932_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1d86be89e:;
		if (it != expr.end()) {
			jule::Ptr<_1d580d749_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_ident == _8932_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1d86be89e:;
			++it;
			goto _iter_begin_1d86be89e;
		}
		_iter_end_1d86be89e:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5a788b5_TypeEnum _Src) {
	_Stream << _1d5904301_to_str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1d627c519_Sema>&,jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>&)> _1d61d9542_ready_fn(jule::Ptr<_1d61c75c9_ConstraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1d627c519_Sema>&,jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>&)>([=](jule::Ptr<_1d627c519_Sema>& _5621_sema, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>& _5639_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_generics_d;
			auto it = expr.begin();
			_iter_begin_1d86cc6e2:;
			if (it != expr.end()) {
				jule::I64 _5718_i = it - expr.begin();
				jule::Ptr<_1d55b6d3d_GenericDecl> _5725_g = *it;
				{
					jule::Ptr<_1d631a6a6_InsGeneric> _5825_generic = _self_.get()._field_generics[_5718_i];;
					if (((_5725_g.get()._field_constraint == nullptr) || (_5725_g.get()._field_constraint.get()._field_mask.len() == 0LL))) {
						goto _iter_next_1d86cc6e2;
					};
					_5825_generic.get()._field_constraint=jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>>::alloc(0LL,_5725_g.get()._field_constraint.get()._field_mask.len());
					{
						auto &expr = _5725_g.get()._field_constraint.get()._field_mask;
						auto it = expr.begin();
						_iter_begin_1d86cec44:;
						if (it != expr.end()) {
							jule::Ptr<_1d55a968d_TypeDecl> _6329_mask = *it;
							{
								jule::I64 _6425_n = _5621_sema.get()._field_errors.len();;
								jule::Ptr<_1d631bdd3_TypeKind> _6529_kind = _1d628350e_build_type_with_refers(_5621_sema, _6329_mask,jule::Trait<_1d633797b_Lookup>(_5621_sema, 3),_5639_generics,nullptr);;
								if ((_6529_kind == nullptr)) {
									{
										auto &_match_expr{ _6329_mask.get()._field_kind };
										
										if (_match_expr.type_is<jule::Ptr<_1d55a9c54_IdentTypeDecl>>()) {
											_case_begin_1d86d1b03:;
											{
												jule::Ptr<_1d55a9c54_IdentTypeDecl> _6937_itd = _6329_mask.get()._field_kind.operator jule::Ptr<_1d55a9c54_IdentTypeDecl>();;
												if (((_6937_itd.get()._field_generics.len() == 0LL) && _1d6225737_is_builtin_constraint(_6937_itd.get()._field_ident))) {
													_6529_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(_6937_itd.get()._field_ident), 6)});
													_5621_sema.get()._field_errors=_5621_sema.get()._field_errors.slice(0LL,_6425_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1d86d199e:;
									};
									return false;
								};
								_julec_label_success:;
								_5825_generic.get()._field_constraint = jule::alloc_for_append(_5825_generic.get()._field_constraint,1);_5825_generic.get()._field_constraint.__push(_6529_kind);;
							}
							_iter_next_1d86cec44:;
							++it;
							goto _iter_begin_1d86cec44;
						}
						_iter_end_1d86cec44:;
					};
				}
				_iter_next_1d86cc6e2:;
				++it;
				_5718_i++;
				goto _iter_begin_1d86cc6e2;
			}
			_iter_end_1d86cc6e2:;
		};
		return true;
	});
}



inline jule::Bool _1d62052a5_ready_fi(jule::Ptr<_1d61c75c9_ConstraintChecker> _self_) {
	_self_.get()._field_generics_d=_self_.get()._field_fi.get()._field_decl.get()._field_generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_generics;
	return ((!(_self_.get()._field_uniq)) || _1d62879db_fn_environment(_self_.get()._field_s, _self_.get()._field_fi,_1d61d9542_ready_fn(_self_)));
}



inline jule::Bool _1d62203ad_ready_si(jule::Ptr<_1d61c75c9_ConstraintChecker> _self_) {
	_self_.get()._field_generics_d=_self_.get()._field_si.get()._field_decl.get()._field_generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_generics;
	return ((!(_self_.get()._field_uniq)) || _1d61d9542_ready_fn(_self_)(_self_.get()._field_s,_self_.get()._field_generics_a));
}



inline jule::Bool _1d6222206_ready(jule::Ptr<_1d61c75c9_ConstraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1d62052a5_ready_fi(_self_);
	};
	return _1d62203ad_ready_si(_self_);
}



inline jule::Bool _1d62233e4_check(jule::Ptr<_1d61c75c9_ConstraintChecker> _self_) {
	if ((!(_1d6222206_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d86d8be8:;
		if (it != expr.end()) {
			jule::I64 _11214_i = it - expr.begin();
			jule::Ptr<_1d631a6a6_InsGeneric> _11221_g = *it;
			{
				if ((_11221_g.get()._field_constraint == nullptr)) {
					goto _iter_next_1d86d8be8;
				};
				{
					auto &expr = _11221_g.get()._field_constraint;
					auto it = expr.begin();
					_iter_begin_1d86d98db:;
					if (it != expr.end()) {
						jule::Ptr<_1d631bdd3_TypeKind> _11625_c2 = *it;
						{
							jule::Ptr<_1d63218aa_Prim> _11725_prim = _1d631dee5_prim(_11625_c2.ptr());;
							if (((_11725_prim != nullptr) && _1d632249e_is_constraint(_11725_prim.ptr()))) {
								if (_1d6223b42_match_constraint(_11725_prim.get()._field_kind,_11221_g.get()._field_kind)) {
									goto _iter_next_1d86d8be8;
								};
								goto _iter_next_1d86d98db;
							};
							if (_1d631c5dc_equals(_11625_c2, _11221_g.get()._field_kind)) {
								goto _iter_next_1d86d8be8;
							};
						}
						_iter_next_1d86d98db:;
						++it;
						goto _iter_begin_1d86d98db;
					}
					_iter_end_1d86d98db:;
				};
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_11221_g.get()._field_kind.ptr())),jule::Any(_self_.get()._field_generics_d[_11214_i].get()._field_ident)}));
				return false;
			}
			_iter_next_1d86d8be8:;
			++it;
			_11214_i++;
			goto _iter_begin_1d86d8be8;
		}
		_iter_end_1d86d8be8:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1d61c75c9_ConstraintChecker _Src) {
	_Stream << "ConstraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "generics_d:" << _Src._field_generics_d << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "generics_a:" << _Src._field_generics_a << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d6227173_is_trait_impl(_1d62470d8_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1d622eb70_is_struct_impl(_1d62470d8_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d62470d8_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6255beb_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6255dd8_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62560c5_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625646b_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6256757_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d6257071_is_while_next(_1d6256bca_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6256bca_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62575b0_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62579ab_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6257d63_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625814e_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625843a_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62587e2_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6258c65_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625911c_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d6259b67_is_generic_type_match(_1d625965b_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1d625965b_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d625a470_is_default(_1d625a1a6_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d625a1a6_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625a75b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625abce_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625b2d9_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625b75c_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d625c9c2_find_package(_1d625c571_ScopeChecker* _self_, jule::Str _45635_ident) {
	return _1d627ca36_find_package((*_self_)._field_s.ptr(), _45635_ident);
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d625ccd0_select_package(_1d625c571_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _46637_selector) {
	return _1d627cd44_select_package((*_self_)._field_s.ptr(), _46637_selector);
}



inline jule::Ptr<_1d6298ea3_Var> _1d625d187_find_var(_1d625c571_ScopeChecker* _self_, jule::Str _47731_ident, jule::Bool _47743_cpp_linked) {
	;
	jule::Ptr<_1d6298ea3_Var> _48017_v = _1d62de1e6___find_var((*_self_)._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1d625c571_ScopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1d62de1e6___find_var(_48517_parent.get()._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1d8715c36:;
	}
	_iter_end_1d8715c36:;;
	return _1d627d1eb_find_var((*_self_)._field_s.ptr(), _47731_ident,_47743_cpp_linked);
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d625d53e_find_type_alias(_1d625c571_ScopeChecker* _self_, jule::Str _50438_ident, jule::Bool _50450_cpp_linked) {
	;
	jule::Ptr<_1d631b1e0_TypeAlias> _50717_ta = _1d62de647___find_type_alias((*_self_)._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1d625c571_ScopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1d62de647___find_type_alias(_51217_parent.get()._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1d8718b18:;
	}
	_iter_end_1d8718b18:;;
	return _1d627d5a3_find_type_alias((*_self_)._field_s.ptr(), _50438_ident,_50450_cpp_linked);
}



inline jule::Ptr<_1d5599dba_Struct> _1d625d8e6_find_struct(_1d625c571_ScopeChecker* _self_, jule::Str _52934_ident, jule::Bool _52946_cpp_linked) {
	return _1d627d95a_find_struct((*_self_)._field_s.ptr(), _52934_ident,_52946_cpp_linked);
}



inline jule::Ptr<_1d567a7e7_Fn> _1d625dc9d_find_fn(_1d625c571_ScopeChecker* _self_, jule::Str _53830_ident, jule::Bool _53842_cpp_linked) {
	return _1d627dd12_find_fn((*_self_)._field_s.ptr(), _53830_ident,_53842_cpp_linked);
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d625e0ab_find_trait(_1d625c571_ScopeChecker* _self_, jule::Str _54733_ident) {
	return _1d627e120_find_trait((*_self_)._field_s.ptr(), _54733_ident);
}



inline jule::Ptr<_1d5692820_Enum> _1d625e3b9_find_enum(_1d625c571_ScopeChecker* _self_, jule::Str _55632_ident) {
	return _1d627e42d_find_enum((*_self_)._field_s.ptr(), _55632_ident);
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d625e6c7_find_type_enum(_1d625c571_ScopeChecker* _self_, jule::Str _56537_ident) {
	return _1d627e73b_find_type_enum((*_self_)._field_s.ptr(), _56537_ident);
}



inline jule::Bool _1d625ea07_is_unsafe(jule::Ptr<_1d625c571_ScopeChecker> _self_) {
	jule::Ptr<_1d625c571_ScopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1d625ec6b_is_root(_1d625c571_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1d625ee47_stop(_1d625c571_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1d62601ab_stopped(_1d625c571_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1d6260420_is_deferred(jule::Ptr<_1d625c571_ScopeChecker> _self_) {
	jule::Ptr<_1d625c571_ScopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1d625c571_ScopeChecker> _1d6260684_get_root(jule::Ptr<_1d625c571_ScopeChecker> _self_) {
	jule::Ptr<_1d625c571_ScopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1d87232b5:;
	}
	_iter_end_1d87232b5:;;
	return _62417_root;
}



inline jule::Ptr<_1d625c571_ScopeChecker> _1d62608e8_get_hard_root(jule::Ptr<_1d625c571_ScopeChecker> _self_) {
	jule::Ptr<_1d625c571_ScopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1d8724580:;
	}
	_iter_end_1d8724580:;;
	return _63417_root;
}



inline jule::Ptr<_1d625814e_Label> _1d6260c06_find_label(_1d625c571_ScopeChecker* _self_, jule::Str _64429_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1d872533e:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1d625814e_Label>>()) {
						_case_begin_1d8725b47:;
						{
							jule::Ptr<_1d625814e_Label> _64825_label = _64521_st.operator jule::Ptr<_1d625814e_Label>();;
							if ((_64825_label.get()._field_ident == _64429_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1d8725a48:;
				};
			}
			_iter_next_1d872533e:;
			++it;
			goto _iter_begin_1d872533e;
		}
		_iter_end_1d872533e:;
	};
	return nullptr;
}



inline jule::Ptr<_1d625b2d9_ScopeLabel> _1d6261014_find_label_scope(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Str _66036_ident) {
	jule::Ptr<_1d625b2d9_ScopeLabel> _66117_label = _1d6261322_find_label_all(_self_.ptr(), _66036_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1d625b2d9_ScopeLabel> _1d6261322_find_label_all(_1d625c571_ScopeChecker* _self_, jule::Str _67233_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1d8728034:;
		if (it != expr.end()) {
			jule::Ptr<_1d625b2d9_ScopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_ident == _67233_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1d8728034:;
			++it;
			goto _iter_begin_1d8728034;
		}
		_iter_end_1d8728034:;
	};
	return nullptr;
}



inline jule::Bool _1d62616c9_is_duplicated_ident(_1d625c571_ScopeChecker* _self_, jule::Uintptr _68438_itself, jule::Str _68455_ident) {
	jule::Ptr<_1d6298ea3_Var> _68513_v = _1d625d187_find_var(&(*_self_), _68455_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68438_itself))) {
		if ((_68513_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_scope == (*_self_)._field_scope) || (!(_1d627ea8d_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1d631b1e0_TypeAlias> _69313_ta = _1d625d53e_find_type_alias(&(*_self_), _68455_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68438_itself))) {
		if ((_69313_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1d627ea8d_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1d626194e_check_var_decl(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55bc54c_VarDecl> _70438_decl) {
	jule::Ptr<_1d6298ea3_Var> _70517_v = _1d5685a33_build_var(_70438_decl);;
	_70517_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1d62616c9_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_ident)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _70517_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1d625ee47_stop(_self_.ptr());
		return;;
	};
	_1d628d393_check_var_decl(_self_.get()._field_s, _70517_v,jule::Trait<_1d633797b_Lookup>(_self_, 0));
	if (((!(_1d62995be_is_type_inferred(_70517_v.ptr()))) && ((_70517_v.get()._field_kind == nullptr) || (_70517_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1d6291a17_check_type_var(_self_.get()._field_s, _70517_v,jule::Trait<_1d633797b_Lookup>(_self_, 0));
}



inline void _1d6261bc4_check_type_alias_decl(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c0dad_TypeAliasDecl> _72845_decl) {
	jule::Ptr<_1d631b1e0_TypeAlias> _72917_ta = _1d5682a0d_build_type_alias(_72845_decl);;
	if (_1d62616c9_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_ident)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _72917_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1d625ee47_stop(_self_.ptr());
		return;;
	};
	_1d628905e_check_type_alias_decl(_self_.get()._field_s, _72917_ta,jule::Trait<_1d633797b_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1d625ee47_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1d6255beb_Scope> _1d6261e38_get_child(_1d625c571_ScopeChecker* _self_) {
	return jule::new_ptr<_1d6255beb_Scope>(_1d6255beb_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _1d6262301_check_child_ssc(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b9a77_ScopeTree>& _75240_tree, jule::Ptr<_1d6255beb_Scope>& _75263_s, jule::Ptr<_1d625c571_ScopeChecker>& _75279_ssc) {
	_75279_ssc.get()._field_parent=_self_;
	_1d626c8a0_check(_75279_ssc, _75240_tree,_75263_s);
}



inline jule::Ptr<_1d6255beb_Scope> _1d62626a8_check_child_sc(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b9a77_ScopeTree>& _75739_tree, jule::Ptr<_1d625c571_ScopeChecker>& _75762_ssc) {
	jule::Ptr<_1d6255beb_Scope> _75817_s = _1d6261e38_get_child(_self_.ptr());;
	_1d6262301_check_child_ssc(_self_, _75739_tree,_75817_s,_75762_ssc);
	return _75817_s;
}



inline jule::Ptr<_1d6255beb_Scope> _1d62629b6_check_child(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b9a77_ScopeTree>& _76336_tree) {
	jule::Ptr<_1d625c571_ScopeChecker> _76417_ssc = _1d626cb14_new_child_checker(_self_);;
	return _1d62626a8_check_child_sc(_self_, _76336_tree,_76417_ssc);
}



inline void _1d6262c3b_check_anon_scope(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b9a77_ScopeTree> _76840_tree) {
	jule::Ptr<_1d6255beb_Scope> _76917_s = _1d62629b6_check_child(_self_, _76840_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1d626305a_process_error_call(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>& _77343_m, jule::Ptr<_1ee538d51_Token> _77374_err) {
	if (_1d6260420_is_deferred(_self_)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d625c571_ScopeChecker> _77817_root = _1d6260684_get_root(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77343_m.get()._field_func=_77817_root.get()._field_owner;
}



inline void _1d62632d0_check_expr(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55adbae_Expr> _78634_expr) {
	jule::Ptr<_1d62e322d_Eval> _78717_eval = _1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1d62e16b0_Data> _78917_d = _1d630d59a_eval_expr(_78717_eval, _78634_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>()) {
			_case_begin_1d873e952:;
			{
				jule::Ptr<_1d5677162_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_model.operator jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>();;
				_1d626305a_process_error_call(_self_, _79621_m,_78634_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677d88_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d5676e75_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d5678075_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
			_case_begin_1d873eb61:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1d873e7ed:;
			{
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _78634_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d873e798:;
	};
}



inline void _1d6263555_check_co_expr(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b07a4_CoExpr> _81537_expr) {
	jule::Ptr<_1d62e322d_Eval> _81617_eval = _1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1d62e16b0_Data> _81817_d = _1d630d59a_eval_expr(_81617_eval, _81537_expr.get()._field_expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
			_case_begin_1d8744c65:;
			{
				jule::Ptr<_1d567400a_FnCallExprModel> _82521_model = _81817_d.get()._field_model.operator jule::Ptr<_1d567400a_FnCallExprModel>();;
				if (_82521_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1d62801cb_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_is_co=true;
				_1d630543d_check_fn_of_concurrent_call(_81617_eval.ptr(), _82521_model.get()._field_func,_81537_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1d8744b11:;
			{
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1d8744aab:;
	};
}



inline jule::Ptr<_1d6255dd8_If> _1d6263863_check_if(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55bedac_If> _83932_i) {
	jule::Ptr<_1d6255beb_Scope> _84017_s = _1d62629b6_check_child(_self_, _83932_i.get()._field_scope);;
	jule::Ptr<_1d62e16b0_Data> _84217_d = _1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _83932_i.get()._field_expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d63218aa_Prim> _84717_prim = _1d631dee5_prim(_84217_d.get()._field_kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1d632487a_is_bool(_84717_prim.ptr()))))) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _83932_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d6255dd8_If>(_1d6255dd8_If{._field_expr=_84217_d.get()._field_model, ._field_scope=_84017_s});
}



inline jule::Ptr<_1d62560c5_Else> _1d6263b71_check_else(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c0264_Else> _85934_e) {
	return jule::new_ptr<_1d62560c5_Else>(_1d62560c5_Else{._field_scope=_1d62629b6_check_child(_self_, _85934_e.get()._field_scope)});
}



inline void _1d6263de6_check_conditional(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c06d7_Conditional> _86541_conditional) {
	jule::Ptr<_1d625646b_Conditional> _86617_c = jule::new_ptr<_1d625646b_Conditional>(_1d625646b_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_elifs=jule::Slice<jule::Ptr<_1d6255dd8_If>>::alloc(0LL,(_86541_conditional.get()._field_tail.len() + 1LL));
	_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1d6263863_check_if(_self_, _86541_conditional.get()._field_head));;
	{
		auto &expr = _86541_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1d874ced2:;
		if (it != expr.end()) {
			jule::Ptr<_1d55bedac_If> _87221_elif = *it;
			{
				_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1d6263863_check_if(_self_, _87221_elif));;
			}
			_iter_next_1d874ced2:;
			++it;
			goto _iter_begin_1d874ced2;
		}
		_iter_end_1d874ced2:;
	};
	if ((_86541_conditional.get()._field_default != nullptr)) {
		_86617_c.get()._field_default=_1d6263b71_check_else(_self_, _86541_conditional.get()._field_default);
	};
}



inline void _1d6264358_check_iter_scope_ssc(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Uintptr _88140_it, jule::Ptr<_1d55b9a77_ScopeTree> _88157_tree, jule::Ptr<_1d6255beb_Scope>& _88180_s, jule::Ptr<_1d625c571_ScopeChecker> _88195_ssc) {
	_88195_ssc.get()._field_it=_88140_it;
	_1d6262301_check_child_ssc(_self_, _88157_tree,_88180_s,_88195_ssc);
}



inline jule::Ptr<_1d6255beb_Scope> _1d62647a9_check_iter_scope_sc(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Uintptr _88639_it, jule::Ptr<_1d55b9a77_ScopeTree> _88656_tree, jule::Ptr<_1d625c571_ScopeChecker> _88678_ssc) {
	jule::Ptr<_1d6255beb_Scope> _88717_scope = _1d6261e38_get_child(_self_.ptr());;
	_1d6264358_check_iter_scope_ssc(_self_, _88639_it,_88656_tree,_88717_scope,_88678_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1d6255beb_Scope> _1d6264b61_check_iter_scope(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Uintptr _89236_it, jule::Ptr<_1d55b9a77_ScopeTree>& _89254_tree) {
	jule::Ptr<_1d625c571_ScopeChecker> _89317_ssc = _1d626cb14_new_child_checker(_self_);;
	return _1d62647a9_check_iter_scope_sc(_self_, _89236_it,_89254_tree,_89317_ssc);
}



inline void _1d6264dd6_check_inf_iter(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55bd064_Iter>& _89739_it) {
	jule::Ptr<_1d6256757_InfIter> _89817_kind = jule::new_ptr<_1d6256757_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_scope=_1d6264b61_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89739_it.get()._field_scope);
}



inline void _1d626515b_check_while_iter(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55bd064_Iter>& _90341_it) {
	jule::Ptr<_1d55bd839_WhileKind> _90417_wh = _90341_it.get()._field_kind.operator jule::Ptr<_1d55bd839_WhileKind>();;
	if (((_90417_wh.get()._field_expr == nullptr) && (_90417_wh.get()._field_next == nullptr))) {
		_1d6264dd6_check_inf_iter(_self_, _90341_it);
		return;;
	};
	jule::Ptr<_1d6256bca_WhileIter> _91017_kind = jule::new_ptr<_1d6256bca_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_scope=_1d6264b61_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90341_it.get()._field_scope);
	if ((_90417_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1d62e16b0_Data> _91521_d = _1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _90417_wh.get()._field_expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1d63218aa_Prim> _92017_prim = _1d631dee5_prim(_91521_d.get()._field_kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1d632487a_is_bool(_92017_prim.ptr())))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_expr=_91521_d.get()._field_model;
	};
	if (_1d55bdb8b_is_while_next(_90417_wh.ptr())) {
		if ((!(_1d6255855_is_valid_ast_st_for_next_st(_90417_wh.get()._field_next)))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1d626b64b_check_node(_self_, _90417_wh.get()._field_next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_94017_n);
			if ((!(_1d6255987_is_valid_st_for_next_st(_94325_st)))) {
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_next=_94325_st;
		};
	};
}



inline void _1d62653d1_check_range_iter(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55bd064_Iter>& _95441_it) {
	jule::Ptr<_1d55be1ca_RangeKind> _95517_rang = _95441_it.get()._field_kind.operator jule::Ptr<_1d55be1ca_RangeKind>();;
	jule::Ptr<_1d62e16b0_Data> _95717_d = _1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _95517_rang.get()._field_expr);;
	if ((_95717_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1d62575b0_RangeIter> _96217_kind = jule::new_ptr<_1d62575b0_RangeIter>(_1d62575b0_RangeIter{._field_expr=_95717_d, });;
	_1d62d791a_RangeChecker _96617_rc = _1d62d791a_RangeChecker{._field_sc=_self_, ._field_rang=_95517_rang, ._field_kind=_96217_kind, ._field_d=_95717_d};;
	jule::Bool _97213_ok = _1d62d9312_check(&_96617_rc);;
	if ((!(_97213_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_96217_kind));;
	jule::Ptr<_1d625c571_ScopeChecker> _97917_ssc = _1d626cb14_new_child_checker(_self_);;
	jule::Ptr<_1d6255beb_Scope> _98017_scope = _1d6261e38_get_child(_self_.ptr());;
	if ((_96217_kind.get()._field_key_a != nullptr)) {
		if (((!(_1d627ea8d_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d62616c9_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_a.get()._field_ident))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_a.get()._field_ident)}));
			_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_a.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_a);;
	};
	if ((_96217_kind.get()._field_key_b != nullptr)) {
		if (((!(_1d627ea8d_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d62616c9_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_b.get()._field_ident))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_b.get()._field_ident)}));
			_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_b.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_b);;
	};
	_1d6264358_check_iter_scope_ssc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96217_kind)),_95441_it.get()._field_scope,_98017_scope,_97917_ssc);
	_96217_kind.get()._field_scope=_98017_scope;
}



inline void _1d6265656_check_iter(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55bd064_Iter> _100434_it) {
	if (_1d55bd3b6_is_inf(_100434_it.ptr())) {
		_1d6264dd6_check_inf_iter(_self_, _100434_it);
		return;;
	};
	{
		auto &_match_expr{ _100434_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55bd839_WhileKind>>()) {
			_case_begin_1d876ade0:;
			{
				_1d626515b_check_while_iter(_self_, _100434_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55be1ca_RangeKind>>()) {
			_case_begin_1d876a351:;
			{
				_1d62653d1_check_range_iter(_self_, _100434_it);
			}
		}
		else {
			_case_begin_1d876a20d:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1d876a906:;
	};
}



inline jule::Bool _1d6265964_check_valid_cont_label(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Uintptr _102042_it) {
	jule::Ptr<_1d625c571_ScopeChecker> _102117_scope = _self_;;
	_julec_label_iter:;
	if ((_102117_scope.get()._field_it == _102042_it)) {
		return true;
	};
	if ((_102117_scope.get()._field_parent != nullptr)) {
		_102117_scope=_102117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1d6265c94_check_valid_break_label(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Uintptr _103643_ptr) {
	jule::Ptr<_1d625c571_ScopeChecker> _103717_scope = _self_;;
	_julec_label_iter:;
	if ((_103717_scope.get()._field_it == _103643_ptr)) {
		return true;
	};
	if ((_103717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104517_mtch = static_cast<jule::Uintptr>(((_1d625a1a6_Case*)(_103717_scope.get()._field_cse))->_field_owner);;
		if ((_104517_mtch == _103643_ptr)) {
			return true;
		};
	};
	if ((_103717_scope.get()._field_parent != nullptr)) {
		_103717_scope=_103717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1d62579ab_ContSt> _1d62660b3_check_cont_valid_scope(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55be939_ContSt> _105942_c) {
	if (_1d6260420_is_deferred(_self_)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105942_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1d62579ab_ContSt>();
	};
	jule::Ptr<_1d625c571_ScopeChecker> _106917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106917_scope.get()._field_it == 0LLU) && (_106917_scope.get()._field_parent != nullptr)) && (_106917_scope.get()._field_owner == nullptr))) {
			_case_begin_1d8773524:;
			{
				_106917_scope=_106917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106917_scope.get()._field_it != 0LLU)) {
			_case_begin_1d877359b:;
			{
				return jule::new_ptr<_1d62579ab_ContSt>(_1d62579ab_ContSt{._field_it=_106917_scope.get()._field_it});
			}
		}
		_match_end_1d877349c:;
	};
	_1d62801cb_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1d6266338_check_cont(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55be939_ContSt> _108330_c) {
	jule::Ptr<_1d62579ab_ContSt> _108417_cont = _1d62660b3_check_cont_valid_scope(_self_, _108330_c);;
	if ((_108417_cont == nullptr)) {
		return;;
	};
	if ((_108330_c.get()._field_label != nullptr)) {
		jule::Ptr<_1d625b2d9_ScopeLabel> _109021_label = _1d622558e_find_label_parent(_108330_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_109021_label == nullptr)) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_109021_label.get()._field_used=true;
		if (((_109021_label.get()._field_pos + 1LL) >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _110317_i = (_109021_label.get()._field_pos + 1LL);;
		if ((_110317_i >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110725_st = _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts[_110317_i];;
			{
				auto &_match_expr{ _110725_st };
				
				if (_match_expr.type_is<jule::Ptr<_1d6256757_InfIter>>()) {
					_case_begin_1d8778e75:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1d6256757_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1d62575b0_RangeIter>>()) {
					_case_begin_1d877c000:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1d62575b0_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1d6256bca_WhileIter>>()) {
					_case_begin_1d877c066:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1d6256bca_WhileIter>()));
					}
				}
				else {
					_case_begin_1d877bd9b:;
					{
						_1d62801cb_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1d877bcbe:;
			};
		};
	};
	if ((_108417_cont.get()._field_it != 0LLU)) {
		if ((!(_1d6265964_check_valid_cont_label(_self_, _108417_cont.get()._field_it)))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_108417_cont));;
}



inline void _1d62665ad_check_label(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b71e5_LabelSt> _113035_l) {
	if ((_1d6260c06_find_label(_self_.ptr(), _113035_l.get()._field_ident) != nullptr)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _113035_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_113035_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1d625814e_Label> _113617_label = jule::new_ptr<_1d625814e_Label>(_1d625814e_Label{._field_ident=_113035_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_113617_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1d625b2d9_ScopeLabel>>::make({jule::new_ptr<_1d625b2d9_ScopeLabel>(_1d625b2d9_ScopeLabel{._field_token=_113035_l.get()._field_token, ._field_label=_113617_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1d6266833_push_goto(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b759c_GotoSt> _114933_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1d625843a_GotoSt>(_1d625843a_GotoSt{._field_ident=_114933_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1d625b75c_ScopeGoto>>::make({jule::new_ptr<_1d625b75c_ScopeGoto>(_1d625b75c_ScopeGoto{._field_gt=_114933_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _1d6266aa8_check_postfix(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b84d2_AssignSt> _116137_a) {
	if ((_116137_a.get()._field_left.len() > 1LL)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d55adbae_Expr> _116717_expr = _116137_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1d62e16b0_Data> _116817_d = _1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _116717_expr);;
	if ((_116817_d == nullptr)) {
		return;;
	};
	_1d624127a_check_assign(_self_.get()._field_s,_116817_d,nullptr,_116137_a.get()._field_setter);
	if ((_1d631e4bd_ptr(_116817_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d63286a3_Ptr> _117621_ptr = _1d631e4bd_ptr(_116817_d.get()._field_kind.ptr());;
		if (_1d6329176_is_unsafe(_117621_ptr.ptr())) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1d631c2ce_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1d631dee5_prim(_116817_d.get()._field_kind.ptr()) == nullptr) || (!(_1d62552a0_is_num(_1d631dee5_prim(_116817_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1d631c2ce_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1d62587e2_Postfix>(_1d62587e2_Postfix{._field_expr=_116817_d.get()._field_model, ._field_op=_116137_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1d6266db6_is_new_assign_ident(_1d625c571_ScopeChecker* _self_, jule::Str _119438_ident) {
	if ((_1ee53b5e5_is_ignore_ident(_119438_ident) || _119438_ident.empty())) {
		return false;
	};
	return (_1d62de9ee_def_by_ident((*_self_)._field_table.ptr(), _119438_ident,false) == nullptr);
}



inline jule::Bool _1d6267339_check_structure_assign_op(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c62d1_StructIns>& _120250_s, jule::Ptr<_1d55b84d2_AssignSt>& _120270_a, jule::Ptr<_1d62e16b0_Data>& _120289_r) {
	jule::Ptr<_1d567d498_FnIns> _120517_overload = nullptr;;
	{
		auto &_match_expr{ _120270_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1d878ea29:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1d878ea90:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1d87909b4:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1d8790a2a:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1d8790a91:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1d8790b07:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1d8790b6d:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1d8790bd4:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1d8790c4a:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1d8790cb1:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1d878e8e7:;
			{
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1d5590388_to_str(_120250_s.ptr()))}));
				return false;
			}
		}
		_match_end_1d878e83c:;
	};
	if ((_120517_overload == nullptr)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1d5590388_to_str(_120250_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1d567c5c9_ParamIns> _123717_p = _120517_overload.get()._field_params[1LL];;
	return _1d6285cd6_check_assign_type(_self_.get()._field_s, _123717_p.get()._field_decl.get()._field_reference,_123717_p.get()._field_kind,_120289_r,_120270_a.get()._field_setter);
}



inline void _1d62675c0_check_single_assign(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b84d2_AssignSt>& _124144_a) {
	jule::Ptr<_1d62e16b0_Data> _124217_l = nullptr;;
	if ((!(_1ee53b5e5_is_ignore_ident(_124144_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1d55adbae_Expr> _124521_expr = _124144_a.get()._field_left[0LL].get()._field_expr;;
		_124217_l=_1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _124521_expr);
		if ((_124217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1d62e322d_Eval> _125217_eval = nullptr;;
	if ((_124217_l != nullptr)) {
		_125217_eval=_1d62854cd_evalp(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0),_124217_l.get()._field_kind);
	} else {
		_125217_eval=_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0));
	};
	_125217_eval.get()._field_unsafety=_1d625ea07_is_unsafe(_self_);
	jule::Ptr<_1d62e16b0_Data> _125917_r = _1d630d59a_eval_expr(_125217_eval, _124144_a.get()._field_right);;
	if ((_125917_r == nullptr)) {
		return;;
	};
	if ((_124217_l == nullptr)) {
		if (_1d631d06b_void(_125917_r.get()._field_kind.ptr())) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_125917_r));;
		return;;
	};
	if ((!(_1d624127a_check_assign(_self_.get()._field_s,_124217_l,_125917_r,_124144_a.get()._field_setter)))) {
		return;;
	};
	if ((_1d6320b84_tup(_125917_r.get()._field_kind.ptr()) != nullptr)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d5654dba_OperandExprModel> _128117_lm = jule::new_ptr<_1d5654dba_OperandExprModel>(_1d5654dba_OperandExprModel{._field_kind=_124217_l.get()._field_kind, ._field_model=_124217_l.get()._field_model});;
	jule::Ptr<_1d5654dba_OperandExprModel> _128517_rm = jule::new_ptr<_1d5654dba_OperandExprModel>(_1d5654dba_OperandExprModel{._field_kind=_125917_r.get()._field_kind, ._field_model=_125917_r.get()._field_model});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1d6258c65_Assign>(_1d6258c65_Assign{._field_l=_128117_lm, ._field_r=_128517_rm, ._field_op=_124144_a.get()._field_setter})));;
	if ((_124144_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1d55c62d1_StructIns> _129221_strct = _1d6320447_strct(_124217_l.get()._field_kind.ptr());;
		if ((_129221_strct != nullptr)) {
			_1d6267339_check_structure_assign_op(_self_, _129221_strct,_124144_a,_125917_r);
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind=_124144_a.get()._field_setter.get()._field_kind.slice(0LL,(_124144_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1d63107ab_BinaryEval _129921_solver = static__1d63111b3_new(_125217_eval,_124144_a.get()._field_setter);;
		_125917_r=_1d6315daa_solve_explicit(&_129921_solver, _124217_l,_125917_r);
		if ((_125917_r == nullptr)) {
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1d62cc16d_AssignTypeChecker _130817_checker = _1d62cc16d_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124217_l.get()._field_kind, ._field_d=_125917_r, ._field_error_token=_124144_a.get()._field_setter};;
	if (_1d62cd2e5_check(&_130817_checker)) {
		_128517_rm.get()._field_model=_125917_r.get()._field_model;
		_128117_lm.get()._field_model=_124217_l.get()._field_model;
	};
}



inline void _1d6267b0e___process_end_part_of_multi_assign(_1d625c571_ScopeChecker* _self_, jule::Ptr<_1d625911c_MultiAssign> _132057_st, jule::Ptr<_1d55b84d2_AssignSt> _132113_a, jule::Ptr<_1d55b7e93_AssignLeft> _132131_lexpr, jule::Ptr<_1d62e16b0_Data> _132155_l, jule::Ptr<_1d62e16b0_Data> _132169_r) {
	if (_1ee53b5e5_is_ignore_ident(_132131_lexpr.get()._field_ident)) {
		if (_1d631d06b_void(_132169_r.get()._field_kind.ptr())) {
			_1d62801cb_push_err((*_self_)._field_s.ptr(), _132113_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_132113_a.get()._field_declarative && _1d6266db6_is_new_assign_ident(&(*_self_), _132131_lexpr.get()._field_ident))) {
		if (_1d62616c9_is_duplicated_ident(&(*_self_), 0LLU,_132131_lexpr.get()._field_ident)) {
			_1d62801cb_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
			_1d62804ea_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1d625ee47_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1d6298ea3_Var> _133921_v = jule::new_ptr<_1d6298ea3_Var>(_1d6298ea3_Var{._field_scope=(*_self_)._field_scope, ._field_token=_132131_lexpr.get()._field_token, ._field_ident=_132131_lexpr.get()._field_ident, ._field_mutable=_132131_lexpr.get()._field_mutable, ._field_reference=_132131_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_1d62e2738_Value>(_1d62e2738_Value{._field_expr=_132113_a.get()._field_right, ._field_data=_132169_r}), });;
		_1d62916e8_check_var((*_self_)._field_s, _133921_v);
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(static_cast<jule::Any>(_133921_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_133921_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_133921_v));;
		return;;
	};
	if ((_132131_lexpr.get()._field_mutable || _132131_lexpr.get()._field_reference)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
		_1d62804ea_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1d624127a_check_assign((*_self_)._field_s,_132155_l,_132169_r,_132113_a.get()._field_setter)))) {
		return;;
	};
	;
	_1d6288877_check_validity_for_init_expr((*_self_)._field_s, _132155_l.get()._field_mutable,false,_132155_l.get()._field_kind,_132169_r,_132113_a.get()._field_setter);
	_1d62cc16d_AssignTypeChecker _137417_checker = _1d62cc16d_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_132155_l.get()._field_kind, ._field_d=_132169_r, ._field_error_token=_132113_a.get()._field_setter};;
	_1d62cd2e5_check(&_137417_checker);
	_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(_132155_l.get()._field_model);;
}



inline void _1d6267d84_check_ret_multi_assign(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b84d2_AssignSt>& _138547_a) {
	jule::Ptr<_1d62e16b0_Data> _138617_rd = _1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _138547_a.get()._field_right);;
	if ((_138617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d62e16b0_Data>> _139117_r = _1d6244547_get_datas_from_tuple_data(_138617_rd);;
	{
		
		if ((_138547_a.get()._field_left.len() > _139117_r.len())) {
			_case_begin_1d87b0ad3:;
			{
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138547_a.get()._field_left.len() < _139117_r.len())) {
			_case_begin_1d87b0b5a:;
			{
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1d87b0a4a:;
	};
	jule::Ptr<_1d625911c_MultiAssign> _140217_st = jule::new_ptr<_1d625911c_MultiAssign>(_1d625911c_MultiAssign{._field_r=_138617_rd.get()._field_model});;
	if ((_1d6320b84_tup(_138617_rd.get()._field_kind.ptr()) == nullptr)) {
		_140217_st.get()._field_r=static_cast<jule::Any>(jule::new_ptr<_1d5675c32_TupleExprModel>(_1d5675c32_TupleExprModel{._field_datas=_139117_r}));
	};
	{
		auto &expr = _138547_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1d87b382d:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			{
				jule::Ptr<_1d55b7e93_AssignLeft> _141121_lexpr = _138547_a.get()._field_left[_141013_i];;
				jule::Ptr<_1d62e16b0_Data> _141221_l = nullptr;;
				if (((!(_1ee53b5e5_is_ignore_ident(_141121_lexpr.get()._field_ident))) && ((!(_138547_a.get()._field_declarative)) || (!(_1d6266db6_is_new_assign_ident(_self_.ptr(), _141121_lexpr.get()._field_ident)))))) {
					_141221_l=_1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _141121_lexpr.get()._field_expr);
					if ((_141221_l == nullptr)) {
						goto _iter_next_1d87b382d;
					};
				};
				_1d6267b0e___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_138547_a,_141121_lexpr,_141221_l,_139117_r[_141013_i]);
			}
			_iter_next_1d87b382d:;
			++it;
			_141013_i++;
			goto _iter_begin_1d87b382d;
		}
		_iter_end_1d87b382d:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_140217_st));;
}



inline void _1d6268109_check_multi_assign(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b84d2_AssignSt>& _142843_a) {
	{
		auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55b3048_FnCallExpr>>()) {
			_case_begin_1d87b7865:;
			{
				_1d6267d84_check_ret_multi_assign(_self_, _142843_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b03ec_UnsafeExpr>>()) {
			_case_begin_1d87b78dc:;
			{
				{
					auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1d55b03ec_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d55b3048_FnCallExpr>>()) {
						_case_begin_1d87b8bda:;
						{
							_1d6267d84_check_ret_multi_assign(_self_, _142843_a);
							return;;
						}
					}
					_match_end_1d87b8b63:;
				};
			}
		}
		_match_end_1d87b7810:;
	};
	jule::Slice<jule::Any> _144117_right = _1d62450c5_get_expr_models(_142843_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_142843_a.get()._field_left.len() > _144117_right.len())) {
			_case_begin_1d87b9a32:;
			{
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142843_a.get()._field_left.len() < _144117_right.len())) {
			_case_begin_1d87b9aa9:;
			{
				_1d62801cb_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1d87b98bc:;
	};
	jule::Ptr<_1d5675c32_TupleExprModel> _145217_right_tuple = jule::new_ptr<_1d5675c32_TupleExprModel>();;
	jule::Ptr<_1d625911c_MultiAssign> _145417_st = jule::new_ptr<_1d625911c_MultiAssign>(_1d625911c_MultiAssign{._field_r=static_cast<jule::Any>(_145217_right_tuple)});;
	{
		auto &expr = _142843_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1d87bc381:;
		if (it != expr.end()) {
			jule::I64 _145813_i = it - expr.begin();
			{
				jule::Ptr<_1d55b7e93_AssignLeft> _145921_lexpr = _142843_a.get()._field_left[_145813_i];;
				jule::Ptr<_1d62e16b0_Data> _146021_l = nullptr;;
				if (((!(_1ee53b5e5_is_ignore_ident(_145921_lexpr.get()._field_ident))) && ((!(_142843_a.get()._field_declarative)) || (!(_1d6266db6_is_new_assign_ident(_self_.ptr(), _145921_lexpr.get()._field_ident)))))) {
					_146021_l=_1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _145921_lexpr.get()._field_expr);
					if ((_146021_l == nullptr)) {
						goto _iter_next_1d87bc381;
					};
				};
				jule::Ptr<_1d55adbae_Expr> _147021_expr = jule::new_ptr<_1d55adbae_Expr>(_1d55adbae_Expr{._field_token=_142843_a.get()._field_right.get()._field_token, ._field_kind=_144117_right[_145813_i]});;
				jule::Ptr<_1d62e322d_Eval> _147421_eval = nullptr;;
				if ((_146021_l != nullptr)) {
					_147421_eval=_1d62854cd_evalp(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0),_146021_l.get()._field_kind);
				} else {
					_147421_eval=_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0));
				};
				jule::Ptr<_1d62e16b0_Data> _148021_r = _1d630d59a_eval_expr(_147421_eval, _147021_expr);;
				if ((_148021_r == nullptr)) {
					goto _iter_next_1d87bc381;
				};
				_145217_right_tuple.get()._field_datas = jule::alloc_for_append(_145217_right_tuple.get()._field_datas,1);_145217_right_tuple.get()._field_datas.__push(_148021_r);;
				_1d6267b0e___process_end_part_of_multi_assign(_self_.ptr(), _145417_st,_142843_a,_145921_lexpr,_146021_l,_148021_r);
			}
			_iter_next_1d87bc381:;
			++it;
			_145813_i++;
			goto _iter_begin_1d87bc381;
		}
		_iter_end_1d87bc381:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_145417_st));;
}



inline void _1d626837e_check_assign_st(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b84d2_AssignSt> _149339_a) {
	{
		
		if (_1ee53d691_is_postfix_op(_149339_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1d87c8ce9:;
			{
				_1d6266aa8_check_postfix(_self_, _149339_a);
			}
		}
		else if (((_149339_a.get()._field_left.len() == 1LL) && (!(_149339_a.get()._field_declarative)))) {
			_case_begin_1d87c89b9:;
			{
				_1d62675c0_check_single_assign(_self_, _149339_a);
			}
		}
		else {
			_case_begin_1d87c8953:;
			{
				_1d6268109_check_multi_assign(_self_, _149339_a);
			}
		}
		_match_end_1d87c83e2:;
	};
}



inline jule::Ptr<_1d6255beb_Scope> _1d6268736_check_case_scope(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d625a1a6_Case>& _150437_c, jule::Ptr<_1d55b9a77_ScopeTree>& _150452_tree) {
	jule::Ptr<_1d625c571_ScopeChecker> _150517_ssc = _1d626cb14_new_child_checker(_self_);;
	_150517_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150437_c));
	return _1d62626a8_check_child_sc(_self_, _150452_tree,_150517_ssc);
}



inline jule::Ptr<_1d625a1a6_Case> _1d6268c31_check_case(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d625965b_Match> _151034_m, jule::I64 _151045_i, jule::Ptr<_1d55c1331_Case> _151057_c, jule::Ptr<_1d62e16b0_Data> _151076_expr) {
	jule::Ptr<_1d625a1a6_Case> _151117__case = _151034_m.get()._field_cases[_151045_i];;
	_151117__case.get()._field_exprs=jule::Slice<jule::Ptr<_1d62e16b0_Data>>::alloc(0LL,_151057_c.get()._field_exprs.len());
	jule::Bool _151317_generic_matched = false;;
	jule::Ptr<_1d62e322d_Eval> _151417_eval = _1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0));;
	{
		auto &expr = _151057_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d87cdabd:;
		if (it != expr.end()) {
			jule::Ptr<_1d55adbae_Expr> _151521_e = *it;
			{
				jule::Ptr<_1d62e16b0_Data> _151621_d = _1d630ce7e_eval_expr_kind(_151417_eval, _151521_e.get()._field_kind);;
				if ((_151621_d == nullptr)) {
					goto _iter_next_1d87cdabd;
				};
				if (_151034_m.get()._field_type_match) {
					_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
					if ((_1d62415ee_count_match_type(_151034_m,_151621_d.get()._field_kind) > 1LL)) {
						_1d62801cb_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_151621_d.get()._field_kind.ptr()))}));
					};
					if (_151076_expr.get()._field_kind.get()._field_generic) {
						_151317_generic_matched=(_151317_generic_matched || _1d631c5dc_equals(_151076_expr.get()._field_kind, _151621_d.get()._field_kind));
					} else {
						if ((_1d631e996_tenm(_151076_expr.get()._field_kind.ptr()) != nullptr)) {
							_1d6286259_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
						} else {
							jule::Ptr<_1d59c3e1a_Trait> _153129_trt = _1d63206ab_trt(_151076_expr.get()._field_kind.ptr());;
							if ((_153129_trt != nullptr)) {
								_1d6286259_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
							};
						};
					};
					goto _iter_next_1d87cdabd;
				};
				if (_151621_d.get()._field_decl) {
					_1d62801cb_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1d87cdabd;
				};
				_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
				_1d62cc16d_AssignTypeChecker _154921_checker = _1d62cc16d_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_151076_expr.get()._field_kind, ._field_d=_151621_d, ._field_error_token=_151521_e.get()._field_token};;
				_1d62cd2e5_check(&_154921_checker);
			}
			_iter_next_1d87cdabd:;
			++it;
			goto _iter_begin_1d87cdabd;
		}
		_iter_end_1d87cdabd:;
	};
	if ((((!(_151034_m.get()._field_type_match)) || (!(_151076_expr.get()._field_kind.get()._field_generic))) || _151317_generic_matched)) {
		_151117__case.get()._field_scope=_1d6268736_check_case_scope(_self_, _151117__case,_151057_c.get()._field_scope);
	};
	return _151117__case;
}



inline void _1d62690e9_check_cases(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c1a07_MatchCase>& _156336_m, jule::Ptr<_1d625965b_Match> _156355_rm, jule::Ptr<_1d62e16b0_Data> _156371_expr) {
	_156355_rm.get()._field_cases=jule::Slice<jule::Ptr<_1d625a1a6_Case>>::alloc(0LL,_156336_m.get()._field_cases.len());
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d87d7544:;
		if (it != expr.end()) {
			jule::I64 _156513_i = it - expr.begin();
			{
				jule::Ptr<_1d625a1a6_Case> _156621__case = jule::new_ptr<_1d625a1a6_Case>(_1d625a1a6_Case{._field_owner=_156355_rm, });;
				if ((_156513_i > 0LL)) {
					_156355_rm.get()._field_cases[(_156513_i - 1LL)].get()._field_next=_156621__case;
				};
				_156355_rm.get()._field_cases = jule::alloc_for_append(_156355_rm.get()._field_cases,1);_156355_rm.get()._field_cases.__push(_156621__case);;
			}
			_iter_next_1d87d7544:;
			++it;
			_156513_i++;
			goto _iter_begin_1d87d7544;
		}
		_iter_end_1d87d7544:;
	};
	if (((_156355_rm.get()._field_default != nullptr) && (_156336_m.get()._field_cases.len() > 0LL))) {
		_156355_rm.get()._field_cases[(_156355_rm.get()._field_cases.len() - 1LL)].get()._field_next=_156355_rm.get()._field_default;
	};
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d87daab9:;
		if (it != expr.end()) {
			jule::I64 _157914_i = it - expr.begin();
			jule::Ptr<_1d55c1331_Case> _157921_c = *it;
			{
				_1d6268c31_check_case(_self_, _156355_rm,_157914_i,_157921_c,_156371_expr);
			}
			_iter_next_1d87daab9:;
			++it;
			_157914_i++;
			goto _iter_begin_1d87daab9;
		}
		_iter_end_1d87daab9:;
	};
}



inline jule::Ptr<_1d625a1a6_Case> _1d62694a1_check_default(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d625965b_Match> _158437_m, jule::Ptr<_1d55c0264_Else> _158452_d) {
	jule::Ptr<_1d625a1a6_Case> _158517_def = jule::new_ptr<_1d625a1a6_Case>(_1d625a1a6_Case{._field_owner=_158437_m, });;
	_158517_def.get()._field_scope=_1d6268736_check_case_scope(_self_, _158517_def,_158452_d.get()._field_scope);
	return _158517_def;
}



inline void _1d6269726_check_comptime_panic(_1d625c571_ScopeChecker* _self_, jule::Ptr<_1d6255beb_Scope>& _159240_s) {
	if ((_159240_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159713_stmt = _159240_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _159713_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d87dddec:;
			{
				jule::Ptr<_1d62e16b0_Data> _160017_d = _159713_stmt.operator jule::Ptr<_1d62e16b0_Data>();;
				{
					auto &_match_expr{ _160017_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>>()) {
						_case_begin_1d87dec33:;
						{
							jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel> _160321_m = _160017_d.get()._field_model.operator jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160321_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
									_case_begin_1d87e0c23:;
									{
										jule::Ptr<_1d561288e_Const> _160625_c = _160321_m.get()._field_expr.operator jule::Ptr<_1d561288e_Const>();;
										if (_1d566dac6_is_str(_160625_c.ptr())) {
											_1d62801cb_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1d566b72d_read_str(_160625_c.ptr()))}));
										};
									}
								}
								_match_end_1d87e0b79:;
							};
						}
					}
					_match_end_1d87deae0:;
				};
			}
		}
		_match_end_1d87ddd97:;
	};
}



inline void _1d6269a45_push_type_match(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d625965b_Match> _161539_tm, jule::Ptr<_1d55c1a07_MatchCase>& _161556_m) {
	if (_161539_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _161539_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1d87e02c7:;
			if (it != expr.end()) {
				jule::Ptr<_1d625a1a6_Case> _161925_c = *it;
				{
					if ((_161925_c.get()._field_scope != nullptr)) {
						_1d6269726_check_comptime_panic(_self_.ptr(), _161925_c.get()._field_scope);
						_161539_tm.get()._field_default=_161925_c;
						_161539_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1d87e02c7:;
				++it;
				goto _iter_begin_1d87e02c7;
			}
			_iter_end_1d87e02c7:;
		};
		if ((_161556_m.get()._field_default != nullptr)) {
			_161539_tm.get()._field_cases=nullptr;
			_161539_tm.get()._field_default=_1d62694a1_check_default(_self_, _161539_tm,_161556_m.get()._field_default);
			if ((_161539_tm.get()._field_default != nullptr)) {
				_1d6269726_check_comptime_panic(_self_.ptr(), _161539_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_161539_tm));;
}



inline void _1d6269cba_check_type_match(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c1a07_MatchCase>& _163941_m) {
	jule::Ptr<_1d62e16b0_Data> _164017_d = _1d630d28c_eval(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _163941_m.get()._field_expr);;
	if ((_164017_d == nullptr)) {
		return;;
	};
	if (((!(_164017_d.get()._field_kind.get()._field_generic)) && (!(((((_1d631dee5_prim(_164017_d.get()._field_kind.ptr()) != nullptr) && _1d6324d53_is_any(_1d631dee5_prim(_164017_d.get()._field_kind.ptr()).ptr())) || (_1d63206ab_trt(_164017_d.get()._field_kind.ptr()) != nullptr)) || (_1d631e996_tenm(_164017_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _163941_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d625965b_Match> _165117_tm = jule::new_ptr<_1d625965b_Match>(_1d625965b_Match{._field_expr=_164017_d, ._field_type_match=true, });;
	if (((!(_165117_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_163941_m.get()._field_default != nullptr))) {
		_165117_tm.get()._field_default=_1d62694a1_check_default(_self_, _165117_tm,_163941_m.get()._field_default);
	};
	_1d62690e9_check_cases(_self_, _163941_m,_165117_tm,_164017_d);
	_1d6269a45_push_type_match(_self_, _165117_tm,_163941_m);
}



inline void _1d626a040_check_common_match(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c1a07_MatchCase>& _166443_m) {
	jule::Ptr<_1d62e16b0_Data> _166517_d = nullptr;;
	if ((_166443_m.get()._field_expr == nullptr)) {
		_166517_d=jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_constant=static__1d566a221_new_bool(true)});
		_166517_d.get()._field_model=static_cast<jule::Any>(_166517_d.get()._field_constant);
	} else {
		_166517_d=_1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _166443_m.get()._field_expr);
		if ((_166517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1d625965b_Match> _167917_mc = jule::new_ptr<_1d625965b_Match>(_1d625965b_Match{._field_expr=_166517_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_167917_mc));;
	if ((_166443_m.get()._field_default != nullptr)) {
		_167917_mc.get()._field_default=_1d62694a1_check_default(_self_, _167917_mc,_166443_m.get()._field_default);
	};
	_1d62690e9_check_cases(_self_, _166443_m,_167917_mc,_166517_d);
}



inline void _1d626a2b5_check_match(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55c1a07_MatchCase> _169135_m) {
	if (_169135_m.get()._field_type_match) {
		_1d6269cba_check_type_match(_self_, _169135_m);
		return;;
	};
	_1d626a040_check_common_match(_self_, _169135_m);
}



inline void _1d626a53a_check_fall(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b7888_FallSt> _169930_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1d6260420_is_deferred(_self_))) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1d625a1a6_Case* _170717__case = ((_1d625a1a6_Case*)(_self_.get()._field_cse));;
	if ((_170717__case->_field_next == nullptr)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1d625a75b_FallSt>(_1d625a75b_FallSt{._field_dest_case=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170717__case->_field_next))})));;
}



inline jule::Ptr<_1d6257d63_BreakSt> _1d626a848_check_break_with_label(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55be582_BreakSt> _171942_b) {
	jule::Ptr<_1d6257d63_BreakSt> _172017_brk = _1d626ab56_check_plain_break(_self_, _171942_b);;
	if ((_172017_brk == nullptr)) {
		return nullptr;
	};
	_172017_brk.get()._field_it=0LLU;
	_172017_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1d625b2d9_ScopeLabel> _173017_label = _1d622558e_find_label_parent(_171942_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_173017_label == nullptr)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_173017_label.get()._field_used=true;
	if (((_173017_label.get()._field_pos + 1LL) >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _174313_i = (_173017_label.get()._field_pos + 1LL);;
	if ((_174313_i >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _174721_st = _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts[_174313_i];;
		{
			auto &_match_expr{ _174721_st };
			
			if (_match_expr.type_is<jule::Ptr<_1d6256757_InfIter>>()) {
				_case_begin_1d8808ea0:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1d6256757_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1d62575b0_RangeIter>>()) {
				_case_begin_1d880c503:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1d62575b0_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1d6256bca_WhileIter>>()) {
				_case_begin_1d880c569:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1d6256bca_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1d625965b_Match>>()) {
				_case_begin_1d880c5d0:;
				{
					_172017_brk.get()._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1d625965b_Match>()));
				}
			}
			else {
				_case_begin_1d880c39e:;
				{
					_1d62801cb_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1d880c2c2:;
		};
	};
	if ((_172017_brk.get()._field_it != 0LLU)) {
		if ((!(_1d6265c94_check_valid_break_label(_self_, _172017_brk.get()._field_it)))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_172017_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1d6265c94_check_valid_break_label(_self_, _172017_brk.get()._field_mtch)))) {
			_1d62801cb_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _172017_brk;
}



inline jule::Ptr<_1d6257d63_BreakSt> _1d626ab56_check_plain_break(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55be582_BreakSt> _177737_b) {
	if (_1d6260420_is_deferred(_self_)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d625c571_ScopeChecker> _178317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178317_scope.get()._field_it == 0LLU) && (_178317_scope.get()._field_cse == 0LLU)) && (_178317_scope.get()._field_parent != nullptr)) && (_178317_scope.get()._field_owner == nullptr))) {
			_case_begin_1d88138a0:;
			{
				_178317_scope=_178317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178317_scope.get()._field_it != 0LLU)) {
			_case_begin_1d8813927:;
			{
				return jule::new_ptr<_1d6257d63_BreakSt>(_1d6257d63_BreakSt{._field_it=_178317_scope.get()._field_it, });
			}
		}
		else if ((_178317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1d881399e:;
			{
				return jule::new_ptr<_1d6257d63_BreakSt>(_1d6257d63_BreakSt{._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1d625a1a6_Case*)(_178317_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1d88137d4:;
	};
	_1d62801cb_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1d626adcb_check_break(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55be582_BreakSt> _179931_b) {
	if ((_179931_b.get()._field_label != nullptr)) {
		jule::Ptr<_1d6257d63_BreakSt> _180121_brk = _1d626a848_check_break_with_label(_self_, _179931_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180121_brk));;
		return;;
	};
	jule::Ptr<_1d6257d63_BreakSt> _180617_brk = _1d626ab56_check_plain_break(_self_, _179931_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180617_brk));;
}



inline void _1d626b151_check_ret(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55bc904_RetSt> _181033_r) {
	if (_1d6260420_is_deferred(_self_)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _181033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d625abce_RetSt> _181517_rt = jule::new_ptr<_1d625abce_RetSt>(_1d625abce_RetSt{._field_func=_1d6260684_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_181517_rt));;
	jule::Ptr<_1d62d9aa4_RetTypeChecker> _182017_rtc = jule::new_ptr<_1d62d9aa4_RetTypeChecker>(_1d62d9aa4_RetTypeChecker{._field_sc=_self_, ._field_f=_181517_rt.get()._field_func, ._field_error_token=_181033_r.get()._field_token, });;
	jule::Bool _182513_ok = _1d62da995_check(_182017_rtc.ptr(), _181033_r.get()._field_expr);;
	if ((!(_182513_ok))) {
		return;;
	};
	if (((_181033_r.get()._field_expr == nullptr) && (_182017_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181517_rt.get()._field_vars=_182017_rtc.get()._field_vars;
	if ((_181033_r.get()._field_expr != nullptr)) {
		_181517_rt.get()._field_expr=_182017_rtc.get()._field_model;
	};
}



inline void _1d626b3c6_check_use_expr(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55ae550_UseExpr> _184134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1d6260420_is_deferred(_self_)) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1d62801cb_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1d626b64b_check_node(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Any& _185735_node) {
	{
		auto &_match_expr{ _185735_node };
		
		if (_match_expr.type_is<jule::Ptr<_1d55b9a77_ScopeTree>>()) {
			_case_begin_1d8821e74:;
			{
				_1d6262c3b_check_anon_scope(_self_, _185735_node.operator jule::Ptr<_1d55b9a77_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bc54c_VarDecl>>()) {
			_case_begin_1d8821968:;
			{
				_1d626194e_check_var_decl(_self_, _185735_node.operator jule::Ptr<_1d55bc54c_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c0dad_TypeAliasDecl>>()) {
			_case_begin_1d8821d75:;
			{
				_1d6261bc4_check_type_alias_decl(_self_, _185735_node.operator jule::Ptr<_1d55c0dad_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55adbae_Expr>>()) {
			_case_begin_1d88221b6:;
			{
				_1d62632d0_check_expr(_self_, _185735_node.operator jule::Ptr<_1d55adbae_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b07a4_CoExpr>>()) {
			_case_begin_1d8822370:;
			{
				_1d6263555_check_co_expr(_self_, _185735_node.operator jule::Ptr<_1d55b07a4_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c06d7_Conditional>>()) {
			_case_begin_1d88223d6:;
			{
				_1d6263de6_check_conditional(_self_, _185735_node.operator jule::Ptr<_1d55c06d7_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bd064_Iter>>()) {
			_case_begin_1d882244c:;
			{
				_1d6265656_check_iter(_self_, _185735_node.operator jule::Ptr<_1d55bd064_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55be939_ContSt>>()) {
			_case_begin_1d88224b3:;
			{
				_1d6266338_check_cont(_self_, _185735_node.operator jule::Ptr<_1d55be939_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b71e5_LabelSt>>()) {
			_case_begin_1d8822529:;
			{
				_1d62665ad_check_label(_self_, _185735_node.operator jule::Ptr<_1d55b71e5_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b759c_GotoSt>>()) {
			_case_begin_1d8822590:;
			{
				_1d6266833_push_goto(_self_, _185735_node.operator jule::Ptr<_1d55b759c_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b84d2_AssignSt>>()) {
			_case_begin_1d8822606:;
			{
				_1d626837e_check_assign_st(_self_, _185735_node.operator jule::Ptr<_1d55b84d2_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c1a07_MatchCase>>()) {
			_case_begin_1d882266c:;
			{
				_1d626a2b5_check_match(_self_, _185735_node.operator jule::Ptr<_1d55c1a07_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b7888_FallSt>>()) {
			_case_begin_1d88226d3:;
			{
				_1d626a53a_check_fall(_self_, _185735_node.operator jule::Ptr<_1d55b7888_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55be582_BreakSt>>()) {
			_case_begin_1d8822749:;
			{
				_1d626adcb_check_break(_self_, _185735_node.operator jule::Ptr<_1d55be582_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bc904_RetSt>>()) {
			_case_begin_1d88227b0:;
			{
				_1d626b151_check_ret(_self_, _185735_node.operator jule::Ptr<_1d55bc904_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ae550_UseExpr>>()) {
			_case_begin_1d8822826:;
			{
				_1d626b3c6_check_use_expr(_self_, _185735_node.operator jule::Ptr<_1d55ae550_UseExpr>());
			}
		}
		else {
			_case_begin_1d8821ade:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1d8821a12:;
	};
}



inline void _1d626b827_check_result(jule::Ptr<_1d625c571_ScopeChecker> _self_) {
	_1d55b946c_Stmt _189717_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189717_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d55ae550_UseExpr>>()) {
			_case_begin_1d882b984:;
			{
				jule::Ptr<_1d55ae550_UseExpr> _190021_ue = _189717_stmt._field_data.operator jule::Ptr<_1d55ae550_UseExpr>();;
				jule::Ptr<_1d62e16b0_Data> _190121_d = _1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _190021_ue.get()._field_expr);;
				if ((_190121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_190121_d));;
				jule::Ptr<_1d62d9aa4_RetTypeChecker> _190621_rtc = jule::new_ptr<_1d62d9aa4_RetTypeChecker>(_1d62d9aa4_RetTypeChecker{._field_sc=_self_, ._field_types=_1d567de7c_types(_self_.get()._field_result.ptr()), ._field_error_token=_190021_ue.get()._field_expr.get()._field_token, });;
				_1d62da995_check(_190621_rtc.ptr(), _190021_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55adbae_Expr>>()) {
			_case_begin_1d882b9ea:;
			{
				jule::Ptr<_1d55adbae_Expr> _191321_expr = _189717_stmt._field_data.operator jule::Ptr<_1d55adbae_Expr>();;
				jule::Ptr<_1d62e16b0_Data> _191421_d = _1d630d59a_eval_expr(_1d62857db_eval(_self_.get()._field_s, jule::Trait<_1d633797b_Lookup>(_self_, 0)), _191321_expr);;
				if ((_191421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>()) {
						_case_begin_1d8831769:;
						{
							jule::Ptr<_1d5677162_BuiltinErrorCallExprModel> _192025_m = _191421_d.get()._field_model.operator jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>();;
							_1d626305a_process_error_call(_self_, _192025_m,_191321_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_191421_d));;
						}
					}
					else {
						_case_begin_1d8831071:;
						{
							return;;
						}
					}
					_match_end_1d883101b:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b759c_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1d55be582_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1d55be939_ContSt>>() || _match_expr.type_is<jule::Ptr<_1d55bc904_RetSt>>()) {
			_case_begin_1d882b159:;
			{
				_1d626b64b_check_node(_self_, _189717_stmt._field_data);
			}
		}
		else {
			_case_begin_1d882b0e3:;
			{
				_1d626b64b_check_node(_self_, _189717_stmt._field_data);
				return;;
			}
		}
		_match_end_1d882ae6c:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1d626ba03_check_tree(jule::Ptr<_1d625c571_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194217_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194217_n)--;
	};
	for (; (_self_.get()._field_i < _194217_n); (_self_.get()._field_i)++) {
		{
			_1d55b946c_Stmt _195021_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1d626b64b_check_node(_self_, _195021_stmt._field_data);
			if (_1d62601ab_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1d883465c:;
	}
	_iter_end_1d883465c:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1d626b827_check_result(_self_);
	};
}



inline void _1d626bd22_check_goto(_1d625c571_ScopeChecker* _self_, jule::Ptr<_1d625b75c_ScopeGoto>& _196134_gt, jule::Ptr<_1d625b2d9_ScopeLabel>& _196155_label) {
	jule::Ptr<_1d625c571_ScopeChecker> _196217_gtsc = _196134_gt.get()._field_scope;;
	while (((_196217_gtsc.get()._field_child_index - 1LL) > _196155_label.get()._field_scope.get()._field_child_index)) {
		{
			_196217_gtsc=_196217_gtsc.get()._field_parent;
		}
	_iter_next_1d8837792:;
	}
	_iter_end_1d8837792:;;
	jule::I64 _196717_n = 0LL;;
	if ((_196217_gtsc.get()._field_scope == _196155_label.get()._field_scope.get()._field_scope)) {
		if ((_196134_gt.get()._field_pos > _196155_label.get()._field_pos)) {
			return;;
		};
		_196717_n=_196134_gt.get()._field_pos;
	};
	jule::I64 _198017_i = (_196155_label.get()._field_pos - 1LL);;
	if ((_196717_n == 0LL)) {
		{
			auto &expr = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1d8839d8d:;
			if (it != expr.end()) {
				jule::I64 _198317_j = it - expr.begin();
				jule::Any _198320_stmt = *it;
				{
					if (_1d6233437_stmt_is_goto_scope(_198320_stmt,_196217_gtsc.get()._field_scope)) {
						_196717_n=_198317_j;
						goto _iter_end_1d8839d8d;
					};
				}
				_iter_next_1d8839d8d:;
				++it;
				_198317_j++;
				goto _iter_begin_1d8839d8d;
			}
			_iter_end_1d8839d8d:;
		};
	};
	for (; (_198017_i >= _196717_n); (_198017_i)--) {
		{
			jule::Any _199321_stmt = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts[_198017_i];;
			if (_1d6255ab9_stmt_is_def(_199321_stmt)) {
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _196134_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_196134_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1d883995e:;
	}
	_iter_end_1d883995e:;;
}



inline void _1d626beed_check_gotos(_1d625c571_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1d883bca2:;
		if (it != expr.end()) {
			jule::Ptr<_1d625b75c_ScopeGoto> _200221_gt = *it;
			{
				jule::Ptr<_1d625b2d9_ScopeLabel> _200321_label = _1d6261322_find_label_all(&(*_self_), _200221_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_200321_label == nullptr)) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _200221_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200221_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1d883bca2;
				};
				_200321_label.get()._field_used=true;
				_1d626bd22_check_goto(&(*_self_), _200221_gt,_200321_label);
			}
			_iter_next_1d883bca2:;
			++it;
			goto _iter_begin_1d883bca2;
		}
		_iter_end_1d883bca2:;
	};
}



inline void _1d626c1c9_check_labels(_1d625c571_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1d883d07d:;
		if (it != expr.end()) {
			jule::Ptr<_1d625b2d9_ScopeLabel> _201516_l = *it;
			{
				if ((!(_201516_l.get()._field_used))) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _201516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201516_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1d883d07d:;
			++it;
			goto _iter_begin_1d883d07d;
		}
		_iter_end_1d883d07d:;
	};
}



inline void _1d626c3a5_check_vars(_1d625c571_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1d88407bc:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> _202316_v = *it;
			{
				if (((((!(_202316_v.get()._field_used)) && (!(_1ee53b5e5_is_ignore_ident(_202316_v.get()._field_ident)))) && (!(_1ee53b88c_is_anon_ident(_202316_v.get()._field_ident)))) && (_202316_v.get()._field_ident != jule::Str("self", 4)))) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _202316_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202316_v.get()._field_ident)}));
				};
			}
			_iter_next_1d88407bc:;
			++it;
			goto _iter_begin_1d88407bc;
		}
		_iter_end_1d88407bc:;
	};
}



inline void _1d626c581_check_aliases(_1d625c571_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1d884246c:;
		if (it != expr.end()) {
			jule::Ptr<_1d631b1e0_TypeAlias> _203116_a = *it;
			{
				if ((((!(_203116_a.get()._field_used)) && (!(_1ee53b5e5_is_ignore_ident(_203116_a.get()._field_ident)))) && (!(_1ee53b88c_is_anon_ident(_203116_a.get()._field_ident))))) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _203116_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_203116_a.get()._field_ident)}));
				};
			}
			_iter_next_1d884246c:;
			++it;
			goto _iter_begin_1d884246c;
		}
		_iter_end_1d884246c:;
	};
}



inline void _1d626c8a0_check(jule::Ptr<_1d625c571_ScopeChecker> _self_, jule::Ptr<_1d55b9a77_ScopeTree>& _203930_tree, jule::Ptr<_1d6255beb_Scope>& _203953_s) {
	_203953_s.get()._field_deferred=_203930_tree.get()._field_deferred;
	_203953_s.get()._field_unsafety=_203930_tree.get()._field_unsafety;
	jule::I64 _204313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203930_tree;
	_self_.get()._field_scope=_203953_s;
	_1d626ba03_check_tree(_self_);
	if ((_204313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1d626c3a5_check_vars(_self_.ptr());
		_1d626c581_check_aliases(_self_.ptr());
		if (_1d625ec6b_is_root(_self_.ptr())) {
			_1d626beed_check_gotos(_self_.ptr());
			_1d626c1c9_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1d625c571_ScopeChecker> _1d626cb14_new_child_checker(jule::Ptr<_1d625c571_ScopeChecker> _self_) {
	jule::Ptr<_1d625c571_ScopeChecker> _206317_base = _1d62306ed_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_206317_base.get()._field_parent=_self_;
	_206317_base.get()._field_labels=_self_.get()._field_labels;
	_206317_base.get()._field_gotos=_self_.get()._field_gotos;
	_206317_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _206317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1d625c571_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d626db04_check_cdef(_1d626d6b4_DirectiveChecker* _self_, jule::Ptr<_1d5575c86_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d567a7e7_Fn>>()) {
			_case_begin_1d8849d37:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1d567a7e7_Fn>().get()._field_cpp_linked) {
					goto _match_end_1d884a079;
				};
				goto _case_begin_1d884a0ce;
			}
		}
		else {
			_case_begin_1d884a0ce:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1d884a079:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d626dd79_check_typedef(_1d626d6b4_DirectiveChecker* _self_, jule::Ptr<_1d5575c86_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d884ce17:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1d5599dba_Struct>().get()._field_cpp_linked) {
					goto _match_end_1d884c7c9;
				};
				goto _case_begin_1d884c82e;
			}
		}
		else {
			_case_begin_1d884c82e:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1d884c7c9:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d626e0ee_check_derive(_1d626d6b4_DirectiveChecker* _self_, jule::Ptr<_1d5575c86_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d884ed2b:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1d5599dba_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1d885004b;
				};
				goto _case_begin_1d88500a1;
			}
		}
		else {
			_case_begin_1d88500a1:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d885004b:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1d8853a33:;
		}
		else {
			_case_begin_1d88501d3:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1d88535e3:;
	};
}



inline void _1d626e374_check_namespace(_1d626d6b4_DirectiveChecker* _self_, jule::Ptr<_1d5575c86_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d8854a9a:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1d5599dba_Struct>().get()._field_cpp_linked))) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567a7e7_Fn>>()) {
			_case_begin_1d8855040:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1d567a7e7_Fn>().get()._field_cpp_linked))) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d88550a6:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1d6298ea3_Var>().get()._field_cpp_linked))) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1d8854e0d:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1d8854da8:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ee538d51_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d885d642:;
			{
				if ((_1d63165b4_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1d5575c86_Directive> _11625_typedef = jule::new_ptr<_1d5575c86_Directive>(_1d5575c86_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1d5575c86_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1d885d0c0:;
	};
}



inline void _1d626e5e9_check_deprecated(_1d626d6b4_DirectiveChecker* _self_, jule::Ptr<_1d5575c86_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d8861128:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1d5599dba_Struct>().get()._field_cpp_linked) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567a7e7_Fn>>()) {
			_case_begin_1d886015a:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1d567a7e7_Fn>().get()._field_cpp_linked) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d88608ca:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1d6298ea3_Var>().get()._field_cpp_linked) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1d8860336:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1d88601e3:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ee538d51_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1d626e86e_check_test(_1d626d6b4_DirectiveChecker* _self_, jule::Ptr<_1d5575c86_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d567a7e7_Fn>>()) {
			_case_begin_1d88681c9:;
			{
				jule::Ptr<_1d567a7e7_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1d567a7e7_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1d567b496_is_init(_16717_f.ptr())))) && (!(_1d567b232_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1d8868be1;
				};
				if (_1d567aebd_is_method(_16717_f.ptr())) {
					_1d62801cb_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1d8868be1;
				};
				goto _case_begin_1d8868c46;
			}
		}
		else {
			_case_begin_1d8868c46:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1d8868be1:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1d62801cb_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d626eae4_check_directive(_1d626d6b4_DirectiveChecker* _self_, jule::Ptr<_1d5575c86_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1d886d553:;
			{
				_1d626db04_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1d886cc28:;
			{
				_1d626dd79_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1d886cc8e:;
			{
				_1d626e0ee_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1d886cd05:;
			{
				_1d626e374_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1d886cd6b:;
			{
				_1d626e5e9_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1d886d9b5:;
			{
				_1d626e86e_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1d886da2b:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1d886cbb2:;
			{
				_1d62801cb_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1d886cb07:;
	};
}



inline void _1d626ecc0_check(_1d626d6b4_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1d8871259:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _20821_d = *it;
			{
				_1d626eae4_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1d8871259:;
			++it;
			goto _iter_begin_1d8871259;
		}
		_iter_end_1d8871259:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d626d6b4_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d62748da_find_package(_1d62743bd_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d6274be8_select_package(_1d62743bd_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1d6298ea3_Var> _1d62750a0_find_var(_1d62743bd_ImportInfo* _self_, jule::Str _18131_ident, jule::Bool _18143_cpp_linked) {
	if ((!(_1d6276986_is_lookupable(&(*_self_), _18131_ident)))) {
		return nullptr;
	};
	return _1d6271e59_find_var_in_package((*_self_)._field_package.get()._field_files,_18131_ident,false);
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d6275457_find_type_alias(_1d62743bd_ImportInfo* _self_, jule::Str _19338_ident, jule::Bool _19350_cpp_linked) {
	if ((!(_1d6276986_is_lookupable(&(*_self_), _19338_ident)))) {
		return nullptr;
	};
	return _1d62723aa_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_19338_ident,false);
}



inline jule::Ptr<_1d5599dba_Struct> _1d627580e_find_struct(_1d62743bd_ImportInfo* _self_, jule::Str _20534_ident, jule::Bool _20546_cpp_linked) {
	if ((!(_1d6276986_is_lookupable(&(*_self_), _20534_ident)))) {
		return nullptr;
	};
	return _1d62727a6_find_struct_in_package((*_self_)._field_package.get()._field_files,_20534_ident,false);
}



inline jule::Ptr<_1d567a7e7_Fn> _1d6275bb6_find_fn(_1d62743bd_ImportInfo* _self_, jule::Str _21730_ident, jule::Bool _21742_cpp_linked) {
	if ((!(_1d6276986_is_lookupable(&(*_self_), _21730_ident)))) {
		return nullptr;
	};
	return _1d6272c18_find_fn_in_package((*_self_)._field_package.get()._field_files,_21730_ident,false);
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d6275ec4_find_trait(_1d62743bd_ImportInfo* _self_, jule::Str _22833_ident) {
	if ((!(_1d6276986_is_lookupable(&(*_self_), _22833_ident)))) {
		return nullptr;
	};
	return _1d6273026_find_trait_in_package((*_self_)._field_package.get()._field_files,_22833_ident);
}



inline jule::Ptr<_1d5692820_Enum> _1d62762d2_find_enum(_1d62743bd_ImportInfo* _self_, jule::Str _23932_ident) {
	if ((!(_1d6276986_is_lookupable(&(*_self_), _23932_ident)))) {
		return nullptr;
	};
	return _1d6273367_find_enum_in_package((*_self_)._field_package.get()._field_files,_23932_ident);
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d62765e0_find_type_enum(_1d62743bd_ImportInfo* _self_, jule::Str _25037_ident) {
	if ((!(_1d6276986_is_lookupable(&(*_self_), _25037_ident)))) {
		return nullptr;
	};
	return _1d62736ca_find_type_enum_in_package((*_self_)._field_package.get()._field_files,_25037_ident);
}



inline jule::Bool _1d6276986_is_lookupable(_1d62743bd_ImportInfo* _self_, jule::Str _25928_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1d6276c94_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1d6276c94_exist_ident(&(*_self_), _25928_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1d6276c94_exist_ident(_1d62743bd_ImportInfo* _self_, jule::Str _27926_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1d888624c:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_kind == _27926_ident)) {
					return true;
				};
			}
			_iter_next_1d888624c:;
			++it;
			goto _iter_begin_1d888624c;
		}
		_iter_end_1d888624c:;
	};
	return false;
}



inline jule::Bool _1d627702a_is_accessible_via_selection(_1d62743bd_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1d6276c94_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1d62743bd_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d6277800_find_package(_1d6277327_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d6277b0d_select_package(_1d6277327_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1d6298ea3_Var> _1d6277eb5_find_var(_1d6277327_Package* _self_, jule::Str _30931_ident, jule::Bool _30943_cpp_linked) {
	return _1d6271e59_find_var_in_package((*_self_)._field_files,_30931_ident,_30943_cpp_linked);
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d627836c_find_type_alias(_1d6277327_Package* _self_, jule::Str _31538_ident, jule::Bool _31550_cpp_linked) {
	return _1d62723aa_find_type_alias_in_package((*_self_)._field_files,_31538_ident,_31550_cpp_linked);
}



inline jule::Ptr<_1d5599dba_Struct> _1d6278724_find_struct(_1d6277327_Package* _self_, jule::Str _32134_ident, jule::Bool _32146_cpp_linked) {
	return _1d62727a6_find_struct_in_package((*_self_)._field_files,_32134_ident,_32146_cpp_linked);
}



inline jule::Ptr<_1d567a7e7_Fn> _1d6278acb_find_fn(_1d6277327_Package* _self_, jule::Str _32730_ident, jule::Bool _32742_cpp_linked) {
	return _1d6272c18_find_fn_in_package((*_self_)._field_files,_32730_ident,_32742_cpp_linked);
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d6278dd9_find_trait(_1d6277327_Package* _self_, jule::Str _33333_ident) {
	return _1d6273026_find_trait_in_package((*_self_)._field_files,_33333_ident);
}



inline jule::Ptr<_1d5692820_Enum> _1d62791e7_find_enum(_1d6277327_Package* _self_, jule::Str _33932_ident) {
	return _1d6273367_find_enum_in_package((*_self_)._field_files,_33932_ident);
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d6279505_find_type_enum(_1d6277327_Package* _self_, jule::Str _34537_ident) {
	return _1d62736ca_find_type_enum_in_package((*_self_)._field_files,_34537_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6277327_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d627ca36_find_package(_1d627c519_Sema* _self_, jule::Str _22035_ident) {
	return _1d62dbe6e_find_package((*_self_)._field_file.ptr(), _22035_ident);
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d627cd44_select_package(_1d627c519_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _23037_selector) {
	return _1d62dc27c_select_package((*_self_)._field_file.ptr(), _23037_selector);
}



inline jule::Ptr<_1d6298ea3_Var> _1d627d1eb_find_var(_1d627c519_Sema* _self_, jule::Str _24031_ident, jule::Bool _24043_cpp_linked) {
	jule::Ptr<_1d6298ea3_Var> _24217_v = _1d6271e59_find_var_in_package((*_self_)._field_files,_24031_ident,_24043_cpp_linked);;
	if ((_24217_v != nullptr)) {
		return _24217_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88a8d1e:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _24821_imp = *it;
			{
				if ((!(_1d627ae41_imp_is_lookupable(_24821_imp,_24031_ident)))) {
					goto _iter_next_1d88a8d1e;
				};
				_24217_v=_1d62750a0_find_var(_24821_imp.ptr(), _24031_ident,_24043_cpp_linked);
				if (((_24217_v != nullptr) && _1d62808a2_is_accessible_define(&(*_self_), _24217_v.get()._field_public,_24217_v.get()._field_token))) {
					return _24217_v;
				};
			}
			_iter_next_1d88a8d1e:;
			++it;
			goto _iter_begin_1d88a8d1e;
		}
		_iter_end_1d88a8d1e:;
	};
	return nullptr;
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d627d5a3_find_type_alias(_1d627c519_Sema* _self_, jule::Str _26738_ident, jule::Bool _26750_cpp_linked) {
	jule::Ptr<_1d631b1e0_TypeAlias> _26917_ta = _1d62723aa_find_type_alias_in_package((*_self_)._field_files,_26738_ident,_26750_cpp_linked);;
	if ((_26917_ta != nullptr)) {
		return _26917_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88ab827:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _27521_imp = *it;
			{
				if ((!(_1d627ae41_imp_is_lookupable(_27521_imp,_26738_ident)))) {
					goto _iter_next_1d88ab827;
				};
				_26917_ta=_1d6275457_find_type_alias(_27521_imp.ptr(), _26738_ident,_26750_cpp_linked);
				if (((_26917_ta != nullptr) && _1d62808a2_is_accessible_define(&(*_self_), _26917_ta.get()._field_public,_26917_ta.get()._field_token))) {
					return _26917_ta;
				};
			}
			_iter_next_1d88ab827:;
			++it;
			goto _iter_begin_1d88ab827;
		}
		_iter_end_1d88ab827:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5599dba_Struct> _1d627d95a_find_struct(_1d627c519_Sema* _self_, jule::Str _29434_ident, jule::Bool _29446_cpp_linked) {
	jule::Ptr<_1d5599dba_Struct> _29617_s = _1d62727a6_find_struct_in_package((*_self_)._field_files,_29434_ident,_29446_cpp_linked);;
	if ((_29617_s != nullptr)) {
		return _29617_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88ae30d:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _30221_imp = *it;
			{
				if ((!(_1d627ae41_imp_is_lookupable(_30221_imp,_29434_ident)))) {
					goto _iter_next_1d88ae30d;
				};
				_29617_s=_1d627580e_find_struct(_30221_imp.ptr(), _29434_ident,_29446_cpp_linked);
				if (((_29617_s != nullptr) && _1d62808a2_is_accessible_define(&(*_self_), _29617_s.get()._field_public,_29617_s.get()._field_token))) {
					return _29617_s;
				};
			}
			_iter_next_1d88ae30d:;
			++it;
			goto _iter_begin_1d88ae30d;
		}
		_iter_end_1d88ae30d:;
	};
	return nullptr;
}



inline jule::Ptr<_1d567a7e7_Fn> _1d627dd12_find_fn(_1d627c519_Sema* _self_, jule::Str _32130_ident, jule::Bool _32142_cpp_linked) {
	jule::Ptr<_1d567a7e7_Fn> _32317_f = _1d6272c18_find_fn_in_package((*_self_)._field_files,_32130_ident,_32142_cpp_linked);;
	if ((_32317_f != nullptr)) {
		return _32317_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88b1cd3:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _32921_imp = *it;
			{
				if ((!(_1d627ae41_imp_is_lookupable(_32921_imp,_32130_ident)))) {
					goto _iter_next_1d88b1cd3;
				};
				_32317_f=_1d6275bb6_find_fn(_32921_imp.ptr(), _32130_ident,_32142_cpp_linked);
				if (((_32317_f != nullptr) && _1d62808a2_is_accessible_define(&(*_self_), _32317_f.get()._field_public,_32317_f.get()._field_token))) {
					return _32317_f;
				};
			}
			_iter_next_1d88b1cd3:;
			++it;
			goto _iter_begin_1d88b1cd3;
		}
		_iter_end_1d88b1cd3:;
	};
	return nullptr;
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d627e120_find_trait(_1d627c519_Sema* _self_, jule::Str _34833_ident) {
	jule::Ptr<_1d59c3e1a_Trait> _35017_t = _1d6273026_find_trait_in_package((*_self_)._field_files,_34833_ident);;
	if ((_35017_t != nullptr)) {
		return _35017_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88b4456:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _35621_imp = *it;
			{
				if ((!(_1d627ae41_imp_is_lookupable(_35621_imp,_34833_ident)))) {
					goto _iter_next_1d88b4456;
				};
				_35017_t=_1d6275ec4_find_trait(_35621_imp.ptr(), _34833_ident);
				if (((_35017_t != nullptr) && _1d62808a2_is_accessible_define(&(*_self_), _35017_t.get()._field_public,_35017_t.get()._field_token))) {
					return _35017_t;
				};
			}
			_iter_next_1d88b4456:;
			++it;
			goto _iter_begin_1d88b4456;
		}
		_iter_end_1d88b4456:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5692820_Enum> _1d627e42d_find_enum(_1d627c519_Sema* _self_, jule::Str _37532_ident) {
	jule::Ptr<_1d5692820_Enum> _37717_e = _1d6273367_find_enum_in_package((*_self_)._field_files,_37532_ident);;
	if ((_37717_e != nullptr)) {
		return _37717_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88b6bb7:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _38321_imp = *it;
			{
				if ((!(_1d627ae41_imp_is_lookupable(_38321_imp,_37532_ident)))) {
					goto _iter_next_1d88b6bb7;
				};
				_37717_e=_1d62762d2_find_enum(_38321_imp.ptr(), _37532_ident);
				if (((_37717_e != nullptr) && _1d62808a2_is_accessible_define(&(*_self_), _37717_e.get()._field_public,_37717_e.get()._field_token))) {
					return _37717_e;
				};
			}
			_iter_next_1d88b6bb7:;
			++it;
			goto _iter_begin_1d88b6bb7;
		}
		_iter_end_1d88b6bb7:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d627e73b_find_type_enum(_1d627c519_Sema* _self_, jule::Str _40237_ident) {
	jule::Ptr<_1d5a788b5_TypeEnum> _40417_e = _1d62736ca_find_type_enum_in_package((*_self_)._field_files,_40237_ident);;
	if ((_40417_e != nullptr)) {
		return _40417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88b9428:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _41021_imp = *it;
			{
				if ((!(_1d627ae41_imp_is_lookupable(_41021_imp,_40237_ident)))) {
					goto _iter_next_1d88b9428;
				};
				_40417_e=_1d62765e0_find_type_enum(_41021_imp.ptr(), _40237_ident);
				if (((_40417_e != nullptr) && _1d62808a2_is_accessible_define(&(*_self_), _40417_e.get()._field_public,_40417_e.get()._field_token))) {
					return _40417_e;
				};
			}
			_iter_next_1d88b9428:;
			++it;
			goto _iter_begin_1d88b9428;
		}
		_iter_end_1d88b9428:;
	};
	return nullptr;
}



inline jule::Bool _1d627ea8d_is_flag(_1d627c519_Sema* _self_, jule::I64 _42622_flags) {
	return (((*_self_)._field_flags & _42622_flags) == _42622_flags);
}



inline void _1d627ed13_set_current_file(_1d627c519_Sema* _self_, jule::Ptr<_1d62db952_SymbolTable> _42839_f) {
	(*_self_)._field_file=_42839_f;
}



inline void _1d62801cb_push_err(_1d627c519_Sema* _self_, jule::Ptr<_1ee538d51_Token> _43027_token, jule::Str _43042_fmt, jule::Slice<jule::Any> _43055_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d627ab00_compiler_err(_43027_token,true,_43042_fmt,jule::Any(_43055_args)));;
}



inline void _1d62804ea_push_suggestion(_1d627c519_Sema* _self_, jule::Str _43534_fmt, jule::Slice<jule::Any> _43547_args) {
	{
		_1d627c085_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43534_fmt,jule::Any(_43547_args));
	};
}



inline jule::Bool _1d62808a2_is_accessible_define(_1d627c519_Sema* _self_, jule::Bool _44035_public, jule::Ptr<_1ee538d51_Token> _44049_token) {
	return ((_44035_public || (_44049_token.get()._field_file == nullptr)) || (_1ee53ead2_dir((*_self_)._field_file.get()._field_file.ptr()) == _1ee53ead2_dir(_44049_token.get()._field_file.ptr())));
}



inline jule::Bool _1d6280d03_is_duplicated_ident(_1d627c519_Sema* _self_, jule::Uintptr _44734_itself, jule::Str _44751_ident, jule::Bool _44763_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1d88c1100:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> &_44816_f = *it;
			{
				if (_1d62dee50_is_duplicated_ident(_44816_f.ptr(), _44734_itself,_44751_ident,_44763_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44816_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1d88c19b3:;
					if (it != expr.end()) {
						jule::Ptr<_1d62743bd_ImportInfo> &_45320_imp = *it;
						{
							{
								auto &expr = _45320_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1d88c2860:;
								if (it != expr.end()) {
									jule::Ptr<_1ee538d51_Token> &_45424_selected = *it;
									{
										if ((_45424_selected.get()._field_kind == _44751_ident)) {
											return true;
										};
									}
									_iter_next_1d88c2860:;
									++it;
									goto _iter_begin_1d88c2860;
								}
								_iter_end_1d88c2860:;
							};
						}
						_iter_next_1d88c19b3:;
						++it;
						goto _iter_begin_1d88c19b3;
					}
					_iter_end_1d88c19b3:;
				};
			}
			_iter_next_1d88c1100:;
			++it;
			goto _iter_begin_1d88c1100;
		}
		_iter_end_1d88c1100:;
	};
	return false;
}



inline void _1d6281122_check_directives(jule::Ptr<_1d627c519_Sema> _self_, jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _46441_d, jule::Any _46467_o) {
	_1d626d6b4_DirectiveChecker _46517_dc = _1d626d6b4_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1d5575c86_Directive>>>)((&(_46441_d)))), ._field_o=jule::Any(_46467_o)};;
	_1d626ecc0_check(&_46517_dc);
}



inline jule::Bool _1d6281573_check_generic_quantity(_1d627c519_Sema* _self_, jule::I64 _47341_required, jule::I64 _47356_given, jule::Ptr<_1ee538d51_Token> _47368_token) {
	jule::Bool _47385_ok = jule::Bool();
	{
		
		if (((_47341_required == 0LL) && (_47356_given > 0LL))) {
			_case_begin_1d88c55cc:;
			{
				_1d62801cb_push_err(&(*_self_), _47368_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if (((_47341_required > 0LL) && (_47356_given == 0LL))) {
			_case_begin_1d88c56a9:;
			{
				_1d62801cb_push_err(&(*_self_), _47368_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if ((_47341_required < _47356_given)) {
			_case_begin_1d88c5720:;
			{
				_1d62801cb_push_err(&(*_self_), _47368_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if ((_47341_required > _47356_given)) {
			_case_begin_1d88c5401:;
			{
				_1d62801cb_push_err(&(*_self_), _47368_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else {
			_case_begin_1d88c4e6c:;
			{
				_47385_ok = true;
				return _47385_ok;
			}
		}
		_match_end_1d88c4d90:;
	};
}



inline jule::Bool _1d628194c_is_duplicated_import_selection(_1d627c519_Sema* _self_, jule::Uintptr _49245_itself, jule::Str _49262_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88c8657:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> &_49316_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49316_imp) == _49245_itself)) {
					goto _iter_end_1d88c8657;
				};
				if (_1d6276c94_exist_ident(_49316_imp.ptr(), _49262_ident)) {
					return true;
				};
			}
			_iter_next_1d88c8657:;
			++it;
			goto _iter_begin_1d88c8657;
		}
		_iter_end_1d88c8657:;
	};
	return false;
}



inline jule::Any _1d6281d15_get_import_def(_1d627c519_Sema* _self_, jule::Str _50729_ident, jule::Ptr<_1d62743bd_ImportInfo>& _50746_imp) {
	if ((_1d639a604_find_package_builtin_def(_50746_imp.get()._field_link_path,_50729_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50746_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d88c9e83:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _51221_f = *it;
			{
				;
				jule::Any _51421_def = _1d62de9ee_def_by_ident(_51221_f.ptr(), _50729_ident,false);;
				if ((_51421_def != nullptr)) {
					return jule::Any(_51421_def);
				};
			}
			_iter_next_1d88c9e83:;
			++it;
			goto _iter_begin_1d88c9e83;
		}
		_iter_end_1d88c9e83:;
	};
	return nullptr;
}



inline jule::Bool _1d6282145_check_import_selections(_1d627c519_Sema* _self_, jule::Ptr<_1d62743bd_ImportInfo>& _52347_imp) {
	jule::Bool _52367_ok = jule::Bool();
	_52367_ok=true;
	{
		auto &expr = _52347_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1d88cc53a:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> _52516_ident = *it;
			{
				if ((_52516_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1d88cc53a;
				};
				if (_1d628194c_is_duplicated_import_selection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_52347_imp)),_52516_ident.get()._field_kind)) {
					_1d62801cb_push_err(&(*_self_), _52516_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
					_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_52367_ok=false;
					goto _iter_next_1d88cc53a;
				};
				jule::Any _53721_def = _1d6281d15_get_import_def(&(*_self_), _52516_ident.get()._field_kind,_52347_imp);;
				{
					auto &_match_expr{ _53721_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1d88ccccc:;
						{
							goto _iter_next_1d88cc53a;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
						_case_begin_1d88d0098:;
						{
							jule::Ptr<_1d6298ea3_Var> _54325_v = _53721_def.operator jule::Ptr<_1d6298ea3_Var>();;
							if (_1d62808a2_is_accessible_define(&(*_self_), _54325_v.get()._field_public,_54325_v.get()._field_token)) {
								goto _iter_next_1d88cc53a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d631b1e0_TypeAlias>>()) {
						_case_begin_1d88d010e:;
						{
							jule::Ptr<_1d631b1e0_TypeAlias> _54825_ta = _53721_def.operator jule::Ptr<_1d631b1e0_TypeAlias>();;
							if (_1d62808a2_is_accessible_define(&(*_self_), _54825_ta.get()._field_public,_54825_ta.get()._field_token)) {
								goto _iter_next_1d88cc53a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
						_case_begin_1d88d0c03:;
						{
							jule::Ptr<_1d5599dba_Struct> _55325_strct = _53721_def.operator jule::Ptr<_1d5599dba_Struct>();;
							if (_1d62808a2_is_accessible_define(&(*_self_), _55325_strct.get()._field_public,_55325_strct.get()._field_token)) {
								goto _iter_next_1d88cc53a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d59c3e1a_Trait>>()) {
						_case_begin_1d88d0c69:;
						{
							jule::Ptr<_1d59c3e1a_Trait> _55825_t = _53721_def.operator jule::Ptr<_1d59c3e1a_Trait>();;
							if (_1d62808a2_is_accessible_define(&(*_self_), _55825_t.get()._field_public,_55825_t.get()._field_token)) {
								goto _iter_next_1d88cc53a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d5692820_Enum>>()) {
						_case_begin_1d88d0cd0:;
						{
							jule::Ptr<_1d5692820_Enum> _56325_e = _53721_def.operator jule::Ptr<_1d5692820_Enum>();;
							if (_1d62808a2_is_accessible_define(&(*_self_), _56325_e.get()._field_public,_56325_e.get()._field_token)) {
								goto _iter_next_1d88cc53a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d5a788b5_TypeEnum>>()) {
						_case_begin_1d88d0d46:;
						{
							jule::Ptr<_1d5a788b5_TypeEnum> _56825_e = _53721_def.operator jule::Ptr<_1d5a788b5_TypeEnum>();;
							if (_1d62808a2_is_accessible_define(&(*_self_), _56825_e.get()._field_public,_56825_e.get()._field_token)) {
								goto _iter_next_1d88cc53a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d567a7e7_Fn>>()) {
						_case_begin_1d88d0dac:;
						{
							jule::Ptr<_1d567a7e7_Fn> _57325_f = _53721_def.operator jule::Ptr<_1d567a7e7_Fn>();;
							if (_1d62808a2_is_accessible_define(&(*_self_), _57325_f.get()._field_public,_57325_f.get()._field_token)) {
								goto _iter_next_1d88cc53a;
							};
						}
					}
					else {
						_case_begin_1d88ced45:;
						{
							_1d62801cb_push_err(&(*_self_), _52516_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
							_52367_ok=false;
							goto _iter_next_1d88cc53a;
						}
					}
					_match_end_1d88ce99e:;
				};
				_1d62801cb_push_err(&(*_self_), _52516_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
				_1d62804ea_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_52367_ok=false;
			}
			_iter_next_1d88cc53a:;
			++it;
			goto _iter_begin_1d88cc53a;
		}
		_iter_end_1d88cc53a:;
	};
	return _52367_ok;
}



inline jule::Bool _1d6282486_is_use_alias_duplication(_1d627c519_Sema* _self_, jule::Ptr<_1d62743bd_ImportInfo>& _59044_imp) {
	if ((_59044_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d88d8a74:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _59521_imp2 = *it;
			{
				if ((_59521_imp2 == _59044_imp)) {
					goto _iter_end_1d88d8a74;
				};
				if ((_59521_imp2.get()._field_alias == _59044_imp.get()._field_alias)) {
					return true;
				};
				if (((_59521_imp2.get()._field_ident == _59521_imp2.get()._field_link_path) && (_59521_imp2.get()._field_ident == _59044_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1d88d8a74:;
			++it;
			goto _iter_begin_1d88d8a74;
		}
		_iter_end_1d88d8a74:;
	};
	return false;
}



inline jule::Bool _1d62827a5_check_import(_1d627c519_Sema* _self_, jule::Ptr<_1d62743bd_ImportInfo>& _61136_imp) {
	if ((_61136_imp.get()._field_cpp_linked || (_61136_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1d6282486_is_use_alias_duplication(&(*_self_), _61136_imp)) {
		_1d62801cb_push_err(&(*_self_), _61136_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_61136_imp.get()._field_alias)}));
		_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_61136_imp.get()._field_duplicate))) {
		jule::Ptr<_1d627c519_Sema> _62221_sema = jule::new_ptr<_1d627c519_Sema>(_1d627c519_Sema{._field_flags=(*_self_)._field_flags});;
		_1d6295ec2_check(_62221_sema, _61136_imp.get()._field_package.get()._field_files);
		if ((_62221_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_62221_sema.get()._field_errors);
			_62221_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1d6282145_check_import_selections(&(*_self_), _61136_imp);
}



inline void _1d6282981_check_imports(_1d627c519_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1d88dc704:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _63621_file = *it;
			{
				_1d627ed13_set_current_file(&(*_self_), _63621_file);
				{
					auto &expr = _63621_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1d88e0482:;
					if (it != expr.end()) {
						jule::Ptr<_1d62743bd_ImportInfo> _63925_imp = *it;
						{
							jule::Bool _64021_ok = _1d62827a5_check_import(&(*_self_), _63925_imp);;
							if ((!(_64021_ok))) {
								_1d62801cb_push_err(&(*_self_), _63925_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63925_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1d88e0482:;
						++it;
						goto _iter_begin_1d88e0482;
					}
					_iter_end_1d88e0482:;
				};
			}
			_iter_next_1d88dc704:;
			++it;
			goto _iter_begin_1d88dc704;
		}
		_iter_end_1d88dc704:;
	};
}



inline void _1d6282b5c_impl_file_impls(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1d88e0aae:;
		if (it != expr.end()) {
			jule::Ptr<_1d62470d8_Impl> _65221_imp = *it;
			{
				_1d628d074_impl_impl(_self_, _65221_imp);
			}
			_iter_next_1d88e0aae:;
			++it;
			goto _iter_begin_1d88e0aae;
		}
		_iter_end_1d88e0aae:;
	};
}



inline void _1d6282d38_impl_impls(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d88e2341:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _65821_file = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _65821_file);
				_1d6282b5c_impl_file_impls(_self_);
			}
			_iter_next_1d88e2341:;
			++it;
			goto _iter_begin_1d88e2341;
		}
		_iter_end_1d88e2341:;
	};
}



inline void _1d6283014_check_enums(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d88e38c5:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _66521_file = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _66521_file);
				_1d628a55a_check_enum_decls(_self_);
			}
			_iter_next_1d88e38c5:;
			++it;
			goto _iter_begin_1d88e38c5;
		}
		_iter_end_1d88e38c5:;
	};
}



inline jule::Ptr<_1d631bdd3_TypeKind> _1d628350e_build_type_with_refers(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55a968d_TypeDecl>& _67247_t, jule::Trait<_1d633797b_Lookup> _67270_l, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _67313_generics, jule::Ptr<_1d63295e9_Referencer> _67341_referencer) {
	_1d632a342_TypeChecker _67417_tc = _1d632a342_TypeChecker{._field_s=_self_, ._field_lookup=_67270_l, ._field_referencer=_67341_referencer, ._field_use_generics=_67313_generics, };;
	{
		auto &_match_expr{ _67270_l };
		
		if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d88e5597:;
			{
				jule::Ptr<_1d625c571_ScopeChecker> _68221_hard = _1d62608e8_get_hard_root(_67270_l.operator jule::Ptr<_1d625c571_ScopeChecker>());;
				_67417_tc._field_refers=_68221_hard.get()._field_owner.get()._field_refers;
			}
		}
		_match_end_1d88e5300:;
	};
	if (((_67341_referencer != nullptr) && (_67341_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _67341_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1d631b1e0_TypeAlias>>()) {
				_case_begin_1d88e5a4d:;
				{
					_67417_tc._field_owner_alias=_67341_referencer.get()._field_owner.operator jule::Ptr<_1d631b1e0_TypeAlias>();
				}
			}
			_match_end_1d88e59e8:;
		};
	};
	return _1d63325ad_check_decl(&_67417_tc, _67247_t);
}



inline jule::Bool _1d6283a09_check_type_with_refers(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d632103b_TypeSymbol>& _69947_t, jule::Trait<_1d633797b_Lookup> _69967_l, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _70013_generics, jule::Ptr<_1d63295e9_Referencer> _70041_referencer) {
	jule::Bool _70068_ok = jule::Bool();
	if (_1d63213e3_checked(_69947_t.ptr())) {
		_70068_ok = true;
		return _70068_ok;
	};
	_69947_t.get()._field_kind=_1d628350e_build_type_with_refers(_self_, _69947_t.get()._field_decl,_69967_l,_70013_generics,_70041_referencer);
	_70068_ok = _1d63213e3_checked(_69947_t.ptr());
	return _70068_ok;
}



inline jule::Ptr<_1d61c75c9_ConstraintChecker> _1d6283c6d_constraint_checker(jule::Ptr<_1d627c519_Sema> _self_) {
	return jule::new_ptr<_1d61c75c9_ConstraintChecker>(_1d61c75c9_ConstraintChecker{._field_s=_self_, });
}



inline jule::Bool _1d6284125_check_type(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d632103b_TypeSymbol>& _71435_t, jule::Trait<_1d633797b_Lookup> _71455_l) {
	return _1d6283a09_check_type_with_refers(_self_, _71435_t,_71455_l,nullptr,nullptr);
}



inline jule::Ptr<_1d631bdd3_TypeKind> _1d6284598_build_type_with_generics(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55a968d_TypeDecl>& _72049_t, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _72113_generics, jule::Ptr<_1d5680c5e_ReferenceStack> _72141_refers) {
	jule::Ptr<_1d632a342_TypeChecker> _72217_tc = jule::new_ptr<_1d632a342_TypeChecker>(_1d632a342_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1d633797b_Lookup>(_self_, 3), ._field_refers=_72141_refers, ._field_use_generics=_72113_generics, });;
	return _1d63325ad_check_decl(_72217_tc.ptr(), _72049_t);
}



inline jule::Ptr<_1d631bdd3_TypeKind> _1d62848b7_build_type(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55a968d_TypeDecl>& _73235_t) {
	return _1d6284598_build_type_with_generics(_self_, _73235_t,nullptr,nullptr);
}



inline jule::Ptr<_1d631bdd3_TypeKind> _1d6284bc5_select_type(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55a968d_TypeDecl>& _73736_t) {
	jule::Ptr<_1d632a342_TypeChecker> _73817_tc = jule::new_ptr<_1d632a342_TypeChecker>(_1d632a342_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1d633797b_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1d63325ad_check_decl(_73817_tc.ptr(), _73736_t);
}



inline jule::Ptr<_1d62e322d_Eval> _1d6285126_evalpd(jule::Ptr<_1d627c519_Sema> _self_, jule::Trait<_1d633797b_Lookup> _74830_l, jule::Ptr<_1d631bdd3_TypeKind> _74845_p, jule::Ptr<_1d6298ea3_Var> _74863_owner) {
	jule::Ptr<_1d62e322d_Eval> _74917_e = jule::new_ptr<_1d62e322d_Eval>(_1d62e322d_Eval{._field_s=_self_, ._field_lookup=_74830_l, ._field_owner=_74863_owner, });;
	{
		auto &_match_expr{ _74830_l };
		
		if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d88ee24e:;
			{
				_74917_e.get()._field_unsafety=_1d625ea07_is_unsafe(_74830_l.operator jule::Ptr<_1d625c571_ScopeChecker>());
			}
		}
		_match_end_1d88ee1d8:;
	};
	_74917_e.get()._field_prefix=_74845_p;
	return _74917_e;
}



inline jule::Ptr<_1d62e322d_Eval> _1d62854cd_evalp(jule::Ptr<_1d627c519_Sema> _self_, jule::Trait<_1d633797b_Lookup> _76629_l, jule::Ptr<_1d631bdd3_TypeKind> _76644_p) {
	return _1d6285126_evalpd(_self_, _76629_l,_76644_p,nullptr);
}



inline jule::Ptr<_1d62e322d_Eval> _1d62857db_eval(jule::Ptr<_1d627c519_Sema> _self_, jule::Trait<_1d633797b_Lookup> _77128_l) {
	return _1d62854cd_evalp(_self_, _77128_l,nullptr);
}



inline jule::Bool _1d6285cd6_check_assign_type(jule::Ptr<_1d627c519_Sema> _self_, jule::Bool _77537_dest_is_ref, jule::Ptr<_1d631bdd3_TypeKind>& _77561_dest, jule::Ptr<_1d62e16b0_Data>& _77614_d, jule::Ptr<_1ee538d51_Token> _77628_error_token) {
	if (_77614_d.get()._field_decl) {
		_1d62801cb_push_err(_self_.ptr(), _77628_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77537_dest_is_ref) {
		if ((!(_1d631c5dc_equals(_77561_dest, _77614_d.get()._field_kind)))) {
			_1d62801cb_push_err(_self_.ptr(), _77628_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_77561_dest.ptr())),jule::Any(_1d631c2ce_to_str(_77614_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1d62cc16d_AssignTypeChecker> _78721_atc = jule::new_ptr<_1d62cc16d_AssignTypeChecker>(_1d62cc16d_AssignTypeChecker{._field_s=_self_, ._field_dest=_77561_dest, ._field_d=_77614_d, ._field_error_token=_77628_error_token});;
		jule::Bool _79317_ok = _1d62cd2e5_check(_78721_atc.ptr());;
		if ((!(_79317_ok))) {
			return false;
		};
	};
	if (((!(_1d62e2073_is_const(_77614_d.ptr()))) || (_1d631dee5_prim(_77561_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _80317_kind = _1d631dee5_prim(_77561_dest.ptr()).get()._field_kind;;
	{
		
		if (_1d6254656_is_sig_int(_80317_kind)) {
			_case_begin_1d8905b5c:;
			{
				_1d566c454_set_i64(_77614_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64(_77614_d.get()._field_constant.ptr())));
			}
		}
		else if (_1d6254942_is_unsig_int(_80317_kind)) {
			_case_begin_1d8905bd4:;
			{
				_1d566c6c9_set_u64(_77614_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64(_77614_d.get()._field_constant.ptr())));
			}
		}
		else if (_1d6255008_is_float(_80317_kind)) {
			_case_begin_1d8905c5b:;
			{
				_1d566ce49_set_f64(_77614_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1d566c1ce_as_f64(_77614_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1d8905a91:;
	};
	return true;
}



inline jule::Bool _1d6286259_check_type_compatibility(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d631bdd3_TypeKind>& _81749_dest, jule::Ptr<_1d631bdd3_TypeKind>& _81814_src, jule::Ptr<_1ee538d51_Token>& _81835_error_token) {
	if ((_81814_src == nullptr)) {
		_1d62801cb_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_81749_dest.ptr())),jule::Any(_1d631c2ce_to_str(_81814_src.ptr()))}));
		return false;
	};
	if ((_1d6320b84_tup(_81814_src.ptr()) != nullptr)) {
		_1d62801cb_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_81749_dest.ptr())),jule::Any(_1d631c2ce_to_str(_81814_src.ptr()))}));
		return false;
	};
	_1d62ca545_TypeCompatibilityChecker _83217_tcc = _1d62ca545_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_81749_dest, ._field_src=_81814_src, ._field_error_token=_81835_error_token};;
	if (_1d62cbb2e_check(&_83217_tcc)) {
		return true;
	};
	_1d62801cb_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_81749_dest.ptr())),jule::Any(_1d631c2ce_to_str(_81814_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1d631bdd3_TypeKind> _1d6286644_build_non_generic_type_kind(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55a968d_TypeDecl>& _85352_ast, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>& _85414_generics) {
	jule::Ptr<_1d632a342_TypeChecker> _85517_tc = jule::new_ptr<_1d632a342_TypeChecker>(_1d632a342_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1d633797b_Lookup>(_self_, 3), ._field_ignore_generics=_85414_generics, });;
	return _1d63325ad_check_decl(_85517_tc.ptr(), _85352_ast);
}



inline void _1d62868ec_build_fn_non_generic_type_kinds(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567d498_FnIns>& _86356_f) {
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _86417_generics = nullptr;;
	if (_1d567aebd_is_method(_86356_f.get()._field_decl.ptr())) {
		_86417_generics=jule::append(_86356_f.get()._field_decl.get()._field_generics,_86356_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_86417_generics=_86356_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _86356_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d890e57d:;
		if (it != expr.end()) {
			jule::Ptr<_1d567c5c9_ParamIns> _87121_p = *it;
			{
				if ((!(_1d56795d7_is_self(_87121_p.get()._field_decl.ptr())))) {
					_87121_p.get()._field_kind=_1d6286644_build_non_generic_type_kind(_self_, _87121_p.get()._field_decl.get()._field_kind.get()._field_decl,_86417_generics);
				};
			}
			_iter_next_1d890e57d:;
			++it;
			goto _iter_begin_1d890e57d;
		}
		_iter_end_1d890e57d:;
	};
	if ((!(_1d567ac59_is_void(_86356_f.get()._field_decl.ptr())))) {
		_86356_f.get()._field_result=_1d6286644_build_non_generic_type_kind(_self_, _86356_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86417_generics);
	};
}



inline jule::Ptr<_1d567d498_FnIns> _1d6286c3d_get_trait_check_fn_kind(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567a7e7_Fn>& _88148_f) {
	if ((_88148_f.get()._field_instances.len() == 1LL)) {
		return _88148_f.get()._field_instances[0LL];
	};
	jule::Ptr<_1d567d498_FnIns> _88517_ins = _1d567bbd3_instance_force(_88148_f);;
	jule::Ptr<_1d632a342_TypeChecker> _88717_tc = jule::new_ptr<_1d632a342_TypeChecker>(_1d632a342_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1d633797b_Lookup>(_self_, 3), });;
	{
		auto &expr = _88517_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d8913164:;
		if (it != expr.end()) {
			jule::Ptr<_1d567c5c9_ParamIns> _89121_p = *it;
			{
				if ((!(_1d56795d7_is_self(_89121_p.get()._field_decl.ptr())))) {
					_89121_p.get()._field_kind=_1d63325ad_check_decl(_88717_tc.ptr(), _89121_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_1d8913164:;
			++it;
			goto _iter_begin_1d8913164;
		}
		_iter_end_1d8913164:;
	};
	if ((!(_1d567ac59_is_void(_88148_f.ptr())))) {
		_88517_ins.get()._field_result=_1d63325ad_check_decl(_88717_tc.ptr(), _88148_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _88517_ins;
}



inline jule::Bool _1d62871a0_check_constraints_fn(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567d498_FnIns>& _90345_f, jule::Ptr<_1ee538d51_Token>& _90361_et, jule::Ptr<_1d567d498_FnIns> _90377_exist) {
	jule::Ptr<_1d61c75c9_ConstraintChecker> _90417_cc = _1d6283c6d_constraint_checker(_self_);;
	_90417_cc.get()._field_et=_90361_et;
	_90417_cc.get()._field_fi=_90345_f;
	if ((_90377_exist != nullptr)) {
		{
			auto &expr = _90377_exist.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1d89164a8:;
			if (it != expr.end()) {
				jule::I64 _90818_i = it - expr.begin();
				jule::Ptr<_1d631a6a6_InsGeneric> _90825_g = *it;
				{
					_90345_f.get()._field_generics[_90818_i].get()._field_constraint=_90825_g.get()._field_constraint;
				}
				_iter_next_1d89164a8:;
				++it;
				_90818_i++;
				goto _iter_begin_1d89164a8;
			}
			_iter_end_1d89164a8:;
		};
	} else {
		_90417_cc.get()._field_uniq=true;
	};
	return _1d62233e4_check(_90417_cc);
}



inline jule::Bool _1d6287623_check_constraints_struct(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns>& _91749_s, jule::Ptr<_1ee538d51_Token>& _91769_et, jule::Ptr<_1d55c62d1_StructIns> _91785_exist) {
	jule::Ptr<_1d61c75c9_ConstraintChecker> _91817_cc = _1d6283c6d_constraint_checker(_self_);;
	_91817_cc.get()._field_et=_91769_et;
	_91817_cc.get()._field_si=_91749_s;
	if ((_91785_exist != nullptr)) {
		{
			auto &expr = _91785_exist.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1d89190b0:;
			if (it != expr.end()) {
				jule::I64 _92218_i = it - expr.begin();
				jule::Ptr<_1d631a6a6_InsGeneric> _92225_g = *it;
				{
					_91749_s.get()._field_generics[_92218_i].get()._field_constraint=_92225_g.get()._field_constraint;
				}
				_iter_next_1d89190b0:;
				++it;
				_92218_i++;
				goto _iter_begin_1d89190b0;
			}
			_iter_end_1d89190b0:;
		};
	} else {
		_91817_cc.get()._field_uniq=true;
	};
	return _1d62233e4_check(_91817_cc);
}



inline jule::Bool _1d62879db_fn_environment(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567d498_FnIns>& _93439_f, jule::Fn<jule::Bool(jule::Ptr<_1d627c519_Sema>&,jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>&)> _93450_algo) {
	jule::Ptr<_1d627c519_Sema> _93517_sema = _93439_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1d62db952_SymbolTable> _93617_old = _93439_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1d627ed13_set_current_file(_93439_f.get()._field_decl.get()._field_sema.ptr(), _93617_old);
	});;
	jule::Ptr<_1d62db952_SymbolTable> _93817_file = _1d627bb23_find_file(_93439_f.get()._field_decl.get()._field_sema.get()._field_files,_93439_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_93817_file != nullptr)) {
		_1d627ed13_set_current_file(_93439_f.get()._field_decl.get()._field_sema.ptr(), _93817_file);
	};
	jule::I64 _94317_size = _93439_f.get()._field_generics.len();;
	if (((_93439_f.get()._field_decl != nullptr) && (_93439_f.get()._field_decl.get()._field_owner != nullptr))) {
		_94317_size+=_93439_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _94817_generics = jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>::alloc(0LL,_94317_size);;
	_1d627b7c1_append_generic_type_aliases(_94817_generics,_93439_f);
	jule::Bool _95113_ok = _93450_algo(_93517_sema,_94817_generics);;
	if ((_93517_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_93517_sema.get()._field_errors);
		_93517_sema.get()._field_errors=nullptr;
	};
	return _95113_ok;
}



inline jule::Bool _1d6287ce9_reload_fn_ins_types(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567d498_FnIns> _96143_f) {
	if ((_1d567e1e1_is_builtin(_96143_f.ptr()) || _1d567e455_is_anon(_96143_f.ptr()))) {
		return true;
	};
	return _1d62879db_fn_environment(_self_, _96143_f,jule::Fn<jule::Bool(jule::Ptr<_1d627c519_Sema>&,jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>&)>([=](jule::Ptr<_1d627c519_Sema>& _96544_sema, jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>& _96562_generics) mutable -> jule::Bool {
		jule::Bool _96621_ok = true;;
		{
			auto &expr = _96143_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1d8923a59:;
			if (it != expr.end()) {
				jule::Ptr<_1d567c5c9_ParamIns> _96725_p = *it;
				{
					if (_1d56795d7_is_self(_96725_p.get()._field_decl.ptr())) {
						if (_1d567984b_is_ref(_96725_p.get()._field_decl.ptr())) {
							_96725_p.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d632513e_Sptr>(_1d632513e_Sptr{._field_elem=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_96143_f.get()._field_owner, 0)})}), 7)});
						} else {
							_96725_p.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_96143_f.get()._field_owner, 0)});
						};
					} else {
						_96725_p.get()._field_kind=_1d6284598_build_type_with_generics(_96544_sema, _96725_p.get()._field_decl.get()._field_kind.get()._field_decl,_96562_generics,_96143_f.get()._field_refers);
						if ((_96725_p.get()._field_kind != nullptr)) {
							_96725_p.get()._field_kind.get()._field_variadic=_96725_p.get()._field_decl.get()._field_variadic;
							if ((_96725_p.get()._field_decl.get()._field_reference && (!(_1d63343c3_is_valid_for_ref(_96725_p.get()._field_kind))))) {
								_1d62801cb_push_err(_self_.ptr(), _96725_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_96725_p.get()._field_kind.ptr()))}));
							};
						} else {
							_96621_ok=false;
						};
					};
				}
				_iter_next_1d8923a59:;
				++it;
				goto _iter_begin_1d8923a59;
			}
			_iter_end_1d8923a59:;
		};
		if ((!(_1d567ac59_is_void(_96143_f.get()._field_decl.ptr())))) {
			_96143_f.get()._field_result=_1d6284598_build_type_with_generics(_96544_sema, _96143_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_96562_generics,_96143_f.get()._field_refers);
			_96621_ok=((_96143_f.get()._field_result != nullptr) && _96621_ok);
		};
		return _96621_ok;
	}));
}



inline jule::Bool _1d628827d_check_ref_validity_for_init_expr(jule::Ptr<_1d627c519_Sema> _self_, jule::Bool _100052_left_mut, jule::Ptr<_1d62e16b0_Data>& _100073_d, jule::Ptr<_1ee538d51_Token>& _100088_error_token) {
	{
		auto &_match_expr{ _100073_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d89299b6:;
			{
				goto _match_end_1d89296db;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674d74_TraitSubIdentExprModel>>()) {
			_case_begin_1d8929a2c:;
			{
				jule::Ptr<_1d5674d74_TraitSubIdentExprModel> _100521_model = _100073_d.get()._field_model.operator jule::Ptr<_1d5674d74_TraitSubIdentExprModel>();;
				if ((!(_1d627a65a_is_valid_model_for_ref(_100521_model.get()._field_expr)))) {
					_1d62801cb_push_err(_self_.ptr(), _100088_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100521_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
			_case_begin_1d8929a93:;
			{
				jule::Ptr<_1d5675292_StructSubIdentExprModel> _101121_model = _100073_d.get()._field_model.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>();;
				if ((!(_1d627a65a_is_valid_model_for_ref(_101121_model.get()._field_expr.get()._field_model)))) {
					_1d62801cb_push_err(_self_.ptr(), _100088_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_101121_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675858_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1d5675a45_CommonSubIdentExprModel>>()) {
			_case_begin_1d892a247:;
			{
				_1d62801cb_push_err(_self_.ptr(), _100088_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567356a_UnaryExprModel>>()) {
			_case_begin_1d892a2ad:;
			{
				jule::Ptr<_1d567356a_UnaryExprModel> _102121_unary = _100073_d.get()._field_model.operator jule::Ptr<_1d567356a_UnaryExprModel>();;
				if ((_102121_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1d627a65a_is_valid_model_for_ref(_100073_d.get()._field_model)))) {
						_1d62801cb_push_err(_self_.ptr(), _100088_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1d89296db;
				};
				goto _case_begin_1d8929884;
			}
		}
		else {
			_case_begin_1d8929884:;
			{
				_1d62801cb_push_err(_self_.ptr(), _100088_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1d89296db:;
	};
	if ((_100052_left_mut && (!(_100073_d.get()._field_mutable)))) {
		_1d62801cb_push_err(_self_.ptr(), _100088_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1d6288877_check_validity_for_init_expr(jule::Ptr<_1d627c519_Sema> _self_, jule::Bool _104248_left_mut, jule::Bool _104264_left_ref, jule::Ptr<_1d631bdd3_TypeKind>& _104310_left_kind, jule::Ptr<_1d62e16b0_Data>& _104337_d, jule::Ptr<_1ee538d51_Token>& _104352_error_token) {
	if (((_104248_left_mut && (!(_104337_d.get()._field_mutable))) && _1d631d2d0_mutable(_104337_d.get()._field_kind.ptr()))) {
		_1d62801cb_push_err(_self_.ptr(), _104352_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_104337_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_104264_left_ref) {
		if ((!(_1d628827d_check_ref_validity_for_init_expr(_self_, _104248_left_mut,_104337_d,_104352_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1d62cc16d_AssignTypeChecker> _105417_atc = jule::new_ptr<_1d62cc16d_AssignTypeChecker>(_1d62cc16d_AssignTypeChecker{._field_s=_self_, ._field_d=_104337_d, ._field_error_token=_104352_error_token});;
	return _1d62cc844_check_validity(_105417_atc.ptr());
}



inline jule::Bool _1d6288c2e_check_type_alias_decl_kind(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d631b1e0_TypeAlias>& _106251_ta, jule::Trait<_1d633797b_Lookup> _106271_l) {
	jule::Bool _106284_ok = jule::Bool();
	jule::Ptr<_1d62db952_SymbolTable> _106317_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1d627ed13_set_current_file(_self_.ptr(), _106317_old);
	});;
	if ((_106251_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1d62db952_SymbolTable> _106821_file = _1d627bb23_find_file(_self_.get()._field_files,_106251_ta.get()._field_token.get()._field_file);;
		if ((_106821_file != nullptr)) {
			_1d627ed13_set_current_file(_self_.ptr(), _106821_file);
		};
	};
	_106284_ok=_1d6283a09_check_type_with_refers(_self_, _106251_ta.get()._field_kind,_106271_l,nullptr,jule::new_ptr<_1d63295e9_Referencer>(_1d63295e9_Referencer{._field_ident=_106251_ta.get()._field_ident, ._field_owner=jule::Any(_106251_ta), ._field_refs=(&(_106251_ta.get()._field_refers))}));
	if (((_106284_ok && (_1d631ec0a_arr(_106251_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1d631ec0a_arr(_106251_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1d62801cb_push_err(_self_.ptr(), _106251_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_106284_ok=false;
	};
	return _106284_ok;
}



inline void _1d628905e_check_type_alias_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d631b1e0_TypeAlias>& _108546_ta, jule::Trait<_1d633797b_Lookup> _108566_l) {
	if (_1ee53b5e5_is_ignore_ident(_108546_ta.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _108546_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1d6288c2e_check_type_alias_decl_kind(_self_, _108546_ta,_108566_l);
}



inline void _1d6289306_check_type_alias_decl_dup(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d631b1e0_TypeAlias>& _109350_ta) {
	if (_1ee53b5e5_is_ignore_ident(_109350_ta.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _109350_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1d6280d03_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_109350_ta)),_109350_ta.get()._field_ident,_109350_ta.get()._field_cpp_linked)) {
		_1d62801cb_push_err(_self_.ptr(), _109350_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_109350_ta.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1d6288c2e_check_type_alias_decl_kind(_self_, _109350_ta,jule::Trait<_1d633797b_Lookup>(_self_, 3));
}



inline jule::Bool _1d628957b_check_type_alias_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	jule::Bool _110544_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1d8942539:;
		if (it != expr.end()) {
			jule::Ptr<_1d631b1e0_TypeAlias> _110621_ta = *it;
			{
				_1d6289306_check_type_alias_decl_dup(_self_, _110621_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_110544_ok = false;
					return _110544_ok;
				};
			}
			_iter_next_1d8942539:;
			++it;
			goto _iter_begin_1d8942539;
		}
		_iter_end_1d8942539:;
	};
	_110544_ok = true;
	return _110544_ok;
}



inline void _1d895398a_check_enum_items_dup(_1d627c519_Sema* _self_, jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>> _111742_items) {
	{
		auto &expr = _111742_items;
		auto it = expr.begin();
		_iter_begin_1d8954d98:;
		if (it != expr.end()) {
			jule::Ptr<_1d581b2c3_EnumItem> &_111816_item = *it;
			{
				if (_111816_item.get()._field_ident.empty()) {
					goto _iter_next_1d8954d98;
				} else if (_1ee53b5e5_is_ignore_ident(_111816_item.get()._field_ident)) {
					_1d62801cb_push_err(&(*_self_), _111816_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _111742_items;
						auto it = expr.begin();
						_iter_begin_1d8955abe:;
						if (it != expr.end()) {
							jule::Ptr<_1d581b2c3_EnumItem> &_112424_citem = *it;
							{
								if ((_111816_item == _112424_citem)) {
									goto _iter_end_1d8955abe;
								} else if ((_111816_item.get()._field_ident == _112424_citem.get()._field_ident)) {
									_1d62801cb_push_err(&(*_self_), _111816_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_111816_item.get()._field_ident)}));
									_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1d8955abe;
								};
							}
							_iter_next_1d8955abe:;
							++it;
							goto _iter_begin_1d8955abe;
						}
						_iter_end_1d8955abe:;
					};
				};
			}
			_iter_next_1d8954d98:;
			++it;
			goto _iter_begin_1d8954d98;
		}
		_iter_end_1d8954d98:;
	};
}

inline void _1d895e369_check_enum_items_dup(_1d627c519_Sema* _self_, jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>> _111742_items) {
	{
		auto &expr = _111742_items;
		auto it = expr.begin();
		_iter_begin_1d8960733:;
		if (it != expr.end()) {
			jule::Ptr<_1d580d749_TypeEnumItem> &_111816_item = *it;
			{
				if (_111816_item.get()._field_ident.empty()) {
					goto _iter_next_1d8960733;
				} else if (_1ee53b5e5_is_ignore_ident(_111816_item.get()._field_ident)) {
					_1d62801cb_push_err(&(*_self_), _111816_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _111742_items;
						auto it = expr.begin();
						_iter_begin_1d8961459:;
						if (it != expr.end()) {
							jule::Ptr<_1d580d749_TypeEnumItem> &_112424_citem = *it;
							{
								if ((_111816_item == _112424_citem)) {
									goto _iter_end_1d8961459;
								} else if ((_111816_item.get()._field_ident == _112424_citem.get()._field_ident)) {
									_1d62801cb_push_err(&(*_self_), _111816_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_111816_item.get()._field_ident)}));
									_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1d8961459;
								};
							}
							_iter_next_1d8961459:;
							++it;
							goto _iter_begin_1d8961459;
						}
						_iter_end_1d8961459:;
					};
				};
			}
			_iter_next_1d8960733:;
			++it;
			goto _iter_begin_1d8960733;
		}
		_iter_end_1d8960733:;
	};
}



inline void _1d6289a76_check_enum_items_str(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5692820_Enum>& _113745_e) {
	jule::Ptr<_1d62e322d_Eval> _113817_eval = _1d62857db_eval(_self_, jule::Trait<_1d633797b_Lookup>(_self_, 3));;
	{
		auto &expr = _113745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1d8944360:;
		if (it != expr.end()) {
			jule::Ptr<_1d581b2c3_EnumItem> _113921_item = *it;
			{
				if (_1d573819b_auto_expr(_113921_item.ptr())) {
					_113921_item.get()._field_value=jule::new_ptr<_1d62e2738_Value>(_1d62e2738_Value{._field_data=jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_constant=static__1d566a452_new_str(_113921_item.get()._field_ident)})});
					_113921_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_113921_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1d62e16b0_Data> _114825_d = _1d630d59a_eval_expr(_113817_eval, _113921_item.get()._field_value.get()._field_expr);;
					if ((_114825_d == nullptr)) {
						goto _iter_next_1d8944360;
					};
					if ((!(_1d62e2073_is_const(_114825_d.ptr())))) {
						_1d62801cb_push_err(_self_.ptr(), _113921_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1d6285cd6_check_assign_type(_self_, false,_113745_e.get()._field_kind.get()._field_kind,_114825_d,_113921_item.get()._field_token);
					_113921_item.get()._field_value.get()._field_data=_114825_d;
				};
			}
			_iter_next_1d8944360:;
			++it;
			goto _iter_begin_1d8944360;
		}
		_iter_end_1d8944360:;
	};
}



inline void _1d6289ceb_check_enum_items_int(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5692820_Enum>& _116345_e) {
	jule::Ptr<_1d63218aa_Prim> _116413_prim = _1d631dee5_prim(_116345_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _116517_max = static_cast<jule::U64>(_1d624e80a_max(_1d6321c1d_to_str(_116413_prim.ptr())));;
	jule::Ptr<_1d62e322d_Eval> _116617_eval = _1d62857db_eval(_self_, jule::Trait<_1d633797b_Lookup>(_self_, 3));;
	{
		auto &expr = _116345_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1d8949860:;
		if (it != expr.end()) {
			jule::I64 _116714_i = it - expr.begin();
			jule::Ptr<_1d581b2c3_EnumItem> _116721_item = *it;
			{
				if ((_116517_max == 0LLU)) {
					_1d62801cb_push_err(_self_.ptr(), _116721_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_116517_max)--;
				};
				if (_1d573819b_auto_expr(_116721_item.ptr())) {
					_116721_item.get()._field_value=jule::new_ptr<_1d62e2738_Value>(_1d62e2738_Value{._field_data=jule::new_ptr<_1d62e16b0_Data>()});
					{
						
						if (_1d6254656_is_sig_int(_1d6321c1d_to_str(_116413_prim.ptr()))) {
							_case_begin_1d894bde5:;
							{
								_116721_item.get()._field_value.get()._field_data.get()._field_constant=static__1d5669eac_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_116517_max - (_116517_max - static_cast<jule::U64>(_116714_i))))));
							}
						}
						else {
							_case_begin_1d894ba4e:;
							{
								_116721_item.get()._field_value.get()._field_data.get()._field_constant=static__1d566a0de_new_u64(static_cast<jule::U64>((_116517_max - (_116517_max - static_cast<jule::U64>(_116714_i)))));
							}
						}
						_match_end_1d894b9d8:;
					};
					_116721_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_116721_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1d62e16b0_Data> _118525_d = _1d630d59a_eval_expr(_116617_eval, _116721_item.get()._field_value.get()._field_expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1d8949860;
					};
					if ((!(_1d62e2073_is_const(_118525_d.ptr())))) {
						_1d62801cb_push_err(_self_.ptr(), _116721_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1d6285cd6_check_assign_type(_self_, false,_116345_e.get()._field_kind.get()._field_kind,_118525_d,_116721_item.get()._field_token);
					_116721_item.get()._field_value.get()._field_data=_118525_d;
				};
			}
			_iter_next_1d8949860:;
			++it;
			_116714_i++;
			goto _iter_begin_1d8949860;
		}
		_iter_end_1d8949860:;
	};
}



inline void _1d628a071_check_enum_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5692820_Enum>& _120040_e) {
	if (_1ee53b5e5_is_ignore_ident(_120040_e.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _120040_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d6280d03_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_120040_e)),_120040_e.get()._field_ident,false)) {
		_1d62801cb_push_err(_self_.ptr(), _120040_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_120040_e.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_120040_e.get()._field_items.len() == 0LL)) {
		_1d62801cb_push_err(_self_.ptr(), _120040_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_120040_e.get()._field_ident)}));
	};
	_1d895398a_check_enum_items_dup(_self_.ptr(), _120040_e.get()._field_items);
	if ((_120040_e.get()._field_kind != nullptr)) {
		if ((!(_1d6284125_check_type(_self_, _120040_e.get()._field_kind,jule::Trait<_1d633797b_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_120040_e.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1d63218aa_Prim> _122717_t = _1d631dee5_prim(_120040_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_122717_t == nullptr)) {
		_1d62801cb_push_err(_self_.ptr(), _120040_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1d6324ade_is_str(_122717_t.ptr())) {
			_case_begin_1d895a1ab:;
			{
				_1d6289a76_check_enum_items_str(_self_, _120040_e);
			}
		}
		else if (_1d6254bd9_is_int(_1d6321c1d_to_str(_122717_t.ptr()))) {
			_case_begin_1d8959e03:;
			{
				_1d6289ceb_check_enum_items_int(_self_, _120040_e);
			}
		}
		else {
			_case_begin_1d89591dd:;
			{
				_1d62801cb_push_err(_self_.ptr(), _120040_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d8959188:;
	};
}



inline void _1d628a2e6_check_type_enum_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5a788b5_TypeEnum>& _124445_e) {
	if (_1ee53b5e5_is_ignore_ident(_124445_e.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _124445_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d6280d03_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_124445_e)),_124445_e.get()._field_ident,false)) {
		_1d62801cb_push_err(_self_.ptr(), _124445_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_124445_e.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_124445_e.get()._field_items.len() == 0LL)) {
		_1d62801cb_push_err(_self_.ptr(), _124445_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_124445_e.get()._field_ident)}));
		return;;
	};
	_1d895e369_check_enum_items_dup(_self_.ptr(), _124445_e.get()._field_items);
	{
		auto &expr = _124445_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1d8960623:;
		if (it != expr.end()) {
			jule::Ptr<_1d580d749_TypeEnumItem> _125821_item = *it;
			{
				if ((_125821_item.get()._field_kind == nullptr)) {
					_1d62801cb_push_err(_self_.ptr(), _125821_item.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1d8960623;
				};
				jule::Bool _126317_ok = _1d6284125_check_type(_self_, _125821_item.get()._field_kind,jule::Trait<_1d633797b_Lookup>(_self_, 3));;
				if ((!(_126317_ok))) {
					goto _iter_next_1d8960623;
				};
				jule::Ptr<_1d63218aa_Prim> _126717_p = _1d631dee5_prim(_125821_item.get()._field_kind.get()._field_kind.ptr());;
				if (((_126717_p != nullptr) && _1d6324d53_is_any(_126717_p.ptr()))) {
					_1d62801cb_push_err(_self_.ptr(), _125821_item.get()._field_token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1d8960623:;
			++it;
			goto _iter_begin_1d8960623;
		}
		_iter_end_1d8960623:;
	};
	if ((_124445_e.get()._field_items.len() == 1LL)) {
		jule::Ptr<_1d580d749_TypeEnumItem> _127321_item = _124445_e.get()._field_items[0LL];;
		_1d631bdd3_TypeKind _127417_tk = _1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_124445_e, 4)};;
		if (((_127321_item.get()._field_kind.get()._field_kind != nullptr) && _1d631c5dc_equals(_127321_item.get()._field_kind.get()._field_kind, ((jule::Ptr<_1d631bdd3_TypeKind>)((&(_127417_tk))))))) {
			_1d62801cb_push_err(_self_.ptr(), _127321_item.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1d5904301_to_str(_124445_e.ptr()))}));
		};
	};
}



inline jule::Bool _1d628a55a_check_enum_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	jule::Bool _128438_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1d8968b37:;
		if (it != expr.end()) {
			jule::Ptr<_1d5692820_Enum> _128521_e = *it;
			{
				_1d628a071_check_enum_decl(_self_, _128521_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128438_ok = false;
					return _128438_ok;
				};
			}
			_iter_next_1d8968b37:;
			++it;
			goto _iter_begin_1d8968b37;
		}
		_iter_end_1d8968b37:;
	};
	_128438_ok = true;
	return _128438_ok;
}



inline jule::Bool _1d628a7be_check_type_enum_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	jule::Bool _129743_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1d896a342:;
		if (it != expr.end()) {
			jule::Ptr<_1d5a788b5_TypeEnum> _129821_e = *it;
			{
				_1d628a2e6_check_type_enum_decl(_self_, _129821_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_129743_ok = false;
					return _129743_ok;
				};
			}
			_iter_next_1d896a342:;
			++it;
			goto _iter_begin_1d896a342;
		}
		_iter_end_1d896a342:;
	};
	_129743_ok = true;
	return _129743_ok;
}



inline jule::Bool _1d628aacc_check_decl_generics(_1d627c519_Sema* _self_, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>& _130939_generics) {
	jule::Bool _130972_ok = jule::Bool();
	_130972_ok=true;
	{
		auto &expr = _130939_generics;
		auto it = expr.begin();
		_iter_begin_1d896bba1:;
		if (it != expr.end()) {
			jule::I64 _131113_i = it - expr.begin();
			jule::Ptr<_1d55b6d3d_GenericDecl> &_131116_g = *it;
			{
				if (_1ee53b5e5_is_ignore_ident(_131116_g.get()._field_ident)) {
					_1d62801cb_push_err(&(*_self_), _131116_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_130972_ok=false;
					goto _iter_next_1d896bba1;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _130939_generics;
					auto it = expr.begin();
					_iter_begin_1d896cc4b:;
					if (it != expr.end()) {
						jule::I64 _132017_j = it - expr.begin();
						jule::Ptr<_1d55b6d3d_GenericDecl> &_132020_ct = *it;
						{
							{
								
								if ((_132017_j >= _131113_i)) {
									_case_begin_1d896e599:;
									{
										goto _iter_end_1d896cc4b;
									}
								}
								else if ((_131116_g.get()._field_ident == _132020_ct.get()._field_ident)) {
									_case_begin_1d896e621:;
									{
										_1d62801cb_push_err(&(*_self_), _131116_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131116_g.get()._field_ident)}));
										_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_130972_ok=false;
										goto _iter_end_1d896cc4b;
									}
								}
								_match_end_1d896e478:;
							};
						}
						_iter_next_1d896cc4b:;
						++it;
						_132017_j++;
						goto _iter_begin_1d896cc4b;
					}
					_iter_end_1d896cc4b:;
				};
			}
			_iter_next_1d896bba1:;
			++it;
			_131113_i++;
			goto _iter_begin_1d896bba1;
		}
		_iter_end_1d896bba1:;
	};
	return _130972_ok;
}



inline jule::Bool _1d628ae0c_check_fn_decl_params_dup(_1d627c519_Sema* _self_, jule::Ptr<_1d567a7e7_Fn>& _133644_f) {
	jule::Bool _133654_ok = jule::Bool();
	_133654_ok=true;
	_julec_label_check:;
	{
		auto &expr = _133644_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d8971997:;
		if (it != expr.end()) {
			jule::I64 _133913_i = it - expr.begin();
			jule::Ptr<_1d5678eaa_Param> &_133916_p = *it;
			{
				{
					auto &expr = _133644_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1d8972712:;
					if (it != expr.end()) {
						jule::Ptr<_1d55b6d3d_GenericDecl> &_134120_g = *it;
						{
							if ((_133916_p.get()._field_ident == _134120_g.get()._field_ident)) {
								_133654_ok=false;
								_1d62801cb_push_err(&(*_self_), _133916_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133916_p.get()._field_ident)}));
								_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1d8971997;
							};
						}
						_iter_next_1d8972712:;
						++it;
						goto _iter_begin_1d8972712;
					}
					_iter_end_1d8972712:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _133644_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1d8973229:;
					if (it != expr.end()) {
						jule::I64 _135117_j = it - expr.begin();
						jule::Ptr<_1d5678eaa_Param> &_135120_jp = *it;
						{
							{
								
								if ((_135117_j >= _133913_i)) {
									_case_begin_1d8974e95:;
									{
										goto _iter_end_1d8973229;
									}
								}
								else if ((_1ee53b88c_is_anon_ident(_133916_p.get()._field_ident) || _1ee53b88c_is_anon_ident(_135120_jp.get()._field_ident))) {
									_case_begin_1d897501c:;
									{
										goto _iter_end_1d8973229;
									}
								}
								else if ((_133916_p.get()._field_ident == _135120_jp.get()._field_ident)) {
									_case_begin_1d8975094:;
									{
										_133654_ok=false;
										_1d62801cb_push_err(&(*_self_), _133916_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133916_p.get()._field_ident)}));
										_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1d8971997;
									}
								}
								_match_end_1d8974d63:;
							};
						}
						_iter_next_1d8973229:;
						++it;
						_135117_j++;
						goto _iter_begin_1d8973229;
					}
					_iter_end_1d8973229:;
				};
			}
			_iter_next_1d8971997:;
			++it;
			_133913_i++;
			goto _iter_begin_1d8971997;
		}
		_iter_end_1d8971997:;
	};
	return _133654_ok;
}



inline jule::Bool _1d628b24d_check_fn_decl_result_dup(_1d627c519_Sema* _self_, jule::Ptr<_1d567a7e7_Fn>& _137044_f) {
	jule::Bool _137054_ok = jule::Bool();
	_137054_ok=true;
	if (_1d567ac59_is_void(_137044_f.ptr())) {
		return _137054_ok;
	};
	{
		auto &expr = _137044_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1d8977b68:;
		if (it != expr.end()) {
			jule::I64 _137713_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> &_137716_v = *it;
			{
				if ((_1ee53b5e5_is_ignore_ident(_137716_v.get()._field_kind) || _1ee53b88c_is_anon_ident(_137716_v.get()._field_kind))) {
					goto _iter_next_1d8977b68;
				};
				{
					auto &expr = _137044_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1d89793b7:;
					if (it != expr.end()) {
						jule::Ptr<_1d55b6d3d_GenericDecl> &_138220_g = *it;
						{
							if ((_137716_v.get()._field_kind == _138220_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1d89793b7:;
						++it;
						goto _iter_begin_1d89793b7;
					}
					_iter_end_1d89793b7:;
				};
				{
					auto &expr = _137044_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1d897a63d:;
					if (it != expr.end()) {
						jule::Ptr<_1d5678eaa_Param> &_138820_p = *it;
						{
							if ((_137716_v.get()._field_kind == _138820_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1d897a63d:;
						++it;
						goto _iter_begin_1d897a63d;
					}
					_iter_end_1d897a63d:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _137044_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1d897b8d6:;
					if (it != expr.end()) {
						jule::I64 _139617_j = it - expr.begin();
						jule::Ptr<_1ee538d51_Token> &_139620_jv = *it;
						{
							{
								
								if ((_139617_j >= _137713_i)) {
									_case_begin_1d897c673:;
									{
										goto _iter_end_1d897b8d6;
									}
								}
								else if ((_139620_jv.get()._field_kind == _137716_v.get()._field_kind)) {
									_case_begin_1d897c6ea:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1d897c552:;
							};
						}
						_iter_next_1d897b8d6:;
						++it;
						_139617_j++;
						goto _iter_begin_1d897b8d6;
					}
					_iter_end_1d897b8d6:;
				};
				goto _iter_next_1d8977b68;
				_julec_label_exist:;
				_1d62801cb_push_err(&(*_self_), _137716_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137716_v.get()._field_kind)}));
				_1d62804ea_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_137054_ok=false;
			}
			_iter_next_1d8977b68:;
			++it;
			_137713_i++;
			goto _iter_begin_1d8977b68;
		}
		_iter_end_1d8977b68:;
	};
	return _137054_ok;
}



inline void _1d628b506_check_fn_decl_prototype(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567a7e7_Fn>& _141748_f) {
	if ((_141748_f.get()._field_exceptional && _141748_f.get()._field_cpp_linked)) {
		_1d62801cb_push_err(_self_.ptr(), _141748_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_141748_f.get()._field_exceptional) {
		if (_1d567b232_is_entry_point(_141748_f.ptr())) {
			_1d62801cb_push_err(_self_.ptr(), _141748_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1d567b496_is_init(_141748_f.ptr())) {
			_1d62801cb_push_err(_self_.ptr(), _141748_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1d628aacc_check_decl_generics(_self_.ptr(), _141748_f.get()._field_generics)))) {
			_case_begin_1d8980951:;
		}
		else if ((!(_1d628ae0c_check_fn_decl_params_dup(_self_.ptr(), _141748_f)))) {
			_case_begin_1d89809c8:;
		}
		else if ((!(_1d628b24d_check_fn_decl_result_dup(_self_.ptr(), _141748_f)))) {
			_case_begin_1d8981e08:;
		}
		_match_end_1d89807b9:;
	};
}



inline void _1d628b7ae_check_trait_decl_method(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567a7e7_Fn>& _143848_f) {
	if (_1ee53b5e5_is_ignore_ident(_143848_f.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _143848_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_143848_f.get()._field_sema=_self_;
	_1d628b506_check_fn_decl_prototype(_self_, _143848_f);
	jule::Ptr<_1d567d498_FnIns> _144517_ins = _1d567be47_instance(_143848_f);;
	_1d6287ce9_reload_fn_ins_types(_self_, _144517_ins);
	_144517_ins.get()._field_reloaded=true;
	_1d567c222_append_instance(_143848_f.ptr(), _144517_ins);
}



inline void _1d628ba67_check_trait_decl_methods(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d59c3e1a_Trait>& _145149_t) {
	{
		auto &expr = _145149_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d8985549:;
		if (it != expr.end()) {
			jule::I64 _145214_i = it - expr.begin();
			jule::Ptr<_1d567a7e7_Fn> _145221_f = *it;
			{
				_1d628b7ae_check_trait_decl_method(_self_, _145221_f);
				_145149_t.get()._field_mutable=(_145149_t.get()._field_mutable || _145221_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _145149_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1d89872b5:;
					if (it != expr.end()) {
						jule::I64 _146317_j = it - expr.begin();
						jule::Ptr<_1d567a7e7_Fn> _146320_jf = *it;
						{
							{
								
								if ((_146317_j >= _145214_i)) {
									_case_begin_1d898844d:;
									{
										goto _iter_end_1d89872b5;
									}
								}
								else if ((_145221_f.get()._field_ident == _146320_jf.get()._field_ident)) {
									_case_begin_1d89884c5:;
									{
										_1d62801cb_push_err(_self_.ptr(), _145221_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_145221_f.get()._field_ident)}));
										_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1d89872b5;
									}
								}
								_match_end_1d898832c:;
							};
						}
						_iter_next_1d89872b5:;
						++it;
						_146317_j++;
						goto _iter_begin_1d89872b5;
					}
					_iter_end_1d89872b5:;
				};
			}
			_iter_next_1d8985549:;
			++it;
			_145214_i++;
			goto _iter_begin_1d8985549;
		}
		_iter_end_1d8985549:;
	};
}



inline void _1d628bced_check_trait_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d59c3e1a_Trait>& _148241_t) {
	if (_1ee53b5e5_is_ignore_ident(_148241_t.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _148241_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d6280d03_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_148241_t)),_148241_t.get()._field_ident,false)) {
		_1d62801cb_push_err(_self_.ptr(), _148241_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148241_t.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1d628ba67_check_trait_decl_methods(_self_, _148241_t);
}



inline jule::Bool _1d628c062_check_trait_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	jule::Bool _149439_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1d898c496:;
		if (it != expr.end()) {
			jule::Ptr<_1d59c3e1a_Trait> _149521_t = *it;
			{
				_1d628bced_check_trait_decl(_self_, _149521_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_149439_ok = false;
					return _149439_ok;
				};
			}
			_iter_next_1d898c496:;
			++it;
			goto _iter_begin_1d898c496;
		}
		_iter_end_1d898c496:;
	};
	_149439_ok = true;
	return _149439_ok;
}



inline jule::Bool _1d628c43b_check_trait_impl_methods(_1d627c519_Sema* _self_, jule::Ptr<_1d59c3e1a_Trait>& _150648_base, jule::Ptr<_1d62470d8_Impl>& _150663_ipl) {
	jule::Bool _150677_ok = jule::Bool();
	_150677_ok=true;
	{
		auto &expr = _150663_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d898e245:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> &_150816_f = *it;
			{
				if ((_1d5724187_find_method(_150648_base.ptr(), _150816_f.get()._field_ident) == nullptr)) {
					_1d62801cb_push_err(&(*_self_), _150816_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_150648_base.get()._field_ident),jule::Any(_150816_f.get()._field_ident)}));
					_150677_ok=false;
				};
			}
			_iter_next_1d898e245:;
			++it;
			goto _iter_begin_1d898e245;
		}
		_iter_end_1d898e245:;
	};
	return _150677_ok;
}



inline jule::Bool _1d628c804_impl_to_struct(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5599dba_Struct>& _151739_dest, jule::Ptr<_1d62470d8_Impl>& _151759_ipl) {
	jule::Bool _151773_ok = jule::Bool();
	_151773_ok=true;
	{
		auto &expr = _151759_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d89915aa:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _152121_f = *it;
			{
				if (((_1d5587083_find_method(_151739_dest.ptr(), _152121_f.get()._field_ident,_152121_f.get()._field_statically) != nullptr) || (_1d558a2ea_find_field(_151739_dest.ptr(), _152121_f.get()._field_ident) != nullptr))) {
					_1d62801cb_push_err(_self_.ptr(), _152121_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_151739_dest.get()._field_ident),jule::Any(_152121_f.get()._field_ident)}));
					_151773_ok=false;
					goto _iter_next_1d89915aa;
				};
				if (((_151739_dest.get()._field_generics.len() > 0LL) && (_152121_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _152121_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1d8993bea:;
						if (it != expr.end()) {
							jule::Ptr<_1d55b6d3d_GenericDecl> _152924_fg = *it;
							{
								{
									auto &expr = _151739_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1d8994536:;
									if (it != expr.end()) {
										jule::Ptr<_1d55b6d3d_GenericDecl> _153028_dg = *it;
										{
											if ((_152924_fg.get()._field_ident == _153028_dg.get()._field_ident)) {
												_1d62801cb_push_err(_self_.ptr(), _152924_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_151773_ok=false;
											};
										}
										_iter_next_1d8994536:;
										++it;
										goto _iter_begin_1d8994536;
									}
									_iter_end_1d8994536:;
								};
							}
							_iter_next_1d8993bea:;
							++it;
							goto _iter_begin_1d8993bea;
						}
						_iter_end_1d8993bea:;
					};
				};
				_1d6281122_check_directives(_self_, _152121_f.get()._field_directives,jule::Any(_152121_f));
				_152121_f.get()._field_sema=_self_;
				_152121_f.get()._field_owner=_151739_dest;
				_151739_dest.get()._field_methods = jule::alloc_for_append(_151739_dest.get()._field_methods,1);_151739_dest.get()._field_methods.__push(_152121_f);;
			}
			_iter_next_1d89915aa:;
			++it;
			goto _iter_begin_1d89915aa;
		}
		_iter_end_1d89915aa:;
	};
	{
		auto &expr = _151759_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1d8996bdc:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> _154621_v = *it;
			{
				;
				if (((_1d5587083_find_method(_151739_dest.ptr(), _154621_v.get()._field_ident,true) != nullptr) || (_1d55892d8_find_static(_151739_dest.ptr(), _154621_v.get()._field_ident) != nullptr))) {
					_1d62801cb_push_err(_self_.ptr(), _154621_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_151739_dest.get()._field_ident),jule::Any(_154621_v.get()._field_ident)}));
					_151773_ok=false;
					goto _iter_next_1d8996bdc;
				};
				_1d628d393_check_var_decl(_self_, _154621_v,jule::Trait<_1d633797b_Lookup>(_self_, 3));
				_1d6291a17_check_type_var(_self_, _154621_v,jule::Trait<_1d633797b_Lookup>(_self_, 3));
				_151739_dest.get()._field_statics = jule::alloc_for_append(_151739_dest.get()._field_statics,1);_151739_dest.get()._field_statics.__push(_154621_v);;
			}
			_iter_next_1d8996bdc:;
			++it;
			goto _iter_begin_1d8996bdc;
		}
		_iter_end_1d8996bdc:;
	};
	return _151773_ok;
}



inline void _1d628ca79_impl_trait(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d62470d8_Impl>& _156235_decl) {
	jule::Ptr<_1d631bdd3_TypeKind> _156317_base_t = _1d6284bc5_select_type(_self_, _156235_decl.get()._field_base);;
	if ((_156317_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d59c3e1a_Trait> _156717_base = _1d63206ab_trt(_156317_base_t.ptr());;
	if ((_156717_base == nullptr)) {
		_1d62801cb_push_err(_self_.ptr(), _156235_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_156317_base_t.ptr()))}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _157417_dest_t = _1d6284bc5_select_type(_self_, _156235_decl.get()._field_dest);;
	if ((_157417_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d55c62d1_StructIns> _157817_dest_s = _1d6320447_strct(_157417_dest_t.ptr());;
	if ((_157817_dest_s == nullptr)) {
		_1d62801cb_push_err(_self_.ptr(), _156235_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_157417_dest_t.ptr()))}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d5599dba_Struct> _158517_dest = _157817_dest_s.get()._field_decl;;
	if ((_1ee53ead2_dir(_158517_dest.get()._field_token.get()._field_file.ptr()) != _1ee53ead2_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1d62801cb_push_err(_self_.ptr(), _156235_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_156717_base.get()._field_implemented = jule::alloc_for_append(_156717_base.get()._field_implemented,1);_156717_base.get()._field_implemented.__push(_158517_dest);;
	_158517_dest.get()._field_implements = jule::alloc_for_append(_158517_dest.get()._field_implements,1);_158517_dest.get()._field_implements.__push(_156717_base);;
	if ((_156235_decl.get()._field_statics.len() > 0LL)) {
		_1d62801cb_push_err(_self_.ptr(), _156235_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1d628c43b_check_trait_impl_methods(_self_.ptr(), _156717_base,_156235_decl)))) {
			_case_begin_1d89a1dc3:;
			{
				return;;
			}
		}
		else if ((!(_1d628c804_impl_to_struct(_self_, _158517_dest,_156235_decl)))) {
			_case_begin_1d89a1e39:;
			{
				return;;
			}
		}
		_match_end_1d89a1433:;
	};
}



inline void _1d628ccee_impl_struct(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d62470d8_Impl>& _160736_decl) {
	jule::Ptr<_1d631bdd3_TypeKind> _160817_dest_t = _1d6284bc5_select_type(_self_, _160736_decl.get()._field_dest);;
	if ((_160817_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d55c62d1_StructIns> _161217_dest_s = _1d6320447_strct(_160817_dest_t.ptr());;
	if ((_161217_dest_s == nullptr)) {
		_1d62801cb_push_err(_self_.ptr(), _160736_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_160817_dest_t.ptr()))}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d5599dba_Struct> _161917_dest = _161217_dest_s.get()._field_decl;;
	if ((_1ee53ead2_dir(_161917_dest.get()._field_token.get()._field_file.ptr()) != _1ee53ead2_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1d62801cb_push_err(_self_.ptr(), _160736_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1d628c804_impl_to_struct(_self_, _161917_dest,_160736_decl)))) {
			_case_begin_1d89a6a10:;
			{
				return;;
			}
		}
		_match_end_1d89a3cc6:;
	};
}



inline void _1d628d074_impl_impl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d62470d8_Impl>& _163234_decl) {
	{
		
		if (_1d6227173_is_trait_impl(_163234_decl.ptr())) {
			_case_begin_1d89a7604:;
			{
				_1d628ca79_impl_trait(_self_, _163234_decl);
			}
		}
		else if (_1d622eb70_is_struct_impl(_163234_decl.ptr())) {
			_case_begin_1d89a767b:;
			{
				_1d628ccee_impl_struct(_self_, _163234_decl);
			}
		}
		_match_end_1d89a74d3:;
	};
}



inline void _1d628d393_check_var_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d6298ea3_Var>& _164339_decl, jule::Trait<_1d633797b_Lookup> _164355_l) {
	if (_1ee53b5e5_is_ignore_ident(_164339_decl.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _164339_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1d62995be_is_type_inferred(_164339_decl.ptr())) {
		if ((!(_1d629935a_is_initialized(_164339_decl.ptr())))) {
			_1d62801cb_push_err(_self_.ptr(), _164339_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1d6284125_check_type(_self_, _164339_decl.get()._field_kind,_164355_l);
	};
	if ((_164339_decl.get()._field_constant && _164339_decl.get()._field_reference)) {
		_1d62801cb_push_err(_self_.ptr(), _164339_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1d629935a_is_initialized(_164339_decl.ptr())))) {
		if (_164339_decl.get()._field_constant) {
			_1d62801cb_push_err(_self_.ptr(), _164339_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_164339_decl.get()._field_statically) {
			_1d62801cb_push_err(_self_.ptr(), _164339_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_164339_decl.get()._field_reference) {
			_1d62801cb_push_err(_self_.ptr(), _164339_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1d628d618_check_global_var_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d6298ea3_Var>& _167546_decl) {
	if (_1d6280d03_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167546_decl)),_167546_decl.get()._field_ident,_167546_decl.get()._field_cpp_linked)) {
		_1d62801cb_push_err(_self_.ptr(), _167546_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_167546_decl.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_167546_decl.get()._field_cpp_linked && _167546_decl.get()._field_constant)) {
		_1d62801cb_push_err(_self_.ptr(), _167546_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_167546_decl.get()._field_cpp_linked)) && (!(_167546_decl.get()._field_constant))) && (!(_167546_decl.get()._field_statically)))) {
		_1d62801cb_push_err(_self_.ptr(), _167546_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1d6281122_check_directives(_self_, _167546_decl.get()._field_directives,jule::Any(_167546_decl));
	_1d628d393_check_var_decl(_self_, _167546_decl,jule::Trait<_1d633797b_Lookup>(_self_, 3));
}



inline jule::Bool _1d628d87c_check_global_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	jule::Bool _169440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1d89b21be:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> _169521_decl = *it;
			{
				_1d628d618_check_global_var_decl(_self_, _169521_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_169440_ok = false;
					return _169440_ok;
				};
			}
			_iter_next_1d89b21be:;
			++it;
			goto _iter_begin_1d89b21be;
		}
		_iter_end_1d89b21be:;
	};
	_169440_ok = true;
	return _169440_ok;
}



inline jule::Bool _1d628dc56_check_struct_trait_impl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5599dba_Struct>& _170648_strct, jule::Ptr<_1d59c3e1a_Trait>& _170669_trt) {
	jule::Bool _170684_ok = jule::Bool();
	{
		auto &expr = _170669_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d89b3c1a:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _170721_tf = *it;
			{
				jule::Bool _170821_exist = false;;
				jule::Ptr<_1d567a7e7_Fn> _170921_sf = _1d5587083_find_method(_170648_strct.ptr(), _170721_tf.get()._field_ident,_170721_tf.get()._field_statically);;
				jule::Ptr<_1d567d498_FnIns> _171017_tf_k = _1d6286c3d_get_trait_check_fn_kind(_self_, _170721_tf);;
				if ((_170921_sf != nullptr)) {
					jule::Ptr<_1d567d498_FnIns> _171225_sf_k = _1d6286c3d_get_trait_check_fn_kind(_self_, _170921_sf);;
					_170821_exist=(((_171017_tf_k.get()._field_decl.get()._field_public == _171225_sf_k.get()._field_decl.get()._field_public) && (_171017_tf_k.get()._field_decl.get()._field_ident == _171225_sf_k.get()._field_decl.get()._field_ident)) && _1d567dad6_equals(_171017_tf_k, jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_171225_sf_k, 1)})));
				};
				if (_170821_exist) {
					jule::Ptr<_1d5575c86_Directive> _171821_d = _1d63165b4_find_directive(_170921_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_171821_d != nullptr)) {
						_1d62801cb_push_err(_self_.ptr(), _171821_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_170684_ok=false;
				} else {
					;
					jule::Str _172525_s = _1d567ea71_get_kind_str(_171017_tf_k.ptr(), true);;
					if (_170721_tf.get()._field_public) {
						(_172525_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1d62801cb_push_err(_self_.ptr(), _170648_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_170669_trt.get()._field_ident),jule::Any(_172525_s)}));
					_170684_ok=false;
				};
			}
			_iter_next_1d89b3c1a:;
			++it;
			goto _iter_begin_1d89b3c1a;
		}
		_iter_end_1d89b3c1a:;
	};
	return _170684_ok;
}



inline jule::Bool _1d628e075_check_struct_impls(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5599dba_Struct>& _173643_s) {
	jule::Bool _173657_ok = jule::Bool();
	_173657_ok=true;
	{
		auto &expr = _173643_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1d89baa68:;
		if (it != expr.end()) {
			jule::Ptr<_1d59c3e1a_Trait> _173821_trt = *it;
			{
				_173657_ok=(_1d628dc56_check_struct_trait_impl(_self_, _173643_s,_173821_trt) && _173657_ok);
			}
			_iter_next_1d89baa68:;
			++it;
			goto _iter_begin_1d89baa68;
		}
		_iter_end_1d89baa68:;
	};
	return _173657_ok;
}



inline jule::Bool _1d628e383_check_struct_fields(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5599dba_Struct>& _174444_st) {
	jule::Bool _174459_ok = jule::Bool();
	_174459_ok=true;
	{
		auto &expr = _174444_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1d89bbeba:;
		if (it != expr.end()) {
			jule::Ptr<_1d558c385_Field> _174621_f = *it;
			{
				_174621_f.get()._field_owner=_174444_st;
				{
					auto &expr = _174444_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1d89bcaae:;
					if (it != expr.end()) {
						jule::Ptr<_1d558c385_Field> _174820_cf = *it;
						{
							if ((_174621_f == _174820_cf)) {
								goto _iter_end_1d89bcaae;
							} else if ((_174621_f.get()._field_ident == _174820_cf.get()._field_ident)) {
								_1d62801cb_push_err(_self_.ptr(), _174621_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_174621_f.get()._field_ident)}));
								_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_174459_ok=false;
							};
						}
						_iter_next_1d89bcaae:;
						++it;
						goto _iter_begin_1d89bcaae;
					}
					_iter_end_1d89bcaae:;
				};
			}
			_iter_next_1d89bbeba:;
			++it;
			goto _iter_begin_1d89bbeba;
		}
		_iter_end_1d89bbeba:;
	};
	return _174459_ok;
}



inline void _1d628e608_check_struct_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5599dba_Struct>& _176142_s) {
	if (_1ee53b5e5_is_ignore_ident(_176142_s.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _176142_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d6280d03_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_176142_s)),_176142_s.get()._field_ident,_176142_s.get()._field_cpp_linked)) {
		_1d62801cb_push_err(_self_.ptr(), _176142_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176142_s.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1d6281122_check_directives(_self_, _176142_s.get()._field_directives,jule::Any(_176142_s));
	{
		
		if ((!(_1d628aacc_check_decl_generics(_self_.ptr(), _176142_s.get()._field_generics)))) {
			_case_begin_1d89c1a08:;
		}
		else if ((!(_1d628e383_check_struct_fields(_self_, _176142_s)))) {
			_case_begin_1d89c1a6e:;
		}
		else if ((!(_1d628e075_check_struct_impls(_self_, _176142_s)))) {
			_case_begin_1d89c1ad5:;
		}
		_match_end_1d89c18b5:;
	};
}



inline jule::Bool _1d628e86c_check_struct_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	jule::Bool _177940_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1d89c2e05:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _178021_s = *it;
			{
				_1d628e608_check_struct_decl(_self_, _178021_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_177940_ok = false;
					return _177940_ok;
				};
			}
			_iter_next_1d89c2e05:;
			++it;
			goto _iter_begin_1d89c2e05;
		}
		_iter_end_1d89c2e05:;
	};
	_177940_ok = true;
	return _177940_ok;
}



inline void _1d628eae2_check_fn_decl(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567a7e7_Fn>& _179238_f) {
	if (_1ee53b5e5_is_ignore_ident(_179238_f.get()._field_ident)) {
		_1d62801cb_push_err(_self_.ptr(), _179238_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1d6281122_check_directives(_self_, _179238_f.get()._field_directives,jule::Any(_179238_f));
	_179238_f.get()._field_sema=_self_;
	_1d628b506_check_fn_decl_prototype(_self_, _179238_f);
	if (_1d6280d03_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_179238_f)),_179238_f.get()._field_ident,_179238_f.get()._field_cpp_linked)) {
		if ((_179238_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1d567a7e7_Fn> _180421_init = _1d627dd12_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_180421_init != nullptr)) {
				return;;
			};
		};
		_1d62801cb_push_err(_self_.ptr(), _179238_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_179238_f.get()._field_ident)}));
		_1d62804ea_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d628ed56_check_fn_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	jule::Bool _181536_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1d89c8070:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _181621_f = *it;
			{
				_1d628eae2_check_fn_decl(_self_, _181621_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_181536_ok = false;
					return _181536_ok;
				};
			}
			_iter_next_1d89c8070:;
			++it;
			goto _iter_begin_1d89c8070;
		}
		_iter_end_1d89c8070:;
	};
	_181536_ok = true;
	return _181536_ok;
}



inline void _1d629021e_push_cycle_error(_1d627c519_Sema* _self_, jule::Ptr<_1d5599dba_Struct>& _182732_st1, jule::Ptr<_1d5599dba_Struct>& _182747_st2, jule::Str& _182766_message) {
	;
	jule::Str _183013_refers_to = _21868a8c3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_182732_st1.get()._field_ident),jule::Any(_182747_st2.get()._field_ident)}));;
	(_182766_message).buffer.insert(0, (((_2185adecd_repeat(jule::Str(" ", 1),4LL) + _183013_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d6290670_check_cross_cycle(_1d627c519_Sema* _self_, jule::Ptr<_1d5599dba_Struct>& _183433_st1, jule::Ptr<_1d5599dba_Struct>& _183448_st2, jule::Str& _183467_message) {
	{
		auto &expr = _183448_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1d89cb716:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> &_183516_u = *it;
			{
				if ((_183516_u == _183433_st1)) {
					_1d629021e_push_cycle_error(&(*_self_), _183448_st2,_183516_u,_183467_message);
					return false;
				};
				if ((!(_1d6290670_check_cross_cycle(&(*_self_), _183433_st1,_183516_u,_183467_message)))) {
					_1d629021e_push_cycle_error(&(*_self_), _183448_st2,_183516_u,_183467_message);
					return false;
				};
			}
			_iter_next_1d89cb716:;
			++it;
			goto _iter_begin_1d89cb716;
		}
		_iter_end_1d89cb716:;
	};
	return true;
}



inline jule::Bool _1d6290b04_check_struct_derive_illegal_cycles(_1d627c519_Sema* _self_, jule::Str _185053_derive, jule::Ptr<_1d5599dba_Struct>& _185067_st1, jule::Ptr<_1d631bdd3_TypeKind>& _185086_k) {
	jule::Bool _1850102_ok = jule::Bool();
	jule::Ptr<_1d5599dba_Struct> _185117_st2 = _1d6335094_get_struct_from_kind(_185086_k);;
	if ((_185117_st2 == nullptr)) {
		_1850102_ok = true;
		return _1850102_ok;
	};
	if ((_185067_st1 == _185117_st2)) {
		_1d62801cb_push_err(&(*_self_), _185067_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_185053_derive),jule::Any(_185067_st1.get()._field_ident)}));
		_1850102_ok = false;
		return _1850102_ok;
	};
	jule::Str _186317_message = jule::Str();;
	if ((!(_1d6290670_check_cross_cycle(&(*_self_), _185067_st1,_185117_st2,_186317_message)))) {
		jule::Str _186621_err_msg = _186317_message;;
		_186317_message=jule::Str();
		_1d629021e_push_cycle_error(&(*_self_), _185067_st1,_185117_st2,_186317_message);
		_186621_err_msg=(_186621_err_msg + _186317_message);
		_1d62801cb_push_err(&(*_self_), _185067_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_185053_derive),jule::Any(_186621_err_msg)}));
		_1850102_ok = false;
		return _1850102_ok;
	};
	_1850102_ok = true;
	return _1850102_ok;
}



inline jule::Bool _1d6290e34_check_struct_ins_derive_clone(_1d627c519_Sema* _self_, jule::Ptr<_1d55c62d1_StructIns> _187752_st) {
	jule::Bool _187770_ok = jule::Bool();
	if ((!(_1d558ba16_is_derives(_187752_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_187770_ok = true;
		return _187770_ok;
	};
	{
		auto &expr = _187752_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1d89d27d8:;
		if (it != expr.end()) {
			jule::Ptr<_1d55a2532_FieldIns> _188221_f = *it;
			{
				if ((_188221_f.get()._field_kind == nullptr)) {
					goto _iter_next_1d89d27d8;
				};
				if ((!(_1d631da1c_supports_cloning(_188221_f.get()._field_kind.ptr())))) {
					_1d62801cb_push_err(&(*_self_), _187752_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_188221_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_187770_ok = false;
					return _187770_ok;
				};
				if ((!(_1d6290b04_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_187752_st.get()._field_decl,_188221_f.get()._field_kind)))) {
					_187770_ok = false;
					return _187770_ok;
				};
			}
			_iter_next_1d89d27d8:;
			++it;
			goto _iter_begin_1d89d27d8;
		}
		_iter_end_1d89d27d8:;
	};
	_187770_ok = true;
	return _187770_ok;
}



inline void _1d6291121_check_package_decls(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d89d56ed:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _190321_f = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _190321_f);
				if ((!(_1d628a7be_check_type_enum_decls(_self_)))) {
					return;;
				};
				if ((!(_1d628957b_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d89d56ed:;
			++it;
			goto _iter_begin_1d89d56ed;
		}
		_iter_end_1d89d56ed:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d89d6d70:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _191321_f = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _191321_f);
				if ((!(_1d628c062_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d89d6d70:;
			++it;
			goto _iter_begin_1d89d6d70;
		}
		_iter_end_1d89d6d70:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d89d6d09:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _192021_f = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _192021_f);
				if ((!(_1d628d87c_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d89d6d09:;
			++it;
			goto _iter_begin_1d89d6d09;
		}
		_iter_end_1d89d6d09:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d89d8844:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _192721_f = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _192721_f);
				{
					
					if ((!(_1d628ed56_check_fn_decls(_self_)))) {
						_case_begin_1d89d95c0:;
					}
					else if ((!(_1d628e86c_check_struct_decls(_self_)))) {
						_case_begin_1d89d9636:;
					}
					else {
						_case_begin_1d89d9559:;
						{
							goto _iter_next_1d89d8844;
						}
					}
					_match_end_1d89d94e3:;
				};
				return;;
			}
			_iter_next_1d89d8844:;
			++it;
			goto _iter_begin_1d89d8844;
		}
		_iter_end_1d89d8844:;
	};
}



inline void _1d6291462_check_data_for_type_inference(_1d627c519_Sema* _self_, jule::Ptr<_1d62e16b0_Data>& _193949_d, jule::Ptr<_1ee538d51_Token>& _193960_err_token) {
	{
		
		if (_1d62e1a9a_is_nil(_193949_d.ptr())) {
			_case_begin_1d89da637:;
			{
				_1d62801cb_push_err(&(*_self_), _193960_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1d62e1d0e_is_void(_193949_d.ptr())) {
			_case_begin_1d89da6ae:;
			{
				_1d62801cb_push_err(&(*_self_), _193960_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_193949_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1d89da736:;
			{
				_1d62801cb_push_err(&(*_self_), _193960_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d89da505:;
	};
}



inline void _1d62916e8_check_var(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d6298ea3_Var>& _195034_v) {
	if (_195034_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1d62995be_is_type_inferred(_195034_v.ptr())) {
		_195034_v.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_195034_v.get()._field_value.get()._field_data.get()._field_kind});
		_1d6291462_check_data_for_type_inference(_self_.ptr(), _195034_v.get()._field_value.get()._field_data,_195034_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1d6327c46_Arr> _196121_arr = _1d631ec0a_arr(_195034_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_196121_arr != nullptr)) {
			if (_196121_arr.get()._field_auto) {
				jule::Ptr<_1d6327c46_Arr> _196425_data_arr = _1d631ec0a_arr(_195034_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_196425_data_arr != nullptr)) {
					_196121_arr.get()._field_n=_196425_data_arr.get()._field_n;
				};
			};
		};
		_1d6285cd6_check_assign_type(_self_, _195034_v.get()._field_reference,_195034_v.get()._field_kind.get()._field_kind,_195034_v.get()._field_value.get()._field_data,_195034_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_195034_v.get()._field_reference && (!(_1d63343c3_is_valid_for_ref(_195034_v.get()._field_kind.get()._field_kind))))) {
		_1d62801cb_push_err(_self_.ptr(), _195034_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_195034_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1d6288877_check_validity_for_init_expr(_self_, _195034_v.get()._field_mutable,_195034_v.get()._field_reference,_195034_v.get()._field_kind.get()._field_kind,_195034_v.get()._field_value.get()._field_data,_195034_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_195034_v.get()._field_constant) {
		if ((!(_1d62e2073_is_const(_195034_v.get()._field_value.get()._field_data.ptr())))) {
			_1d62801cb_push_err(_self_.ptr(), _195034_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195034_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1d6320b84_tup(_195034_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_195034_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1d6291a17_check_type_var(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d6298ea3_Var>& _199939_decl, jule::Trait<_1d633797b_Lookup> _199955_l) {
	if ((_199939_decl.get()._field_cpp_linked || (!(_1d629935a_is_initialized(_199939_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1d62e322d_Eval> _200417_eval = nullptr;;
	if ((_199939_decl.get()._field_kind != nullptr)) {
		_200417_eval=_1d6285126_evalpd(_self_, _199955_l,_199939_decl.get()._field_kind.get()._field_kind,_199939_decl);
	} else {
		_200417_eval=_1d6285126_evalpd(_self_, _199955_l,nullptr,_199939_decl);
	};
	_200417_eval.get()._field_immutable=(!(_199939_decl.get()._field_mutable));
	_199939_decl.get()._field_value.get()._field_data=_1d630d59a_eval_expr(_200417_eval, _199939_decl.get()._field_value.get()._field_expr);
	if ((_199939_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1d62916e8_check_var(_self_, _199939_decl);
}



inline void _1d6291be3_check_global_types(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1d89e8a0d:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> _202121_decl = *it;
			{
				if (((_1d629935a_is_initialized(_202121_decl.ptr()) && (_202121_decl.get()._field_value.get()._field_data == nullptr)) || (_1d62995be_is_type_inferred(_202121_decl.ptr()) && (_202121_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1d6291a17_check_type_var(_self_, _202121_decl,jule::Trait<_1d633797b_Lookup>(_self_, 3));
				};
			}
			_iter_next_1d89e8a0d:;
			++it;
			goto _iter_begin_1d89e8a0d;
		}
		_iter_end_1d89e8a0d:;
	};
}



inline jule::Ptr<_1d567d498_FnIns> _1d629209a_ready_to_check_fn(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns>& _203242_s, jule::Ptr<_1d567a7e7_Fn>& _203262_f) {
	jule::Ptr<_1d567d498_FnIns> _203317_ins = _1d567be47_instance(_203262_f);;
	if ((_203262_f.get()._field_instances.len() != 0LL)) {
		return _203317_ins;
	};
	_203317_ins.get()._field_owner=_203242_s;
	_1d567c222_append_instance(_203262_f.ptr(), _203317_ins);
	_203317_ins.get()._field_reloaded=true;
	if (_1d6287ce9_reload_fn_ins_types(_self_, _203317_ins)) {
		return _203317_ins;
	};
	return nullptr;
}



inline void _1d62923b9_check_type_method(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns>& _204642_s, jule::Ptr<_1d567a7e7_Fn>& _204662_f) {
	if ((_204662_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1d567d498_FnIns> _205117_ins = _204662_f.get()._field_instances[0LL];;
	if ((_205117_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		return;;
	};
	_1d6294a92_check_fn_ins(_self_, _205117_ins);
}



inline jule::Ptr<_1d567d498_FnIns> _1d629281a_check_struct_ins_op(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns>& _205944_s, jule::Ptr<_1d567a7e7_Fn>& _205964_f, jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)> _205972_p) {
	if ((((_205964_f == nullptr) || (_205964_f.get()._field_generics.len() > 0LL)) || (!(_205972_p(_205964_f))))) {
		return nullptr;
	};
	return _205964_f.get()._field_instances[0LL];
}



inline jule::Bool _1d6292bc2_check_struct_env(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns>& _206941_s, jule::Ptr<_1ee538d51_Token> _206960_error_token) {
	jule::Bool _206983_ok = jule::Bool();
	_1d632a342_TypeChecker _207017_tc = _1d632a342_TypeChecker{._field_s=_206941_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1d633797b_Lookup>(_206941_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1d63295e9_Referencer>(_1d63295e9_Referencer{._field_ident=_206941_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_206941_s.get()._field_decl), }), ._field_refers=_206941_s.get()._field_refers, };;
	if ((_206941_s.get()._field_generics.len() > 0LL)) {
		_207017_tc._field_use_generics=jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>::alloc(0LL,_206941_s.get()._field_generics.len());
		{
			auto &expr = _206941_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1d8a02b49:;
			if (it != expr.end()) {
				jule::I64 _208218_i = it - expr.begin();
				jule::Ptr<_1d631a6a6_InsGeneric> _208225_g = *it;
				{
					_207017_tc._field_use_generics = jule::alloc_for_append(_207017_tc._field_use_generics,1);_207017_tc._field_use_generics.__push(jule::new_ptr<_1d631b1e0_TypeAlias>(_1d631b1e0_TypeAlias{._field_ident=_206941_s.get()._field_decl.get()._field_generics[_208218_i].get()._field_ident, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_208225_g.get()._field_kind}), }));;
				}
				_iter_next_1d8a02b49:;
				++it;
				_208218_i++;
				goto _iter_begin_1d8a02b49;
			}
			_iter_end_1d8a02b49:;
		};
	};
	jule::Ptr<_1d62db952_SymbolTable> _209017_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_1d627ed13_set_current_file(_self_.ptr(), _209017_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _206941_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_1d62db952_SymbolTable> _209421_file = _1d627bb23_find_file(_self_.get()._field_files,_206941_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_209421_file != nullptr)) {
			_1d627ed13_set_current_file(_self_.ptr(), _209421_file);
		};
	};
	if ((_206941_s.get()._field_generics.len() > 0LL)) {
		jule::Ptr<_1d61c75c9_ConstraintChecker> _210121_cc = _1d6283c6d_constraint_checker(_self_);;
		_210121_cc.get()._field_et=_206960_error_token;
		_210121_cc.get()._field_si=_206941_s;
		_210121_cc.get()._field_generics_a=_207017_tc._field_use_generics;
		_210121_cc.get()._field_uniq=true;
		if ((!(_1d62233e4_check(_210121_cc)))) {
			return _206983_ok;
		};
	};
	jule::Ptr<_1d62e322d_Eval> _211117_eval = _1d62857db_eval(_self_, jule::Trait<_1d633797b_Lookup>(_self_, 3));;
	_206983_ok=true;
	{
		auto &expr = _206941_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1d8a08b72:;
		if (it != expr.end()) {
			jule::Ptr<_1d55a2532_FieldIns> _211321_f = *it;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _211421_kind = _1d63325ad_check_decl(&_207017_tc, _211321_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_206983_ok=((_211421_kind != nullptr) && _206983_ok);
				if ((_211421_kind == nullptr)) {
					if (((_self_ != _206941_s.get()._field_decl.get()._field_sema) && (_206941_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_206941_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_206941_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1d8a08b72;
				};
				_211321_f.get()._field_kind=_211421_kind;
				_206941_s.get()._field_mutable=(_206941_s.get()._field_mutable || ((!(_211321_f.get()._field_decl.get()._field_mutable)) && _1d631d2d0_mutable(_211321_f.get()._field_kind.ptr())));
				_1d6290e34_check_struct_ins_derive_clone(_self_.ptr(), _206941_s);
				if ((_211321_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1d8a08b72;
				};
				_211117_eval.get()._field_prefix=_211321_f.get()._field_kind;
				_211117_eval.get()._field_field=_211321_f;
				_211321_f.get()._field_default=_1d630d59a_eval_expr(_211117_eval, _211321_f.get()._field_decl.get()._field_default);
				if ((_211321_f.get()._field_default == nullptr)) {
					goto _iter_next_1d8a08b72;
				};
				;
				_1d6285cd6_check_assign_type(_self_, false,_211321_f.get()._field_kind,_211321_f.get()._field_default,_211321_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1d8a08b72:;
			++it;
			goto _iter_begin_1d8a08b72;
		}
		_iter_end_1d8a08b72:;
	};
	return _206983_ok;
}



inline jule::Bool _1d6293079_precheck_struct_ins(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns>& _214744_s, jule::Ptr<_1ee538d51_Token> _214763_error_token) {
	jule::Bool _214786_ok = jule::Bool();
	_214786_ok=_1d6292bc2_check_struct_env(_self_, _214744_s,_214763_error_token);
	if ((!(_214786_ok))) {
		_214786_ok = false;
		return _214786_ok;
	};
	{
		auto &expr = _214744_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d8a1063a:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _215221_f = *it;
			{
				if ((_215221_f.get()._field_generics.len() == 0LL)) {
					if ((_1d629209a_ready_to_check_fn(_self_, _214744_s,_215221_f) == nullptr)) {
						_214786_ok = false;
						return _214786_ok;
					};
				};
			}
			_iter_next_1d8a1063a:;
			++it;
			goto _iter_begin_1d8a1063a;
		}
		_iter_end_1d8a1063a:;
	};
	_214786_ok = true;
	return _214786_ok;
}



inline void _1d62932ee_check_struct_ins(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns>& _216241_s) {
	{
		auto &expr = _216241_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d8a1220d:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _216321_f = *it;
			{
				_1d62923b9_check_type_method(_self_, _216241_s,_216321_f);
			}
			_iter_next_1d8a1220d:;
			++it;
			goto _iter_begin_1d8a1220d;
		}
		_iter_end_1d8a1220d:;
	};
}



inline void _1d6293574_check_type_struct(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5599dba_Struct>& _216842_s) {
	if (_216842_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_216842_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _216842_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d8a1373c:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c62d1_StructIns> _218121_ins = *it;
			{
				_1d62932ee_check_struct_ins(_self_, _218121_ins);
			}
			_iter_next_1d8a1373c:;
			++it;
			goto _iter_begin_1d8a1373c;
		}
		_iter_end_1d8a1373c:;
	};
}



inline void _1d6293750_check_struct_types(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1d8a147d7:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _218721_s = *it;
			{
				_1d6293574_check_type_struct(_self_, _218721_s);
			}
			_iter_next_1d8a147d7:;
			++it;
			goto _iter_begin_1d8a147d7;
		}
		_iter_end_1d8a147d7:;
	};
}



inline void _1d62939e7_check_struct_ins_operators(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d55c62d1_StructIns> _219250_s) {
	{
		auto &expr = _219250_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d8a156b7:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _219321_m = *it;
			{
				{
					auto &_match_expr{ _219321_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1d8a16476:;
						{
							_219250_s.get()._field_operators._field_eq=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _219668_f) mutable -> jule::Bool {
								return static__1d629a9cc_eq(_219668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1d8a164dc:;
						{
							_219250_s.get()._field_operators._field_gt=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _219868_f) mutable -> jule::Bool {
								return static__1d629ac74_gt(_219868_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1d8a16564:;
						{
							_219250_s.get()._field_operators._field_gt_eq=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _220071_f) mutable -> jule::Bool {
								return static__1d629b01b_gt_eq(_220071_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1d8a165db:;
						{
							_219250_s.get()._field_operators._field_lt=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _220268_f) mutable -> jule::Bool {
								return static__1d629b2b3_lt(_220268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1d8a16663:;
						{
							_219250_s.get()._field_operators._field_lt_eq=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _220471_f) mutable -> jule::Bool {
								return static__1d629b55a_lt_eq(_220471_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1d8a166da:;
						{
							_219250_s.get()._field_operators._field_shl=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _220669_f) mutable -> jule::Bool {
								return static__1d629bb43_shl(_220669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1d8a16762:;
						{
							_219250_s.get()._field_operators._field_shr=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _220869_f) mutable -> jule::Bool {
								return static__1d629bdda_shr(_220869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1d8a167d9:;
						{
							_219250_s.get()._field_operators._field_add=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _221069_f) mutable -> jule::Bool {
								return static__1d629c182_add(_221069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1d8a16861:;
						{
							_219250_s.get()._field_operators._field_sub=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _221269_f) mutable -> jule::Bool {
								return static__1d629c429_sub(_221269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1d8a168d8:;
						{
							_219250_s.get()._field_operators._field_div=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _221469_f) mutable -> jule::Bool {
								return static__1d629c6c1_div(_221469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1d8a16960:;
						{
							_219250_s.get()._field_operators._field_mul=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _221669_f) mutable -> jule::Bool {
								return static__1d629c968_mul(_221669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1d8a169d7:;
						{
							_219250_s.get()._field_operators._field_mod=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _221869_f) mutable -> jule::Bool {
								return static__1d629cc10_mod(_221869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1d8a16a5e:;
						{
							_219250_s.get()._field_operators._field_bit_and=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _222073_f) mutable -> jule::Bool {
								return static__1d629cea7_bit_and(_222073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1d8a16ad6:;
						{
							_219250_s.get()._field_operators._field_bit_or=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _222272_f) mutable -> jule::Bool {
								return static__1d629d24e_bit_or(_222272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1d8a16b5d:;
						{
							_219250_s.get()._field_operators._field_bit_xor=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _222473_f) mutable -> jule::Bool {
								return static__1d629d4e6_bit_xor(_222473_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1d8a16bd5:;
						{
							_219250_s.get()._field_operators._field_neg=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _222669_f) mutable -> jule::Bool {
								return static__1d629dace_neg(_222669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1d8a16c5c:;
						{
							_219250_s.get()._field_operators._field_pos=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _222869_f) mutable -> jule::Bool {
								return static__1d629dd76_pos(_222869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1d8a16cd4:;
						{
							_219250_s.get()._field_operators._field_bit_not=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _223073_f) mutable -> jule::Bool {
								return static__1d629e11d_bit_not(_223073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1d8a16d5b:;
						{
							_219250_s.get()._field_operators._field_add_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _223276_f) mutable -> jule::Bool {
								return static__1d629e706_add_assign(_223276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1d8a16dd3:;
						{
							_219250_s.get()._field_operators._field_sub_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _223476_f) mutable -> jule::Bool {
								return static__1d629e99d_sub_assign(_223476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1d8a16e5a:;
						{
							_219250_s.get()._field_operators._field_div_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _223676_f) mutable -> jule::Bool {
								return static__1d629ec45_div_assign(_223676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1d8a16ed2:;
						{
							_219250_s.get()._field_operators._field_mul_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _223876_f) mutable -> jule::Bool {
								return static__1d629eedc_mul_assign(_223876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1d8a17059:;
						{
							_219250_s.get()._field_operators._field_mod_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _224076_f) mutable -> jule::Bool {
								return static__1d62a0284_mod_assign(_224076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1d8a170d1:;
						{
							_219250_s.get()._field_operators._field_shl_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _224276_f) mutable -> jule::Bool {
								return static__1d62a052b_shl_assign(_224276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1d8a17158:;
						{
							_219250_s.get()._field_operators._field_shr_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _224476_f) mutable -> jule::Bool {
								return static__1d62a07c3_shr_assign(_224476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1d8a171d0:;
						{
							_219250_s.get()._field_operators._field_bit_or_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _224679_f) mutable -> jule::Bool {
								return static__1d62a0a6a_bit_or_assign(_224679_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1d8a17257:;
						{
							_219250_s.get()._field_operators._field_bit_and_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _224880_f) mutable -> jule::Bool {
								return static__1d62a0d12_bit_and_assign(_224880_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1d8a172ce:;
						{
							_219250_s.get()._field_operators._field_bit_xor_assign=_1d629281a_check_struct_ins_op(_self_, _219250_s,_219321_m,jule::Fn<jule::Bool(jule::Ptr<_1d567a7e7_Fn>)>([=](jule::Ptr<_1d567a7e7_Fn> _225080_f) mutable -> jule::Bool {
								return static__1d62a10a9_bit_xor_assign(_225080_f);
							}));
						}
					}
					_match_end_1d8a16058:;
				};
			}
			_iter_next_1d8a156b7:;
			++it;
			goto _iter_begin_1d8a156b7;
		}
		_iter_end_1d8a156b7:;
	};
}



inline void _1d6293c7d_precheck_struct_type(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d5599dba_Struct>& _225545_s) {
	if (_225545_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_225545_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_225545_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1d55c62d1_StructIns> _226621_ins = _1d55820b1_instance(_225545_s);;
		_226621_ins.get()._field_checked=true;
		_1d5586329_append_instance(_225545_s.ptr(), _226621_ins);
		_1d6293079_precheck_struct_ins(_self_, _226621_ins,nullptr);
	};
	_1d62939e7_check_struct_ins_operators(_self_, _225545_s.get()._field_instances[0LL]);
}



inline void _1d6293e59_precheck_struct_types(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1d8a42804:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _227621_s = *it;
			{
				_1d6293c7d_precheck_struct_type(_self_, _227621_s);
			}
			_iter_next_1d8a42804:;
			++it;
			goto _iter_begin_1d8a42804;
		}
		_iter_end_1d8a42804:;
	};
}



inline void _1d62941ce_check_rets(_1d627c519_Sema* _self_, jule::Ptr<_1d567d498_FnIns>& _228134_f) {
	if (_1d567ac59_is_void(_228134_f.get()._field_decl.ptr())) {
		return;;
	};
	_1d6296379_MissingRetChecker _228513_mrc = static__1d6296742_new();;
	jule::Bool _228613_ok = _1d6297754_check(&_228513_mrc, _228134_f.get()._field_scope);;
	if ((!(_228613_ok))) {
		_1d62801cb_push_err(&(*_self_), _228134_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1d62944ed_check_fn_ins_sc(_1d627c519_Sema* _self_, jule::Ptr<_1d567d498_FnIns>& _229239_f, jule::Ptr<_1d625c571_ScopeChecker>& _229255_sc) {
	_1d627b23d_append_ret_vars(_229255_sc.get()._field_table.get()._field_vars,_229239_f);
	_1d627b4e6_append_param_vars(_229255_sc.get()._field_table.get()._field_vars,_229239_f);
	_1d627b7c1_append_generic_type_aliases(_229255_sc.get()._field_table.get()._field_type_aliases,_229239_f);
	_1d626c8a0_check(_229255_sc, _229239_f.get()._field_decl.get()._field_scope,_229239_f.get()._field_scope);
	if ((!(_1d62601ab_stopped(_229255_sc.ptr())))) {
		_1d62941ce_check_rets(&(*_self_), _229239_f);
	};
}



inline void _1d629481c_check_fn_ins_caller(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567d498_FnIns>& _230544_f, jule::Ptr<_1ee538d51_Token> _230559_caller) {
	if (_230544_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1d62db952_SymbolTable> _231017_old = _230544_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1d627ed13_set_current_file(_230544_f.get()._field_decl.get()._field_sema.ptr(), _231017_old);
	});;
	jule::Ptr<_1d62db952_SymbolTable> _231217_file = _1d627bb23_find_file(_230544_f.get()._field_decl.get()._field_sema.get()._field_files,_230544_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_231217_file != nullptr)) {
		_1d627ed13_set_current_file(_230544_f.get()._field_decl.get()._field_sema.ptr(), _231217_file);
	};
	jule::Ptr<_1d625c571_ScopeChecker> _231717_sc = _1d62315ab_new_scope_checker(_230544_f.get()._field_decl.get()._field_sema,_230544_f);;
	_231717_sc.get()._field_called_from=_230559_caller;
	_1d62944ed_check_fn_ins_sc(_self_.ptr(), _230544_f,_231717_sc);
	if ((_230544_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_230544_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_230544_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1d6294a92_check_fn_ins(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567d498_FnIns>& _232737_f) {
	_1d629481c_check_fn_ins_caller(_self_, _232737_f,nullptr);
}



inline void _1d6294d17_check_type_fn(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567a7e7_Fn>& _233138_f) {
	if (_233138_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_233138_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _233138_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d8a4d06d:;
		if (it != expr.end()) {
			jule::Ptr<_1d567d498_FnIns> _234121_ins = *it;
			{
				_1d6294a92_check_fn_ins(_self_, _234121_ins);
			}
			_iter_next_1d8a4d06d:;
			++it;
			goto _iter_begin_1d8a4d06d;
		}
		_iter_end_1d8a4d06d:;
	};
}



inline void _1d629508c_check_test_fn(_1d627c519_Sema* _self_, jule::Ptr<_1d567d498_FnIns>& _234637_f) {
	if (_234637_f.get()._field_decl.get()._field_public) {
		_1d62801cb_push_err(&(*_self_), _234637_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_234637_f.get()._field_params.len() != 1LL) || (_234637_f.get()._field_result != nullptr))) {
		_1d62801cb_push_err(&(*_self_), _234637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d632513e_Sptr> _235917_sptr = _1d631e259_sptr(_234637_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_235917_sptr == nullptr)) {
		_1d62801cb_push_err(&(*_self_), _234637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d55c62d1_StructIns> _236613_s = _1d6320447_strct(_235917_sptr.get()._field_elem.ptr());;
	if (((_236613_s == nullptr) || (!(_1d6279901_is_std_package(_236613_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1d62801cb_push_err(&(*_self_), _234637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1d62804ea_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1d6295312_precheck_type_fn(jule::Ptr<_1d627c519_Sema> _self_, jule::Ptr<_1d567a7e7_Fn>& _237441_f) {
	if (_237441_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_237441_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_237441_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1d567d498_FnIns> _238521_ins = _1d567be47_instance(_237441_f);;
		_237441_f.get()._field_instances = jule::alloc_for_append(_237441_f.get()._field_instances,1);_237441_f.get()._field_instances.__push(_238521_ins);;
		_1d6287ce9_reload_fn_ins_types(_self_, _238521_ins);
		_238521_ins.get()._field_reloaded=true;
		if (_1d6333a65_has_directive(_237441_f.get()._field_directives,jule::Str("test", 4))) {
			_1d629508c_check_test_fn(_self_.ptr(), _238521_ins);
		};
	};
}



inline void _1d62954dd_precheck_fn_types(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1d8a57bb0:;
		if (it != expr.end()) {
			jule::Ptr<_1d59c3e1a_Trait> _239821_decl = *it;
			{
				{
					auto &expr = _239821_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1d8a58573:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _239925_m = *it;
						{
							_1d6295312_precheck_type_fn(_self_, _239925_m);
						}
						_iter_next_1d8a58573:;
						++it;
						goto _iter_begin_1d8a58573;
					}
					_iter_end_1d8a58573:;
				};
			}
			_iter_next_1d8a57bb0:;
			++it;
			goto _iter_begin_1d8a57bb0;
		}
		_iter_end_1d8a57bb0:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1d8a58287:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _240321_decl = *it;
			{
				_1d6295312_precheck_type_fn(_self_, _240321_decl);
			}
			_iter_next_1d8a58287:;
			++it;
			goto _iter_begin_1d8a58287;
		}
		_iter_end_1d8a58287:;
	};
}



inline void _1d62956b9_check_fn_types(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1d8a59497:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _241021_decl = *it;
			{
				_1d6294d17_check_type_fn(_self_, _241021_decl);
			}
			_iter_next_1d8a59497:;
			++it;
			goto _iter_begin_1d8a59497;
		}
		_iter_end_1d8a59497:;
	};
}



inline void _1d6295895_check_package_types(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d8a5a72e:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _241821_f = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _241821_f);
				_1d6291be3_check_global_types(_self_);
				_1d62954dd_precheck_fn_types(_self_);
				_1d6293e59_precheck_struct_types(_self_);
			}
			_iter_next_1d8a5a72e:;
			++it;
			goto _iter_begin_1d8a5a72e;
		}
		_iter_end_1d8a5a72e:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d8a5c17b:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _242921_f = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _242921_f);
				_1d62956b9_check_fn_types(_self_);
				_1d6293750_check_struct_types(_self_);
			}
			_iter_next_1d8a5c17b:;
			++it;
			goto _iter_begin_1d8a5c17b;
		}
		_iter_end_1d8a5c17b:;
	};
}



inline void _1d6295a71_set_file_sema_fields(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1d8a5c764:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _243721_f = *it;
			{
				_243721_f.get()._field_sema=_self_;
			}
			_iter_next_1d8a5c764:;
			++it;
			goto _iter_begin_1d8a5c764;
		}
		_iter_end_1d8a5c764:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1d8a5d8b9:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _244121_st = *it;
			{
				_244121_st.get()._field_sema=_self_;
			}
			_iter_next_1d8a5d8b9:;
			++it;
			goto _iter_begin_1d8a5d8b9;
		}
		_iter_end_1d8a5d8b9:;
	};
}



inline void _1d6295c4c_set_sema_fields(jule::Ptr<_1d627c519_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d8a5e3c0:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _244721_file = *it;
			{
				_1d627ed13_set_current_file(_self_.ptr(), _244721_file);
				_1d6295a71_set_file_sema_fields(_self_);
			}
			_iter_next_1d8a5e3c0:;
			++it;
			goto _iter_begin_1d8a5e3c0;
		}
		_iter_end_1d8a5e3c0:;
	};
}



inline void _1d6295ec2_check(jule::Ptr<_1d627c519_Sema> _self_, jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _245330_files) {
	_self_.get()._field_files=_245330_files;
	_1d6282981_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d6295c4c_set_sema_fields(_self_);
	_1d6283014_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d6282d38_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d6291121_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d6295895_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1d627c519_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1d6296379_MissingRetChecker static__1d6296742_new(void) {
	return _1d6296379_MissingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1d6296a1c_check_conditional(_1d6296379_MissingRetChecker* _self_, jule::Ptr<_1d625646b_Conditional> _249636_c) {
	{
		auto &expr = _249636_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1d8a63924:;
		if (it != expr.end()) {
			jule::Ptr<_1d6255dd8_If> _249721_elif = *it;
			{
				if ((_249721_elif == nullptr)) {
					return false;
				};
				if ((!(_1d6297446_check_scope(&(*_self_), _249721_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1d8a63924:;
			++it;
			goto _iter_begin_1d8a63924;
		}
		_iter_end_1d8a63924:;
	};
	return ((_249636_c.get()._field_default != nullptr) && _1d6297446_check_scope(&(*_self_), _249636_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1d6296d2a_check_match(_1d6296379_MissingRetChecker* _self_, jule::Ptr<_1d625965b_Match> _250830_m) {
	{
		auto &expr = _250830_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d8a65d99:;
		if (it != expr.end()) {
			jule::Ptr<_1d625a1a6_Case> _250921_c = *it;
			{
				if ((_250921_c == nullptr)) {
					return false;
				};
				jule::I64 _251317_n = (*_self_)._field_breaked.len();;
				jule::Bool _251417_ok = _1d6297446_check_scope(&(*_self_), _250921_c.get()._field_scope);;
				{
					
					if ((_251317_n != (*_self_)._field_breaked.len())) {
						_case_begin_1d8a67b15:;
						{
							return false;
						}
					}
					else if ((!(_251417_ok))) {
						_case_begin_1d8a67b8c:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1d8a67c14;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1d8a67c14:;
						{
							(*_self_)._field_falled=false;
							if ((_250921_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1d8a65d99;
						}
					}
					_match_end_1d8a67a6b:;
				};
			}
			_iter_next_1d8a65d99:;
			++it;
			goto _iter_begin_1d8a65d99;
		}
		_iter_end_1d8a65d99:;
	};
	return ((_250830_m.get()._field_default != nullptr) && _1d6297446_check_scope(&(*_self_), _250830_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1d6297138_check_inf_iter(_1d6296379_MissingRetChecker* _self_, jule::Ptr<_1d6256757_InfIter> _253433_it) {
	jule::I64 _253513_n = (*_self_)._field_breaked.len();;
	if (_1d6297446_check_scope(&(*_self_), _253433_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_253513_n);
		return true;
	};
	if ((_253513_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _254117_itaddr = static_cast<jule::Uintptr>(_253433_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_253513_n);
			auto it = expr.begin();
			_iter_begin_1d8a6b982:;
			if (it != expr.end()) {
				jule::Uintptr _254220_addr = *it;
				{
					if ((_254117_itaddr == _254220_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_253513_n);
						return false;
					};
				}
				_iter_next_1d8a6b982:;
				++it;
				goto _iter_begin_1d8a6b982;
			}
			_iter_end_1d8a6b982:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_253513_n);
	};
	return true;
}



inline jule::Bool _1d6297446_check_scope(_1d6296379_MissingRetChecker* _self_, jule::Ptr<_1d6255beb_Scope> _255330_s) {
	if ((_255330_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _255330_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1d8a6d665:;
		if (it != expr.end()) {
			jule::Any _255721_st = *it;
			{
				{
					auto &_match_expr{ _255721_st };
					
					if (_match_expr.type_is<jule::Ptr<_1d625a75b_FallSt>>()) {
						_case_begin_1d8a6e05b:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d6257d63_BreakSt>>()) {
						_case_begin_1d8a6e105:;
						{
							jule::Uintptr _256321_addr = _255721_st.operator jule::Ptr<_1d6257d63_BreakSt>().get()._field_it;;
							if ((_256321_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_256321_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d62579ab_ContSt>>()) {
						_case_begin_1d8a6e16b:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d6256757_InfIter>>()) {
						_case_begin_1d8a6e1d2:;
						{
							if (_1d6297138_check_inf_iter(&(*_self_), _255721_st.operator jule::Ptr<_1d6256757_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d625abce_RetSt>>()) {
						_case_begin_1d8a6e248:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d6255beb_Scope>>()) {
						_case_begin_1d8a6e2ae:;
						{
							if (_1d6297446_check_scope(&(*_self_), _255721_st.operator jule::Ptr<_1d6255beb_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
						_case_begin_1d8a6e336:;
						{
							{
								auto &_match_expr{ _255721_st.operator jule::Ptr<_1d62e16b0_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>()) {
									_case_begin_1d8a72eb6:;
									{
										return true;
									}
								}
								_match_end_1d8a72c1e:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d625646b_Conditional>>()) {
						_case_begin_1d8a6e3ad:;
						{
							if (_1d6296a1c_check_conditional(&(*_self_), _255721_st.operator jule::Ptr<_1d625646b_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d625965b_Match>>()) {
						_case_begin_1d8a6e435:;
						{
							if (_1d6296d2a_check_match(&(*_self_), _255721_st.operator jule::Ptr<_1d625965b_Match>())) {
								return true;
							};
						}
					}
					_match_end_1d8a6ddb3:;
				};
			}
			_iter_next_1d8a6d665:;
			++it;
			goto _iter_begin_1d8a6d665;
		}
		_iter_end_1d8a6d665:;
	};
	return false;
}



inline jule::Bool _1d6297754_check(_1d6296379_MissingRetChecker* _self_, jule::Ptr<_1d6255beb_Scope> _259924_s) {
	return _1d6297446_check_scope(&(*_self_), _259924_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6296379_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d629803a_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d629935a_is_initialized(_1d6298ea3_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1d62995be_is_type_inferred(_1d6298ea3_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1d6298ea3_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d629a14c_dispose(jule::Ptr<_1d567a7e7_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1d567ac59_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1d567984b_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1d629a3e4_to_str(jule::Ptr<_1d567a7e7_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1d567ac59_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1d567984b_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1d567d498_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1d63218aa_Prim> _4113_prim = _1d631dee5_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1d6324ade_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1d629a735_logical(jule::Ptr<_1d567a7e7_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1d567ac59_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1d567984b_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1d567d498_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1d63218aa_Prim> _6713_prim = _1d631dee5_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1d632487a_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1d6320447_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1d629a9cc_eq(jule::Ptr<_1d567a7e7_Fn> _7522_f) {
	return static__1d629a735_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1d629ac74_gt(jule::Ptr<_1d567a7e7_Fn> _8022_f) {
	return static__1d629a735_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1d629b01b_gt_eq(jule::Ptr<_1d567a7e7_Fn> _8525_f) {
	return static__1d629a735_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1d629b2b3_lt(jule::Ptr<_1d567a7e7_Fn> _9022_f) {
	return static__1d629a735_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1d629b55a_lt_eq(jule::Ptr<_1d567a7e7_Fn> _9525_f) {
	return static__1d629a735_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1d629b89b_result(jule::Ptr<_1d567a7e7_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1d567ac59_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1d567984b_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1d567d498_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1d6320447_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1d629bb43_shl(jule::Ptr<_1d567a7e7_Fn> _12223_f) {
	return static__1d629b89b_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1d629bdda_shr(jule::Ptr<_1d567a7e7_Fn> _12723_f) {
	return static__1d629b89b_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1d629c182_add(jule::Ptr<_1d567a7e7_Fn> _13223_f) {
	return static__1d629b89b_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1d629c429_sub(jule::Ptr<_1d567a7e7_Fn> _13723_f) {
	return static__1d629b89b_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1d629c6c1_div(jule::Ptr<_1d567a7e7_Fn> _14223_f) {
	return static__1d629b89b_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1d629c968_mul(jule::Ptr<_1d567a7e7_Fn> _14723_f) {
	return static__1d629b89b_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1d629cc10_mod(jule::Ptr<_1d567a7e7_Fn> _15223_f) {
	return static__1d629b89b_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1d629cea7_bit_and(jule::Ptr<_1d567a7e7_Fn> _15727_f) {
	return static__1d629b89b_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1d629d24e_bit_or(jule::Ptr<_1d567a7e7_Fn> _16226_f) {
	return static__1d629b89b_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1d629d4e6_bit_xor(jule::Ptr<_1d567a7e7_Fn> _16727_f) {
	return static__1d629b89b_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1d629d837_unary(jule::Ptr<_1d567a7e7_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1d567ac59_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1d567984b_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1d567d498_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1d6320447_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1d629dace_neg(jule::Ptr<_1d567a7e7_Fn> _19223_f) {
	return static__1d629d837_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1d629dd76_pos(jule::Ptr<_1d567a7e7_Fn> _19723_f) {
	return static__1d629d837_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1d629e11d_bit_not(jule::Ptr<_1d567a7e7_Fn> _20227_f) {
	return static__1d629d837_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1d629e45e_assign(jule::Ptr<_1d567a7e7_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1d567ac59_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1d567984b_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1d629e706_add_assign(jule::Ptr<_1d567a7e7_Fn> _22730_f) {
	return static__1d629e45e_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1d629e99d_sub_assign(jule::Ptr<_1d567a7e7_Fn> _23230_f) {
	return static__1d629e45e_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1d629ec45_div_assign(jule::Ptr<_1d567a7e7_Fn> _23730_f) {
	return static__1d629e45e_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1d629eedc_mul_assign(jule::Ptr<_1d567a7e7_Fn> _24230_f) {
	return static__1d629e45e_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1d62a0284_mod_assign(jule::Ptr<_1d567a7e7_Fn> _24730_f) {
	return static__1d629e45e_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1d62a052b_shl_assign(jule::Ptr<_1d567a7e7_Fn> _25230_f) {
	return static__1d629e45e_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1d62a07c3_shr_assign(jule::Ptr<_1d567a7e7_Fn> _25730_f) {
	return static__1d629e45e_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1d62a0a6a_bit_or_assign(jule::Ptr<_1d567a7e7_Fn> _26233_f) {
	return static__1d629e45e_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1d62a0d12_bit_and_assign(jule::Ptr<_1d567a7e7_Fn> _26734_f) {
	return static__1d629e45e_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1d62a10a9_bit_xor_assign(jule::Ptr<_1d567a7e7_Fn> _27234_f) {
	return static__1d629e45e_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1d62999cb_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1d62caa62_push_err(_1d62ca545_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1d62801cb_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1d62cacc6_check_trait(_1d62ca545_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1d631cd07_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1d59c3e1a_Trait> _12513_trt = _1d63206ab_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1d631e259_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1d8ab2b0a:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1d631e259_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1d6320447_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1d8ab2be8;
			}
		}
		else if ((_1d6320447_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1d8ab2be8:;
			{
				jule::Ptr<_1d55c62d1_StructIns> _13617_s = _1d6320447_strct((*_self_)._field_src.ptr());;
				if ((!(_1d5589739_is_implements(_13617_s.get()._field_decl.ptr(), _12513_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12617_ref)) && _1d62c00a6_trait_has_reference_receiver(_12513_trt))) {
					_1d62caa62_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1d63206ab_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1d8ab2c5e:;
			{
				_12132_ok = (_12513_trt == _1d63206ab_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1d8ab249a:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1d8ab2445:;
	};
}



inline jule::Bool _1d62cb03a_check_ptr(_1d62ca545_TypeCompatibilityChecker* _self_) {
	jule::Bool _15230_ok = jule::Bool();
	if (_1d631cd07_is_nil((*_self_)._field_src.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	jule::Ptr<_1d63286a3_Ptr> _15617_dest = _1d631e4bd_ptr((*_self_)._field_dest.ptr());;
	if (_1d6329176_is_unsafe(_15617_dest.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	_15230_ok = _1d631c5dc_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15230_ok;
}



inline jule::Bool _1d62cb29e_check_prim(_1d62ca545_TypeCompatibilityChecker* _self_) {
	jule::Bool _16331_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1d63218aa_Prim> _16517_prim = _1d631dee5_prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1d6324d53_is_any(_16517_prim.ptr()))) {
			_16331_ok = true;
			return _16331_ok;
		};
	};
	_16331_ok = _1d631c5dc_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16331_ok;
}



inline jule::Bool _1d62cb656___type_enum(_1d62ca545_TypeCompatibilityChecker* _self_, jule::Ptr<_1d5a788b5_TypeEnum>& _17331_e, jule::Ptr<_1d631bdd3_TypeKind>& _17350_t2) {
	jule::Bool _17367_ok = jule::Bool();
	{
		auto &expr = _17331_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1d8aba805:;
		if (it != expr.end()) {
			jule::Ptr<_1d580d749_TypeEnumItem> _17421_item = *it;
			{
				if (_1d631c5dc_equals(_17421_item.get()._field_kind.get()._field_kind, _17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
				jule::Ptr<_1d5a788b5_TypeEnum> _17821_ke = _1d631e996_tenm(_17421_item.get()._field_kind.get()._field_kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1d8aba805;
				};
				if (_1d62cb656___type_enum(&(*_self_), _17821_ke,_17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
			}
			_iter_next_1d8aba805:;
			++it;
			goto _iter_begin_1d8aba805;
		}
		_iter_end_1d8aba805:;
	};
	_17367_ok = false;
	return _17367_ok;
}



inline jule::Bool _1d62cb8ba_check_type_enum(_1d62ca545_TypeCompatibilityChecker* _self_) {
	jule::Bool _18936_ok = jule::Bool();
	if (_1d631c5dc_equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18936_ok = true;
		return _18936_ok;
	};
	jule::Ptr<_1d5a788b5_TypeEnum> _19317_e = _1d631e996_tenm((*_self_)._field_dest.ptr());;
	_18936_ok = _1d62cb656___type_enum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18936_ok;
}



inline jule::Bool _1d62cbb2e_check(_1d62ca545_TypeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1d631e4bd_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1d62cb03a_check_ptr(&(*_self_));
		return _19726_ok;
	};
	if (_1d631d544_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1d631cd07_is_nil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1d631dee5_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1d8ac0e15:;
			{
				_19726_ok = _1d62cb29e_check_prim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1d631e996_tenm((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1d8ac0ca0:;
			{
				_19726_ok = _1d62cb8ba_check_type_enum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1d63206ab_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1d8ac0d16:;
			{
				_19726_ok = _1d62cacc6_check_trait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1d8abee47:;
			{
				_19726_ok = _1d631c5dc_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1d8abed04:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d62ca545_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1d62cc5d0_push_err(_1d62cc16d_AssignTypeChecker* _self_, jule::Str _22927_fmt, jule::Slice<jule::Any> _22940_args) {
	_1d62801cb_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22927_fmt,jule::Any(_22940_args));
}



inline jule::Bool _1d62cc844_check_validity(_1d62cc16d_AssignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1d63201d3_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ac4479:;
			{
				jule::Ptr<_1d567d498_FnIns> _23717_f = _1d63201d3_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1d567e1e1_is_builtin(_23717_f.ptr())) {
						_case_begin_1d8ac5a52:;
						{
							_1d62cc5d0_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1d8ac5ac9:;
						{
							_1d62cc5d0_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_1d567aebd_is_method(_23717_f.get()._field_decl.ptr())) {
						_case_begin_1d8ac5b51:;
						{
							_1d62cc5d0_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if ((_23717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1d8ac5bc8:;
						{
							_1d62cc5d0_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1d8ac5975:;
				};
			}
		}
		else if ((_1d6320b84_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ac4501:;
			{
				_1d62cc5d0_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1d8ac43be:;
	};
	return _23417_valid;
}



inline jule::Bool _1d62ccaa8_check_const(_1d62cc16d_AssignTypeChecker* _self_) {
	if (((((!(_1d62e2073_is_const((*_self_)._field_d.ptr()))) || (_1d631dee5_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1d62552a0_is_num(_1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _27313_kind = _1d631dee5_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1d6255008_is_float(_27313_kind)) {
			_case_begin_1d8acc52b:;
			{
				if ((!(_1d62b25d7_float_assignable(_27313_kind,(*_self_)._field_d)))) {
					_1d62cc5d0_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1d6254bd9_is_int(_27313_kind)) {
			_case_begin_1d8acbd44:;
			{
				if ((!(_1d62c9401_int_assignable(_27313_kind,(*_self_)._field_d)))) {
					_1d62cc5d0_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1d8acbccd:;
			{
				return false;
			}
		}
		_match_end_1d8acbc78:;
	};
	return true;
}



inline jule::Bool _1d62ccd1c_is_prim(_1d62cc16d_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1d631ca93_cpp_linked((*_self_)._field_dest.ptr()) || _1d631ca93_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1d631dee5_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1d62cd081_check_compatibility(_1d62cc16d_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1d8ad1145:;
			{
				return false;
			}
		}
		else if ((!(_1d62cc844_check_validity(&(*_self_))))) {
			_case_begin_1d8ad11bc:;
			{
				return false;
			}
		}
		else if (_1d62ccaa8_check_const(&(*_self_))) {
			_case_begin_1d8ad1244:;
			{
				return true;
			}
		}
		else if ((_1d631e732_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ad12bb:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _31521_dkind = (*_self_)._field_dest;;
				if ((_1d631e732_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31521_dkind=_1d631e732_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1d631dee5_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1d8ad1024;
				};
				if (_1d6251a1b_types_are_compatible(_1d631dee5_prim(_1d631e732_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1d631dee5_prim(_31521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1d62ccd1c_is_prim(&(*_self_))) {
			_case_begin_1d8ad1343:;
			{
				jule::Ptr<_1d63218aa_Prim> _32517_dest = _1d631dee5_prim((*_self_)._field_dest.ptr());;
				if (_1d6324d53_is_any(_32517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1d63218aa_Prim> _32921_src = _1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1d6251a1b_types_are_compatible(_32517_dest.get()._field_kind,_32921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1d8ad1024:;
	};
	return _1d6286259_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1d62cd2e5_check(_1d62cc16d_AssignTypeChecker* _self_) {
	jule::Bool _33813_ok = _1d62cd081_check_compatibility(&(*_self_));;
	if (_33813_ok) {
		_1d63355e4_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62cc16d_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d8aea071_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55abb9b_ArrTypeDecl>>()) {
			_case_begin_1d8aeb4e5:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1d8aec370:;
						{
							_36021_elem=_1d631ec0a_arr(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1d8aec2b5:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55abb9b_ArrTypeDecl>().get()._field_elem;
				return _1d62d0281_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_1d8aeb43a:;
	};
	return false;
}

inline jule::Bool _1d8aeaadd_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55aae42_SlcTypeDecl>>()) {
			_case_begin_1d8aeeb7a:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1d8b00a9e:;
						{
							_36021_elem=_1d631ee6e_slc(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1d8b0094a:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55aae42_SlcTypeDecl>().get()._field_elem;
				return _1d62d0281_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_1d8aeeac0:;
	};
	return false;
}

inline jule::Bool _1d8aeee55_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55ab519_PtrTypeDecl>>()) {
			_case_begin_1d8b03354:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1d8b042de:;
						{
							_36021_elem=_1d631e4bd_ptr(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1d8b04124:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55ab519_PtrTypeDecl>().get()._field_elem;
				return _1d62d0281_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_1d8b03299:;
	};
	return false;
}

inline jule::Bool _1d8b0518b_annotate_constraint_elem(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55aaa46_SptrTypeDecl>>()) {
			_case_begin_1d8b06698:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1d8b07699:;
						{
							_36021_elem=_1d631e259_sptr(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1d8b07468:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55aaa46_SptrTypeDecl>().get()._field_elem;
				return _1d62d0281_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_1d8b065dd:;
	};
	return false;
}



inline jule::Bool _1d62ce4c2_annotate_constraint_map(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _37747_k) {
	jule::Bool _37763_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55ac3e9_MapTypeDecl>>()) {
			_case_begin_1d8ad8bec:;
			{
				jule::Ptr<_1d6327152_Map> _38021_m = _1d6320920_map(_37747_k.ptr());;
				jule::Ptr<_1d55ac3e9_MapTypeDecl> _38121_m2 = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55ac3e9_MapTypeDecl>();;
				(*_self_)._field_c=_38121_m2.get()._field_key;
				if (_1d62d0281_annotate_constraint(&(*_self_), _38021_m.get()._field_key)) {
					_37763_ok = true;
					return _37763_ok;
				};
				(*_self_)._field_c=_38121_m2.get()._field_val;
				_37763_ok = _1d62d0281_annotate_constraint(&(*_self_), _38021_m.get()._field_val);
				return _37763_ok;
			}
		}
		_match_end_1d8ad8b75:;
	};
	_37763_ok = false;
	return _37763_ok;
}



inline jule::Bool _1d62ce813_annotate_constraint_tup(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _39247_k) {
	jule::Bool _39263_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55ab22d_TupleTypeDecl>>()) {
			_case_begin_1d8adb716:;
			{
				jule::Ptr<_1d55ab22d_TupleTypeDecl> _39521_tup = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55ab22d_TupleTypeDecl>();;
				jule::Ptr<_1d6326629_Tuple> _39621_tup2 = _1d6320b84_tup(_39247_k.ptr());;
				{
					auto &expr = _39621_tup2.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1d8adcbce:;
					if (it != expr.end()) {
						jule::Ptr<_1d631bdd3_TypeKind> _39725_t2 = *it;
						{
							{
								auto &expr = _39521_tup.get()._field_types;
								auto it = expr.begin();
								_iter_begin_1d8add51a:;
								if (it != expr.end()) {
									jule::Ptr<_1d55a968d_TypeDecl> _39829_t = *it;
									{
										(*_self_)._field_c=_39829_t;
										if (_1d62d0281_annotate_constraint(&(*_self_), _39725_t2)) {
											_39263_ok = true;
											return _39263_ok;
										};
									}
									_iter_next_1d8add51a:;
									++it;
									goto _iter_begin_1d8add51a;
								}
								_iter_end_1d8add51a:;
							};
						}
						_iter_next_1d8adcbce:;
						++it;
						goto _iter_begin_1d8adcbce;
					}
					_iter_end_1d8adcbce:;
				};
			}
		}
		_match_end_1d8adb4e6:;
	};
	_39263_ok = false;
	return _39263_ok;
}



inline jule::Bool _1d62ceb32_annotate_constraint_fn(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _40946_k) {
	jule::Bool _40962_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55bb56d_FnDecl>>()) {
			_case_begin_1d8add97c:;
			{
				jule::Ptr<_1d55bb56d_FnDecl> _41221_pf = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55bb56d_FnDecl>();;
				jule::Ptr<_1d567d498_FnIns> _41321_f = _1d63201d3_fnc(_40946_k.ptr());;
				{
					auto &expr = _41321_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1d8ae0a06:;
					if (it != expr.end()) {
						jule::I64 _41418_i = it - expr.begin();
						jule::Ptr<_1d567c5c9_ParamIns> _41425_fp = *it;
						{
							(*_self_)._field_c=_41221_pf.get()._field_params[_41418_i].get()._field_kind;
							if (_1d62d0281_annotate_constraint(&(*_self_), _41425_fp.get()._field_kind)) {
								_40962_ok = true;
								return _40962_ok;
							};
						}
						_iter_next_1d8ae0a06:;
						++it;
						_41418_i++;
						goto _iter_begin_1d8ae0a06;
					}
					_iter_end_1d8ae0a06:;
				};
				if ((_41221_pf.get()._field_result != nullptr)) {
					(*_self_)._field_c=_41221_pf.get()._field_result.get()._field_kind;
					if (_1d62d0281_annotate_constraint(&(*_self_), _41321_f.get()._field_result)) {
						_40962_ok = true;
						return _40962_ok;
					};
				};
			}
		}
		_match_end_1d8add42c:;
	};
	_40962_ok = false;
	return _40962_ok;
}



inline jule::Bool _1d62cee62_annotate_constraint_ident(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _43049_k) {
	jule::Ptr<_1d55a9c54_IdentTypeDecl> _43117_ident = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1d55a9c54_IdentTypeDecl>();;
	jule::Ptr<_1d55c62d1_StructIns> _43217_s = _1d6320447_strct(_43049_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d8ae3b08:;
		if (it != expr.end()) {
			jule::I64 _43313_i = it - expr.begin();
			jule::Ptr<_1d55b6d3d_GenericDecl> _43316_g = *it;
			{
				if ((_43316_g.get()._field_ident == _43117_ident.get()._field_ident)) {
					jule::Ptr<_1d631a6a6_InsGeneric> _43525_fg = (*_self_)._field_f.get()._field_generics[_43313_i];;
					if ((_43525_fg != nullptr)) {
						return false;
					};
					_1d62d05a0_push_generic(&(*_self_), _43049_k,_43313_i);
					return true;
				};
				if ((_43217_s == nullptr)) {
					goto _iter_next_1d8ae3b08;
				};
				jule::Ptr<_1d55a968d_TypeDecl> _44521_c = (*_self_)._field_c;;
				{
					auto &expr = _43117_ident.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1d8ae6798:;
					if (it != expr.end()) {
						jule::Ptr<_1d55a968d_TypeDecl> _44625_ig = *it;
						{
							(*_self_)._field_c=_44625_ig;
							{
								auto &expr = _43217_s.get()._field_generics;
								auto it = expr.begin();
								_iter_begin_1d8ae7579:;
								if (it != expr.end()) {
									jule::Ptr<_1d631a6a6_InsGeneric> _44829_sg = *it;
									{
										if (_1d62d0281_annotate_constraint(&(*_self_), _44829_sg.get()._field_kind)) {
											return true;
										};
									}
									_iter_next_1d8ae7579:;
									++it;
									goto _iter_begin_1d8ae7579;
								}
								_iter_end_1d8ae7579:;
							};
						}
						_iter_next_1d8ae6798:;
						++it;
						goto _iter_begin_1d8ae6798;
					}
					_iter_end_1d8ae6798:;
				};
				(*_self_)._field_c=_44521_c;
			}
			_iter_next_1d8ae3b08:;
			++it;
			_43313_i++;
			goto _iter_begin_1d8ae3b08;
		}
		_iter_end_1d8ae3b08:;
	};
	return false;
}



inline jule::Bool _1d62d0281_annotate_constraint(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _45943_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55a9c54_IdentTypeDecl>>()) {
			_case_begin_1d8ae790e:;
			{
				return _1d62cee62_annotate_constraint_ident(&(*_self_), _45943_k);
			}
		}
		_match_end_1d8ae70d4:;
	};
	{
		
		if ((_1d631ec0a_arr(_45943_k.ptr()) != nullptr)) {
			_case_begin_1d8ae8a97:;
			{
				return _1d8aea071_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_1d631ee6e_slc(_45943_k.ptr()) != nullptr)) {
			_case_begin_1d8ae8657:;
			{
				return _1d8aeaadd_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_1d631e4bd_ptr(_45943_k.ptr()) != nullptr)) {
			_case_begin_1d8ae86bd:;
			{
				return _1d8aeee55_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_1d631e259_sptr(_45943_k.ptr()) != nullptr)) {
			_case_begin_1d8ae8734:;
			{
				return _1d8b0518b_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_1d6320920_map(_45943_k.ptr()) != nullptr)) {
			_case_begin_1d8ae904d:;
			{
				return _1d62ce4c2_annotate_constraint_map(&(*_self_), _45943_k);
			}
		}
		else if ((_1d63201d3_fnc(_45943_k.ptr()) != nullptr)) {
			_case_begin_1d8ae90c5:;
			{
				return _1d62ceb32_annotate_constraint_fn(&(*_self_), _45943_k);
			}
		}
		else if ((_1d6320b84_tup(_45943_k.ptr()) != nullptr)) {
			_case_begin_1d8ae914c:;
			{
				return _1d62ce813_annotate_constraint_tup(&(*_self_), _45943_k);
			}
		}
		else {
			_case_begin_1d8ae8e82:;
			{
				return false;
			}
		}
		_match_end_1d8ae8e2c:;
	};
}



inline void _1d62d05a0_push_generic(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _48436_k, jule::I64 _48450_i) {
	(*_self_)._field_f.get()._field_generics[_48450_i]=jule::new_ptr<_1d631a6a6_InsGeneric>(_1d631a6a6_InsGeneric{._field_kind=_48436_k, });
	jule::Ptr<_1d55b6d3d_GenericDecl> _48617_gd = (*_self_)._field_f.get()._field_decl.get()._field_generics[_48450_i];;
	if (((_48617_gd.get()._field_constraint == nullptr) || (_48617_gd.get()._field_constraint.get()._field_mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48617_gd.get()._field_constraint.get()._field_mask[0LL];
	_1d62d0281_annotate_constraint(&(*_self_), _48436_k);
}



inline jule::Bool _1d62d08ad_annotate_prim(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _49444_k) {
	jule::Bool _49460_ok = jule::Bool();
	_49460_ok = _1d62d26d4_annotate_any(&(*_self_), _49444_k);
	return _49460_ok;
}



inline jule::Bool _1d62d0bbb_annotate_arr(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _49843_k) {
	jule::Bool _49859_ok = jule::Bool();
	jule::Ptr<_1d6327c46_Arr> _49917_parr = _1d631ec0a_arr((*((*_self_)._field_k)).ptr());;
	if ((_49917_parr == nullptr)) {
		_49859_ok = false;
		return _49859_ok;
	};
	jule::Ptr<_1d6327c46_Arr> _50317_arr = _1d631ec0a_arr(_49843_k.ptr());;
	(*_self_)._field_k=(&(_49917_parr.get()._field_elem));
	_49859_ok = _1d62d29e2_annotate_kind(&(*_self_), _50317_arr.get()._field_elem);
	return _49859_ok;
}



inline jule::Bool _1d62d0ec9_annotate_slc(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _50843_k) {
	jule::Bool _50859_ok = jule::Bool();
	jule::Ptr<_1d6325a9b_Slc> _50917_pslc = _1d631ee6e_slc((*((*_self_)._field_k)).ptr());;
	if ((_50917_pslc == nullptr)) {
		_50859_ok = false;
		return _50859_ok;
	};
	jule::Ptr<_1d6325a9b_Slc> _51317_slc = _1d631ee6e_slc(_50843_k.ptr());;
	(*_self_)._field_k=(&(_50917_pslc.get()._field_elem));
	_50859_ok = _1d62d29e2_annotate_kind(&(*_self_), _51317_slc.get()._field_elem);
	return _50859_ok;
}



inline jule::Bool _1d62d1381_check_map_key(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>* _51843_k, jule::Ptr<_1d631bdd3_TypeKind>& _51863_ck) {
	jule::Bool _51880_ok = jule::Bool();
	jule::Ptr<_1d631bdd3_TypeKind>* _51917_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51843_k;
	_51880_ok=_1d62d29e2_annotate_kind(&(*_self_), _51863_ck);
	(*_self_)._field_k=_51917_old;
	return _51880_ok;
}



inline jule::Bool _1d62d168e_annotate_map(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _52643_k) {
	jule::Bool _52659_ok = jule::Bool();
	jule::Ptr<_1d6327152_Map> _52717_pmap = _1d6320920_map((*((*_self_)._field_k)).ptr());;
	if ((_52717_pmap == nullptr)) {
		_52659_ok = false;
		return _52659_ok;
	};
	jule::Ptr<_1d6327152_Map> _53117_m = _1d6320920_map(_52643_k.ptr());;
	_52659_ok = (_1d62d1381_check_map_key(&(*_self_), (&(_52717_pmap.get()._field_key)),_53117_m.get()._field_key) && _1d62d1381_check_map_key(&(*_self_), (&(_52717_pmap.get()._field_val)),_53117_m.get()._field_val));
	return _52659_ok;
}



inline jule::Bool _1d62d199c_annotate_fn(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _53642_k) {
	jule::Bool _53658_ok = jule::Bool();
	jule::Ptr<_1d567d498_FnIns> _53717_pf = _1d63201d3_fnc((*((*_self_)._field_k)).ptr());;
	if ((_53717_pf == nullptr)) {
		_53658_ok = false;
		return _53658_ok;
	};
	jule::Ptr<_1d567d498_FnIns> _54117_f = _1d63201d3_fnc(_53642_k.ptr());;
	{
		
		if ((_53717_pf.get()._field_params.len() != _54117_f.get()._field_params.len())) {
			_case_begin_1d8b1681d:;
			{
				_53658_ok = false;
				return _53658_ok;
			}
		}
		else if ((_1d567ac59_is_void(_53717_pf.get()._field_decl.ptr()) != _1d567ac59_is_void(_54117_f.get()._field_decl.ptr()))) {
			_case_begin_1d8b16895:;
			{
				_53658_ok = false;
				return _53658_ok;
			}
		}
		_match_end_1d8b16796:;
	};
	_53658_ok=true;
	jule::Ptr<_1d631bdd3_TypeKind>* _55017_old = (*_self_)._field_k;;
	{
		auto &expr = _54117_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d8b1827b:;
		if (it != expr.end()) {
			jule::I64 _55114_i = it - expr.begin();
			jule::Ptr<_1d567c5c9_ParamIns> _55121_fp = *it;
			{
				(*_self_)._field_k=(&(_53717_pf.get()._field_params[_55114_i].get()._field_kind));
				_53658_ok=(_1d62d29e2_annotate_kind(&(*_self_), _55121_fp.get()._field_kind) && _53658_ok);
			}
			_iter_next_1d8b1827b:;
			++it;
			_55114_i++;
			goto _iter_begin_1d8b1827b;
		}
		_iter_end_1d8b1827b:;
	};
	if ((!(_1d567ac59_is_void(_53717_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_53717_pf.get()._field_result));
		_53658_ok=(_1d62d29e2_annotate_kind(&(*_self_), _54117_f.get()._field_result) && _53658_ok);
	};
	(*_self_)._field_k=_55017_old;
	return _53658_ok;
}



inline jule::Bool _1d62d1caa_annotate_ptr(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _56543_k) {
	jule::Bool _56559_ok = jule::Bool();
	jule::Ptr<_1d63286a3_Ptr> _56617_pptr = _1d631e4bd_ptr((*((*_self_)._field_k)).ptr());;
	if ((_56617_pptr == nullptr)) {
		_56559_ok = false;
		return _56559_ok;
	};
	jule::Ptr<_1d63286a3_Ptr> _57017_ptr = _1d631e4bd_ptr(_56543_k.ptr());;
	(*_self_)._field_k=(&(_56617_pptr.get()._field_elem));
	_56559_ok = _1d62d29e2_annotate_kind(&(*_self_), _57017_ptr.get()._field_elem);
	return _56559_ok;
}



inline jule::Bool _1d62d20b8_annotate_sptr(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _57544_k) {
	jule::Bool _57560_ok = jule::Bool();
	jule::Ptr<_1d632513e_Sptr> _57617_ssptr = _1d631e259_sptr((*((*_self_)._field_k)).ptr());;
	if ((_57617_ssptr == nullptr)) {
		_57560_ok = false;
		return _57560_ok;
	};
	jule::Ptr<_1d632513e_Sptr> _58017_sptr = _1d631e259_sptr(_57544_k.ptr());;
	(*_self_)._field_k=(&(_57617_ssptr.get()._field_elem));
	_57560_ok = _1d62d29e2_annotate_kind(&(*_self_), _58017_sptr.get()._field_elem);
	return _57560_ok;
}



inline jule::Bool _1d62d23c6_annotate_struct(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _58546_k) {
	jule::Bool _58562_ok = jule::Bool();
	jule::Ptr<_1d55c62d1_StructIns> _58617_s = _1d6320447_strct((*((*_self_)._field_k)).ptr());;
	if ((_58617_s == nullptr)) {
		_58562_ok = false;
		return _58562_ok;
	};
	jule::Ptr<_1d55c62d1_StructIns> _59017_s2 = _1d6320447_strct(_58546_k.ptr());;
	if ((_58617_s.get()._field_generics.len() != _59017_s2.get()._field_generics.len())) {
		_58562_ok = false;
		return _58562_ok;
	};
	{
		auto &expr = _58617_s.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d8b21b9c:;
		if (it != expr.end()) {
			jule::I64 _59414_i = it - expr.begin();
			jule::Ptr<_1d631a6a6_InsGeneric> _59421_g = *it;
			{
				jule::Ptr<_1d631a6a6_InsGeneric> _59521_g2 = _59017_s2.get()._field_generics[_59414_i];;
				if (_1d631c5dc_equals(_59421_g.get()._field_kind, _59521_g2.get()._field_kind)) {
					goto _iter_next_1d8b21b9c;
				};
				(*_self_)._field_k=(&(_59421_g.get()._field_kind));
				if ((!(_1d62d29e2_annotate_kind(&(*_self_), _59521_g2.get()._field_kind)))) {
					_58562_ok = false;
					return _58562_ok;
				};
			}
			_iter_next_1d8b21b9c:;
			++it;
			_59414_i++;
			goto _iter_begin_1d8b21b9c;
		}
		_iter_end_1d8b21b9c:;
	};
	_58562_ok = true;
	return _58562_ok;
}



inline jule::Bool _1d62d26d4_annotate_any(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _60743_k) {
	jule::Bool _60759_ok = jule::Bool();
	jule::Str _60813_kind = _1d631c2ce_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d8b24a3a:;
		if (it != expr.end()) {
			jule::I64 _60913_i = it - expr.begin();
			jule::Ptr<_1d55b6d3d_GenericDecl> _60916_g = *it;
			{
				if ((_60813_kind != _60916_g.get()._field_ident)) {
					goto _iter_next_1d8b24a3a;
				};
				jule::Ptr<_1d631a6a6_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_generics[_60913_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_kind == nullptr)) {
						_case_begin_1d8b266da:;
						{
							_1d62d05a0_push_generic(&(*_self_), _60743_k,_60913_i);
						}
					}
					else if ((!(_1d631c5dc_equals(_61417_t.get()._field_kind, _60743_k)))) {
						_case_begin_1d8b26762:;
						{
							_60759_ok = false;
							return _60759_ok;
						}
					}
					_match_end_1d8b26597:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_60743_k.get()._field_kind;
				_60759_ok = true;
				return _60759_ok;
			}
			_iter_next_1d8b24a3a:;
			++it;
			_60913_i++;
			goto _iter_begin_1d8b24a3a;
		}
		_iter_end_1d8b24a3a:;
	};
	_60759_ok = false;
	return _60759_ok;
}



inline jule::Bool _1d62d29e2_annotate_kind(_1d62cda87_DynamicTypeAnnotation* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _63044_k) {
	jule::Bool _63060_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63060_ok;
	};
	{
		
		if (_1d62d26d4_annotate_any(&(*_self_), _63044_k)) {
			_case_begin_1d8b29776:;
			{
				_63060_ok = true;
				return _63060_ok;
			}
		}
		else if ((_1d631dee5_prim(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b297dc:;
			{
				_63060_ok = _1d62d08ad_annotate_prim(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_1d631ec0a_arr(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b2948a:;
			{
				_63060_ok = _1d62d0bbb_annotate_arr(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_1d631ee6e_slc(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b29501:;
			{
				_63060_ok = _1d62d0ec9_annotate_slc(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_1d6320920_map(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b29567:;
			{
				_63060_ok = _1d62d168e_annotate_map(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_1d63201d3_fnc(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b2908e:;
			{
				_63060_ok = _1d62d199c_annotate_fn(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_1d631e4bd_ptr(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b29105:;
			{
				_63060_ok = _1d62d1caa_annotate_ptr(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_1d631e259_sptr(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b2916b:;
			{
				_63060_ok = _1d62d20b8_annotate_sptr(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_1d6320447_strct(_63044_k.ptr()) != nullptr)) {
			_case_begin_1d8b291d2:;
			{
				_63060_ok = _1d62d23c6_annotate_struct(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else {
			_case_begin_1d8b29028:;
			{
				_63060_ok = false;
				return _63060_ok;
			}
		}
		_match_end_1d8b28ec3:;
	};
}



inline jule::Bool _1d62d2c56_annotate(_1d62cda87_DynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_65836_ok = _1d62d29e2_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62cda87_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1d62d397c_push_err_token(_1d62d342c_FnCallArgChecker* _self_, jule::Ptr<_1ee538d51_Token> _67433_token, jule::Str _67448_fmt, jule::Slice<jule::Any> _67461_args) {
	_1d62801cb_push_err((*_self_)._field_e.get()._field_s.ptr(), _67433_token,_67448_fmt,jule::Any(_67461_args));
}



inline void _1d62d3c9b_push_err(_1d62d342c_FnCallArgChecker* _self_, jule::Str _67827_fmt, jule::Slice<jule::Any> _67840_args) {
	_1d62d397c_push_err_token(&(*_self_), (*_self_)._field_error_token,_67827_fmt,jule::Any(_67840_args));
}



inline jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>> _1d62d4010_get_params(_1d62d342c_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1d56795d7_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1d62d431d_check_counts(_1d62d342c_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>& _69132_params) {
	jule::Bool _69155_ok = jule::Bool();
	jule::I64 _69217_n = _69132_params.len();;
	if (((_69217_n > 0LL) && _1d56795d7_is_self(_69132_params[0LL].get()._field_decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_1d8b35e69:;
			{
				_69155_ok = true;
				return _69155_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69132_params[(_69217_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1d8b35ed0:;
			{
				_69155_ok = true;
				return _69155_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69132_params.len()))) {
			_case_begin_1d8b36046:;
			{
				_1d62d3c9b_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69155_ok = false;
				return _69155_ok;
			}
		}
		_match_end_1d8b35dc0:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69132_params[(_69217_n - _69717_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1d8b38125:;
	}
	_iter_end_1d8b38125:;;
	(_70817_idents).mut_slice(2LL);;
	_1d62d3c9b_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69155_ok = false;
	return _69155_ok;
}



inline jule::Bool _1d62d476e_check_arg(_1d62d342c_FnCallArgChecker* _self_, jule::Ptr<_1d567c5c9_ParamIns>& _71833_p, jule::Ptr<_1d62e16b0_Data>& _71852_arg, jule::Ptr<_1ee538d51_Token>& _71869_error_token) {
	jule::Bool _71892_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1d567ee8e_parameter_uses_generics(_71833_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_71892_ok=(!(_71833_p.get()._field_decl.get()._field_variadic));
		if (_71892_ok) {
			_1d62cda87_DynamicTypeAnnotation _72225_dta = _1d62cda87_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71833_p, ._field_a=_71852_arg, ._field_error_token=_71869_error_token, };;
			_71892_ok=_1d62d2c56_annotate(&_72225_dta);
		};
		if ((!(_71892_ok))) {
			_1d62d397c_push_err_token(&(*_self_), _71869_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71892_ok = false;
			return _71892_ok;
		};
	};
	if (_1d6288877_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _71833_p.get()._field_decl.get()._field_mutable,_71833_p.get()._field_decl.get()._field_reference,_71833_p.get()._field_kind,_71852_arg,_71869_error_token)) {
		_1d6285cd6_check_assign_type((*_self_)._field_e.get()._field_s, _71833_p.get()._field_decl.get()._field_reference,_71833_p.get()._field_kind,_71852_arg,_71869_error_token);
	};
	_71892_ok = true;
	return _71892_ok;
}



inline jule::Bool _1d62d4b26_push(_1d62d342c_FnCallArgChecker* _self_, jule::Ptr<_1d567c5c9_ParamIns>& _74528_p, jule::Ptr<_1d55adbae_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_1d631bdd3_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1d62e16b0_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_74528_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_1d630ce7e_eval_expr_kind((*_self_)._field_e, _74546_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_1d62d476e_check_arg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_token);
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_74817_d.get()._field_model);;
	return _74560_ok;
}



inline jule::Bool _1d62d4ecd_push_variadic(_1d62d342c_FnCallArgChecker* _self_, jule::Ptr<_1d567c5c9_ParamIns>& _77037_p, jule::I64 _77055_i) {
	jule::Bool _77065_ok = jule::Bool();
	_77065_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77055_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1d56741e7_SliceExprModel> _77417_model = jule::new_ptr<_1d56741e7_SliceExprModel>(_1d56741e7_SliceExprModel{._field_elem_kind=_77037_p.get()._field_kind, });;
	jule::Ptr<_1d631bdd3_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77037_p.get()._field_kind.get()._field_variadic;;
	_77037_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_77037_p.get()._field_kind.get()._field_variadic=_78313_variadic;
	});;
	for (; (_77055_i < (*_self_)._field_args.len()); (_77055_i)++) {
		{
			jule::Ptr<_1d55adbae_Expr> _79021_arg = (*_self_)._field_args[_77055_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1d55b17d8_VariadicExpr>>()) {
					_case_begin_1d8b46809:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d6325a9b_Slc>(_1d6325a9b_Slc{._field_elem=_77037_p.get()._field_kind}), 8)});
					}
				}
				else {
					_case_begin_1d8b47222:;
					{
						(*_self_)._field_e.get()._field_prefix=_77037_p.get()._field_kind;
					}
				}
				_match_end_1d8b471bc:;
			};
			jule::Ptr<_1d62e16b0_Data> _80321_d = _1d630d28c_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77065_ok=false;
				goto _iter_next_1d8b45ce2;
			};
			if (_80321_d.get()._field_kind.get()._field_variadic) {
				_77217_variadiced=true;
				_77037_p.get()._field_kind.get()._field_variadic=true;
				_77065_ok=(_77065_ok && _1d62d476e_check_arg(&(*_self_), _77037_p,_80321_d,_79021_arg.get()._field_token));
				{
					auto &_match_expr{ _80321_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1d56741e7_SliceExprModel>>()) {
						_case_begin_1d8b49444:;
						{
							_77417_model=_80321_d.get()._field_model.operator jule::Ptr<_1d56741e7_SliceExprModel>();
							_77417_model.get()._field_elem_kind=_77037_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1d8b4a29c:;
						{
							_77417_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_80321_d.get()._field_model);;
						}
					}
					_match_end_1d8b4a247:;
				};
				(_77055_i)++;
				goto _iter_end_1d8b45ce2;
			};
			_77065_ok=(_77065_ok && _1d62d476e_check_arg(&(*_self_), _77037_p,_80321_d,_79021_arg.get()._field_token));
			_77417_model.get()._field_elems = jule::alloc_for_append(_77417_model.get()._field_elems,1);_77417_model.get()._field_elems.__push(_80321_d.get()._field_model);;
		}
	_iter_next_1d8b45ce2:;
	}
	_iter_end_1d8b45ce2:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_1d62d397c_push_err_token(&(*_self_), (*_self_)._field_args[_77055_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77065_ok;
}



inline jule::Bool _1d62d52db_check_args(_1d62d342c_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>& _84634_params) {
	jule::Bool _84657_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84657_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84634_params.len() > 0LL) && _1d56795d7_is_self(_84634_params[0LL].get()._field_decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84634_params.len())) {
		{
			jule::Ptr<_1d567c5c9_ParamIns> _85821_p = _84634_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1d8b5187a:;
					{
						_84657_ok=(_1d62d4ecd_push_variadic(&(*_self_), _85821_p,_85117_i) && _84657_ok);
						goto _iter_end_1d8b4ed84;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_1d8b50eea:;
					{
						_84657_ok=false;
						goto _iter_end_1d8b4ed84;
					}
				}
				else {
					_case_begin_1d8b514d4:;
					{
						_84657_ok=(_1d62d4b26_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84657_ok);
					}
				}
				_match_end_1d8b5146d:;
			};
			(_85117_i)++;
		}
	_iter_next_1d8b4ed84:;
	}
	_iter_end_1d8b4ed84:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84657_ok;
}



inline jule::Bool _1d62d5572_check_dynamic_type_annotation(_1d62d342c_FnCallArgChecker* _self_) {
	jule::Bool _87750_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d8b53915:;
		if (it != expr.end()) {
			jule::Ptr<_1d631a6a6_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_1d62d3c9b_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87750_ok = false;
					return _87750_ok;
				};
			}
			_iter_next_1d8b53915:;
			++it;
			goto _iter_begin_1d8b53915;
		}
		_iter_end_1d8b53915:;
	};
	_87750_ok = true;
	return _87750_ok;
}



inline jule::Bool _1d62d57e7_check(_1d62d342c_FnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>> _88817_params = _1d62d4010_get_params(&(*_self_));;
	_88726_ok=_1d62d431d_check_counts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_1d62d52db_check_args(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamic_annotation)) {
		_88726_ok=_1d62d5572_check_dynamic_type_annotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62d342c_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1d62d6342_push_err(_1d62d5d36_StructLitChecker* _self_, jule::Ptr<_1ee538d51_Token> _91127_token, jule::Str _91142_fmt, jule::Slice<jule::Any> _91155_args) {
	_1d62e3739_push_err((*_self_)._field_e.ptr(), _91127_token,_91142_fmt,jule::Any(_91155_args));
}



inline void _1d62d6661_push_suggestion(_1d62d5d36_StructLitChecker* _self_, jule::Str _91634_fmt, jule::Slice<jule::Any> _91647_args) {
	_1d62e3a58_push_suggestion((*_self_)._field_e.ptr(), _91634_fmt,jule::Any(_91647_args));
}



inline void _1d62d6a29_push_match(_1d62d5d36_StructLitChecker* _self_, jule::Ptr<_1d55a2532_FieldIns>& _92034_f, jule::Ptr<_1d62e16b0_Data>& _92053_d, jule::Ptr<_1ee538d51_Token>& _92068_error_token) {
	;
	if (_1d6288877_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92034_f.get()._field_kind,_92053_d,_92068_error_token)) {
		_1d6285cd6_check_assign_type((*_self_)._field_e.get()._field_s, false,_92034_f.get()._field_kind,_92053_d,_92068_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1d5673757_StructArgExprModel>(_1d5673757_StructArgExprModel{._field_field=_92034_f, ._field_expr=_92053_d.get()._field_model}));;
}



inline void _1d62d6d48_check_pair(_1d62d5d36_StructLitChecker* _self_, jule::Ptr<_1d55b39c7_FieldExprPair>& _93334_pair, jule::Slice<jule::Ptr<_1d55adbae_Expr>>& _93361_exprs) {
	jule::Ptr<_1d55a2532_FieldIns> _93517_f = _1d55a1388_find_field((*_self_)._field_s.ptr(), _93334_pair.get()._field_field.get()._field_kind);;
	if ((_93517_f == nullptr)) {
		_1d62d6342_push_err(&(*_self_), _93334_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93334_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _93517_f.get()._field_decl.get()._field_public,_93517_f.get()._field_decl.get()._field_token)))) {
		_1d62d6342_push_err(&(*_self_), _93334_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93334_pair.get()._field_field.get()._field_kind)}));
		_1d62d6661_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93361_exprs;
		auto it = expr.begin();
		_iter_begin_1d8b5db0c:;
		if (it != expr.end()) {
			jule::Ptr<_1d55adbae_Expr> _94721_expr = *it;
			{
				{
					auto &_match_expr{ _94721_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d55b39c7_FieldExprPair>>()) {
						_case_begin_1d8b5e4c0:;
						{
							jule::Ptr<_1d55b39c7_FieldExprPair> _95025_dpair = _94721_expr.get()._field_kind.operator jule::Ptr<_1d55b39c7_FieldExprPair>();;
							{
								
								if ((_93334_pair == _95025_dpair)) {
									_case_begin_1d8b6048d:;
									{
										goto _iter_end_1d8b5db0c;
									}
								}
								else if ((_93334_pair.get()._field_field.get()._field_kind == _95025_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1d8b60515:;
									{
										_1d62d6342_push_err(&(*_self_), _93334_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93334_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1d8b5db0c;
									}
								}
								_match_end_1d8b603d3:;
							};
						}
					}
					_match_end_1d8b5e316:;
				};
			}
			_iter_next_1d8b5db0c:;
			++it;
			goto _iter_begin_1d8b5db0c;
		}
		_iter_end_1d8b5db0c:;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _96117_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96117_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93517_f.get()._field_kind;
	jule::Ptr<_1d62e16b0_Data> _96517_d = _1d630ce7e_eval_expr_kind((*_self_)._field_e, _93334_pair.get()._field_expr.get()._field_kind);;
	if ((_96517_d == nullptr)) {
		return;;
	};
	_1d62d6a29_push_match(&(*_self_), _93517_f,_96517_d,_93334_pair.get()._field_field);
}



inline jule::Bool _1d62d7156_ready_exprs(_1d62d5d36_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1d55adbae_Expr>>& _97235_exprs) {
	jule::Bool _97317_ok = true;;
	{
		auto &expr = _97235_exprs;
		auto it = expr.begin();
		_iter_begin_1d8b63eec:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Ptr<_1d55adbae_Expr> _97421_expr = *it;
			{
				{
					auto &_match_expr{ _97421_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d55b51b0_KeyValPair>>()) {
						_case_begin_1d8b64c56:;
						{
							jule::Ptr<_1d55b51b0_KeyValPair> _97725_pair = _97421_expr.get()._field_kind.operator jule::Ptr<_1d55b51b0_KeyValPair>();;
							{
								auto &_match_expr{ _97725_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d55b0c27_IdentExpr>>()) {
									_case_begin_1d8b655c5:;
									{
										goto _match_end_1d8b65a59;
									}
								}
								else {
									_case_begin_1d8b65cce:;
									{
										_1d62d6342_push_err(&(*_self_), _97725_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97317_ok=false;
										goto _iter_next_1d8b63eec;
									}
								}
								_match_end_1d8b65a59:;
							};
							_97235_exprs[_97414_i].get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55b39c7_FieldExprPair>(_1d55b39c7_FieldExprPair{._field_field=_97725_pair.get()._field_key.get()._field_token, ._field_expr=_97725_pair.get()._field_val}));
						}
					}
					_match_end_1d8b64a9c:;
				};
			}
			_iter_next_1d8b63eec:;
			++it;
			_97414_i++;
			goto _iter_begin_1d8b63eec;
		}
		_iter_end_1d8b63eec:;
	};
	return _97317_ok;
}



inline void _1d62d73cb_check(_1d62d5d36_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1d55adbae_Expr>>& _99629_exprs) {
	if ((_99629_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1d62d7156_ready_exprs(&(*_self_), _99629_exprs)))) {
		return;;
	};
	jule::Bool _100517_paired = false;;
	{
		auto &expr = _99629_exprs;
		auto it = expr.begin();
		_iter_begin_1d8b63d87:;
		if (it != expr.end()) {
			jule::I64 _100614_i = it - expr.begin();
			jule::Ptr<_1d55adbae_Expr> _100621_expr = *it;
			{
				{
					auto &_match_expr{ _100621_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d55b39c7_FieldExprPair>>()) {
						_case_begin_1d8b6d974:;
						{
							jule::Ptr<_1d55b39c7_FieldExprPair> _100925_pair = _100621_expr.get()._field_kind.operator jule::Ptr<_1d55b39c7_FieldExprPair>();;
							if (((_100614_i > 0LL) && (!(_100517_paired)))) {
								_1d62d6342_push_err(&(*_self_), _100925_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100517_paired=true;
							_1d62d6d48_check_pair(&(*_self_), _100925_pair,_99629_exprs);
						}
					}
					else {
						_case_begin_1d8b6908a:;
						{
							if (_100517_paired) {
								_1d62d6342_push_err(&(*_self_), _100621_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100614_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1d62d6342_push_err(&(*_self_), _100621_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1d8b63d87;
							};
							jule::Ptr<_1d55a2532_FieldIns> _102425_field = (*_self_)._field_s.get()._field_fields[_100614_i];;
							if ((!(_1d62808a2_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _102425_field.get()._field_decl.get()._field_public,_102425_field.get()._field_decl.get()._field_token)))) {
								_1d62d6342_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1d62d6661_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1d631bdd3_TypeKind> _103225_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103225_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102425_field.get()._field_kind;
							jule::Ptr<_1d62e16b0_Data> _103625_d = _1d630ce7e_eval_expr_kind((*_self_)._field_e, _100621_expr.get()._field_kind);;
							if ((_103625_d == nullptr)) {
								goto _iter_next_1d8b63d87;
							};
							_1d62d6a29_push_match(&(*_self_), _102425_field,_103625_d,_100621_expr.get()._field_token);
						}
					}
					_match_end_1d8b68e14:;
				};
			}
			_iter_next_1d8b63d87:;
			++it;
			_100614_i++;
			goto _iter_begin_1d8b63d87;
		}
		_iter_end_1d8b63d87:;
	};
	if ((!(_100517_paired))) {
		jule::I64 _104717_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _104821_diff = (_104717_n - _99629_exprs.len());;
		{
			
			if ((_104821_diff <= 0LL)) {
				_case_begin_1d8b71aa9:;
				{
					return;;
				}
			}
			_match_end_1d8b71955:;
		};
		jule::Str _105421_idents = jule::Str();;
		for (; (_104821_diff > 0LL); (_104821_diff)--) {
			{
				_105421_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_104717_n - _104821_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1d8b72505:;
		}
		_iter_end_1d8b72505:;;
		(_105421_idents).mut_slice(2LL);;
		_1d62d6342_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105421_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d62d5d36_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d6298ea3_Var> _1d62d7db0_build_var(_1d62d791a_RangeChecker* _self_, jule::Ptr<_1d55bc54c_VarDecl>& _107329_decl) {
	jule::Ptr<_1d6298ea3_Var> _107417_v = _1d5685a33_build_var(_107329_decl);;
	return _107417_v;
}



inline void _1d62d808b_set_size_key(_1d62d791a_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1ee53b5e5_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1d62d7db0_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d8b7621d:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1d629803a_IterRelation>(_1d629803a_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1d6298ea3_Var>()});
			}
		}
		_match_end_1d8b76163:;
	};
}



inline void _1d62d8476_check_range_expr_validity(_1d62d791a_RangeChecker* _self_, jule::Ptr<_1d62e16b0_Data>& _110449_d, jule::Ptr<_1d6298ea3_Var>& _110460_key, jule::Ptr<_1d631bdd3_TypeKind>& _110476_k) {
	jule::Bool _110517__mut = _110460_key.get()._field_mutable;;
	if ((_110517__mut && (!(_1d631d2d0_mutable(_110476_k.ptr()))))) {
		_110517__mut=false;
	};
	_1d6288877_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _110517__mut,_110460_key.get()._field_reference,_110460_key.get()._field_kind.get()._field_kind,_110449_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1d62d8663_check_slice(_1d62d791a_RangeChecker* _self_) {
	_1d62d808b_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ee53b5e5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1d6325a9b_Slc> _112317_slc = _1d631ee6e_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1d62d7db0_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_112317_slc.get()._field_elem});
	_1d62d8476_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_112317_slc.get()._field_elem);
}



inline void _1d62d883e_check_array(_1d62d791a_RangeChecker* _self_) {
	_1d62d808b_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ee53b5e5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1d6327c46_Arr> _113617_arr = _1d631ec0a_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1d62d7db0_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_113617_arr.get()._field_elem});
	_1d62d8476_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_113617_arr.get()._field_elem);
}



inline void _1d62d8a1a_check_map_key_a(_1d62d791a_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1ee53b5e5_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1d6327152_Map> _114817_m = _1d6320920_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1d62d7db0_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_114817_m.get()._field_key});
	jule::Ptr<_1d62e16b0_Data> _115217_d = jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d)));;
	_115217_d.get()._field_kind=_114817_m.get()._field_key;
	_1d62d8476_check_range_expr_validity(&(*_self_), _115217_d,(*_self_)._field_kind.get()._field_key_a,_114817_m.get()._field_key);
}



inline void _1d62d8be6_check_map_key_b(_1d62d791a_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ee53b5e5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1d6327152_Map> _116317_m = _1d6320920_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1d62d7db0_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_116317_m.get()._field_val});
	jule::Ptr<_1d62e16b0_Data> _116717_d = jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d)));;
	_116717_d.get()._field_kind=_116317_m.get()._field_val;
	_1d62d8476_check_range_expr_validity(&(*_self_), _116717_d,(*_self_)._field_kind.get()._field_key_b,_116317_m.get()._field_val);
}



inline void _1d62d8dc2_check_map(_1d62d791a_RangeChecker* _self_) {
	_1d62d8a1a_check_map_key_a(&(*_self_));
	_1d62d8be6_check_map_key_b(&(*_self_));
}



inline void _1d62d909d_check_str(_1d62d791a_RangeChecker* _self_) {
	_1d62d808b_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ee53b5e5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1d62d7db0_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1d62d9312_check(_1d62d791a_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1d8b8a0bc:;
		}
		else if ((_1d631ee6e_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8b89d69:;
			{
				_1d62d8663_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1d631ec0a_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8b89165:;
			{
				_1d62d883e_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1d6320920_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8b891cb:;
			{
				_1d62d8dc2_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1d8b890ee:;
			{
				jule::Ptr<_1d63218aa_Prim> _120617_prim = _1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_120617_prim != nullptr) && _1d6324ade_is_str(_120617_prim.ptr()))) {
					_1d62d909d_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1d8b89022:;
	};
	_1d62801cb_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62d791a_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1d62da05a_prepare_types(_1d62d9aa4_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1d567de7c_types((*_self_)._field_f.ptr());
	};
}



inline void _1d62da2d0_prepare_exprs(_1d62d9aa4_RetTypeChecker* _self_, jule::Ptr<_1d55adbae_Expr>& _123537_e) {
	if ((_123537_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123537_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55ae83b_TupleExpr>>()) {
			_case_begin_1d8b90105:;
			{
				(*_self_)._field_exprs=_123537_e.get()._field_kind.operator jule::Ptr<_1d55ae83b_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1d8b8ec70:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123537_e);;
			}
		}
		_match_end_1d8b8e830:;
	};
}



inline void _1d62da4ab_ret_vars(_1d62d9aa4_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1d567ac59_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1d6298ea3_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1d625c571_ScopeChecker> _125317_root_scope = _1d6260684_get_root((*_self_)._field_sc);;
	jule::I64 _125517_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1d8b92c0c:;
		if (it != expr.end()) {
			jule::I64 _125613_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _125616_ident = *it;
			{
				if (((!(_1ee53b5e5_is_ignore_ident(_125616_ident.get()._field_kind))) && (!(_1ee53b88c_is_anon_ident(_125616_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_125317_root_scope.get()._field_table.get()._field_vars[_125517_j]);;
					(_125517_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1d6298ea3_Var>(_1d6298ea3_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=(*_self_)._field_types[_125613_i]}), }));;
				};
			}
			_iter_next_1d8b92c0c:;
			++it;
			_125613_i++;
			goto _iter_begin_1d8b92c0c;
		}
		_iter_end_1d8b92c0c:;
	};
	if ((_125517_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1d62da687_check_exprs(_1d62d9aa4_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d62e16b0_Data>> _127917_datas = jule::Slice<jule::Ptr<_1d62e16b0_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d8b9697a:;
		if (it != expr.end()) {
			jule::I64 _128114_i = it - expr.begin();
			jule::Ptr<_1d55adbae_Expr> _128121_expr = *it;
			{
				if ((_128114_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1d8b9697a;
				};
				jule::Ptr<_1d631bdd3_TypeKind> _128621_t = (*_self_)._field_types[_128114_i];;
				jule::Ptr<_1d62e16b0_Data> _128821_d = _1d630d59a_eval_expr(_1d62854cd_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1d633797b_Lookup>((*_self_)._field_sc, 0),_128621_t), _128121_expr);;
				if ((_128821_d == nullptr)) {
					goto _iter_next_1d8b9697a;
				};
				_127917_datas = jule::alloc_for_append(_127917_datas,1);_127917_datas.__push(_128821_d);;
				if (((!(_128821_d.get()._field_mutable)) && _1d631d2d0_mutable(_128821_d.get()._field_kind.ptr()))) {
					_1d62801cb_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1d62cc16d_AssignTypeChecker _130021_ac = _1d62cc16d_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_128621_t, ._field_d=_128821_d, ._field_error_token=(*_self_)._field_error_token};;
				_1d62cd2e5_check(&_130021_ac);
			}
			_iter_next_1d8b9697a:;
			++it;
			_128114_i++;
			goto _iter_begin_1d8b9697a;
		}
		_iter_end_1d8b9697a:;
	};
	if ((_127917_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675c32_TupleExprModel>(_1d5675c32_TupleExprModel{._field_datas=_127917_datas}));
	} else if ((_127917_datas.len() == 1LL)) {
		(*_self_)._field_model=_127917_datas[0LL].get()._field_model;
	};
}



inline jule::Bool _1d62da995_check(_1d62d9aa4_RetTypeChecker* _self_, jule::Ptr<_1d55adbae_Expr>& _131929_e) {
	_1d62da05a_prepare_types(&(*_self_));
	_1d62da2d0_prepare_exprs(&(*_self_), _131929_e);
	_1d62da4ab_ret_vars(&(*_self_));
	jule::I64 _132413_n = (*_self_)._field_exprs.len();;
	if (((_132413_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1d567b96e_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1d62801cb_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_132413_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1d567ac59_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1d62801cb_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_132413_n > (*_self_)._field_types.len())) {
		_1d62801cb_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_132413_n < (*_self_)._field_types.len())) {
		_1d62801cb_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1d62da687_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62d9aa4_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d62dbe6e_find_package(_1d62db952_SymbolTable* _self_, jule::Str _2635_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1d8ba30c4:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_ident == _2635_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1d8ba30c4:;
			++it;
			goto _iter_begin_1d8ba30c4;
		}
		_iter_end_1d8ba30c4:;
	};
	return nullptr;
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d62dc27c_select_package(_1d62db952_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)> _3837_selector) {
	if ((_3837_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1d8ba4070:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _4321_pkg = *it;
			{
				if (_3837_selector(_4321_pkg)) {
					return _4321_pkg;
				};
			}
			_iter_next_1d8ba4070:;
			++it;
			goto _iter_begin_1d8ba4070;
		}
		_iter_end_1d8ba4070:;
	};
	return nullptr;
}



inline jule::Ptr<_1d6298ea3_Var> _1d62dc634_find_var(_1d62db952_SymbolTable* _self_, jule::Str _5331_ident, jule::Bool _5343_cpp_linked) {
	return _1d62de1e6___find_var(&(*_self_), _5331_ident,_5343_cpp_linked,false);
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d62dc9db_find_type_alias(_1d62db952_SymbolTable* _self_, jule::Str _5938_ident, jule::Bool _5950_cpp_linked) {
	return _1d62de647___find_type_alias(&(*_self_), _5938_ident,_5950_cpp_linked,false);
}



inline jule::Ptr<_1d5599dba_Struct> _1d62dcd93_find_struct(_1d62db952_SymbolTable* _self_, jule::Str _6534_ident, jule::Bool _6546_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1d8ba6acd:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _6621_s = *it;
			{
				if (((_6621_s.get()._field_ident == _6534_ident) && (_6621_s.get()._field_cpp_linked == _6546_cpp_linked))) {
					return _6621_s;
				};
			}
			_iter_next_1d8ba6acd:;
			++it;
			goto _iter_begin_1d8ba6acd;
		}
		_iter_end_1d8ba6acd:;
	};
	return nullptr;
}



inline jule::Ptr<_1d567a7e7_Fn> _1d62dd24a_find_fn(_1d62db952_SymbolTable* _self_, jule::Str _7630_ident, jule::Bool _7642_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1d8ba8063:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _7721_f = *it;
			{
				if (((_7721_f.get()._field_ident == _7630_ident) && (_7721_f.get()._field_cpp_linked == _7642_cpp_linked))) {
					return _7721_f;
				};
			}
			_iter_next_1d8ba8063:;
			++it;
			goto _iter_begin_1d8ba8063;
		}
		_iter_end_1d8ba8063:;
	};
	return nullptr;
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d62dd558_find_trait(_1d62db952_SymbolTable* _self_, jule::Str _8733_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1d8ba92d9:;
		if (it != expr.end()) {
			jule::Ptr<_1d59c3e1a_Trait> _8821_t = *it;
			{
				if ((_8821_t.get()._field_ident == _8733_ident)) {
					return _8821_t;
				};
			}
			_iter_next_1d8ba92d9:;
			++it;
			goto _iter_begin_1d8ba92d9;
		}
		_iter_end_1d8ba92d9:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5692820_Enum> _1d62dd866_find_enum(_1d62db952_SymbolTable* _self_, jule::Str _9832_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1d8baa274:;
		if (it != expr.end()) {
			jule::Ptr<_1d5692820_Enum> _9921_e = *it;
			{
				if ((_9921_e.get()._field_ident == _9832_ident)) {
					return _9921_e;
				};
			}
			_iter_next_1d8baa274:;
			++it;
			goto _iter_begin_1d8baa274;
		}
		_iter_end_1d8baa274:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d62ddb74_find_type_enum(_1d62db952_SymbolTable* _self_, jule::Str _10937_ident) {
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1d8baa74c:;
		if (it != expr.end()) {
			jule::Ptr<_1d5a788b5_TypeEnum> _11021_e = *it;
			{
				if ((_11021_e.get()._field_ident == _10937_ident)) {
					return _11021_e;
				};
			}
			_iter_next_1d8baa74c:;
			++it;
			goto _iter_begin_1d8baa74c;
		}
		_iter_end_1d8baa74c:;
	};
	return nullptr;
}



inline jule::Ptr<_1d6298ea3_Var> _1d62de1e6___find_var(_1d62db952_SymbolTable* _self_, jule::Str _12029_ident, jule::Bool _12041_cpp_linked, jule::Bool _12059_reverse) {
	if (_12059_reverse) {
		jule::I64 _12221_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_12221_i >= 0LL); (_12221_i)--) {
			{
				jule::Ptr<_1d6298ea3_Var> _12425_v = (*_self_)._field_vars[_12221_i];;
				if (((_12425_v.get()._field_ident == _12029_ident) && (_12425_v.get()._field_cpp_linked == _12041_cpp_linked))) {
					return _12425_v;
				};
			}
		_iter_next_1d8bad299:;
		}
		_iter_end_1d8bad299:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1d8bacc05:;
			if (it != expr.end()) {
				jule::Ptr<_1d6298ea3_Var> _13025_v = *it;
				{
					if (((_13025_v.get()._field_ident == _12029_ident) && (_13025_v.get()._field_cpp_linked == _12041_cpp_linked))) {
						return _13025_v;
					};
				}
				_iter_next_1d8bacc05:;
				++it;
				goto _iter_begin_1d8bacc05;
			}
			_iter_end_1d8bacc05:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d62de647___find_type_alias(_1d62db952_SymbolTable* _self_, jule::Str _13936_ident, jule::Bool _13948_cpp_linked, jule::Bool _13966_reverse) {
	if (_13966_reverse) {
		jule::I64 _14121_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_14121_i >= 0LL); (_14121_i)--) {
			{
				jule::Ptr<_1d631b1e0_TypeAlias> _14325_ta = (*_self_)._field_type_aliases[_14121_i];;
				if (((_14325_ta.get()._field_ident == _13936_ident) && (_14325_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
					return _14325_ta;
				};
			}
		_iter_next_1d8bb1577:;
		}
		_iter_end_1d8bb1577:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1d8bb0ed3:;
			if (it != expr.end()) {
				jule::Ptr<_1d631b1e0_TypeAlias> _14925_ta = *it;
				{
					if (((_14925_ta.get()._field_ident == _13936_ident) && (_14925_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
						return _14925_ta;
					};
				}
				_iter_next_1d8bb0ed3:;
				++it;
				goto _iter_begin_1d8bb0ed3;
			}
			_iter_end_1d8bb0ed3:;
		};
	};
	return nullptr;
}



inline jule::Any _1d62de9ee_def_by_ident(_1d62db952_SymbolTable* _self_, jule::Str _16031_ident, jule::Bool _16043_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1d8bb2eb3:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> _16121_v = *it;
			{
				if (((_16121_v.get()._field_ident == _16031_ident) && (_16121_v.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16121_v);
				};
			}
			_iter_next_1d8bb2eb3:;
			++it;
			goto _iter_begin_1d8bb2eb3;
		}
		_iter_end_1d8bb2eb3:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1d8bb47de:;
		if (it != expr.end()) {
			jule::Ptr<_1d631b1e0_TypeAlias> _16721_ta = *it;
			{
				if (((_16721_ta.get()._field_ident == _16031_ident) && (_16721_ta.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16721_ta);
				};
			}
			_iter_next_1d8bb47de:;
			++it;
			goto _iter_begin_1d8bb47de;
		}
		_iter_end_1d8bb47de:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1d8bb55d1:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _17321_s = *it;
			{
				if (((_17321_s.get()._field_ident == _16031_ident) && (_17321_s.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17321_s);
				};
			}
			_iter_next_1d8bb55d1:;
			++it;
			goto _iter_begin_1d8bb55d1;
		}
		_iter_end_1d8bb55d1:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1d8bb645b:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _17921_f = *it;
			{
				if (((_17921_f.get()._field_ident == _16031_ident) && (_17921_f.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17921_f);
				};
			}
			_iter_next_1d8bb645b:;
			++it;
			goto _iter_begin_1d8bb645b;
		}
		_iter_end_1d8bb645b:;
	};
	if (_16043_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1d8bb7803:;
		if (it != expr.end()) {
			jule::Ptr<_1d59c3e1a_Trait> _18921_t = *it;
			{
				if ((_18921_t.get()._field_ident == _16031_ident)) {
					return jule::Any(_18921_t);
				};
			}
			_iter_next_1d8bb7803:;
			++it;
			goto _iter_begin_1d8bb7803;
		}
		_iter_end_1d8bb7803:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1d8bb823d:;
		if (it != expr.end()) {
			jule::Ptr<_1d5692820_Enum> _19521_e = *it;
			{
				if ((_19521_e.get()._field_ident == _16031_ident)) {
					return jule::Any(_19521_e);
				};
			}
			_iter_next_1d8bb823d:;
			++it;
			goto _iter_begin_1d8bb823d;
		}
		_iter_end_1d8bb823d:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1d8bb8eb9:;
		if (it != expr.end()) {
			jule::Ptr<_1d5a788b5_TypeEnum> _20121_te = *it;
			{
				if ((_20121_te.get()._field_ident == _16031_ident)) {
					return jule::Any(_20121_te);
				};
			}
			_iter_next_1d8bb8eb9:;
			++it;
			goto _iter_begin_1d8bb8eb9;
		}
		_iter_end_1d8bb8eb9:;
	};
	return nullptr;
}



inline jule::Bool _1d62dee50_is_duplicated_ident(_1d62db952_SymbolTable* _self_, jule::Uintptr _21334_itself, jule::Str _21351_ident, jule::Bool _21363_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1d8bb9618:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> &_21416_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21416_v) != _21334_itself) && (_21416_v.get()._field_ident == _21351_ident)) && (_21416_v.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1d8bb9618:;
			++it;
			goto _iter_begin_1d8bb9618;
		}
		_iter_end_1d8bb9618:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1d8bbb296:;
		if (it != expr.end()) {
			jule::Ptr<_1d631b1e0_TypeAlias> &_22016_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22016_ta) != _21334_itself) && (_22016_ta.get()._field_ident == _21351_ident)) && (_22016_ta.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1d8bbb296:;
			++it;
			goto _iter_begin_1d8bbb296;
		}
		_iter_end_1d8bbb296:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1d8bbae44:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> &_22616_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22616_s) != _21334_itself) && (_22616_s.get()._field_ident == _21351_ident)) && (_22616_s.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1d8bbae44:;
			++it;
			goto _iter_begin_1d8bbae44;
		}
		_iter_end_1d8bbae44:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1d8bbc0aa:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> &_23216_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23216_f) != _21334_itself) && (_23216_f.get()._field_ident == _21351_ident)) && (_23216_f.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1d8bbc0aa:;
			++it;
			goto _iter_begin_1d8bbc0aa;
		}
		_iter_end_1d8bbc0aa:;
	};
	if (_21363_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1d8bbebb2:;
		if (it != expr.end()) {
			jule::Ptr<_1d59c3e1a_Trait> &_24216_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24216_t) != _21334_itself) && (_24216_t.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1d8bbebb2:;
			++it;
			goto _iter_begin_1d8bbebb2;
		}
		_iter_end_1d8bbebb2:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1d8bc0850:;
		if (it != expr.end()) {
			jule::Ptr<_1d5692820_Enum> &_24816_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24816_e) != _21334_itself) && (_24816_e.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1d8bc0850:;
			++it;
			goto _iter_begin_1d8bc0850;
		}
		_iter_end_1d8bc0850:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1d8bc182e:;
		if (it != expr.end()) {
			jule::Ptr<_1d5a788b5_TypeEnum> &_25416_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25416_te) != _21334_itself) && (_25416_te.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1d8bc182e:;
			++it;
			goto _iter_begin_1d8bc182e;
		}
		_iter_end_1d8bc182e:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62db952_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "type_enums:" << _Src._field_type_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d62e1a9a_is_nil(_1d62e16b0_Data* _self_) {
	return _1d631cd07_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1d62e1d0e_is_void(_1d62e16b0_Data* _self_) {
	return _1d631d06b_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1d62e2073_is_const(_1d62e16b0_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1d62e2381_good_operand(_1d62e16b0_Data* _self_, jule::Ptr<_1d62e16b0_Data>& _9636_other) {
	if ((_1d631e996_tenm(_9636_other.get()._field_kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1d631dee5_prim(_9636_other.get()._field_kind.ptr()) == nullptr) || (!(_1d6324d53_is_any(_1d631dee5_prim(_9636_other.get()._field_kind.ptr()).ptr())))) && (_1d63206ab_trt(_9636_other.get()._field_kind.ptr()) == nullptr)) && (!(_1d631cd07_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1d62e16b0_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d62e2738_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1d62e3739_push_err(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _12727_token, jule::Str _12742_fmt, jule::Slice<jule::Any> _12755_args) {
	_1d62801cb_push_err((*_self_)._field_s.ptr(), _12727_token,_12742_fmt,jule::Any(_12755_args));
}



inline void _1d62e3a58_push_suggestion(_1d62e322d_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1d62804ea_push_suggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1d62e3c34_allow_builtin(_1d62e322d_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1d62e3e10_disallow_builtin(_1d62e322d_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1d62e4174_is_unsafe(_1d62e322d_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1d62e43d8_is_global(_1d62e322d_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d627c519_Sema>>()) {
			_case_begin_1d8c06985:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d8c06875:;
			{
				return false;
			}
		}
		_match_end_1d8c0648a:;
	};
}



inline jule::Bool _1d62e46b3_apply_numeric_prefix(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _15944_d) {
	if (((((_15944_d == nullptr) || (!(_1d62e2073_is_const(_15944_d.ptr())))) || (_1d631dee5_prim(_15944_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1d63218aa_Prim> _16613_prim = _1d631dee5_prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1d6255008_is_float(_1d6321c1d_to_str(_16613_prim.ptr()))) {
			_case_begin_1d8c09290:;
			{
				_15944_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>((*((*_self_)._field_prefix)));
				_1d566ce49_set_f64(_15944_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1d566c1ce_as_f64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_1d6254656_is_sig_int(_1d6321c1d_to_str(_16613_prim.ptr()))) {
			_case_begin_1d8c09306:;
			{
				if ((!(_1d62b2719_sig_assignable(_1d6321c1d_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>((*((*_self_)._field_prefix)));
				_1d566c454_set_i64(_15944_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_1d6254942_is_unsig_int(_1d6321c1d_to_str(_16613_prim.ptr()))) {
			_case_begin_1d8c0936c:;
			{
				if ((!(_1d62c92be_unsig_assignable(_1d6321c1d_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>((*((*_self_)._field_prefix)));
				_1d566c6c9_set_u64(_15944_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64(_15944_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1d8c0904d:;
	};
	return true;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e4927_lit_nil(_1d62e322d_Eval* _self_) {
	jule::Ptr<_1d561288e_Const> _19517_constant = static__1d566a8e7_new_nil();;
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_19517_constant), ._field_decl=false, ._field_constant=_19517_constant});
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e4c35_lit_str(_1d62e322d_Eval* _self_, jule::Ptr<_1d55aebe3_LitExpr>& _20623_l) {
	jule::Str _20717_s = _20623_l.get()._field_value.slice(1LL,(_20623_l.get()._field_value.len() - 1LL));;
	if (_1ee53a1a4_is_raw_str(_20623_l.get()._field_value)) {
		_20717_s=_1d62b2483_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	} else {
		_20717_s=_1d62c9797_to_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	};
	jule::Ptr<_1d561288e_Const> _21317_constant = static__1d566a452_new_str(_20717_s);;
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("str", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_21317_constant), ._field_decl=false, ._field_constant=_21317_constant});
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e5043_lit_bool(_1d62e322d_Eval* _self_, jule::Ptr<_1d55aebe3_LitExpr>& _22724_l) {
	jule::Ptr<_1d561288e_Const> _22817_constant = static__1d566a221_new_bool((_22724_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_22817_constant), ._field_decl=false, ._field_constant=_22817_constant});
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e5351_lit_rune(_1d62e322d_Eval* _self_, jule::Ptr<_1d55aebe3_LitExpr>& _24124_l) {
	;
	;
	jule::Str _24513_lt = _24124_l.get()._field_value.slice(1LL,(_24124_l.get()._field_value.len() - 1LL));;
	jule::I32 _24613_r = _1d62c7b08_to_rune(static_cast<jule::Slice<jule::U8>>(_24513_lt));;
	jule::Ptr<_1d62e16b0_Data> _24717_data = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__1d5669eac_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24613_r)))});;
	jule::Bool _25513_is_ascii = _1d62b5d7c_is_ascii(_24613_r);;
	if (_25513_is_ascii) {
		_24717_data.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u8", 2)), 6)});
	} else {
		_24717_data.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i32", 3)), 6)});
	};
	_24717_data.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56779ae_RuneExprModel>(_1d56779ae_RuneExprModel{._field_code=_24613_r}));
	_24717_data.get()._field_is_rune=true;
	return _24717_data;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e565e_lit_float(_1d62e322d_Eval* _self_, jule::Ptr<_1d55aebe3_LitExpr>& _27125_l) {
	;
	jule::F64 _27413_f = ({
		auto except = _1d5e23b83_parse_float(_27125_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1d561288e_Const> _27517_constant = static__1d566a6e9_new_f64(_27413_f);;
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_27517_constant), ._field_decl=false, ._field_constant=_27517_constant});
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e596c_lit_int(_1d62e322d_Eval* _self_, jule::Ptr<_1d55aebe3_LitExpr>& _28927_l) {
	;
	jule::Str _29217_lit = _28927_l.get()._field_value;;
	jule::I64 _29317_base = 0LL;;
	{
		
		if (_2185eacc8_has_prefix(_29217_lit,jule::Str("0x", 2))) {
			_case_begin_1d8c1aec7:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=16LL;
			}
		}
		else if (_2185eacc8_has_prefix(_29217_lit,jule::Str("0b", 2))) {
			_case_begin_1d8c1aba8:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=2LL;
			}
		}
		else if (_2185eacc8_has_prefix(_29217_lit,jule::Str("0o", 2))) {
			_case_begin_1d8c1ac1e:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=8LL;
			}
		}
		else if (((_29217_lit[0LL] == '0') && (_29217_lit.len() > 1LL))) {
			_case_begin_1d8c1a89a:;
			{
				(_29217_lit).mut_slice(1LL);;
				_29317_base=8LL;
			}
		}
		else {
			_case_begin_1d8c1a834:;
			{
				_29317_base=10LL;
			}
		}
		_match_end_1d8c1a7ce:;
	};
	jule::Ptr<_1d62e16b0_Data> _31317_d = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31917_ok = true;;
	jule::I64 _32013_sig = ({
		auto except = _1d5de8927_parse_int(_29217_lit,_29317_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31917_ok=false;
			0LL;
		});
	});;
	if (_31917_ok) {
		_31317_d.get()._field_constant=static__1d5669eac_new_i64(_32013_sig);
		_31317_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _33017_unsig = ({
			auto except = _1d5dc7186_parse_uint(_29217_lit,_29317_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1d62e3739_push_err(&(*_self_), _28927_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1d62e3a58_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_31317_d.get()._field_constant=static__1d566a0de_new_u64(_33017_unsig);
		_31317_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("uint", 4)), 6)});
	};
	_31317_d.get()._field_model=static_cast<jule::Any>(_31317_d.get()._field_constant);
	if ((!(_1d62e46b3_apply_numeric_prefix(&(*_self_), _31317_d)))) {
		_1d6316b58_fit_bitsize(_31317_d);
	};
	return _31317_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e5c7a_lit_num(_1d62e322d_Eval* _self_, jule::Ptr<_1d55aebe3_LitExpr>& _35127_l) {
	{
		
		if (_1ee53ad0e_is_float(_35127_l.get()._field_value)) {
			_case_begin_1d8c23d6a:;
			{
				return _1d62e565e_lit_float(&(*_self_), _35127_l);
			}
		}
		else {
			_case_begin_1d8c2360b:;
			{
				return _1d62e596c_lit_int(&(*_self_), _35127_l);
			}
		}
		_match_end_1d8c23551:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e6088_eval_lit(_1d62e322d_Eval* _self_, jule::Ptr<_1d55aebe3_LitExpr> _36027_lit) {
	{
		
		if (_1d55b0045_is_nil(_36027_lit.ptr())) {
			_case_begin_1d8c250ad:;
			{
				return _1d62e4927_lit_nil(&(*_self_));
			}
		}
		else if (_1ee539e0c_is_str(_36027_lit.get()._field_value)) {
			_case_begin_1d8c249b4:;
			{
				return _1d62e4c35_lit_str(&(*_self_), _36027_lit);
			}
		}
		else if (_1ee53aa67_is_bool(_36027_lit.get()._field_value)) {
			_case_begin_1d8c24a3b:;
			{
				return _1d62e5043_lit_bool(&(*_self_), _36027_lit);
			}
		}
		else if (_1ee53a44b_is_rune(_36027_lit.get()._field_value)) {
			_case_begin_1d8c24ab3:;
			{
				return _1d62e5351_lit_rune(&(*_self_), _36027_lit);
			}
		}
		else if (_1ee53b0a6_is_num(_36027_lit.get()._field_value)) {
			_case_begin_1d8c24cb1:;
			{
				return _1d62e5c7a_lit_num(&(*_self_), _36027_lit);
			}
		}
		else {
			_case_begin_1d8c24420:;
			{
				return nullptr;
			}
		}
		_match_end_1d8c24365:;
	};
}



inline jule::Any _1d62e6396_find_builtins(_1d62e322d_Eval* _self_, jule::Str _37732_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d62743bd_ImportInfo>>()) {
			_case_begin_1d8c25366:;
			{
				jule::Any _38021_def = _1d6316949_find_builtins_import(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1d62743bd_ImportInfo>());;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d627c519_Sema>>()) {
			_case_begin_1d8c253dd:;
			{
				jule::Any _38521_def = _1d63175d7_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1d627c519_Sema>());;
				if ((_38521_def != nullptr)) {
					return jule::Any(_38521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d8c27742:;
			{
				jule::Any _39021_def = _1d63175d7_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>().get()._field_s);;
				if ((_39021_def != nullptr)) {
					return jule::Any(_39021_def);
				};
			}
		}
		_match_end_1d8c25311:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1d6343c73_find_builtin_def(_37732_ident));
}



inline jule::Any _1d62e674d_get_def(_1d62e322d_Eval* _self_, jule::Str _40126_ident, jule::Bool _40138_cpp_linked) {
	if ((!(_40138_cpp_linked))) {
		jule::Ptr<_1d5692820_Enum> _40321_enm = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d633752a_find_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40321_enm != nullptr)) {
			return jule::Any(_40321_enm);
		};
		jule::Ptr<_1d5a788b5_TypeEnum> _40821_tenm = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d6337838_find_type_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40821_tenm != nullptr)) {
			return jule::Any(_40821_tenm);
		};
	};
	jule::Ptr<_1d6298ea3_Var> _41417_v = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d63362e8_find_var((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41417_v != nullptr)) {
		return jule::Any(_41417_v);
	};
	jule::Ptr<_1d567a7e7_Fn> _41917_f = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d6336e0e_find_fn((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41917_f != nullptr)) {
		return jule::Any(_41917_f);
	};
	jule::Ptr<_1d5599dba_Struct> _42417_s = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d6336a57_find_struct((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42417_s != nullptr)) {
		return jule::Any(_42417_s);
	};
	jule::Ptr<_1d631b1e0_TypeAlias> _42917_ta = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d63366a0_find_type_alias((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42917_ta != nullptr)) {
		return jule::Any(_42917_ta);
	};
	return jule::Any(_1d62e6396_find_builtins(&(*_self_), _40126_ident));
}



inline void _1d8c3e2a3_push_reference(_1d62e322d_Eval* _self_, jule::Ptr<_1d567d498_FnIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d8c4053a:;
			{
				jule::Ptr<_1d625c571_ScopeChecker> _44021_sc = _1d62608e8_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>());;
				if ((!(_1d8c41b24_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1d5681963_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1d8c407b0:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1d8c41b24_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1d5681963_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1d8c4075a:;
	};
}

inline void _1d8c54054_push_reference(_1d62e322d_Eval* _self_, jule::Ptr<_1d6298ea3_Var>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d8c559e5:;
			{
				jule::Ptr<_1d625c571_ScopeChecker> _44021_sc = _1d62608e8_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>());;
				if ((!(_1d8c56661_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1d5681963_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1d8c5531e:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1d8c56661_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1d5681963_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1d8c552b9:;
	};
}

inline void _1d8cd8bbb_push_reference(_1d62e322d_Eval* _self_, jule::Ptr<_1d55c62d1_StructIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d8cda87c:;
			{
				jule::Ptr<_1d625c571_ScopeChecker> _44021_sc = _1d62608e8_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>());;
				if ((!(_1d8cdb4e8_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1d5681963_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1d8cda1a6:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1d8cdb4e8_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1d5681963_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1d8cda151:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e6cd1___eval_enum(_1d62e322d_Eval* _self_, jule::Ptr<_1d5692820_Enum> _45130_enm) {
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_45130_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e7188_eval_enum(_1d62e322d_Eval* _self_, jule::Ptr<_1d5692820_Enum> _46332_enm, jule::Ptr<_1ee538d51_Token> _46344_error_token) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _46332_enm.get()._field_public,_46332_enm.get()._field_token)))) {
		_1d62e3739_push_err(&(*_self_), _46344_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46332_enm.get()._field_ident)}));
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1d62e6cd1___eval_enum(&(*_self_), _46332_enm);
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e7496___eval_type_enum(_1d62e322d_Eval* _self_, jule::Ptr<_1d5a788b5_TypeEnum> _47235_enm) {
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_47235_enm, 4)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e784d_eval_type_enum(_1d62e322d_Eval* _self_, jule::Ptr<_1d5a788b5_TypeEnum> _48437_enm, jule::Ptr<_1ee538d51_Token> _48453_error_token) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _48437_enm.get()._field_public,_48437_enm.get()._field_token)))) {
		_1d62e3739_push_err(&(*_self_), _48453_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_48437_enm.get()._field_ident)}));
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1d62e7496___eval_type_enum(&(*_self_), _48437_enm);
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e7b5b___eval_struct(_1d62e322d_Eval* _self_, jule::Ptr<_1d55c62d1_StructIns> _49332_s) {
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_49332_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_49332_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e8013_eval_struct(_1d62e322d_Eval* _self_, jule::Ptr<_1d55c62d1_StructIns> _50634_s, jule::Ptr<_1ee538d51_Token> _50649_error_token) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _50634_s.get()._field_decl.get()._field_public,_50634_s.get()._field_decl.get()._field_token)))) {
		_1d62e3739_push_err(&(*_self_), _50649_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50634_s.get()._field_decl.get()._field_ident)}));
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1d62e8640_check_deprecated(&(*_self_), _50634_s.get()._field_decl.get()._field_directives,_50649_error_token);
	return _1d62e7b5b___eval_struct(&(*_self_), _50634_s);
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e8321_eval_fn_ins(_1d62e322d_Eval* _self_, jule::Ptr<_1d567d498_FnIns> _51630_f) {
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_51630_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_51630_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _1d62e8640_check_deprecated(_1d62e322d_Eval* _self_, jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _52940_directives, jule::Ptr<_1ee538d51_Token> _52971_tok) {
	if (_1d62e4174_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1d5575c86_Directive> _53413_d = _1d63165b4_find_directive(_52940_directives,jule::Str("deprecated", 10));;
	if ((_53413_d != nullptr)) {
		if ((_53413_d.get()._field_args.len() == 0LL)) {
			_1d62e3739_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1d62e3739_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_53413_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e89e7_eval_fn(_1d62e322d_Eval* _self_, jule::Ptr<_1d567a7e7_Fn> _54530_f, jule::Ptr<_1ee538d51_Token> _54538_error_token) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _54530_f.get()._field_public,_54530_f.get()._field_token)))) {
		_1d62e3739_push_err(&(*_self_), _54538_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_54530_f.get()._field_ident)}));
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1d62e8640_check_deprecated(&(*_self_), _54530_f.get()._field_directives,_54538_error_token);
	jule::Ptr<_1d567d498_FnIns> _55417_ins = _1d567be47_instance(_54530_f);;
	_1d8c3e2a3_push_reference(&(*_self_), _55417_ins);
	return _1d62e8321_eval_fn_ins(&(*_self_), _55417_ins);
}



inline void _1d62e8dd2_push_illegal_cycle_error(_1d62e322d_Eval* _self_, jule::Ptr<_1d6298ea3_Var>& _55944_v1, jule::Ptr<_1d6298ea3_Var>& _55955_v2, jule::Str& _55970_message) {
	;
	jule::Str _56113_refers_to = _21868a8c3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_55944_v1.get()._field_ident),jule::Any(_55955_v2.get()._field_ident)}));;
	(_55970_message).buffer.insert(0, (((_2185adecd_repeat(jule::Str(" ", 1),4LL) + _56113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d62e929a_check_cross_cycle(_1d62e322d_Eval* _self_, jule::Ptr<_1d6298ea3_Var>& _56537_v, jule::Str& _56551_message) {
	{
		auto &expr = _56537_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1d8c47003:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> &_56616_d = *it;
			{
				if ((_56616_d == (*_self_)._field_owner)) {
					_1d62e8dd2_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
				if ((!(_1d62e929a_check_cross_cycle(&(*_self_), _56616_d,_56551_message)))) {
					_1d62e8dd2_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
			}
			_iter_next_1d8c47003:;
			++it;
			goto _iter_begin_1d8c47003;
		}
		_iter_end_1d8c47003:;
	};
	return true;
}



inline jule::Bool _1d62e9652_check_illegal_cycles(_1d62e322d_Eval* _self_, jule::Ptr<_1d6298ea3_Var>& _58444_v, jule::Ptr<_1ee538d51_Token> _58453_decl_token) {
	jule::Bool _58475_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_58475_ok = true;
		return _58475_ok;
	};
	if (((*_self_)._field_owner == _58444_v)) {
		_1d62e3739_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_58475_ok = false;
		return _58475_ok;
	};
	jule::Str _59617_message = jule::Str();;
	if ((!(_1d62e929a_check_cross_cycle(&(*_self_), _58444_v,_59617_message)))) {
		jule::Str _59921_err_msg = _59617_message;;
		_59617_message=jule::Str();
		_1d62e8dd2_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_58444_v,_59617_message);
		_59921_err_msg=(_59921_err_msg + _59617_message);
		_1d62e3739_push_err(&(*_self_), _58453_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_59921_err_msg)}));
		_58475_ok = false;
		return _58475_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_58444_v);;
	_58475_ok = true;
	return _58475_ok;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e9a09_eval_var(_1d62e322d_Eval* _self_, jule::Ptr<_1d6298ea3_Var> _61131_v, jule::Ptr<_1ee538d51_Token> _61140_error_token) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _61131_v.get()._field_public,_61131_v.get()._field_token)))) {
		_1d62e3739_push_err(&(*_self_), _61140_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1d62e8640_check_deprecated(&(*_self_), _61131_v.get()._field_directives,_61140_error_token);
	_61131_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d627c519_Sema>>()) {
			_case_begin_1d8c4ec20:;
			{
				jule::Bool _62517_ok = _1d62e9652_check_illegal_cycles(&(*_self_), _61131_v,_61140_error_token);;
				if ((!(_62517_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d8c4ecca:;
			{
				if (((!(_61131_v.get()._field_reference)) || _1d62e4174_is_unsafe(&(*_self_)))) {
					goto _match_end_1d8c4ebba;
				};
				jule::Ptr<_1d625c571_ScopeChecker> _63321_s = (*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>();;
				while (((_63321_s.get()._field_owner == nullptr) && (_63321_s.get()._field_parent != nullptr))) {
					{
						_63321_s=_63321_s.get()._field_parent;
					}
				_iter_next_1d8c51d65:;
				}
				_iter_end_1d8c51d65:;;
				if ((((_63321_s.get()._field_owner != nullptr) && _63321_s.get()._field_owner.get()._field_anon) && (_61131_v.get()._field_scope != _63321_s.get()._field_owner.get()._field_scope))) {
					_1d62e3739_push_err(&(*_self_), _61140_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1d8c4ebba:;
	};
	if ((_61131_v.get()._field_scope == nullptr)) {
		_1d8c54054_push_reference(&(*_self_), _61131_v);
	};
	if (((!(_61131_v.get()._field_cpp_linked)) && ((_61131_v.get()._field_value == nullptr) || (_61131_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_61131_v.get()._field_constant) {
			_1d6291a17_check_type_var((*_self_)._field_s, _61131_v,jule::Trait<_1d633797b_Lookup>((*_self_)._field_s, 3));
			if ((_61131_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_61131_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1d6291a17_check_type_var((*_self_)._field_s, _61131_v,(*_self_)._field_lookup);
		if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1d62e16b0_Data> _67617_d = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=_61131_v.get()._field_kind.get()._field_kind, ._field_mutable=_61131_v.get()._field_mutable, ._field_reference=_61131_v.get()._field_reference, ._field_lvalue=(!(_61131_v.get()._field_constant)), ._field_model=static_cast<jule::Any>(_61131_v), });;
	if ((((!(_61131_v.get()._field_cpp_linked)) && _1d629935a_is_initialized(_61131_v.ptr())) && (_61131_v.get()._field_value.get()._field_data != nullptr))) {
		_67617_d.get()._field_is_rune=_61131_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_61131_v.get()._field_constant && (_61131_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_67617_d.get()._field_constant=jule::new_ptr<_1d561288e_Const>((*(_61131_v.get()._field_value.get()._field_data.get()._field_constant)));
		_67617_d.get()._field_model=static_cast<jule::Any>(_67617_d.get()._field_constant);
	};
	if (_1d62e2073_is_const(_67617_d.ptr())) {
		_1d62e46b3_apply_numeric_prefix(&(*_self_), _67617_d);
	};
	return _67617_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62e9db1_eval_type_alias(_1d62e322d_Eval* _self_, jule::Ptr<_1d631b1e0_TypeAlias> _70038_ta, jule::Ptr<_1ee538d51_Token> _70054_error_token) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _70038_ta.get()._field_public,_70038_ta.get()._field_token)))) {
		_1d62e3739_push_err(&(*_self_), _70054_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_70038_ta.get()._field_ident)}));
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70038_ta.get()._field_used=true;
	jule::Trait<_1d631b9a4_Kind> _70917_kind = _70038_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1d62e16b0_Data> _71017_d = nullptr;;
	{
		auto &_match_expr{ _70917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55c62d1_StructIns>>()) {
			_case_begin_1d8c64dab:;
			{
				_71017_d=_1d62e7b5b___eval_struct(&(*_self_), _70917_kind.operator jule::Ptr<_1d55c62d1_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5692820_Enum>>()) {
			_case_begin_1d8c6540b:;
			{
				_71017_d=_1d62e6cd1___eval_enum(&(*_self_), _70917_kind.operator jule::Ptr<_1d5692820_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5a788b5_TypeEnum>>()) {
			_case_begin_1d8c64031:;
			{
				_71017_d=_1d62e7496___eval_type_enum(&(*_self_), _70917_kind.operator jule::Ptr<_1d5a788b5_TypeEnum>());
			}
		}
		else {
			_case_begin_1d8c63e10:;
			{
				_71017_d=jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=_70038_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_70038_ta.get()._field_cpp_linked) {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_ident;
				} else {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_71017_d.get()._field_model=static_cast<jule::Any>(_71017_d.get()._field_kind);
			}
		}
		_match_end_1d8c63daa:;
	};
	_71017_d.get()._field_kind.get()._field_generic=_70038_ta.get()._field_generic;
	return _71017_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62ea268_eval_def(_1d62e322d_Eval* _self_, jule::Any _73631_def, jule::Ptr<_1ee538d51_Token> _73641_ident) {
	{
		auto &_match_expr{ _73631_def };
		
		if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d8c67d6a:;
			{
				return _1d62e9a09_eval_var(&(*_self_), _73631_def.operator jule::Ptr<_1d6298ea3_Var>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5692820_Enum>>()) {
			_case_begin_1d8c67dd1:;
			{
				return _1d62e7188_eval_enum(&(*_self_), _73631_def.operator jule::Ptr<_1d5692820_Enum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5a788b5_TypeEnum>>()) {
			_case_begin_1d8c67e47:;
			{
				return _1d62e784d_eval_type_enum(&(*_self_), _73631_def.operator jule::Ptr<_1d5a788b5_TypeEnum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d8c67ebe:;
			{
				return _1d62e8013_eval_struct(&(*_self_), _1d55820b1_instance(_73631_def.operator jule::Ptr<_1d5599dba_Struct>()),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567a7e7_Fn>>()) {
			_case_begin_1d8c68035:;
			{
				jule::Ptr<_1d567a7e7_Fn> _74721_f = _73631_def.operator jule::Ptr<_1d567a7e7_Fn>();;
				if ((_74721_f.get()._field_ident != jule::Str("init", 4))) {
					return _1d62e89e7_eval_fn(&(*_self_), _74721_f,_73641_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567d498_FnIns>>()) {
			_case_begin_1d8c680ac:;
			{
				return _1d62e8321_eval_fn_ins(&(*_self_), _73631_def.operator jule::Ptr<_1d567d498_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d631b1e0_TypeAlias>>()) {
			_case_begin_1d8c68134:;
			{
				return _1d62e9db1_eval_type_alias(&(*_self_), _73631_def.operator jule::Ptr<_1d631b1e0_TypeAlias>(),_73641_ident);
			}
		}
		_match_end_1d8c67c7c:;
	};
	_1d62e3739_push_err(&(*_self_), _73641_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_73641_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62ea576_eval_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d55b0c27_IdentExpr> _76029_ident) {
	jule::Any _76117_def = _1d62e674d_get_def(&(*_self_), _76029_ident.get()._field_ident,_76029_ident.get()._field_cpp_linked);;
	return _1d62ea268_eval_def(&(*_self_), jule::Any(_76117_def),_76029_ident.get()._field_token);
}



inline jule::Ptr<_1d62e16b0_Data> _1d62ea884_eval_unary(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b1431_UnaryExpr> _76534_u) {
	_1d630da1d_UnaryEval _76617_unary = static__1d630dec4_new(_self_);;
	return _1d631026c_eval(&_76617_unary, _76534_u);
}



inline jule::Ptr<_1d62e16b0_Data> _1d62eab92_eval_variadic(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b17d8_VariadicExpr> _77037_v) {
	if ((_77037_v.get()._field_expr == nullptr)) {
		_1d62e3739_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _77617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77617_prefix;
	});;
	jule::Ptr<_1d62e16b0_Data> _78017_d = _1d630ce7e_eval_expr_kind(_self_, _77037_v.get()._field_expr.get()._field_kind);;
	if ((_78017_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1d631dc81_variadicable(_78017_d.get()._field_kind.ptr())))) {
		_1d62e3739_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_78017_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1d6325a9b_Slc> _79013_slc = _1d631ee6e_slc(_78017_d.get()._field_kind.ptr());;
	_78017_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_cpp_ident=_79013_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_79013_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_79013_slc.get()._field_elem.get()._field_kind});
	return _78017_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62eaea0_eval_unsafe(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b03ec_UnsafeExpr> _80035_u) {
	jule::Bool _80113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1d62e16b0_Data> _80417_d = _1d630ce7e_eval_expr_kind(_self_, _80035_u.get()._field_expr.get()._field_kind);;
	_self_.get()._field_unsafety=_80113_unsafety;
	return _80417_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62eb2ad_eval_arr(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b5633_SliceExpr> _81132_s) {
	jule::Ptr<_1d6327c46_Arr> _81317_pt = _1d631ec0a_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1d6327c46_Arr> _81517_arr = jule::new_ptr<_1d6327c46_Arr>(_1d6327c46_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_81317_pt.get()._field_elem});;
	jule::Bool _82117_filled = false;;
	if ((_81132_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _81132_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1d55b17d8_VariadicExpr>>()) {
				_case_begin_1d8c77891:;
				{
					if ((_81132_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1d55b17d8_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1d8c7783b;
					};
					if (_81317_pt.get()._field_auto) {
						_1d62e3739_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_82117_filled=true;
					_81132_s.get()._field_exprs=_81132_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1d8c7783b:;
		};
	};
	_81517_arr.get()._field_n=static_cast<jule::I64>(_81132_s.get()._field_exprs.len());
	if ((!(_81317_pt.get()._field_auto))) {
		if ((_81517_arr.get()._field_n > _81317_pt.get()._field_n)) {
			_1d62e3739_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_81517_arr.get()._field_n < _81317_pt.get()._field_n)) {
			_81517_arr.get()._field_n=_81317_pt.get()._field_n;
		};
	};
	jule::Ptr<_1d567566b_ArrayExprModel> _85017_model = jule::new_ptr<_1d567566b_ArrayExprModel>(_1d567566b_ArrayExprModel{._field_kind=_81517_arr, });;
	if (_82117_filled) {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_81132_s.get()._field_exprs.len());
	};
	jule::Ptr<_1d631bdd3_TypeKind> _85917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_81517_arr.get()._field_elem;
	{
		auto &expr = _81132_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d8c7c654:;
		if (it != expr.end()) {
			jule::Ptr<_1d55adbae_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1d62e16b0_Data> _86221_d = _1d630ce7e_eval_expr_kind(_self_, _86121_elem.get()._field_kind);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_1d8c7c654;
				};
				_1d6285cd6_check_assign_type(_self_.get()._field_s, false,_81517_arr.get()._field_elem,_86221_d,_81132_s.get()._field_token);
				_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(_86221_d.get()._field_model);;
			}
			_iter_next_1d8c7c654:;
			++it;
			goto _iter_begin_1d8c7c654;
		}
		_iter_end_1d8c7c654:;
	};
	_self_.get()._field_prefix=_85917_prefix;
	if (_82117_filled) {
		_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_81517_arr, 11)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_85017_model), });
}



inline jule::Ptr<_1d62e16b0_Data> _1d62eb70e_eval_exp_slc(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b5633_SliceExpr> _88636_s, jule::Ptr<_1d631bdd3_TypeKind> _88655_t, jule::Any _88673_first) {
	jule::Ptr<_1d6325a9b_Slc> _88717_slc = jule::new_ptr<_1d6325a9b_Slc>(_1d6325a9b_Slc{._field_elem=_88655_t});;
	jule::Ptr<_1d56741e7_SliceExprModel> _89117_model = jule::new_ptr<_1d56741e7_SliceExprModel>(_1d56741e7_SliceExprModel{._field_elem_kind=_88655_t, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_88636_s.get()._field_exprs.len())});;
	if ((_88673_first != nullptr)) {
		_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_88673_first);;
		_88636_s.get()._field_exprs=_88636_s.get()._field_exprs.slice(1LL);
	};
	jule::Ptr<_1d631bdd3_TypeKind> _90017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_88717_slc.get()._field_elem;
	{
		auto &expr = _88636_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d8c82deb:;
		if (it != expr.end()) {
			jule::Ptr<_1d55adbae_Expr> _90221_elem = *it;
			{
				jule::Ptr<_1d62e16b0_Data> _90321_d = _1d630ce7e_eval_expr_kind(_self_, _90221_elem.get()._field_kind);;
				if ((_90321_d == nullptr)) {
					goto _iter_next_1d8c82deb;
				};
				_1d6285cd6_check_assign_type(_self_.get()._field_s, false,_88717_slc.get()._field_elem,_90321_d,_88636_s.get()._field_token);
				_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_90321_d.get()._field_model);;
			}
			_iter_next_1d8c82deb:;
			++it;
			goto _iter_begin_1d8c82deb;
		}
		_iter_end_1d8c82deb:;
	};
	_self_.get()._field_prefix=_90017_prefix;
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_88717_slc, 8)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_89117_model), });
}



inline jule::Ptr<_1d62e16b0_Data> _1d62eba1c_eval_slice_expr(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b5633_SliceExpr> _92139_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1d631ec0a_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1d8c85e54:;
				{
					return _1d62eb2ad_eval_arr(_self_, _92139_s);
				}
			}
			else if ((_1d631ee6e_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1d8c85ecb:;
				{
					jule::Ptr<_1d6325a9b_Slc> _92725_pt = _1d631ee6e_slc(_self_.get()._field_prefix.ptr());;
					return _1d62eb70e_eval_exp_slc(_self_, _92139_s,_92725_pt.get()._field_elem,nullptr);
				}
			}
			_match_end_1d8c85d33:;
		};
	};
	jule::Ptr<_1d631bdd3_TypeKind> _93217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_92139_s.get()._field_exprs.len() == 0LL)) {
		_1d62e3739_push_err(_self_.ptr(), _92139_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _94017_first_elem = _1d630ce7e_eval_expr_kind(_self_, _92139_s.get()._field_exprs[0LL].get()._field_kind);;
	if ((_94017_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _94517_d = _1d62eb70e_eval_exp_slc(_self_, _92139_s,_94017_first_elem.get()._field_kind,_94017_first_elem.get()._field_model);;
	_self_.get()._field_prefix=_93217_prefix;
	return _94517_d;
}



inline void _1d62ebd5d_check_integer_indexing_by_data(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _95154_d, jule::Ptr<_1ee538d51_Token> _95164_token) {
	jule::Str _95213_err_key = _1d63189b2_check_data_for_integer_indexing(_95154_d);;
	{
		auto &_match_expr{ _95213_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1d8c8bb91:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1d8c8b289:;
			{
				_1d62e3739_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_95154_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1d8c8b663:;
			{
				_1d62e3739_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1d8c8b586:;
	};
}



inline void _1d62ec237_indexing_ptr(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _96336_d, jule::Ptr<_1d62e16b0_Data>& _96351_index, jule::Ptr<_1d55b5ec4_IndexingExpr>& _96366_i) {
	_1d62ebd5d_check_integer_indexing_by_data(&(*_self_), _96351_index,_96366_i.get()._field_token);
	jule::Ptr<_1d63286a3_Ptr> _96617_ptr = _1d631e4bd_ptr(_96336_d.get()._field_kind.ptr());;
	{
		
		if (_1d6329176_is_unsafe(_96617_ptr.ptr())) {
			_case_begin_1d8c8e0e4:;
			{
				_1d62e3739_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1d62e4174_is_unsafe(&(*_self_))))) {
			_case_begin_1d8c8e15a:;
			{
				_1d62e3739_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d8c8de90:;
	};
	_96336_d.get()._field_kind=_96617_ptr.get()._field_elem;
}



inline void _1d62ec600_indexing_arr(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _97836_d, jule::Ptr<_1d62e16b0_Data>& _97851_index, jule::Ptr<_1d55b5ec4_IndexingExpr>& _97866_i) {
	jule::Ptr<_1d6327c46_Arr> _97917_arr = _1d631ec0a_arr(_97836_d.get()._field_kind.ptr());;
	_97836_d.get()._field_kind=_97917_arr.get()._field_elem;
	_1d62ebd5d_check_integer_indexing_by_data(&(*_self_), _97851_index,_97866_i.get()._field_token);
	if ((_1d62e2073_is_const(_97851_index.ptr()) && (_1d566c1ce_as_f64(_97851_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_97917_arr.get()._field_n)))) {
		_1d62e3739_push_err(&(*_self_), _97866_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1d62ec9b8_indexing_slc(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _98736_d, jule::Ptr<_1d62e16b0_Data>& _98751_index, jule::Ptr<_1d55b5ec4_IndexingExpr>& _98766_i) {
	jule::Ptr<_1d6325a9b_Slc> _98817_slc = _1d631ee6e_slc(_98736_d.get()._field_kind.ptr());;
	_98736_d.get()._field_kind=_98817_slc.get()._field_elem;
	_1d62ebd5d_check_integer_indexing_by_data(&(*_self_), _98751_index,_98766_i.get()._field_token);
	if ((!(_1d62e2073_is_const(_98751_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _98736_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d56741e7_SliceExprModel>>()) {
			_case_begin_1d8c94836:;
			{
				jule::Ptr<_1d56741e7_SliceExprModel> _99821_m = _98736_d.get()._field_model.operator jule::Ptr<_1d56741e7_SliceExprModel>();;
				jule::F64 _99917_indx = _1d566c1ce_as_f64(_98751_index.get()._field_constant.ptr());;
				if ((_99917_indx >= static_cast<jule::F64>(_99821_m.get()._field_elems.len()))) {
					_1d62e3739_push_err(&(*_self_), _98766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_98736_d.get()._field_model=_99821_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_99917_indx))];
					_98736_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1d8c94a89:;
	};
}



inline void _1d62ecd81_indexing_map(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _100936_d, jule::Ptr<_1d62e16b0_Data>& _100951_index, jule::Ptr<_1d55b5ec4_IndexingExpr>& _100970_i) {
	if ((_100951_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1d6327152_Map> _101417_m = _1d6320920_map(_100936_d.get()._field_kind.ptr());;
	_1d62cc16d_AssignTypeChecker _101517_atc = _1d62cc16d_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_101417_m.get()._field_key, ._field_d=_100951_index, ._field_error_token=_100970_i.get()._field_token};;
	_1d62cd2e5_check(&_101517_atc);
	_100936_d.get()._field_kind=_101417_m.get()._field_val;
}



inline void _1d62ed249_indexing_str(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _102636_d, jule::Ptr<_1d62e16b0_Data>& _102651_index, jule::Ptr<_1d55b5ec4_IndexingExpr>& _102666_i) {
	;
	_102636_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u8", 2)), 6)});
	if ((_102651_index == nullptr)) {
		return;;
	};
	_1d62ebd5d_check_integer_indexing_by_data(&(*_self_), _102651_index,_102666_i.get()._field_token);
	if ((!(_1d62e2073_is_const(_102651_index.ptr())))) {
		_102636_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1d62e2073_is_const(_102636_d.ptr())) {
		jule::Ptr<_1ee538d51_Token> _104217_error_token = _102666_i.get()._field_token;;
		jule::I64 _104317_j = _1d566bc06_as_i64(_102651_index.get()._field_constant.ptr());;
		jule::Str _104417_s = _1d566b72d_read_str(_102636_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_104317_j) >= _104417_s.len())) {
			_1d62e3739_push_err(&(*_self_), _104217_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1d566c6c9_set_u64(_102636_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_104417_s[_104317_j])));
		};
	};
}



inline void _1d62ed612_to_indexing(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _105335_d, jule::Ptr<_1d62e16b0_Data>& _105350_index, jule::Ptr<_1d55b5ec4_IndexingExpr>& _105369_i) {
	{
		
		if ((_1d631e4bd_ptr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8c9e973:;
			{
				_1d62ec237_indexing_ptr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1d631ec0a_arr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8c9e9ea:;
			{
				_1d62ec600_indexing_arr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1d631ee6e_slc(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8c9ea72:;
			{
				_1d62ec9b8_indexing_slc(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1d6320920_map(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8c9eae9:;
			{
				_1d62ecd81_indexing_map(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1d631dee5_prim(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8c9eb71:;
			{
				jule::Ptr<_1d63218aa_Prim> _106817_prim = _1d631dee5_prim(_105335_d.get()._field_kind.ptr());;
				{
					
					if (_1d6324ade_is_str(_106817_prim.ptr())) {
						_case_begin_1d8ca3cda:;
						{
							_1d62ed249_indexing_str(&(*_self_), _105335_d,_105350_index,_105369_i);
							return;;
						}
					}
					_match_end_1d8ca3c41:;
				};
			}
		}
		_match_end_1d8c9e81e:;
	};
	_1d62e3739_push_err(&(*_self_), _105369_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_105335_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1d62eda96_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b24ba_SubIdentExpr>& _107967_expr, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _108014_decl, jule::Ptr<_1d55b5ec4_IndexingExpr>& _108041_i) {
	jule::Ptr<_1d55aa3a3_SubIdentTypeDecl> _108117_t = jule::new_ptr<_1d55aa3a3_SubIdentTypeDecl>();;
	if ((!(_1d63197d7_push_sub_ident_from_expr(static_cast<jule::Any>(_107967_expr),_108117_t)))) {
		_1d62e3739_push_err(_self_.ptr(), _108041_i.get()._field_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_108014_decl.get()._field_generics = jule::alloc_for_append(_108014_decl.get()._field_generics,1);_108014_decl.get()._field_generics.__push(jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_kind=static_cast<jule::Any>(_108117_t)}));;
	return true;
}



inline jule::Bool _1d62edea3_push_generics_from_index_data(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _109254_decl, jule::Ptr<_1d55b5ec4_IndexingExpr>& _109281_i) {
	{
		auto &_match_expr{ _109281_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55b1431_UnaryExpr>>()) {
			_case_begin_1d8ca76c3:;
			{
				jule::Ptr<_1d62e16b0_Data> _109721_d = _1d62ea884_eval_unary(_self_, _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d55b1431_UnaryExpr>());;
				if ((!(_109721_d.get()._field_decl))) {
					_1d62e3739_push_err(_self_.ptr(), _109281_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_kind=(*(((jule::Any*)((&(_109721_d.get()._field_kind.get()._field_kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55a968d_TypeDecl>>()) {
			_case_begin_1d8ca7739:;
			{
				_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(_109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d55a968d_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b24ba_SubIdentExpr>>()) {
			_case_begin_1d8ca77a0:;
			{
				jule::Ptr<_1d55b24ba_SubIdentExpr> _110821_expr = _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d55b24ba_SubIdentExpr>();;
				return _1d62eda96_push_generics_from_indexing_data_sub_ident(_self_, _110821_expr,_109254_decl,_109281_i);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b0c27_IdentExpr>>()) {
			_case_begin_1d8ca8097:;
			{
				jule::Ptr<_1d55b0c27_IdentExpr> _111121_expr = _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d55b0c27_IdentExpr>();;
				_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_111121_expr.get()._field_token, ._field_ident=_111121_expr.get()._field_ident, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ae83b_TupleExpr>>()) {
			_case_begin_1d8ca810d:;
			{
				{
					auto &expr = _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d55ae83b_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1d8cacbb2:;
					if (it != expr.end()) {
						jule::Ptr<_1d55adbae_Expr> _111925_expr = *it;
						{
							{
								auto &_match_expr{ _111925_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d55a968d_TypeDecl>>()) {
									_case_begin_1d8cae0d1:;
									{
										_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(_111925_expr.get()._field_kind.operator jule::Ptr<_1d55a968d_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1d55b0c27_IdentExpr>>()) {
									_case_begin_1d8cae147:;
									{
										jule::Ptr<_1d55b0c27_IdentExpr> _112429_idexpr = _111925_expr.get()._field_kind.operator jule::Ptr<_1d55b0c27_IdentExpr>();;
										_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_112429_idexpr.get()._field_token, ._field_ident=_112429_idexpr.get()._field_ident, }))}));;
									}
								}
								_match_end_1d8caddc2:;
							};
						}
						_iter_next_1d8cacbb2:;
						++it;
						goto _iter_begin_1d8cacbb2;
					}
					_iter_end_1d8cacbb2:;
				};
			}
		}
		else {
			_case_begin_1d8ca75e6:;
			{
				_1d62e3739_push_err(_self_.ptr(), _109281_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1d8ca7591:;
	};
	return true;
}



inline jule::Ptr<_1d62e16b0_Data> _1d62ee35a_eval_ident_decl_from_indexing(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d62e16b0_Data>& _114054_d, jule::Ptr<_1d55b5ec4_IndexingExpr>& _114069_i) {
	jule::Ptr<_1d55a968d_TypeDecl> _114117_tdecl = jule::new_ptr<_1d55a968d_TypeDecl>();;
	jule::Ptr<_1d55a9c54_IdentTypeDecl> _114217_decl = nullptr;;
	{
		auto &_match_expr{ _114069_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55b0c27_IdentExpr>>()) {
			_case_begin_1d8cb1d70:;
			{
				jule::Ptr<_1d55b0c27_IdentExpr> _114521_expr = _114069_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d55b0c27_IdentExpr>();;
				_114217_decl=jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_114521_expr.get()._field_token, ._field_ident=_114521_expr.get()._field_ident, });
				_114117_tdecl.get()._field_kind=static_cast<jule::Any>(_114217_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b2047_NsSelectionExpr>>()) {
			_case_begin_1d8cb1dd6:;
			{
				jule::Ptr<_1d55b2047_NsSelectionExpr> _115221_expr = _114069_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d55b2047_NsSelectionExpr>();;
				_114217_decl=jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_115221_expr.get()._field_ident, ._field_ident=_115221_expr.get()._field_ident.get()._field_kind, });
				_114117_tdecl.get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55aa75a_NamespaceTypeDecl>(_1d55aa75a_NamespaceTypeDecl{._field_idents=_115221_expr.get()._field_ns, ._field_kind=jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_114217_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(_114217_decl)})}));
			}
		}
		else {
			_case_begin_1d8cb1d09:;
			{
				_1d62e3739_push_err(_self_.ptr(), _114069_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d8cb1ca4:;
	};
	if ((!(_1d62edea3_push_generics_from_index_data(_self_, _114217_decl,_114069_i)))) {
		return nullptr;
	};
	return _1d6304607_eval_type(_self_.ptr(), _114117_tdecl);
}



inline jule::Ptr<_1d62e16b0_Data> _1d62ee679_eval_indexing(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b5ec4_IndexingExpr> _117437_i) {
	jule::Ptr<_1d631bdd3_TypeKind> _117517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_117517_prefix;
	});;
	jule::Ptr<_1d62e16b0_Data> _117917_d = _1d630ce7e_eval_expr_kind(_self_, _117437_i.get()._field_expr.get()._field_kind);;
	if ((_117917_d == nullptr)) {
		return nullptr;
	};
	if (_117917_d.get()._field_decl) {
		return _1d62ee35a_eval_ident_decl_from_indexing(_self_, _117917_d,_117437_i);
	};
	_1d62e16b0_Data _118917_old_d = (*(_117917_d));;
	jule::Ptr<_1d62e16b0_Data> _119117_index = _1d630ce7e_eval_expr_kind(_self_, _117437_i.get()._field_index.get()._field_kind);;
	if ((_119117_index == nullptr)) {
		return nullptr;
	};
	_117917_d.get()._field_decl=false;
	_1d62ed612_to_indexing(_self_.ptr(), _117917_d,_119117_index,_117437_i);
	if (_1d62e2073_is_const(_117917_d.ptr())) {
		_117917_d.get()._field_decl=false;
		_117917_d.get()._field_model=static_cast<jule::Any>(_117917_d.get()._field_constant);
	} else if (_117917_d.get()._field_decl) {
		_117917_d.get()._field_decl=false;
	} else {
		_117917_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56743d4_IndexingExprModel>(_1d56743d4_IndexingExprModel{._field_token=_117437_i.get()._field_token, ._field_expr=jule::new_ptr<_1d62e16b0_Data>(_118917_old_d), ._field_index=_119117_index}));
	};
	return _117917_d;
}



inline std::tuple<jule::Ptr<_1d62e16b0_Data>,jule::Ptr<_1d62e16b0_Data>> _1d62ee987_eval_slicing_exprs(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b65ce_SlicingExpr>& _122243_s) {
	jule::Ptr<_1d631bdd3_TypeKind> _122317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_122317_prefix;
	});;
	jule::Ptr<_1d62e16b0_Data> _122717_l = nullptr;;
	jule::Ptr<_1d62e16b0_Data> _122817_r = nullptr;;
	if ((_122243_s.get()._field_start != nullptr)) {
		_122717_l=_1d630ce7e_eval_expr_kind(_self_, _122243_s.get()._field_start.get()._field_kind);
		if ((_122717_l != nullptr)) {
			_1d62ebd5d_check_integer_indexing_by_data(_self_.ptr(), _122717_l,_122243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_122717_l=jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_constant=static__1d5669eac_new_i64(0LL)});
		_122717_l.get()._field_model=static_cast<jule::Any>(_122717_l.get()._field_constant);
	};
	if ((_122243_s.get()._field_to != nullptr)) {
		_122817_r=_1d630ce7e_eval_expr_kind(_self_, _122243_s.get()._field_to.get()._field_kind);
		if ((_122817_r != nullptr)) {
			_1d62ebd5d_check_integer_indexing_by_data(_self_.ptr(), _122817_r,_122243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_122717_l,_122817_r);
}



inline void _1d62eec0c_slicing_arr(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _125731_d) {
	jule::Ptr<_1d631bdd3_TypeKind> _125817_elem_type = _1d631ec0a_arr(_125731_d.get()._field_kind.ptr()).get()._field_elem;;
	_125731_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d6325a9b_Slc>(_1d6325a9b_Slc{._field_elem=_125817_elem_type}), 8)});
	_125731_d.get()._field_lvalue=false;
	_125731_d.get()._field_mutable=(_125731_d.get()._field_mutable || (!(_1d631d2d0_mutable(_125817_elem_type.ptr()))));
}



inline void _1d63000c5_slicing_str(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _127231_d, jule::Ptr<_1d62e16b0_Data>& _127242_l, jule::Ptr<_1d62e16b0_Data>& _127253_r) {
	_127231_d.get()._field_lvalue=false;
	_127231_d.get()._field_mutable=true;
	if ((!(_1d62e2073_is_const(_127231_d.ptr())))) {
		return;;
	};
	if (((_127242_l == nullptr) || (_127253_r == nullptr))) {
		_127231_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1d62e2073_is_const(_127242_l.ptr()) && _1d62e2073_is_const(_127253_r.ptr()))) {
		jule::I64 _128517_left = _1d566bc06_as_i64(_127242_l.get()._field_constant.ptr());;
		if ((_128517_left < 0LL)) {
			return;;
		};
		jule::Str _129017_s = _1d566b72d_read_str(_127231_d.get()._field_constant.ptr());;
		jule::I64 _129121_right = 0LL;;
		if ((_127253_r == nullptr)) {
			_129121_right=static_cast<jule::I64>(static_cast<jule::I64>(_129017_s.len()));
		} else {
			_129121_right=static_cast<jule::I64>(_1d566bc06_as_i64(_127253_r.get()._field_constant.ptr()));
		};
		if ((_128517_left > _129121_right)) {
			return;;
		};
		_1d566cbc4_set_str(_127231_d.get()._field_constant.ptr(), _129017_s.slice(_128517_left,_129121_right));
		_127231_d.get()._field_decl=true;
	} else {
		_127231_d.get()._field_constant=nullptr;
	};
}



inline void _1d6300537_check_slicing(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data>& _130837_d, jule::Ptr<_1d62e16b0_Data>& _130848_l, jule::Ptr<_1d62e16b0_Data>& _130859_r, jule::Ptr<_1d55b65ce_SlicingExpr>& _130870_s) {
	{
		
		if ((_1d631ec0a_arr(_130837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8cc8947:;
			{
				_1d62eec0c_slicing_arr(&(*_self_), _130837_d);
				return;;
			}
		}
		else if ((_1d631ee6e_slc(_130837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8cc89be:;
			{
				return;;
			}
		}
		else if ((_1d631dee5_prim(_130837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8cc8a46:;
			{
				jule::Ptr<_1d63218aa_Prim> _131617_prim = _1d631dee5_prim(_130837_d.get()._field_kind.ptr());;
				{
					
					if (_1d6324ade_is_str(_131617_prim.ptr())) {
						_case_begin_1d8ccb032:;
						{
							_1d63000c5_slicing_str(&(*_self_), _130837_d,_130848_l,_130859_r);
							return;;
						}
					}
					_match_end_1d8ccae88:;
				};
			}
		}
		_match_end_1d8cc8815:;
	};
	_1d62e3739_push_err(&(*_self_), _130870_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_130837_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1d62e16b0_Data> _1d6300845_eval_slicing(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b65ce_SlicingExpr> _132736_s) {
	jule::Ptr<_1d62e16b0_Data> _132817_d = _1d630ce7e_eval_expr_kind(_self_, _132736_s.get()._field_expr.get()._field_kind);;
	if ((_132817_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _133318_l;;
	jule::Ptr<_1d62e16b0_Data> _133325_r;;
	std::tie(_133318_l,_133325_r) = _1d62ee987_eval_slicing_exprs(_self_, _132736_s);
	if ((_133318_l == nullptr)) {
		return _132817_d;
	};
	_132817_d.get()._field_decl=false;
	_1d6300537_check_slicing(_self_.ptr(), _132817_d,_133318_l,_133325_r,_132736_s);
	if (_1d62e2073_is_const(_132817_d.ptr())) {
		_132817_d.get()._field_decl=false;
		_132817_d.get()._field_model=static_cast<jule::Any>(_132817_d.get()._field_constant);
	} else if (_132817_d.get()._field_decl) {
		_132817_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1d5674b87_SlicingExprModel> _135121_model = jule::new_ptr<_1d5674b87_SlicingExprModel>(_1d5674b87_SlicingExprModel{._field_token=_132736_s.get()._field_token, ._field_expr=_132817_d.get()._field_model, ._field_left=_133318_l.get()._field_model, });;
		if ((_133325_r != nullptr)) {
			_135121_model.get()._field_right=_133325_r.get()._field_model;
		};
		_132817_d.get()._field_model=static_cast<jule::Any>(_135121_model);
	};
	return _132817_d;
}



inline void _1d6300c0d_cast_ptr(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _136431_t, jule::Ptr<_1d62e16b0_Data> _136449_d, jule::Ptr<_1ee538d51_Token> _136459_error_token) {
	jule::Ptr<_1d632513e_Sptr> _136513_sptr = _1d631e259_sptr(_136449_d.get()._field_kind.ptr());;
	if ((_136513_sptr != nullptr)) {
		if ((!(_1d631c5dc_equals(_1d631e4bd_ptr(_136431_t.ptr()).get()._field_elem, _136513_sptr.get()._field_elem)))) {
			_1d62e3739_push_err(&(*_self_), _136459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_136449_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_136431_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1d62e4174_is_unsafe(&(*_self_))))) {
		_1d62e3739_push_err(&(*_self_), _136459_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d63218aa_Prim> _137813_prim = _1d631dee5_prim(_136449_d.get()._field_kind.ptr());;
	if (((_1d631e4bd_ptr(_136449_d.get()._field_kind.ptr()) == nullptr) && ((_137813_prim == nullptr) || (!(_1d6254bd9_is_int(_1d6321c1d_to_str(_137813_prim.ptr()))))))) {
		_1d62e3739_push_err(&(*_self_), _136459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_136449_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_136431_t.ptr()))}));
	};
	_136449_d.get()._field_constant=nullptr;
}



inline void _1d63010c6_cast_struct(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _138634_t, jule::Ptr<_1d62e16b0_Data> _138652_d, jule::Ptr<_1ee538d51_Token> _138662_error_token) {
	jule::Ptr<_1d59c3e1a_Trait> _138717_tr = _1d63206ab_trt(_138652_d.get()._field_kind.ptr());;
	if ((_138717_tr == nullptr)) {
		_1d62e3739_push_err(&(*_self_), _138662_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_138652_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_138634_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1d55c62d1_StructIns> _139317_s = _1d6320447_strct(_138634_t.ptr());;
	_1d8cd8bbb_push_reference(&(*_self_), _139317_s);
	if ((!(_1d5589739_is_implements(_139317_s.get()._field_decl.ptr(), _138717_tr)))) {
		_1d62e3739_push_err(&(*_self_), _138662_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_138652_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_138634_t.ptr()))}));
	};
}



inline void _1d630148e_cast_ref(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _140131_t, jule::Ptr<_1d62e16b0_Data> _140149_d, jule::Ptr<_1ee538d51_Token> _140159_error_token) {
	jule::Ptr<_1d632513e_Sptr> _140217_sptr = _1d631e259_sptr(_140131_t.ptr());;
	jule::Ptr<_1d63286a3_Ptr> _140417_ptr = _1d631e4bd_ptr(_140149_d.get()._field_kind.ptr());;
	if (((_140417_ptr != nullptr) && _1d631c5dc_equals(_140217_sptr.get()._field_elem, _140417_ptr.get()._field_elem))) {
		if ((!(_1d62e4174_is_unsafe(&(*_self_))))) {
			_1d62e3739_push_err(&(*_self_), _140159_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1d6320447_strct(_140217_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1d63010c6_cast_struct(&(*_self_), _140217_sptr.get()._field_elem,_140149_d,_140159_error_token);
		return;;
	};
	_1d62e3739_push_err(&(*_self_), _140159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_140149_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_140131_t.ptr()))}));
}



inline void _1d6301857_cast_slc(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _142231_t, jule::Ptr<_1d62e16b0_Data> _142249_d, jule::Ptr<_1ee538d51_Token> _142259_error_token) {
	if ((_1d631e732_enm(_142249_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1d631dee5_prim(_1d631e732_enm(_142249_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1d6324ade_is_str(_1d631dee5_prim(_1d631e732_enm(_142249_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1d62e3739_push_err(&(*_self_), _142259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_142249_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_142231_t.ptr()))}));
			return;;
		};
	} else if (((_1d631dee5_prim(_142249_d.get()._field_kind.ptr()) == nullptr) || (!(_1d6324ade_is_str(_1d631dee5_prim(_142249_d.get()._field_kind.ptr()).ptr()))))) {
		_1d62e3739_push_err(&(*_self_), _142259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_142249_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_142231_t.ptr()))}));
		return;;
	};
	_142231_t=_1d631ee6e_slc(_142231_t.ptr()).get()._field_elem;
	jule::Ptr<_1d63218aa_Prim> _143413_prim = _1d631dee5_prim(_142231_t.ptr());;
	if (((_143413_prim == nullptr) || ((!(_1d63231b4_is_u8(_143413_prim.ptr()))) && (!(_1d6322bdb_is_i32(_143413_prim.ptr())))))) {
		_1d62e3739_push_err(&(*_self_), _142259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_142249_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_142231_t.ptr()))}));
	};
}



inline void _1d6301b76_cast_str(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _144031_d, jule::Ptr<_1ee538d51_Token> _144041_error_token) {
	if ((_1d631e732_enm(_144031_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d5692820_Enum> _144221_e = _1d631e732_enm(_144031_d.get()._field_kind.ptr());;
		if (((_1d631dee5_prim(_144221_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1d6324ade_is_str(_1d631dee5_prim(_144221_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1d631dee5_prim(_144031_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d63218aa_Prim> _144917_prim = _1d631dee5_prim(_144031_d.get()._field_kind.ptr());;
		if (((!(_1d63231b4_is_u8(_144917_prim.ptr()))) && (!(_1d6322bdb_is_i32(_144917_prim.ptr()))))) {
			_1d62e3739_push_err(&(*_self_), _144041_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1d631c2ce_to_str(_144031_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1d631ee6e_slc(_144031_d.get()._field_kind.ptr()) == nullptr)) {
		_1d62e3739_push_err(&(*_self_), _144041_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1d631c2ce_to_str(_144031_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _146117_t = _1d631ee6e_slc(_144031_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1d63218aa_Prim> _146213_prim = _1d631dee5_prim(_146117_t.ptr());;
	if (((_146213_prim == nullptr) || ((!(_1d63231b4_is_u8(_146213_prim.ptr()))) && (!(_1d6322bdb_is_i32(_146213_prim.ptr())))))) {
		_1d62e3739_push_err(&(*_self_), _144041_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1d631c2ce_to_str(_144031_d.get()._field_kind.ptr()))}));
	};
}



inline void _1d630203e_cast_int(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _146831_t, jule::Ptr<_1d62e16b0_Data> _146849_d, jule::Ptr<_1ee538d51_Token> _146859_error_token) {
	if (_1d62e2073_is_const(_146849_d.ptr())) {
		jule::Ptr<_1d63218aa_Prim> _147017_prim = _1d631dee5_prim(_146831_t.ptr());;
		{
			
			if (_1d6254656_is_sig_int(_147017_prim.get()._field_kind)) {
				_case_begin_1d8d0392d:;
				{
					_1d566c454_set_i64(_146849_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64(_146849_d.get()._field_constant.ptr())));
				}
			}
			else if (_1d6254942_is_unsig_int(_147017_prim.get()._field_kind)) {
				_case_begin_1d8d039a5:;
				{
					_1d566c6c9_set_u64(_146849_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64(_146849_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1d8d03873:;
		};
	};
	if ((_1d631e732_enm(_146849_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d5692820_Enum> _148017_e = _1d631e732_enm(_146849_d.get()._field_kind.ptr());;
		if (_1d62552a0_is_num(_1d631c2ce_to_str(_148017_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1d631e259_sptr(_146849_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d63218aa_Prim> _148717_prim = _1d631dee5_prim(_146831_t.ptr());;
		if ((!(_1d6324616_is_uintptr(_148717_prim.ptr())))) {
			_1d62e3739_push_err(&(*_self_), _146859_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_146849_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_146831_t.ptr()))}));
		};
		return;;
	};
	if ((_1d631e4bd_ptr(_146849_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d63218aa_Prim> _149417_prim = _1d631dee5_prim(_146831_t.ptr());;
		if (_1d6324616_is_uintptr(_149417_prim.ptr())) {
		} else if ((!(_1d62e4174_is_unsafe(&(*_self_))))) {
			_1d62e3739_push_err(&(*_self_), _146859_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1d6322bdb_is_i32(_149417_prim.ptr()))) && (!(_1d6322e50_is_i64(_149417_prim.ptr())))) && (!(_1d6323428_is_u16(_149417_prim.ptr())))) && (!(_1d632368c_is_u32(_149417_prim.ptr())))) && (!(_1d6323901_is_u64(_149417_prim.ptr()))))) {
			_1d62e3739_push_err(&(*_self_), _146859_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_146849_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_146831_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1d63218aa_Prim> _150513_prim = _1d631dee5_prim(_146849_d.get()._field_kind.ptr());;
	if (((_150513_prim != nullptr) && _1d62552a0_is_num(_1d6321c1d_to_str(_150513_prim.ptr())))) {
		return;;
	};
	_1d62e3739_push_err(&(*_self_), _146859_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_146849_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_146831_t.ptr()))}));
}



inline void _1d6302407_cast_num(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _151331_t, jule::Ptr<_1d62e16b0_Data> _151349_d, jule::Ptr<_1ee538d51_Token> _151359_error_token) {
	if (_1d62e2073_is_const(_151349_d.ptr())) {
		jule::Ptr<_1d63218aa_Prim> _151517_prim = _1d631dee5_prim(_151331_t.ptr());;
		{
			
			if (_1d6255008_is_float(_151517_prim.get()._field_kind)) {
				_case_begin_1d8d0de55:;
				{
					_1d566ce49_set_f64(_151349_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1d566c1ce_as_f64(_151349_d.get()._field_constant.ptr())));
				}
			}
			else if (_1d6254656_is_sig_int(_151517_prim.get()._field_kind)) {
				_case_begin_1d8d0decc:;
				{
					_1d566c454_set_i64(_151349_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64(_151349_d.get()._field_constant.ptr())));
				}
			}
			else if (_1d6254942_is_unsig_int(_151517_prim.get()._field_kind)) {
				_case_begin_1d8d0e054:;
				{
					_1d566c6c9_set_u64(_151349_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64(_151349_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1d8d0dd89:;
		};
	};
	if ((_1d631e732_enm(_151349_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d5692820_Enum> _152717_e = _1d631e732_enm(_151349_d.get()._field_kind.ptr());;
		if (_1d62552a0_is_num(_1d631c2ce_to_str(_152717_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1d63218aa_Prim> _153313_prim = _1d631dee5_prim(_151349_d.get()._field_kind.ptr());;
	if (((_153313_prim != nullptr) && _1d62552a0_is_num(_1d6321c1d_to_str(_153313_prim.ptr())))) {
		return;;
	};
	_1d62e3739_push_err(&(*_self_), _151359_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_151349_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_151331_t.ptr()))}));
}



inline void _1d63027c0_cast_prim(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _154132_t, jule::Ptr<_1d62e16b0_Data> _154150_d, jule::Ptr<_1ee538d51_Token> _154160_error_token) {
	jule::Ptr<_1d63218aa_Prim> _154213_prim = _1d631dee5_prim(_154132_t.ptr());;
	{
		
		if (_1d6324d53_is_any(_154213_prim.ptr())) {
			_case_begin_1d8d1493e:;
		}
		else if (_1d6324ade_is_str(_154213_prim.ptr())) {
			_case_begin_1d8d14eb1:;
			{
				_1d6301b76_cast_str(&(*_self_), _154150_d,_154160_error_token);
			}
		}
		else if (_1d6254bd9_is_int(_1d6321c1d_to_str(_154213_prim.ptr()))) {
			_case_begin_1d8d15027:;
			{
				_1d630203e_cast_int(&(*_self_), _154132_t,_154150_d,_154160_error_token);
			}
		}
		else if (_1d62552a0_is_num(_1d6321c1d_to_str(_154213_prim.ptr()))) {
			_case_begin_1d8d1508d:;
			{
				_1d6302407_cast_num(&(*_self_), _154132_t,_154150_d,_154160_error_token);
			}
		}
		else {
			_case_begin_1d8d14e4a:;
			{
				_1d62e3739_push_err(&(*_self_), _154160_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_154132_t.ptr()))}));
			}
		}
		_match_end_1d8d14dd4:;
	};
}



inline void _1d6302ade_cast_constant(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _155737_t, jule::Ptr<_1d62e16b0_Data>& _155756_d) {
	if (((_155756_d == nullptr) || (!(_1d62e2073_is_const(_155756_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1d63218aa_Prim> _156113_prim = _1d631dee5_prim(_155737_t.ptr());;
	_1d6319067_cast_const_by_type(_156113_prim.get()._field_kind,_155756_d);
	_155756_d.get()._field_model=static_cast<jule::Any>(_155756_d.get()._field_constant);
}



inline void _1d6302ea7_cast_type_enum(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _156638_t, jule::Ptr<_1d62e16b0_Data>& _156657_d, jule::Ptr<_1ee538d51_Token>& _156672_error_token) {
	jule::I64 _156713_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1d6286259_check_type_compatibility((*_self_)._field_s, _156657_d.get()._field_kind,_156638_t,_156672_error_token)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_156713_n);
		_1d62e3739_push_err(&(*_self_), _156672_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_156657_d.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_156638_t.ptr()))}));
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630342a_eval_cast_by_type_n_data(_1d62e322d_Eval* _self_, jule::Ptr<_1d631bdd3_TypeKind> _157447_t, jule::Ptr<_1d62e16b0_Data> _157465_d, jule::Ptr<_1ee538d51_Token> _157479_error_token) {
	if (((_157465_d != nullptr) && _157465_d.get()._field_decl)) {
		_1d62e3739_push_err(&(*_self_), _157479_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1d631dee5_prim(_157465_d.get()._field_kind.ptr()) != nullptr) && _1d6324d53_is_any(_1d631dee5_prim(_157465_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1d8d1cb01:;
			{
				if ((_1d631e732_enm(_157447_t.ptr()) != nullptr)) {
					_1d62e3739_push_err(&(*_self_), _157479_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1d62e3a58_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1d631e996_tenm(_157447_t.ptr()) != nullptr)) {
					_1d62e3739_push_err(&(*_self_), _157479_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1d631e996_tenm(_157465_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8d1cb67:;
			{
				_1d6302ea7_cast_type_enum(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1d631e4bd_ptr(_157447_t.ptr()) != nullptr)) {
			_case_begin_1d8d1cbcd:;
			{
				_1d6300c0d_cast_ptr(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1d631e259_sptr(_157447_t.ptr()) != nullptr)) {
			_case_begin_1d8d1cc44:;
			{
				_1d630148e_cast_ref(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1d631ee6e_slc(_157447_t.ptr()) != nullptr)) {
			_case_begin_1d8d1d8d2:;
			{
				_1d6301857_cast_slc(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1d6320447_strct(_157447_t.ptr()) != nullptr)) {
			_case_begin_1d8d1d948:;
			{
				_1d63010c6_cast_struct(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1d631dee5_prim(_157447_t.ptr()) != nullptr)) {
			_case_begin_1d8d1d9ae:;
			{
				_1d63027c0_cast_prim(&(*_self_), _157447_t,_157465_d,_157479_error_token);
				_1d6302ade_cast_constant(&(*_self_), _157447_t,_157465_d);
			}
		}
		else {
			_case_begin_1d8d1ca8a:;
			{
				_1d62e3739_push_err(&(*_self_), _157479_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_157447_t.ptr()))}));
				_157465_d=nullptr;
			}
		}
		_match_end_1d8d1ca35:;
	};
	if ((_157465_d == nullptr)) {
		return nullptr;
	};
	_157465_d.get()._field_mutable=(_157465_d.get()._field_mutable || ((!(_1d631d2d0_mutable(_157465_d.get()._field_kind.ptr()))) && _1d631d2d0_mutable(_157447_t.ptr())));
	_157465_d.get()._field_lvalue=false;
	_157465_d.get()._field_decl=false;
	if (((_1d631e732_enm(_157465_d.get()._field_kind.ptr()) == nullptr) || (!(_1d631c5dc_equals(_1d631e732_enm(_157465_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _157447_t))))) {
		_1d63184ea_apply_cast_kind(_157465_d,_157447_t);
		_157465_d.get()._field_model.operator jule::Ptr<_1d5673d1d_CastingExprModel>().get()._field_token=_157479_error_token;
	} else {
		_157465_d.get()._field_kind=_157447_t;
	};
	return _157465_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6303749_eval_cast(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b1b90_CastExpr> _162733_c) {
	jule::Ptr<_1d632103b_TypeSymbol> _162817_t = _1d568247a_build_type(_162733_c.get()._field_kind);;
	jule::Bool _162913_ok = _1d6284125_check_type(_self_.get()._field_s, _162817_t,_self_.get()._field_lookup);;
	if ((!(_162913_ok))) {
		return nullptr;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _163417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_163417_prefix;
	});;
	jule::Ptr<_1d62e16b0_Data> _163817_d = _1d630ce7e_eval_expr_kind(_self_, _162733_c.get()._field_expr.get()._field_kind);;
	if ((_163817_d == nullptr)) {
		return nullptr;
	};
	return _1d630342a_eval_cast_by_type_n_data(_self_.ptr(), _162817_t.get()._field_kind,_163817_d,_162733_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1d62e16b0_Data> _1d6303a57_eval_ns_selection(_1d62e322d_Eval* _self_, jule::Ptr<_1d55b2047_NsSelectionExpr> _164636_s) {
	jule::Str _164713_path = _1d6334934_build_link_path_by_tokens(_164636_s.get()._field_ns);;
	jule::Ptr<_1d62743bd_ImportInfo> _164817_imp = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d6335e41_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>([=](jule::Ptr<_1d62743bd_ImportInfo> _164853_imp) mutable -> jule::Bool {
		if (((_164636_s.get()._field_ns.len() == 1LL) && (_164853_imp.get()._field_alias == _164713_path))) {
			return true;
		};
		return ((_164853_imp.get()._field_link_path == _164713_path) && _1d627702a_is_accessible_via_selection(_164853_imp.ptr()));
	}));;
	if ((_164817_imp == nullptr)) {
		_1d62e3739_push_err(&(*_self_), _164636_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_164713_path)}));
		return nullptr;
	};
	jule::Trait<_1d633797b_Lookup> _166017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1d633797b_Lookup>(_164817_imp, 1);
	;
	_1d62e3e10_disallow_builtin(&(*_self_));
	jule::Any _166517_def = _1d62e674d_get_def(&(*_self_), _164636_s.get()._field_ident.get()._field_kind,false);;
	_1d62e3c34_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_166017_lookup;
	jule::Ptr<_1d62e16b0_Data> _166917_d = _1d62ea268_eval_def(&(*_self_), jule::Any(_166517_def),_164636_s.get()._field_ident);;
	return _166917_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6303eca_eval_struct_lit_explicit(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55c62d1_StructIns> _167448_s, jule::Slice<jule::Ptr<_1d55adbae_Expr>> _167513_exprs, jule::Ptr<_1ee538d51_Token> _167533_error_token) {
	jule::Bool _167613_ok = _1d6281573_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_167448_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_167448_s.get()._field_generics.len()),_167533_error_token);;
	if ((!(_167613_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _167448_s.get()._field_decl))) {
		_1d62e3739_push_err(_self_.ptr(), _167533_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_167448_s.get()._field_decl.get()._field_ident)}));
	};
	_1d8cd8bbb_push_reference(_self_.ptr(), _167448_s);
	_1d62e8640_check_deprecated(_self_.ptr(), _167448_s.get()._field_decl.get()._field_directives,_167533_error_token);
	_1d62d5d36_StructLitChecker _168917_slc = _1d62d5d36_StructLitChecker{._field_e=_self_, ._field_error_token=_167533_error_token, ._field_s=_167448_s, };;
	_1d62d73cb_check(&_168917_slc, _167513_exprs);
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_167448_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5673944_StructLitExprModel>(_1d5673944_StructLitExprModel{._field_strct=_167448_s, ._field_args=_168917_slc._field_args})), });
}



inline jule::Ptr<_1d62e16b0_Data> _1d63042e9_eval_struct_lit(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b4225_StructLit> _170839_lit) {
	jule::Ptr<_1d632103b_TypeSymbol> _170917_t = _1d568247a_build_type(_170839_lit.get()._field_kind);;
	jule::Bool _171013_ok = _1d6284125_check_type(_self_.get()._field_s, _170917_t,_self_.get()._field_lookup);;
	if ((!(_171013_ok))) {
		return nullptr;
	};
	jule::Ptr<_1d55c62d1_StructIns> _171517_s = _1d6320447_strct(_170917_t.get()._field_kind.ptr());;
	if ((_171517_s == nullptr)) {
		if ((_1d631e259_sptr(_170917_t.get()._field_kind.ptr()) != nullptr)) {
			_171517_s=_1d6320447_strct(_1d631e259_sptr(_170917_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_171517_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1d62e3739_push_err(_self_.ptr(), _170839_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1d62e16b0_Data> _172817_d = _1d6303eca_eval_struct_lit_explicit(_self_, _171517_s,_170839_lit.get()._field_exprs,_170839_lit.get()._field_kind.get()._field_token);;
	if ((_1d631e259_sptr(_170917_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1d5673944_StructLitExprModel> _173021_model = _172817_d.get()._field_model.operator jule::Ptr<_1d5673944_StructLitExprModel>();;
		_1d6316e55_make_struct_lit_alloc(_172817_d,_173021_model);
	};
	return _172817_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6304607_eval_type(_1d62e322d_Eval* _self_, jule::Ptr<_1d55a968d_TypeDecl> _173632_t) {
	jule::Ptr<_1d632103b_TypeSymbol> _173717_tk = _1d568247a_build_type(_173632_t);;
	jule::Bool _173813_ok = _1d6284125_check_type((*_self_)._field_s, _173717_tk,(*_self_)._field_lookup);;
	if ((!(_173813_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=_173717_tk.get()._field_kind, ._field_model=static_cast<jule::Any>(_173717_tk.get()._field_kind), ._field_decl=true, });
}



inline void _1d6304926_call_type_fn(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b3048_FnCallExpr>& _174937_fc, jule::Ptr<_1d62e16b0_Data>& _174959_d) {
	if ((_174937_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_self_.ptr(), _174937_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_174959_d.get()._field_kind.ptr()))}));
	} else if ((_174937_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_self_.ptr(), _174937_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_174937_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_self_.ptr(), _174937_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_174937_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1d631bdd3_TypeKind> _175921_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1d62e16b0_Data> _176121_arg = _1d630ce7e_eval_expr_kind(_self_, _174937_fc.get()._field_args[0LL].get()._field_kind);;
		_self_.get()._field_prefix=_175921_prefix;
		if ((_176121_arg != nullptr)) {
			_174959_d=_1d630342a_eval_cast_by_type_n_data(_self_.ptr(), _174959_d.get()._field_kind,_176121_arg,_174937_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_174959_d != nullptr)) {
		_174959_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1d6304ccd_check_fn_call_generics(_1d62e322d_Eval* _self_, jule::Ptr<_1d567d498_FnIns> _177345_f, jule::Ptr<_1d55b3048_FnCallExpr> _177413_fc) {
	jule::Bool _177432_ok = jule::Bool();
	jule::Bool _177442_dynamic_annotation = jule::Bool();
	{
		
		if ((((_177345_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_177413_fc.get()._field_generics.len() == 0LL)) && (_177345_f.get()._field_params.len() > 0LL))) {
			_case_begin_1d8d4729b:;
			{
				_177442_dynamic_annotation=true;
				_177345_f.get()._field_generics=jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>>::alloc(_177345_f.get()._field_decl.get()._field_generics.len());
				_177432_ok = true;
				_177442_dynamic_annotation = true;
				return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
			}
		}
		else if ((!(_1d6281573_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_177345_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_177413_fc.get()._field_generics.len()),_177413_fc.get()._field_token)))) {
			_case_begin_1d8d470ae:;
			{
				_177432_ok = false;
				_177442_dynamic_annotation = false;
				return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
			}
		}
		else {
			_case_begin_1d8d45e15:;
			{
				_177345_f.get()._field_generics=jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>>::alloc(0LL,_177345_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _177413_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1d8d462ab:;
					if (it != expr.end()) {
						jule::Ptr<_1d55a968d_TypeDecl> _178625_g = *it;
						{
							jule::Ptr<_1d632103b_TypeSymbol> _178725_k = _1d568247a_build_type(_178625_g);;
							_177432_ok=_1d6284125_check_type((*_self_)._field_s, _178725_k,(*_self_)._field_lookup);
							if ((!(_177432_ok))) {
								_177432_ok = false;
								_177442_dynamic_annotation = false;
								return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
							};
							_177345_f.get()._field_generics = jule::alloc_for_append(_177345_f.get()._field_generics,1);_177345_f.get()._field_generics.__push(jule::new_ptr<_1d631a6a6_InsGeneric>(_1d631a6a6_InsGeneric{._field_kind=_178725_k.get()._field_kind, }));;
						}
						_iter_next_1d8d462ab:;
						++it;
						goto _iter_begin_1d8d462ab;
					}
					_iter_end_1d8d462ab:;
				};
				_177432_ok = true;
				_177442_dynamic_annotation = false;
				return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
			}
		}
		_match_end_1d8d45d38:;
	};
}



inline void _1d63050ec_call_builtin_fn(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b3048_FnCallExpr>& _179940_fc, jule::Ptr<_1d62e16b0_Data>& _179962_d) {
	_179962_d=_1d63201d3_fnc(_179962_d.get()._field_kind.ptr()).get()._field_caller(_self_,_179940_fc,_179962_d);
	if ((_179962_d == nullptr)) {
		return;;
	};
	_179962_d.get()._field_mutable=true;
}



inline void _1d630543d_check_fn_of_concurrent_call(_1d62e322d_Eval* _self_, jule::Ptr<_1d567d498_FnIns>& _180747_f, jule::Ptr<_1ee538d51_Token> _180758_error_token) {
	if (_1d62e4174_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _180747_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d8d4da00:;
		if (it != expr.end()) {
			jule::Ptr<_1d567c5c9_ParamIns> &_181216_p = *it;
			{
				if (_181216_p.get()._field_decl.get()._field_reference) {
					_1d62e3739_push_err(&(*_self_), _180758_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1d8d4da00:;
			++it;
			goto _iter_begin_1d8d4da00;
		}
		_iter_end_1d8d4da00:;
	};
}



inline void _1d6305839_process_exceptional_handler(_1d62e322d_Eval* _self_, jule::Ptr<_1d567d498_FnIns>& _182051_f, jule::Ptr<_1d55b3048_FnCallExpr>& _182067_fc, jule::Ptr<_1d62e16b0_Data>& _182089_d) {
	jule::Bool _182113_result_needed = ((!(_1d567ac59_is_void(_182051_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1d625c571_ScopeChecker> _182217_csc = nullptr;;
	jule::Ptr<_1d6255beb_Scope> _182317_ch = nullptr;;
	jule::Ptr<_1d567400a_FnCallExprModel> _182517_model = _182089_d.get()._field_model.operator jule::Ptr<_1d567400a_FnCallExprModel>();;
	jule::Ptr<_1d625c571_ScopeChecker> _182917_sc = (*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>();;
	_182217_csc=_1d626cb14_new_child_checker(_182917_sc);
	if (_182113_result_needed) {
		_182217_csc.get()._field_result=_182051_f;
	};
	_182317_ch=_1d6261e38_get_child(_182917_sc.ptr());
	_182067_fc.get()._field_exception.get()._field_parent=_182917_sc.get()._field_tree;
	_182217_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_182217_csc.get()._field_table.get()._field_vars,1);_182217_csc.get()._field_table.get()._field_vars.__push(_1d6317296_build_error_var(_182317_ch,_182067_fc));;
	_1d6262301_check_child_ssc(_182917_sc, _182067_fc.get()._field_exception,_182317_ch,_182217_csc);
	_182517_model.get()._field_assigned=_182113_result_needed;
	_182517_model.get()._field_except=_182317_ch;
	if ((_182113_result_needed && (_182217_csc.get()._field_result != nullptr))) {
		_1d62e3739_push_err(&(*_self_), _182067_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1d6305b69_call_fn(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b3048_FnCallExpr>& _184732_fc, jule::Ptr<_1d62e16b0_Data>& _184754_d) {
	jule::Ptr<_1d567d498_FnIns> _184817_f = _1d63201d3_fnc(_184754_d.get()._field_kind.ptr());;
	if ((_1d62e43d8_is_global(_self_.ptr()) && _184817_f.get()._field_decl.get()._field_exceptional)) {
		_1d62e3739_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1d62e3a58_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_184754_d=nullptr;
		return;;
	};
	if (_1d567e1e1_is_builtin(_184817_f.ptr())) {
		_1d63050ec_call_builtin_fn(_self_, _184732_fc,_184754_d);
		return;;
	};
	if (((!(_1d567aebd_is_method(_184817_f.get()._field_decl.ptr()))) && _1d6333a65_has_directive(_184817_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1d62e3739_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_184754_d=nullptr;
		return;;
	};
	if (((((!(_184754_d.get()._field_mutable)) && _1d567aebd_is_method(_184817_f.get()._field_decl.ptr())) && (!(_184817_f.get()._field_decl.get()._field_statically))) && _184817_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1d62e3739_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1d62e4174_is_unsafe(_self_.ptr()))) && _184817_f.get()._field_decl.get()._field_unsafety)) {
		_1d62e3739_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _187318_ok;;
	jule::Bool _187322_dynamic_annotation;;
	std::tie(_187318_ok,_187322_dynamic_annotation) = _1d6304ccd_check_fn_call_generics(_self_.ptr(), _184817_f,_184732_fc);
	if ((!(_187318_ok))) {
		_184754_d=nullptr;
		return;;
	};
	jule::Ptr<_1d627c519_Sema> _187917_old = _self_.get()._field_s;;
	if ((_184817_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_184817_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_187917_old != _self_.get()._field_s)) {
			_187917_old.get()._field_errors=jule::append(_187917_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_187917_old;
	});;
	jule::Ptr<_1d567d498_FnIns> _189217_exist_instance = nullptr;;
	if ((!(_187322_dynamic_annotation))) {
		if ((!(_184817_f.get()._field_reloaded))) {
			_187318_ok=_1d6287ce9_reload_fn_ins_types(_self_.get()._field_s, _184817_f);
			_184817_f.get()._field_reloaded=true;
			if ((!(_187318_ok))) {
				_184754_d=nullptr;
				return;;
			};
		};
		_189217_exist_instance=_1d567c222_append_instance(_184817_f.get()._field_decl.ptr(), _184817_f);
		if ((_184817_f.get()._field_generics.len() > 0LL)) {
			if ((!(_1d62871a0_check_constraints_fn(_self_.get()._field_s, _184817_f,_184732_fc.get()._field_token,_189217_exist_instance)))) {
				_184754_d=nullptr;
				return;;
			};
		};
	} else if ((_184817_f.get()._field_generics.len() > 0LL)) {
		_1d62868ec_build_fn_non_generic_type_kinds(_self_.get()._field_s, _184817_f);
	};
	_1d62d342c_FnCallArgChecker _191417_fcac = _1d62d342c_FnCallArgChecker{._field_e=_self_, ._field_args=_184732_fc.get()._field_args, ._field_error_token=_184732_fc.get()._field_token, ._field_f=_184817_f, ._field_dynamic_annotation=_187322_dynamic_annotation, };;
	if ((_184817_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_187917_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187917_old);
		_187318_ok=_1d62d57e7_check(&_191417_fcac);
		std::tie(_187917_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187917_old);
	} else {
		_187318_ok=_1d62d57e7_check(&_191417_fcac);
	};
	if (((!(_187318_ok)) && _187322_dynamic_annotation)) {
		_184754_d=nullptr;
		return;;
	};
	if (_187322_dynamic_annotation) {
		_187318_ok=_1d6287ce9_reload_fn_ins_types(_self_.get()._field_s, _184817_f);
		_184817_f.get()._field_reloaded=true;
		if ((!(_187318_ok))) {
			_184754_d=nullptr;
			return;;
		};
		_189217_exist_instance=_1d567c222_append_instance(_184817_f.get()._field_decl.ptr(), _184817_f);
		if ((!(_1d62871a0_check_constraints_fn(_self_.get()._field_s, _184817_f,_184732_fc.get()._field_token,_189217_exist_instance)))) {
			_184754_d=nullptr;
			return;;
		};
	} else if ((_184817_f.get()._field_generics.len() == 0LL)) {
		_189217_exist_instance=_1d567c222_append_instance(_184817_f.get()._field_decl.ptr(), _184817_f);
	};
	if ((_189217_exist_instance != nullptr)) {
		_184817_f=_189217_exist_instance;
	};
	jule::Any _195317_call_model = _184754_d.get()._field_model;;
	if (_1d567ac59_is_void(_184817_f.get()._field_decl.ptr())) {
		_184754_d=_1d63186e8_build_void_data();
	} else {
		_184754_d.get()._field_kind=_184817_f.get()._field_result;
		_184754_d.get()._field_lvalue=false;
	};
	jule::Ptr<_1d567400a_FnCallExprModel> _196217_model = jule::new_ptr<_1d567400a_FnCallExprModel>(_1d567400a_FnCallExprModel{._field_token=_184732_fc.get()._field_token, ._field_func=_184817_f, ._field_expr=_195317_call_model, ._field_args=_191417_fcac._field_arg_models, });;
	_184754_d.get()._field_model=static_cast<jule::Any>(_196217_model);
	_184754_d.get()._field_mutable=true;
	if (_184817_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1d55b33ab_unhandled(_184732_fc.ptr())) {
				_case_begin_1d8d6e438:;
				{
					_1d62e3739_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1d62e3a58_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1d55b3620_ignored(_184732_fc.ptr())) {
				_case_begin_1d8d6e25c:;
				{
					goto _match_end_1d8d6dcc8;
				}
			}
			else {
				_case_begin_1d8d6dda5:;
				{
					_1d6305839_process_exceptional_handler(_self_.ptr(), _184817_f,_184732_fc,_184754_d);
				}
			}
			_match_end_1d8d6dcc8:;
		};
	} else if ((!(_1d55b33ab_unhandled(_184732_fc.ptr())))) {
		_1d62e3739_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if ((_184817_f.get()._field_generics.len() > 0LL)) {
		if ((_189217_exist_instance != nullptr)) {
			_1d6319573_update_model_to_generic_ins(_196217_model,_184817_f);
		} else {
			_1d629481c_check_fn_ins_caller(_self_.get()._field_s, _184817_f,_184732_fc.get()._field_token);
		};
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6305e77_eval_fn_call(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b3048_FnCallExpr> _200136_fc) {
	jule::Ptr<_1d631bdd3_TypeKind> _200217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_200217_prefix;
	});;
	{
		auto &_match_expr{ _200136_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55b0c27_IdentExpr>>()) {
			_case_begin_1d8d72a57:;
			{
				if ((_200136_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1d639a923_builtin_caller_error(_self_,_200136_fc);
				};
			}
		}
		_match_end_1d8d72a02:;
	};
	jule::Ptr<_1d62e16b0_Data> _201517_d = _1d630ce7e_eval_expr_kind(_self_, _200136_fc.get()._field_expr.get()._field_kind);;
	if ((_201517_d == nullptr)) {
		return nullptr;
	};
	if (_201517_d.get()._field_decl) {
		_1d6304926_call_type_fn(_self_, _200136_fc,_201517_d);
		return _201517_d;
	};
	if ((_1d63201d3_fnc(_201517_d.get()._field_kind.ptr()) == nullptr)) {
		_1d62e3739_push_err(_self_.ptr(), _200136_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1d6305b69_call_fn(_self_, _200136_fc,_201517_d);
	return _201517_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d630632e_eval_enum_static(_1d62e322d_Eval* _self_, jule::Ptr<_1d5692820_Enum> _203439_enm, jule::Ptr<_1ee538d51_Token> _203451_ident) {
	jule::Ptr<_1d62e16b0_Data> _203517_d = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_203439_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_1d581b2c3_EnumItem> _204417_item = _1d580e33d_find_item(_203439_enm.ptr(), _203451_ident.get()._field_kind);;
	if ((_204417_item == nullptr)) {
		_1d62e3739_push_err(&(*_self_), _203451_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203439_enm.get()._field_ident),jule::Any(_203451_ident.get()._field_kind)}));
	} else {
		_203517_d.get()._field_constant=jule::new_ptr<_1d561288e_Const>((*(_204417_item.get()._field_value.get()._field_data.get()._field_constant)));
		_203517_d.get()._field_model=static_cast<jule::Any>(_203517_d.get()._field_constant);
		_1d6318c9d_apply_cast_model_by_enum(_203517_d,_203439_enm);
	};
	return _203517_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63066d6_eval_type_enum_static(_1d62e322d_Eval* _self_, jule::Ptr<_1d5a788b5_TypeEnum> _205644_enm, jule::Ptr<_1ee538d51_Token> _205660_ident) {
	jule::Ptr<_1d580d749_TypeEnumItem> _205717_item = _1d59c4756_find_item(_205644_enm.ptr(), _205660_ident.get()._field_kind);;
	if ((_205717_item == nullptr)) {
		_1d62e3739_push_err(&(*_self_), _205660_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_205644_enm.get()._field_ident),jule::Any(_205660_ident.get()._field_kind)}));
		return nullptr;
	};
	{
		
		if ((_1d631e732_enm(_205717_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8d7b830:;
			{
				return _1d62e6cd1___eval_enum(&(*_self_), _1d631e732_enm(_205717_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1d631e996_tenm(_205717_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8d7ba2d:;
			{
				return _1d62e7496___eval_type_enum(&(*_self_), _1d631e996_tenm(_205717_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1d6320447_strct(_205717_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8d7ac4c:;
			{
				return _1d62e7b5b___eval_struct(&(*_self_), _1d6320447_strct(_205717_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else {
			_case_begin_1d8d79ed2:;
			{
				jule::Ptr<_1d62e16b0_Data> _207021_d = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=_205717_item.get()._field_kind.get()._field_kind, ._field_decl=true, });;
				_207021_d.get()._field_model=static_cast<jule::Any>(_207021_d.get()._field_kind);
				return _207021_d;
			}
		}
		_match_end_1d8d79e6b:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6306a8d_eval_struct_static(_1d62e322d_Eval* _self_, jule::Ptr<_1d55c62d1_StructIns> _207941_s, jule::Ptr<_1ee538d51_Token> _207956_ident) {
	jule::Ptr<_1d62e16b0_Data> _208017_d = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_1d567a7e7_Fn> _208817_method = _1d55a0068_find_method(_207941_s.ptr(), _207956_ident.get()._field_kind,true);;
	if ((_208817_method != nullptr)) {
		if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _208817_method.get()._field_public,_208817_method.get()._field_token)))) {
			_1d62e3739_push_err(&(*_self_), _207956_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_207956_ident.get()._field_kind)}));
			_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1d567d498_FnIns> _209521_ins = _1d567be47_instance(_208817_method);;
		_209521_ins.get()._field_owner=_207941_s;
		_1d8c3e2a3_push_reference(&(*_self_), _209521_ins);
		_208017_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567547e_StructStaticIdentExprModel>(_1d567547e_StructStaticIdentExprModel{._field_structure=_207941_s, ._field_expr=_208017_d.get()._field_model, ._field_method=_209521_ins}));
		_208017_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_209521_ins, 1)});
		return _208017_d;
	};
	jule::Ptr<_1d6298ea3_Var> _210917_sttc = _1d55892d8_find_static(_207941_s.get()._field_decl.ptr(), _207956_ident.get()._field_kind);;
	if ((_210917_sttc != nullptr)) {
		return _1d62e9a09_eval_var(&(*_self_), _210917_sttc,_207956_ident);
	};
	_1d62e3739_push_err(&(*_self_), _207956_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_207941_s.get()._field_decl.get()._field_ident),jule::Any(_207956_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6306ede_eval_trait_sub_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _211843_d, jule::Ptr<_1d59c3e1a_Trait> _211857_trt, jule::Ptr<_1ee538d51_Token> _211874_ident) {
	jule::Ptr<_1d567a7e7_Fn> _211917_f = _1d5724187_find_method(_211857_trt.ptr(), _211874_ident.get()._field_kind);;
	if ((_211917_f == nullptr)) {
		_1d62e3739_push_err(&(*_self_), _211874_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211857_trt.get()._field_ident),jule::Any(_211874_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d567be47_instance(_211917_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5674d74_TraitSubIdentExprModel>(_1d5674d74_TraitSubIdentExprModel{._field_token=_211874_ident, ._field_expr=_211843_d.get()._field_model, ._field_method=_211917_f, ._field_trt=_211857_trt})), ._field_decl=false, });
}



inline jule::Ptr<_1d62e16b0_Data> _1d63074d9_eval_struct_sub_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _214144_d, jule::Ptr<_1d55c62d1_StructIns> _214158_s, jule::Ptr<_1d55b24ba_SubIdentExpr> _214177_si, jule::Bool _214196_ref) {
	jule::Ptr<_1d55a2532_FieldIns> _214217_f = _1d55a1388_find_field(_214158_s.ptr(), _214177_si.get()._field_ident.get()._field_kind);;
	if ((_214217_f != nullptr)) {
		if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _214217_f.get()._field_decl.get()._field_public,_214217_f.get()._field_decl.get()._field_token)))) {
			_1d62e3739_push_err(&(*_self_), _214177_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_214217_f.get()._field_decl.get()._field_ident)}));
			_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1d5675292_StructSubIdentExprModel> _214921_model = jule::new_ptr<_1d5675292_StructSubIdentExprModel>(_1d5675292_StructSubIdentExprModel{._field_token=_214177_si.get()._field_ident, ._field_expr=jule::new_ptr<_1d62e16b0_Data>((*(_214144_d))), ._field_expr_kind=_214144_d.get()._field_kind, ._field_field=_214217_f});;
		_214144_d.get()._field_model=static_cast<jule::Any>(_214921_model);
		_214144_d.get()._field_kind=_214217_f.get()._field_kind;
		_214144_d.get()._field_lvalue=true;
		if ((_214217_f.get()._field_decl.get()._field_mutable && (!(_214144_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
					_case_begin_1d8d8cd2a:;
					{
						jule::Ptr<_1d625c571_ScopeChecker> _216325_scope = _1d6260684_get_root((*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>());;
						_214144_d.get()._field_mutable=((_216325_scope.get()._field_owner != nullptr) && (_216325_scope.get()._field_owner.get()._field_owner == _214158_s));
					}
				}
				_match_end_1d8d8ccc5:;
			};
		};
		return _214144_d;
	};
	;
	jule::Ptr<_1d567a7e7_Fn> _217217_m = _1d55a0068_find_method(_214158_s.ptr(), _214177_si.get()._field_ident.get()._field_kind,false);;
	if ((_217217_m == nullptr)) {
		_1d62e3739_push_err(&(*_self_), _214177_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_214158_s.get()._field_decl.get()._field_ident),jule::Any(_214177_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _217217_m.get()._field_public,_217217_m.get()._field_token)))) {
		_1d62e3739_push_err(&(*_self_), _214177_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_217217_m.get()._field_ident)}));
		_1d62e3a58_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1d567984b_is_ref(_217217_m.get()._field_params[0LL].ptr()) && (!(_214196_ref)))) {
		_1d62e3739_push_err(&(*_self_), _214177_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1d62e8640_check_deprecated(&(*_self_), _217217_m.get()._field_directives,_214177_si.get()._field_ident);
	jule::Ptr<_1d567d498_FnIns> _218817_ins = _1d567be47_instance(_217217_m);;
	_218817_ins.get()._field_owner=_214158_s;
	_1d8c3e2a3_push_reference(&(*_self_), _218817_ins);
	jule::Ptr<_1d62e16b0_Data> _219117_model = jule::new_ptr<_1d62e16b0_Data>((*(_214144_d)));;
	_214144_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675292_StructSubIdentExprModel>(_1d5675292_StructSubIdentExprModel{._field_token=_214177_si.get()._field_ident, ._field_expr=_219117_model, ._field_expr_kind=_214144_d.get()._field_kind, ._field_method=_218817_ins, }));
	_214144_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_218817_ins, 1)});
	return _214144_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6307891_eval_slice_sub_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _220243_d, jule::Ptr<_1ee538d51_Token> _220257_ident) {
	{
		auto &_match_expr{ _220257_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1d8d9688e:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_220243_d.get()._field_kind, ._field_expr=_220243_d.get()._field_model, ._field_token=_220257_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1d8d96905:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_220243_d.get()._field_kind, ._field_expr=_220243_d.get()._field_model, ._field_token=_220257_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1d8d9696b:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_params=jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>::make({jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63a2760_builtin_caller_common_mut), }), 1)}), ._field_mutable=_220243_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_220243_d.get()._field_kind, ._field_expr=_220243_d.get()._field_model, ._field_token=_220257_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1d8d96828:;
			{
				_1d62e3739_push_err(&(*_self_), _220257_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_220243_d.get()._field_kind.ptr())),jule::Any(_220257_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8d965d6:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6307c48_eval_array_sub_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _226143_d, jule::Ptr<_1ee538d51_Token> _226157_ident) {
	{
		auto &_match_expr{ _226157_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1d8d97b9d:;
			{
				jule::Ptr<_1d561288e_Const> _226421_c = static__1d5669eac_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1d631ec0a_arr(_226143_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(_226421_c), ._field_constant=_226421_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1d8d9caa4:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_params=jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>::make({jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63a2760_builtin_caller_common_mut), }), 1)}), ._field_mutable=_226143_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_226143_d.get()._field_kind, ._field_expr=_226143_d.get()._field_model, ._field_token=_226157_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1d8d9ba81:;
			{
				_1d62e3739_push_err(&(*_self_), _226157_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_226143_d.get()._field_kind.ptr())),jule::Any(_226157_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8d9b9c6:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6308100_eval_map_sub_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _230641_d, jule::Ptr<_1ee538d51_Token> _230655_ident) {
	jule::Ptr<_1d6327152_Map> _230717_map_kind = _1d6320920_map(_230641_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _230655_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1d8da2933:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_230641_d.get()._field_kind, ._field_expr=_230641_d.get()._field_model, ._field_token=_230655_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1d8da2999:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63a2760_builtin_caller_common_mut), }), 1)}), ._field_mutable=_230641_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_230641_d.get()._field_kind, ._field_expr=_230641_d.get()._field_model, ._field_token=_230655_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1d8da2823:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_result=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d6325a9b_Slc>(_1d6325a9b_Slc{._field_elem=_230717_map_kind.get()._field_key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63a2760_builtin_caller_common_mut), }), 1)}), ._field_mutable=_230641_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_230641_d.get()._field_kind, ._field_expr=_230641_d.get()._field_model, ._field_token=_230655_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1d8da2889:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_result=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d6325a9b_Slc>(_1d6325a9b_Slc{._field_elem=_230717_map_kind.get()._field_val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63a2760_builtin_caller_common_mut), }), 1)}), ._field_mutable=_230641_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_230641_d.get()._field_kind, ._field_expr=_230641_d.get()._field_model, ._field_token=_230655_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1d8da1aa8:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_params=jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>::make({jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_230717_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63b9d2c_builtin_caller_common), }), 1)}), ._field_mutable=_230641_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_230641_d.get()._field_kind, ._field_expr=_230641_d.get()._field_model, ._field_token=_230655_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1d8da1b1e:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_params=jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>::make({jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_230717_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63a2760_builtin_caller_common_mut), }), 1)}), ._field_mutable=_230641_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_230641_d.get()._field_kind, ._field_expr=_230641_d.get()._field_model, ._field_token=_230655_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1d8da1a42:;
			{
				_1d62e3739_push_err(&(*_self_), _230655_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1d63274b5_to_str(_230717_map_kind.ptr())),jule::Any(_230655_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8da1998:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63084a7_eval_str_sub_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _242941_d, jule::Ptr<_1ee538d51_Token> _242955_ident) {
	jule::Ptr<_1d631bdd3_TypeKind> _243017_str_kind = jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _242955_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1d8dab2cc:;
			{
				jule::Ptr<_1d62e16b0_Data> _243321_sd = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1d62e2073_is_const(_242941_d.ptr())) {
					_243321_sd.get()._field_constant=static__1d5669eac_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1d566b72d_read_str(_242941_d.get()._field_constant.ptr()).len())));
					_243321_sd.get()._field_model=static_cast<jule::Any>(_243321_sd.get()._field_constant);
				} else {
					_243321_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_242941_d.get()._field_kind, ._field_expr=_242941_d.get()._field_model, ._field_token=_242955_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _243321_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1d8dab343:;
			{
				jule::Ptr<_1d62e16b0_Data> _244921_sd = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1d62e2073_is_const(_242941_d.ptr())) {
					_244921_sd.get()._field_constant=static__1d5669eac_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1d566b72d_read_str(_242941_d.get()._field_constant.ptr()).cap())));
					_244921_sd.get()._field_model=static_cast<jule::Any>(_244921_sd.get()._field_constant);
				} else {
					_244921_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_242941_d.get()._field_kind, ._field_expr=_242941_d.get()._field_model, ._field_token=_242955_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _244921_sd;
			}
		}
		else {
			_case_begin_1d8dab266:;
			{
				_1d62e3739_push_err(&(*_self_), _242955_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_243017_str_kind.ptr())),jule::Any(_242955_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dab1bc:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63087b5_eval_int_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _247039_ident) {
	;
	{
		auto &_match_expr{ _247039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8db2547:;
			{
				jule::Ptr<_1d561288e_Const> _247521_c = static__1d5669eac_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1d624e80a_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_247521_c), ._field_constant=_247521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1d8db25ad:;
			{
				jule::Ptr<_1d561288e_Const> _248221_c = static__1d5669eac_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1d624e51e_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_248221_c), ._field_constant=_248221_c});
			}
		}
		else {
			_case_begin_1d8db249d:;
			{
				_1d62e3739_push_err(&(*_self_), _247039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_247039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8db2305:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6308ac3_eval_uint_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _249440_ident) {
	;
	{
		auto &_match_expr{ _249440_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8db5e96:;
			{
				jule::Ptr<_1d561288e_Const> _249921_c = static__1d566a0de_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1d624e80a_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("uint", 4)), 6)}), ._field_model=static_cast<jule::Any>(_249921_c), ._field_constant=_249921_c});
			}
		}
		else {
			_case_begin_1d8db5e30:;
			{
				_1d62e3739_push_err(&(*_self_), _249440_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_249440_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8db5d86:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6308dd1_eval_i8_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _251138_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _251138_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8db8dab:;
			{
				jule::Ptr<_1d561288e_Const> _251821_c = static__1d5669eac_new_i64(127LL);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_251821_c), ._field_constant=_251821_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1d8db8e22:;
			{
				jule::Ptr<_1d561288e_Const> _252521_c = static__1d5669eac_new_i64(-128LL);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_252521_c), ._field_constant=_252521_c});
			}
		}
		else {
			_case_begin_1d8db8d01:;
			{
				_1d62e3739_push_err(&(*_self_), _251138_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_251138_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8db8c9b:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63091de_eval_i16_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _253739_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253739_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dbca91:;
			{
				jule::Ptr<_1d561288e_Const> _254421_c = static__1d5669eac_new_i64(32767LL);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_254421_c), ._field_constant=_254421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1d8dbcb07:;
			{
				jule::Ptr<_1d561288e_Const> _255121_c = static__1d5669eac_new_i64(-32768LL);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_255121_c), ._field_constant=_255121_c});
			}
		}
		else {
			_case_begin_1d8dbc9d6:;
			{
				_1d62e3739_push_err(&(*_self_), _253739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_253739_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dbc981:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63094ec_eval_i32_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _256339_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _256339_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dc1776:;
			{
				jule::Ptr<_1d561288e_Const> _257021_c = static__1d5669eac_new_i64(2147483647LL);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_257021_c), ._field_constant=_257021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1d8dc17dc:;
			{
				jule::Ptr<_1d561288e_Const> _257721_c = static__1d5669eac_new_i64(-2147483648LL);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_257721_c), ._field_constant=_257721_c});
			}
		}
		else {
			_case_begin_1d8dc16bb:;
			{
				_1d62e3739_push_err(&(*_self_), _256339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_256339_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dc1666:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630980a_eval_i64_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _258939_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _258939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dc545b:;
			{
				jule::Ptr<_1d561288e_Const> _259621_c = static__1d5669eac_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_259621_c), ._field_constant=_259621_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1d8dc54c2:;
			{
				jule::Ptr<_1d561288e_Const> _260321_c = static__1d5669eac_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_260321_c), ._field_constant=_260321_c});
			}
		}
		else {
			_case_begin_1d8dc53a1:;
			{
				_1d62e3739_push_err(&(*_self_), _258939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_258939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dc534b:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6309b18_eval_u8_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _261538_ident) {
	;
	;
	{
		auto &_match_expr{ _261538_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dc95d6:;
			{
				jule::Ptr<_1d561288e_Const> _262121_c = static__1d566a0de_new_u64(255LLU);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_262121_c), ._field_constant=_262121_c});
			}
		}
		else {
			_case_begin_1d8dc7ace:;
			{
				_1d62e3739_push_err(&(*_self_), _261538_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_261538_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dc8a69:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6309e26_eval_u16_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _263339_ident) {
	;
	;
	{
		auto &_match_expr{ _263339_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dcbe8a:;
			{
				jule::Ptr<_1d561288e_Const> _263921_c = static__1d566a0de_new_u64(65535LLU);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_263921_c), ._field_constant=_263921_c});
			}
		}
		else {
			_case_begin_1d8dcb1dc:;
			{
				_1d62e3739_push_err(&(*_self_), _263339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_263339_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dcb41d:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630a234_eval_u32_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _265139_ident) {
	;
	;
	{
		auto &_match_expr{ _265139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dce83e:;
			{
				jule::Ptr<_1d561288e_Const> _265721_c = static__1d566a0de_new_u64(4294967295LLU);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_265721_c), ._field_constant=_265721_c});
			}
		}
		else {
			_case_begin_1d8dcda91:;
			{
				_1d62e3739_push_err(&(*_self_), _265139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_265139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dcdcc2:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630a542_eval_u64_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _266939_ident) {
	;
	;
	{
		auto &_match_expr{ _266939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dd21e3:;
			{
				jule::Ptr<_1d561288e_Const> _267521_c = static__1d566a0de_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_267521_c), ._field_constant=_267521_c});
			}
		}
		else {
			_case_begin_1d8dd1445:;
			{
				_1d62e3739_push_err(&(*_self_), _266939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_266939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dd1676:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630a850_eval_f32_type_tatic(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _268738_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _268738_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dd4998:;
			{
				jule::Ptr<_1d561288e_Const> _269521_c = static__1d566a6e9_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_269521_c), ._field_constant=_269521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1d8dd4a0e:;
			{
				jule::Ptr<_1d561288e_Const> _270221_c = static__1d566a6e9_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_270221_c), ._field_constant=_270221_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1d8dd4a75:;
			{
				jule::Ptr<_1d561288e_Const> _270921_c = static__1d566a6e9_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_270921_c), ._field_constant=_270921_c});
			}
		}
		else {
			_case_begin_1d8dd4855:;
			{
				_1d62e3739_push_err(&(*_self_), _268738_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_268738_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dd47de:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630ab5d_eval_f64_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1ee538d51_Token> _272139_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _272139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1d8dd9915:;
			{
				jule::Ptr<_1d561288e_Const> _272921_c = static__1d566a6e9_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_272921_c), ._field_constant=_272921_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1d8dd997b:;
			{
				jule::Ptr<_1d561288e_Const> _273621_c = static__1d566a6e9_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_273621_c), ._field_constant=_273621_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1d8dd99e2:;
			{
				jule::Ptr<_1d561288e_Const> _274321_c = static__1d566a6e9_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_274321_c), ._field_constant=_274321_c});
			}
		}
		else {
			_case_begin_1d8dd97c2:;
			{
				_1d62e3739_push_err(&(*_self_), _272139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_272139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8dd975b:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630b015_eval_prim_static(_1d62e322d_Eval* _self_, jule::Str _275535_kind, jule::Ptr<_1ee538d51_Token> _275546_ident) {
	{
		auto &_match_expr{ _275535_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1d8ddd8d6:;
			{
				return _1d63087b5_eval_int_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1d8ddd94c:;
			{
				return _1d6308ac3_eval_uint_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1d8dde2cc:;
			{
				return _1d6308dd1_eval_i8_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d8dde343:;
			{
				return _1d63091de_eval_i16_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d8dde3a9:;
			{
				return _1d63094ec_eval_i32_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d8dde420:;
			{
				return _1d630980a_eval_i64_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1d8dde486:;
			{
				return _1d6309b18_eval_u8_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1d8dde4ec:;
			{
				return _1d6309e26_eval_u16_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1d8dde563:;
			{
				return _1d630a234_eval_u32_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1d8dde5c9:;
			{
				return _1d630a542_eval_u64_type_static(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d8dde640:;
			{
				return _1d630a850_eval_f32_type_tatic(&(*_self_), _275546_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d8dde6a6:;
			{
				return _1d630ab5d_eval_f64_type_static(&(*_self_), _275546_ident);
			}
		}
		else {
			_case_begin_1d8ddd782:;
			{
				_1d62e3739_push_err(&(*_self_), _275546_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_275535_kind),jule::Any(_275546_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8ddd5ea:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630b3bc_eval_type_static(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _278739_d, jule::Ptr<_1d55b24ba_SubIdentExpr> _278753_si) {
	{
		
		if ((_1d631dee5_prim(_278739_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8de3d4d:;
			{
				return _1d630b015_eval_prim_static(&(*_self_), _1d6321c1d_to_str(_1d631dee5_prim(_278739_d.get()._field_kind.ptr()).ptr()),_278753_si.get()._field_ident);
			}
		}
		else if ((_1d631e732_enm(_278739_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8de3db4:;
			{
				return _1d630632e_eval_enum_static(&(*_self_), _1d631e732_enm(_278739_d.get()._field_kind.ptr()),_278753_si.get()._field_ident);
			}
		}
		else if ((_1d631e996_tenm(_278739_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8de3e2a:;
			{
				return _1d63066d6_eval_type_enum_static(&(*_self_), _1d631e996_tenm(_278739_d.get()._field_kind.ptr()),_278753_si.get()._field_ident);
			}
		}
		else if ((_1d6320447_strct(_278739_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8de3e91:;
			{
				return _1d6306a8d_eval_struct_static(&(*_self_), _1d6320447_strct(_278739_d.get()._field_kind.ptr()),_278753_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1d8de3cd7:;
			{
				_1d62e3739_push_err(&(*_self_), _278753_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_278739_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8de3c2c:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630b774_eval_obj_sub_ident(_1d62e322d_Eval* _self_, jule::Ptr<_1d62e16b0_Data> _280341_d, jule::Ptr<_1d55b24ba_SubIdentExpr> _280355_si) {
	if (_1ee53b5e5_is_ignore_ident(_280355_si.get()._field_ident.get()._field_kind)) {
		_1d62e3739_push_err(&(*_self_), _280355_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _280917_kind = _280341_d.get()._field_kind;;
	{
		
		if ((_1d631e4bd_ptr(_280341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8de9a9b:;
			{
				jule::Ptr<_1d63286a3_Ptr> _281217_ptr = _1d631e4bd_ptr(_280341_d.get()._field_kind.ptr());;
				if (_1d6329176_is_unsafe(_281217_ptr.ptr())) {
					goto _match_end_1d8de9947;
				};
				if (((!(_280355_si.get()._field_is_self)) && (!(_1d62e4174_is_unsafe(&(*_self_)))))) {
					_1d62e3739_push_err(&(*_self_), _280355_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_280917_kind=_1d631e4bd_ptr(_280341_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1d631e259_sptr(_280341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8de9b12:;
			{
				_280917_kind=_1d631e259_sptr(_280341_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1d8de9947:;
	};
	{
		
		if ((_1d63206ab_trt(_280341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8dec582:;
			{
				return _1d6306ede_eval_trait_sub_ident(&(*_self_), _280341_d,_1d63206ab_trt(_280341_d.get()._field_kind.ptr()),_280355_si.get()._field_ident);
			}
		}
		else if ((_1d6320447_strct(_280917_kind.ptr()) != nullptr)) {
			_case_begin_1d8dec609:;
			{
				jule::Ptr<_1d55c62d1_StructIns> _282817_s = _1d6320447_strct(_280917_kind.ptr());;
				if (_1d6317c36_is_instanced_struct(_282817_s)) {
					jule::Bool _283025_used_reference_elem = (_1d631e259_sptr(_280341_d.get()._field_kind.ptr()) != nullptr);;
					return _1d63074d9_eval_struct_sub_ident(&(*_self_), _280341_d,_1d6320447_strct(_280917_kind.ptr()),_280355_si,_283025_used_reference_elem);
				};
			}
		}
		else if ((_1d631ee6e_slc(_280917_kind.ptr()) != nullptr)) {
			_case_begin_1d8dec681:;
			{
				return _1d6307891_eval_slice_sub_ident(&(*_self_), _280341_d,_280355_si.get()._field_ident);
			}
		}
		else if ((_1d631ec0a_arr(_280917_kind.ptr()) != nullptr)) {
			_case_begin_1d8dec708:;
			{
				return _1d6307c48_eval_array_sub_ident(&(*_self_), _280341_d,_280355_si.get()._field_ident);
			}
		}
		else if ((_1d6320920_map(_280917_kind.ptr()) != nullptr)) {
			_case_begin_1d8decc69:;
			{
				return _1d6308100_eval_map_sub_ident(&(*_self_), _280341_d,_280355_si.get()._field_ident);
			}
		}
		else if ((_1d631dee5_prim(_280917_kind.ptr()) != nullptr)) {
			_case_begin_1d8decce1:;
			{
				jule::Ptr<_1d63218aa_Prim> _284017_p = _1d631dee5_prim(_280917_kind.ptr());;
				{
					auto &_match_expr{ _284017_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1d8e035bb:;
						{
							return _1d63084a7_eval_str_sub_ident(&(*_self_), _280341_d,_280355_si.get()._field_ident);
						}
					}
					_match_end_1d8e03412:;
				};
			}
		}
		_match_end_1d8dec483:;
	};
	_1d62e3739_push_err(&(*_self_), _280355_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_280341_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1d62e16b0_Data> _1d630ba82_eval_sub_ident(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b24ba_SubIdentExpr> _285038_si) {
	jule::Ptr<_1d631bdd3_TypeKind> _285117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_285117_prefix;
	});;
	jule::Ptr<_1d62e16b0_Data> _285517_d = _1d630ce7e_eval_expr_kind(_self_, _285038_si.get()._field_expr.get()._field_kind);;
	if ((_285517_d == nullptr)) {
		return nullptr;
	};
	if (_285517_d.get()._field_decl) {
		return _1d630b3bc_eval_type_static(_self_.ptr(), _285517_d,_285038_si);
	};
	return _1d630b774_eval_obj_sub_ident(_self_.ptr(), _285517_d,_285038_si);
}



inline jule::Ptr<_1d62e16b0_Data> _1d630bd90_eval_tuple(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55ae83b_TupleExpr> _286734_tup) {
	jule::Ptr<_1d6326629_Tuple> _286817_tup_t = jule::new_ptr<_1d6326629_Tuple>(_1d6326629_Tuple{});;
	_286817_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>>::alloc(0LL,_286734_tup.get()._field_expr.len());
	jule::Ptr<_1d5675c32_TupleExprModel> _287117_model = jule::new_ptr<_1d5675c32_TupleExprModel>(_1d5675c32_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1d62e16b0_Data>>::alloc(0LL,_286734_tup.get()._field_expr.len())});;
	jule::Bool _287517_ok = true;;
	{
		auto &expr = _286734_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1d8e08813:;
		if (it != expr.end()) {
			jule::Ptr<_1d55adbae_Expr> _287621_expr = *it;
			{
				jule::Ptr<_1d62e16b0_Data> _287721_d = _1d630ce7e_eval_expr_kind(_self_, _287621_expr.get()._field_kind);;
				if ((_287721_d == nullptr)) {
					_287517_ok=false;
					goto _iter_next_1d8e08813;
				};
				_286817_tup_t.get()._field_types = jule::alloc_for_append(_286817_tup_t.get()._field_types,1);_286817_tup_t.get()._field_types.__push(_287721_d.get()._field_kind);;
				_287117_model.get()._field_datas = jule::alloc_for_append(_287117_model.get()._field_datas,1);_287117_model.get()._field_datas.__push(_287721_d);;
			}
			_iter_next_1d8e08813:;
			++it;
			goto _iter_begin_1d8e08813;
		}
		_iter_end_1d8e08813:;
	};
	if ((!(_287517_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_286817_tup_t, 9)}), ._field_model=static_cast<jule::Any>(_287117_model), });
}



inline jule::Ptr<_1d62e16b0_Data> _1d630c247_eval_map(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d6327152_Map> _289632_m, jule::Ptr<_1d55b4698_BraceLit> _289645_lit) {
	jule::Ptr<_1d567499a_MapExprModel> _289717_model = jule::new_ptr<_1d567499a_MapExprModel>(_1d567499a_MapExprModel{._field_key_kind=_289632_m.get()._field_key, ._field_val_kind=_289632_m.get()._field_val, });;
	{
		auto &expr = _289645_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d8e0bb8a:;
		if (it != expr.end()) {
			jule::Ptr<_1d55adbae_Expr> _290221_expr = *it;
			{
				{
					auto &_match_expr{ _290221_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d55b51b0_KeyValPair>>()) {
						_case_begin_1d8e0c6c4:;
						{
							goto _match_end_1d8e0c4a4;
						}
					}
					else {
						_case_begin_1d8e0c62a:;
						{
							_1d62e3739_push_err(_self_.ptr(), _289645_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1d8e0c4a4:;
				};
				jule::Ptr<_1d55b51b0_KeyValPair> _291221_pair = _290221_expr.get()._field_kind.operator jule::Ptr<_1d55b51b0_KeyValPair>();;
				jule::Ptr<_1d62e16b0_Data> _291421_key = _1d630ce7e_eval_expr_kind(_self_, _291221_pair.get()._field_key.get()._field_kind);;
				if ((_291421_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1d62e16b0_Data> _291921_val = _1d630ce7e_eval_expr_kind(_self_, _291221_pair.get()._field_val.get()._field_kind);;
				if ((_291921_val == nullptr)) {
					return nullptr;
				};
				_1d6285cd6_check_assign_type(_self_.get()._field_s, false,_289632_m.get()._field_key,_291421_key,_291221_pair.get()._field_colon);
				_1d6285cd6_check_assign_type(_self_.get()._field_s, false,_289632_m.get()._field_val,_291921_val,_291221_pair.get()._field_colon);
				_289717_model.get()._field_entries = jule::alloc_for_append(_289717_model.get()._field_entries,1);_289717_model.get()._field_entries.__push(jule::new_ptr<_1d56747ad_KeyValPairExprModel>(_1d56747ad_KeyValPairExprModel{._field_key=_291421_key.get()._field_model, ._field_val=_291921_val.get()._field_model}));;
			}
			_iter_next_1d8e0bb8a:;
			++it;
			goto _iter_begin_1d8e0bb8a;
		}
		_iter_end_1d8e0bb8a:;
	};
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_289632_m, 10)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_289717_model), });
}



inline jule::Ptr<_1d62e16b0_Data> _1d630c555_eval_brace_lit(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b4698_BraceLit> _294038_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1d8e11e8c:;
			{
				_1d62e3739_push_err(_self_.ptr(), _294038_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1d6320920_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1d8e12003:;
			{
				return _1d630c247_eval_map(_self_, _1d6320920_map(_self_.get()._field_prefix.ptr()),_294038_lit);
			}
		}
		else if ((_1d6320447_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1d8e12069:;
			{
				return _1d6303eca_eval_struct_lit_explicit(_self_, _1d6320447_strct(_self_.get()._field_prefix.ptr()),_294038_lit.get()._field_exprs,_294038_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1d8e11dd2:;
			{
				_1d62e3739_push_err(_self_.ptr(), _294038_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d8e11d05:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d630c863_eval_anon_fn(_1d62e322d_Eval* _self_, jule::Ptr<_1d55bb56d_FnDecl> _295535_decl) {
	_1d632a342_TypeChecker _295617_tc = _1d632a342_TypeChecker{._field_s=(*_self_)._field_s, ._field_lookup=(*_self_)._field_lookup, };;
	jule::Ptr<_1d567d498_FnIns> _296017_ins = _1d6331b84_build_fn(&_295617_tc, _295535_decl);;
	_296017_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
			_case_begin_1d8e15c82:;
			{
				jule::Ptr<_1d625c571_ScopeChecker> _296521_sc = (*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>();;
				jule::Ptr<_1d625c571_ScopeChecker> _296621_scc = _1d626cb14_new_child_checker(_296521_sc);;
				_296621_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d625b2d9_ScopeLabel>>>(nullptr);
				_296621_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d625b75c_ScopeGoto>>>(nullptr);
				_296621_scc.get()._field_owner=nullptr;
				_296621_scc.get()._field_child_index=0LL;
				_296621_scc.get()._field_it=0LLU;
				_296621_scc.get()._field_cse=0LLU;
				_296621_scc.get()._field_owner=_296017_ins;
				_1d62944ed_check_fn_ins_sc((*_self_)._field_s.ptr(), _296017_ins,_296621_scc);
			}
		}
		else {
			_case_begin_1d8e165ce:;
			{
				_1d6294a92_check_fn_ins((*_self_)._field_s, _296017_ins);
			}
		}
		_match_end_1d8e16579:;
	};
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_296017_ins, 1)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56745c1_AnonFnExprModel>(_1d56745c1_AnonFnExprModel{._field_func=_296017_ins, ._field_global=_1d62e43d8_is_global(&(*_self_))})), });
}



inline jule::Ptr<_1d62e16b0_Data> _1d630cb71_eval_binop(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55b293d_BinopExpr> _298834_op) {
	_1d63107ab_BinaryEval _298917_bs = static__1d6310d72_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1d63218aa_Prim> _299317_prim = _1d631dee5_prim(_self_.get()._field_prefix.ptr());;
		if (((_299317_prim == nullptr) || (!(_1d62552a0_is_num(_1d6321c1d_to_str(_299317_prim.ptr())))))) {
			jule::Ptr<_1d631bdd3_TypeKind> _299525_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_299525_prefix;
			});;
			return _1d63161b8_eval(&_298917_bs, _298834_op);
		};
	};
	return _1d63161b8_eval(&_298917_bs, _298834_op);
}



inline jule::Ptr<_1d62e16b0_Data> _1d630ce7e_eval_expr_kind(jule::Ptr<_1d62e322d_Eval> _self_, jule::Any _300538_kind) {
	jule::Ptr<_1d62e16b0_Data> _300617_d = nullptr;;
	{
		auto &_match_expr{ _300538_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55ade9a_RangeExpr>>()) {
			_case_begin_1d8e1dad1:;
			{
				jule::Ptr<_1d55ade9a_RangeExpr> _300921_e = _300538_kind.operator jule::Ptr<_1d55ade9a_RangeExpr>();;
				_300617_d=_1d630ce7e_eval_expr_kind(_self_, _300921_e.get()._field_expr.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aebe3_LitExpr>>()) {
			_case_begin_1d8e1db47:;
			{
				_300617_d=_1d62e6088_eval_lit(_self_.ptr(), _300538_kind.operator jule::Ptr<_1d55aebe3_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b0c27_IdentExpr>>()) {
			_case_begin_1d8e1dbad:;
			{
				_300617_d=_1d62ea576_eval_ident(_self_.ptr(), _300538_kind.operator jule::Ptr<_1d55b0c27_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b1431_UnaryExpr>>()) {
			_case_begin_1d8e1dd9a:;
			{
				_300617_d=_1d62ea884_eval_unary(_self_, _300538_kind.operator jule::Ptr<_1d55b1431_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b17d8_VariadicExpr>>()) {
			_case_begin_1d8e1de11:;
			{
				_300617_d=_1d62eab92_eval_variadic(_self_, _300538_kind.operator jule::Ptr<_1d55b17d8_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b03ec_UnsafeExpr>>()) {
			_case_begin_1d8e1de88:;
			{
				_300617_d=_1d62eaea0_eval_unsafe(_self_, _300538_kind.operator jule::Ptr<_1d55b03ec_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b5633_SliceExpr>>()) {
			_case_begin_1d8e1e010:;
			{
				_300617_d=_1d62eba1c_eval_slice_expr(_self_, _300538_kind.operator jule::Ptr<_1d55b5633_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b5ec4_IndexingExpr>>()) {
			_case_begin_1d8e1e087:;
			{
				_300617_d=_1d62ee679_eval_indexing(_self_, _300538_kind.operator jule::Ptr<_1d55b5ec4_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b65ce_SlicingExpr>>()) {
			_case_begin_1d8e1e10e:;
			{
				_300617_d=_1d6300845_eval_slicing(_self_, _300538_kind.operator jule::Ptr<_1d55b65ce_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b1b90_CastExpr>>()) {
			_case_begin_1d8e1e186:;
			{
				_300617_d=_1d6303749_eval_cast(_self_, _300538_kind.operator jule::Ptr<_1d55b1b90_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b2047_NsSelectionExpr>>()) {
			_case_begin_1d8e1e20d:;
			{
				_300617_d=_1d6303a57_eval_ns_selection(_self_.ptr(), _300538_kind.operator jule::Ptr<_1d55b2047_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b4225_StructLit>>()) {
			_case_begin_1d8e1e285:;
			{
				_300617_d=_1d63042e9_eval_struct_lit(_self_, _300538_kind.operator jule::Ptr<_1d55b4225_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55a968d_TypeDecl>>()) {
			_case_begin_1d8e1e30c:;
			{
				_300617_d=_1d6304607_eval_type(_self_.ptr(), _300538_kind.operator jule::Ptr<_1d55a968d_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b3048_FnCallExpr>>()) {
			_case_begin_1d8e1e384:;
			{
				_300617_d=_1d6305e77_eval_fn_call(_self_, _300538_kind.operator jule::Ptr<_1d55b3048_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b24ba_SubIdentExpr>>()) {
			_case_begin_1d8e1e40b:;
			{
				_300617_d=_1d630ba82_eval_sub_ident(_self_, _300538_kind.operator jule::Ptr<_1d55b24ba_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ae83b_TupleExpr>>()) {
			_case_begin_1d8e1e483:;
			{
				_300617_d=_1d630bd90_eval_tuple(_self_, _300538_kind.operator jule::Ptr<_1d55ae83b_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b4698_BraceLit>>()) {
			_case_begin_1d8e1e50a:;
			{
				_300617_d=_1d630c555_eval_brace_lit(_self_, _300538_kind.operator jule::Ptr<_1d55b4698_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bb56d_FnDecl>>()) {
			_case_begin_1d8e1e582:;
			{
				_300617_d=_1d630c863_eval_anon_fn(_self_.ptr(), _300538_kind.operator jule::Ptr<_1d55bb56d_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b293d_BinopExpr>>()) {
			_case_begin_1d8e1e609:;
			{
				_300617_d=_1d630cb71_eval_binop(_self_, _300538_kind.operator jule::Ptr<_1d55b293d_BinopExpr>());
			}
		}
		_match_end_1d8e1d9d2:;
	};
	return _300617_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d630d28c_eval(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55adbae_Expr> _305328_expr) {
	jule::Ptr<_1d62e16b0_Data> _305417_d = _1d630ce7e_eval_expr_kind(_self_, _305328_expr.get()._field_kind);;
	if (((_305417_d == nullptr) || (_305417_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1d63201d3_fnc(_305417_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e29d2e:;
			{
				jule::Ptr<_1d567d498_FnIns> _306121_f = _1d63201d3_fnc(_305417_d.get()._field_kind.ptr());;
				if (_1d567e1e1_is_builtin(_306121_f.ptr())) {
					goto _match_end_1d8e29bca;
				};
				if ((_306121_f.get()._field_generics.len() != _306121_f.get()._field_decl.get()._field_generics.len())) {
					_1d62801cb_push_err(_self_.get()._field_s.ptr(), _305328_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1d567aebd_is_method(_306121_f.get()._field_decl.ptr())) {
					_1d62801cb_push_err(_self_.get()._field_s.ptr(), _305328_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1d8e29bca:;
	};
	return _305417_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d630d59a_eval_expr(jule::Ptr<_1d62e322d_Eval> _self_, jule::Ptr<_1d55adbae_Expr> _307933_expr) {
	jule::Ptr<_1d62e16b0_Data> _308017_d = _1d630d28c_eval(_self_, _307933_expr);;
	{
		
		if ((_308017_d == nullptr)) {
			_case_begin_1d8e2d66d:;
			{
				return nullptr;
			}
		}
		else if (_308017_d.get()._field_decl) {
			_case_begin_1d8e2d6e5:;
			{
				_1d62e3739_push_err(_self_.ptr(), _307933_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1d8e2d607:;
			{
				return _308017_d;
			}
		}
		_match_end_1d8e2d5a2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d62e322d_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1d630da1d_UnaryEval static__1d630dec4_new(jule::Ptr<_1d62e322d_Eval> _310023_e) {
	return _1d630da1d_UnaryEval{._field_e=_310023_e, };
}



inline void _1d630e1a0_minus(_1d630da1d_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1d8e30296:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e306e7:;
			{
				if ((!(_1d62552a0_is_num(_1d631c2ce_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d6320447_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e3075d:;
			{
				if ((_1d6320447_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1d8e2ee22:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d8e2ec13:;
	};
	if (_1d62e2073_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1d566dd3a_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e3392b:;
				{
					_1d566ce49_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1d566b992_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1d566d389_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e339a3:;
				{
					_1d566c454_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1d566aee1_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1d566d5ed_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e33a2a:;
				{
					_1d566c454_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1d566bc06_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1d8e337e9:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567356a_UnaryExprModel>(_1d567356a_UnaryExprModel{._field_expr=jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1d630e37b_plus(_1d630da1d_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1d8e37ea2:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e383e2:;
			{
				if ((!(_1d62552a0_is_num(_1d631c2ce_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d6320447_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e38458:;
			{
				if ((_1d6320447_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1d8e37aea:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d8e37a1d:;
	};
	if (_1d62e2073_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1d566dd3a_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e3b626:;
				{
					_1d566ce49_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1d566b992_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1d566d389_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e3b69d:;
				{
					_1d566c454_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1d566aee1_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1d566d5ed_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e3b725:;
				{
					_1d566c454_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1d566bc06_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1d8e3b4e4:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567356a_UnaryExprModel>(_1d567356a_UnaryExprModel{._field_expr=jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1d630e557_caret(_1d630da1d_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1d8e40b9c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e410dc:;
			{
				if ((!(_1d6254bd9_is_int(_1d631c2ce_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d6320447_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e41153:;
			{
				if ((_1d6320447_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1d8e407e5:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d8e40718:;
	};
	if (_1d62e2073_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1d566d389_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e44310:;
				{
					_1d566c454_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1d566aee1_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1d566d5ed_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e44387:;
				{
					_1d566c6c9_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1d566b255_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1d8e441de:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567356a_UnaryExprModel>(_1d567356a_UnaryExprModel{._field_expr=jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1d630e733_excl(_1d630da1d_UnaryEval* _self_) {
	jule::Ptr<_1d63218aa_Prim> _321913_t = _1d631dee5_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_321913_t == nullptr) || (!(_1d632487a_is_bool(_321913_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1d62e2073_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1d566d862_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1d8e48c2c:;
				{
					_1d566c94e_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1d566b4b9_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1d8e48b1c:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567356a_UnaryExprModel>(_1d567356a_UnaryExprModel{._field_expr=jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1d630e90e_star(_1d630da1d_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567356a_UnaryExprModel>(_1d567356a_UnaryExprModel{._field_expr=jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1d631e4bd_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e4bb42:;
			{
				if ((!(_1d62e4174_is_unsafe((*_self_)._field_e.ptr())))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1d63286a3_Ptr> _325121_t = _1d631e4bd_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1d6329176_is_unsafe(_325121_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_325121_t.get()._field_elem;
			}
		}
		else if ((_1d631e259_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8e4c093:;
			{
				(*_self_)._field_d.get()._field_kind=_1d631e259_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1d8e4b79b:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d8e4b735:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1d630eada_amper(_1d630da1d_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d5673944_StructLitExprModel>>()) {
			_case_begin_1d8e5173a:;
			{
				jule::Ptr<_1d5673944_StructLitExprModel> _327121_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1d5673944_StructLitExprModel>();;
				_1d6316e55_make_struct_lit_alloc((*_self_)._field_d,_327121_lit);
			}
		}
		else {
			_case_begin_1d8e50edc:;
			{
				{
					
					if (_1d6333d0c_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1d8e51b25:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d63286a3_Ptr>(_1d63286a3_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 12)});
							(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567356a_UnaryExprModel>(_1d567356a_UnaryExprModel{._field_expr=jule::new_ptr<_1d62e16b0_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1d8e51581:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1d8e514a4:;
				};
			}
		}
		_match_end_1d8e50e65:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1d630ecb6_type_decl(_1d630da1d_UnaryEval* _self_) {
	_1d632a342_TypeChecker _329517_tc = _1d632a342_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d8e57213:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6330523_build_ptr_from_type(&_329517_tc, (*_self_)._field_d.get()._field_kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1d8e57279:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d632ee07_build_sptr_from_type(&_329517_tc, (*_self_)._field_d.get()._field_kind), 7)});
			}
		}
		else {
			_case_begin_1d8e55a3b:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d8e559d6:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1d630ee92_eval_data(_1d630da1d_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1d8e55aa2:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _331721_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1d630ce7e_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
				(*_self_)._field_e.get()._field_prefix=_331721_prefix;
			}
		}
		else {
			_case_begin_1d8e59248:;
			{
				(*_self_)._field_d=_1d630ce7e_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
			}
		}
		_match_end_1d8e5918d:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d631026c_eval(_1d630da1d_UnaryEval* _self_, jule::Ptr<_1d55b1431_UnaryExpr> _332627_u) {
	(*_self_)._field_u=_332627_u;
	_1d630ee92_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1d630ecb6_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _333713_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1d8e5d989:;
			{
				_1d630e1a0_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1d8e5d4d3:;
			{
				_1d630e37b_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1d8e5d549:;
			{
				_1d630e557_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1d8e5d5b0:;
			{
				_1d630e733_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d8e5d626:;
			{
				_1d630e90e_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1d8e5db54:;
			{
				_1d630eada_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1d8e5d46c:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1d8e5d417:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1d8e60a79:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str(_333713_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1d62e2073_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1d8e5de95:;
			{
				(*_self_)._field_d.get()._field_model=static_cast<jule::Any>((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1d8e60a13:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1d630da1d_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1d63107ab_BinaryEval static__1d6310d72_new_plain(jule::Ptr<_1d62e322d_Eval> _337529_e) {
	return _1d63107ab_BinaryEval{._field_e=_337529_e, };
}



inline _1d63107ab_BinaryEval static__1d63111b3_new(jule::Ptr<_1d62e322d_Eval> _338123_e, jule::Ptr<_1ee538d51_Token> _338137_op) {
	return _1d63107ab_BinaryEval{._field_e=_338123_e, ._field_op=_338137_op};
}



inline jule::Bool _1d6311449_check_type_compatibility(_1d63107ab_BinaryEval* _self_) {
	return _1d6286259_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1d6311702_check_struct_common_operator_compatibility(_1d63107ab_BinaryEval* _self_) {
	jule::Ptr<_1d567d498_FnIns> _339517_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1d8e6551d:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1d8e65584:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1d8e66585:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1d8e665eb:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1d8e66662:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d8e666c8:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1d8e6673e:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1d8e667a5:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1d8e6684e:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1d8e668b5:;
			{
				_339517_overload=_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1d8e653db:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1d8e65265:;
	};
	if ((_339517_overload == nullptr)) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1d567c5c9_ParamIns> _342717_p = _339517_overload.get()._field_params[1LL];;
	return _1d6285cd6_check_assign_type((*_self_)._field_e.get()._field_s, _342717_p.get()._field_decl.get()._field_reference,_342717_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1d62e16b0_Data> _1d6311999_eval_nil(_1d63107ab_BinaryEval* _self_) {
	if ((!(_1d631d544_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1d631c2ce_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e707e2:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e70737:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1d8e706d2:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6311c0d_eval_enum(_1d63107ab_BinaryEval* _self_) {
	jule::Ptr<_1d5692820_Enum> _345217_enm = _1d631e732_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e72a03:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _345621_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1d631e732_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_345621_rkind=_1d631e732_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1d6286259_check_type_compatibility((*_self_)._field_e.get()._field_s, _345217_enm.get()._field_kind.get()._field_kind,_345621_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1d8e7297b:;
	};
	if (((_1d631e732_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_345217_enm != _1d631e732_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_345217_enm.get()._field_ident),jule::Any(_1d631c2ce_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1d8e76e8b:;
			{
				if ((!(_1d62552a0_is_num(_1d631c2ce_to_str(_345217_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_345217_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1d8e77002:;
			{
				if (((_1d631dee5_prim(_345217_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1d6254bd9_is_int(_1d6321c1d_to_str(_1d631dee5_prim(_345217_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_345217_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1d8e76e25:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_345217_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1d8e76d37:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6311e72_eval_type_enum(_1d63107ab_BinaryEval* _self_) {
	jule::Ptr<_1d5a788b5_TypeEnum> _350317_enm = _1d631e996_tenm((*_self_)._field_l.get()._field_kind.ptr());;
	if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e7cdc6:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e7c58a:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d5904301_to_str(_350317_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e7cc2d:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63121d6_eval_sptr(_1d63107ab_BinaryEval* _self_) {
	if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e7ee3e:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e7edc8:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e7e2e5:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d631244a_eval_ptr(_1d63107ab_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1d8e81d86:;
			{
				if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1d8e81dec:;
			{
				if ((_1d631e4bd_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1d6329176_is_unsafe(_1d631e4bd_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1d6318011_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1d8e81539:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e8147e:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63126ae_eval_arr(_1d63107ab_BinaryEval* _self_) {
	if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e87ee1:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e87e7a:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e87ce3:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6312923_eval_slc(_1d63107ab_BinaryEval* _self_) {
	if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e8a235:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e8a1be:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e895db:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6312b87_eval_fn(_1d63107ab_BinaryEval* _self_) {
	if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e8c479:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e8c413:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e8b830:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6312deb_eval_struct(_1d63107ab_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1d8e8dada:;
			{
				if ((_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1d8e8db51:;
			{
				if ((_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1d8e8dbc8:;
			{
				if ((_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1d8e8e3c1:;
			{
				if ((_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e8e437:;
			{
				if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1d8e8d9b9:;
	};
	if ((!(_1d6311702_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6313160_eval_trait(_1d63107ab_BinaryEval* _self_) {
	if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e98892:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e9882b:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e98694:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63133c4_eval_any(_1d63107ab_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8e9a7d9:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e99e8c:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1d8e99dd2:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6313638_eval_bool(_1d63107ab_BinaryEval* _self_) {
	if ((!(_1d6311449_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1d8e9c5ee:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1d8e9c588:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1d631c2ce_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1d8e9b9a5:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d631389c_eval_str(_1d63107ab_BinaryEval* _self_) {
	jule::Str _374517_rk = _1d631c2ce_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_374517_rk != jule::Str("str", 3))) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_374517_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1d8ea0657:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1d8ea167a:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1d8e9e711:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1d8ea0602:;
	};
}



inline void _1d6313a78_set_type_to_greater(_1d63107ab_BinaryEval* _self_) {
	if (_1d62e2073_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1d62e2073_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1d62e2073_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1d6253622_is_greater(_1d631dee5_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1d631dee5_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1d6313cba_check_mod_data(_1d63107ab_BinaryEval* _self_, jule::Ptr<_1d62e16b0_Data>& _378838_d) {
	if ((!(_1d62e2073_is_const(_378838_d.ptr())))) {
		if (((_1d631dee5_prim(_378838_d.get()._field_kind.ptr()) == nullptr) || (!(_1d6254bd9_is_int(_1d631dee5_prim(_378838_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1d62b2719_sig_assignable(jule::Str("i64", 3),_378838_d)) {
			_case_begin_1d8ea7670:;
			{
				_1d566c454_set_i64(_378838_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64(_378838_d.get()._field_constant.ptr())));
			}
		}
		else if (_1d62c92be_unsig_assignable(jule::Str("u64", 3),_378838_d)) {
			_case_begin_1d8ea7351:;
			{
				_1d566c6c9_set_u64(_378838_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64(_378838_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1d8ea72da:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d8ea5b79:;
	};
}



inline void _1d6313e96_mod(_1d63107ab_BinaryEval* _self_) {
	_1d6313cba_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1d6313cba_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1d6314370_numbers_are_compatibile(_1d63107ab_BinaryEval* _self_, jule::Str& _381039_lk, jule::Str& _381049_rk) {
	if ((!(_1d62552a0_is_num(_381049_rk)))) {
		return false;
	};
	if (_1d62e2073_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_381039_lk == jule::Str("f32", 3))) {
		if (_1d62e2073_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_381049_rk == jule::Str("f32", 3));
	};
	if ((_381039_lk == jule::Str("f64", 3))) {
		if (_1d62e2073_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_381049_rk == jule::Str("f64", 3));
	};
	if (_1d62e2073_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_381039_lk == _381049_rk);
}



inline jule::Ptr<_1d62e16b0_Data> _1d63145e5_eval_float(_1d63107ab_BinaryEval* _self_) {
	jule::Str _384013_lk = _1d631dee5_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _384113_rk = _1d631dee5_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1d6314370_numbers_are_compatibile(&(*_self_), _384013_lk,_384113_rk)))) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_384013_lk),jule::Any(_384113_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1d8eb4dca:;
			{
				if (((!(_1d62e2073_is_const((*_self_)._field_l.ptr()))) || (!(_1d62c9401_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_384013_lk),jule::Any(_384113_rk)}));
					return nullptr;
				};
				if (((!(_1d62e2073_is_const((*_self_)._field_r.ptr()))) || (!(_1d62c9401_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_384013_lk),jule::Any(_384113_rk)}));
					return nullptr;
				};
				_1d566c454_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1d566c6c9_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1d631787e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1d8eb4ced:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1d8eb973c:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1d8eb96d7:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1d8eba254:;
			{
				_1d6313a78_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1d8eba2ba:;
			{
				if ((!(_1d6254bd9_is_int(_384113_rk)))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_384013_lk),jule::Any(_384113_rk)}));
					return nullptr;
				};
				_1d6313e96_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1d8eba6a5:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8eba650:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6314859_eval_int(_1d63107ab_BinaryEval* _self_) {
	jule::Str _390413_lk = _1d631dee5_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _390513_rk = _1d631dee5_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1d8eba331:;
			{
				if (((!(_1d6254bd9_is_int(_390413_lk))) || (!(_1d6254bd9_is_int(_390513_rk))))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_390413_lk),jule::Any(_390513_rk)}));
					return nullptr;
				};
				if ((!(_1d631787e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1d8ebe995:;
	};
	if ((!(_1d6314370_numbers_are_compatibile(&(*_self_), _390413_lk,_390513_rk)))) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_390413_lk),jule::Any(_390513_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1d8ec2ab9:;
			{
				return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1d8ec29cb:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1d8ec3405:;
			{
				_1d6313a78_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1d8ec346b:;
			{
				_1d6313e96_mod(&(*_self_));
				_1d6313a78_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1d8ec3856:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1d8ec3801:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6314abd_eval_prim(_1d63107ab_BinaryEval* _self_) {
	jule::Ptr<_1d63218aa_Prim> _396313_prim = _1d631dee5_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1d632487a_is_bool(_396313_prim.ptr())) {
			_case_begin_1d8ec6b45:;
			{
				return _1d6313638_eval_bool(&(*_self_));
			}
		}
		else if (_1d6324ade_is_str(_396313_prim.ptr())) {
			_case_begin_1d8ec6bbc:;
			{
				return _1d631389c_eval_str(&(*_self_));
			}
		}
		_match_end_1d8ec6a8a:;
	};
	if ((_1d631dee5_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d6321c1d_to_str(_396313_prim.ptr())),jule::Any(_1d631c2ce_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1d6255008_is_float(_396313_prim.get()._field_kind)) {
			_case_begin_1d8ec95e8:;
			{
				return _1d63145e5_eval_float(&(*_self_));
			}
		}
		else if (_1d6254bd9_is_int(_396313_prim.get()._field_kind)) {
			_case_begin_1d8ec8e66:;
			{
				return _1d6314859_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1d8ec8e00:;
			{
				return nullptr;
			}
		}
		_match_end_1d8ec8c02:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6314d32_eval_op(_1d63107ab_BinaryEval* _self_) {
	{
		
		if (_1d631d06b_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1d8eca819:;
			{
				_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1d631dee5_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1d6324d53_is_any(_1d631dee5_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1d8ecab8d:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1d8eca8e6;
			}
		}
		else if (((_1d631dee5_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1d6324d53_is_any(_1d631dee5_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1d8eca8e6:;
			{
				return _1d63133c4_eval_any(&(*_self_));
			}
		}
		else if ((_1d631e996_tenm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8eca95c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1d8eca9c3;
			}
		}
		else if ((_1d631e996_tenm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8eca9c3:;
			{
				return _1d6311e72_eval_type_enum(&(*_self_));
			}
		}
		else if (_1d631cd07_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1d8ecaa39:;
			{
				return _1d6311999_eval_nil(&(*_self_));
			}
		}
		else if ((_1d631e732_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecaaa0:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1d8ecac59;
			}
		}
		else if ((_1d631e732_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecac59:;
			{
				return _1d6311c0d_eval_enum(&(*_self_));
			}
		}
		else if ((_1d631e259_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecacc0:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1d8ecad36;
			}
		}
		else if ((_1d631e259_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecad36:;
			{
				return _1d63121d6_eval_sptr(&(*_self_));
			}
		}
		else if ((_1d631e4bd_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecadad:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1d8ecae35;
			}
		}
		else if ((_1d631e4bd_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecae35:;
			{
				return _1d631244a_eval_ptr(&(*_self_));
			}
		}
		else if ((_1d631ec0a_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecaeac:;
			{
				return _1d63126ae_eval_arr(&(*_self_));
			}
		}
		else if ((_1d631ee6e_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecb034:;
			{
				return _1d6312923_eval_slc(&(*_self_));
			}
		}
		else if ((_1d63201d3_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecb0ab:;
			{
				return _1d6312b87_eval_fn(&(*_self_));
			}
		}
		else if ((_1d63206ab_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecb133:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1d8ecb1aa;
			}
		}
		else if ((_1d63206ab_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecb1aa:;
			{
				return _1d6313160_eval_trait(&(*_self_));
			}
		}
		else if ((_1d6320447_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecb232:;
			{
				return _1d6312deb_eval_struct(&(*_self_));
			}
		}
		else if ((_1d631dee5_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d8ecb2a9:;
			{
				return _1d6314abd_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1d8ec9708:;
			{
				return nullptr;
			}
		}
		_match_end_1d8ec9b26:;
	};
}



inline void _1d63150a7_eval_const(_1d63107ab_BinaryEval* _self_, jule::Ptr<_1d62e16b0_Data>& _403834_d) {
	{
		
		if ((_403834_d == nullptr)) {
			_case_begin_1d8eda065:;
			{
				return;;
			}
		}
		else if ((!(_1d62e2073_is_const((*_self_)._field_l.ptr()))) || (!(_1d62e2073_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1d8eda6e7:;
			{
				_403834_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1d8ed9e44:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1d8edbcae:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1d8edbd25:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1d8edbd8b:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(_1d566e9c8_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1d8edbe02:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(_1d566e6ba_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1d8edbe68:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1d8edbece:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1d8edc045:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1d8edc0ab:;
			{
				_403834_d.get()._field_constant=static__1d566a221_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1d8edc122:;
			{
				_1d5670d2b_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1d8edc188:;
			{
				_1d5671139_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d8edc1ee:;
			{
				_1d5671447_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1d8edc265:;
			{
				jule::Bool _407517_ok = _1d5671755_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_407517_ok)) && (_1d566c1ce_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1d63218aa_Prim> _408021_prim = _1d631dee5_prim(_403834_d.get()._field_kind.ptr());;
				{
					
					if (_1d6254656_is_sig_int(_408021_prim.get()._field_kind)) {
						_case_begin_1d8ee8925:;
						{
							_1d566c454_set_i64(_403834_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64(_403834_d.get()._field_constant.ptr())));
						}
					}
					else if (_1d6254942_is_unsig_int(_408021_prim.get()._field_kind)) {
						_case_begin_1d8ee899c:;
						{
							_1d566c6c9_set_u64(_403834_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64(_403834_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1d8ee886a:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1d8edc2dc:;
			{
				jule::Bool _408817_ok = _1d5671a63_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_408817_ok)) && (_1d566c1ce_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1d8edc364:;
			{
				_1d567217e_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1d8edc3db:;
			{
				_1d5671d71_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1d8edc463:;
			{
				_1d567248c_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1d8edc4da:;
			{
				_1d567279a_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1d8edc562:;
			{
				_1d5672aa8_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_403834_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1d8edb52d:;
	};
	_1d6318c9d_apply_cast_model_by_enum(_403834_d,_1d631e732_enm(_403834_d.get()._field_kind.ptr()));
	jule::Ptr<_1d63218aa_Prim> _411217_prim = _1d631dee5_prim(_403834_d.get()._field_kind.ptr());;
	if (((_411217_prim == nullptr) || (!(_1d62552a0_is_num(_1d6321c1d_to_str(_411217_prim.ptr())))))) {
		_403834_d.get()._field_model=static_cast<jule::Any>(_403834_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_403834_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_411217_prim=_1d631dee5_prim(_403834_d.get()._field_kind.ptr());
		};
	};
	_1d6316b58_fit_bitsize(_403834_d);
	_1d6319067_cast_const_by_type(_411217_prim.get()._field_kind,_403834_d);
}



inline void _1d631532c_check_data(_1d63107ab_BinaryEval* _self_, jule::Ptr<_1d62e16b0_Data>& _412834_d) {
	jule::Ptr<_1d567d498_FnIns> _412913_f = _1d63201d3_fnc(_412834_d.get()._field_kind.ptr());;
	if ((((_412913_f != nullptr) && (_412913_f.get()._field_decl != nullptr)) && _1d567aebd_is_method(_412913_f.get()._field_decl.ptr()))) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1d6315508_check_datas(_1d63107ab_BinaryEval* _self_) {
	_1d631532c_check_data(&(*_self_), (*_self_)._field_l);
	_1d631532c_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1d631577d_set_model(_1d63107ab_BinaryEval* _self_, jule::Ptr<_1d62e16b0_Data>& _414033_d) {
	if (_1d62e2073_is_const(_414033_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1d62e16b0_Data> _414818_l = (*_self_)._field_l;;
	jule::Ptr<_1d62e16b0_Data> _414825_r = (*_self_)._field_r;;
	std::tie(_414818_l,_414825_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1d62e2381_good_operand(_414818_l.ptr(), _414825_r)))) {
		std::tie(_414818_l,_414825_r) = std::make_tuple(_414825_r,_414818_l);
	};
	_414033_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567337d_BinopExprModel>(_1d567337d_BinopExprModel{._field_left=jule::new_ptr<_1d5654dba_OperandExprModel>(_1d5654dba_OperandExprModel{._field_kind=_414818_l.get()._field_kind, ._field_model=_414818_l.get()._field_model}), ._field_right=jule::new_ptr<_1d5654dba_OperandExprModel>(_1d5654dba_OperandExprModel{._field_kind=_414825_r.get()._field_kind, ._field_model=_414825_r.get()._field_model}), ._field_op=(*_self_)._field_op}));
}



inline void _1d6315a03_post_eval(_1d63107ab_BinaryEval* _self_, jule::Ptr<_1d62e16b0_Data>& _416633_d) {
	_416633_d.get()._field_lvalue=false;
	_1d631577d_set_model(&(*_self_), _416633_d);
}



inline jule::Ptr<_1d62e16b0_Data> _1d6315daa_solve_explicit(_1d63107ab_BinaryEval* _self_, jule::Ptr<_1d62e16b0_Data>& _417138_l, jule::Ptr<_1d62e16b0_Data>& _417153_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_417138_l,_417153_r);
	_1d6315508_check_datas(&(*_self_));
	jule::Ptr<_1d62e16b0_Data> _417617_d = _1d6314d32_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_417138_l,_417153_r);
	_1d63150a7_eval_const(&(*_self_), _417617_d);
	if ((_417617_d != nullptr)) {
		_417617_d.get()._field_mutable=true;
		_1d6315a03_post_eval(&(*_self_), _417617_d);
	};
	return _417617_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63161b8_eval(_1d63107ab_BinaryEval* _self_, jule::Ptr<_1d55b293d_BinopExpr>& _419128_op) {
	if ((_419128_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1d62e3739_push_err((*_self_)._field_e.ptr(), _419128_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1d62e3a58_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _419817_l = _1d630ce7e_eval_expr_kind((*_self_)._field_e, _419128_op.get()._field_left.get()._field_kind);;
	if (((_419817_l == nullptr) || (_419817_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _420317_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_419817_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_420317_prefix;
	});;
	jule::Ptr<_1d62e16b0_Data> _420617_r = _1d630ce7e_eval_expr_kind((*_self_)._field_e, _419128_op.get()._field_right.get()._field_kind);;
	if (((_420617_r == nullptr) || (_420617_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_419128_op.get()._field_op;
	jule::Ptr<_1d62e16b0_Data> _421317_d = _1d6315daa_solve_explicit(&(*_self_), _419817_l,_420617_r);;
	if ((((_421317_d != nullptr) && _419817_l.get()._field_is_rune) && _420617_r.get()._field_is_rune)) {
		_421317_d.get()._field_is_rune=true;
	};
	return _421317_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1d63107ab_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d631a6a6_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "constraint:" << _Src._field_constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d631b1e0_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d631c2ce_to_str(_1d631bdd3_TypeKind* _self_) {
	if (_1d631cd07_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1d631ca93_cpp_linked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7417_kind+=_1d631b9a4_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1d631b553_to_str((*_self_)._field_kind);
	};
	return _7417_kind;
}



inline jule::Bool _1d631c5dc_equals(jule::Ptr<_1d631bdd3_TypeKind> _self_, jule::Ptr<_1d631bdd3_TypeKind> _9026_other) {
	if (_1d631cd07_is_nil(_self_.ptr())) {
		return _1d631cd07_is_nil(_9026_other.ptr());
	};
	if (_1d631ca93_cpp_linked(_self_.ptr())) {
		return (_1d631ca93_cpp_linked(_9026_other.ptr()) && (_self_.get()._field_cpp_ident == _9026_other.get()._field_cpp_ident));
	};
	return _1d631b9a4_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1d631b861_equals(_self_.get()._field_kind, _9026_other);
}



inline jule::Bool _1d631ca93_cpp_linked(_1d631bdd3_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1d631cd07_is_nil(_1d631bdd3_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1d631d06b_void(_1d631bdd3_TypeKind* _self_) {
	jule::Ptr<_1d63218aa_Prim> _11313_prim = _1d631dee5_prim(&(*_self_));;
	return ((_11313_prim != nullptr) && (_11313_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1d631d2d0_mutable(_1d631bdd3_TypeKind* _self_) {
	{
		_1d631bdd3_TypeKind* _12021__self = (&((*_self_)));;
		if ((_1d6320447_strct(_12021__self) != nullptr)) {
			return _1d6320447_strct(_12021__self).get()._field_mutable;
		};
		if ((_1d63206ab_trt(_12021__self) != nullptr)) {
			return _1d63206ab_trt(_12021__self).get()._field_mutable;
		};
		if ((_1d631dee5_prim(_12021__self) != nullptr)) {
			jule::Ptr<_1d63218aa_Prim> _12921_p = _1d631dee5_prim(_12021__self);;
			return _1d6324d53_is_any(_12921_p.ptr());
		};
		if ((_1d631ec0a_arr(_12021__self) != nullptr)) {
			return _1d631d2d0_mutable(_1d631ec0a_arr(_12021__self).get()._field_elem.ptr());
		};
		return (((_1d631ee6e_slc(_12021__self) != nullptr) || (_1d631e4bd_ptr(_12021__self) != nullptr)) || (_1d631e259_sptr(_12021__self) != nullptr));
	};
}



inline jule::Bool _1d631d544_nil_compatible(_1d631bdd3_TypeKind* _self_) {
	{
		_1d631bdd3_TypeKind* _14421__self = (&((*_self_)));;
		jule::Ptr<_1d63218aa_Prim> _14617_prim = _1d631dee5_prim(_14421__self);;
		if (((_14617_prim != nullptr) && _1d6324d53_is_any(_14617_prim.ptr()))) {
			return true;
		};
		return (((((((_1d631cd07_is_nil(_14421__self) || (_1d63201d3_fnc(_14421__self) != nullptr)) || (_1d631e259_sptr(_14421__self) != nullptr)) || (_1d631e4bd_ptr(_14421__self) != nullptr)) || (_1d63206ab_trt(_14421__self) != nullptr)) || (_1d631ee6e_slc(_14421__self) != nullptr)) || (_1d6320920_map(_14421__self) != nullptr)) || (_1d631e996_tenm(_14421__self) != nullptr));
	};
}



inline jule::Bool _1d631d7a8_performs_rc(_1d631bdd3_TypeKind* _self_) {
	{
		_1d631bdd3_TypeKind* _16521__self = (&((*_self_)));;
		return (((_1d631e259_sptr(_16521__self) != nullptr) || (_1d631ee6e_slc(_16521__self) != nullptr)) || (_1d63206ab_trt(_16521__self) != nullptr));
	};
}



inline jule::Bool _1d631da1c_supports_cloning(_1d631bdd3_TypeKind* _self_) {
	{
		_1d631bdd3_TypeKind* _17321__self = (&((*_self_)));;
		{
			
			if ((_1d631dee5_prim(_17321__self) != nullptr)) {
				_case_begin_1d90399dd:;
				{
					return (!(_1d6324d53_is_any(_1d631dee5_prim(_17321__self).ptr())));
				}
			}
			else if ((_1d631e732_enm(_17321__self) != nullptr)) {
				_case_begin_1d9039a54:;
				{
					return true;
				}
			}
			else if ((_1d63201d3_fnc(_17321__self) != nullptr)) {
				_case_begin_1d9039d51:;
				{
					return true;
				}
			}
			else if ((_1d631e4bd_ptr(_17321__self) != nullptr)) {
				_case_begin_1d9039db7:;
				{
					return true;
				}
			}
			else if ((_1d631ee6e_slc(_17321__self) != nullptr)) {
				_case_begin_1d9039e2d:;
				{
					return _1d631da1c_supports_cloning(_1d631ee6e_slc(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_1d6320920_map(_17321__self) != nullptr)) {
				_case_begin_1d9039e94:;
				{
					jule::Ptr<_1d6327152_Map> _18621_m = _1d6320920_map(_17321__self);;
					return (_1d631da1c_supports_cloning(_18621_m.get()._field_key.ptr()) && _1d631da1c_supports_cloning(_18621_m.get()._field_val.ptr()));
				}
			}
			else if ((_1d631ec0a_arr(_17321__self) != nullptr)) {
				_case_begin_1d903a00a:;
				{
					return _1d631da1c_supports_cloning(_1d631ec0a_arr(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_1d631e259_sptr(_17321__self) != nullptr)) {
				_case_begin_1d903a071:;
				{
					return _1d631da1c_supports_cloning(_1d631e259_sptr(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_1d6320447_strct(_17321__self) != nullptr)) {
				_case_begin_1d903a0e8:;
				{
					jule::Ptr<_1d55c62d1_StructIns> _19325_s = _1d6320447_strct(_17321__self);;
					return (((_19325_s.get()._field_decl != nullptr) && (!(_19325_s.get()._field_decl.get()._field_cpp_linked))) && _1d558ba16_is_derives(_19325_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1d90398bc:;
				{
					return false;
				}
			}
			_match_end_1d9039856:;
		};
	};
}



inline jule::Bool _1d631dc81_variadicable(_1d631bdd3_TypeKind* _self_) {
	{
		_1d631bdd3_TypeKind* _20621__self = (&((*_self_)));;
		return (_1d631ee6e_slc(_20621__self) != nullptr);
	};
}



inline jule::Ptr<_1d63218aa_Prim> _1d631dee5_prim(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d63218aa_Prim>>()) {
			_case_begin_1d904271b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d63218aa_Prim>();
			}
		}
		else {
			_case_begin_1d90420ab:;
			{
				return nullptr;
			}
		}
		_match_end_1d9042056:;
	};
}



inline jule::Ptr<_1d632513e_Sptr> _1d631e259_sptr(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d632513e_Sptr>>()) {
			_case_begin_1d904340e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d632513e_Sptr>();
			}
		}
		else {
			_case_begin_1d9042e14:;
			{
				return nullptr;
			}
		}
		_match_end_1d9042dae:;
	};
}



inline jule::Ptr<_1d63286a3_Ptr> _1d631e4bd_ptr(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d63286a3_Ptr>>()) {
			_case_begin_1d9044157:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d63286a3_Ptr>();
			}
		}
		else {
			_case_begin_1d9043b5c:;
			{
				return nullptr;
			}
		}
		_match_end_1d9043b07:;
	};
}



inline jule::Ptr<_1d5692820_Enum> _1d631e732_enm(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d5692820_Enum>>()) {
			_case_begin_1d9044da0:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d5692820_Enum>();
			}
		}
		else {
			_case_begin_1d90448a5:;
			{
				return nullptr;
			}
		}
		_match_end_1d9044850:;
	};
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d631e996_tenm(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d5a788b5_TypeEnum>>()) {
			_case_begin_1d9045ae8:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d5a788b5_TypeEnum>();
			}
		}
		else {
			_case_begin_1d90455ed:;
			{
				return nullptr;
			}
		}
		_match_end_1d9045598:;
	};
}



inline jule::Ptr<_1d6327c46_Arr> _1d631ec0a_arr(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d6327c46_Arr>>()) {
			_case_begin_1d9046841:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d6327c46_Arr>();
			}
		}
		else {
			_case_begin_1d9046346:;
			{
				return nullptr;
			}
		}
		_match_end_1d90462e1:;
	};
}



inline jule::Ptr<_1d6325a9b_Slc> _1d631ee6e_slc(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d6325a9b_Slc>>()) {
			_case_begin_1d9047589:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d6325a9b_Slc>();
			}
		}
		else {
			_case_begin_1d904708e:;
			{
				return nullptr;
			}
		}
		_match_end_1d9047039:;
	};
}



inline jule::Ptr<_1d567d498_FnIns> _1d63201d3_fnc(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d567d498_FnIns>>()) {
			_case_begin_1d90482d2:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d567d498_FnIns>();
			}
		}
		else {
			_case_begin_1d9047cd7:;
			{
				return nullptr;
			}
		}
		_match_end_1d9047c82:;
	};
}



inline jule::Ptr<_1d55c62d1_StructIns> _1d6320447_strct(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55c62d1_StructIns>>()) {
			_case_begin_1d904902a:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d55c62d1_StructIns>();
			}
		}
		else {
			_case_begin_1d9048a30:;
			{
				return nullptr;
			}
		}
		_match_end_1d90489ca:;
	};
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d63206ab_trt(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d59c3e1a_Trait>>()) {
			_case_begin_1d9049c73:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d59c3e1a_Trait>();
			}
		}
		else {
			_case_begin_1d9049778:;
			{
				return nullptr;
			}
		}
		_match_end_1d9049723:;
	};
}



inline jule::Ptr<_1d6327152_Map> _1d6320920_map(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d6327152_Map>>()) {
			_case_begin_1d904a9bb:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d6327152_Map>();
			}
		}
		else {
			_case_begin_1d904a4c1:;
			{
				return nullptr;
			}
		}
		_match_end_1d904a46b:;
	};
}



inline jule::Ptr<_1d6326629_Tuple> _1d6320b84_tup(_1d631bdd3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d6326629_Tuple>>()) {
			_case_begin_1d904b714:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d6326629_Tuple>();
			}
		}
		else {
			_case_begin_1d904b219:;
			{
				return nullptr;
			}
		}
		_match_end_1d904b1b4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d631bdd3_TypeKind _Src) {
	_Stream << _1d631c2ce_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1d63213e3_checked(_1d632103b_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1d63215be_remove_kind(_1d632103b_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d632103b_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d6321c1d_to_str(_1d63218aa_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1d632202b_equals(jule::Ptr<_1d63218aa_Prim> _self_, jule::Ptr<_1d631bdd3_TypeKind> _35926_other) {
	jule::Ptr<_1d63218aa_Prim> _36013_prim = _1d631dee5_prim(_35926_other.ptr());;
	if ((_36013_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _36013_prim.get()._field_kind);
}



inline jule::Bool _1d632249e_is_constraint(_1d63218aa_Prim* _self_) {
	return ((((!(_1d6324ade_is_str(&(*_self_)))) && (!(_1d6324d53_is_any(&(*_self_))))) && (!(_1d632487a_is_bool(&(*_self_))))) && (!(_1d62552a0_is_num((*_self_)._field_kind))));
}



inline jule::Bool _1d6322713_is_i8(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1d6322977_is_i16(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1d6322bdb_is_i32(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1d6322e50_is_i64(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1d63231b4_is_u8(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1d6323428_is_u16(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1d632368c_is_u32(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1d6323901_is_u64(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1d6323b65_is_f32(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1d6323dc9_is_f64(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1d632413d_is_int(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1d63243a2_is_uint(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1d6324616_is_uintptr(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1d632487a_is_bool(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1d6324ade_is_str(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1d6324d53_is_any(_1d63218aa_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1d63218aa_Prim _Src) {
	_Stream << _1d6321c1d_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1d63254a2_to_str(_1d632513e_Sptr* _self_) {
	return (jule::Str("&", 1) + _1d631c2ce_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1d63257b0_equals(jule::Ptr<_1d632513e_Sptr> _self_, jule::Ptr<_1d631bdd3_TypeKind> _43626_other) {
	jule::Ptr<_1d632513e_Sptr> _43713_sptr = _1d631e259_sptr(_43626_other.ptr());;
	if ((_43713_sptr == nullptr)) {
		return false;
	};
	return _1d631c5dc_equals(_self_.get()._field_elem, _43713_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1d632513e_Sptr _Src) {
	_Stream << _1d63254a2_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1d63260a7_to_str(_1d6325a9b_Slc* _self_) {
	return (jule::Str("[]", 2) + _1d631c2ce_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1d63263b5_equals(jule::Ptr<_1d6325a9b_Slc> _self_, jule::Ptr<_1d631bdd3_TypeKind> _45526_other) {
	jule::Ptr<_1d6325a9b_Slc> _45613_slc = _1d631ee6e_slc(_45526_other.ptr());;
	if ((_45613_slc == nullptr)) {
		return false;
	};
	return _1d631c5dc_equals(_self_.get()._field_elem, _45613_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6325a9b_Slc _Src) {
	_Stream << _1d63260a7_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1d632698c_to_str(_1d6326629_Tuple* _self_) {
	jule::Str _47217_s = jule::Str("(", 1);;
	_47217_s+=_1d631c2ce_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1d905a38d:;
		if (it != expr.end()) {
			jule::Ptr<_1d631bdd3_TypeKind> &_47416_t = *it;
			{
				_47217_s+=jule::Str(",", 1);
				_47217_s+=_1d631c2ce_to_str(_47416_t.ptr());
			}
			_iter_next_1d905a38d:;
			++it;
			goto _iter_begin_1d905a38d;
		}
		_iter_end_1d905a38d:;
	};
	_47217_s+=jule::Str(")", 1);
	return _47217_s;
}



inline jule::Bool _1d6326c9a_equals(jule::Ptr<_1d6326629_Tuple> _self_, jule::Ptr<_1d631bdd3_TypeKind> _48326_other) {
	jule::Ptr<_1d6326629_Tuple> _48413_tup = _1d6320b84_tup(_48326_other.ptr());;
	if ((_48413_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _48413_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _49317_i = 0LL;;
	for (; (_49317_i < _self_.get()._field_types.len()); (_49317_i)++) {
		{
			if ((!(_1d631c5dc_equals(_self_.get()._field_types[_49317_i], _48413_tup.get()._field_types[_49317_i])))) {
				return false;
			};
		}
	_iter_next_1d905d957:;
	}
	_iter_end_1d905d957:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6326629_Tuple _Src) {
	_Stream << _1d632698c_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1d63274b5_to_str(_1d6327152_Map* _self_) {
	jule::Str _51317_s = jule::Str("[", 1);;
	_51317_s+=_1d631c2ce_to_str((*_self_)._field_key.ptr());
	_51317_s+=jule::Str(":", 1);
	_51317_s+=_1d631c2ce_to_str((*_self_)._field_val.ptr());
	_51317_s+=jule::Str("]", 1);
	return _51317_s;
}



inline jule::Bool _1d63277c3_equals(jule::Ptr<_1d6327152_Map> _self_, jule::Ptr<_1d631bdd3_TypeKind> _52226_other) {
	jule::Ptr<_1d6327152_Map> _52313_map = _1d6320920_map(_52226_other.ptr());;
	if ((_52313_map == nullptr)) {
		return false;
	};
	return (_1d631c5dc_equals(_self_.get()._field_key, _52313_map.get()._field_key) && _1d631c5dc_equals(_self_.get()._field_val, _52313_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1d6327152_Map _Src) {
	_Stream << _1d63274b5_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1d63280a9_to_str(_1d6327c46_Arr* _self_) {
	jule::Str _54117_s = jule::Str("[", 1);;
	_54117_s+=_1d61c2bbd_itoa((*_self_)._field_n);
	_54117_s+=jule::Str("]", 1);
	_54117_s+=_1d631c2ce_to_str((*_self_)._field_elem.ptr());
	return _54117_s;
}



inline jule::Bool _1d63283b7_equals(jule::Ptr<_1d6327c46_Arr> _self_, jule::Ptr<_1d631bdd3_TypeKind> _54926_other) {
	jule::Ptr<_1d6327c46_Arr> _55013_arr = _1d631ec0a_arr(_54926_other.ptr());;
	if ((_55013_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _55013_arr.get()._field_n) && _1d631c5dc_equals(_self_.get()._field_elem, _55013_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1d6327c46_Arr _Src) {
	_Stream << _1d63280a9_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1d6328a16_to_str(_1d63286a3_Ptr* _self_) {
	if (_1d6329176_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1d631c2ce_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1d6328d24_equals(jule::Ptr<_1d63286a3_Ptr> _self_, jule::Ptr<_1d631bdd3_TypeKind> _57326_other) {
	jule::Ptr<_1d63286a3_Ptr> _57413_ptr = _1d631e4bd_ptr(_57326_other.ptr());;
	if ((_57413_ptr == nullptr)) {
		return false;
	};
	return _1d631c5dc_equals(_self_.get()._field_elem, _57413_ptr.get()._field_elem);
}



inline jule::Bool _1d6329176_is_unsafe(_1d63286a3_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d63286a3_Ptr _Src) {
	_Stream << _1d6328a16_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d63295e9_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1d632aa4b_push_err(_1d632a342_TypeChecker* _self_, jule::Ptr<_1ee538d51_Token> _65127_token, jule::Str _65142_fmt, jule::Slice<jule::Any> _65155_args) {
	_1d62801cb_push_err((*_self_)._field_s.ptr(), _65127_token,_65142_fmt,jule::Any(_65155_args));
}



inline void _1d632ac27_allow_builtin(_1d632a342_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1d632ae03_disallow_builtin(_1d632a342_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1d63218aa_Prim> _1d632b211_build_prim(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _66330_decl) {
	if ((!(_1d633533b_is_prim(_66330_decl.get()._field_ident)))) {
		_1d632aa4b_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66330_decl.get()._field_generics.len() > 0LL)) {
		_1d632aa4b_push_err(&(*_self_), _66330_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66330_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1d6334cec_build_prim_type(_66330_decl.get()._field_ident);
}



inline void _1d906d390_push_reference(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55c62d1_StructIns>& _67741_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1d8cdb4e8_exist((*_self_)._field_refers.ptr(), _67741_t)) {
		return;;
	};
	_1d5681963_push((*_self_)._field_refers.ptr(), jule::Any(_67741_t));
}

inline void _1d907141a_push_reference(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d59c3e1a_Trait>& _67741_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1d90730a9_exist((*_self_)._field_refers.ptr(), _67741_t)) {
		return;;
	};
	_1d5681963_push((*_self_)._field_refers.ptr(), jule::Any(_67741_t));
}



inline void _1d632b70b_push_reference_by_kind(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _68746_k) {
	{
		
		if ((_1d6320447_strct(_68746_k.ptr()) != nullptr)) {
			_case_begin_1d906bee8:;
			{
				jule::Ptr<_1d55c62d1_StructIns> _69021_t = _1d6320447_strct(_68746_k.ptr());;
				_1d906d390_push_reference(&(*_self_), _69021_t);
			}
		}
		else if ((_1d63206ab_trt(_68746_k.ptr()) != nullptr)) {
			_case_begin_1d906c070:;
			{
				jule::Ptr<_1d59c3e1a_Trait> _69321_t = _1d63206ab_trt(_68746_k.ptr());;
				_1d907141a_push_reference(&(*_self_), _69321_t);
			}
		}
		_match_end_1d906bdc7:;
	};
}



inline void _1d632bac4_push_cycle_error(_1d632a342_TypeChecker* _self_, jule::Any _69831_def1, jule::Any _69842_def2, jule::Str& _69858_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70129_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70129_def };
			
			if (_match_expr.type_is<jule::Ptr<_1d631b1e0_TypeAlias>>()) {
				_case_begin_1d907640e:;
				{
					return _70129_def.operator jule::Ptr<_1d631b1e0_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
				_case_begin_1d9076475:;
				{
					return _70129_def.operator jule::Ptr<_1d5599dba_Struct>().get()._field_ident;
				}
			}
			else {
				_case_begin_1d9076277:;
				{
					return jule::Str();
				}
			}
			_match_end_1d907619a:;
		};
	});;
	jule::Str _71213_def1_ident = _70113_get_ident(_69831_def1);;
	jule::Str _71313_def2_ident = _70113_get_ident(_69842_def2);;
	jule::Str _71413_refers_to = _21868a8c3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71213_def1_ident),jule::Any(_71313_def2_ident)}));;
	(_69858_message).buffer.insert(0, (((_2185adecd_repeat(jule::Str(" ", 1),4LL) + _71413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d632be7b_check_cross_cycle(_1d632a342_TypeChecker* _self_, jule::Any _71832_decl, jule::Str& _71848_message) {
	{
		auto &_match_expr{ _71832_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1d631b1e0_TypeAlias>>()) {
			_case_begin_1d9078c6e:;
			{
				jule::Ptr<_1d631b1e0_TypeAlias> _72117_ta = _71832_decl.operator jule::Ptr<_1d631b1e0_TypeAlias>();;
				{
					auto &expr = _72117_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1d9079a2d:;
					if (it != expr.end()) {
						jule::Any &_72220_d = *it;
						{
							{
								
								if ((_72220_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1d907a4ac:;
									{
										_1d632bac4_push_cycle_error(&(*_self_), jule::Any(_72117_ta),jule::Any(_72220_d),_71848_message);
										return false;
									}
								}
								else if ((!(_1d632be7b_check_cross_cycle(&(*_self_), jule::Any(_72220_d),_71848_message)))) {
									_case_begin_1d907a534:;
									{
										_1d632bac4_push_cycle_error(&(*_self_), jule::Any(_72117_ta),jule::Any(_72220_d),_71848_message);
										return false;
									}
								}
								_match_end_1d907a38b:;
							};
						}
						_iter_next_1d9079a2d:;
						++it;
						goto _iter_begin_1d9079a2d;
					}
					_iter_end_1d9079a2d:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d9078cd5:;
			{
				jule::Ptr<_1d5599dba_Struct> _73317_s = _71832_decl.operator jule::Ptr<_1d5599dba_Struct>();;
				{
					auto &expr = _73317_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1d907c0e6:;
					if (it != expr.end()) {
						jule::Ptr<_1d5599dba_Struct> &_73420_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73420_d)) {
									_case_begin_1d907cadb:;
									{
										_1d632bac4_push_cycle_error(&(*_self_), jule::Any(_73317_s),jule::Any(_73420_d),_71848_message);
										return false;
									}
								}
								else if ((!(_1d632be7b_check_cross_cycle(&(*_self_), jule::Any(_73420_d),_71848_message)))) {
									_case_begin_1d907cb63:;
									{
										_1d632bac4_push_cycle_error(&(*_self_), jule::Any(_73317_s),jule::Any(_73420_d),_71848_message);
										return false;
									}
								}
								_match_end_1d907c9ba:;
							};
						}
						_iter_next_1d907c0e6:;
						++it;
						goto _iter_begin_1d907c0e6;
					}
					_iter_end_1d907c0e6:;
				};
			}
		}
		_match_end_1d9078b81:;
	};
	return true;
}



inline jule::Bool _1d632c333_check_illegal_cycles(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _75240_ident, jule::Any _75267_decl) {
	jule::Bool _75280_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75280_ok = true;
		return _75280_ok;
	};
	{
		auto &_match_expr{ _75267_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d907c635:;
			{
				if (((*_self_)._field_not_plain || _75267_decl.operator jule::Ptr<_1d5599dba_Struct>().get()._field_cpp_linked)) {
					_75280_ok = true;
					return _75280_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d631b1e0_TypeAlias>>()) {
			_case_begin_1d907c778:;
			{
				if (_75267_decl.operator jule::Ptr<_1d631b1e0_TypeAlias>().get()._field_cpp_linked) {
					_75280_ok = true;
					return _75280_ok;
				};
			}
		}
		_match_end_1d907c5d0:;
	};
	if ((_75267_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1d632aa4b_push_err(&(*_self_), _75240_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75280_ok = false;
		return _75280_ok;
	};
	jule::Str _77517_message = jule::Str();;
	if ((!(_1d632be7b_check_cross_cycle(&(*_self_), jule::Any(_75267_decl),_77517_message)))) {
		jule::Str _77821_err_msg = _77517_message;;
		_77517_message=jule::Str();
		_1d632bac4_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75267_decl),_77517_message);
		_77821_err_msg=(_77821_err_msg + _77517_message);
		_1d632aa4b_push_err(&(*_self_), _75240_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77821_err_msg)}));
		_75280_ok = false;
		return _75280_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1d631b1e0_TypeAlias>>()) {
			_case_begin_1d9084065:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75267_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d90840cb:;
			{
				{
					auto &_match_expr{ _75267_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
						_case_begin_1d908487e:;
						{
							jule::Ptr<_1d5599dba_Struct> _79425_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1d5599dba_Struct>();;
							_79425_s.get()._field_depends = jule::alloc_for_append(_79425_s.get()._field_depends,1);_79425_s.get()._field_depends.__push(_75267_decl.operator jule::Ptr<_1d5599dba_Struct>());;
						}
					}
					_match_end_1d9084791:;
				};
			}
		}
		_match_end_1d9084010:;
	};
	_75280_ok = true;
	return _75280_ok;
}



inline jule::Trait<_1d631b9a4_Kind> _1d632c6da_from_type_alias(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _80235_decl, jule::Ptr<_1d631b1e0_TypeAlias>& _80262_ta) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _80262_ta.get()._field_public,_80262_ta.get()._field_token)))) {
		_1d632aa4b_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
		return nullptr;
	};
	_80262_ta.get()._field_used=true;
	if ((_80235_decl.get()._field_generics.len() > 0LL)) {
		_1d632aa4b_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1d9089202:;
			if (it != expr.end()) {
				jule::Ptr<_1d631b1e0_TypeAlias> _81920_bg = *it;
				{
					if (((_81920_bg == _80262_ta) || ((_80262_ta.get()._field_kind.get()._field_kind != nullptr) && _1d631c5dc_equals(_80262_ta.get()._field_kind.get()._field_kind, _81920_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1d9089202;
					};
				}
				_iter_next_1d9089202:;
				++it;
				goto _iter_begin_1d9089202;
			}
			_iter_end_1d9089202:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1d9089aa4:;
			if (it != expr.end()) {
				jule::Ptr<_1d631b1e0_TypeAlias> _83020_bg = *it;
				{
					if ((_83020_bg == _80262_ta)) {
						_1d632aa4b_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _80262_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1d908b985:;
						if (it != expr.end()) {
							jule::Ptr<_1d631b1e0_TypeAlias> _83524_dg = *it;
							{
								if ((_83020_bg == _83524_dg)) {
									_1d632aa4b_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1d908b985:;
							++it;
							goto _iter_begin_1d908b985;
						}
						_iter_end_1d908b985:;
					};
				}
				_iter_next_1d9089aa4:;
				++it;
				goto _iter_begin_1d9089aa4;
			}
			_iter_end_1d9089aa4:;
		};
	};
	jule::Bool _84417_ok = _1d632c333_check_illegal_cycles(&(*_self_), _80235_decl,jule::Any(_80262_ta));;
	if ((!(_84417_ok))) {
		return nullptr;
	};
	_84417_ok=_1d6288c2e_check_type_alias_decl_kind((*_self_)._field_s, _80262_ta,(*_self_)._field_lookup);
	if ((!(_84417_ok))) {
		return nullptr;
	};
	if ((_80262_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_80262_ta);;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _86117_tk = jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_generic=_80262_ta.get()._field_generic, ._field_kind=_80262_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	_1d632b70b_push_reference_by_kind(&(*_self_), _86117_tk);
	if (_80262_ta.get()._field_cpp_linked) {
		_86117_tk.get()._field_cpp_ident=_80262_ta.get()._field_ident;
	} else {
		_86117_tk.get()._field_cpp_ident=_80262_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1d631b9a4_Kind>(_86117_tk, 5);
}



inline jule::Ptr<_1d5692820_Enum> _1d632ca92_from_enum(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _87429_decl, jule::Ptr<_1d5692820_Enum>& _87456_e) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _87456_e.get()._field_public,_87456_e.get()._field_token)))) {
		_1d632aa4b_push_err(&(*_self_), _87429_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87429_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_87429_decl.get()._field_generics.len() > 0LL)) {
		_1d632aa4b_push_err(&(*_self_), _87429_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87429_decl.get()._field_ident)}));
		return nullptr;
	};
	return _87456_e;
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d632ce49_from_type_enum(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _88634_decl, jule::Ptr<_1d5a788b5_TypeEnum>& _88661_e) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _88661_e.get()._field_public,_88661_e.get()._field_token)))) {
		_1d632aa4b_push_err(&(*_self_), _88634_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88634_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_88634_decl.get()._field_generics.len() > 0LL)) {
		_1d632aa4b_push_err(&(*_self_), _88634_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88634_decl.get()._field_ident)}));
		return nullptr;
	};
	return _88661_e;
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d632d301_from_trait(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _89830_decl, jule::Ptr<_1d59c3e1a_Trait>& _89857_t) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _89857_t.get()._field_public,_89857_t.get()._field_token)))) {
		_1d632aa4b_push_err(&(*_self_), _89830_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89830_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_89830_decl.get()._field_generics.len() > 0LL)) {
		_1d632aa4b_push_err(&(*_self_), _89830_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89830_decl.get()._field_ident)}));
		return nullptr;
	};
	_1d907141a_push_reference(&(*_self_), _89857_t);
	return _89857_t;
}



inline jule::Bool _1d632d6a8_check_struct_ins(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55c62d1_StructIns>& _91140_ins, jule::Ptr<_1ee538d51_Token>& _91162_error_token) {
	jule::Bool _91185_ok = jule::Bool();
	if (_91140_ins.get()._field_checked) {
		_91185_ok = true;
		return _91185_ok;
	};
	_91140_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91140_ins.get()._field_decl))) {
		_91185_ok = true;
		return _91185_ok;
	};
	if ((!(_1d6293079_precheck_struct_ins((*_self_)._field_s, _91140_ins,_91162_error_token)))) {
		_91185_ok = false;
		return _91185_ok;
	};
	if ((_91140_ins.get()._field_generics.len() > 0LL)) {
		_1d62939e7_check_struct_ins_operators((*_self_)._field_s, _91140_ins);
		_1d62932ee_check_struct_ins((*_self_)._field_s, _91140_ins);
	};
	_91185_ok = true;
	return _91185_ok;
}



inline void _1d632d950_append_used_struct_reference(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d5599dba_Struct>& _93252_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1d5599dba_Struct>>()) {
			_case_begin_1d909cd70:;
			{
				jule::Ptr<_1d5599dba_Struct> _93921_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1d5599dba_Struct>();;
				if ((!(_1d558ae22_is_uses(_93921_ref_s.ptr(), _93252_s)))) {
					_93921_ref_s.get()._field_uses = jule::alloc_for_append(_93921_ref_s.get()._field_uses,1);_93921_ref_s.get()._field_uses.__push(_93252_s);;
				};
			}
		}
		_match_end_1d909ca84:;
	};
}



inline jule::Ptr<_1d55c62d1_StructIns> _1d632dd18_build_struct_instance(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _94645_decl, jule::Ptr<_1d5599dba_Struct>& _94672_s) {
	jule::Ptr<_1d63295e9_Referencer> _94817_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>> _95017_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1d625c571_ScopeChecker>>()) {
				_case_begin_1d90a0a76:;
				{
					jule::Ptr<_1d625c571_ScopeChecker> _95725_sc = (*_self_)._field_lookup.operator jule::Ptr<_1d625c571_ScopeChecker>();;
					jule::Ptr<_1d625c571_ScopeChecker> _95825_hard = _1d62608e8_get_hard_root(_95725_sc);;
					if (((_95825_hard.get()._field_owner.get()._field_owner == nullptr) || (_95825_hard.get()._field_owner.get()._field_owner.get()._field_decl != _94672_s))) {
						goto _match_end_1d90a0a21;
					};
					jule::I64 _96221_n = (_95825_hard.get()._field_owner.get()._field_generics.len() + _95825_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_95825_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_96221_n);
				}
			}
			_match_end_1d90a0a21:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1d55c62d1_StructIns> _97217_ins = _1d55820b1_instance(_94672_s);;
	_97217_ins.get()._field_generics=jule::Slice<jule::Ptr<_1d631a6a6_InsGeneric>>::alloc(0LL,_94645_decl.get()._field_generics.len());
	{
		auto &expr = _94645_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d90a476c:;
		if (it != expr.end()) {
			jule::Ptr<_1d55a968d_TypeDecl> _97421_g = *it;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _97521_kind = _1d63322a0_build(&(*_self_), _97421_g.get()._field_kind);;
				if ((_97521_kind == nullptr)) {
					return nullptr;
				};
				_97217_ins.get()._field_generics = jule::alloc_for_append(_97217_ins.get()._field_generics,1);_97217_ins.get()._field_generics.__push(jule::new_ptr<_1d631a6a6_InsGeneric>(_1d631a6a6_InsGeneric{._field_kind=_97521_kind, }));;
			}
			_iter_next_1d90a476c:;
			++it;
			goto _iter_begin_1d90a476c;
		}
		_iter_end_1d90a476c:;
	};
	(*_self_)._field_banned_generics=_95017_banned_generics;
	(*_self_)._field_referencer=_94817_referencer;
	return _97217_ins;
}



inline jule::Ptr<_1d55c62d1_StructIns> _1d632e1c0_from_struct(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _98935_decl, jule::Ptr<_1d5599dba_Struct>& _98962_s) {
	if ((!(_1d62808a2_is_accessible_define((*_self_)._field_s.ptr(), _98962_s.get()._field_public,_98962_s.get()._field_token)))) {
		_1d632aa4b_push_err(&(*_self_), _98935_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_98935_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_98935_decl.get()._field_generics.len() > 0LL)) {
			_1d632aa4b_push_err(&(*_self_), _98935_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1d55c62d1_StructIns>(_1d55c62d1_StructIns{._field_decl=_98962_s, });
	};
	jule::Bool _100717_ok = ((*_self_)._field_not_plain || _1d632c333_check_illegal_cycles(&(*_self_), _98935_decl,jule::Any(_98962_s)));;
	if ((!(_100717_ok))) {
		return nullptr;
	};
	_1d632d950_append_used_struct_reference(&(*_self_), _98962_s);
	jule::Ptr<_1d55c62d1_StructIns> _101317_ins = _1d632dd18_build_struct_instance(&(*_self_), _98935_decl,_98962_s);;
	if ((_101317_ins == nullptr)) {
		return nullptr;
	};
	_100717_ok=_1d6281573_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101317_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_101317_ins.get()._field_generics.len()),_98935_decl.get()._field_token);
	if ((!(_100717_ok))) {
		return nullptr;
	};
	jule::Ptr<_1d55c62d1_StructIns> _102317_exist_instance = _1d5586329_append_instance(_98962_s.ptr(), _101317_ins);;
	if ((_102317_exist_instance != nullptr)) {
		if ((!(_1d6287623_check_constraints_struct((*_self_)._field_s, _101317_ins,_98935_decl.get()._field_token,_102317_exist_instance)))) {
			return nullptr;
		};
		_1d906d390_push_reference(&(*_self_), _102317_exist_instance);
		return _102317_exist_instance;
	};
	if ((!(_1d632d6a8_check_struct_ins(&(*_self_), _101317_ins,_98935_decl.get()._field_token)))) {
		return nullptr;
	};
	_1d906d390_push_reference(&(*_self_), _101317_ins);
	return _101317_ins;
}



inline jule::Trait<_1d631b9a4_Kind> _1d632e4cd_get_def(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl>& _104731_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1d90ae4e1:;
		if (it != expr.end()) {
			jule::Ptr<_1d55b6d3d_GenericDecl> _104816_g = *it;
			{
				if ((_104816_g.get()._field_ident == _104731_decl.get()._field_ident)) {
					return jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(_104816_g.get()._field_ident), 6);
				};
			}
			_iter_next_1d90ae4e1:;
			++it;
			goto _iter_begin_1d90ae4e1;
		}
		_iter_end_1d90ae4e1:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1d90ae436:;
		if (it != expr.end()) {
			jule::Ptr<_1d631b1e0_TypeAlias> _105421_g = *it;
			{
				if ((_105421_g.get()._field_ident == _104731_decl.get()._field_ident)) {
					if ((_104731_decl.get()._field_generics.len() > 0LL)) {
						_1d632aa4b_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_104731_decl.get()._field_ident)}));
						return nullptr;
					};
					jule::Ptr<_1d55c62d1_StructIns> _106025_st = _1d6320447_strct(_105421_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_106025_st != nullptr)) {
						jule::Bool _106225_ok = _1d632c333_check_illegal_cycles(&(*_self_), _104731_decl,jule::Any(_106025_st.get()._field_decl));;
						if ((!(_106225_ok))) {
							return nullptr;
						};
					};
					return _105421_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1d90ae436:;
			++it;
			goto _iter_begin_1d90ae436;
		}
		_iter_end_1d90ae436:;
	};
	if ((!(_104731_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1d5692820_Enum> _107221_e = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d633752a_find_enum((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if ((_107221_e != nullptr)) {
			return jule::Trait<_1d631b9a4_Kind>(_1d632ca92_from_enum(&(*_self_), _104731_decl,_107221_e), 3);
		};
		jule::Ptr<_1d5a788b5_TypeEnum> _107721_te = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d6337838_find_type_enum((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if ((_107721_te != nullptr)) {
			return jule::Trait<_1d631b9a4_Kind>(_1d632ce49_from_type_enum(&(*_self_), _104731_decl,_107721_te), 4);
		};
		jule::Ptr<_1d59c3e1a_Trait> _108221_t = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d633721c_find_trait((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if (((_108221_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_108221_t=_1d63758a9_find_builtin_trait(_104731_decl.get()._field_ident);
		};
		if ((_108221_t != nullptr)) {
			return jule::Trait<_1d631b9a4_Kind>(_1d632d301_from_trait(&(*_self_), _104731_decl,_108221_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1d632aa4b_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d5599dba_Struct> _109417_s = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d6336a57_find_struct((*_self_)._field_lookup, _104731_decl.get()._field_ident,_104731_decl.get()._field_cpp_linked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_1d631b9a4_Kind>(_1d632e1c0_from_struct(&(*_self_), _104731_decl,_109417_s), 0);
	};
	jule::Ptr<_1d631b1e0_TypeAlias> _109917_ta = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d63366a0_find_type_alias((*_self_)._field_lookup, _104731_decl.get()._field_ident,_104731_decl.get()._field_cpp_linked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_109917_ta=_1d634b3eb_find_builtin_type_alias(_104731_decl.get()._field_ident);
	};
	if ((_109917_ta != nullptr)) {
		return _1d632c6da_from_type_alias(&(*_self_), _104731_decl,_109917_ta);
	};
	_1d632aa4b_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_104731_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1d631b9a4_Kind> _1d632e7db_build_ident(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a9c54_IdentTypeDecl> _111134_decl) {
	{
		
		if (_1d633533b_is_prim(_111134_decl.get()._field_ident)) {
			_case_begin_1d90bb5ca:;
			{
				return jule::Trait<_1d631b9a4_Kind>(_1d632b211_build_prim(&(*_self_), _111134_decl), 6);
			}
		}
		else {
			_case_begin_1d90bad5a:;
			{
				return _1d632e4cd_get_def(&(*_self_), _111134_decl);
			}
		}
		_match_end_1d90bac7d:;
	};
}



inline jule::Trait<_1d631b9a4_Kind> _1d632eae9_build_sub_ident(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55aa3a3_SubIdentTypeDecl> _112038_decl) {
	jule::Trait<_1d631b9a4_Kind> _112117_ident = _1d632e7db_build_ident(&(*_self_), _112038_decl.get()._field_idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1d5a788b5_TypeEnum>>()) {
			_case_begin_1d90bd126:;
			{
				goto _match_end_1d90bd049;
			}
		}
		else {
			_case_begin_1d90bcd18:;
			{
				_1d632aa4b_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d90bd049:;
	};
	jule::Ptr<_1d5a788b5_TypeEnum> _113317_t = _112117_ident.operator jule::Ptr<_1d5a788b5_TypeEnum>();;
	jule::Slice<jule::Ptr<_1d55a9c54_IdentTypeDecl>> _113417_idents = _112038_decl.get()._field_idents.slice(1LL);;
	{
		auto &expr = _113417_idents;
		auto it = expr.begin();
		_iter_begin_1d90be457:;
		if (it != expr.end()) {
			jule::I64 _113513_i = it - expr.begin();
			jule::Ptr<_1d55a9c54_IdentTypeDecl> _113516_id = *it;
			{
				jule::Ptr<_1d580d749_TypeEnumItem> _113621_item = _1d59c4756_find_item(_113317_t.ptr(), _113516_id.get()._field_ident);;
				if ((_113621_item == nullptr)) {
					_1d632aa4b_push_err(&(*_self_), _113516_id.get()._field_token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113317_t.get()._field_ident),jule::Any(_113516_id.get()._field_ident)}));
					return nullptr;
				};
				if (((_113417_idents.len() - _113513_i) == 1LL)) {
					_1d632b70b_push_reference_by_kind(&(*_self_), _113621_item.get()._field_kind.get()._field_kind);
					return jule::Trait<_1d631b9a4_Kind>(_113621_item.get()._field_kind.get()._field_kind, 5);
				};
				_113317_t=_1d631e996_tenm(_113621_item.get()._field_kind.get()._field_kind.ptr());
				if ((_113317_t == nullptr)) {
					_1d632aa4b_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1d90be457:;
			++it;
			_113513_i++;
			goto _iter_begin_1d90be457;
		}
		_iter_end_1d90be457:;
	};
	return nullptr;
}



inline jule::Ptr<_1d632513e_Sptr> _1d632ee07_build_sptr_from_type(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _115544_elem) {
	{
		
		if ((_115544_elem == nullptr)) {
			_case_begin_1d90bee19:;
			{
				return nullptr;
			}
		}
		else if ((_1d6320447_strct(_115544_elem.ptr()) != nullptr)) {
			_case_begin_1d90bee91:;
			{
				jule::Ptr<_1d55c62d1_StructIns> _116117_s = _1d6320447_strct(_115544_elem.ptr());;
				if (((_116117_s.get()._field_decl != nullptr) && _116117_s.get()._field_decl.get()._field_cpp_linked)) {
					_1d632aa4b_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1d631ec0a_arr(_115544_elem.ptr()) != nullptr) && _1d631ec0a_arr(_115544_elem.ptr()).get()._field_auto)) {
			_case_begin_1d90c0018:;
			{
				_1d632aa4b_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d90becd7:;
	};
	return jule::new_ptr<_1d632513e_Sptr>(_1d632513e_Sptr{._field_elem=_115544_elem});
}



inline jule::Ptr<_1d632513e_Sptr> _1d6330215_build_sptr(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55aaa46_SptrTypeDecl> _117533_decl) {
	jule::Bool _117613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_117613_not_plain;
	});;
	jule::Ptr<_1d631bdd3_TypeKind> _118017_elem = _1d63325ad_check_decl(&(*_self_), _117533_decl.get()._field_elem);;
	return _1d632ee07_build_sptr_from_type(&(*_self_), _118017_elem);
}



inline jule::Ptr<_1d63286a3_Ptr> _1d6330523_build_ptr_from_type(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d631bdd3_TypeKind>& _118443_elem) {
	{
		
		if ((_118443_elem == nullptr)) {
			_case_begin_1d90c8571:;
			{
				return nullptr;
			}
		}
		else if (((_1d631ec0a_arr(_118443_elem.ptr()) != nullptr) && _1d631ec0a_arr(_118443_elem.ptr()).get()._field_auto)) {
			_case_begin_1d90c85e8:;
			{
				_1d632aa4b_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1d63286a3_Ptr>();
			}
		}
		_match_end_1d90c8450:;
	};
	return jule::new_ptr<_1d63286a3_Ptr>(_1d63286a3_Ptr{._field_elem=_118443_elem});
}



inline jule::Ptr<_1d63286a3_Ptr> _1d6330831_build_ptr(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55ab519_PtrTypeDecl> _119932_decl) {
	jule::Bool _120013_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_120013_not_plain;
	});;
	jule::Ptr<_1d631bdd3_TypeKind> _120417_elem = nullptr;;
	if ((!(_1d55ab86b_is_unsafe(_119932_decl.ptr())))) {
		_120417_elem=_1d63325ad_check_decl(&(*_self_), _119932_decl.get()._field_elem);
		return _1d6330523_build_ptr_from_type(&(*_self_), _120417_elem);
	};
	return jule::new_ptr<_1d63286a3_Ptr>(_1d63286a3_Ptr{._field_elem=_120417_elem});
}



inline jule::Ptr<_1d6325a9b_Slc> _1d6330b3e_build_slc(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55aae42_SlcTypeDecl> _121632_decl) {
	jule::Bool _121713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121713_not_plain;
	});;
	jule::Ptr<_1d631bdd3_TypeKind> _122117_elem = _1d63325ad_check_decl(&(*_self_), _121632_decl.get()._field_elem);;
	{
		
		if ((_122117_elem == nullptr)) {
			_case_begin_1d90cd840:;
			{
				return nullptr;
			}
		}
		else if (((_1d631ec0a_arr(_122117_elem.ptr()) != nullptr) && _1d631ec0a_arr(_122117_elem.ptr()).get()._field_auto)) {
			_case_begin_1d90cd8b7:;
			{
				_1d632aa4b_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d90cd785:;
	};
	return jule::new_ptr<_1d6325a9b_Slc>(_1d6325a9b_Slc{._field_elem=_122117_elem});
}



inline jule::Ptr<_1d6327c46_Arr> _1d6330e4c_build_arr(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55abb9b_ArrTypeDecl> _123732_decl) {
	jule::Bool _123813_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_123813_not_plain;
	});;
	jule::I64 _124217_n = 0LL;;
	if ((!(_1d55ac075_auto_sized(_123732_decl.ptr())))) {
		jule::Ptr<_1d62e16b0_Data> _124521_size = _1d630d59a_eval_expr(_1d62857db_eval((*_self_)._field_s, (*_self_)._field_lookup), _123732_decl.get()._field_size);;
		if ((_124521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1d62e2073_is_const(_124521_size.ptr())))) {
			_1d632aa4b_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1d631dee5_prim(_124521_size.get()._field_kind.ptr()) == nullptr) || (!(_1d6254bd9_is_int(_1d631dee5_prim(_124521_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1d632aa4b_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124217_n=static_cast<jule::I64>(static_cast<jule::I64>(_1d566bc06_as_i64(_124521_size.get()._field_constant.ptr())));
		if ((_124217_n < 0LL)) {
			_1d632aa4b_push_err(&(*_self_), _123732_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1d62473e6_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_124217_n) > _1d624e80a_max(jule::Str("int", 3))))) {
			_1d632aa4b_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1d631bdd3_TypeKind> _126817_elem = _1d63325ad_check_decl(&(*_self_), _123732_decl.get()._field_elem);;
	{
		
		if ((_126817_elem == nullptr)) {
			_case_begin_1d90d7382:;
			{
				return nullptr;
			}
		}
		else if (((_1d631ec0a_arr(_126817_elem.ptr()) != nullptr) && _1d631ec0a_arr(_126817_elem.ptr()).get()._field_auto)) {
			_case_begin_1d90d73e8:;
			{
				_1d632aa4b_push_err(&(*_self_), _123732_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d90d710c:;
	};
	return jule::new_ptr<_1d6327c46_Arr>(_1d6327c46_Arr{._field_auto=_1d55ac075_auto_sized(_123732_decl.ptr()), ._field_n=_124217_n, ._field_elem=_126817_elem});
}



inline jule::Ptr<_1d6327152_Map> _1d633125a_build_map(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55ac3e9_MapTypeDecl> _128632_decl) {
	jule::Bool _128713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_128713_not_plain;
	});;
	jule::Ptr<_1d631bdd3_TypeKind> _129117_key = _1d63325ad_check_decl(&(*_self_), _128632_decl.get()._field_key);;
	if ((_129117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _129617_val = _1d63325ad_check_decl(&(*_self_), _128632_decl.get()._field_val);;
	if ((_129617_val == nullptr)) {
		return nullptr;
	};
	if ((_1d631e732_enm(_129617_val.ptr()) != nullptr)) {
		_1d632aa4b_push_err(&(*_self_), _128632_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1d6327152_Map>(_1d6327152_Map{._field_key=_129117_key, ._field_val=_129617_val});
}



inline jule::Ptr<_1d6326629_Tuple> _1d6331568_build_tuple(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55ab22d_TupleTypeDecl> _131034_decl) {
	jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _131117_types = jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>>::alloc(0LL,_131034_decl.get()._field_types.len());;
	{
		auto &expr = _131034_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1d90dca3b:;
		if (it != expr.end()) {
			jule::Ptr<_1d55a968d_TypeDecl> _131221_t = *it;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _131321_kind = _1d63325ad_check_decl(&(*_self_), _131221_t);;
				if ((_131321_kind == nullptr)) {
					return nullptr;
				};
				_131117_types = jule::alloc_for_append(_131117_types,1);_131117_types.__push(_131321_kind);;
			}
			_iter_next_1d90dca3b:;
			++it;
			goto _iter_begin_1d90dca3b;
		}
		_iter_end_1d90dca3b:;
	};
	return jule::new_ptr<_1d6326629_Tuple>(_1d6326629_Tuple{._field_types=_131117_types});
}



inline jule::Bool _1d6331876_check_fn_types(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d567d498_FnIns>& _132338_f) {
	jule::Bool _132351_ok = jule::Bool();
	{
		auto &expr = _132338_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d90de93e:;
		if (it != expr.end()) {
			jule::Ptr<_1d567c5c9_ParamIns> _132421_p = *it;
			{
				_132421_p.get()._field_kind=_1d63322a0_build(&(*_self_), _132421_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_132351_ok=(_132421_p.get()._field_kind != nullptr);
				if ((!(_132351_ok))) {
					_132351_ok = false;
					return _132351_ok;
				};
			}
			_iter_next_1d90de93e:;
			++it;
			goto _iter_begin_1d90de93e;
		}
		_iter_end_1d90de93e:;
	};
	if ((!(_1d567ac59_is_void(_132338_f.get()._field_decl.ptr())))) {
		_132338_f.get()._field_result=_1d63322a0_build(&(*_self_), _132338_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_132351_ok = (_132338_f.get()._field_result != nullptr);
		return _132351_ok;
	};
	_132351_ok = true;
	return _132351_ok;
}



inline jule::Ptr<_1d567d498_FnIns> _1d6331b84_build_fn(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55bb56d_FnDecl> _134031_decl) {
	if ((_134031_decl.get()._field_generics.len() > 0LL)) {
		_1d632aa4b_push_err(&(*_self_), _134031_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d567a7e7_Fn> _134617_f = _1d5683ec6_build_fn(_134031_decl);;
	jule::Ptr<_1d567d498_FnIns> _134717_ins = _1d567bbd3_instance_force(_134617_f);;
	_134717_ins.get()._field_anon=true;
	jule::Bool _135013_ok = _1d6331876_check_fn_types(&(*_self_), _134717_ins);;
	if ((!(_135013_ok))) {
		return nullptr;
	};
	return _134717_ins;
}



inline jule::Trait<_1d631b9a4_Kind> _1d6331e92_build_by_namespace(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55aa75a_NamespaceTypeDecl> _135841_decl) {
	jule::Str _135913_path = _1d6334934_build_link_path_by_tokens(_135841_decl.get()._field_idents);;
	jule::Ptr<_1d62743bd_ImportInfo> _136017_imp = _1d633797b_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d6335e41_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d62743bd_ImportInfo>)>([=](jule::Ptr<_1d62743bd_ImportInfo> _136053_imp) mutable -> jule::Bool {
		if (((_135841_decl.get()._field_idents.len() == 1LL) && (_136053_imp.get()._field_alias == _135913_path))) {
			return true;
		};
		return ((_136053_imp.get()._field_link_path == _135913_path) && _1d627702a_is_accessible_via_selection(_136053_imp.ptr()));
	}));;
	if (((_136017_imp == nullptr) || (!(_1d6276986_is_lookupable(_136017_imp.ptr(), jule::Str("self", 4)))))) {
		_1d632aa4b_push_err(&(*_self_), _135841_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_135913_path)}));
		return nullptr;
	};
	_1d632ae03_disallow_builtin(&(*_self_));
	jule::Trait<_1d633797b_Lookup> _137317_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1d633797b_Lookup>(_136017_imp, 1);
	jule::Ptr<_1d631bdd3_TypeKind> _137517_kind = _1d63325ad_check_decl(&(*_self_), _135841_decl.get()._field_kind);;
	(*_self_)._field_lookup=_137317_lookup;
	_1d632ac27_allow_builtin(&(*_self_));
	return jule::Trait<_1d631b9a4_Kind>(_137517_kind, 5);
}



inline jule::Ptr<_1d631bdd3_TypeKind> _1d63322a0_build(_1d632a342_TypeChecker* _self_, jule::Any& _138229_decl_kind) {
	jule::Trait<_1d631b9a4_Kind> _138317_kind = nullptr;;
	{
		auto &_match_expr{ _138229_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55a9c54_IdentTypeDecl>>()) {
			_case_begin_1d90eb099:;
			{
				jule::Trait<_1d631b9a4_Kind> _138621_t = _1d632e7db_build_ident(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55a9c54_IdentTypeDecl>());;
				if ((_138621_t != nullptr)) {
					_138317_kind=_138621_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>>()) {
			_case_begin_1d90eb110:;
			{
				jule::Trait<_1d631b9a4_Kind> _139121_t = _1d632eae9_build_sub_ident(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>());;
				if ((_139121_t != nullptr)) {
					_138317_kind=_139121_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aaa46_SptrTypeDecl>>()) {
			_case_begin_1d90eb7e7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d632513e_Sptr> _139721_t = _1d6330215_build_sptr(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55aaa46_SptrTypeDecl>());;
				if ((_139721_t != nullptr)) {
					_138317_kind=jule::Trait<_1d631b9a4_Kind>(_139721_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ab519_PtrTypeDecl>>()) {
			_case_begin_1d90eb85d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d63286a3_Ptr> _140321_t = _1d6330831_build_ptr(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55ab519_PtrTypeDecl>());;
				if ((_140321_t != nullptr)) {
					_138317_kind=jule::Trait<_1d631b9a4_Kind>(_140321_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aae42_SlcTypeDecl>>()) {
			_case_begin_1d90eb8c4:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d6325a9b_Slc> _140921_t = _1d6330b3e_build_slc(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55aae42_SlcTypeDecl>());;
				if ((_140921_t != nullptr)) {
					_138317_kind=jule::Trait<_1d631b9a4_Kind>(_140921_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55abb9b_ArrTypeDecl>>()) {
			_case_begin_1d90eb93a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d6327c46_Arr> _141521_t = _1d6330e4c_build_arr(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55abb9b_ArrTypeDecl>());;
				if ((_141521_t != nullptr)) {
					_138317_kind=jule::Trait<_1d631b9a4_Kind>(_141521_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ac3e9_MapTypeDecl>>()) {
			_case_begin_1d90eb9a1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d6327152_Map> _142121_t = _1d633125a_build_map(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55ac3e9_MapTypeDecl>());;
				if ((_142121_t != nullptr)) {
					_138317_kind=jule::Trait<_1d631b9a4_Kind>(_142121_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ab22d_TupleTypeDecl>>()) {
			_case_begin_1d90eba17:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d6326629_Tuple> _142721_t = _1d6331568_build_tuple(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55ab22d_TupleTypeDecl>());;
				if ((_142721_t != nullptr)) {
					_138317_kind=jule::Trait<_1d631b9a4_Kind>(_142721_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bb56d_FnDecl>>()) {
			_case_begin_1d90eba7d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d567d498_FnIns> _143321_t = _1d6331b84_build_fn(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55bb56d_FnDecl>());;
				if ((_143321_t != nullptr)) {
					_138317_kind=jule::Trait<_1d631b9a4_Kind>(_143321_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aa75a_NamespaceTypeDecl>>()) {
			_case_begin_1d90ebae4:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1d631b9a4_Kind> _143921_t = _1d6331e92_build_by_namespace(&(*_self_), _138229_decl_kind.operator jule::Ptr<_1d55aa75a_NamespaceTypeDecl>());;
				if ((_143921_t != nullptr)) {
					_138317_kind=_143921_t;
				};
			}
		}
		else {
			_case_begin_1d90ead35:;
			{
				_1d632aa4b_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d90eacd0:;
	};
	if ((_138317_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _138317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d631bdd3_TypeKind>>()) {
			_case_begin_1d9108859:;
			{
				return _138317_kind.operator jule::Ptr<_1d631bdd3_TypeKind>();
			}
		}
		else {
			_case_begin_1d91081a5:;
			{
				return jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=_138317_kind});
			}
		}
		_match_end_1d90ebd8b:;
	};
}



inline jule::Ptr<_1d631bdd3_TypeKind> _1d63325ad_check_decl(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d55a968d_TypeDecl>& _146034_decl) {
	jule::Ptr<_1ee538d51_Token> _146217_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_146034_decl.get()._field_token;
	jule::Ptr<_1d631bdd3_TypeKind> _146517_kind = _1d63322a0_build(&(*_self_), _146034_decl.get()._field_kind);;
	(*_self_)._field_error_token=_146217_error_token;
	return _146517_kind;
}



inline void _1d6332833_check(_1d632a342_TypeChecker* _self_, jule::Ptr<_1d632103b_TypeSymbol>& _147129_t) {
	if ((_147129_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1d631bdd3_TypeKind> _147517_kind = _1d63325ad_check_decl(&(*_self_), _147129_t.get()._field_decl);;
	if ((_147517_kind == nullptr)) {
		_1d63215be_remove_kind(_147129_t.ptr());
		return;;
	};
	_147129_t.get()._field_kind=_147517_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1d632a342_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d6332e93___ident_type_decl(jule::Str& _148734_ident, jule::Ptr<_1d55a9c54_IdentTypeDecl> _148746_t) {
	if ((_148746_t.get()._field_ident == _148734_ident)) {
		return true;
	};
	{
		auto &expr = _148746_t.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d910c3c9:;
		if (it != expr.end()) {
			jule::Ptr<_1d55a968d_TypeDecl> &_149116_g = *it;
			{
				if (static__1d63332d4_exist(_148734_ident,_149116_g.get()._field_kind)) {
					return true;
				};
			}
			_iter_next_1d910c3c9:;
			++it;
			goto _iter_begin_1d910c3c9;
		}
		_iter_end_1d910c3c9:;
	};
	return false;
}



inline jule::Bool static__1d63332d4_exist(jule::Str& _149922_ident, jule::Any& _149935_k) {
	{
		auto &_match_expr{ _149935_k };
		
		if (_match_expr.type_is<jule::Ptr<_1d55a9c54_IdentTypeDecl>>()) {
			_case_begin_1d910d4c9:;
			{
				return static__1d6332e93___ident_type_decl(_149922_ident,_149935_k.operator jule::Ptr<_1d55a9c54_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>>()) {
			_case_begin_1d910d540:;
			{
				jule::Ptr<_1d55aa3a3_SubIdentTypeDecl> _150417_sit = _149935_k.operator jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>();;
				{
					auto &expr = _150417_sit.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1d910ed5a:;
					if (it != expr.end()) {
						jule::Ptr<_1d55a9c54_IdentTypeDecl> &_150520_id = *it;
						{
							if (static__1d6332e93___ident_type_decl(_149922_ident,_150520_id)) {
								return true;
							};
						}
						_iter_next_1d910ed5a:;
						++it;
						goto _iter_begin_1d910ed5a;
					}
					_iter_end_1d910ed5a:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aaa46_SptrTypeDecl>>()) {
			_case_begin_1d910d70a:;
			{
				jule::Ptr<_1d55aaa46_SptrTypeDecl> _151217_sptr = _149935_k.operator jule::Ptr<_1d55aaa46_SptrTypeDecl>();;
				return static__1d63332d4_exist(_149922_ident,_151217_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ab519_PtrTypeDecl>>()) {
			_case_begin_1d910d771:;
			{
				jule::Ptr<_1d55ab519_PtrTypeDecl> _151517_ptr = _149935_k.operator jule::Ptr<_1d55ab519_PtrTypeDecl>();;
				return static__1d63332d4_exist(_149922_ident,_151517_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aae42_SlcTypeDecl>>()) {
			_case_begin_1d910d7d7:;
			{
				jule::Ptr<_1d55aae42_SlcTypeDecl> _151817_slc = _149935_k.operator jule::Ptr<_1d55aae42_SlcTypeDecl>();;
				return static__1d63332d4_exist(_149922_ident,_151817_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55abb9b_ArrTypeDecl>>()) {
			_case_begin_1d910d84d:;
			{
				jule::Ptr<_1d55abb9b_ArrTypeDecl> _152117_arr = _149935_k.operator jule::Ptr<_1d55abb9b_ArrTypeDecl>();;
				return static__1d63332d4_exist(_149922_ident,_152117_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ac3e9_MapTypeDecl>>()) {
			_case_begin_1d910d8b4:;
			{
				jule::Ptr<_1d55ac3e9_MapTypeDecl> _152417_map = _149935_k.operator jule::Ptr<_1d55ac3e9_MapTypeDecl>();;
				return (static__1d63332d4_exist(_149922_ident,_152417_map.get()._field_key.get()._field_kind) || static__1d63332d4_exist(_149922_ident,_152417_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bb56d_FnDecl>>()) {
			_case_begin_1d910d93b:;
			{
				jule::Ptr<_1d55bb56d_FnDecl> _152817_f = _149935_k.operator jule::Ptr<_1d55bb56d_FnDecl>();;
				{
					auto &expr = _152817_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1d9115206:;
					if (it != expr.end()) {
						jule::Ptr<_1d55ba24d_ParamDecl> &_152920_p = *it;
						{
							if (_1d55ba5b1_is_self(_152920_p.ptr())) {
								goto _iter_next_1d9115206;
							};
							if (static__1d63332d4_exist(_149922_ident,_152920_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1d9115206:;
						++it;
						goto _iter_begin_1d9115206;
					}
					_iter_end_1d9115206:;
				};
				if ((_152817_f.get()._field_result != nullptr)) {
					return static__1d63332d4_exist(_149922_ident,_152817_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55ab22d_TupleTypeDecl>>()) {
			_case_begin_1d910d9b3:;
			{
				jule::Ptr<_1d55ab22d_TupleTypeDecl> _154217_tup = _149935_k.operator jule::Ptr<_1d55ab22d_TupleTypeDecl>();;
				{
					auto &expr = _154217_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1d911c582:;
					if (it != expr.end()) {
						jule::Ptr<_1d55a968d_TypeDecl> &_154320_t = *it;
						{
							if (static__1d63332d4_exist(_149922_ident,_154320_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1d911c582:;
						++it;
						goto _iter_begin_1d911c582;
					}
					_iter_end_1d911c582:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aa75a_NamespaceTypeDecl>>()) {
			_case_begin_1d910da3a:;
			{
				jule::Ptr<_1d55aa75a_NamespaceTypeDecl> _155017_ns = _149935_k.operator jule::Ptr<_1d55aa75a_NamespaceTypeDecl>();;
				return static__1d63332d4_exist(_149922_ident,_155017_ns.get()._field_kind.get()._field_kind);
			}
		}
		else {
			_case_begin_1d910c85d:;
			{
				return false;
			}
		}
		_match_end_1d910c808:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d6332a53_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6ac11e2_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6b228c5_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1d6b23882_stop(_1d6b23200_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1d6b23ae6_stopped(_1d6b23200_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1d6b23d5a_finished(_1d6b23200_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1d6b240be_is_last_st(_1d6b23200_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1d6b243dd_push_err(_1d6b23200_ScopeParser* _self_, jule::Ptr<_1ee538d51_Token> _19227_token, jule::Str _19242_fmt) {
	_1d6b3eeb9_push_err((*_self_)._field_p.ptr(), _19227_token,_19242_fmt,jule::Slice<jule::Any>());
}



inline void _1d6b2470c_push_suggestion(_1d6b23200_ScopeParser* _self_, jule::Str _19734_fmt, jule::Slice<jule::Any> _19747_args) {
	_1d6b402d8_push_suggestion((*_self_)._field_p.ptr(), _19734_fmt,jule::Any(_19747_args));
}



inline void _1d6b24982_insert_as_next(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _20138_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1d6b228c5_stmt>(_1d6b228c5_stmt{._field_tokens=_20138_tokens, });
}



inline jule::Ptr<_1d6b228c5_stmt> _1d6b24be6_next(_1d6b23200_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b2509d_build_scope(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _21135_tokens, jule::Ptr<_1ee538d51_Token> _21157_end) {
	jule::Ptr<_1d55b9a77_ScopeTree> _21217_s = _1d6b21770_new_scope();;
	_21217_s.get()._field_parent=(*_self_)._field_s;
	_21217_s.get()._field_end=_21157_end;
	_1d6b23200_ScopeParser _21517_ssp = _1d6b23200_ScopeParser{._field_p=(*_self_)._field_p, };;
	_1d6b2dc22_build(&_21517_ssp, _21135_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b253ab_build_var_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _22236_tokens) {
	jule::Ptr<_1d55bc54c_VarDecl> _22317_v = _1d6b429b1_build_var((*_self_)._field_p, _22236_tokens);;
	_22317_v.get()._field_scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1d55bc904_RetSt> _1d6b256b9_build_ret_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _22835_tokens) {
	jule::Ptr<_1d55bc904_RetSt> _22917_st = jule::new_ptr<_1d55bc904_RetSt>(_1d55bc904_RetSt{._field_token=_22835_tokens[0LL], });;
	if ((_22835_tokens.len() > 1LL)) {
		_22835_tokens=_22835_tokens.slice(1LL);
		_22917_st.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _22835_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1d55bd064_Iter> _1d6b259c7_build_while_next_iter(_1d6b23200_ScopeParser* _self_, jule::Ptr<_1d6b228c5_stmt>& _23945_s) {
	jule::Ptr<_1d55bd064_Iter> _24017_it = jule::new_ptr<_1d55bd064_Iter>(_1d55bd064_Iter{._field_token=_23945_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _24317_tokens = _23945_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1d55bd839_WhileKind> _24417_kind = jule::new_ptr<_1d55bd839_WhileKind>(_1d55bd839_WhileKind{});;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _24317_tokens);
	};
	if (_1d6b240be_is_last_st(&(*_self_))) {
		_1d6b243dd_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1d6b24be6_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _25617_st_tokens = _1d6b2ee21_get_block_expr(_24317_tokens);;
	if ((_25617_st_tokens.len() > 0LL)) {
		jule::Ptr<_1d6b228c5_stmt> _25821_stmt = jule::new_ptr<_1d6b228c5_stmt>(_1d6b228c5_stmt{._field_tokens=_25617_st_tokens, ._field_terminated=_23945_s.get()._field_terminated});;
		_24417_kind.get()._field_next_token=_25617_st_tokens[0LL];
		_24417_kind.get()._field_next=_1d6b2d903_build_st(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_st_tokens.len();;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _26717_block_tokens = _1d6b3c714_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_block_tokens == nullptr)) {
		_1d6b23882_stop(&(*_self_));
		_1d6b243dd_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("body is not exist", 17));
		_1d6b2470c_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1d6b243dd_push_err(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_scope=_1d6b2509d_build_scope(&(*_self_), _26717_block_tokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1d55bd839_WhileKind> _1d6b25cd5_build_while_iter_kind(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _28445_tokens) {
	return jule::new_ptr<_1d55bd839_WhileKind>(_1d55bd839_WhileKind{._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _28445_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b26115_get_range_kind_keys_tokens(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _29050_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _29118_vars;;
	jule::Slice<_21868a483_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1d6b3d308_parts(_29050_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b26434_build_range_kind_key(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _29644_tokens) {
	if ((_29644_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1d55bc54c_VarDecl> _30017_key = jule::new_ptr<_1d55bc54c_VarDecl>(_1d55bc54c_VarDecl{._field_token=_29644_tokens[0LL], });;
	if ((_30017_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_30017_key.get()._field_mutable=true;
		if ((_29644_tokens.len() == 1LL)) {
			_1d6b243dd_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_token=_29644_tokens[1LL];
	} else if ((_29644_tokens.len() > 1LL)) {
		_1d6b243dd_push_err(&(*_self_), _29644_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b243dd_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1d6b2470c_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_ident=_30017_key.get()._field_token.get()._field_kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>> _1d6b26742_build_range_kind_keys(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>& _32145_parts) {
	jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32145_parts;
		auto it = expr.begin();
		_iter_begin_1d928a744:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1d6b26434_build_range_kind_key(&(*_self_), _32321_tokens));;
			}
			_iter_next_1d928a744:;
			++it;
			goto _iter_begin_1d928a744;
		}
		_iter_end_1d928a744:;
	};
	return _32217_keys;
}



inline void _1d6b26a83_setup_range_kind_keys_plain(_1d6b23200_ScopeParser* _self_, jule::Ptr<_1d55be1ca_RangeKind>& _32951_rng, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _32973_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _33017_key_tokens = _1d6b26115_get_range_kind_keys_tokens(&(*_self_), _32973_tokens);;
	if ((_33017_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_key_tokens.len() > 2LL)) {
		_1d6b243dd_push_err(&(*_self_), _32951_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>> _33717_keys = _1d6b26742_build_range_kind_keys(&(*_self_), _33017_key_tokens);;
	_32951_rng.get()._field_key_a=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32951_rng.get()._field_key_b=_33717_keys[1LL];
	};
}



inline void _1d6b26dd5_setup_range_kind_keys_explicit(_1d6b23200_ScopeParser* _self_, jule::Ptr<_1d55be1ca_RangeKind>& _34454_rng, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _34476_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _34617_rang = _1d6b3c714_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34476_tokens);;
	if ((_34517_i < _34476_tokens.len())) {
		_1d6b243dd_push_err(&(*_self_), _34454_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1d6b26a83_setup_range_kind_keys_plain(&(*_self_), _34454_rng,_34617_rang);
}



inline void _1d6b27215_setup_range_kind_keys(_1d6b23200_ScopeParser* _self_, jule::Ptr<_1d55be1ca_RangeKind>& _35345_rng, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _35367_tokens) {
	if ((_35367_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35367_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1d6b243dd_push_err(&(*_self_), _35367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1d6b26dd5_setup_range_kind_keys_explicit(&(*_self_), _35345_rng,_35367_tokens);
		return;;
	};
	_1d6b26a83_setup_range_kind_keys_plain(&(*_self_), _35345_rng,_35367_tokens);
}



inline jule::Ptr<_1d55be1ca_RangeKind> _1d6b27666_build_range_iter_kind(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _36545_var_tokens, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _36614_expr_tokens, jule::Ptr<_1ee538d51_Token>& _36642_in_token) {
	jule::Ptr<_1d55be1ca_RangeKind> _36717_rng = jule::new_ptr<_1d55be1ca_RangeKind>(_1d55be1ca_RangeKind{._field_in_token=_36642_in_token, });;
	if ((_36614_expr_tokens.len() == 0LL)) {
		_1d6b243dd_push_err(&(*_self_), _36717_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _36614_expr_tokens);
	if ((_36545_var_tokens.len() > 0LL)) {
		_1d6b27215_setup_range_kind_keys(&(*_self_), _36717_rng,_36545_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1d6b27a1d_build_common_iter_kind(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _38146_tokens, jule::Ptr<_1ee538d51_Token>& _38165_err_tok) {
	jule::I64 _38217_brace_n = 0LL;;
	{
		auto &expr = _38146_tokens;
		auto it = expr.begin();
		_iter_begin_1d9296442:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d92973ee:;
							{
								(_38217_brace_n)++;
								goto _iter_next_1d9296442;
							}
						}
						else {
							_case_begin_1d92976c9:;
							{
								(_38217_brace_n)--;
							}
						}
						_match_end_1d92974ba:;
					};
				};
				if ((_38217_brace_n != 0LL)) {
					goto _iter_next_1d9296442;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1d92970e1:;
						{
							jule::Slice<jule::Ptr<_1ee538d51_Token>> _40025_decl_tokens = _38146_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1ee538d51_Token>> _40125_expr_tokens = _38146_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1d6b27666_build_range_iter_kind(&(*_self_), _40025_decl_tokens,_40125_expr_tokens,_38321_tok));
						}
					}
					_match_end_1d9297b91:;
				};
			}
			_iter_next_1d9296442:;
			++it;
			_38314_i++;
			goto _iter_begin_1d9296442;
		}
		_iter_end_1d9296442:;
	};
	return static_cast<jule::Any>(_1d6b25cd5_build_while_iter_kind(&(*_self_), _38146_tokens));
}



inline jule::Ptr<_1d55bd064_Iter> _1d6b27d2b_build_common_iter(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _40840_tokens) {
	jule::Ptr<_1d55bd064_Iter> _40917_it = jule::new_ptr<_1d55bd064_Iter>(_1d55bd064_Iter{._field_token=_40840_tokens[0LL], });;
	_40840_tokens=_40840_tokens.slice(1LL);
	if ((_40840_tokens.len() == 0LL)) {
		_1d6b23882_stop(&(*_self_));
		_1d6b243dd_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1d6b2470c_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _41917_expr_tokens = _1d6b2ee21_get_block_expr(_40840_tokens);;
	if ((_41917_expr_tokens.len() > 0LL)) {
		_40917_it.get()._field_kind=_1d6b27a1d_build_common_iter_kind(&(*_self_), _41917_expr_tokens,_40917_it.get()._field_token);
	};
	jule::I64 _42317_i = _41917_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _42417_scope_tokens = _1d6b3c714_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40840_tokens);;
	if ((_42417_scope_tokens == nullptr)) {
		_1d6b23882_stop(&(*_self_));
		_1d6b243dd_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1d6b2470c_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40840_tokens.len())) {
		_1d6b243dd_push_err(&(*_self_), _40840_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_scope=_1d6b2509d_build_scope(&(*_self_), _42417_scope_tokens,_40840_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1d55bd064_Iter> _1d6b28139_build_iter_st(_1d6b23200_ScopeParser* _self_, jule::Ptr<_1d6b228c5_stmt>& _43837_st) {
	if (_43837_st.get()._field_terminated) {
		return _1d6b259c7_build_while_next_iter(&(*_self_), _43837_st);
	};
	return _1d6b27d2b_build_common_iter(&(*_self_), _43837_st.get()._field_tokens);
}



inline jule::Ptr<_1d55be582_BreakSt> _1d6b28447_build_break_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _44538_tokens) {
	jule::Ptr<_1d55be582_BreakSt> _44617_brk = jule::new_ptr<_1d55be582_BreakSt>(_1d55be582_BreakSt{._field_token=_44538_tokens[0LL], });;
	if ((_44538_tokens.len() > 1LL)) {
		if ((_44538_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1d6b243dd_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			_1d6b2470c_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_label=_44538_tokens[1LL];
			if ((_44538_tokens.len() > 2LL)) {
				_1d6b243dd_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1d55be939_ContSt> _1d6b28755_build_cont_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _46337_tokens) {
	jule::Ptr<_1d55be939_ContSt> _46417_cont = jule::new_ptr<_1d55be939_ContSt>(_1d55be939_ContSt{._field_token=_46337_tokens[0LL], });;
	if ((_46337_tokens.len() > 1LL)) {
		if ((_46337_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1d6b243dd_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			_1d6b2470c_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_label=_46337_tokens[1LL];
			if ((_46337_tokens.len() > 2LL)) {
				_1d6b243dd_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1d55bedac_If> _1d6b28a63_build_if(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _48132_tokens) {
	jule::Ptr<_1d55bedac_If> _48217_model = jule::new_ptr<_1d55bedac_If>(_1d55bedac_If{._field_token=_48132_tokens[0LL], });;
	_48132_tokens=_48132_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _48617_expr_tokens = _1d6b2ee21_get_block_expr(_48132_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_expr_tokens.len() == 0LL)) {
		_1d6b243dd_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _49317_scope_tokens = _1d6b3c714_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48132_tokens);;
	if ((_49317_scope_tokens == nullptr)) {
		_1d6b23882_stop(&(*_self_));
		_1d6b243dd_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("body is not exist", 17));
		_1d6b2470c_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ee538d51_Token> _50017_end = _48132_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48132_tokens.len())) {
		if ((_48132_tokens[_48717_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_48132_tokens=_48132_tokens.slice(_48717_i);
		} else {
			_1d6b243dd_push_err(&(*_self_), _48132_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48132_tokens=nullptr;
		};
	};
	_48217_model.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _48617_expr_tokens);
	_48217_model.get()._field_scope=_1d6b2509d_build_scope(&(*_self_), _49317_scope_tokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1d55c0264_Else> _1d6b28d71_build_else(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _51434_tokens) {
	jule::Ptr<_1d55c0264_Else> _51517_els = jule::new_ptr<_1d55c0264_Else>(_1d55c0264_Else{._field_token=_51434_tokens[0LL], });;
	_51434_tokens=_51434_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _52017_scope_tokens = _1d6b3c714_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51434_tokens);;
	if ((_52017_scope_tokens == nullptr)) {
		if ((_51917_i < _51434_tokens.len())) {
			_1d6b243dd_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1d6b23882_stop(&(*_self_));
			_1d6b243dd_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("body is not exist", 17));
			_1d6b2470c_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51434_tokens.len())) {
		_1d6b243dd_push_err(&(*_self_), _51434_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_scope=_1d6b2509d_build_scope(&(*_self_), _52017_scope_tokens,_51434_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1d55c06d7_Conditional> _1d6b2917e_build_if_else_chain(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _53842_tokens) {
	jule::Ptr<_1d55c06d7_Conditional> _53917_chain = jule::new_ptr<_1d55c06d7_Conditional>(_1d55c06d7_Conditional{._field_head=_1d6b28a63_build_if(&(*_self_), _53842_tokens), });;
	if ((_53917_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53842_tokens.len() != 0LL)) {
		{
			if ((_53842_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1d92b3b46;
			};
			if (((_53842_tokens.len() > 1LL) && (_53842_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53842_tokens=_53842_tokens.slice(1LL);
				jule::Ptr<_1d55bedac_If> _55125_elif = _1d6b28a63_build_if(&(*_self_), _53842_tokens);;
				_53917_chain.get()._field_tail = jule::alloc_for_append(_53917_chain.get()._field_tail,1);_53917_chain.get()._field_tail.__push(_55125_elif);;
				goto _iter_next_1d92b3b46;
			};
			_53917_chain.get()._field_default=_1d6b28d71_build_else(&(*_self_), _53842_tokens);
			goto _iter_end_1d92b3b46;
		}
	_iter_next_1d92b3b46:;
	}
	_iter_end_1d92b3b46:;;
	return _53917_chain;
}



inline jule::Ptr<_1d55b07a4_CoExpr> _1d6b2948c_build_co_call_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _56139_tokens) {
	jule::Ptr<_1d55b07a4_CoExpr> _56217_c = jule::new_ptr<_1d55b07a4_CoExpr>(_1d55b07a4_CoExpr{._field_token=_56139_tokens[0LL], });;
	_56139_tokens=_56139_tokens.slice(1LL);
	_56217_c.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _56139_tokens);
	return _56217_c;
}



inline jule::Ptr<_1d55b759c_GotoSt> _1d6b2979a_build_goto_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _57037_tokens) {
	jule::Ptr<_1d55b759c_GotoSt> _57117_gt = jule::new_ptr<_1d55b759c_GotoSt>(_1d55b759c_GotoSt{._field_token=_57037_tokens[0LL], });;
	if ((_57037_tokens.len() == 1LL)) {
		_1d6b243dd_push_err(&(*_self_), _57117_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57037_tokens.len() > 2LL)) {
		_1d6b243dd_push_err(&(*_self_), _57037_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1ee538d51_Token> _58017_ident_token = _57037_tokens[1LL];;
	if ((_58017_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b243dd_push_err(&(*_self_), _58017_ident_token,jule::Str("invalid syntax", 14));
		_1d6b2470c_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_label=_58017_ident_token;
	return _57117_gt;
}



inline jule::Ptr<_1d55b7888_FallSt> _1d6b29aa8_build_fall_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _59037_tokens) {
	jule::Ptr<_1d55b7888_FallSt> _59117_fll = jule::new_ptr<_1d55b7888_FallSt>(_1d55b7888_FallSt{._field_token=_59037_tokens[0LL]});;
	if ((_59037_tokens.len() > 1LL)) {
		_1d6b243dd_push_err(&(*_self_), _59037_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1d55c0dad_TypeAliasDecl> _1d6b29db6_build_type_alias_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _60043_tokens) {
	jule::Ptr<_1d55c0dad_TypeAliasDecl> _60117_tad = _1d6b41be1_build_type_alias_decl((*_self_)._field_p, _60043_tokens);;
	_60117_tad.get()._field_scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1d6b2a328_push_case_expr(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _60637_tokens, jule::Ptr<_1ee538d51_Token> _60659_token, jule::Bool _6079_type_match, jule::Slice<jule::Ptr<_1d55adbae_Expr>>& _60732_exprs) {
	if ((_60637_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_type_match) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1d55a968d_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1d6b418d3_build_type((*_self_)._field_p, _60637_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(jule::new_ptr<_1d55adbae_Expr>(_1d55adbae_Expr{._field_token=_60637_tokens[0LL], ._field_end=_60637_tokens[(_60637_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60637_tokens.len())) {
				_1d6b243dd_push_err(&(*_self_), _60637_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(_1d6b405e6_build_expr((*_self_)._field_p, _60637_tokens));;
}



inline jule::Slice<jule::Ptr<_1d55adbae_Expr>> _1d6b2a6d0_build_case_exprs(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _63040_tokens, jule::Bool _63058_type_match) {
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1d55adbae_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_brace_n = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63040_tokens;
		auto it = expr.begin();
		_iter_begin_1d92c423e:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1d92c5295:;
							{
								(_63317_brace_n)++;
							}
						}
						else {
							_case_begin_1d92c5570:;
							{
								(_63317_brace_n)--;
							}
						}
						_match_end_1d92c5361:;
					};
					goto _iter_next_1d92c423e;
				} else if ((_63317_brace_n != 0LL)) {
					goto _iter_next_1d92c423e;
				};
				{
					
					if (((_63521_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1d92c6263:;
						{
							jule::Slice<jule::Ptr<_1ee538d51_Token>> _65121_expr_tokens = _63040_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_expr_tokens.len() == 0LL)) {
								_1d6b243dd_push_err(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1d6b2a328_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1d92c62c9:;
						{
							_1d6b2a328_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							_63040_tokens=_63040_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1d92c5d01:;
				};
			}
			_iter_next_1d92c423e:;
			++it;
			_63514_i++;
			goto _iter_begin_1d92c423e;
		}
		_iter_end_1d92c423e:;
	};
	_1d6b243dd_push_err(&(*_self_), _63040_tokens[0LL],jule::Str("invalid syntax", 14));
	_63040_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b2a9dd_build_case_scope(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _66940_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1d6b225c8_skip_st(_67221_i,_66940_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1d92c9d38;
			};
			jule::Ptr<_1ee538d51_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1d92c9d38;
			};
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _68221_scope_tokens = _66940_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1d55b9a77_ScopeTree> _68321_scope = _1d6b2509d_build_scope(&(*_self_), _68221_scope_tokens,_66940_tokens[_67017_n]);;
			_66940_tokens=_66940_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1d92c9d38:;
	}
	_iter_end_1d92c9d38:;;
	jule::Ptr<_1ee538d51_Token> _68717_end = jule::Ptr<_1ee538d51_Token>();;
	if ((_66940_tokens.len() > 0LL)) {
		_68717_end=_66940_tokens[(_66940_tokens.len() - 1LL)];
	};
	jule::Ptr<_1d55b9a77_ScopeTree> _69117_scope = _1d6b2509d_build_scope(&(*_self_), _66940_tokens,_68717_end);;
	_66940_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1d55c1331_Case>,jule::Bool> _1d6b2ad95_build_case(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _69634_tokens, jule::Bool _69652_type_match) {
	jule::Ptr<_1d55c1331_Case> _69717_c = jule::new_ptr<_1d55c1331_Case>(_1d55c1331_Case{._field_token=_69634_tokens[0LL], });;
	_69634_tokens=_69634_tokens.slice(1LL);
	_69717_c.get()._field_exprs=_1d6b2a6d0_build_case_exprs(&(*_self_), _69634_tokens,_69652_type_match);
	_69717_c.get()._field_scope=_1d6b2a9dd_build_case_scope(&(*_self_), _69634_tokens);
	jule::Bool _70313_is_default = (_69717_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d55c1331_Case>>,jule::Ptr<_1d55c0264_Else>> _1d6b2b24c_build_cases(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _70734_tokens, jule::Bool _70752_type_match) {
	jule::Slice<jule::Ptr<_1d55c1331_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1d55c0264_Else> _70917_def = nullptr;;
	jule::Bool _71017_def_not_last = false;;
	while ((_70734_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ee538d51_Token> _71221_tok = _70734_tokens[0LL];;
			if (((_71221_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1d6b243dd_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1d92d2aee;
			};
			jule::Ptr<_1d55c1331_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1d6b2ad95_build_case(&(*_self_), _70734_tokens,_70752_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1d55c0264_Else>(_1d55c0264_Else{._field_token=_71722_c.get()._field_token, ._field_scope=_71722_c.get()._field_scope});
				} else {
					_1d6b243dd_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_def_not_last=(_71017_def_not_last || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1d92d2aee:;
	}
	_iter_end_1d92d2aee:;;
	if (_71017_def_not_last) {
		_1d6b243dd_push_err(&(*_self_), _70917_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1d55c1a07_MatchCase> _1d6b2b55a_build_match_case(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _74139_tokens) {
	jule::Ptr<_1d55c1a07_MatchCase> _74217_m = jule::new_ptr<_1d55c1a07_MatchCase>(_1d55c1a07_MatchCase{._field_token=_74139_tokens[0LL], });;
	_74139_tokens=_74139_tokens.slice(1LL);
	if (((_74139_tokens.len() > 0LL) && (_74139_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_type_match=true;
		_74139_tokens=_74139_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _75217_expr_tokens = _1d6b2ee21_get_block_expr(_74139_tokens);;
	if ((_75217_expr_tokens.len() > 0LL)) {
		_74217_m.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _75217_expr_tokens);
	} else if (_74217_m.get()._field_type_match) {
		_1d6b243dd_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _76017_block_toks = _1d6b3c714_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74139_tokens);;
	if ((_76017_block_toks == nullptr)) {
		_1d6b23882_stop(&(*_self_));
		_1d6b243dd_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("body is not exist", 17));
		_1d6b2470c_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74139_tokens.len())) {
		_1d6b243dd_push_err(&(*_self_), _74139_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_end=_74139_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_cases,_74217_m.get()._field_default) = _1d6b2b24c_build_cases(&(*_self_), _76017_block_toks,_74217_m.get()._field_type_match);
	return _74217_m;
}



inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b2b868_build_scope_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _77437_tokens) {
	jule::Bool _77517_is_unsafe = false;;
	jule::Bool _77617_is_deferred = false;;
	jule::Ptr<_1ee538d51_Token> _77717_token = _77437_tokens[0LL];;
	if ((_77717_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77517_is_unsafe=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1d6b243dd_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77437_tokens[0LL];
		if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77617_is_deferred=true;
			_77437_tokens=_77437_tokens.slice(1LL);
			if ((_77437_tokens.len() == 0LL)) {
				_1d6b243dd_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77617_is_deferred=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1d6b243dd_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _80417_scope_tokens = _1d6b3c714_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77437_tokens);;
	if ((_80417_scope_tokens == nullptr)) {
		_1d6b243dd_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77437_tokens.len())) {
		_1d6b243dd_push_err(&(*_self_), _77437_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1d55b9a77_ScopeTree> _81117_scope = _1d6b2509d_build_scope(&(*_self_), _80417_scope_tokens,_77437_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_unsafety=_77517_is_unsafe;
	_81117_scope.get()._field_deferred=_77617_is_deferred;
	return _81117_scope;
}



inline jule::Ptr<_1d55b71e5_LabelSt> _1d6b2bb76_build_label_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _81738_tokens) {
	jule::Ptr<_1d55b71e5_LabelSt> _81817_lbl = jule::new_ptr<_1d55b71e5_LabelSt>(_1d55b71e5_LabelSt{._field_token=_81738_tokens[0LL], ._field_ident=_81738_tokens[0LL].get()._field_kind});;
	if ((_81738_tokens.len() > 2LL)) {
		_81738_tokens=_81738_tokens.slice(2LL);
		_1d6b24982_insert_as_next(&(*_self_), _81738_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1d6b2be84_build_id_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _83235_tokens) {
	jule::Bool _83265_ok = jule::Bool();
	if ((_83235_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83265_ok);
	};
	jule::Ptr<_1ee538d51_Token> _83717_token = _83235_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1d92e8818:;
			{
				_83265_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1d6b2bb76_build_label_st(&(*_self_), _83235_tokens)),_83265_ok);
			}
		}
		_match_end_1d92e94c8:;
	};
	return std::make_tuple(jule::Any(),_83265_ok);
}



inline jule::Ptr<_1d6b3aed7_AssignInfo> _1d6b2c292_build_assign_info(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _84641_tokens) {
	jule::Ptr<_1d6b3aed7_AssignInfo> _84717_info = jule::new_ptr<_1d6b3aed7_AssignInfo>(_1d6b3aed7_AssignInfo{._field_ok=true});;
	jule::I64 _85017_brace_n = 0LL;;
	{
		auto &expr = _84641_tokens;
		auto it = expr.begin();
		_iter_begin_1d92eb343:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d92ec344:;
							{
								(_85017_brace_n)++;
							}
						}
						else {
							_case_begin_1d92ec61e:;
							{
								(_85017_brace_n)--;
							}
						}
						_match_end_1d92ec410:;
					};
				};
				{
					
					if ((_85017_brace_n > 0LL)) {
						_case_begin_1d92ecd06:;
						{
							goto _iter_next_1d92eb343;
						}
					}
					else if ((_85121_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1d92ecd6c:;
						{
							goto _iter_next_1d92eb343;
						}
					}
					else if ((!(_1ee53d938_is_assign_op(_85121_token.get()._field_kind)))) {
						_case_begin_1d92ecde4:;
						{
							goto _iter_next_1d92eb343;
						}
					}
					_match_end_1d92ecad6:;
				};
				_84717_info.get()._field_l=_84641_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84641_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1ee53d691_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1d92eb343;
				};
				_84717_info.get()._field_r=_84641_tokens.slice((_85114_i + 1LL));
				if (_1ee53d691_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1d6b243dd_push_err(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1d92eb343;
			}
			_iter_next_1d92eb343:;
			++it;
			_85114_i++;
			goto _iter_begin_1d92eb343;
		}
		_iter_end_1d92eb343:;
	};
	return _84717_info;
}



inline jule::Ptr<_1d55b7e93_AssignLeft> _1d6b2c5a0_build_assign_l(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _89438_tokens) {
	jule::Ptr<_1d55b7e93_AssignLeft> _89517_l = jule::new_ptr<_1d55b7e93_AssignLeft>(_1d55b7e93_AssignLeft{._field_token=_89438_tokens[0LL], });;
	if ((_89438_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_ident=_89517_l.get()._field_token.get()._field_kind;
	};
	_89517_l.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _89438_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1d55b7e93_AssignLeft>> _1d6b2c8ad_build_assign_ls(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>& _90739_parts) {
	jule::Slice<jule::Ptr<_1d55b7e93_AssignLeft>> _90817_lefts = nullptr;;
	{
		auto &expr = _90739_parts;
		auto it = expr.begin();
		_iter_begin_1d9304a55:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _90921_part = *it;
			{
				jule::Ptr<_1d55b7e93_AssignLeft> _91021_l = _1d6b2c5a0_build_assign_l(&(*_self_), _90921_part);;
				_90817_lefts = jule::alloc_for_append(_90817_lefts,1);_90817_lefts.__push(_91021_l);;
			}
			_iter_next_1d9304a55:;
			++it;
			goto _iter_begin_1d9304a55;
		}
		_iter_end_1d9304a55:;
	};
	return _90817_lefts;
}



inline std::tuple<jule::Ptr<_1d55b84d2_AssignSt>,jule::Bool> _1d6b2cbbb_build_plain_assign(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _91742_tokens) {
	jule::Ptr<_1d6b3aed7_AssignInfo> _91817_info = _1d6b2c292_build_assign_info(&(*_self_), _91742_tokens);;
	if ((!(_91817_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1d55b84d2_AssignSt> _92317_assign = jule::new_ptr<_1d55b84d2_AssignSt>(_1d55b84d2_AssignSt{._field_setter=_91817_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _92718_parts;;
	jule::Slice<_21868a483_Log> _92725_errs;;
	std::tie(_92718_parts,_92725_errs) = _1d6b3d308_parts(_91817_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92725_errs);
		return std::make_tuple(nullptr,false);
	};
	_92317_assign.get()._field_left=_1d6b2c8ad_build_assign_ls(&(*_self_), _92718_parts);
	if ((_91817_info.get()._field_r != nullptr)) {
		_92317_assign.get()._field_right=_1d6b405e6_build_expr((*_self_)._field_p, _91817_info.get()._field_r);
	};
	return std::make_tuple(_92317_assign,true);
}



inline std::tuple<jule::Ptr<_1d55b84d2_AssignSt>,jule::Bool> _1d6b2cec9_build_decl_assign(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _94140_tokens) {
	if ((_94140_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94140_tokens=_94140_tokens.slice(1LL);
	jule::Ptr<_1ee538d51_Token> _94717_token = _94140_tokens[0LL];;
	if (((_94717_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94717_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1d55b84d2_AssignSt> _95217_assign = jule::new_ptr<_1d55b84d2_AssignSt>(_1d55b84d2_AssignSt{._field_declarative=true, });;
	jule::I64 _95617_i = 0LL;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _95717_rang = _1d6b3c714_range(_95617_i,jule::Str("(", 1),jule::Str(")", 1),_94140_tokens);;
	if ((_95717_rang == nullptr)) {
		_1d6b243dd_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95617_i + 1LL) < _94140_tokens.len())) {
		_95217_assign.get()._field_setter=_94140_tokens[_95617_i];
		(_95617_i)++;
		jule::Slice<jule::Ptr<_1ee538d51_Token>> _96421_expr_tokens = _94140_tokens.slice(_95617_i);;
		_95217_assign.get()._field_right=_1d6b405e6_build_expr((*_self_)._field_p, _96421_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _96918_parts;;
	jule::Slice<_21868a483_Log> _96925_errs;;
	std::tie(_96918_parts,_96925_errs) = _1d6b3d308_parts(_95717_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96925_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96925_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96918_parts;
		auto it = expr.begin();
		_iter_begin_1d9310984:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _97521_part = *it;
			{
				jule::Bool _97621_is_mut = false;;
				jule::Bool _97721_is_ref = false;;
				_94717_token=_97521_part[0LL];
				if ((_94717_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97621_is_mut=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1d6b243dd_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1d9310984;
					};
				};
				if (((_97521_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97521_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97721_is_ref=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1d6b243dd_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1d9310984;
					};
				};
				if ((((_97521_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97521_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97521_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1d6b243dd_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1d9310984;
				};
				jule::Ptr<_1d55b7e93_AssignLeft> _100521_l = _1d6b2c5a0_build_assign_l(&(*_self_), _97521_part);;
				_100521_l.get()._field_mutable=_97621_is_mut;
				_100521_l.get()._field_reference=_97721_is_ref;
				_95217_assign.get()._field_left = jule::alloc_for_append(_95217_assign.get()._field_left,1);_95217_assign.get()._field_left.__push(_100521_l);;
			}
			_iter_next_1d9310984:;
			++it;
			goto _iter_begin_1d9310984;
		}
		_iter_end_1d9310984:;
	};
	return std::make_tuple(_95217_assign,true);
}



inline std::tuple<jule::Ptr<_1d55b84d2_AssignSt>,jule::Bool> _1d6b2d2d7_build_assign_st(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _101439_tokens) {
	jule::Ptr<_1d55b84d2_AssignSt> _101459_st = jule::Ptr<_1d55b84d2_AssignSt>();
	jule::Bool _101474_ok = jule::Bool();
	if ((!(_1d6b3b37d_check_assign_tokens(_101439_tokens)))) {
		_101459_st = nullptr;
		_101474_ok = false;
		return std::make_tuple(_101459_st,_101474_ok);
	};
	{
		auto &_match_expr{ _101439_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d9319790:;
			{
				std::tie(_101459_st,_101474_ok) = _1d6b2cec9_build_decl_assign(&(*_self_), _101439_tokens);
			}
		}
		else {
			_case_begin_1d9319383:;
			{
				std::tie(_101459_st,_101474_ok) = _1d6b2cbbb_build_plain_assign(&(*_self_), _101439_tokens);
			}
		}
		_match_end_1d931932d:;
	};
	return std::make_tuple(_101459_st,_101474_ok);
}



inline jule::Ptr<_1d55ae550_UseExpr> _1d6b2d5e5_build_use_expr(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _102938_tokens) {
	if ((_102938_tokens.len() == 1LL)) {
		_1d6b243dd_push_err(&(*_self_), _102938_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1d55ae550_UseExpr> _103517_ue = jule::new_ptr<_1d55ae550_UseExpr>(_1d55ae550_UseExpr{._field_token=_102938_tokens[0LL], });;
	_102938_tokens=_102938_tokens.slice(1LL);
	_103517_ue.get()._field_expr=_1d6b405e6_build_expr((*_self_)._field_p, _102938_tokens);
	return _103517_ue;
}



inline jule::Any _1d6b2d903_build_st(_1d6b23200_ScopeParser* _self_, jule::Ptr<_1d6b228c5_stmt>& _104432_st) {
	jule::Ptr<_1ee538d51_Token> _104517_token = _104432_st.get()._field_tokens[0LL];;
	if ((_104517_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104722_s;;
		jule::Bool _104725_ok;;
		std::tie(_104722_s,_104725_ok) = _1d6b2be84_build_id_st(&(*_self_), _104432_st.get()._field_tokens);
		if (_104725_ok) {
			return _104722_s;
		};
	};
	jule::Ptr<_1d55b84d2_AssignSt> _105318_s;;
	jule::Bool _105321_ok;;
	std::tie(_105318_s,_105321_ok) = _1d6b2d2d7_build_assign_st(&(*_self_), _104432_st.get()._field_tokens);
	if (_105321_ok) {
		return static_cast<jule::Any>(_105318_s);
	};
	{
		auto &_match_expr{ _104517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1d931ecb2:;
			{
				return static_cast<jule::Any>(_1d6b2d5e5_build_use_expr(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1d931ea2b:;
			{
				return static_cast<jule::Any>(_1d6b253ab_build_var_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1d931e773:;
			{
				return static_cast<jule::Any>(_1d6b256b9_build_ret_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1d931ed28:;
			{
				return static_cast<jule::Any>(_1d6b28139_build_iter_st(&(*_self_), _104432_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1d931ed8e:;
			{
				return static_cast<jule::Any>(_1d6b28447_build_break_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1d931ee05:;
			{
				return static_cast<jule::Any>(_1d6b28755_build_cont_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1d931ee6b:;
			{
				return static_cast<jule::Any>(_1d6b2917e_build_if_else_chain(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1d931eed2:;
			{
				return static_cast<jule::Any>(_1d6b2948c_build_co_call_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1d9320059:;
			{
				return static_cast<jule::Any>(_1d6b2979a_build_goto_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1d93200d1:;
			{
				return static_cast<jule::Any>(_1d6b29aa8_build_fall_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1d9320158:;
			{
				return static_cast<jule::Any>(_1d6b29db6_build_type_alias_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1d93201d0:;
			{
				return static_cast<jule::Any>(_1d6b2b55a_build_match_case(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1d9320257:;
			{
				return static_cast<jule::Any>(_1d6b2b868_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d93202ce:;
			{
				if ((_104517_token.get()._field_kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1d6b2b868_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
				};
			}
		}
		_match_end_1d931e8b6:;
	};
	jule::Ptr<_1d55adbae_Expr> _109417_expr = _1d6b405e6_build_expr((*_self_)._field_p, _104432_st.get()._field_tokens);;
	if ((_109417_expr != nullptr)) {
		return static_cast<jule::Any>(_109417_expr);
	};
	_1d6b243dd_push_err(&(*_self_), _104517_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1d6b2dc22_build(_1d6b23200_ScopeParser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _110229_tokens, jule::Ptr<_1d55b9a77_ScopeTree>& _110252_s) {
	if ((_110252_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1d6b22c6b_split_stmts(_110229_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110252_s;
	while (((!(_1d6b240be_is_last_st(&(*_self_)))) && (!(_1d6b23d5a_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1d6b228c5_stmt> _111121_st = _1d6b24be6_next(&(*_self_));;
			jule::Any _111221_data = _1d6b2d903_build_st(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1d55b946c_Stmt{._field_token=_111121_st.get()._field_tokens[0LL], ._field_data=_111221_data});;
			};
			if (_1d6b23ae6_stopped(&(*_self_))) {
				goto _iter_end_1d9328dcb;
			};
		}
	_iter_next_1d9328dcb:;
	}
	_iter_end_1d9328dcb:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6b23200_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6b2e7c2_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1d6b3151b_push_err(_1d6b30c57_ExprBuilder* _self_, jule::Ptr<_1ee538d51_Token> _21927_token, jule::Str _21942_fmt, jule::Slice<jule::Any> _21955_args) {
	_1d6b3eeb9_push_err((*_self_)._field_p.ptr(), _21927_token,_21942_fmt,jule::Any(_21955_args));
}



inline void _1d6b3183a_push_suggestion(_1d6b30c57_ExprBuilder* _self_, jule::Str _22434_fmt, jule::Slice<jule::Any> _22447_args) {
	_1d6b402d8_push_suggestion((*_self_)._field_p.ptr(), _22434_fmt,jule::Any(_22447_args));
}



inline jule::Ptr<_1d55ae83b_TupleExpr> _1d6b31b48_build_tuple(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>& _22835_parts) {
	jule::Ptr<_1d55ae83b_TupleExpr> _22917_tuple = jule::new_ptr<_1d55ae83b_TupleExpr>(_1d55ae83b_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_1d55adbae_Expr>>::alloc(0LL,_22835_parts.len())});;
	{
		auto &expr = _22835_parts;
		auto it = expr.begin();
		_iter_begin_1d9346b1e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _23221_part = *it;
			{
				_22917_tuple.get()._field_expr = jule::alloc_for_append(_22917_tuple.get()._field_expr,1);_22917_tuple.get()._field_expr.__push(_1d6b3a602_build_from_tokens(&(*_self_), _23221_part));;
			}
			_iter_next_1d9346b1e:;
			++it;
			goto _iter_begin_1d9346b1e;
		}
		_iter_end_1d9346b1e:;
	};
	return _22917_tuple;
}



inline jule::Ptr<_1d55aebe3_LitExpr> _1d6b31e56_build_lit(_1d6b30c57_ExprBuilder* _self_, jule::Ptr<_1ee538d51_Token> _23828_token) {
	return jule::new_ptr<_1d55aebe3_LitExpr>(_1d55aebe3_LitExpr{._field_token=_23828_token, ._field_value=_23828_token.get()._field_kind});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b32264_build_primitive_type(_1d6b30c57_ExprBuilder* _self_, jule::Ptr<_1ee538d51_Token>& _24540_token) {
	return _1d6b500d9_build_prim_type(_24540_token);
}



inline jule::Any _1d6b32572_build_single(_1d6b30c57_ExprBuilder* _self_, jule::Ptr<_1ee538d51_Token> _24935_token) {
	{
		auto &_match_expr{ _24935_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1d934889b:;
			{
				return static_cast<jule::Any>(_1d6b31e56_build_lit(&(*_self_), _24935_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d9348912:;
			{
				if ((_24935_token.get()._field_kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1d55b17d8_VariadicExpr>(_1d55b17d8_VariadicExpr{._field_token=_24935_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1d9348978:;
			{
				return static_cast<jule::Any>(_1d6b3077e_build_ident_expr(_24935_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d93489de:;
			{
				return static_cast<jule::Any>(_1d6b32264_build_primitive_type(&(*_self_), _24935_token));
			}
		}
		_match_end_1d9347834:;
	};
	_1d6b3151b_push_err(&(*_self_), _24935_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d55b0c27_IdentExpr> _1d6b32880_build_cpp_linked_ident(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _27046_tokens) {
	if ((_27046_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_27046_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1d6b3151b_push_err(&(*_self_), _27046_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ee538d51_Token> _27817_token = _27046_tokens[2LL];;
	if ((_27817_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3151b_push_err(&(*_self_), _27046_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55b0c27_IdentExpr> _28417_expr = _1d6b3077e_build_ident_expr(_27817_token);;
	_28417_expr.get()._field_cpp_linked=true;
	return _28417_expr;
}



inline jule::Ptr<_1d55b1431_UnaryExpr> _1d6b32b8d_build_unary(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _28934_tokens) {
	jule::Ptr<_1ee538d51_Token> _29017_op = _28934_tokens[0LL];;
	if ((_28934_tokens.len() == 1LL)) {
		_1d6b3151b_push_err(&(*_self_), _29017_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1ee53955a_is_unary_op(_29017_op.get()._field_kind)))) {
		_1d6b3151b_push_err(&(*_self_), _29017_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_29017_op.get()._field_kind)}));
		return nullptr;
	};
	_28934_tokens=_28934_tokens.slice(1LL);
	return jule::new_ptr<_1d55b1431_UnaryExpr>(_1d55b1431_UnaryExpr{._field_op=_29017_op, ._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _28934_tokens)});
}



inline jule::Ptr<_1d55b24ba_SubIdentExpr> _1d6b32e9b_build_obj_sub_ident(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _31042_tokens) {
	jule::I64 _31117_i = (_31042_tokens.len() - 1LL);;
	jule::Ptr<_1ee538d51_Token> _31217_ident_token = _31042_tokens[_31117_i];;
	(_31117_i)--;
	_31042_tokens=_31042_tokens.slice(0LL,_31117_i);
	if ((_31042_tokens.len() == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _31217_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d55b24ba_SubIdentExpr>(_1d55b24ba_SubIdentExpr{._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _31042_tokens), ._field_ident=_31217_ident_token});
}



inline jule::Ptr<_1d55b2047_NsSelectionExpr> _1d6b332a9_build_ns_sub_ident(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _32542_tokens) {
	jule::Ptr<_1d55b2047_NsSelectionExpr> _32617_ns = jule::new_ptr<_1d55b2047_NsSelectionExpr>(_1d55b2047_NsSelectionExpr{});;
	{
		auto &expr = _32542_tokens;
		auto it = expr.begin();
		_iter_begin_1d9354a0b:;
		if (it != expr.end()) {
			jule::I64 _32714_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _32721_token = *it;
			{
				if (((_32714_i & 1LL) == 0LL)) {
					if ((_32721_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_1d6b3151b_push_err(&(*_self_), _32721_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1d6b3183a_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32617_ns.get()._field_ns = jule::alloc_for_append(_32617_ns.get()._field_ns,1);_32617_ns.get()._field_ns.__push(_32721_token);;
				} else if ((_32721_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1d6b3151b_push_err(&(*_self_), _32721_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1d6b3183a_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1d9354a0b:;
			++it;
			_32714_i++;
			goto _iter_begin_1d9354a0b;
		}
		_iter_end_1d9354a0b:;
	};
	_32617_ns.get()._field_ident=_32617_ns.get()._field_ns[(_32617_ns.get()._field_ns.len() - 1LL)];
	_32617_ns.get()._field_ns=_32617_ns.get()._field_ns.slice(0LL,(_32617_ns.get()._field_ns.len() - 1LL));
	return _32617_ns;
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b335b7_build_type(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _34434_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Ptr<_1d55a968d_TypeDecl> _34618_t;;
	jule::Bool _34621_ok;;
	std::tie(_34618_t,_34621_ok) = _1d6b418d3_build_type((*_self_)._field_p, _34434_tokens,(&(_34517_i)),false);
	if ((!(_34621_ok))) {
		_1d6b3151b_push_err(&(*_self_), _34434_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34517_i < _34434_tokens.len())) {
		_1d6b3151b_push_err(&(*_self_), _34434_tokens[_34517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34618_t;
}



inline jule::Any _1d6b338c5_build_sub_ident(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _35839_tokens) {
	jule::I64 _35913_i = (_35839_tokens.len() - 2LL);;
	jule::Ptr<_1ee538d51_Token> _36013_token = _35839_tokens[_35913_i];;
	{
		auto &_match_expr{ _36013_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1d935c66d:;
			{
				return static_cast<jule::Any>(_1d6b32e9b_build_obj_sub_ident(&(*_self_), _35839_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1d935cb9b:;
			{
				return static_cast<jule::Any>(_1d6b332a9_build_ns_sub_ident(&(*_self_), _35839_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d935cc12:;
			{
				if ((_36013_token.get()._field_kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1d6b335b7_build_type(&(*_self_), _35839_tokens));
				};
			}
		}
		_match_end_1d935ca03:;
	};
	_1d6b3151b_push_err(&(*_self_), _36013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d55b17d8_VariadicExpr> _1d6b33bd3_build_variadic(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _37637_tokens) {
	jule::Ptr<_1ee538d51_Token> _37717_token = _37637_tokens[(_37637_tokens.len() - 1LL)];;
	_37637_tokens=_37637_tokens.slice(0LL,(_37637_tokens.len() - 1LL));
	return jule::new_ptr<_1d55b17d8_VariadicExpr>(_1d55b17d8_VariadicExpr{._field_token=_37717_token, ._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _37637_tokens)});
}



inline jule::Any _1d6b33ee1_build_op_right(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _38538_tokens) {
	jule::Ptr<_1ee538d51_Token> _38617_token = _38538_tokens[(_38538_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1d9361e03:;
			{
				_38538_tokens=_38538_tokens.slice(0LL,(_38538_tokens.len() - 1LL));
				jule::Any _39021_d = _1d6b39ed6_build(&(*_self_), _38538_tokens);;
				if ((_39021_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _39021_d };
					
					if (_match_expr.type_is<jule::Ptr<_1d55b3048_FnCallExpr>>()) {
						_case_begin_1d9363388:;
						{
							_39021_d.operator jule::Ptr<_1d55b3048_FnCallExpr>().get()._field_exception=jule::new_ptr<_1d55b9a77_ScopeTree>(_1d55b9a77_ScopeTree{._field_deferred=true, });
							return _39021_d;
						}
					}
					_match_end_1d9363201:;
				};
			}
		}
		_match_end_1d9361d59:;
	};
	_1d6b3151b_push_err(&(*_self_), _38617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d55ade9a_RangeExpr> _1d6b34321_build_between_parentheses(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _40648_tokens) {
	if ((_40648_tokens.len() == 2LL)) {
		_1d6b3151b_push_err(&(*_self_), _40648_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40648_tokens=_40648_tokens.slice(1LL,(_40648_tokens.len() - 1LL));
	return jule::new_ptr<_1d55ade9a_RangeExpr>(_1d55ade9a_RangeExpr{._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _40648_tokens)});
}



inline jule::Ptr<_1d55b1b90_CastExpr> _1d6b34640_try_build_cast(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _41838_tokens) {
	jule::I64 _41917_range_n = 0LL;;
	{
		auto &expr = _41838_tokens;
		auto it = expr.begin();
		_iter_begin_1d93669da:;
		if (it != expr.end()) {
			jule::I64 _42013_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _42016_token = *it;
			{
				if ((_42016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _42016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d93678ed:;
							{
								(_41917_range_n)++;
								goto _iter_next_1d93669da;
							}
						}
						else {
							_case_begin_1d9367bc8:;
							{
								(_41917_range_n)--;
							}
						}
						_match_end_1d93679b9:;
					};
				};
				if ((_41917_range_n > 0LL)) {
					goto _iter_next_1d93669da;
				} else if (((_42013_i + 1LL) == _41838_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1ee538d51_Token>> _43921_type_tokens = _41838_tokens.slice(0LL,(_42013_i + 1LL));;
				jule::Slice<jule::Ptr<_1ee538d51_Token>> _44021_expr_tokens = _41838_tokens.slice((_42013_i + 1LL));;
				if ((_44021_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1ee538d51_Token> _44717_tok = _44021_expr_tokens[0LL];;
				if (((_44717_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44717_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1d55b1b90_CastExpr> _45221_cast = jule::new_ptr<_1d55b1b90_CastExpr>(_1d55b1b90_CastExpr{});;
				if ((_44021_expr_tokens.len() == 2LL)) {
					_1d6b3151b_push_err(&(*_self_), _44021_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1d6b3183a_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43921_type_tokens.len() == 2LL)) {
					_1d6b3151b_push_err(&(*_self_), _43921_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1d6b3183a_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43921_type_tokens=_43921_type_tokens.slice(1LL,(_43921_type_tokens.len() - 1LL));
					jule::I64 _46625_type_index = 0LL;;
					jule::Ptr<_1d55a968d_TypeDecl> _46726_t;;
					jule::Bool _46729_ok;;
					std::tie(_46726_t,_46729_ok) = _1d6b418d3_build_type((*_self_)._field_p, _43921_type_tokens,(&(_46625_type_index)),true);
					if ((_46729_ok && (_46625_type_index < _43921_type_tokens.len()))) {
						_1d6b3151b_push_err(&(*_self_), _43921_type_tokens[_46625_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46729_ok))) {
						return _45221_cast;
					};
					_45221_cast.get()._field_kind=_46726_t;
					if ((_44021_expr_tokens.len() > 2LL)) {
						jule::I64 _47729_j = 0LL;;
						_1d6b3c714_range(_47729_j,jule::Str("(", 1),jule::Str(")", 1),_44021_expr_tokens);
						if ((_47729_j < _44021_expr_tokens.len())) {
							return nullptr;
						};
						_44021_expr_tokens=_44021_expr_tokens.slice(0LL,_47729_j);
						_45221_cast.get()._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _44021_expr_tokens);
					};
				};
				return _45221_cast;
			}
			_iter_next_1d93669da:;
			++it;
			_42013_i++;
			goto _iter_begin_1d93669da;
		}
		_iter_end_1d93669da:;
	};
	return nullptr;
}



inline void _1d6b34a08_push_arg(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1d55adbae_Expr>>& _49232_args, jule::Slice<jule::Ptr<_1ee538d51_Token>> _49251_tokens, jule::Ptr<_1ee538d51_Token> _49269_err_token) {
	if ((_49251_tokens.len() == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _49269_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49232_args = jule::alloc_for_append(_49232_args,1);_49232_args.__push(_1d6b3a602_build_from_tokens(&(*_self_), _49251_tokens));;
}



inline jule::Slice<jule::Ptr<_1d55adbae_Expr>> _1d6b34d16_build_args(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _50133_tokens) {
	if ((_50133_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _50717_args = nullptr;;
	jule::I64 _50817_last = 0LL;;
	jule::I64 _50917_range_n = 0LL;;
	_50133_tokens=_50133_tokens.slice(1LL,(_50133_tokens.len() - 1LL));
	{
		auto &expr = _50133_tokens;
		auto it = expr.begin();
		_iter_begin_1d9376049:;
		if (it != expr.end()) {
			jule::I64 _51113_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _51116_token = *it;
			{
				if ((_51116_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _51116_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d9376d3b:;
							{
								(_50917_range_n)++;
							}
						}
						else {
							_case_begin_1d9377116:;
							{
								(_50917_range_n)--;
							}
						}
						_match_end_1d9376e07:;
					};
				};
				if (((_50917_range_n > 0LL) || (_51116_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1d9376049;
				};
				_1d6b34a08_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last,_51113_i),_51116_token);
				_50817_last=static_cast<jule::I64>((_51113_i + 1LL));
			}
			_iter_next_1d9376049:;
			++it;
			_51113_i++;
			goto _iter_begin_1d9376049;
		}
		_iter_end_1d9376049:;
	};
	if ((_50817_last < _50133_tokens.len())) {
		if ((_50817_last == 0LL)) {
			if ((_50133_tokens.len() > 0LL)) {
				_1d6b34a08_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last),_50133_tokens[_50817_last]);
			};
		} else {
			_1d6b34a08_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last),_50133_tokens[(_50817_last - 1LL)]);
		};
	};
	return _50717_args;
}



inline jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _1d6b35124_build_call_generics(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _54342_tokens) {
	if ((_54342_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54342_tokens=_54342_tokens.slice(1LL,(_54342_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _54918_parts;;
	jule::Slice<_21868a483_Log> _54925_errs;;
	std::tie(_54918_parts,_54925_errs) = _1d6b3d308_parts(_54342_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _55017_generics = jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>::alloc(0LL,_54918_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54925_errs);
	{
		auto &expr = _54918_parts;
		auto it = expr.begin();
		_iter_begin_1d937a724:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _55221_part = *it;
			{
				if ((_55221_part.len() == 0LL)) {
					goto _iter_next_1d937a724;
				};
				jule::I64 _55621_j = 0LL;;
				jule::Ptr<_1d55a968d_TypeDecl> _55722_generic;;
				std::tie(_55722_generic,std::ignore) = _1d6b418d3_build_type((*_self_)._field_p, _55221_part,(&(_55621_j)),true);
				if ((_55621_j < _55221_part.len())) {
					_1d6b3151b_push_err(&(*_self_), _55221_part[_55621_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_55017_generics = jule::alloc_for_append(_55017_generics,1);_55017_generics.__push(_55722_generic);;
			}
			_iter_next_1d937a724:;
			++it;
			goto _iter_begin_1d937a724;
		}
		_iter_end_1d937a724:;
	};
	return _55017_generics;
}



inline jule::Ptr<_1d55b3048_FnCallExpr> _1d6b354cb_build_fn_call(_1d6b30c57_ExprBuilder* _self_, jule::Ptr<_1ee538d51_Token>& _56737_token, jule::Ptr<_1d6b2e7c2_CallData>& _56757_data) {
	return jule::new_ptr<_1d55b3048_FnCallExpr>(_1d55b3048_FnCallExpr{._field_token=_56737_token, ._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _56757_data.get()._field_expr_tokens), ._field_generics=_1d6b35124_build_call_generics(&(*_self_), _56757_data.get()._field_generics_tokens), ._field_args=_1d6b34d16_build_args(&(*_self_), _56757_data.get()._field_args_tokens), });
}



inline jule::Any _1d6b3580b_build_parentheses_range(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _57647_tokens) {
	jule::Ptr<_1ee538d51_Token> _57717_token = _57647_tokens[0LL];;
	{
		auto &_match_expr{ _57717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d9381bae:;
			{
				{
					auto &_match_expr{ _57717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1d9382451:;
						{
							jule::Ptr<_1d55b1b90_CastExpr> _58225_expr = _1d6b34640_try_build_cast(&(*_self_), _57647_tokens);;
							if ((_58225_expr != nullptr)) {
								return static_cast<jule::Any>(_58225_expr);
							};
						}
					}
					_match_end_1d9382286:;
				};
			}
		}
		_match_end_1d9381b15:;
	};
	jule::Ptr<_1d6b2e7c2_CallData> _58917_data = _1d6b2eb35_get_call_data(_57647_tokens);;
	if ((_58917_data.get()._field_expr_tokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1d6b34321_build_between_parentheses(&(*_self_), _58917_data.get()._field_args_tokens));
	};
	return static_cast<jule::Any>(_1d6b354cb_build_fn_call(&(*_self_), _57717_token,_58917_data));
}



inline jule::Ptr<_1d55b03ec_UnsafeExpr> _1d6b35b2a_build_unsafe_expr(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _60040_tokens) {
	jule::Ptr<_1ee538d51_Token> _60117_token = _60040_tokens[0LL];;
	_60040_tokens=_60040_tokens.slice(1LL);
	jule::I64 _60317_i = 0LL;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _60417_range_tokens = _1d6b3c714_range(_60317_i,jule::Str("{", 1),jule::Str("}", 1),_60040_tokens);;
	if ((_60417_range_tokens.len() == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _60040_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d55b03ec_UnsafeExpr>(_1d55b03ec_UnsafeExpr{._field_token=_60117_token, ._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _60417_range_tokens)});
}



inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b35e38_build_anon_fn(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _61537_tokens) {
	jule::Ptr<_1d55bb56d_FnDecl> _61617_f = _1d6b459d6_build_fn((*_self_)._field_p, _61537_tokens,false,false);;
	if ((!(_1d55bb8c0_is_anon(_61617_f.ptr())))) {
		_1d6b3151b_push_err(&(*_self_), _61617_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61617_f;
}



inline jule::Any _1d6b36246_build_unsafe(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _62436_tokens) {
	{
		auto &_match_expr{ _62436_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1d938891e:;
			{
				return static_cast<jule::Any>(_1d6b35e38_build_anon_fn(&(*_self_), _62436_tokens));
			}
		}
		else {
			_case_begin_1d9388e19:;
			{
				return static_cast<jule::Any>(_1d6b35b2a_build_unsafe_expr(&(*_self_), _62436_tokens));
			}
		}
		_match_end_1d9388d5e:;
	};
}



inline void _1d6b3660e_push_range_lit_part(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _63442_part, jule::Ptr<_1ee538d51_Token> _6359_error_token, jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>& _63535_parts) {
	if ((_63442_part.len() == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _6359_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63535_parts = jule::alloc_for_append(_63535_parts,1);_63535_parts.__push(_63442_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b3693e_get_brace_range_lit_expr_parts(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _64553_tokens) {
	if ((_64553_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _65117_parts = nullptr;;
	jule::I64 _65317_last = 0LL;;
	jule::I64 _65417_range_n = 0LL;;
	_64553_tokens=_64553_tokens.slice(1LL,(_64553_tokens.len() - 1LL));
	{
		auto &expr = _64553_tokens;
		auto it = expr.begin();
		_iter_begin_1d938d5d3:;
		if (it != expr.end()) {
			jule::I64 _65613_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _65616_token = *it;
			{
				if ((_65616_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _65616_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d938e3c5:;
							{
								(_65417_range_n)++;
							}
						}
						else {
							_case_begin_1d938e6a0:;
							{
								(_65417_range_n)--;
							}
						}
						_match_end_1d938e491:;
					};
				};
				if (((_65417_range_n > 0LL) || (_65616_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1d938d5d3;
				};
				_1d6b3660e_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last,_65613_i),_65616_token,_65117_parts);
				_65317_last=static_cast<jule::I64>((_65613_i + 1LL));
			}
			_iter_next_1d938d5d3:;
			++it;
			_65613_i++;
			goto _iter_begin_1d938d5d3;
		}
		_iter_end_1d938d5d3:;
	};
	if ((_65317_last < _64553_tokens.len())) {
		if ((_65317_last == 0LL)) {
			if ((_64553_tokens.len() > 0LL)) {
				_1d6b3660e_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last),_64553_tokens[_65317_last],_65117_parts);
			};
		} else {
			_1d6b3660e_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last),_64553_tokens[(_65317_last - 1LL)],_65117_parts);
		};
	};
	return _65117_parts;
}



inline jule::Ptr<_1d55b39c7_FieldExprPair> _1d6b36c5d_build_field_expr_pair(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _68744_tokens) {
	if (((_68744_tokens.len() - 2LL) == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _68744_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55b39c7_FieldExprPair> _69217_pair = jule::new_ptr<_1d55b39c7_FieldExprPair>(_1d55b39c7_FieldExprPair{._field_field=_68744_tokens[0LL], });;
	_68744_tokens=_68744_tokens.slice(2LL);
	_69217_pair.get()._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _68744_tokens);
	return _69217_pair;
}



inline jule::Ptr<_1d55adbae_Expr> _1d6b3706b_build_struct_lit_expr(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _70045_tokens) {
	jule::Ptr<_1ee538d51_Token> _70117_token = _70045_tokens[0LL];;
	if (((_70117_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_70045_tokens.len() > 1LL))) {
		_70117_token=_70045_tokens[1LL];
		if ((_70117_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1d55adbae_Expr>(_1d55adbae_Expr{._field_token=_70117_token, ._field_end=_70045_tokens[(_70045_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_1d6b36c5d_build_field_expr_pair(&(*_self_), _70045_tokens))});
		};
	};
	return _1d6b3a602_build_from_tokens(&(*_self_), _70045_tokens);
}



inline jule::Slice<jule::Ptr<_1d55adbae_Expr>> _1d6b37379_build_struct_lit_exprs(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _71546_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _71617_parts = _1d6b3693e_get_brace_range_lit_expr_parts(&(*_self_), _71546_tokens);;
	if ((_71617_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d55adbae_Expr>> _72117_pairs = jule::Slice<jule::Ptr<_1d55adbae_Expr>>::alloc(0LL,_71617_parts.len());;
	{
		auto &expr = _71617_parts;
		auto it = expr.begin();
		_iter_begin_1d9398e5c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _72221_part = *it;
			{
				_72117_pairs = jule::alloc_for_append(_72117_pairs,1);_72117_pairs.__push(_1d6b3706b_build_struct_lit_expr(&(*_self_), _72221_part));;
			}
			_iter_next_1d9398e5c:;
			++it;
			goto _iter_begin_1d9398e5c;
		}
		_iter_end_1d9398e5c:;
	};
	return _72117_pairs;
}



inline jule::Ptr<_1d55b4225_StructLit> _1d6b376a9_build_typed_struct_literal(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _72849_tokens) {
	jule::I64 _72917_i = 0LL;;
	jule::Ptr<_1d55a968d_TypeDecl> _73018_t;;
	jule::Bool _73021_ok;;
	std::tie(_73018_t,_73021_ok) = _1d6b418d3_build_type((*_self_)._field_p, _72849_tokens,(&(_72917_i)),true);
	if ((!(_73021_ok))) {
		return nullptr;
	} else if ((_72917_i >= _72849_tokens.len())) {
		_1d6b3151b_push_err(&(*_self_), _72849_tokens[_72917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72849_tokens=_72849_tokens.slice(_72917_i);
	jule::Ptr<_1ee538d51_Token> _73913_token = _72849_tokens[0LL];;
	if (((_73913_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_73913_token.get()._field_kind != jule::Str("{", 1)))) {
		_1d6b3151b_push_err(&(*_self_), _73913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d55b4225_StructLit>(_1d55b4225_StructLit{._field_end=_72849_tokens[(_72849_tokens.len() - 1LL)], ._field_kind=_73018_t, ._field_exprs=_1d6b37379_build_struct_lit_exprs(&(*_self_), _72849_tokens)});
}



inline jule::Ptr<_1d55adbae_Expr> _1d6b379c8_build_brace_lit_part(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _75244_tokens) {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _75318_l;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _75325_r;;
	std::tie(_75318_l,_75325_r) = _1d6b301b8_split_colon(_75244_tokens);
	if ((_75318_l != nullptr)) {
		return jule::new_ptr<_1d55adbae_Expr>(_1d55adbae_Expr{._field_token=_75244_tokens[0LL], ._field_end=_75244_tokens[(_75244_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55b51b0_KeyValPair>(_1d55b51b0_KeyValPair{._field_key=_1d6b3a602_build_from_tokens(&(*_self_), _75318_l), ._field_val=_1d6b3a602_build_from_tokens(&(*_self_), _75325_r), ._field_colon=_75244_tokens[_75318_l.len()]}))});
	};
	return _1d6b3a602_build_from_tokens(&(*_self_), _75244_tokens);
}



inline jule::Ptr<_1d55b4698_BraceLit> _1d6b37cd6_build_brace_lit(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _76939_tokens) {
	jule::Ptr<_1d55b4698_BraceLit> _77017_lit = jule::new_ptr<_1d55b4698_BraceLit>(_1d55b4698_BraceLit{._field_token=_76939_tokens[0LL], ._field_end=_76939_tokens[(_76939_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _77517_parts = _1d6b3693e_get_brace_range_lit_expr_parts(&(*_self_), _76939_tokens);;
	if ((_77517_parts == nullptr)) {
		return _77017_lit;
	};
	_77017_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1d55adbae_Expr>>::alloc(0LL,_77517_parts.len());
	{
		auto &expr = _77517_parts;
		auto it = expr.begin();
		_iter_begin_1d93a2e44:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _78121_part = *it;
			{
				_77017_lit.get()._field_exprs = jule::alloc_for_append(_77017_lit.get()._field_exprs,1);_77017_lit.get()._field_exprs.__push(_1d6b379c8_build_brace_lit_part(&(*_self_), _78121_part));;
			}
			_iter_next_1d93a2e44:;
			++it;
			goto _iter_begin_1d93a2e44;
		}
		_iter_end_1d93a2e44:;
	};
	return _77017_lit;
}



inline jule::Any _1d6b380e4_build_brace_range(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _78841_tokens) {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _78918_expr_tokens;;
	jule::I64 _78931_range_n;;
	std::tie(_78918_expr_tokens,_78931_range_n) = _1d6b30a26_get_range_expr_tokens(_78841_tokens);
	{
		
		if ((_78918_expr_tokens.len() == 0LL)) {
			_case_begin_1d93a473c:;
			{
				return static_cast<jule::Any>(_1d6b37cd6_build_brace_lit(&(*_self_), _78841_tokens));
			}
		}
		else if ((_78931_range_n > 0LL)) {
			_case_begin_1d93a47b4:;
			{
				_1d6b3151b_push_err(&(*_self_), _78841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d93a46a4:;
	};
	jule::Ptr<_1ee538d51_Token> _80013_else_token = _78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)];;
	if ((_78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_78918_expr_tokens=_78918_expr_tokens.slice(0LL,(_78918_expr_tokens.len() - 1LL));
		jule::Any _80321_d = _1d6b39ed6_build(&(*_self_), _78918_expr_tokens);;
		if ((_80321_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80321_d };
			
			if (_match_expr.type_is<jule::Ptr<_1d55b3048_FnCallExpr>>()) {
				_case_begin_1d93a7cc3:;
				{
					_78841_tokens=_78841_tokens.slice((_78918_expr_tokens.len() + 1LL));
					jule::I64 _81025_i = 0LL;;
					jule::Slice<jule::Ptr<_1ee538d51_Token>> _81125_range_tokens = _1d6b3c714_range(_81025_i,jule::Str("{", 1),jule::Str("}", 1),_78841_tokens);;
					jule::Ptr<_1d55b3048_FnCallExpr> _81225_model = _80321_d.operator jule::Ptr<_1d55b3048_FnCallExpr>();;
					if (_1d55b3620_ignored(_81225_model.ptr())) {
						_1d6b3151b_push_err(&(*_self_), _80013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1d6b3183a_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81225_model.get()._field_exception=_1d6b41031_build_scope((*_self_)._field_p, _81125_range_tokens,_78841_tokens[(_81025_i - 1LL)]);
					return _80321_d;
				}
			}
			else {
				_case_begin_1d93a781c:;
				{
					_1d6b3151b_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1d93a77a6:;
		};
	};
	{
		auto &_match_expr{ _78918_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1d93abc2d:;
			{
				return _1d6b36246_build_unsafe(&(*_self_), _78841_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1d93abc94:;
			{
				return static_cast<jule::Any>(_1d6b35e38_build_anon_fn(&(*_self_), _78841_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d93abd0a:;
			{
				return static_cast<jule::Any>(_1d6b376a9_build_typed_struct_literal(&(*_self_), _78841_tokens));
			}
		}
		else {
			_case_begin_1d93a7d39:;
			{
				_1d6b3151b_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d93a67c7:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b38402_get_enumerable_parts(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _84043_tokens) {
	_84043_tokens=_84043_tokens.slice(1LL,(_84043_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _84218_parts;;
	jule::Slice<_21868a483_Log> _84225_errors;;
	std::tie(_84218_parts,_84225_errors) = _1d6b3d308_parts(_84043_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84225_errors);
	return _84218_parts;
}



inline jule::Ptr<_1d55b5633_SliceExpr> _1d6b38710_build_slice(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _84734_tokens) {
	jule::Ptr<_1d55b5633_SliceExpr> _84817_slc = jule::new_ptr<_1d55b5633_SliceExpr>(_1d55b5633_SliceExpr{._field_token=_84734_tokens[0LL], ._field_end=_84734_tokens[(_84734_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _85317_parts = _1d6b38402_get_enumerable_parts(&(*_self_), _84734_tokens);;
	if ((_85317_parts.len() == 0LL)) {
		return _84817_slc;
	};
	_84817_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1d55adbae_Expr>>::alloc(0LL,_85317_parts.len());
	{
		auto &expr = _85317_parts;
		auto it = expr.begin();
		_iter_begin_1d93b25b3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _85921_p = *it;
			{
				if ((_85921_p.len() == 0LL)) {
					goto _iter_next_1d93b25b3;
				};
				_84817_slc.get()._field_exprs = jule::alloc_for_append(_84817_slc.get()._field_exprs,1);_84817_slc.get()._field_exprs.__push(_1d6b3a602_build_from_tokens(&(*_self_), _85921_p));;
			}
			_iter_next_1d93b25b3:;
			++it;
			goto _iter_begin_1d93b25b3;
		}
		_iter_end_1d93b25b3:;
	};
	return _84817_slc;
}



inline jule::Ptr<_1d55b5ec4_IndexingExpr> _1d6b38b61_build_indexing(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _86937_expr_tokens, jule::Slice<jule::Ptr<_1ee538d51_Token>> _87013_tokens, jule::Ptr<_1ee538d51_Token> _87035_error_token) {
	jule::Ptr<_1ee538d51_Token> _87117_end = _87013_tokens[(_87013_tokens.len() - 1LL)];;
	_87013_tokens=_87013_tokens.slice(1LL,(_87013_tokens.len() - 1LL));
	if ((_87013_tokens.len() == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _87035_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55adbae_Expr> _87717_expr = _1d6b3a602_build_from_tokens(&(*_self_), _86937_expr_tokens);;
	if ((_87717_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d55adbae_Expr> _88117_index = _1d6b3a602_build_from_tokens(&(*_self_), _87013_tokens);;
	if ((_88117_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d55b5ec4_IndexingExpr>(_1d55b5ec4_IndexingExpr{._field_token=_87035_error_token, ._field_end=_87117_end, ._field_expr=_87717_expr, ._field_index=_88117_index});
}



inline jule::Ptr<_1d55b65ce_SlicingExpr> _1d6b39205_build_slicing(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _89337_expr_tokens, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _89365_slicing_tokens, jule::I64& _89410_colon, jule::Ptr<_1ee538d51_Token>& _89427_error_token, jule::Ptr<_1ee538d51_Token> _89452_end) {
	jule::Ptr<_1d55b65ce_SlicingExpr> _89517_slc = jule::new_ptr<_1d55b65ce_SlicingExpr>(_1d55b65ce_SlicingExpr{._field_token=_89427_error_token, ._field_end=_89452_end, ._field_expr=_1d6b3a602_build_from_tokens(&(*_self_), _89337_expr_tokens), });;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _90117_start_expr_tokens = _89365_slicing_tokens.slice(0LL,_89410_colon);;
	if ((_90117_start_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_start=_1d6b3a602_build_from_tokens(&(*_self_), _90117_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _90617_to_expr_tokens = _89365_slicing_tokens.slice((_89410_colon + 1LL));;
	if ((_90617_to_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_to=_1d6b3a602_build_from_tokens(&(*_self_), _90617_to_expr_tokens);
	};
	return _89517_slc;
}



inline jule::Any _1d6b39513_build_bracket_range(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _91442_tokens) {
	jule::Ptr<_1ee538d51_Token> _91517_error_token = _91442_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _91618_expr_tokens;;
	jule::I64 _91631_range_n;;
	std::tie(_91618_expr_tokens,_91631_range_n) = _1d6b30a26_get_range_expr_tokens(_91442_tokens);
	{
		
		if ((_91618_expr_tokens.len() == 0LL)) {
			_case_begin_1d93bb567:;
			{
				return static_cast<jule::Any>(_1d6b38710_build_slice(&(*_self_), _91442_tokens));
			}
		}
		else if (((_91618_expr_tokens.len() == 0LL) || (_91631_range_n > 0LL))) {
			_case_begin_1d93bb5de:;
			{
				_1d6b3151b_push_err(&(*_self_), _91517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d93bb4ac:;
	};
	_91442_tokens=_91442_tokens.slice(_91618_expr_tokens.len());
	jule::I64 _93417_i = 0LL;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _93518_slicing_tokens;;
	jule::I64 _93534_colon;;
	std::tie(_93518_slicing_tokens,_93534_colon) = _1d6b5042a_split_map_range(_91442_tokens,_93417_i);
	if ((_93534_colon != -1LL)) {
		return static_cast<jule::Any>(_1d6b39205_build_slicing(&(*_self_), _91618_expr_tokens,_93518_slicing_tokens,_93534_colon,_91517_error_token,_91442_tokens[(_91442_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1d6b38b61_build_indexing(&(*_self_), _91618_expr_tokens,_91442_tokens,_91517_error_token));
}



inline jule::Any _1d6b39821_build_data(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _94234_tokens) {
	{
		auto _match_expr{ _94234_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1d93c025d:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1d93c02d5:;
			{
				return _1d6b32572_build_single(&(*_self_), _94234_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1d93c035c:;
			{
				if ((_94234_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return static_cast<jule::Any>(_1d6b32880_build_cpp_linked_ident(&(*_self_), _94234_tokens));
				};
			}
		}
		_match_end_1d93bed2e:;
	};
	jule::Ptr<_1ee538d51_Token> _95417_token = _94234_tokens[(_94234_tokens.len() - 1LL)];;
	if (((_95417_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_95417_token.get()._field_kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1d6b33bd3_build_variadic(&(*_self_), _94234_tokens));
	};
	_95417_token=_94234_tokens[0LL];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d93c36a1:;
			{
				if (((_94234_tokens.len() > 1LL) && (_95417_token.get()._field_kind == jule::Str("*", 1)))) {
					_95417_token=_94234_tokens[1LL];
					if (((_95417_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95417_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return static_cast<jule::Any>(_1d6b335b7_build_type(&(*_self_), _94234_tokens));
					};
				};
				return static_cast<jule::Any>(_1d6b32b8d_build_unary(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d93c3728:;
			{
				if ((_94234_tokens.len() < 3LL)) {
					goto _match_end_1d93c35c4;
				};
				if ((_94234_tokens.len() > 3LL)) {
					jule::Ptr<_1ee538d51_Token> _97621_t = _94234_tokens[(_94234_tokens.len() - 1LL)];;
					if (((_97621_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97621_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1d93c35c4;
					};
				};
				jule::Ptr<_1ee538d51_Token> _98217_next = _94234_tokens[1LL];;
				if (((_98217_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_98217_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1d93c35c4;
				};
				return static_cast<jule::Any>(_1d6b335b7_build_type(&(*_self_), _94234_tokens));
			}
		}
		_match_end_1d93c35c4:;
	};
	_95417_token=_94234_tokens[(_94234_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1d93c3be0:;
			{
				return _1d6b338c5_build_sub_ident(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d93c3c56:;
			{
				return static_cast<jule::Any>(_1d6b335b7_build_type(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d93c9355:;
			{
				return _1d6b33ee1_build_op_right(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d93c93bb:;
			{
				{
					auto &_match_expr{ _95417_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1d93cac19:;
						{
							return _1d6b3580b_build_parentheses_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1d93cacd5:;
						{
							return _1d6b380e4_build_brace_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1d93cad5c:;
						{
							return _1d6b39513_build_bracket_range(&(*_self_), _94234_tokens);
						}
					}
					_match_end_1d93ca70d:;
				};
			}
		}
		_match_end_1d93c3b8a:;
	};
	_1d6b3151b_push_err(&(*_self_), _95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d55b293d_BinopExpr> _1d6b39bc8_build_binop(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _101335_tokens, jule::I64 _101353_i) {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _101417_left_tokens = _101335_tokens.slice(0LL,_101353_i);;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _101517_right_tokens = _101335_tokens.slice((_101353_i + 1LL));;
	if ((_101417_left_tokens.len() == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _101335_tokens[_101353_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101517_right_tokens.len() == 0LL)) {
		_1d6b3151b_push_err(&(*_self_), _101335_tokens[_101353_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b3183a_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d55b293d_BinopExpr>(_1d55b293d_BinopExpr{._field_left=_1d6b3a602_build_from_tokens(&(*_self_), _101417_left_tokens), ._field_right=_1d6b3a602_build_from_tokens(&(*_self_), _101517_right_tokens), ._field_op=_101335_tokens[_101353_i]});
}



inline jule::Any _1d6b39ed6_build(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _103329_tokens) {
	jule::I64 _103413_i = _1d6b304d7_find_lowest_prec_op(_103329_tokens);;
	if ((_103413_i == -1LL)) {
		return _1d6b39821_build_data(&(*_self_), _103329_tokens);
	};
	return static_cast<jule::Any>(_1d6b39bc8_build_binop(&(*_self_), _103329_tokens,_103413_i));
}



inline jule::Any _1d6b3a2e4_build_kind(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _104134_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _104218_parts;;
	jule::Slice<_21868a483_Log> _104225_errors;;
	std::tie(_104218_parts,_104225_errors) = _1d6b3d308_parts(_104134_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104225_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104225_errors);
		return nullptr;
	} else if ((_104218_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1d6b31b48_build_tuple(&(*_self_), _104218_parts));
	};
	return _1d6b39ed6_build(&(*_self_), _104134_tokens);
}



inline jule::Ptr<_1d55adbae_Expr> _1d6b3a602_build_from_tokens(_1d6b30c57_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _105240_tokens) {
	if ((_105240_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1d55adbae_Expr>(_1d55adbae_Expr{._field_token=_105240_tokens[0LL], ._field_end=_105240_tokens[(_105240_tokens.len() - 1LL)], ._field_kind=_1d6b3a2e4_build_kind(&(*_self_), _105240_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1d6b30c57_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6b3aed7_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1d6b3e88c_stop(_1d6b3e55c_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1d6b3eb01_stopped(_1d6b3e55c_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1d6b3eeb9_push_err(_1d6b3e55c_Parser* _self_, jule::Ptr<_1ee538d51_Token> _28727_token, jule::Str _28742_fmt, jule::Slice<jule::Any> _28755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d6b3d98a_compiler_err(_28727_token,_28742_fmt,jule::Any(_28755_args)));;
}



inline void _1d6b402d8_push_suggestion(_1d6b3e55c_Parser* _self_, jule::Str _29234_fmt, jule::Slice<jule::Any> _29247_args) {
	{
		_1d6b3ddec_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29234_fmt,jule::Any(_29247_args));
	};
}



inline jule::Ptr<_1d55adbae_Expr> _1d6b405e6_build_expr(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _29635_tokens) {
	jule::Ptr<_1d6b30c57_ExprBuilder> _29717_ep = jule::new_ptr<_1d6b30c57_ExprBuilder>(_1d6b30c57_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_1d55adbae_Expr> _30017_expr = _1d6b3a602_build_from_tokens(_29717_ep.ptr(), _29635_tokens);;
	return _30017_expr;
}



inline jule::Ptr<_1d5575c86_Directive> _1d6b40904_build_directive(_1d6b3e55c_Parser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _30438_tokens) {
	if ((_30438_tokens.len() == 1LL)) {
		_1d6b3eeb9_push_err(&(*_self_), _30438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30438_tokens[1LL].get()._field_column != (_30438_tokens[0LL].get()._field_column + 1LL))) {
		_1d6b3eeb9_push_err(&(*_self_), _30438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d5575c86_Directive>(_1d5575c86_Directive{._field_tag=_30438_tokens[1LL], ._field_args=_30438_tokens.slice(2LL)});
}



inline void _1d6b40b79_push_directive(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d5575c86_Directive> _32137_d) {
	if ((_32137_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1d9414390:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _32716_pd = *it;
			{
				if ((_32137_d.get()._field_tag.get()._field_kind == _32716_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1d9414390:;
			++it;
			goto _iter_begin_1d9414390;
		}
		_iter_end_1d9414390:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_32137_d);;
}



inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b41031_build_scope(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _33536_tokens, jule::Ptr<_1ee538d51_Token> _33558_end) {
	jule::Ptr<_1d55b9a77_ScopeTree> _33617_s = _1d6b21770_new_scope();;
	_33617_s.get()._field_end=_33558_end;
	_1d6b23200_ScopeParser _33817_sp = _1d6b23200_ScopeParser{._field_p=_self_, };;
	_1d6b2dc22_build(&_33817_sp, _33536_tokens,_33617_s);
	return _33617_s;
}



inline std::tuple<jule::Ptr<_1d55a968d_TypeDecl>,jule::Bool> _1d6b41482___build_type(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _34544_tokens, jule::I64* _34613_i, jule::Bool _34622_err) {
	_1d6b50936_TypeBuilder _34717_tb = _1d6b50936_TypeBuilder{._field_p=_self_, ._field_tokens=_34544_tokens, ._field_i=_34613_i, ._field_err=_34622_err};;
	jule::Ptr<_1d55a968d_TypeDecl> _35318_decl;;
	jule::Bool _35324_ok;;
	std::tie(_35318_decl,_35324_ok) = _1d6b53ce1_build(&_34717_tb);
	return std::make_tuple(_35318_decl,_35324_ok);
}



inline std::tuple<jule::Ptr<_1d55a968d_TypeDecl>,jule::Bool> _1d6b418d3_build_type(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _35842_tokens, jule::I64* _35913_i, jule::Bool _35922_err) {
	jule::Ptr<_1ee538d51_Token> _36013_token = _35842_tokens[(*(_35913_i))];;
	jule::Ptr<_1d55a968d_TypeDecl> _36118_t;;
	jule::Bool _36121_ok;;
	std::tie(_36118_t,_36121_ok) = _1d6b41482___build_type(_self_, _35842_tokens,_35913_i,_35922_err);
	if ((_35922_err && (!(_36121_ok)))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _36013_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_36118_t,_36121_ok);
}



inline jule::Ptr<_1d55c0dad_TypeAliasDecl> _1d6b41be1_build_type_alias_decl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _36846_tokens) {
	jule::I64 _36917_i = 1LL;;
	if ((_36917_i >= _36846_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55c0dad_TypeAliasDecl> _37417_tad = jule::new_ptr<_1d55c0dad_TypeAliasDecl>(_1d55c0dad_TypeAliasDecl{._field_token=_36846_tokens[1LL], ._field_ident=_36846_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_1ee538d51_Token> _37817_token = _36846_tokens[_36917_i];;
	if ((_37817_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _37817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36917_i)++;
	if ((_36917_i >= _36846_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	_37817_token=_36846_tokens[_36917_i];
	if ((_37817_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	(_36917_i)++;
	if ((_36917_i >= _36846_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	jule::Ptr<_1d55a968d_TypeDecl> _39918_t;;
	jule::Bool _39921_ok;;
	std::tie(_39918_t,_39921_ok) = _1d6b418d3_build_type(_self_, _36846_tokens,(&(_36917_i)),true);
	_37417_tad.get()._field_kind=_39918_t;
	if ((_39921_ok && (_36917_i < _36846_tokens.len()))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _36846_tokens[_36917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _37417_tad;
}



inline void _1d6b42032_build_var_type_and_expr(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Ptr<_1d55bc54c_VarDecl>& _40748_v, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _40766_tokens) {
	jule::I64 _40817_i = 0LL;;
	jule::Ptr<_1ee538d51_Token> _40917_tok = _40766_tokens[_40817_i];;
	if ((_40917_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_40817_i)++;
		if (((_40817_i >= _40766_tokens.len()) || ((_40766_tokens[_40817_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_40766_tokens[_40817_i].get()._field_kind == jule::Str("=", 1))))) {
			_1d6b3eeb9_push_err(_self_.ptr(), _40917_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1d55a968d_TypeDecl> _41722_t;;
		jule::Bool _41725_ok;;
		std::tie(_41722_t,_41725_ok) = _1d6b418d3_build_type(_self_, _40766_tokens,(&(_40817_i)),true);
		if (_41725_ok) {
			_40748_v.get()._field_kind=_41722_t;
			if ((_40817_i >= _40766_tokens.len())) {
				return;;
			};
			_40917_tok=_40766_tokens[_40817_i];
		};
	};
	if ((_40917_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_40917_tok.get()._field_kind != jule::Str("=", 1))) {
			_1d6b3eeb9_push_err(_self_.ptr(), _40917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1ee538d51_Token>> _43221_expr_tokens = _40766_tokens.slice((_40817_i + 1LL));;
		if ((_43221_expr_tokens.len() == 0LL)) {
			_1d6b3eeb9_push_err(_self_.ptr(), _40917_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40748_v.get()._field_expr=_1d6b405e6_build_expr(_self_, _43221_expr_tokens);
	} else {
		_1d6b3eeb9_push_err(_self_.ptr(), _40917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d6b422da_build_var_common(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Ptr<_1d55bc54c_VarDecl>& _44341_v, jule::Slice<jule::Ptr<_1ee538d51_Token>> _44358_tokens) {
	_44341_v.get()._field_token=_44358_tokens[0LL];
	if ((_44341_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _44341_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_44341_v.get()._field_ident=_44341_v.get()._field_token.get()._field_kind;
	_44341_v.get()._field_kind=nullptr;
	if ((_44358_tokens.len() > 1LL)) {
		_44358_tokens=_44358_tokens.slice(1LL);
		_1d6b42032_build_var_type_and_expr(_self_, _44341_v,_44358_tokens);
	};
}



inline void _1d6b426a3_build_var_begin(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55bc54c_VarDecl>& _45839_v, jule::I64& _45857_i, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _45866_tokens) {
	jule::Ptr<_1ee538d51_Token> _45913_tok = _45866_tokens[_45857_i];;
	{
		auto &_match_expr{ _45913_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1d942de59:;
			{
				_45839_v.get()._field_statically=true;
				goto _case_begin_1d942dec0;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d942dec0:;
			{
				(_45857_i)++;
				if ((_45857_i >= _45866_tokens.len())) {
					_1d6b3eeb9_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45866_tokens[_45857_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_45839_v.get()._field_mutable=true;
					(_45857_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1d942d662:;
			{
				(_45857_i)++;
				_45839_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1d942d596:;
			{
				_1d6b3eeb9_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1d942d3ed:;
	};
	if ((_45857_i >= _45866_tokens.len())) {
		_1d6b3eeb9_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b429b1_build_var(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _48833_tokens) {
	jule::I64 _48917_i = 0LL;;
	jule::Ptr<_1d55bc54c_VarDecl> _49017_v = jule::new_ptr<_1d55bc54c_VarDecl>(_1d55bc54c_VarDecl{._field_token=_48833_tokens[0LL], });;
	_1d6b426a3_build_var_begin(_self_.ptr(), _49017_v,_48917_i,_48833_tokens);
	if ((_48917_i >= _48833_tokens.len())) {
		return nullptr;
	};
	_48833_tokens=_48833_tokens.slice(_48917_i);
	if (((_48833_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_48833_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_49017_v.get()._field_reference=true;
		if ((_48833_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48833_tokens=_48833_tokens.slice(1LL);
	};
	_1d6b422da_build_var_common(_self_, _49017_v,_48833_tokens);
	return _49017_v;
}



inline jule::Ptr<_1d55b6d3d_GenericDecl> _1d6b42cbe_build_generic(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _51038_tokens) {
	jule::Ptr<_1d55b6d3d_GenericDecl> _51117_g = jule::new_ptr<_1d55b6d3d_GenericDecl>(_1d55b6d3d_GenericDecl{._field_token=_51038_tokens[0LL], });;
	if ((_51117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _51117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_51117_g.get()._field_ident=_51117_g.get()._field_token.get()._field_kind;
	if ((_51038_tokens.len() > 1LL)) {
		if ((_51038_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
			_1d6b3eeb9_push_err(_self_.ptr(), _51038_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_51038_tokens.len() == 2LL)) {
			_1d6b3eeb9_push_err(_self_.ptr(), _51038_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1ee538d51_Token>> _52821_constraint_tokens = _51038_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _52922_parts;;
		jule::Slice<_21868a483_Log> _52929_errors;;
		std::tie(_52922_parts,_52929_errors) = _1d6b3ce1d_parts_kind(_52821_constraint_tokens,jule::Str("|", 1),true);
		if ((_52929_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52929_errors);
			return nullptr;
		};
		_51117_g.get()._field_constraint=jule::new_ptr<_1d55b68ba_Constraint>(_1d55b68ba_Constraint{._field_mask=jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>::alloc(0LL,_52922_parts.len())});
		{
			auto &expr = _52922_parts;
			auto it = expr.begin();
			_iter_begin_1d943a718:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1ee538d51_Token>> _53525_part = *it;
				{
					jule::I64 _53625_i = 0LL;;
					jule::Ptr<_1d55a968d_TypeDecl> _53726_kind;;
					std::tie(_53726_kind,std::ignore) = _1d6b418d3_build_type(_self_, _53525_part,(&(_53625_i)),true);
					_51117_g.get()._field_constraint.get()._field_mask = jule::alloc_for_append(_51117_g.get()._field_constraint.get()._field_mask,1);_51117_g.get()._field_constraint.get()._field_mask.__push(_53726_kind);;
					if ((_53625_i < _53525_part.len())) {
						_1d6b3eeb9_push_err(_self_.ptr(), _53525_part[_53625_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1d943a718:;
				++it;
				goto _iter_begin_1d943a718;
			}
			_iter_end_1d943a718:;
		};
	};
	return _51117_g;
}



inline jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _1d6b43176_build_generics(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _54739_tokens, jule::Ptr<_1ee538d51_Token>& _54758_error_token) {
	if ((_54739_tokens.len() == 0LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _54758_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _55318_parts;;
	jule::Slice<_21868a483_Log> _55325_errors;;
	std::tie(_55318_parts,_55325_errors) = _1d6b3d308_parts(_54739_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_55325_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_55325_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>> _55917_generics = jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>::alloc(0LL,_55318_parts.len());;
	{
		auto &expr = _55318_parts;
		auto it = expr.begin();
		_iter_begin_1d9440d28:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _56021_part = *it;
			{
				_55917_generics = jule::alloc_for_append(_55917_generics,1);_55917_generics.__push(_1d6b42cbe_build_generic(_self_, _56021_part));;
			}
			_iter_next_1d9440d28:;
			++it;
			goto _iter_begin_1d9440d28;
		}
		_iter_end_1d9440d28:;
	};
	return _55917_generics;
}



inline jule::Ptr<_1d55ba24d_ParamDecl> _1d6b43484_build_self_param(_1d6b3e55c_Parser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _56739_tokens) {
	if ((_56739_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1d55ba24d_ParamDecl> _57217_param = jule::new_ptr<_1d55ba24d_ParamDecl>();;
	jule::I64 _57517_i = 0LL;;
	if ((_56739_tokens[_57517_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_57217_param.get()._field_mutable=true;
		(_57517_i)++;
		if ((_57517_i >= _56739_tokens.len())) {
			_1d6b3eeb9_push_err(&(*_self_), _56739_tokens[(_57517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56739_tokens[_57517_i].get()._field_kind == jule::Str("&", 1))) {
		_57217_param.get()._field_ident=jule::Str("&", 1);
		(_57517_i)++;
		if ((_57517_i >= _56739_tokens.len())) {
			_1d6b3eeb9_push_err(&(*_self_), _56739_tokens[(_57517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56739_tokens[_57517_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_57217_param.get()._field_ident+=jule::Str("self", 4);
		_57217_param.get()._field_token=_56739_tokens[_57517_i];
		(_57517_i)++;
		if ((_57517_i < _56739_tokens.len())) {
			_1d6b3eeb9_push_err(&(*_self_), _56739_tokens[_57517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _57217_param;
}



inline void _1d6b4384c_param_type_begin(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55ba24d_ParamDecl>& _60640_param, jule::I64& _60664_i, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _60673_tokens) {
	for (; (_60664_i < _60673_tokens.len()); (_60664_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _60817_token = _60673_tokens[_60664_i];;
			if ((_60817_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60817_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60640_param.get()._field_variadic) {
				_1d6b3eeb9_push_err(&(*_self_), _60817_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1d9447846;
			};
			_60640_param.get()._field_variadic=true;
		}
	_iter_next_1d9447846:;
	}
	_iter_end_1d9447846:;;
}



inline void _1d6b43b6b_build_param_type(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Ptr<_1d55ba24d_ParamDecl>& _62341_param, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _62365_tokens) {
	jule::I64 _62417_i = 0LL;;
	_1d6b4384c_param_type_begin(_self_.ptr(), _62341_param,_62417_i,_62365_tokens);
	if ((_62417_i >= _62365_tokens.len())) {
		return;;
	};
	std::tie(_62341_param.get()._field_kind,std::ignore) = _1d6b418d3_build_type(_self_, _62365_tokens,(&(_62417_i)),true);
	if ((_62417_i < _62365_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _62365_tokens[_62417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d6b43e8a_build_param_body(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Ptr<_1d55ba24d_ParamDecl>& _63641_param, jule::Slice<jule::Ptr<_1ee538d51_Token>> _63664_tokens) {
	jule::Ptr<_1ee538d51_Token> _63717_tok = _63664_tokens[0LL];;
	_63641_param.get()._field_ident=_63717_tok.get()._field_kind;
	if ((_63664_tokens.len() == 1LL)) {
		return;;
	} else if ((_63664_tokens.len() < 3LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _63717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63664_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1d6b43b6b_build_param_type(_self_, _63641_param,_63664_tokens);
		return;;
	};
	_63664_tokens=_63664_tokens.slice(2LL);
	_1d6b43b6b_build_param_type(_self_, _63641_param,_63664_tokens);
}



inline jule::Ptr<_1d55ba24d_ParamDecl> _1d6b44298_build_param(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _65435_tokens) {
	jule::Ptr<_1d55ba24d_ParamDecl> _65517_param = jule::new_ptr<_1d55ba24d_ParamDecl>(_1d55ba24d_ParamDecl{._field_token=_65435_tokens[0LL], });;
	if ((_65517_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_65517_param.get()._field_mutable=true;
		if ((_65435_tokens.len() == 1LL)) {
			_1d6b3eeb9_push_err(_self_.ptr(), _65435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_65435_tokens=_65435_tokens.slice(1LL);
		_65517_param.get()._field_token=_65435_tokens[0LL];
	};
	if ((_65435_tokens.len() >= 3LL)) {
		if (((_65517_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_65517_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_65435_tokens.len() == 1LL)) {
				_1d6b3eeb9_push_err(_self_.ptr(), _65435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_65435_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_65435_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_65517_param.get()._field_reference=true;
				_65435_tokens=_65435_tokens.slice(1LL);
				_65517_param.get()._field_token=_65435_tokens[0LL];
			};
		};
	};
	if ((_65517_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_65517_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1d6b43b6b_build_param_type(_self_, _65517_param,_65435_tokens);
	} else {
		_1d6b43e8a_build_param_body(_self_, _65517_param,_65435_tokens);
	};
	return _65517_param;
}



inline void _1d6b4451d_check_params(_1d6b3e55c_Parser* _self_, jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>>& _69736_params) {
	{
		auto &expr = _69736_params;
		auto it = expr.begin();
		_iter_begin_1d9456db6:;
		if (it != expr.end()) {
			jule::Ptr<_1d55ba24d_ParamDecl> _69821_param = *it;
			{
				if ((_1d55ba5b1_is_self(_69821_param.ptr()) || (_69821_param.get()._field_kind != nullptr))) {
					goto _iter_next_1d9456db6;
				};
				if ((_69821_param.get()._field_token == nullptr)) {
					_1d6b3eeb9_push_err(&(*_self_), _69821_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69821_param.get()._field_kind=jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_69821_param.get()._field_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_69821_param.get()._field_token, ._field_ident=_69821_param.get()._field_token.get()._field_kind, }))});
					_69821_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1d9456db6:;
			++it;
			goto _iter_begin_1d9456db6;
		}
		_iter_end_1d9456db6:;
	};
}



inline jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>> _1d6b448c5_build_params(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _71737_tokens, jule::Bool _71755_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _71818_parts;;
	jule::Slice<_21868a483_Log> _71825_errs;;
	std::tie(_71818_parts,_71825_errs) = _1d6b3d308_parts(_71737_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71825_errs);
	if ((_71818_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>> _72417_params = nullptr;;
	if ((_71755_method && (_71818_parts.len() > 0LL))) {
		jule::Ptr<_1d55ba24d_ParamDecl> _72621_param = _1d6b43484_build_self_param(_self_.ptr(), _71818_parts[0LL]);;
		if (((_72621_param != nullptr) && _1d55ba5b1_is_self(_72621_param.ptr()))) {
			_72417_params = jule::alloc_for_append(_72417_params,1);_72417_params.__push(_72621_param);;
			_71818_parts=_71818_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71818_parts;
		auto it = expr.begin();
		_iter_begin_1d945b65c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _73321_part = *it;
			{
				jule::Ptr<_1d55ba24d_ParamDecl> _73421_param = _1d6b44298_build_param(_self_, _73321_part);;
				if ((_73421_param != nullptr)) {
					_72417_params = jule::alloc_for_append(_72417_params,1);_72417_params.__push(_73421_param);;
				};
			}
			_iter_next_1d945b65c:;
			++it;
			goto _iter_begin_1d945b65c;
		}
		_iter_end_1d945b65c:;
	};
	_1d6b4451d_check_params(_self_.ptr(), _72417_params);
	return _72417_params;
}



inline std::tuple<jule::Ptr<_1d55ac7a1_RetTypeDecl>,jule::Bool> _1d6b44c7c_build_multi_ret_type(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _74445_tokens, jule::I64& _74468_i) {
	jule::Ptr<_1d55ac7a1_RetTypeDecl> _74478_t = jule::Ptr<_1d55ac7a1_RetTypeDecl>();
	jule::Bool _74495_ok = jule::Bool();
	_74478_t=jule::new_ptr<_1d55ac7a1_RetTypeDecl>();
	(_74468_i)++;
	if ((_74468_i >= _74445_tokens.len())) {
		(_74468_i)--;
		std::tie(_74478_t.get()._field_kind,_74495_ok) = _1d6b418d3_build_type(_self_, _74445_tokens,(&(_74468_i)),false);
		return std::make_tuple(_74478_t,_74495_ok);
	};
	(_74468_i)--;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _75417_range_tokens = _1d6b3c714_range(_74468_i,jule::Str("(", 1),jule::Str(")", 1),_74445_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _75618_parts;;
	jule::Slice<_21868a483_Log> _75625_errs;;
	std::tie(_75618_parts,_75625_errs) = _1d6b3d308_parts(_75417_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75625_errs);
	if ((_75618_parts.len() == 0LL)) {
		return std::make_tuple(_74478_t,_74495_ok);
	};
	jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _76217_types = jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>::alloc(0LL,_75618_parts.len());;
	_74478_t.get()._field_idents=jule::Slice<jule::Ptr<_1ee538d51_Token>>::alloc(0LL,_75618_parts.len());
	{
		auto &expr = _75618_parts;
		auto it = expr.begin();
		_iter_begin_1d9462d4a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _76421_part = *it;
			{
				jule::Ptr<_1ee538d51_Token> _76521_token = _76421_part[0LL];;
				jule::I64 _76621_offset = 0LL;;
				if ((_76421_part.len() > 1LL)) {
					_76521_token=_76421_part[1LL];
					if ((_76521_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_76621_offset=2LL;
						if ((_76421_part.len() < 3LL)) {
							_1d6b3eeb9_push_err(_self_.ptr(), _76521_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1d9462d4a;
						};
					};
				};
				_76521_token=_76421_part[0LL];
				if ((_76621_offset != 2LL)) {
					jule::Ptr<_1ee538d51_Token> _78225_new_token = jule::new_ptr<_1ee538d51_Token>((*(_76521_token)));;
					_78225_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_74478_t.get()._field_idents = jule::alloc_for_append(_74478_t.get()._field_idents,1);_74478_t.get()._field_idents.__push(_78225_new_token);;
				} else {
					_74478_t.get()._field_idents = jule::alloc_for_append(_74478_t.get()._field_idents,1);_74478_t.get()._field_idents.__push(_76521_token);;
				};
				jule::Ptr<_1d55a968d_TypeDecl> _78922_tk;;
				std::tie(_78922_tk,std::ignore) = _1d6b418d3_build_type(_self_, _76421_part,(&(_76621_offset)),true);
				if ((_76621_offset < _76421_part.len())) {
					_1d6b3eeb9_push_err(_self_.ptr(), _76421_part[_76621_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_76217_types = jule::alloc_for_append(_76217_types,1);_76217_types.__push(_78922_tk);;
			}
			_iter_next_1d9462d4a:;
			++it;
			goto _iter_begin_1d9462d4a;
		}
		_iter_end_1d9462d4a:;
	};
	if ((_76217_types.len() > 1LL)) {
		_74478_t.get()._field_kind=jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_74445_tokens[0LL], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55ab22d_TupleTypeDecl>(_1d55ab22d_TupleTypeDecl{._field_types=_76217_types}))});
	} else {
		_74478_t.get()._field_kind=_76217_types[0LL];
	};
	_74495_ok=true;
	return std::make_tuple(_74478_t,_74495_ok);
}



inline std::tuple<jule::Ptr<_1d55ac7a1_RetTypeDecl>,jule::Bool> _1d6b45134_build_ret_type(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _81239_tokens, jule::I64& _81262_i) {
	jule::Ptr<_1d55ac7a1_RetTypeDecl> _81272_t = jule::Ptr<_1d55ac7a1_RetTypeDecl>();
	jule::Bool _81289_ok = jule::Bool();
	_81272_t=jule::new_ptr<_1d55ac7a1_RetTypeDecl>();
	if ((_81262_i >= _81239_tokens.len())) {
		return std::make_tuple(_81272_t,_81289_ok);
	};
	jule::Ptr<_1ee538d51_Token> _81817_token = _81239_tokens[_81262_i];;
	{
		auto &_match_expr{ _81817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d946b859:;
			{
				if ((_81817_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_81272_t,_81289_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d946b8c0:;
			{
				if ((_81817_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_81272_t,_81289_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1d946b936:;
			{
				if (((_81262_i + 1LL) >= _81239_tokens.len())) {
					_1d6b3eeb9_push_err(_self_.ptr(), _81817_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_81272_t,_81289_ok);
				};
				(_81262_i)++;
				_81817_token=_81239_tokens[_81262_i];
				if ((_81817_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81817_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1d946e472:;
							{
								std::tie(_81272_t,_81289_ok) = _1d6b44c7c_build_multi_ret_type(_self_, _81239_tokens,_81262_i);
								return std::make_tuple(_81272_t,_81289_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1d946e4d8:;
							{
								_1d6b3eeb9_push_err(_self_.ptr(), _81817_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_81272_t,_81289_ok);
							}
						}
						_match_end_1d946e274:;
					};
				};
				std::tie(_81272_t.get()._field_kind,_81289_ok) = _1d6b418d3_build_type(_self_, _81239_tokens,(&(_81262_i)),true);
				return std::make_tuple(_81272_t,_81289_ok);
			}
		}
		_match_end_1d946b79e:;
	};
	(_81262_i)++;
	_1d6b3eeb9_push_err(_self_.ptr(), _81817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_81272_t,_81289_ok);
}



inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b45585_build_fn_prototype(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _85743_tokens, jule::I64& _85766_i, jule::Bool _85774_method) {
	jule::Ptr<_1d55bb56d_FnDecl> _85817_f = jule::new_ptr<_1d55bb56d_FnDecl>(_1d55bb56d_FnDecl{._field_token=_85743_tokens[_85766_i], });;
	if ((_85817_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_85817_f.get()._field_statically=true;
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_token=_85743_tokens[_85766_i];
	};
	if ((_85817_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_85817_f.get()._field_unsafety=true;
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_token=_85743_tokens[_85766_i];
	};
	(_85766_i)++;
	if ((_85766_i >= _85743_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ee538d51_Token> _89113_tok = _85743_tokens[_85766_i];;
	if ((_89113_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_ident=_89113_tok.get()._field_kind;
	} else {
		_85817_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1ee538d51_Token> _90313_error_token = _85743_tokens[_85766_i];;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _90417_generics_tokens = _1d6b3c714_range(_85766_i,jule::Str("[", 1),jule::Str("]", 1),_85743_tokens);;
	if ((_90417_generics_tokens != nullptr)) {
		_85817_f.get()._field_generics=_1d6b43176_build_generics(_self_, _90417_generics_tokens,_90313_error_token);
	};
	if ((_85743_tokens[_85766_i].get()._field_kind != jule::Str("(", 1))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _85743_tokens[_85766_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _91417_params_toks = _1d6b3c714_range(_85766_i,jule::Str("(", 1),jule::Str(")", 1),_85743_tokens);;
	if ((_91417_params_toks.len() > 0LL)) {
		_85817_f.get()._field_params=_1d6b448c5_build_params(_self_, _91417_params_toks,_85774_method);
	};
	if ((_85766_i < _85743_tokens.len())) {
		jule::Ptr<_1ee538d51_Token> _92017_token = _85743_tokens[_85766_i];;
		if (((_92017_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_92017_token.get()._field_kind == jule::Str("!", 1)))) {
			_85817_f.get()._field_exceptional=true;
			(_85766_i)++;
		};
	};
	std::tie(_85817_f.get()._field_result,std::ignore) = _1d6b45134_build_ret_type(_self_, _85743_tokens,_85766_i);
	return _85817_f;
}



inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b459d6_build_fn(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _93333_tokens, jule::Bool _93351_method, jule::Bool _93365_prototype) {
	jule::I64 _93417_i = 0LL;;
	jule::Ptr<_1d55bb56d_FnDecl> _93517_f = _1d6b45585_build_fn_prototype(_self_, _93333_tokens,_93417_i,_93351_method);;
	if (_93365_prototype) {
		if ((_93417_i < _93333_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _93333_tokens[(_93417_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93517_f;
	} else if ((_93517_f == nullptr)) {
		return _93517_f;
	};
	if ((_93417_i >= _93333_tokens.len())) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _93517_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _95117_block_tokens = _1d6b3c714_range(_93417_i,jule::Str("{", 1),jule::Str("}", 1),_93333_tokens);;
	if ((_95117_block_tokens != nullptr)) {
		_93517_f.get()._field_scope=_1d6b41031_build_scope(_self_, _95117_block_tokens,_93333_tokens[(_93417_i - 1LL)]);
		_93517_f.get()._field_scope.get()._field_unsafety=_93517_f.get()._field_unsafety;
		if ((_93417_i < _93333_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _93333_tokens[_93417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _93517_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93517_f;
}



inline jule::Slice<jule::Ptr<_1ee538d51_Token>> _1d6b45ce4_get_use_decl_selectors(_1d6b3e55c_Parser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _96745_tokens) {
	jule::I64 _96817_i = 0LL;;
	_96745_tokens=_1d6b3c714_range(_96817_i,jule::Str("{", 1),jule::Str("}", 1),_96745_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _97018_parts;;
	jule::Slice<_21868a483_Log> _97025_errs;;
	std::tie(_97018_parts,_97025_errs) = _1d6b3d308_parts(_96745_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_97025_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_97025_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _97617_selectors = jule::Slice<jule::Ptr<_1ee538d51_Token>>::alloc(0LL,_97018_parts.len());;
	{
		auto &expr = _97018_parts;
		auto it = expr.begin();
		_iter_begin_1d948593e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _97721_part = *it;
			{
				if ((_97721_part.len() > 1LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _97721_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ee538d51_Token> _98121_tok = _97721_part[0LL];;
				if (((_98121_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_98121_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_1d6b3eeb9_push_err(&(*_self_), _98121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1d6b402d8_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1d948593e;
				};
				_97617_selectors = jule::alloc_for_append(_97617_selectors,1);_97617_selectors.__push(_98121_tok);;
			}
			_iter_next_1d948593e:;
			++it;
			goto _iter_begin_1d948593e;
		}
		_iter_end_1d948593e:;
	};
	return _97617_selectors;
}



inline void _1d6b46113_build_cpp_use_decl(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55c2299_UseDecl>& _99242_decl, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _99259_tokens) {
	if ((_99259_tokens.len() > 1LL)) {
		_1d6b3eeb9_push_err(&(*_self_), _99259_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ee538d51_Token> _99613_token = _99259_tokens[0LL];;
	if (((_99613_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_99613_token.get()._field_kind[0LL] != '`') && (_99613_token.get()._field_kind[0LL] != '\"')))) {
		_1d6b3eeb9_push_err(&(*_self_), _99613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_99242_decl.get()._field_cpp_linked=true;
	_99242_decl.get()._field_link_path=_99613_token.get()._field_kind.slice(1LL,(_99613_token.get()._field_kind.len() - 1LL));
}



inline void _1d6b46432_build_std_use_decl(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55c2299_UseDecl>& _100542_decl, jule::Slice<jule::Ptr<_1ee538d51_Token>> _100562_tokens) {
	_100542_decl.get()._field_std=true;
	jule::Ptr<_1ee538d51_Token> _100817_token = _100562_tokens[0LL];;
	if ((_100562_tokens.len() < 3LL)) {
		_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100562_tokens=_100562_tokens.slice(2LL);
	_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1d948e706:;
			{
				_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d948e77d:;
			{
				if ((_100817_token.get()._field_kind != jule::Str("}", 1))) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ee538d51_Token>> _102521_selectors = nullptr;;
				std::tie(_100562_tokens,_102521_selectors) = _1d6b3c9ab_range_last(_100562_tokens);
				_100542_decl.get()._field_selected=_1d6b45ce4_get_use_decl_selectors(&(*_self_), _102521_selectors);
				if ((_100562_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d948e805:;
			{
				if ((_100817_token.get()._field_kind != jule::Str("*", 1))) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100542_decl.get()._field_full=true;
			}
		}
		_match_end_1d948e67e:;
	};
	_100542_decl.get()._field_link_path=(jule::Str("std::", 5) + _1d6b3e194_tokstoa(_100562_tokens));
}



inline void _1d6b46751_build_ident_use_decl(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55c2299_UseDecl>& _106744_decl, jule::Slice<jule::Ptr<_1ee538d51_Token>> _106764_tokens) {
	_106744_decl.get()._field_std=false;
	jule::Ptr<_1ee538d51_Token> _107017_token = _106764_tokens[(_106764_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _107017_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1d94997cc:;
			{
				_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d94999a8:;
			{
				if ((_107017_token.get()._field_kind != jule::Str("}", 1))) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ee538d51_Token>> _108121_selectors = nullptr;;
				std::tie(_106764_tokens,_108121_selectors) = _1d6b3c9ab_range_last(_106764_tokens);
				_106744_decl.get()._field_selected=_1d6b45ce4_get_use_decl_selectors(&(*_self_), _108121_selectors);
				if ((_106764_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106764_tokens[(_106764_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d9499a1e:;
			{
				if ((_107017_token.get()._field_kind != jule::Str("*", 1))) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106764_tokens[(_106764_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_1d6b3eeb9_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106744_decl.get()._field_full=true;
			}
		}
		_match_end_1d9499777:;
	};
	_106744_decl.get()._field_link_path=_1d6b3e194_tokstoa(_106764_tokens);
}



inline void _1d6b46a70_parse_use_decl(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55c2299_UseDecl>& _113038_decl, jule::Slice<jule::Ptr<_1ee538d51_Token>> _113058_tokens) {
	if (_113038_decl.get()._field_cpp_linked) {
		_1d6b46113_build_cpp_use_decl(&(*_self_), _113038_decl,_113058_tokens);
		return;;
	};
	jule::Ptr<_1ee538d51_Token> _113617_token = _113058_tokens[0LL];;
	if ((_113617_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_113058_tokens.len() > 2LL) && (_113058_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_113038_decl.get()._field_alias=_113617_token.get()._field_kind;
		if ((_113058_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1d6b3eeb9_push_err(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1d6b402d8_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_113058_tokens=_113058_tokens.slice(2LL);
		_113617_token=_113058_tokens[0LL];
	};
	;
	{
		
		if ((_113617_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1d94a6135:;
			{
				_1d6b46432_build_std_use_decl(&(*_self_), _113038_decl,_113058_tokens);
			}
		}
		else {
			_case_begin_1d94a8214:;
			{
				_1d6b46751_build_ident_use_decl(&(*_self_), _113038_decl,_113058_tokens);
			}
		}
		_match_end_1d94a819d:;
	};
}



inline jule::Ptr<_1d55c2299_UseDecl> _1d6b46e27_build_use_decl(_1d6b3e55c_Parser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _116437_tokens, jule::Bool _116455_cpp_linked) {
	jule::Ptr<_1d55c2299_UseDecl> _116517_decl = jule::new_ptr<_1d55c2299_UseDecl>(_1d55c2299_UseDecl{._field_token=_116437_tokens[0LL], ._field_cpp_linked=_116455_cpp_linked, });;
	if ((_116437_tokens.len() < 2LL)) {
		_1d6b3eeb9_push_err(&(*_self_), _116517_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_116437_tokens=_116437_tokens.slice(1LL);
	_1d6b46a70_parse_use_decl(&(*_self_), _116517_decl,_116437_tokens);
	return _116517_decl;
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b47301_build_type_enum_item_kind(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::I64& _117850_i, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _117863_tokens) {
	jule::I64 _117917_brace_n = 0LL;;
	jule::I64 _118013_expr_start = _117850_i;;
	for (; (_117850_i < _117863_tokens.len()); (_117850_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _118217_t = _117863_tokens[_117850_i];;
			if ((_118217_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _118217_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1d94ac79b:;
						{
							(_117917_brace_n)++;
							goto _iter_next_1d94ac0d6;
						}
					}
					else {
						_case_begin_1d94ad15e:;
						{
							(_117917_brace_n)--;
						}
					}
					_match_end_1d94ace50:;
				};
			};
			if ((_117917_brace_n > 0LL)) {
				goto _iter_next_1d94ac0d6;
			};
			if (((_118217_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_117850_i + 1LL) >= _117863_tokens.len()))) {
				jule::Slice<jule::Ptr<_1ee538d51_Token>> _119825_kind_tokens = nullptr;;
				if ((_118217_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_119825_kind_tokens=_117863_tokens.slice(_118013_expr_start,_117850_i);
				} else {
					_119825_kind_tokens=_117863_tokens.slice(_118013_expr_start);
				};
				jule::I64 _120425_j = 0LL;;
				jule::Ptr<_1d55a968d_TypeDecl> _120526_kind;;
				std::tie(_120526_kind,std::ignore) = _1d6b418d3_build_type(_self_, _119825_kind_tokens,(&(_120425_j)),true);
				if ((_120425_j < _119825_kind_tokens.len())) {
					_1d6b3eeb9_push_err(_self_.ptr(), _119825_kind_tokens[_120425_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120526_kind;
			};
		}
	_iter_next_1d94ac0d6:;
	}
	_iter_end_1d94ac0d6:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>> _1d6b47620_build_type_enum_items(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _121546_tokens) {
	jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>> _121617_items = jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121717_i = 0LL;;
	for (; (_121717_i < _121546_tokens.len()); (_121717_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _121921_t = _121546_tokens[_121717_i];;
			jule::Ptr<_1d55c3c4b_TypeEnumItemDecl> _122021_item = jule::new_ptr<_1d55c3c4b_TypeEnumItemDecl>();;
			_122021_item.get()._field_token=_121921_t;
			if (((_122021_item.get()._field_token.get()._field_id == static_cast<jule::U64>(2LLU)) && ((_121546_tokens.len() - _121717_i) > 2LL))) {
				_122021_item.get()._field_ident=_122021_item.get()._field_token.get()._field_kind;
				_121921_t=_121546_tokens[(_121717_i + 1LL)];
				if ((_121921_t.get()._field_id == static_cast<jule::U64>(11LLU))) {
					_121717_i+=2LL;
					if (((_121717_i >= _121546_tokens.len()) || (_121546_tokens[_121717_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
						_1d6b3eeb9_push_err(_self_.ptr(), _121921_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1d94b30a9;
					};
				};
			};
			_122021_item.get()._field_kind=_1d6b47301_build_type_enum_item_kind(_self_, _121717_i,_121546_tokens);
			_121617_items = jule::alloc_for_append(_121617_items,1);_121617_items.__push(_122021_item);;
		}
	_iter_next_1d94b30a9:;
	}
	_iter_end_1d94b30a9:;;
	return _121617_items;
}



inline jule::Ptr<_1d55c3e49_TypeEnumDecl> _1d6b4792d_build_type_enum_decl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _123945_tokens) {
	jule::I64 _124017_i = 1LL;;
	jule::Ptr<_1d55c3e49_TypeEnumDecl> _124117_e = jule::new_ptr<_1d55c3e49_TypeEnumDecl>(_1d55c3e49_TypeEnumDecl{._field_token=_123945_tokens[_124017_i], });;
	if ((_124117_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _124117_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_ident=_124117_e.get()._field_token.get()._field_kind;
	_124017_i+=3LL;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _125017_item_tokens = _1d6b3c714_range(_124017_i,jule::Str("{", 1),jule::Str("}", 1),_123945_tokens);;
	if ((_125017_item_tokens == nullptr)) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _124117_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _124117_e;
	} else if ((_124017_i < _123945_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _123945_tokens[_124017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_end=_123945_tokens[(_124017_i - 1LL)];
	_124117_e.get()._field_items=_1d6b47620_build_type_enum_items(_self_, _125017_item_tokens);
	return _124117_e;
}



inline jule::Ptr<_1d55adbae_Expr> _1d6b47cd5_build_enum_item_expr(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::I64& _126445_i, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _126458_tokens) {
	jule::I64 _126517_brace_n = 0LL;;
	jule::I64 _126613_expr_start = _126445_i;;
	for (; (_126445_i < _126458_tokens.len()); (_126445_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _126817_t = _126458_tokens[_126445_i];;
			if ((_126817_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126817_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1d94bd9aa:;
						{
							(_126517_brace_n)++;
							goto _iter_next_1d94bd2e5;
						}
					}
					else {
						_case_begin_1d94be36d:;
						{
							(_126517_brace_n)--;
						}
					}
					_match_end_1d94be15e:;
				};
			};
			if ((_126517_brace_n > 0LL)) {
				goto _iter_next_1d94bd2e5;
			};
			if (((_126817_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_126445_i + 1LL) >= _126458_tokens.len()))) {
				jule::Slice<jule::Ptr<_1ee538d51_Token>> _128425_expr_tokens = nullptr;;
				if ((_126817_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_128425_expr_tokens=_126458_tokens.slice(_126613_expr_start,_126445_i);
				} else {
					_128425_expr_tokens=_126458_tokens.slice(_126613_expr_start);
				};
				return _1d6b405e6_build_expr(_self_, _128425_expr_tokens);
			};
		}
	_iter_next_1d94bd2e5:;
	}
	_iter_end_1d94bd2e5:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>> _1d6b480e3_build_enum_items(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _129641_tokens) {
	jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>> _129717_items = jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129817_i = 0LL;;
	for (; (_129817_i < _129641_tokens.len()); (_129817_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _130021_t = _129641_tokens[_129817_i];;
			jule::Ptr<_1d55c271c_EnumItemDecl> _130121_item = jule::new_ptr<_1d55c271c_EnumItemDecl>();;
			_130121_item.get()._field_token=_130021_t;
			if ((_130121_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_1d6b3eeb9_push_err(_self_.ptr(), _130121_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_130121_item.get()._field_ident=_130121_item.get()._field_token.get()._field_kind;
			if ((((_129817_i + 1LL) >= _129641_tokens.len()) || (_129641_tokens[(_129817_i + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if (((_129817_i + 1LL) < _129641_tokens.len())) {
					(_129817_i)++;
				};
				_129717_items = jule::alloc_for_append(_129717_items,1);_129717_items.__push(_130121_item);;
				goto _iter_next_1d94c2d22;
			};
			(_129817_i)++;
			_130021_t=_129641_tokens[_129817_i];
			(_129817_i)++;
			if ((_130021_t.get()._field_id != static_cast<jule::U64>(11LLU))) {
				_1d6b3eeb9_push_err(_self_.ptr(), _130021_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1d94c2d22;
			};
			if (((_129817_i >= _129641_tokens.len()) || (_129641_tokens[_129817_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_1d6b3eeb9_push_err(_self_.ptr(), _130021_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1d94c2d22;
			};
			_130121_item.get()._field_expr=_1d6b47cd5_build_enum_item_expr(_self_, _129817_i,_129641_tokens);
			_129717_items = jule::alloc_for_append(_129717_items,1);_129717_items.__push(_130121_item);;
		}
	_iter_next_1d94c2d22:;
	}
	_iter_end_1d94c2d22:;;
	return _129717_items;
}



inline jule::Ptr<_1d55c3245_EnumDecl> _1d6b48401_build_enum_decl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _133340_tokens) {
	if ((_133340_tokens.len() < 3LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _133340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55c3245_EnumDecl> _133817_e = jule::new_ptr<_1d55c3245_EnumDecl>(_1d55c3245_EnumDecl{._field_token=_133340_tokens[1LL], });;
	if ((_133817_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133817_e.get()._field_ident=_133817_e.get()._field_token.get()._field_kind;
	jule::I64 _134617_i = 2LL;;
	if ((_133340_tokens[_134617_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_134617_i)++;
		if ((_134617_i >= _133340_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _133340_tokens[(_134617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133817_e;
		};
		std::tie(_133817_e.get()._field_kind,std::ignore) = _1d6b418d3_build_type(_self_, _133340_tokens,(&(_134617_i)),true);
		if ((_134617_i >= _133340_tokens.len())) {
			_1d6b3e88c_stop(_self_.ptr());
			_1d6b3eeb9_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133817_e;
		};
	} else {
		_133817_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _136317_item_tokens = _1d6b3c714_range(_134617_i,jule::Str("{", 1),jule::Str("}", 1),_133340_tokens);;
	if ((_136317_item_tokens == nullptr)) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133817_e;
	} else if ((_134617_i < _133340_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _133340_tokens[_134617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133817_e.get()._field_end=_133340_tokens[(_134617_i - 1LL)];
	_133817_e.get()._field_items=_1d6b480e3_build_enum_items(_self_, _136317_item_tokens);
	return _133817_e;
}



inline jule::Any _1d6b4870e_build_node_enum_decl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _137745_tokens) {
	if (((_137745_tokens.len() > 3LL) && (_137745_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
		if ((_137745_tokens[3LL].get()._field_id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1d6b4792d_build_type_enum_decl(_self_, _137745_tokens));
		};
	};
	return static_cast<jule::Any>(_1d6b48401_build_enum_decl(_self_, _137745_tokens));
}



inline jule::Ptr<_1d55c4499_FieldDecl> _1d6b48a1c_build_field(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _138635_tokens) {
	jule::Ptr<_1d55c4499_FieldDecl> _138717_f = jule::new_ptr<_1d55c4499_FieldDecl>(_1d55c4499_FieldDecl{});;
	_138717_f.get()._field_public=(_138635_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_138717_f.get()._field_public) {
		if ((_138635_tokens.len() == 1LL)) {
			_1d6b3eeb9_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(1LL);
	};
	_138717_f.get()._field_mutable=(_138635_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_138717_f.get()._field_mutable) {
		if ((_138635_tokens.len() == 1LL)) {
			_1d6b3eeb9_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(1LL);
	};
	_138717_f.get()._field_token=_138635_tokens[0LL];
	if ((_138717_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _138717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138717_f.get()._field_ident=_138717_f.get()._field_token.get()._field_kind;
	if ((_138635_tokens.len() == 1LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138635_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _138635_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138635_tokens=_138635_tokens.slice(2LL);
	jule::I64 _142417_i = 0LL;;
	std::tie(_138717_f.get()._field_kind,std::ignore) = _1d6b418d3_build_type(_self_, _138635_tokens,(&(_142417_i)),true);
	if ((_142417_i < _138635_tokens.len())) {
		jule::Ptr<_1ee538d51_Token> _142717_token = _138635_tokens[_142417_i];;
		if (((_142717_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_142717_token.get()._field_kind != jule::Str("=", 1)))) {
			_1d6b3eeb9_push_err(_self_.ptr(), _138635_tokens[_142417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_142417_i)++;
		if ((_142417_i >= _138635_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _142717_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(_142417_i);
		_138717_f.get()._field_default=_1d6b405e6_build_expr(_self_, _138635_tokens);
	};
	return _138717_f;
}



inline jule::Slice<jule::Ptr<_1d55c4499_FieldDecl>> _1d6b48d4c_build_struct_decl_fields(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _144448_tokens) {
	jule::Slice<jule::Ptr<_1d55c4499_FieldDecl>> _144517_fields = nullptr;;
	jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _144617_stmts = _1d6b22c6b_split_stmts(_144448_tokens);;
	{
		auto &expr = _144617_stmts;
		auto it = expr.begin();
		_iter_begin_1d94e10d7:;
		if (it != expr.end()) {
			jule::Ptr<_1d6b228c5_stmt> _144721_stmt = *it;
			{
				_144448_tokens=_144721_stmt.get()._field_tokens;
				jule::Ptr<_1d55c4499_FieldDecl> _144921_f = _1d6b48a1c_build_field(_self_, _144448_tokens);;
				_144517_fields = jule::alloc_for_append(_144517_fields,1);_144517_fields.__push(_144921_f);;
			}
			_iter_next_1d94e10d7:;
			++it;
			goto _iter_begin_1d94e10d7;
		}
		_iter_end_1d94e10d7:;
	};
	return _144517_fields;
}



inline jule::Ptr<_1d55c4d07_StructDecl> _1d6b4916b_build_struct_decl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _145542_tokens) {
	if ((_145542_tokens.len() < 3LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _145542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _146117_i = 1LL;;
	jule::Ptr<_1d55c4d07_StructDecl> _146217_s = jule::new_ptr<_1d55c4d07_StructDecl>(_1d55c4d07_StructDecl{._field_token=_145542_tokens[_146117_i], });;
	if ((_146217_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _146217_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_146117_i)++;
	if ((_146117_i >= _145542_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _145542_tokens[_146117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _146217_s;
	};
	_146217_s.get()._field_ident=_146217_s.get()._field_token.get()._field_kind;
	jule::Ptr<_1ee538d51_Token> _147613_error_token = _145542_tokens[_146117_i];;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _147717_generics_tokens = _1d6b3c714_range(_146117_i,jule::Str("[", 1),jule::Str("]", 1),_145542_tokens);;
	if ((_147717_generics_tokens != nullptr)) {
		_146217_s.get()._field_generics=_1d6b43176_build_generics(_self_, _147717_generics_tokens,_147613_error_token);
	};
	if ((_146117_i >= _145542_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _145542_tokens[(_146117_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _146217_s;
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _148717_body_tokens = _1d6b3c714_range(_146117_i,jule::Str("{", 1),jule::Str("}", 1),_145542_tokens);;
	if ((_148717_body_tokens == nullptr)) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _146217_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _146217_s;
	};
	if ((_146117_i < _145542_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _145542_tokens[_146117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_146217_s.get()._field_fields=_1d6b48d4c_build_struct_decl_fields(_self_, _148717_body_tokens);
	_146217_s.get()._field_end=_145542_tokens[(_146117_i - 1LL)];
	return _146217_s;
}



inline void _1d6b493e1_check_method_receiver(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55bb56d_FnDecl>& _150241_f) {
	if (_150241_f.get()._field_statically) {
		if (((_150241_f.get()._field_params.len() > 0LL) && _1d55ba5b1_is_self(_150241_f.get()._field_params[0LL].ptr()))) {
			_1d6b3eeb9_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_150241_f.get()._field_params.len() == 0LL)) {
		_1d6b3eeb9_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d55ba24d_ParamDecl> _151513_param = _150241_f.get()._field_params[0LL];;
	if ((!(_1d55ba5b1_is_self(_151513_param.ptr())))) {
		_1d6b3eeb9_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>> _1d6b496ee_build_trait_methods(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _152243_tokens) {
	jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>> _152317_methods = nullptr;;
	jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _152417_stmts = _1d6b22c6b_split_stmts(_152243_tokens);;
	{
		auto &expr = _152417_stmts;
		auto it = expr.begin();
		_iter_begin_1d9500514:;
		if (it != expr.end()) {
			jule::Ptr<_1d6b228c5_stmt> _152521_stmt = *it;
			{
				_152243_tokens=_152521_stmt.get()._field_tokens;
				if ((_152243_tokens.len() == 0LL)) {
					goto _iter_next_1d9500514;
				};
				jule::Bool _153121_is_pub = false;;
				if ((_152243_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_153121_is_pub=true;
					if ((_152243_tokens.len() == 1LL)) {
						_1d6b3eeb9_push_err(_self_.ptr(), _152243_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1d9500514;
					};
					_152243_tokens=_152243_tokens.slice(1LL);
				};
				jule::Ptr<_1d55bb56d_FnDecl> _154121_f = _1d6b459d6_build_fn(_self_, _152243_tokens,true,true);;
				if ((_154121_f != nullptr)) {
					if (_1d55bb8c0_is_anon(_154121_f.ptr())) {
						_1d6b3eeb9_push_err(_self_.ptr(), _154121_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1d6b493e1_check_method_receiver(_self_.ptr(), _154121_f);
					if ((_154121_f.get()._field_generics.len() > 0LL)) {
						_1d6b3eeb9_push_err(_self_.ptr(), _154121_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_154121_f.get()._field_public=_153121_is_pub;
					_152317_methods = jule::alloc_for_append(_152317_methods,1);_152317_methods.__push(_154121_f);;
				};
			}
			_iter_next_1d9500514:;
			++it;
			goto _iter_begin_1d9500514;
		}
		_iter_end_1d9500514:;
	};
	return _152317_methods;
}



inline jule::Ptr<_1d55c5412_TraitDecl> _1d6b49a0c_build_trait_decl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _155741_tokens) {
	if ((_155741_tokens.len() < 3LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _155741_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55c5412_TraitDecl> _156217_t = jule::new_ptr<_1d55c5412_TraitDecl>(_1d55c5412_TraitDecl{._field_token=_155741_tokens[1LL], });;
	if ((_156217_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _156217_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_156217_t.get()._field_ident=_156217_t.get()._field_token.get()._field_kind;
	jule::I64 _157017_i = 2LL;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _157117_body_tokens = _1d6b3c714_range(_157017_i,jule::Str("{", 1),jule::Str("}", 1),_155741_tokens);;
	if ((_157117_body_tokens == nullptr)) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _156217_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_157017_i < _155741_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _155741_tokens[_157017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_156217_t.get()._field_methods=_1d6b496ee_build_trait_methods(_self_, _157117_body_tokens);
	_156217_t.get()._field_end=_155741_tokens[(_157017_i - 1LL)];
	return _156217_t;
}



inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b49d1a_build_cpp_link_fn(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _158641_tokens) {
	_158641_tokens=_158641_tokens.slice(1LL);
	jule::Ptr<_1d55bb56d_FnDecl> _158817_f = _1d6b459d6_build_fn(_self_, _158641_tokens,false,true);;
	if ((_158817_f != nullptr)) {
		if (_1d55bb8c0_is_anon(_158817_f.ptr())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _158817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_158817_f.get()._field_cpp_linked=true;
	};
	return _158817_f;
}



inline jule::Ptr<_1d55bc54c_VarDecl> _1d6b4a128_build_cpp_link_var(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _159842_tokens) {
	_159842_tokens=_159842_tokens.slice(1LL);
	jule::Ptr<_1d55bc54c_VarDecl> _160017_v = _1d6b429b1_build_var(_self_, _159842_tokens);;
	if ((_160017_v != nullptr)) {
		_160017_v.get()._field_cpp_linked=true;
		if ((_160017_v.get()._field_expr != nullptr)) {
			_1d6b3eeb9_push_err(_self_.ptr(), _160017_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _160017_v;
}



inline jule::Ptr<_1d55c4d07_StructDecl> _1d6b4a436_build_cpp_link_struct(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _161045_tokens) {
	_161045_tokens=_161045_tokens.slice(1LL);
	jule::Ptr<_1d55c4d07_StructDecl> _161217_s = _1d6b4916b_build_struct_decl(_self_, _161045_tokens);;
	if ((_161217_s != nullptr)) {
		_161217_s.get()._field_cpp_linked=true;
	};
	return _161217_s;
}



inline jule::Ptr<_1d55c0dad_TypeAliasDecl> _1d6b4a766_build_cpp_link_type_alias(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _161949_tokens) {
	_161949_tokens=_161949_tokens.slice(1LL);
	jule::Ptr<_1d55c0dad_TypeAliasDecl> _162117_t = _1d6b41be1_build_type_alias_decl(_self_, _161949_tokens);;
	if ((_162117_t != nullptr)) {
		_162117_t.get()._field_cpp_linked=true;
	};
	return _162117_t;
}



inline jule::Ptr<_1d55c2299_UseDecl> _1d6b4aa85_build_cpp_link_use(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _162842_tokens) {
	if ((_162842_tokens.len() == 1LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _162842_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162842_tokens=_162842_tokens.slice(1LL);
	;
	return _1d6b46e27_build_use_decl(_self_.ptr(), _162842_tokens,true);
}



inline jule::Any _1d6b4ad93_build_cpp_link(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _163939_tokens) {
	jule::Ptr<_1ee538d51_Token> _164017_token = _163939_tokens[0LL];;
	if ((_163939_tokens.len() == 1LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _164017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_164017_token=_163939_tokens[1LL];
	{
		auto &_match_expr{ _164017_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1d9515480:;
			{
				return static_cast<jule::Any>(_1d6b49d1a_build_cpp_link_fn(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d9516195:;
			{
				return static_cast<jule::Any>(_1d6b4a128_build_cpp_link_var(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1d951620b:;
			{
				return static_cast<jule::Any>(_1d6b4a436_build_cpp_link_struct(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1d9516272:;
			{
				return static_cast<jule::Any>(_1d6b4a766_build_cpp_link_type_alias(_self_, _163939_tokens));
			}
		}
		else {
			_case_begin_1d95160a7:;
			{
				_1d6b3eeb9_push_err(_self_.ptr(), _164017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d9516041:;
	};
	return nullptr;
}



inline jule::Ptr<_1d55bb56d_FnDecl> _1d6b4b1a1_get_method(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _166335_tokens) {
	jule::I64 _166417_i = 0LL;;
	jule::Ptr<_1ee538d51_Token> _166517_token = _166335_tokens[_166417_i];;
	if ((_166517_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_166417_i + 1LL) >= _166335_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166417_i)++;
		_166517_token=_166335_tokens[_166417_i];
	};
	if ((_166517_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_166417_i + 1LL) >= _166335_tokens.len())) {
			_1d6b3eeb9_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166417_i)++;
		_166517_token=_166335_tokens[_166417_i];
	};
	if ((_166517_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55bb56d_FnDecl> _168917_f = _1d6b459d6_build_fn(_self_, _166335_tokens,true,false);;
	if (((_168917_f != nullptr) && _1d55bb8c0_is_anon(_168917_f.ptr()))) {
		_1d6b3eeb9_push_err(_self_.ptr(), _168917_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168917_f;
}



inline void _1d6b4b4c0_parse_impl_body(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Ptr<_1d55c5a1c_Impl>& _169640_ipl, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _169657_tokens) {
	jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _169717_stmts = _1d6b22c6b_split_stmts(_169657_tokens);;
	{
		auto &expr = _169717_stmts;
		auto it = expr.begin();
		_iter_begin_1d951e5cc:;
		if (it != expr.end()) {
			jule::Ptr<_1d6b228c5_stmt> _169821_stmt = *it;
			{
				_169657_tokens=_169821_stmt.get()._field_tokens;
				jule::Ptr<_1ee538d51_Token> _170021_token = _169657_tokens[0LL];;
				jule::Bool _170121_is_pub = false;;
				{
					auto &_match_expr{ _170021_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1d9520d92:;
						{
							_1d6b40b79_push_directive(_self_.ptr(), _1d6b40904_build_directive(_self_.ptr(), _169657_tokens));
							goto _iter_next_1d951e5cc;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1d9520e3b:;
						{
							_170121_is_pub=true;
							if ((_169657_tokens.len() == 1LL)) {
								_1d6b3eeb9_push_err(_self_.ptr(), _169657_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1d951e5cc;
							};
							_169657_tokens=_169657_tokens.slice(1LL);
							if ((_169657_tokens.len() > 0LL)) {
								_170021_token=_169657_tokens[0LL];
							};
						}
					}
					_match_end_1d9520d2b:;
				};
				{
					auto &_match_expr{ _170021_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1d951ee18:;
						{
							jule::Ptr<_1d55bc54c_VarDecl> _172025_v = _1d6b429b1_build_var(_self_, _169657_tokens);;
							if ((_172025_v != nullptr)) {
								_172025_v.get()._field_public=_170121_is_pub;
								_169640_ipl.get()._field_statics = jule::alloc_for_append(_169640_ipl.get()._field_statics,1);_169640_ipl.get()._field_statics.__push(_172025_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1d9521b62:;
						{
							jule::Ptr<_1d55bb56d_FnDecl> _172825_f = _1d6b4b1a1_get_method(_self_, _169657_tokens);;
							if ((_172825_f != nullptr)) {
								_1d6b493e1_check_method_receiver(_self_.ptr(), _172825_f);
								_1d6b4be0a_apply_fn_meta(_self_.ptr(), _172825_f,_170121_is_pub);
								_169640_ipl.get()._field_methods = jule::alloc_for_append(_169640_ipl.get()._field_methods,1);_169640_ipl.get()._field_methods.__push(_172825_f);;
							};
						}
					}
					else {
						_case_begin_1d952137b:;
						{
							_1d6b3eeb9_push_err(_self_.ptr(), _170021_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1d951e5cc;
						}
					}
					_match_end_1d95231b3:;
				};
			}
			_iter_next_1d951e5cc:;
			++it;
			goto _iter_begin_1d951e5cc;
		}
		_iter_end_1d951e5cc:;
	};
}



inline jule::Ptr<_1d55c5a1c_Impl> _1d6b4b7cd_build_impl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _174134_tokens) {
	jule::Ptr<_1ee538d51_Token> _174217_token = _174134_tokens[0LL];;
	if ((_174134_tokens.len() < 2LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _174217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _174817_i = 1LL;;
	jule::Ptr<_1d55a968d_TypeDecl> _175018_base;;
	jule::Bool _175028_ok;;
	std::tie(_175018_base,_175028_ok) = _1d6b418d3_build_type(_self_, _174134_tokens,(&(_174817_i)),true);
	if ((!(_175028_ok))) {
		return nullptr;
	};
	if ((_174817_i >= _174134_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _174217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d55c5a1c_Impl> _175917_ipl = jule::new_ptr<_1d55c5a1c_Impl>(_1d55c5a1c_Impl{._field_base=_175018_base, });;
	_174217_token=_174134_tokens[_174817_i];
	if ((_174217_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_174217_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_174217_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_175917_ipl.get()._field_base,_175917_ipl.get()._field_dest) = std::make_tuple(_175917_ipl.get()._field_dest,_175917_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_174817_i)++;
	if ((_174817_i >= _174134_tokens.len())) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_175917_ipl.get()._field_dest,_175028_ok) = _1d6b418d3_build_type(_self_, _174134_tokens,(&(_174817_i)),true);
	if ((!(_175028_ok))) {
		return nullptr;
	};
	if ((_174817_i >= _174134_tokens.len())) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _179917_body_tokens = _1d6b3c714_range(_174817_i,jule::Str("{", 1),jule::Str("}", 1),_174134_tokens);;
	if ((_179917_body_tokens == nullptr)) {
		_1d6b3e88c_stop(_self_.ptr());
		_1d6b3eeb9_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_174817_i < _174134_tokens.len())) {
		_1d6b3eeb9_push_err(_self_.ptr(), _174134_tokens[_174817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_175917_ipl.get()._field_end=_174134_tokens[(_174817_i - 1LL)];
	_1d6b4b4c0_parse_impl_body(_self_, _175917_ipl,_179917_body_tokens);
	return _175917_ipl;
}



inline jule::Any _1d6b4badb_build_node_data(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _181440_tokens) {
	jule::Ptr<_1ee538d51_Token> _181517_token = _181440_tokens[0LL];;
	{
		auto &_match_expr{ _181517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1d953416e:;
			{
				jule::Ptr<_1d55bb56d_FnDecl> _181921_f = _1d6b459d6_build_fn(_self_, _181440_tokens,false,false);;
				if ((_181921_f != nullptr)) {
					_181921_f.get()._field_global=true;
					if (_1d55bb8c0_is_anon(_181921_f.ptr())) {
						_1d6b3eeb9_push_err(_self_.ptr(), _181921_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_181921_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1d95341d5:;
			{
				return static_cast<jule::Any>(_1d6b429b1_build_var(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1d95348de:;
			{
				return static_cast<jule::Any>(_1d6b41be1_build_type_alias_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1d9534955:;
			{
				return _1d6b4870e_build_node_enum_decl(_self_, _181440_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1d95349bb:;
			{
				return static_cast<jule::Any>(_1d6b4916b_build_struct_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1d9534a32:;
			{
				return static_cast<jule::Any>(_1d6b49a0c_build_trait_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d9534a98:;
			{
				return static_cast<jule::Any>(_1d6b4b7cd_build_impl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d9534b20:;
			{
				return _1d6b4ad93_build_cpp_link(_self_, _181440_tokens);
			}
		}
		else {
			_case_begin_1d953405e:;
			{
				_1d6b3eeb9_push_err(_self_.ptr(), _181517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d9533eb5:;
	};
}



inline void _1d6b4be0a_apply_fn_meta(_1d6b3e55c_Parser* _self_, jule::Ptr<_1d55bb56d_FnDecl>& _185037_f, jule::Bool _185049_is_pub) {
	_185037_f.get()._field_public=_185049_is_pub;
	_185037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1d6b4c229_apply_meta(_1d6b3e55c_Parser* _self_, _1d557588a_Node& _185634_node, jule::Bool _185646_is_pub) {
	{
		auto &_match_expr{ _185634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d55bc54c_VarDecl>>()) {
			_case_begin_1d95414de:;
			{
				jule::Ptr<_1d55bc54c_VarDecl> _185921_v = _185634_node._field_data.operator jule::Ptr<_1d55bc54c_VarDecl>();;
				if ((_185921_v == nullptr)) {
					return;;
				};
				_185921_v.get()._field_public=_185646_is_pub;
				_185921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55bb56d_FnDecl>>()) {
			_case_begin_1d9540b4d:;
			{
				jule::Ptr<_1d55bb56d_FnDecl> _186721_f = _185634_node._field_data.operator jule::Ptr<_1d55bb56d_FnDecl>();;
				if ((_186721_f == nullptr)) {
					return;;
				};
				_1d6b4be0a_apply_fn_meta(&(*_self_), _186721_f,_185646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c0dad_TypeAliasDecl>>()) {
			_case_begin_1d9540bc5:;
			{
				jule::Ptr<_1d55c0dad_TypeAliasDecl> _187321_tad = _185634_node._field_data.operator jule::Ptr<_1d55c0dad_TypeAliasDecl>();;
				if ((_187321_tad == nullptr)) {
					return;;
				};
				_187321_tad.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c3245_EnumDecl>>()) {
			_case_begin_1d9540c4c:;
			{
				jule::Ptr<_1d55c3245_EnumDecl> _187921_ed = _185634_node._field_data.operator jule::Ptr<_1d55c3245_EnumDecl>();;
				if ((_187921_ed == nullptr)) {
					return;;
				};
				_187921_ed.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c3e49_TypeEnumDecl>>()) {
			_case_begin_1d9541049:;
			{
				jule::Ptr<_1d55c3e49_TypeEnumDecl> _188521_ted = _185634_node._field_data.operator jule::Ptr<_1d55c3e49_TypeEnumDecl>();;
				if ((_188521_ted == nullptr)) {
					return;;
				};
				_188521_ted.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c4d07_StructDecl>>()) {
			_case_begin_1d95410b0:;
			{
				jule::Ptr<_1d55c4d07_StructDecl> _189121_sd = _185634_node._field_data.operator jule::Ptr<_1d55c4d07_StructDecl>();;
				if ((_189121_sd == nullptr)) {
					return;;
				};
				_189121_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_189121_sd.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c5412_TraitDecl>>()) {
			_case_begin_1d9541126:;
			{
				jule::Ptr<_1d55c5412_TraitDecl> _189921_td = _185634_node._field_data.operator jule::Ptr<_1d55c5412_TraitDecl>();;
				if ((_189921_td == nullptr)) {
					return;;
				};
				_189921_td.get()._field_public=_185646_is_pub;
			}
		}
		else {
			_case_begin_1d9540a93:;
			{
				if (_185646_is_pub) {
					_1d6b3eeb9_push_err(&(*_self_), _185634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1d95408ea:;
	};
}



inline std::tuple<jule::Bool,jule::Any> _1d6b4c559_build_general_scope_node_data(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _191153_st) {
	jule::Bool _191169_is_pub = jule::Bool();
	jule::Any _191183_data = jule::Any();
	if ((_191153_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_191169_is_pub=true;
		_191153_st=_191153_st.slice(1LL);
		if ((_191153_st.len() == 0LL)) {
			_1d6b3eeb9_push_err(_self_.ptr(), _191153_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_191169_is_pub,_191183_data);
		};
	};
	_191183_data=_1d6b4badb_build_node_data(_self_, _191153_st);
	return std::make_tuple(_191169_is_pub,_191183_data);
}



inline void _1d6b4c7e0_push_use_decl(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Ptr<_1d55c2299_UseDecl>& _192638_decl) {
	_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_192638_decl);;
	if ((_self_.get()._field_ast.get()._field_nodes.len() > 0LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _192638_decl.get()._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1d6b402d8_push_suggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d6b4caed_push_meta_nodes(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _193440_tokens) {
	{
		auto &_match_expr{ _193440_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1d954da6d:;
			{
				;
				jule::Ptr<_1d55c2299_UseDecl> _193821_decl = _1d6b46e27_build_use_decl(_self_.ptr(), _193440_tokens,false);;
				_1d6b4c7e0_push_use_decl(_self_, _193821_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d954dad4:;
			{
				if (((_193440_tokens.len() > 1LL) && (_193440_tokens[1LL].get()._field_id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1d55c2299_UseDecl> _194325_decl = _1d6b4aa85_build_cpp_link_use(_self_, _193440_tokens);;
					_1d6b4c7e0_push_use_decl(_self_, _194325_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1d954db5b:;
			{
				_1d6b40b79_push_directive(_self_.ptr(), _1d6b40904_build_directive(_self_.ptr(), _193440_tokens));
				return true;
			}
		}
		_match_end_1d954d96e:;
	};
	return false;
}



inline _1d557588a_Node _1d6b4ce0b_parse_node(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _195435_st) {
	_1d557588a_Node _195517_node = _1d557588a_Node{._field_token=_195435_st[0LL], };;
	if (_1d6b4caed_push_meta_nodes(_self_, _195435_st)) {
		return _195517_node;
	};
	jule::Bool _196314_is_pub;;
	jule::Any _196326_data;;
	std::tie(_196314_is_pub,_196326_data) = _1d6b4c559_build_general_scope_node_data(_self_, _195435_st);
	if ((_196326_data == nullptr)) {
		return _195517_node;
	};
	_195517_node._field_data=_196326_data;
	_1d6b4c229_apply_meta(_self_.ptr(), _195517_node,_196314_is_pub);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _195517_node;
}



inline void _1d6b4d181_append_node(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _197836_st) {
	if ((_197836_st.len() == 0LL)) {
		return;;
	};
	_1d557588a_Node _198317_node = _1d6b4ce0b_parse_node(_self_, _197836_st);;
	if (((_198317_node._field_data == nullptr) || _1d6b3eb01_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_198317_node);;
}



inline void _1d6b4d5e3_remove_range(_1d6b3e55c_Parser* _self_, jule::I64 _199031_i, jule::Str _199039_kind, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _199051_tokens, jule::Slice<jule::I64>& _199074_ranges) {
	jule::Str _199113_close = _1d6b3d5c2_get_close_kind_of_brace(_199039_kind);;
	for (; (_199031_i >= 0LL); (_199031_i)--) {
		{
			jule::Ptr<_1ee538d51_Token> _199317_tok = _199051_tokens[_199074_ranges[_199031_i]];;
			if ((_199317_tok.get()._field_kind != _199113_close)) {
				goto _iter_next_1d955878c;
			};
			_199074_ranges=jule::append(_199074_ranges.slice(0LL,_199031_i),_199074_ranges.slice((_199031_i + 1LL)));
			goto _iter_end_1d955878c;
		}
	_iter_next_1d955878c:;
	}
	_iter_end_1d955878c:;;
}



inline void _1d6b4d9cd_push_wrong_order_close_err(_1d6b3e55c_Parser* _self_, jule::Ptr<_1ee538d51_Token>& _200246_t, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _200258_tokens, jule::Slice<jule::I64>& _200277_ranges) {
	{
		auto &_match_expr{ _200258_tokens[_200277_ranges[(_200277_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1d955a8e3:;
			{
				_1d6b3eeb9_push_err(&(*_self_), _200246_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1d955a96a:;
			{
				_1d6b3eeb9_push_err(&(*_self_), _200246_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1d955a9e2:;
			{
				_1d6b3eeb9_push_err(&(*_self_), _200246_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d955a7b1:;
	};
}



inline void _1d6b4de51_push_range_close(_1d6b3e55c_Parser* _self_, jule::Ptr<_1ee538d51_Token> _201335_t, jule::Str _201346_left, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _201358_tokens, jule::Slice<jule::I64>& _201381_ranges) {
	jule::I64 _201413_n = _201381_ranges.len();;
	if ((_201413_n == 0LL)) {
		{
			auto &_match_expr{ _201335_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1d955d583:;
				{
					_1d6b3eeb9_push_err(&(*_self_), _201335_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1d955d5e9:;
				{
					_1d6b3eeb9_push_err(&(*_self_), _201335_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1d955d671:;
				{
					_1d6b3eeb9_push_err(&(*_self_), _201335_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1d955d330:;
		};
		return;;
	} else if ((_201358_tokens[_201381_ranges[(_201413_n - 1LL)]].get()._field_kind != _201346_left)) {
		_1d6b4d9cd_push_wrong_order_close_err(&(*_self_), _201335_t,_201358_tokens,_201381_ranges);
	};
	_1d6b4d5e3_remove_range(&(*_self_), static_cast<jule::I64>((_201413_n - 1LL)),_201335_t.get()._field_kind,_201358_tokens,_201381_ranges);
}



inline void _1d6b4e1c6_check_ranges(_1d6b3e55c_Parser* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _203132_tokens) {
	jule::Slice<jule::I64> _203217_ranges = nullptr;;
	{
		auto &expr = _203132_tokens;
		auto it = expr.begin();
		_iter_begin_1d95618c7:;
		if (it != expr.end()) {
			jule::I64 _203413_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> &_203416_token = *it;
			{
				if ((_203416_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1d95618c7;
				};
				{
					auto &_match_expr{ _203416_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1d9562b5e:;
						{
							_203217_ranges = jule::alloc_for_append(_203217_ranges,1);_203217_ranges.__push(_203413_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1d9562c08:;
						{
							_1d6b4de51_push_range_close(&(*_self_), _203416_token,jule::Str("(", 1),_203132_tokens,_203217_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1d9562c6e:;
						{
							_1d6b4de51_push_range_close(&(*_self_), _203416_token,jule::Str("{", 1),_203132_tokens,_203217_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1d9562cd5:;
						{
							_1d6b4de51_push_range_close(&(*_self_), _203416_token,jule::Str("[", 1),_203132_tokens,_203217_ranges);
						}
					}
					_match_end_1d95626db:;
				};
			}
			_iter_next_1d95618c7:;
			++it;
			_203413_i++;
			goto _iter_begin_1d95618c7;
		}
		_iter_end_1d95618c7:;
	};
	{
		auto &expr = _203217_ranges;
		auto it = expr.begin();
		_iter_begin_1d9561861:;
		if (it != expr.end()) {
			jule::I64 _205216_i = *it;
			{
				jule::Ptr<_1ee538d51_Token> _205317_token = _203132_tokens[_205216_i];;
				{
					auto &_match_expr{ _205317_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1d956549c:;
						{
							_1d6b3eeb9_push_err(&(*_self_), _205317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1d9565546:;
						{
							_1d6b3eeb9_push_err(&(*_self_), _205317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1d95655ac:;
						{
							_1d6b3eeb9_push_err(&(*_self_), _205317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1d95653d1:;
				};
			}
			_iter_next_1d9561861:;
			++it;
			goto _iter_begin_1d9561861;
		}
		_iter_end_1d9561861:;
	};
}



inline void _1d6b4e44b_parse(jule::Ptr<_1d6b3e55c_Parser> _self_, jule::Ptr<_1ee53e1db_File>& _206530_f) {
	_self_.get()._field_ast=jule::new_ptr<_1d5574b0e_Ast>(_1d5574b0e_Ast{._field_file=_206530_f, });
	_1d6b4e1c6_check_ranges(_self_.ptr(), _206530_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _207517_stmts = _1d6b22c6b_split_stmts(_206530_f.get()._field_tokens);;
	jule::I64 _207817_i = 0LL;;
	for (; (_207817_i < _207517_stmts.len()); (_207817_i)++) {
		{
			jule::Ptr<_1d6b228c5_stmt> _208021_stmt = _207517_stmts[_207817_i];;
			if ((_208021_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_208021_stmt.get()._field_tokens[0LL].get()._field_id != static_cast<jule::U64>(39LLU))) {
				goto _iter_end_1d956866a;
			};
			if ((!(_21868c3a8_is_top_directive(_208021_stmt.get()._field_tokens[1LL].get()._field_kind)))) {
				goto _iter_end_1d956866a;
			};
			_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_1d6b40904_build_directive(_self_.ptr(), _208021_stmt.get()._field_tokens));;
		}
	_iter_next_1d956866a:;
	}
	_iter_end_1d956866a:;;
	_self_.get()._field_errors=nullptr;
	for (; (_207817_i < _207517_stmts.len()); (_207817_i)++) {
		{
			jule::Ptr<_1d6b228c5_stmt> _209721_stmt = _207517_stmts[_207817_i];;
			_1d6b4d181_append_node(_self_, _209721_stmt.get()._field_tokens);
			if (_1d6b3eb01_stopped(_self_.ptr())) {
				goto _iter_end_1d956b706;
			};
		}
	_iter_next_1d956b706:;
	}
	_iter_end_1d956b706:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1d6b3eeb9_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d6b3e55c_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1d6b50eca_push_err(_1d6b50936_TypeBuilder* _self_, jule::Ptr<_1ee538d51_Token> _7827_token, jule::Str _7842_fmt) {
	if ((*_self_)._field_err) {
		_1d6b3eeb9_push_err((*_self_)._field_p.ptr(), _7827_token,_7842_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1d6b512e9_push_suggestion(_1d6b50936_TypeBuilder* _self_, jule::Str _8534_fmt, jule::Slice<jule::Any> _8547_args) {
	if ((*_self_)._field_err) {
		_1d6b402d8_push_suggestion((*_self_)._field_p.ptr(), _8534_fmt,jule::Any(_8547_args));
	};
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b5155d_build_prim(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1d55a968d_TypeDecl> _9217_t = _1d6b500d9_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b517c2_build_namespace(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1d55a968d_TypeDecl> _9817_t = jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1d55aa75a_NamespaceTypeDecl> _10217_nst = jule::new_ptr<_1d55aa75a_NamespaceTypeDecl>();;
	jule::I64 _10317_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1ee538d51_Token> _10521_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10317_n & 1LL) == 0LL)) {
				if ((_10521_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_1d6b50eca_push_err(&(*_self_), _10521_token,jule::Str("invalid syntax", 14));
					_1d6b512e9_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10217_nst.get()._field_idents = jule::alloc_for_append(_10217_nst.get()._field_idents,1);_10217_nst.get()._field_idents.__push(_10521_token);;
			} else if ((_10521_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1d9576e2b;
			};
			(_10317_n)++;
		}
	_iter_next_1d9576e2b:;
	}
	_iter_end_1d9576e2b:;;
	_10217_nst.get()._field_idents=_10217_nst.get()._field_idents.slice(0LL,(_10217_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10217_nst.get()._field_kind=_1d6b5200e_build_ident(&(*_self_));
	_9817_t.get()._field_kind=static_cast<jule::Any>(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _1d6b51a36_build_generics(_1d6b50936_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1ee538d51_Token> _13113_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13113_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13113_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _13617_parts = _1d6b51c9a_ident_generics(&(*_self_));;
	if ((_13617_parts.len() == 0LL)) {
		_1d6b50eca_push_err(&(*_self_), _13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1d55a968d_TypeDecl>>::alloc(0LL,_13617_parts.len());;
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_1d957e593:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _14321_part = *it;
			{
				jule::I64 _14421_j = 0LL;;
				jule::Ptr<_1d55a968d_TypeDecl> _14522_t;;
				std::tie(_14522_t,std::ignore) = _1d6b418d3_build_type((*_self_)._field_p, _14321_part,(&(_14421_j)),true);
				if ((_14421_j < _14321_part.len())) {
					_1d6b50eca_push_err(&(*_self_), _14321_part[_14421_j],jule::Str("invalid syntax", 14));
				};
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);;
			}
			_iter_next_1d957e593:;
			++it;
			goto _iter_begin_1d957e593;
		}
		_iter_end_1d957e593:;
	};
	return _14217_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b51c9a_ident_generics(_1d6b50936_TypeBuilder* _self_) {
	jule::I64 _15513_first = (*((*_self_)._field_i));;
	jule::I64 _15617_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1ee538d51_Token> _15817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15817_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15817_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1d95837c8:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1d9583850:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_1d9583597:;
				};
			};
			if ((_15617_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1d9582442;
			};
		}
	_iter_next_1d9582442:;
	}
	_iter_end_1d9582442:;;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _17217_tokens = (*_self_)._field_tokens.slice((_15513_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _17318_parts;;
	jule::Slice<_21868a483_Log> _17325_errors;;
	std::tie(_17318_parts,_17325_errors) = _1d6b3d308_parts(_17217_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17325_errors);
	};
	return _17318_parts;
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b5200e_build_ident(_1d6b50936_TypeBuilder* _self_) {
	jule::Bool _18117_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_18117_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _1d6b517c2_build_namespace(&(*_self_));
	};
	jule::Ptr<_1ee538d51_Token> _18517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1d55a9c54_IdentTypeDecl> _18617_it = jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_18517_token, ._field_ident=_18517_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d55a968d_TypeDecl> _19217_itd = jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_18517_token, ._field_kind=static_cast<jule::Any>(_18617_it)});;
	if (((!(_18117_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_18617_it.get()._field_generics=_1d6b51a36_build_generics(&(*_self_));
		return _19217_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1d6b50eca_push_err(&(*_self_), _18517_token,jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1d6b50eca_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	jule::Ptr<_1d55aa3a3_SubIdentTypeDecl> _20917_sit = jule::new_ptr<_1d55aa3a3_SubIdentTypeDecl>();;
	_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_18617_it);;
	jule::Ptr<_1d55a968d_TypeDecl> _21117_ident = _1d6b5200e_build_ident(&(*_self_));;
	{
		auto &_match_expr{ _21117_ident.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d55a9c54_IdentTypeDecl>>()) {
			_case_begin_1d958da36:;
			{
				_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_21117_ident.get()._field_kind.operator jule::Ptr<_1d55a9c54_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>>()) {
			_case_begin_1d958db02:;
			{
				_20917_sit.get()._field_idents=jule::append(_20917_sit.get()._field_idents,_21117_ident.get()._field_kind.operator jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>().get()._field_idents);
			}
		}
		_match_end_1d958d9d1:;
	};
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_18517_token, ._field_kind=static_cast<jule::Any>(_20917_sit)});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b52273_build_cpp_link(_1d6b50936_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_1d6b50eca_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1d55a968d_TypeDecl> _23017_t = _1d6b5200e_build_ident(&(*_self_));;
	_23017_t.get()._field_kind.operator jule::Ptr<_1d55a9c54_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _23017_t;
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b524d7_build_fn(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1ee538d51_Token> _23617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1d55bb56d_FnDecl> _23717_f = _1d6b45585_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23717_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1d55bb8c0_is_anon(_23717_f.ptr())))) {
		_1d6b50eca_push_err(&(*_self_), _23717_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_23617_token, ._field_kind=static_cast<jule::Any>(_23717_f)});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b5274b_build_ptr(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1ee538d51_Token> _25117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1d6b50eca_push_err(&(*_self_), _25117_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_25117_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55ab519_PtrTypeDecl>(_1d55ab519_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_1d55a968d_TypeDecl> _26817_elem = _1d6b53a7c_step(&(*_self_));;
	if ((_26817_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_25117_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55ab519_PtrTypeDecl>(_1d55ab519_PtrTypeDecl{._field_elem=_26817_elem}))});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b529b0_build_sptr(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1ee538d51_Token> _28217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1d6b50eca_push_err(&(*_self_), _28217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d55a968d_TypeDecl> _28917_elem = _1d6b53a7c_step(&(*_self_));;
	if ((_28917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_28217_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55aaa46_SptrTypeDecl>(_1d55aaa46_SptrTypeDecl{._field_elem=_28917_elem}))});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b52c24_build_op(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1ee538d51_Token> _30317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _30317_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d959c160:;
			{
				return _1d6b5274b_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1d959c1c6:;
			{
				return _1d6b529b0_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1d959c23c:;
			{
				return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55aaa46_SptrTypeDecl>(_1d55aaa46_SptrTypeDecl{._field_elem=_1d6b529b0_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1d959c0a5:;
			{
				_1d6b50eca_push_err(&(*_self_), _30317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1d959c00b:;
	};
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b52e88_build_slc(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1ee538d51_Token> _32217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d55a968d_TypeDecl> _32417_elem = _1d6b53a7c_step(&(*_self_));;
	if ((_32417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_32217_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55aae42_SlcTypeDecl>(_1d55aae42_SlcTypeDecl{._field_elem=_32417_elem}))});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b531ec_build_arr(_1d6b50936_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1d6b50eca_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34513_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_1d55a968d_TypeDecl> _34717_elem = _1d6b53a7c_step(&(*_self_));;
	if ((_34717_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d55abb9b_ArrTypeDecl> _35217_arrt = jule::new_ptr<_1d55abb9b_ArrTypeDecl>(_1d55abb9b_ArrTypeDecl{._field_elem=_34717_elem, });;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _35617_expr_tokens = (*_self_)._field_tokens.slice(0LL,_34513_expr_delta);;
	std::tie(std::ignore,_35617_expr_tokens) = _1d6b3c9ab_range_last(_35617_expr_tokens);
	_35617_expr_tokens=_35617_expr_tokens.slice(1LL,(_35617_expr_tokens.len() - 1LL));
	jule::Ptr<_1ee538d51_Token> _35917_token = _35617_expr_tokens[0LL];;
	if ((((_35617_expr_tokens.len() == 1LL) && (_35917_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_35917_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_35217_arrt.get()._field_size=_1d6b405e6_build_expr((*_self_)._field_p, _35617_expr_tokens);
	};
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_35917_token, ._field_kind=static_cast<jule::Any>(_35217_arrt)});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b535a4_build_map(_1d6b50936_TypeBuilder* _self_, jule::I64 _37228_colon, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _37245_tokens) {
	jule::Ptr<_1ee538d51_Token> _37317_colon_token = (*_self_)._field_tokens[_37228_colon];;
	if (((_37228_colon == 0LL) || ((_37228_colon + 1LL) >= _37245_tokens.len()))) {
		_1d6b50eca_push_err(&(*_self_), _37317_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _37817_key_tokens = _37245_tokens.slice(0LL,_37228_colon);;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _37917_val_tokens = _37245_tokens.slice((_37228_colon + 1LL));;
	jule::Ptr<_1d55ac3e9_MapTypeDecl> _38017_mapt = jule::new_ptr<_1d55ac3e9_MapTypeDecl>(_1d55ac3e9_MapTypeDecl{});;
	jule::I64 _38217_j = 0LL;;
	jule::Ptr<_1d55a968d_TypeDecl> _38318_keyt;;
	jule::Bool _38328_ok;;
	std::tie(_38318_keyt,_38328_ok) = _1d6b418d3_build_type((*_self_)._field_p, _37817_key_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37817_key_tokens.len())) {
		_1d6b50eca_push_err(&(*_self_), _37817_key_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_key=_38318_keyt;
	_38217_j=0LL;
	jule::Ptr<_1d55a968d_TypeDecl> _39218_valt;;
	std::tie(_39218_valt,_38328_ok) = _1d6b418d3_build_type((*_self_)._field_p, _37917_val_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37917_val_tokens.len())) {
		_1d6b50eca_push_err(&(*_self_), _37917_val_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_val=_39218_valt;
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_37317_colon_token, ._field_kind=static_cast<jule::Any>(_38017_mapt)});
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b53818_build_enumerable(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1ee538d51_Token> _40717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40717_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_40717_token.get()._field_kind != jule::Str("[", 1)))) {
		_1d6b50eca_push_err(&(*_self_), _40717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40717_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40717_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_40717_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1d6b52e88_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _42118_map_tokens;;
	jule::I64 _42130_colon;;
	std::tie(_42118_map_tokens,_42130_colon) = _1d6b5042a_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_42130_colon == -1LL)) {
		return _1d6b531ec_build_arr(&(*_self_));
	};
	return _1d6b535a4_build_map(&(*_self_), _42130_colon,_42118_map_tokens);
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b53a7c_step(_1d6b50936_TypeBuilder* _self_) {
	jule::Ptr<_1ee538d51_Token> _43013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _43013_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d95b253d:;
			{
				return _1d6b5155d_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1d95b25a4:;
			{
				return _1d6b5200e_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d95b261a:;
			{
				return _1d6b52273_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1d95b2ede:;
			{
				return _1d6b524d7_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d95b3055:;
			{
				return _1d6b52c24_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d95b30bb:;
			{
				return _1d6b53818_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1d95b2450:;
			{
				((*((*_self_)._field_i)))++;
				_1d6b50eca_push_err(&(*_self_), _43013_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1d95b23a6:;
	};
}



inline std::tuple<jule::Ptr<_1d55a968d_TypeDecl>,jule::Bool> _1d6b53ce1_build(_1d6b50936_TypeBuilder* _self_) {
	jule::Bool _45344_ok = jule::Bool();
	jule::Ptr<_1d55a968d_TypeDecl> _45417_root = _1d6b53a7c_step(&(*_self_));;
	if ((_45417_root == nullptr)) {
		_45344_ok = false;
		return std::make_tuple(_1d6b4ed75_build_void_type(),_45344_ok);
	};
	_45344_ok = true;
	return std::make_tuple(_45417_root,_45344_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6b50936_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d647966c_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1d647b020_push_err(_1d647a9c0_DirectiveEval* _self_, jule::Ptr<_1ee538d51_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_21868a483_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_21868a8c3_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d647b3c7_split_operans(_1d647a9c0_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1d95d97b8:;
						{
							(_3717_range_n)++;
							goto _iter_next_1d95d86b8;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1d95d982e:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1d95d95a9:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1d95d86b8;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1d95d86b8:;
	}
	_iter_end_1d95d86b8:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_1d647b020_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1d647b6d5_eval_directive_ident(_1d647a9c0_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1d95dcd60:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1d95dcd60:;
			++it;
			goto _iter_begin_1d95dcd60;
		}
		_iter_end_1d95dcd60:;
	};
	return false;
}



inline jule::Bool _1d647b9e3_eval_directive_part(_1d647a9c0_DirectiveEval* _self_, jule::Slice<jule::Ptr<_1ee538d51_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_1d647b020_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1d647b6d5_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1d647bc57_eval(_1d647a9c0_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1d647b020_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _11317_logical_or_parts = _1d647b3c7_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1d95e3b24:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _12021_logical_and_parts = _1d647b3c7_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1d95e541c:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1ee538d51_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_1ee538d51_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_1ee538d51_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_1d647b020_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _1d647b9e3_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1d95e541c:;
						++it;
						goto _iter_begin_1d95e541c;
					}
					_iter_end_1d95e541c:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1d95e3b24:;
			++it;
			goto _iter_begin_1d95e3b24;
		}
		_iter_end_1d95e3b24:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1d647a9c0_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d6573689_JuleImporter> static__1d65874b1_new(_1d647966c_CompileInfo _5823_info) {
	jule::Ptr<_1d6573689_JuleImporter> _5917_imp = jule::new_ptr<_1d6573689_JuleImporter>(_1d6573689_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1ed63c6d6_PATH_STDLIB}), });;
	_1d6479e86_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>> _1d6599d86_all_packages(_1d6573689_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1d659e3a7_set_mod_path(_1d6573689_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1d65cd040_get_mod_path(_1d6573689_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1d65dd490_mod_by_id(_1d6573689_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d65e77b8_get_import(_1d6573689_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1d95ec9a7:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1d95ec9a7:;
			++it;
			goto _iter_begin_1d95ec9a7;
		}
		_iter_end_1d95ec9a7:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d5574b0e_Ast>>,jule::Slice<_21868a483_Log>> _1d65e8753_import_package(_1d6573689_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_2316d6a05_DirEntry>> _9717_dirents = ({
		auto except = static__2318742be_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_21868a483_Log>::make({_1d656ccb0_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1d648aa13_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_21868a483_Log> _10525_errs = _1d648ac99_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1d5574b0e_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1d5574b0e_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1d9601637:;
		if (it != expr.end()) {
			jule::Ptr<_2316d6a05_DirEntry> _11316_dirent = *it;
			{
				if ((_2316d8078_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_2185b7adb_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1d9601637;
				};
				jule::Str _11917__path = _218632a24_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_1ee53e1db_File> _12021_file = _1ee54071a_new_file_set(_11917__path);;
				_1ee53e86d_fill(_12021_file.ptr(), _1d65513e2_read_buff(_12021_file.get()._field_path));
				jule::Slice<_21868a483_Log> _12221_errors = _1ee54b182_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1d6ac11e2_FileInfo> _12721_finfo = _1d6ac8ea8_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_1d645eed2_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1d9601637;
				};
				jule::Bool _13718_r;;
				jule::Slice<_21868a483_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1d66239d1_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1d9601637;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1d9601637:;
			++it;
			goto _iter_begin_1d9601637;
		}
		_iter_end_1d9601637:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1d6609a72_imported(_1d6573689_JuleImporter* _self_, jule::Ptr<_1d62743bd_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1d96078e6:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1d96078e6:;
			++it;
			goto _iter_begin_1d96078e6;
		}
		_iter_end_1d96078e6:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1d96092cc:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1d96092cc:;
				++it;
				_16217_i++;
				goto _iter_begin_1d96092cc;
			}
			_iter_end_1d96092cc:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_21868a483_Log>> _1d66239d1_is_pass_build_directives(_1d6573689_JuleImporter* _self_, jule::Ptr<_1d5574b0e_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1d960c555:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1d960c555;
				};
				_1d647a9c0_DirectiveEval _18421_de = _1d647a9c0_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1d647bc57_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1d960c555:;
			++it;
			goto _iter_begin_1d960c555;
		}
		_iter_end_1d960c555:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6573689_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d67916a9_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d962ea2d_is_common_ordered(jule::Slice<jule::Ptr<_1d5599dba_Struct>>& _1837_s, jule::Ptr<_1d5599dba_Struct> _1846_t) {
	jule::Ptr<_1d5599dba_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1d5599dba_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1d96329ba:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1d96329ba;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1d96329ba:;
			++it;
			goto _iter_begin_1d96329ba;
		}
		_iter_end_1d96329ba:;
	};
	return false;
}

inline jule::Bool _1d9637ddd_is_common_ordered(jule::Slice<jule::Ptr<_1d6298ea3_Var>>& _1837_s, jule::Ptr<_1d6298ea3_Var> _1846_t) {
	jule::Ptr<_1d6298ea3_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1d6298ea3_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1d963ad36:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1d963ad36;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1d963ad36:;
			++it;
			goto _iter_begin_1d963ad36;
		}
		_iter_end_1d963ad36:;
	};
	return false;
}



inline void _1d962aa90_order_common(jule::Slice<jule::Ptr<_1d5599dba_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1d962bdc1:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1d5599dba_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1d962bdc1:;
			++it;
			_4114_j++;
			goto _iter_begin_1d962bdc1;
		}
		_iter_end_1d962bdc1:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1d962ea2d_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1d962e445:;
			}
			_iter_end_1d962e445:;;
		}
	_iter_next_1d962bd49:;
	}
	_iter_end_1d962bd49:;;
}

inline void _1d962b3cb_order_common(jule::Slice<jule::Ptr<_1d6298ea3_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1d9635281:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1d6298ea3_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1d9635281:;
			++it;
			_4114_j++;
			goto _iter_begin_1d9635281;
		}
		_iter_end_1d9635281:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1d9637ddd_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1d9637805:;
			}
			_iter_end_1d9637805:;;
		}
	_iter_next_1d9635209:;
	}
	_iter_end_1d9635209:;;
}



inline void static__1d6776e0e_order_structures(jule::Slice<jule::Ptr<_1d5599dba_Struct>>& _6141_structs) {
	_1d962aa90_order_common(_6141_structs);
}



inline void static__1d68da24d_order_vars(jule::Slice<jule::Ptr<_1d6298ea3_Var>>& _6735_vars) {
	_1d962b3cb_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6419909_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6c19417_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1d6c4bec7_optimize_child(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d6255beb_Scope>& _3939_s) {
	jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _4017_sdc = jule::new_ptr<_1d6c4b9ee_ScopeDeadCode>(_1d6c4b9ee_ScopeDeadCode{._field_parent=_self_, ._field_s=_3939_s, ._field_stmts=(&(_3939_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1d6c4e617_optimize_stmts(_4017_sdc);
	};
}



inline void _1d6c4c26e_optimize_body_child_exceptional(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d6255beb_Scope>& _5056_s) {
	jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _5117_sdc = jule::new_ptr<_1d6c4b9ee_ScopeDeadCode>(_1d6c4b9ee_ScopeDeadCode{._field_s=_5056_s, ._field_stmts=(&(_5056_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1d6c4e617_optimize_stmts(_5117_sdc);
	};
}



inline void _1d6c4c505_optimize_body_child(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d6255beb_Scope>& _6144_s) {
	jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _6217_sdc = jule::new_ptr<_1d6c4b9ee_ScopeDeadCode>(_1d6c4b9ee_ScopeDeadCode{._field_s=_6144_s, ._field_stmts=(&(_6144_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1d6c4e617_optimize_stmts(_6217_sdc);
	};
}



inline void _1d6c4c77a_optimize_expr_model(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Any& _7144_model) {
	_1d6c5098c_ExprDeadCode _7213_edc = static__1d6c51086_new(_self_);;
	_1d6c56531_optimize(&_7213_edc, _7144_model);
}



inline void _1d6c4c956_eliminate_followed(_1d6c4b9ee_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1d96b09e3:;
	}
	_iter_end_1d96b09e3:;;
}



inline void _1d6c4cbcb_push_goto(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d625843a_GotoSt> _9233_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9233_gt.get()._field_ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_1d96b341e:;
	}
	_iter_end_1d96b341e:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1d625843a_GotoSt>>::make({_9233_gt}));
}



inline void _1d6c4ce51_push_label(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d625814e_Label> _10234_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10234_l.get()._field_ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1d96b518a;
			};
			(_10317_i)++;
		}
	_iter_next_1d96b518a:;
	}
	_iter_end_1d96b518a:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1d625814e_Label>>::make({_10234_l}));
}



inline void _1d6c4d1c6_optimize_range_iter(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d62575b0_RangeIter> _11543_it) {
	_1d6c4c77a_optimize_expr_model(_self_, _11543_it.get()._field_expr.get()._field_model);
	_1d6c4c505_optimize_body_child(_self_, _11543_it.get()._field_scope);
}



inline void _1d6c4d44b_optimize_while_iter(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d6256bca_WhileIter> _12043_it) {
	_1d6c4c77a_optimize_expr_model(_self_, _12043_it.get()._field_expr);
	if ((_12043_it.get()._field_next != nullptr)) {
		_1d6c4e43b_optimize_stmt(_self_, _12043_it.get()._field_next);
	};
	_1d6c4c505_optimize_body_child(_self_, _12043_it.get()._field_scope);
}



inline void _1d6c4d6c1_optimize_inf_iter(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d6256757_InfIter> _12841_it) {
	_1d6c4c505_optimize_body_child(_self_, _12841_it.get()._field_scope);
}



inline void _1d6c4d946_optimize_conditional(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d625646b_Conditional> _13244_c) {
	{
		auto &expr = _13244_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1d96bac51:;
		if (it != expr.end()) {
			jule::Ptr<_1d6255dd8_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1d6c4c77a_optimize_expr_model(_self_, _13321_case.get()._field_expr);
					_1d6c4c505_optimize_body_child(_self_, _13321_case.get()._field_scope);
				};
			}
			_iter_next_1d96bac51:;
			++it;
			goto _iter_begin_1d96bac51;
		}
		_iter_end_1d96bac51:;
	};
	if ((_13244_c.get()._field_default != nullptr)) {
		if ((_13244_c.get()._field_elifs.len() == 0LL)) {
			_1d6c4bec7_optimize_child(_self_, _13244_c.get()._field_default.get()._field_scope);
		} else {
			_1d6c4c505_optimize_body_child(_self_, _13244_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1d6c4dbbb_optimize_match(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d625965b_Match> _15038_m) {
	{
		auto &expr = _15038_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d96bd8d0:;
		if (it != expr.end()) {
			jule::Ptr<_1d625a1a6_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1d96be24e:;
					if (it != expr.end()) {
						jule::Ptr<_1d62e16b0_Data> _15225_expr = *it;
						{
							_1d6c4c77a_optimize_expr_model(_self_, _15225_expr.get()._field_model);
						}
						_iter_next_1d96be24e:;
						++it;
						goto _iter_begin_1d96be24e;
					}
					_iter_end_1d96be24e:;
				};
				_1d6c4c505_optimize_body_child(_self_, _15121_case.get()._field_scope);
			}
			_iter_next_1d96bd8d0:;
			++it;
			goto _iter_begin_1d96bd8d0;
		}
		_iter_end_1d96bd8d0:;
	};
	if ((_15038_m.get()._field_default != nullptr)) {
		if ((_15038_m.get()._field_cases.len() == 0LL)) {
			_1d6c4bec7_optimize_child(_self_, _15038_m.get()._field_default.get()._field_scope);
		} else {
			_1d6c4c505_optimize_body_child(_self_, _15038_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1d6c4de41_optimize_assign(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d6258c65_Assign> _16839_assign) {
	_1d6c4c77a_optimize_expr_model(_self_, _16839_assign.get()._field_l.get()._field_model);
	_1d6c4c77a_optimize_expr_model(_self_, _16839_assign.get()._field_r.get()._field_model);
}



inline void _1d6c4e1b6_optimize_multi_assign(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Ptr<_1d625911c_MultiAssign> _17345_assign) {
	{
		auto &expr = _17345_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1d96c26e7:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1d6c4c77a_optimize_expr_model(_self_, _17421_l);
				};
			}
			_iter_next_1d96c26e7:;
			++it;
			goto _iter_begin_1d96c26e7;
		}
		_iter_end_1d96c26e7:;
	};
	_1d6c4c77a_optimize_expr_model(_self_, _17345_assign.get()._field_r);
}



inline void _1d6c4e43b_optimize_stmt(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_, jule::Any _18237_st) {
	{
		auto &_match_expr{ _18237_st };
		
		if (_match_expr.type_is<jule::Ptr<_1d6255beb_Scope>>()) {
			_case_begin_1d96c3d36:;
			{
				jule::Ptr<_1d6255beb_Scope> _18521_scope = _18237_st.operator jule::Ptr<_1d6255beb_Scope>();;
				if (_18521_scope.get()._field_deferred) {
					_1d6c4e903_eliminate_dead_code_of_scope(_18521_scope);
				} else {
					_1d6c4bec7_optimize_child(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62575b0_RangeIter>>()) {
			_case_begin_1d96c3eac:;
			{
				_1d6c4d1c6_optimize_range_iter(_self_, _18237_st.operator jule::Ptr<_1d62575b0_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256bca_WhileIter>>()) {
			_case_begin_1d96c4023:;
			{
				_1d6c4d44b_optimize_while_iter(_self_, _18237_st.operator jule::Ptr<_1d6256bca_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256757_InfIter>>()) {
			_case_begin_1d96c4089:;
			{
				_1d6c4d6c1_optimize_inf_iter(_self_, _18237_st.operator jule::Ptr<_1d6256757_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625646b_Conditional>>()) {
			_case_begin_1d96c4111:;
			{
				_1d6c4d946_optimize_conditional(_self_, _18237_st.operator jule::Ptr<_1d625646b_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625965b_Match>>()) {
			_case_begin_1d96c4188:;
			{
				_1d6c4dbbb_optimize_match(_self_, _18237_st.operator jule::Ptr<_1d625965b_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6258c65_Assign>>()) {
			_case_begin_1d96c4210:;
			{
				_1d6c4de41_optimize_assign(_self_, _18237_st.operator jule::Ptr<_1d6258c65_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625911c_MultiAssign>>()) {
			_case_begin_1d96c4287:;
			{
				_1d6c4e1b6_optimize_multi_assign(_self_, _18237_st.operator jule::Ptr<_1d625911c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d96c430e:;
			{
				jule::Ptr<_1d62e16b0_Data> _20621_d = _18237_st.operator jule::Ptr<_1d62e16b0_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1d96c3e46;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>>()) {
						_case_begin_1d96ca216:;
						{
							_1d6c4c956_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_1d96c9ab7:;
						{
							_1d6c4c77a_optimize_expr_model(_self_, _20621_d.get()._field_model);
						}
					}
					_match_end_1d96c9a62:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625abce_RetSt>>()) {
			_case_begin_1d96c4386:;
			{
				_1d6c4c956_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625843a_GotoSt>>()) {
			_case_begin_1d96c440d:;
			{
				_1d6c4cbcb_push_goto(_self_, _18237_st.operator jule::Ptr<_1d625843a_GotoSt>());
				_1d6c4c956_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625814e_Label>>()) {
			_case_begin_1d96c4485:;
			{
				_1d6c4ce51_push_label(_self_, _18237_st.operator jule::Ptr<_1d625814e_Label>());
			}
		}
		_match_end_1d96c3e46:;
	};
}



inline void _1d6c4e617_optimize_stmts(jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1d6c4e43b_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1d96c78b7:;
	}
	_iter_end_1d96c78b7:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6c4b9ee_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1d6c5098c_ExprDeadCode static__1d6c51086_new(jule::Ptr<_1d6c4b9ee_ScopeDeadCode>& _4724_s) {
	return _1d6c5098c_ExprDeadCode{._field_s=_4724_s};
}



inline void _1d6c5130b_binary(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d567337d_BinopExprModel> _5325_m) {
	_1d6c56531_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_1d6c56531_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _1d6c51581_unary(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d567356a_UnaryExprModel> _5824_m) {
	_1d6c56531_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _1d6c51806_structure_lit(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5673944_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1d96d01d8:;
		if (it != expr.end()) {
			jule::Ptr<_1d5673757_StructArgExprModel> _6321_arg = *it;
			{
				_1d6c56531_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_1d96d01d8:;
			++it;
			goto _iter_begin_1d96d01d8;
		}
		_iter_end_1d96d01d8:;
	};
}



inline void _1d6c51a7b_alloc_structure(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5673b31_AllocStructLitExprModel> _6834_m) {
	_1d6c51806_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _1d6c51d01_casting(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5673d1d_CastingExprModel> _7226_m) {
	_1d6c56531_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _1d6c52076_args(_1d6c5098c_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1d96d2482:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1d6c56531_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1d96d2482:;
			++it;
			goto _iter_begin_1d96d2482;
		}
		_iter_end_1d96d2482:;
	};
}



inline void _1d6c522eb_func_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d567400a_FnCallExprModel> _8228_m) {
	_1d6c56531_optimize(&(*_self_), _8228_m.get()._field_expr);
	_1d6c52076_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_1d6c4c26e_optimize_body_child_exceptional((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _1d6c52571_slice(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56741e7_SliceExprModel> _9024_m) {
	_1d6c52076_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _1d6c527e6_array(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d567566b_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_1d6c56531_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_1d6c52076_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _1d6c52a6b_indexing(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56743d4_IndexingExprModel> _10127_m) {
	_1d6c56531_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_1d6c56531_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _1d6c52ce1_anon_func(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56745c1_AnonFnExprModel> _10628_m) {
	_1d6c4e903_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _1d6c53066_map(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d567499a_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1d96d8411:;
		if (it != expr.end()) {
			jule::Ptr<_1d56747ad_KeyValPairExprModel> _11121_pair = *it;
			{
				_1d6c56531_optimize(&(*_self_), _11121_pair.get()._field_key);
				_1d6c56531_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_1d96d8411:;
			++it;
			goto _iter_begin_1d96d8411;
		}
		_iter_end_1d96d8411:;
	};
}



inline void _1d6c532db_slicing(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5674b87_SlicingExprModel> _11726_m) {
	_1d6c56531_optimize(&(*_self_), _11726_m.get()._field_expr);
	_1d6c56531_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_1d6c56531_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _1d6c53561_trait_sub(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5674d74_TraitSubIdentExprModel> _12528_m) {
	_1d6c56531_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _1d6c537d6_structure_sub(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5675292_StructSubIdentExprModel> _12932_m) {
	_1d6c56531_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _1d6c53a5b_common_sub(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5675a45_CommonSubIdentExprModel> _13329_m) {
	_1d6c56531_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _1d6c53cd1_tuple(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5675c32_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1d96dc8ee:;
		if (it != expr.end()) {
			jule::Ptr<_1d62e16b0_Data> _13821_d = *it;
			{
				_1d6c56531_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_1d96dc8ee:;
			++it;
			goto _iter_begin_1d96dc8ee;
		}
		_iter_end_1d96dc8ee:;
	};
}



inline void _1d6c54056_new_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56764d5_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_1d6c56531_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _1d6c542cb_out_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel> _14927_m) {
	_1d6c56531_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _1d6c54551_outln_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel> _15329_m) {
	_1d6c56531_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _1d6c547c6_panic_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel> _15729_m) {
	_1d6c56531_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _1d6c54a4b_assert_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel> _16130_m) {
	_1d6c56531_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _1d6c54cc1_error_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel> _16529_m) {
	_1d6c56531_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _1d6c55046_make_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_1d6c56531_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_1d6c56531_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _1d6c552bb_append_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel> _17830_m) {
	_1d6c56531_optimize(&(*_self_), _17830_m.get()._field_dest);
	_1d6c56531_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _1d6c55541_clone_call(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel> _18329_m) {
	_1d6c56531_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _1d6c557b6_sizeof(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5675061_SizeofExprModel> _18725_m) {
	_1d6c56531_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _1d6c55a3b_alignof(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d56777c2_AlignofExprModel> _19126_m) {
	_1d6c56531_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _1d6c55cb1_integrated_to_str(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5677b9b_IntegratedToStrExprModel> _19536_m) {
	_1d6c56531_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _1d6c56036_free(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5678075_FreeExprModel> _19923_m) {
	_1d6c56531_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _1d6c562ab_backend_emit(_1d6c5098c_ExprDeadCode* _self_, jule::Ptr<_1d5677d88_BackendEmitExprModel> _20331_m) {
	_1d6c52076_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _1d6c56531_optimize(_1d6c5098c_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d567337d_BinopExprModel>>()) {
			_case_begin_1d96e7ac4:;
			{
				_1d6c5130b_binary(&(*_self_), _20728_model.operator jule::Ptr<_1d567337d_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567356a_UnaryExprModel>>()) {
			_case_begin_1d96e7b4b:;
			{
				_1d6c51581_unary(&(*_self_), _20728_model.operator jule::Ptr<_1d567356a_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673944_StructLitExprModel>>()) {
			_case_begin_1d96e7bc3:;
			{
				_1d6c51806_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_1d5673944_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673b31_AllocStructLitExprModel>>()) {
			_case_begin_1d96e8069:;
			{
				_1d6c51a7b_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_1d5673b31_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673d1d_CastingExprModel>>()) {
			_case_begin_1d96e80d0:;
			{
				_1d6c51d01_casting(&(*_self_), _20728_model.operator jule::Ptr<_1d5673d1d_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
			_case_begin_1d96e8157:;
			{
				_1d6c522eb_func_call(&(*_self_), _20728_model.operator jule::Ptr<_1d567400a_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56741e7_SliceExprModel>>()) {
			_case_begin_1d96e81ce:;
			{
				_1d6c52571_slice(&(*_self_), _20728_model.operator jule::Ptr<_1d56741e7_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567566b_ArrayExprModel>>()) {
			_case_begin_1d96e8256:;
			{
				_1d6c527e6_array(&(*_self_), _20728_model.operator jule::Ptr<_1d567566b_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56743d4_IndexingExprModel>>()) {
			_case_begin_1d96e82cd:;
			{
				_1d6c52a6b_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1d56743d4_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56745c1_AnonFnExprModel>>()) {
			_case_begin_1d96e8355:;
			{
				_1d6c52ce1_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_1d56745c1_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567499a_MapExprModel>>()) {
			_case_begin_1d96e83cc:;
			{
				_1d6c53066_map(&(*_self_), _20728_model.operator jule::Ptr<_1d567499a_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674b87_SlicingExprModel>>()) {
			_case_begin_1d96e8454:;
			{
				_1d6c532db_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1d5674b87_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674d74_TraitSubIdentExprModel>>()) {
			_case_begin_1d96e84cb:;
			{
				_1d6c53561_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_1d5674d74_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
			_case_begin_1d96e8553:;
			{
				_1d6c537d6_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675a45_CommonSubIdentExprModel>>()) {
			_case_begin_1d96e85ca:;
			{
				_1d6c53a5b_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_1d5675a45_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675c32_TupleExprModel>>()) {
			_case_begin_1d96e8652:;
			{
				_1d6c53cd1_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1d5675c32_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>>()) {
			_case_begin_1d96e86c9:;
			{
				_1d6c542cb_out_call(&(*_self_), _20728_model.operator jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1d96e8751:;
			{
				_1d6c54551_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>>()) {
			_case_begin_1d96e87c8:;
			{
				_1d6c54056_new_call(&(*_self_), _20728_model.operator jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>>()) {
			_case_begin_1d96e8850:;
			{
				_1d6c547c6_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>>()) {
			_case_begin_1d96e88c7:;
			{
				_1d6c54a4b_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>()) {
			_case_begin_1d96e894e:;
			{
				_1d6c54cc1_error_call(&(*_self_), _20728_model.operator jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>>()) {
			_case_begin_1d96e89c6:;
			{
				_1d6c55046_make_call(&(*_self_), _20728_model.operator jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>>()) {
			_case_begin_1d96e8a4d:;
			{
				_1d6c552bb_append_call(&(*_self_), _20728_model.operator jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>>()) {
			_case_begin_1d96e8ac5:;
			{
				_1d6c55541_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675061_SizeofExprModel>>()) {
			_case_begin_1d96e8b4c:;
			{
				_1d6c557b6_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1d5675061_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56777c2_AlignofExprModel>>()) {
			_case_begin_1d96e8bc4:;
			{
				_1d6c55a3b_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1d56777c2_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>>()) {
			_case_begin_1d96e8c4b:;
			{
				_1d6c55cb1_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5678075_FreeExprModel>>()) {
			_case_begin_1d96e8cc3:;
			{
				_1d6c56036_free(&(*_self_), _20728_model.operator jule::Ptr<_1d5678075_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677d88_BackendEmitExprModel>>()) {
			_case_begin_1d96e8d4a:;
			{
				_1d6c562ab_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_1d5677d88_BackendEmitExprModel>());
			}
		}
		_match_end_1d96e7cc2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d6c5098c_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d50b232d_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d53dbc84_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d50e0636_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d53aee66_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d52e0715_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d52c0959_ScopeOptimizer> static__230962b61_new(jule::Ptr<_1d6255beb_Scope> _4527_scope) {
	return jule::new_ptr<_1d52c0959_ScopeOptimizer>(_1d52c0959_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _1d4e05517_set_current_stmt(_1d52c0959_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5139_stmt))))));
}



inline void _1d4e0c794_optimize_data(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d62e16b0_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
			_case_begin_1d9733a44:;
			{
				jule::Ptr<_1d567400a_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1d567400a_FnCallExprModel>();;
				if (_2307697ae_PRODUCTION) {
					if (((!(_1d567e1e1_is_builtin(_5821_m.get()._field_func.ptr()))) && _1d506526a_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1d4e05517_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1d9733835:;
	};
	static__1d51394c6_optimize(_5536_d.get()._field_model);
}



inline void _1d4e16e30_optimize_var(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d6298ea3_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1d51394c6_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1d4e24228_optimize_conditional(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d625646b_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1d9736b02:;
		if (it != expr.end()) {
			jule::Ptr<_1d6255dd8_If> _7721_elif = *it;
			{
				static__1d51394c6_optimize(_7721_elif.get()._field_expr);
				_1d5058ba9_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1d9736b02:;
			++it;
			goto _iter_begin_1d9736b02;
		}
		_iter_end_1d9736b02:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1d5058ba9_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_1d4e1d2dd_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1d9738b59:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1d6255dd8_If> _9221_elif = *it;
			{
				if ((!(_1d50e852e_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1d9738b59;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1d62560c5_Else>(_1d62560c5_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1d9738b59;
			}
			_iter_next_1d9738b59:;
			++it;
			_9214_i++;
			goto _iter_begin_1d9738b59;
		}
		_iter_end_1d9738b59:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d6255dd8_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1d6255dd8_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1d511c0be_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1d973be9d:;
	}
	_iter_end_1d973be9d:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1d973d730:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1d6255dd8_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1d973d730:;
			++it;
			_12913_j++;
			goto _iter_begin_1d973d730;
		}
		_iter_end_1d973d730:;
	};
	if ((_12817_only != -1LL)) {
		_1d4e05517_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1d4e45876_build_default_constat_true_case(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d625a1a6_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1d625965b_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1d9740e2a;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1d625a75b_FallSt>>()) {
					_case_begin_1d97417dd:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1d9740e2a;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=static_cast<jule::Any>(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1d9742d2d:;
					{
						goto _iter_end_1d9740e2a;
					}
				}
				_match_end_1d9742c40:;
			};
		}
	_iter_next_1d9740e2a:;
	}
	_iter_end_1d9740e2a:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1d4e5d2a6_optimize_match(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d625965b_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d9744db8:;
		if (it != expr.end()) {
			jule::Ptr<_1d625a1a6_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1d9745759:;
					if (it != expr.end()) {
						jule::Ptr<_1d62e16b0_Data> _17325_expr = *it;
						{
							static__1d51394c6_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1d9745759:;
						++it;
						goto _iter_begin_1d9745759;
					}
					_iter_end_1d9745759:;
				};
				_1d5058ba9_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1d9744db8:;
			++it;
			goto _iter_begin_1d9744db8;
		}
		_iter_end_1d9744db8:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1d5058ba9_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_1d4e1d2dd_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d97474d6:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1d625a1a6_Case> _18925_case = *it;
			{
				if ((!(_1d5108066_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1d97474d6;
				};
				_18617_const_case=true;
				_1d4e45876_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1d97474d6;
			}
			_iter_next_1d97474d6:;
			++it;
			_18918_i++;
			goto _iter_begin_1d97474d6;
		}
		_iter_end_1d97474d6:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d625a1a6_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1d625a1a6_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1d512885b_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1d974a3c9:;
	}
	_iter_end_1d974a3c9:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d974b595:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1d625a1a6_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1d974b595:;
			++it;
			_21913_j++;
			goto _iter_begin_1d974b595;
		}
		_iter_end_1d974b595:;
	};
	if ((_21817_only != -1LL)) {
		_1d4e05517_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1d4e800ec_optimize_range_iter(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d62575b0_RangeIter> _23542_it) {
	static__1d51394c6_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1d5058ba9_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1d4e86d90_optimize_while_iter(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d6256bca_WhileIter> _24042_it) {
	static__1d51394c6_optimize(_24042_it.get()._field_expr);
	_1d50513ee_optimize_stmt(&(*_self_), _24042_it.get()._field_next);
	_1d5058ba9_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1d4e9890c_substr(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d6258c65_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d5674b87_SlicingExprModel>>()) {
			_case_begin_1d97507b9:;
			{
				jule::Ptr<_1d5674b87_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1d5674b87_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1d4e05517_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1d53aee66_MutSlicingExprModel>(_1d53aee66_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=_24921_sem.get()._field_expr, ._field_left=_24921_sem.get()._field_left, ._field_right=_24921_sem.get()._field_right})));
					return true;
				};
			}
		}
		_match_end_1d9750764:;
	};
	return false;
}



inline jule::Bool _1d4ea8873_str_insert(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d6258c65_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d567337d_BinopExprModel>>()) {
			_case_begin_1d9752bc8:;
			{
				jule::Ptr<_1d567337d_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1d567337d_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1d4e05517_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1d52e0715_StrInsertBeginExprModel>(_1d52e0715_StrInsertBeginExprModel{._field_dest=_26333_a.get()._field_l.get()._field_model, ._field_expr=_26621_m.get()._field_left.get()._field_model})));
					return true;
				};
			}
		}
		_match_end_1d9752b73:;
	};
	return false;
}



inline jule::Bool _1d4eb1150_str_assign(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d6258c65_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1d63218aa_Prim> _28213_lp = _1d631dee5_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1d6324ade_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1d4e9890c_substr(&(*_self_), _27833_a) || _1d4ea8873_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1d9756605:;
			{
				return true;
			}
		}
		_match_end_1d975656c:;
	};
	return false;
}



inline void _1d502e4dc_optimize_assign(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d6258c65_Assign> _29438_assign) {
	if ((_230783bc4_COPY && _1d4eb1150_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1d51394c6_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1d51394c6_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1d975866d:;
			{
				if ((_230953c51_MATH && (_1d6320447_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1d567337d_BinopExprModel>(_1d567337d_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__1d51394c6_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1d567337d_BinopExprModel>>()) {
							_case_begin_1d975a928:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1d5654dba_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=_30725_model;
								return;;
							}
						}
						_match_end_1d975ab15:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1d9758618:;
	};
	if (_23094dae7_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>>()) {
				_case_begin_1d975c694:;
				{
					jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1d56741e7_SliceExprModel>>()) {
							_case_begin_1d975d70b:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>() || _match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
										_case_begin_1d975dee2:;
										{
											_1d4e05517_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1d50e0636_PushToSliceExprModel>(_1d50e0636_PushToSliceExprModel{._field_dest=_32825_m.get()._field_dest, ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1d56741e7_SliceExprModel>()})));
										}
									}
									_match_end_1d975de8c:;
								};
							}
						}
						_match_end_1d975d552:;
					};
				}
			}
			_match_end_1d97591b8:;
		};
	};
}



inline void _1d503e013_optimize_multi_assign(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d625911c_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1d9758a8b:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1d51394c6_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=_34521_l;
				};
			}
			_iter_next_1d9758a8b:;
			++it;
			_34514_i++;
			goto _iter_begin_1d9758a8b;
		}
		_iter_end_1d9758a8b:;
	};
	static__1d51394c6_optimize(_34444_assign.get()._field_r);
}



inline void _1d504da39_optimize_ret(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d625abce_RetSt> _35435_r) {
	static__1d51394c6_optimize(_35435_r.get()._field_expr);
}



inline void _1d50513ee_optimize_stmt(_1d52c0959_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1d6255beb_Scope>>()) {
			_case_begin_1d9761bb5:;
			{
				_1d5058ba9_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1d6255beb_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d9761c2b:;
			{
				_1d4e0c794_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1d62e16b0_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d9761c92:;
			{
				_1d4e16e30_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1d6298ea3_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625646b_Conditional>>()) {
			_case_begin_1d9761d08:;
			{
				_1d4e24228_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1d625646b_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62575b0_RangeIter>>()) {
			_case_begin_1d9761d6e:;
			{
				_1d4e800ec_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1d62575b0_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256bca_WhileIter>>()) {
			_case_begin_1d9761dd5:;
			{
				_1d4e86d90_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1d6256bca_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256757_InfIter>>()) {
			_case_begin_1d9761e4b:;
			{
				_1d5058ba9_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1d6256757_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6258c65_Assign>>()) {
			_case_begin_1d9761eb2:;
			{
				_1d502e4dc_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1d6258c65_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625911c_MultiAssign>>()) {
			_case_begin_1d9762028:;
			{
				_1d503e013_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1d625911c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625965b_Match>>()) {
			_case_begin_1d97620a0:;
			{
				_1d4e5d2a6_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1d625965b_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625abce_RetSt>>()) {
			_case_begin_1d9762127:;
			{
				_1d504da39_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1d625abce_RetSt>());
			}
		}
		_match_end_1d9761a61:;
	};
}



inline void _1d5058ba9_optimize_child(_1d52c0959_ScopeOptimizer* _self_, jule::Ptr<_1d6255beb_Scope> _38537_child) {
	jule::Ptr<_1d52c0959_ScopeOptimizer> _38617_so = static__230962b61_new(_38537_child);;
	_1d505b607_optimize(_38617_so.ptr());
}



inline void _1d505b607_optimize(_1d52c0959_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1d9767da8:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1d50513ee_optimize_stmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1d9767da8:;
			++it;
			_39214_i++;
			goto _iter_begin_1d9767da8;
		}
		_iter_end_1d9767da8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d52c0959_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1d51394c6_optimize(jule::Any& _5533_model) {
	if (_1d6b55e03_expr_enabled) {
		jule::Ptr<_1d52bce51_ExprOptimizer> _5821_exop = jule::new_ptr<_1d52bce51_ExprOptimizer>(_1d52bce51_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_1d4eb9d5c_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1d51444c0_str_cond(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d567337d_BinopExprModel> _6527_m) {
	jule::Ptr<_1d63218aa_Prim> _6613_lp = _1d631dee5_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1d6324ade_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
			_case_begin_1d9772863:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1d977280d:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
			_case_begin_1d9773864:;
			{
				goto _match_end_1d9773776;
			}
		}
		else {
			_case_begin_1d97737dc:;
			{
				return true;
			}
		}
		_match_end_1d9773776:;
	};
	_julec_label_opt:;
	jule::Ptr<_1d561288e_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_1d561288e_Const>();;
	if ((!(_1d566b72d_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1d9775129:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1d9775190:;
			{
				jule::Ptr<_1ee538d51_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1d567356a_UnaryExprModel>(_1d567356a_UnaryExprModel{._field_expr=jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675a45_CommonSubIdentExprModel>(_1d5675a45_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_1d9775008:;
	};
	return true;
}



inline void _1d514c660_binary(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d567337d_BinopExprModel> _11325_m) {
	static__1d51394c6_optimize(_11325_m.get()._field_left.get()._field_model);
	static__1d51394c6_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
			_case_begin_1d977912d:;
			{
				goto _match_end_1d9778b00;
			}
		}
		else {
			_case_begin_1d9778b99:;
			{
				return;;
			}
		}
		_match_end_1d9778b00:;
	};
	if ((_1d4e1d2dd_COND && _1d51444c0_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_230953c51_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d9779d32:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1d50ea90a_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1d561288e_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1d561288e_Const>();;
					_1d566c6c9_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1d9779d98:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1d50ea90a_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1d561288e_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1d561288e_Const>();;
					_1d566c6c9_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1d9779e0e:;
			{
				jule::Ptr<_1d561288e_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1d561288e_Const>();;
				jule::F64 _15017_d = _1d566c1ce_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1d566c454_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1d9779ccc:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1d50b232d_UnsafeBinopExprModel>(_1d50b232d_UnsafeBinopExprModel{._field_node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1d519c4d4_unary(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d567356a_UnaryExprModel> _16024_m) {
	static__1d51394c6_optimize(_16024_m.get()._field_expr.get()._field_model);
	if ((_1d4e1203a_PTR && (_16024_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1d567356a_UnaryExprModel>>()) {
				_case_begin_1d97821e1:;
				{
					jule::Ptr<_1d567356a_UnaryExprModel> _16525_um = _16024_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1d567356a_UnaryExprModel>();;
					if ((_16525_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_expr.get()._field_model;
					};
				}
			}
			_match_end_1d978218b:;
		};
	};
}



inline void _1d50e7b5a_structure_lit(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5673944_StructLitExprModel> _17332_m) {
	{
		auto &expr = _17332_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1d9783c3c:;
		if (it != expr.end()) {
			jule::Ptr<_1d5673757_StructArgExprModel> _17421_arg = *it;
			{
				static__1d51394c6_optimize(_17421_arg.get()._field_expr);
			}
			_iter_next_1d9783c3c:;
			++it;
			goto _iter_begin_1d9783c3c;
		}
		_iter_end_1d9783c3c:;
	};
}



inline void _1d51a4420_alloc_structure(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5673b31_AllocStructLitExprModel> _17934_m) {
	_1d50e7b5a_structure_lit(&(*_self_), _17934_m.get()._field_lit);
}



inline void _1d51ac22a_casting(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5673d1d_CastingExprModel> _18326_m) {
	static__1d51394c6_optimize(_18326_m.get()._field_expr);
}



inline void _1d51bae2b_args(_1d52bce51_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1d97857dd:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1d51394c6_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1d97857dd:;
			++it;
			_18814_i++;
			goto _iter_begin_1d97857dd;
		}
		_iter_end_1d97857dd:;
	};
}



inline void _1d51c54da_scope(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d6255beb_Scope>& _19425_s) {
	jule::Ptr<_1d52c0959_ScopeOptimizer> _19517_scopt = static__230962b61_new(_19425_s);;
	_1d505b607_optimize(_19517_scopt.ptr());
}



inline void _1d51c6530_func_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d567400a_FnCallExprModel> _19928_m) {
	static__1d51394c6_optimize(_19928_m.get()._field_expr);
	_1d51bae2b_args(&(*_self_), _19928_m.get()._field_args);
	if ((_19928_m.get()._field_except != nullptr)) {
		_1d51c54da_scope(&(*_self_), _19928_m.get()._field_except);
	};
}



inline void _1d51d5b16_slice(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56741e7_SliceExprModel> _20724_m) {
	_1d51bae2b_args(&(*_self_), _20724_m.get()._field_elems);
}



inline void _1d52c7686_array(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d567566b_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_elems.len() == 2LL) && (_21124_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_elems[0LL];;
		static__1d51394c6_optimize(_21321_elem);
		_21124_m.get()._field_elems[0LL]=_21321_elem;
	};
	_1d51bae2b_args(&(*_self_), _21124_m.get()._field_elems);
}



inline void _1d5314492_indexing(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56743d4_IndexingExprModel> _22027_m) {
	static__1d51394c6_optimize(_22027_m.get()._field_expr.get()._field_model);
	static__1d51394c6_optimize(_22027_m.get()._field_index.get()._field_model);
	if ((!(_2309616ba_ACCESS))) {
		return;;
	};
	jule::Bool _22613_array = (_1d631ec0a_arr(_22027_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22613_array && _1d62e2073_is_const(_22027_m.get()._field_index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1d53dbc84_UnsafeIndexingExprModel>(_1d53dbc84_UnsafeIndexingExprModel{._field_node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d978e41d:;
			{
				jule::Ptr<_1d6298ea3_Var> _23517_i = _22027_m.get()._field_index.get()._field_model.operator jule::Ptr<_1d6298ea3_Var>();;
				if ((_23517_i.get()._field_mutable || (_23517_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1d978e396;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
						_case_begin_1d9790bb1:;
						{
							jule::Ptr<_1d6298ea3_Var> _24121_r = _22027_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1d6298ea3_Var>();;
							if ((_23517_i.get()._field_iter_relation.get()._field_range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1d53dbc84_UnsafeIndexingExprModel>(_1d53dbc84_UnsafeIndexingExprModel{._field_node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1d9790b5b:;
				};
			}
		}
		_match_end_1d978e396:;
	};
}



inline void _1d5320d2d_anon_func(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56745c1_AnonFnExprModel> _25128_m) {
	_1d51c54da_scope(&(*_self_), _25128_m.get()._field_func.get()._field_scope);
}



inline void _1d53214d2_map(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d567499a_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1d9793345:;
		if (it != expr.end()) {
			jule::Ptr<_1d56747ad_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1d51394c6_optimize(_25621_pair.get()._field_key);
				static__1d51394c6_optimize(_25621_pair.get()._field_val);
			}
			_iter_next_1d9793345:;
			++it;
			goto _iter_begin_1d9793345;
		}
		_iter_end_1d9793345:;
	};
}



inline void _1d5321cb8_slicing(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5674b87_SlicingExprModel> _26226_m) {
	static__1d51394c6_optimize(_26226_m.get()._field_expr);
	static__1d51394c6_optimize(_26226_m.get()._field_left);
	if ((_26226_m.get()._field_right != nullptr)) {
		static__1d51394c6_optimize(_26226_m.get()._field_right);
	};
}



inline void _1d53317ab_trait_sub(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5674d74_TraitSubIdentExprModel> _27028_m) {
	static__1d51394c6_optimize(_27028_m.get()._field_expr);
}



inline void _1d531e4ad_structure_sub(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5675292_StructSubIdentExprModel> _27432_m) {
	static__1d51394c6_optimize(_27432_m.get()._field_expr.get()._field_model);
}



inline void _1d53be7a0_common_sub(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5675a45_CommonSubIdentExprModel> _27829_m) {
	static__1d51394c6_optimize(_27829_m.get()._field_expr);
}



inline void _1d53c4772_tuple(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5675c32_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1d97967ee:;
		if (it != expr.end()) {
			jule::Ptr<_1d62e16b0_Data> _28321_d = *it;
			{
				static__1d51394c6_optimize(_28321_d.get()._field_model);
			}
			_iter_next_1d97967ee:;
			++it;
			goto _iter_begin_1d97967ee;
		}
		_iter_end_1d97967ee:;
	};
}



inline void _1d53c5168_new_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56764d5_BuiltinNewCallExprModel> _28827_m) {
	if ((_28827_m.get()._field_init != nullptr)) {
		static__1d51394c6_optimize(_28827_m.get()._field_init);
	};
}



inline void _1d53c7940_out_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel> _29427_m) {
	static__1d51394c6_optimize(_29427_m.get()._field_expr);
}



inline void _1d53cc082_outln_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel> _29829_m) {
	static__1d51394c6_optimize(_29829_m.get()._field_expr);
}



inline void _1d53e87b8_panic_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel> _30229_m) {
	static__1d51394c6_optimize(_30229_m.get()._field_expr);
}



inline void _1d54a849e_assert_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel> _30630_m) {
	static__1d51394c6_optimize(_30630_m.get()._field_expr);
}



inline void _1d54ad65d_error_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel> _31029_m) {
	static__1d51394c6_optimize(_31029_m.get()._field_err);
}



inline void _1d54bc837_make_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel> _31428_m) {
	if ((_31428_m.get()._field_len != nullptr)) {
		static__1d51394c6_optimize(_31428_m.get()._field_len);
	};
	if ((_31428_m.get()._field_cap != nullptr)) {
		static__1d51394c6_optimize(_31428_m.get()._field_cap);
	};
}



inline void _1d54c1c48_append_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel> _32330_m) {
	static__1d51394c6_optimize(_32330_m.get()._field_dest);
	static__1d51394c6_optimize(_32330_m.get()._field_elements);
}



inline void _1d54e70c0_clone_call(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel> _32829_m) {
	static__1d51394c6_optimize(_32829_m.get()._field_expr);
}



inline void _1d550560b_sizeof(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5675061_SizeofExprModel> _33225_m) {
	static__1d51394c6_optimize(_33225_m.get()._field_expr);
}



inline void _1d550e615_alignof(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d56777c2_AlignofExprModel> _33626_m) {
	static__1d51394c6_optimize(_33626_m.get()._field_expr);
}



inline void _1d55233b5_integrated_to_str(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5677b9b_IntegratedToStrExprModel> _34036_m) {
	static__1d51394c6_optimize(_34036_m.get()._field_expr);
}



inline void _1d4e31840_free(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5678075_FreeExprModel> _34423_m) {
	static__1d51394c6_optimize(_34423_m.get()._field_expr);
}



inline void _1d4e3b6b3_backend_emit(_1d52bce51_ExprOptimizer* _self_, jule::Ptr<_1d5677d88_BackendEmitExprModel> _34831_m) {
	_1d51bae2b_args(&(*_self_), _34831_m.get()._field_exprs);
}



inline void _1d4eb9d5c_do(_1d52bce51_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1d567337d_BinopExprModel>>()) {
			_case_begin_1d979e0a9:;
			{
				_1d514c660_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d567337d_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567356a_UnaryExprModel>>()) {
			_case_begin_1d979e373:;
			{
				_1d519c4d4_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d567356a_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673944_StructLitExprModel>>()) {
			_case_begin_1d979e3d9:;
			{
				_1d50e7b5a_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5673944_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673b31_AllocStructLitExprModel>>()) {
			_case_begin_1d979e450:;
			{
				_1d51a4420_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5673b31_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673d1d_CastingExprModel>>()) {
			_case_begin_1d979e4b6:;
			{
				_1d51ac22a_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5673d1d_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
			_case_begin_1d979e53d:;
			{
				_1d51c6530_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d567400a_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56741e7_SliceExprModel>>()) {
			_case_begin_1d979e5b5:;
			{
				_1d51d5b16_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56741e7_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567566b_ArrayExprModel>>()) {
			_case_begin_1d979e63c:;
			{
				_1d52c7686_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d567566b_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56743d4_IndexingExprModel>>()) {
			_case_begin_1d979e6b4:;
			{
				_1d5314492_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56743d4_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56745c1_AnonFnExprModel>>()) {
			_case_begin_1d979e73b:;
			{
				_1d5320d2d_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56745c1_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567499a_MapExprModel>>()) {
			_case_begin_1d979e7b3:;
			{
				_1d53214d2_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d567499a_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674b87_SlicingExprModel>>()) {
			_case_begin_1d979e83a:;
			{
				_1d5321cb8_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5674b87_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674d74_TraitSubIdentExprModel>>()) {
			_case_begin_1d979e8b2:;
			{
				_1d53317ab_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5674d74_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
			_case_begin_1d979e939:;
			{
				_1d531e4ad_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5675292_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675a45_CommonSubIdentExprModel>>()) {
			_case_begin_1d979e9b1:;
			{
				_1d53be7a0_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5675a45_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675c32_TupleExprModel>>()) {
			_case_begin_1d979ea38:;
			{
				_1d53c4772_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5675c32_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>>()) {
			_case_begin_1d979eab0:;
			{
				_1d53c7940_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1d979eb37:;
			{
				_1d53cc082_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>>()) {
			_case_begin_1d979ebae:;
			{
				_1d53c5168_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>>()) {
			_case_begin_1d979ec36:;
			{
				_1d53e87b8_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>>()) {
			_case_begin_1d979ecad:;
			{
				_1d54a849e_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>()) {
			_case_begin_1d979ed35:;
			{
				_1d54ad65d_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>>()) {
			_case_begin_1d979edac:;
			{
				_1d54bc837_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>>()) {
			_case_begin_1d979ee34:;
			{
				_1d54c1c48_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>>()) {
			_case_begin_1d979eeab:;
			{
				_1d54e70c0_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675061_SizeofExprModel>>()) {
			_case_begin_1d97a0033:;
			{
				_1d550560b_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5675061_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56777c2_AlignofExprModel>>()) {
			_case_begin_1d97a00aa:;
			{
				_1d550e615_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d56777c2_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>>()) {
			_case_begin_1d97a0132:;
			{
				_1d55233b5_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5678075_FreeExprModel>>()) {
			_case_begin_1d97a01a9:;
			{
				_1d4e31840_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5678075_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677d88_BackendEmitExprModel>>()) {
			_case_begin_1d97a0231:;
			{
				_1d4e3b6b3_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d5677d88_BackendEmitExprModel>());
			}
		}
		_match_end_1d979e054:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d52bce51_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d6bbca80_Optimizer> static__1d6b85c35_new(jule::Ptr<_1d6998e55_IR>& _2528_ir) {
	return jule::new_ptr<_1d6bbca80_Optimizer>(_1d6bbca80_Optimizer{._field_ir=_2528_ir});
}



inline void _1d6bb635e_optimize_global(_1d6bbca80_Optimizer* _self_, jule::Ptr<_1d6298ea3_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__1d51394c6_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1d6bb9719_optimize_function(_1d6bbca80_Optimizer* _self_, jule::Ptr<_1d567a7e7_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d97b6401:;
		if (it != expr.end()) {
			jule::Ptr<_1d567d498_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1d52c0959_ScopeOptimizer> _4221_so = static__230962b61_new(_4121_ins.get()._field_scope);;
				_1d505b607_optimize(_4221_so.ptr());
			}
			_iter_next_1d97b6401:;
			++it;
			goto _iter_begin_1d97b6401;
		}
		_iter_end_1d97b6401:;
	};
}



inline void _1d6bcdb29_optimize_struct(_1d6bbca80_Optimizer* _self_, jule::Ptr<_1d5599dba_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d97b7842:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c62d1_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1d97b7ed5:;
					if (it != expr.end()) {
						jule::Ptr<_1d55a2532_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__1d51394c6_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1d97b7ed5:;
						++it;
						goto _iter_begin_1d97b7ed5;
					}
					_iter_end_1d97b7ed5:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1d97b8e1a:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _5725_m = *it;
						{
							_1d6bb9719_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_1d97b8e1a:;
						++it;
						goto _iter_begin_1d97b8e1a;
					}
					_iter_end_1d97b8e1a:;
				};
			}
			_iter_next_1d97b7842:;
			++it;
			goto _iter_begin_1d97b7842;
		}
		_iter_end_1d97b7842:;
	};
}



inline void _1d6bce861_optimize_globals(_1d6bbca80_Optimizer* _self_, jule::Ptr<_1d6277327_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d97b94ae:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1d97ba24b:;
					if (it != expr.end()) {
						jule::Ptr<_1d6298ea3_Var> _6525_v = *it;
						{
							_1d6bb635e_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_1d97ba24b:;
						++it;
						goto _iter_begin_1d97ba24b;
					}
					_iter_end_1d97ba24b:;
				};
			}
			_iter_next_1d97b94ae:;
			++it;
			goto _iter_begin_1d97b94ae;
		}
		_iter_end_1d97b94ae:;
	};
}



inline void _1d6be03aa_optimize_functions(_1d6bbca80_Optimizer* _self_, jule::Ptr<_1d6277327_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d97ba823:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1d97bb604:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _7325_func = *it;
						{
							_1d6bb9719_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_1d97bb604:;
						++it;
						goto _iter_begin_1d97bb604;
					}
					_iter_end_1d97bb604:;
				};
			}
			_iter_next_1d97ba823:;
			++it;
			goto _iter_begin_1d97ba823;
		}
		_iter_end_1d97ba823:;
	};
}



inline void _1d6be0982_optimize_structs(_1d6bbca80_Optimizer* _self_, jule::Ptr<_1d6277327_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d97bbba9:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1d97bc98a:;
					if (it != expr.end()) {
						jule::Ptr<_1d5599dba_Struct> _8125_s = *it;
						{
							_1d6bcdb29_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_1d97bc98a:;
						++it;
						goto _iter_begin_1d97bc98a;
					}
					_iter_end_1d97bc98a:;
				};
			}
			_iter_next_1d97bbba9:;
			++it;
			goto _iter_begin_1d97bbba9;
		}
		_iter_end_1d97bbba9:;
	};
}



inline void _1d6c1ab11_optimize_package(_1d6bbca80_Optimizer* _self_, jule::Ptr<_1d6277327_Package>& _8740_p) {
	_1d6bce861_optimize_globals(&(*_self_), _8740_p);
	_1d6be03aa_optimize_functions(&(*_self_), _8740_p);
	_1d6be0982_optimize_structs(&(*_self_), _8740_p);
}



inline void _1d6c23b3b_optimize(_1d6bbca80_Optimizer* _self_) {
	_1d6c28613_detect_enabled();
	if (_230769902_DEADCODE) {
		_1d6c4a5d0_eliminate_defines((*_self_)._field_ir);
	};
	if ((_1d6b57058_scope_enabled || _1d6b55e03_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_1d97bc858:;
			if (it != expr.end()) {
				jule::Ptr<_1d62743bd_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_1d6c1ab11_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_1d97bc858:;
				++it;
				goto _iter_begin_1d97bc858;
			}
			_iter_end_1d97bc858:;
		};
		_1d6c1ab11_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_230769902_DEADCODE) {
		_1d6c50382_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d6bbca80_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1d6c69753_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1d6c6ab2d_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1d6c69753_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1d6c6a941_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1d6c6c217_log_flat(_21868a483_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1d6c6c426_log_error(_21868a483_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1d6c69753_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1d61c2bbd_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1d61c2bbd_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _21862ed1d_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_21862ed1d_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1d61c2bbd_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_2185adecd_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_2185adecd_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_2185adecd_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1d6c6ab2d_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1d6c6c635_log(_21868a483_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1d97ced32:;
			{
				static__1d6c6c217_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1d97ced98:;
			{
				static__1d6c6c426_log_error(_6524_l);
			}
		}
		_match_end_1d97cebcd:;
	};
}



inline void static__1d6c6c844_print_logs(jule::Slice<_21868a483_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1d97c4ae6:;
		if (it != expr.end()) {
			_21868a483_Log &_7616_l = *it;
			{
				static__1d6c6c635_log(_7616_l);
			}
			_iter_next_1d97c4ae6:;
			++it;
			goto _iter_begin_1d97c4ae6;
		}
		_iter_end_1d97c4ae6:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1d61c2bbd_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1d6c6be5e_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1d7350aa3_unix(_1d73506eb_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1d7355bb8_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1d735604d_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d73506eb_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1d7350d8e_Time static__1d7351235_unix(jule::U64 _9124_sec) {
	return _1d7350d8e_Time{._field_sec=_9124_sec};
}



inline _1d7350d8e_Time static__1d7351433_now(void) {
	return static__1d7351235_unix(static_cast<jule::U64>(_1d7355877_unix()));
}



inline jule::U64 _1d7351884_unix(_1d7350d8e_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1d7351ae8_day(_1d7350d8e_Time* _self_) {
	return _1d7352a72_abs(&(*_self_))._field_day;
}



inline jule::U64 _1d7351d5c_month(_1d7350d8e_Time* _self_) {
	return _1d7352a72_abs(&(*_self_))._field_month;
}



inline jule::U64 _1d73520c1_year(_1d7350d8e_Time* _self_) {
	return _1d7352a72_abs(&(*_self_))._field_year;
}



inline jule::U64 _1d7352335_second(_1d7350d8e_Time* _self_) {
	return _1d7352a72_abs(&(*_self_))._field_second;
}



inline jule::U64 _1d7352599_minute(_1d7350d8e_Time* _self_) {
	return _1d7352a72_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1d735280d_hour(_1d7350d8e_Time* _self_) {
	return _1d7352a72_abs(&(*_self_))._field_hour;
}



inline _1d73506eb_AbsTime _1d7352a72_abs(_1d7350d8e_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1d734ec8e_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1d734ec8e_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1d9811c76:;
	}
	_iter_end_1d9811c76:;;
	_1d73506eb_AbsTime _17417_t = _1d73506eb_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7350d8e_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d72c9752_ScopeCoder> static__1d72c9d6d_new(jule::Ptr<_1d735658c_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1d72c9752_ScopeCoder>(_1d72c9752_ScopeCoder{._field_oc=_5524_oc});
}



inline void _1d72ca0e3_range_index_iter(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d62575b0_RangeIter>& _6141_it) {
	jule::Str _6213_begin = static__1d72e5eee_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	jule::Str _6313_next = static__1d72e653d_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_230783bc4_COPY && _1d72ceca7_is_copy_optimizable(_6141_it.get()._field_expr))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1d72dc699_model(_self_.get()._field_oc.get()._field_ec, _6141_it.get()._field_expr.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, _6213_begin);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_1d735822b_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d733b880_indent(_self_.get()._field_oc);
	};
	if ((_6141_it.get()._field_key_b != nullptr)) {
		if (_230783bc4_COPY) {
			_6141_it.get()._field_key_b.get()._field_reference=_1d72d015e_is_iter_copy_optimizable(_6141_it.get()._field_expr,_6141_it.get()._field_key_b);
		};
		_1d735822b_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d733b880_indent(_self_.get()._field_oc);
	};
	_1d72ce6d0_scope(_self_, _6141_it.get()._field_scope);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, _6313_next);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1d733b880_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, static__1d72e5c57_var(_6141_it.get()._field_key_a));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1d733b880_indent(_self_.get()._field_oc);
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d73398a0_write(_self_.get()._field_oc, _6213_begin);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e6296_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d72ca368_range_hashmap_iter(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d62575b0_RangeIter>& _12943_it) {
	jule::Str _13013_begin = static__1d72e5eee_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	jule::Str _13113_next = static__1d72e653d_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_230783bc4_COPY && _1d72ceca7_is_copy_optimizable(_12943_it.get()._field_expr))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1d72dc699_model(_self_.get()._field_oc.get()._field_ec, _12943_it.get()._field_expr.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, _13013_begin);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	if ((_12943_it.get()._field_key_a != nullptr)) {
		if (_230783bc4_COPY) {
			_12943_it.get()._field_key_a.get()._field_reference=_1d72d015e_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_a);
		};
		_1d735822b_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d733b880_indent(_self_.get()._field_oc);
	};
	if ((_12943_it.get()._field_key_b != nullptr)) {
		if (_230783bc4_COPY) {
			_12943_it.get()._field_key_b.get()._field_reference=_1d72d015e_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_b);
		};
		_1d735822b_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d733b880_indent(_self_.get()._field_oc);
	};
	_1d72ce6d0_scope(_self_, _12943_it.get()._field_scope);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, _13113_next);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d73398a0_write(_self_.get()._field_oc, _13013_begin);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e6296_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d72ca5dd_if_case(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6255dd8_If> _19531_i) {
	if ((_19531_i.get()._field_expr != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _19531_i.get()._field_expr);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1d72ce6d0_scope(_self_, _19531_i.get()._field_scope);
}



inline void _1d72ca863_conditional(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625646b_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1d98a5ca4:;
		if (it != expr.end()) {
			jule::Ptr<_1d6255dd8_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1d98a5ca4;
				};
				if (_20517_writed) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1d72ca5dd_if_case(_self_, _20621_elif);
			}
			_iter_next_1d98a5ca4:;
			++it;
			goto _iter_begin_1d98a5ca4;
		}
		_iter_end_1d98a5ca4:;
	};
	if ((_20435_c.get()._field_default != nullptr)) {
		if (_20517_writed) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1d72ce6d0_scope(_self_, _20435_c.get()._field_default.get()._field_scope);
	};
}



inline void _1d72caad8_inf_iter(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6256757_InfIter> _22432_it) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d72ce6d0_scope(_self_, _22432_it.get()._field_scope);
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e653d_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e6296_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1d72cad5d_while_iter(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6256bca_WhileIter> _24134_it) {
	if (((_24134_it.get()._field_expr != nullptr) && (_24134_it.get()._field_next == nullptr))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24134_it.get()._field_expr != nullptr)) {
			_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		};
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24134_it.get()._field_next != nullptr)) {
			_1d72ce1d5_st(_self_, _24134_it.get()._field_next);
		};
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d72ce6d0_scope(_self_, _24134_it.get()._field_scope);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e653d_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e6296_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1d72cb0d3_range_iter(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d62575b0_RangeIter> _27434_it) {
	{
		
		if ((_1d631ee6e_slc(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d98b62ae:;
			{
				_1d72ca0e3_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_1d631ec0a_arr(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d98b5e7e:;
			{
				_1d72ca0e3_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_1d6320920_map(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d98b5ee5:;
			{
				_1d72ca368_range_hashmap_iter(_self_, _27434_it);
			}
		}
		else {
			_case_begin_1d98b5e18:;
			{
				_1d72ca0e3_range_index_iter(_self_, _27434_it);
			}
		}
		_match_end_1d98b5d3b:;
	};
}



inline void _1d72cb358_cont(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d62579ab_ContSt> _28724_c) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e653d_iter_next(_28724_c.get()._field_it));
}



inline void _1d72cb5cd_label(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625814e_Label> _29225_l) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e67d5_label(_29225_l.get()._field_ident));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1d72cb853_goto_st(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625843a_GotoSt> _29727_gt) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e67d5_label(_29727_gt.get()._field_ident));
}



inline void _1d72cbac8_postfix(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d62587e2_Postfix> _30231_p) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1d73398a0_write(_self_.get()._field_oc, _30231_p.get()._field_op);
}



inline void _1d72cbd4d_assign(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6258c65_Assign> _30930_a) {
	_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_l.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, _30930_a.get()._field_op.get()._field_kind);
	_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_r.get()._field_model);
}



inline void _1d72cc0c3_multi_assign(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625911c_MultiAssign> _31536_a) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31536_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1d98c052c:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31536_a.get()._field_l.len() - _31714_i) > 1LL)) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1d98c052c:;
			++it;
			_31714_i++;
			goto _iter_begin_1d98c052c;
		}
		_iter_end_1d98c052c:;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _31536_a.get()._field_r);
}



inline jule::Fn<void(void)> _1d72cc3d1_match_expr(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625965b_Match> _33134_m) {
	if ((!(_1d62e2073_is_const(_33134_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1d566d862_is_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1d566b4b9_read_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1d72dc699_model(_self_.get()._field_oc.get()._field_ec, _33134_m.get()._field_expr.get()._field_model);
		});
	};
	return nullptr;
}



inline void _1d72cc700_case(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625965b_Match> _34128_m, jule::Ptr<_1d625a1a6_Case> _34143_c) {
	if (((_34143_c.get()._field_exprs.len() != 0LL) && (!(_1d6259b67_is_generic_type_match(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_cases.len() > 0LL) && (_34128_m.get()._field_cases[0LL] == _34143_c))) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1d98c8689:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1d62e16b0_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_type_match))) {
							_case_begin_1d98ca977:;
							{
								jule::Fn<void(void)> _35125_case_expr = _1d72cc3d1_match_expr(_self_, _34128_m);;
								if (_1d62e2381_good_operand(_34128_m.get()._field_expr.ptr(), _34825_expr)) {
									if ((_35125_case_expr != nullptr)) {
										_35125_case_expr();
										_1d73398a0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								} else {
									_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
									if ((_35125_case_expr != nullptr)) {
										_1d73398a0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1d98c93d2:;
							{
								_1d73398a0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1d73398a0_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								_1d73398a0_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1d98c9305:;
					};
					if (((_34143_c.get()._field_exprs.len() - _34818_i) > 1LL)) {
						_1d73398a0_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1d98c8689:;
				++it;
				_34818_i++;
				goto _iter_begin_1d98c8689;
			}
			_iter_end_1d98c8689:;
		};
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_default == _34143_c) && (_34128_m.get()._field_cases.len() != 0LL))) {
		_1d733b880_indent(_self_.get()._field_oc);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e6d24_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1d733b880_indent(_self_.get()._field_oc);
		_1d72ce6d0_scope(_self_, _34143_c.get()._field_scope);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d72cc975_match_st(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625965b_Match> _40032_m) {
	if (((_40032_m.get()._field_cases.len() == 0LL) && (_40032_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _40513_generic_type_match = _1d6259b67_is_generic_type_match(_40032_m.ptr());;
	if ((_40513_generic_type_match && ((_40032_m.get()._field_default == nullptr) || (_40032_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	if (((!(_40513_generic_type_match)) && (!(_1d62e2073_is_const(_40032_m.get()._field_expr.ptr()))))) {
		if ((_230783bc4_COPY && _1d72ceca7_is_copy_optimizable(_40032_m.get()._field_expr))) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _40032_m.get()._field_expr.get()._field_model);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1d733b880_indent(_self_.get()._field_oc);
	};
	if ((_40032_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _40032_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1d98da448:;
			if (it != expr.end()) {
				jule::Ptr<_1d625a1a6_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1d98da448;
					};
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1d733b880_indent(_self_.get()._field_oc);
					_1d72cc700_case(_self_, _40032_m,_42925_c);
				}
				_iter_next_1d98da448:;
				++it;
				goto _iter_begin_1d98da448;
			}
			_iter_end_1d98da448:;
		};
	};
	if ((_40032_m.get()._field_default != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1d72cc700_case(_self_, _40032_m,_40032_m.get()._field_default);
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e6a7c_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40032_m))));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d72ccbea_fall_st(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625a75b_FallSt> _45627_f) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e6d24_case_begin(_45627_f.get()._field_dest_case));
}



inline void _1d72cce70_break_st(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6257d63_BreakSt> _46128_b) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46128_b.get()._field_it != 0LLU)) {
		_1d73398a0_write(_self_.get()._field_oc, static__1d72e6296_iter_end(_46128_b.get()._field_it));
	} else {
		_1d73398a0_write(_self_.get()._field_oc, static__1d72e6a7c_match_end(_46128_b.get()._field_mtch));
	};
}



inline void _1d72cd1e5_ret_with_vars(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625abce_RetSt> _47037_r) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_47037_r.get()._field_func.get()._field_result));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47037_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1d98e5b07:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1d6298ea3_Var> _48021_v = *it;
			{
				if (_1ee53b5e5_is_ignore_ident(_48021_v.get()._field_ident)) {
					_1d72dce19_init_expr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_kind.get()._field_kind);
				} else {
					_1d73398a0_write(_self_.get()._field_oc, static__1d72e5c57_var(_48021_v));
				};
				if (((_47037_r.get()._field_vars.len() - _48014_i) > 1LL)) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1d98e5b07:;
			++it;
			_48014_i++;
			goto _iter_begin_1d98e5b07;
		}
		_iter_end_1d98e5b07:;
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1d72cd46a_ret_tuple(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625abce_RetSt> _50033_r) {
	jule::Slice<jule::Ptr<_1d62e16b0_Data>> _50117_datas = _50033_r.get()._field_expr.operator jule::Ptr<_1d5675c32_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _50033_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1d98ea106:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1d6298ea3_Var> _50221_v = *it;
			{
				if (_1ee53b5e5_is_ignore_ident(_50221_v.get()._field_ident)) {
					goto _iter_next_1d98ea106;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1d98ea106;
				};
				_1d73398a0_write(_self_.get()._field_oc, static__1d72e5c57_var(_50221_v));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1d733b880_indent(_self_.get()._field_oc);
			}
			_iter_next_1d98ea106:;
			++it;
			_50214_i++;
			goto _iter_begin_1d98ea106;
		}
		_iter_end_1d98ea106:;
	};
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_50033_r.get()._field_func.get()._field_result));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1d9900172:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1d62e16b0_Data> _52721_d = *it;
			{
				jule::Ptr<_1d6298ea3_Var> _52821_v = _50033_r.get()._field_vars[_52714_i];;
				if (_1ee53b5e5_is_ignore_ident(_52821_v.get()._field_ident)) {
					_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_model);
				} else {
					_1d73398a0_write(_self_.get()._field_oc, static__1d72e5c57_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1d9900172:;
			++it;
			_52714_i++;
			goto _iter_begin_1d9900172;
		}
		_iter_end_1d9900172:;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1d72cd6e0_ret_with_exprs(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625abce_RetSt> _54538_r) {
	if ((_54538_r.get()._field_vars.len() > 1LL)) {
		_1d72cd46a_ret_tuple(_self_, _54538_r);
		return;;
	};
	if ((_54538_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1d6298ea3_Var> _55321_v = _54538_r.get()._field_vars[0LL];;
		if (((!(_1ee53b5e5_is_ignore_ident(_55321_v.get()._field_ident))) && (_54538_r.get()._field_expr != _55321_v))) {
			jule::Str _55521_ident = static__1d72e5c57_var(_55321_v);;
			_1d73398a0_write(_self_.get()._field_oc, _55521_ident);
			_1d73398a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
			_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1d733b880_indent(_self_.get()._field_oc);
			if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_54538_r.get()._field_func.get()._field_result));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1d73398a0_write(_self_.get()._field_oc, _55521_ident);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1d73398a0_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_54538_r.get()._field_func.get()._field_result));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
	return;;
}



inline void _1d72cd965_ret_st(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d625abce_RetSt> _58930_r) {
	if (((_58930_r.get()._field_expr == nullptr) && (_58930_r.get()._field_vars.len() == 0LL))) {
		if (_58930_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58930_r.get()._field_expr == nullptr)) {
		_1d72cd1e5_ret_with_vars(_self_, _58930_r);
		return;;
	};
	_1d72cd6e0_ret_with_exprs(_self_, _58930_r);
}



inline void _1d72cde60_var(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6298ea3_Var> _62427_v) {
	if ((!(_62427_v.get()._field_constant))) {
		_1d73584a1_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1d72ce1d5_st(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1d6255beb_Scope>>()) {
			_case_begin_1d99165b7:;
			{
				_1d72ce6d0_scope(_self_, _63126_st.operator jule::Ptr<_1d6255beb_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d9916276:;
			{
				_1d72cde60_var(_self_, _63126_st.operator jule::Ptr<_1d6298ea3_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d9916bd3:;
			{
				_1d72dc91e_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1d62e16b0_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625646b_Conditional>>()) {
			_case_begin_1d9916c49:;
			{
				_1d72ca863_conditional(_self_, _63126_st.operator jule::Ptr<_1d625646b_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256757_InfIter>>()) {
			_case_begin_1d9916cb0:;
			{
				_1d72caad8_inf_iter(_self_, _63126_st.operator jule::Ptr<_1d6256757_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256bca_WhileIter>>()) {
			_case_begin_1d9916d26:;
			{
				_1d72cad5d_while_iter(_self_, _63126_st.operator jule::Ptr<_1d6256bca_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62575b0_RangeIter>>()) {
			_case_begin_1d9916d8c:;
			{
				_1d72cb0d3_range_iter(_self_, _63126_st.operator jule::Ptr<_1d62575b0_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62579ab_ContSt>>()) {
			_case_begin_1d9916e03:;
			{
				_1d72cb358_cont(_self_, _63126_st.operator jule::Ptr<_1d62579ab_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625814e_Label>>()) {
			_case_begin_1d9916e69:;
			{
				_1d72cb5cd_label(_self_, _63126_st.operator jule::Ptr<_1d625814e_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625843a_GotoSt>>()) {
			_case_begin_1d9916ed0:;
			{
				_1d72cb853_goto_st(_self_, _63126_st.operator jule::Ptr<_1d625843a_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62587e2_Postfix>>()) {
			_case_begin_1d9917046:;
			{
				_1d72cbac8_postfix(_self_, _63126_st.operator jule::Ptr<_1d62587e2_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6258c65_Assign>>()) {
			_case_begin_1d99170ac:;
			{
				_1d72cbd4d_assign(_self_, _63126_st.operator jule::Ptr<_1d6258c65_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625911c_MultiAssign>>()) {
			_case_begin_1d9917134:;
			{
				_1d72cc0c3_multi_assign(_self_, _63126_st.operator jule::Ptr<_1d625911c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625965b_Match>>()) {
			_case_begin_1d99171ab:;
			{
				_1d72cc975_match_st(_self_, _63126_st.operator jule::Ptr<_1d625965b_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625a75b_FallSt>>()) {
			_case_begin_1d9917233:;
			{
				_1d72ccbea_fall_st(_self_, _63126_st.operator jule::Ptr<_1d625a75b_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6257d63_BreakSt>>()) {
			_case_begin_1d99172aa:;
			{
				_1d72cce70_break_st(_self_, _63126_st.operator jule::Ptr<_1d6257d63_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625abce_RetSt>>()) {
			_case_begin_1d9917332:;
			{
				_1d72cd965_ret_st(_self_, _63126_st.operator jule::Ptr<_1d625abce_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d50e0636_PushToSliceExprModel>>()) {
			_case_begin_1d99173a9:;
			{
				_1d72da631_push_to_slice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1d50e0636_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d53aee66_MutSlicingExprModel>>()) {
			_case_begin_1d9917431:;
			{
				_1d72dc19e_mut_slicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1d53aee66_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d52e0715_StrInsertBeginExprModel>>()) {
			_case_begin_1d99174a8:;
			{
				_1d72dc424_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1d52e0715_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1d9915ebd:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1d9915e68:;
	};
}



inline void _1d72ce45a_scope_stmts(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6255beb_Scope>& _68136_s) {
	{
		auto &expr = _68136_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1d99226c2:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1d733b880_indent(_self_.get()._field_oc);
				_1d72ce1d5_st(_self_, _68221_st);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1d99226c2:;
			++it;
			goto _iter_begin_1d99226c2;
		}
		_iter_end_1d99226c2:;
	};
}



inline void _1d72ce6d0_scope(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d6255beb_Scope> _69029_s) {
	_1d733a142_add_indent(_self_.get()._field_oc);
	if (_69029_s.get()._field_deferred) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d72ce45a_scope_stmts(_self_, _69029_s);
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_deferred) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1d72ce955_func_scope(jule::Ptr<_1d72c9752_ScopeCoder> _self_, jule::Ptr<_1d567d498_FnIns> _70634_f) {
	if ((_70634_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1d733a142_add_indent(_self_.get()._field_oc);
	if ((!(_1d567ac59_is_void(_70634_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _71321_types = _1d567de7c_types(_70634_f.ptr());;
		{
			auto &expr = _70634_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1d9928475:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1ee538d51_Token> _71420_ident = *it;
				{
					if ((_1ee53b5e5_is_ignore_ident(_71420_ident.get()._field_kind) || _1ee53b88c_is_anon_ident(_71420_ident.get()._field_kind))) {
						goto _iter_next_1d9928475;
					};
					_1d733b880_indent(_self_.get()._field_oc);
					_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_71321_types[_71417_i]));
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1d73398a0_write(_self_.get()._field_oc, static__1d72e464b_to_local(_71420_ident.get()._field_row,_71420_ident.get()._field_column,_71420_ident.get()._field_kind));
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1d72dce19_init_expr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1d9928475:;
				++it;
				_71417_i++;
				goto _iter_begin_1d9928475;
			}
			_iter_end_1d9928475:;
		};
	};
	_1d72ce45a_scope_stmts(_self_, _70634_f.get()._field_scope);
	if ((_70634_f.get()._field_decl.get()._field_exceptional && _1d567ac59_is_void(_70634_f.get()._field_decl.ptr()))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1d72c9752_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d72d22c6_ExprCoder> static__1d72d26c2_new(jule::Ptr<_1d735658c_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1d72d22c6_ExprCoder>(_1d72d22c6_ExprCoder{._field_oc=_9724_oc});
}



inline void _1d72d2947_string(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d561288e_Const>& _10327_c) {
	jule::Str _10413_content = _1d566b72d_read_str(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1d61c2a8b_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1d72ddb1d_cstr_lit(_10913_bytes);;
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d73398a0_write(_self_.get()._field_oc, _11113_lit);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1d73398a0_write(_self_.get()._field_oc, _11013_len);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d2bbc_boolean(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d561288e_Const>& _12028_c) {
	if (_1d566b4b9_read_bool(_12028_c.ptr())) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1d72d2d98_nil_lit(jule::Ptr<_1d72d22c6_ExprCoder> _self_) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1d72d31a6_ftoa_special_cases(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::F64& _13239_x) {
	{
		
		if (_1d613c1dc_is_nan(_13239_x)) {
			_case_begin_1d9947ebc:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1d6147d74_is_inf(_13239_x,1LL)) {
			_case_begin_1d9947780:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1d6147d74_is_inf(_13239_x,-1LL)) {
			_case_begin_1d99477e6:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1d9947719:;
			{
				return false;
			}
		}
		_match_end_1d994763c:;
	};
	return true;
}



inline void _1d72d342b_float32(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d561288e_Const>& _14628_c) {
	jule::F64 _14713_x = _1d566c1ce_as_f64(_14628_c.ptr());;
	if (_1d72d31a6_ftoa_special_cases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1d994a9d6:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1d994a6d9:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1d994a156:;
			{
				_1d73398a0_write(_self_.get()._field_oc, _1d72dde2b_ftoa(_14713_x,32LL));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1d994a3cb:;
	};
}



inline void _1d72d36a1_float64(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d561288e_Const>& _16528_c) {
	jule::F64 _16613_x = _1d566c1ce_as_f64(_16528_c.ptr());;
	if (_1d72d31a6_ftoa_special_cases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1d994da72:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1d994e19e:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1d994d1e2:;
			{
				_1d73398a0_write(_self_.get()._field_oc, _1d72dde2b_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1d994d467:;
	};
}



inline void _1d72d39c0_constant(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d561288e_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1d566dac6_is_str(_18432_c.ptr())) {
			_case_begin_1d9950997:;
			{
				_1d72d2947_string(_self_, _18432_c);
			}
		}
		else if (_1d566d862_is_bool(_18432_c.ptr())) {
			_case_begin_1d9950a0d:;
			{
				_1d72d2bbc_boolean(_self_, _18432_c);
			}
		}
		else if (_1d566dd3a_is_f64(_18432_c.ptr())) {
			_case_begin_1d9950a74:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1d9952ca7:;
						{
							_1d72d342b_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1d9952911:;
						{
							_1d72d36a1_float64(_self_, _18432_c);
						}
					}
					_match_end_1d9952834:;
				};
			}
		}
		else if (_1d566d389_is_i64(_18432_c.ptr())) {
			_case_begin_1d9950ada:;
			{
				_1d73398a0_write(_self_.get()._field_oc, _1d72de1c3_itoa(static_cast<jule::I64>(_1d566aee1_read_i64(_18432_c.ptr()))));
			}
		}
		else if (_1d566d5ed_is_u64(_18432_c.ptr())) {
			_case_begin_1d9951437:;
			{
				_1d73398a0_write(_self_.get()._field_oc, _1d72de46a_utoa(static_cast<jule::U64>(_1d566b255_read_u64(_18432_c.ptr()))));
			}
		}
		else if (_1d566e09e_is_nil(_18432_c.ptr())) {
			_case_begin_1d995149d:;
			{
				_1d72d2d98_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1d9950931:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1d9950854:;
	};
}



inline void _1d72d3d88_div_by_zero_binary(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1ee538d51_Token>& _20839_op, jule::Ptr<_1d5654dba_OperandExprModel>& _20856_l, jule::Ptr<_1d5654dba_OperandExprModel>& _20883_r) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20839_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1d9955d54:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1d9955e20:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1d9955cbb:;
	};
	if ((!(_2307697ae_PRODUCTION))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1d731e852_loc_info(_self_.get()._field_oc, _20839_op);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1d72dc91e_expr(_self_, _20856_l.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d72dc91e_expr(_self_, _20883_r.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d410d_unsafe_binary(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567337d_BinopExprModel> _23037_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d72dc699_model(_self_, _23037_m.get()._field_left.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1d73398a0_write(_self_.get()._field_oc, _23037_m.get()._field_op.get()._field_kind);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1d72dc699_model(_self_, _23037_m.get()._field_right.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d4383_binary(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567337d_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1d99623e3:;
			{
				if ((_1d6320447_strct(_24030_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1d72d3d88_div_by_zero_binary(_self_, _24030_m.get()._field_op,_24030_m.get()._field_left,_24030_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1d9962338:;
	};
	_1d72d410d_unsafe_binary(_self_, _24030_m);
}



inline void _1d72d4608_var(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d6298ea3_Var> _25227_m) {
	if (_25227_m.get()._field_cpp_linked) {
		jule::Ptr<_1d5575c86_Directive> _25417_d = _1d7364820_find_directive(_25227_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1d73398a0_write(_self_.get()._field_oc, _1d735b3e9_concat_all_parts(_25417_d.get()._field_args));
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e5c57_var(_25227_m));
}



inline void _1d72d487d_structure_ins(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d55c62d1_StructIns> _26337_m) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d73608a4_structure_ins(_26337_m));
}



inline void _1d72d4b03_unary(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567356a_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1d9967030:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1d72dc91e_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d9967096:;
			{
				if ((_2307697ae_PRODUCTION || (_1d631e259_sptr(_26729_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1d9966e75;
				};
				_1d72dc91e_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1d731e852_loc_info(_self_.get()._field_oc, _26729_m.get()._field_op);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1d9966e75:;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d73398a0_write(_self_.get()._field_oc, _26729_m.get()._field_op.get()._field_kind);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d72dc91e_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1d72d4d78_structure_lit(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5673944_StructLitExprModel> _29137_m) {
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e5718_structure_ins(_29137_m.get()._field_strct));
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29137_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29137_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1d996e6a8:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1d55a2532_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29137_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1d997027a:;
						if (it != expr.end()) {
							jule::Ptr<_1d5673757_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_field == _30420_f)) {
									_1d73398a0_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1d73398a0_write(_self_.get()._field_oc, static__1d72e59b0_field(_30529_arg.get()._field_field.get()._field_decl));
									_1d73398a0_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1d72dc91e_expr(_self_, _30529_arg.get()._field_expr);
									if (((_29137_m.get()._field_strct.get()._field_fields.len() - _30417_i) > 1LL)) {
										_1d73398a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1d996e6a8;
								};
							}
							_iter_next_1d997027a:;
							++it;
							goto _iter_begin_1d997027a;
						}
						_iter_end_1d997027a:;
					};
				}
				_iter_next_1d996e6a8:;
				++it;
				_30417_i++;
				goto _iter_begin_1d996e6a8;
			}
			_iter_end_1d996e6a8:;
		};
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1d72d50ed_alloc_structure(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5673b31_AllocStructLitExprModel> _32239_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e5718_structure_ins(_32239_m.get()._field_lit.get()._field_strct));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1d72d4d78_structure_lit(_self_, _32239_m.get()._field_lit);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d5373_casting(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5673d1d_CastingExprModel> _33031_m) {
	{
		
		if (((_1d631dee5_prim(_33031_m.get()._field_kind.ptr()) != nullptr) && _1d6324d53_is_any(_1d631dee5_prim(_33031_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1d9976171:;
			{
				_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_33031_m.get()._field_kind));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1d72dc699_model(_self_, _33031_m.get()._field_expr);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1d631e4bd_ptr(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || (_1d631e4bd_ptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d9975d41:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_33031_m.get()._field_kind));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1d72dc91e_expr(_self_, _33031_m.get()._field_expr);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1d63206ab_trt(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1d631dee5_prim(_33031_m.get()._field_expr_kind.ptr()) != nullptr) && _1d6324d53_is_any(_1d631dee5_prim(_33031_m.get()._field_expr_kind.ptr()).ptr())) || (_1d631e996_tenm(_33031_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1d9975da7:;
			{
				_1d72dc699_model(_self_, _33031_m.get()._field_expr);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_2307697ae_PRODUCTION) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_33031_m.get()._field_kind));
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1d631e259_sptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
						_1d73398a0_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_1d631e259_sptr(_33031_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1d73398a0_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_33031_m.get()._field_kind));
					};
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1d731e852_loc_info(_self_.get()._field_oc, _33031_m.get()._field_token);
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1d63206ab_trt(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d9975e1d:;
			{
				_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_33031_m.get()._field_kind));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1d72dc91e_expr(_self_, _33031_m.get()._field_expr);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1d73398a0_write(_self_.get()._field_oc, _1d61c2bbd_itoa(static_cast<jule::I64>(_1d733ccb0_find_type_offset(_self_.get()._field_oc.ptr(), _1d63206ab_trt(_33031_m.get()._field_kind.ptr()),_33031_m.get()._field_expr_kind))));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1d9975cca:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_33031_m.get()._field_kind));
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1d72dc91e_expr(_self_, _33031_m.get()._field_expr);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d9975bed:;
	};
}



inline void _1d72d55e8_args(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1d9986769:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1d72dc91e_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1d9986769:;
			++it;
			_38514_i++;
			goto _iter_begin_1d9986769;
		}
		_iter_end_1d9986769:;
	};
}



inline void _1d72d586d_model_for_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Any _39338_expr) {
	{
		auto &_match_expr{ _39338_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1d567d498_FnIns>>()) {
			_case_begin_1d9988738:;
			{
				_1d72d8651_func_ins(_self_, _39338_expr.operator jule::Ptr<_1d567d498_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
			_case_begin_1d99887b0:;
			{
				jule::Ptr<_1d5675292_StructSubIdentExprModel> _39921_ssie = _39338_expr.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_method != nullptr)) {
					_1d72d8651_func_ins(_self_, _39921_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1d9988628:;
	};
	_1d72dc699_model(_self_, _39338_expr);
}



inline void _1d72d5ae3_push_call_inf(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567400a_FnCallExprModel>& _40834_m) {
	if ((_2307697ae_PRODUCTION || ((!(_40834_m.get()._field_func.get()._field_anon)) && (!(_1d72deadb_is_builtin_call_has_debuginf(_40834_m)))))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40834_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40834_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
				_case_begin_1d998bb59:;
				{
					if (_40834_m.get()._field_expr.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1d998bd35;
				}
			}
			else {
				_case_begin_1d998bd35:;
				{
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1d998bc14:;
		};
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1d731e852_loc_info(_self_.get()._field_oc, _40834_m.get()._field_token);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40834_m.get()._field_args.len() != 0LL)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1d72d5e01_is_wrapped(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567400a_FnCallExprModel>& _43335_m) {
	if ((((!(_1d567e1e1_is_builtin(_43335_m.get()._field_func.ptr()))) && (_43335_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1d56795d7_is_self(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43335_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
				_case_begin_1d9990894:;
				{
					jule::Ptr<_1d5675292_StructSubIdentExprModel> _43725_ssie = _43335_m.get()._field_expr.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>();;
					{
						
						if (_1d567984b_is_ref(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1d631e259_sptr(_43725_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1d99911ad:;
							{
								goto _match_end_1d9991752;
							}
						}
						else {
							_case_begin_1d99917b8:;
							{
								if ((_1d6320447_strct(_43725_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_expr.get()._field_lvalue))) {
										_1d73398a0_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1d72dc699_model(_self_, _43725_ssie.get()._field_expr.get()._field_model);
										_1d73398a0_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1d9991752:;
					};
				}
			}
			_match_end_1d9990685:;
		};
	};
	return false;
}



inline void _1d72d6176_pure_func_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567400a_FnCallExprModel>& _45739_m) {
	jule::Bool _45813_wrapped = _1d72d5e01_is_wrapped(_self_, _45739_m);;
	if (_45739_m.get()._field_is_co) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1d72d586d_model_for_call(_self_, _45739_m.get()._field_expr);
	if ((!(_1d567e1e1_is_builtin(_45739_m.get()._field_func.ptr())))) {
		if ((_45739_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45739_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1d7364ba5_has_directive(_45739_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45739_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1d9997b32:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1d631a6a6_InsGeneric> _46733_g = *it;
						{
							_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_46733_g.get()._field_kind));
							if (((_45739_m.get()._field_func.get()._field_generics.len() - _46726_i) > 1LL)) {
								_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1d9997b32:;
						++it;
						_46726_i++;
						goto _iter_begin_1d9997b32;
					}
					_iter_end_1d9997b32:;
				};
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1d72d5ae3_push_call_inf(_self_, _45739_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1d567e1e1_is_builtin(_45739_m.get()._field_func.ptr()))) && (_45739_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1d56795d7_is_self(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45739_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
				_case_begin_1d9996834:;
				{
					jule::Ptr<_1d5675292_StructSubIdentExprModel> _48225_ssie = _45739_m.get()._field_expr.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>();;
					{
						
						if (_1d567984b_is_ref(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1d999d84c:;
							{
								_1d72dc699_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
							}
						}
						else if ((_1d631e259_sptr(_48225_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1d999ddad:;
							{
								_1d72dc699_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								_1d73398a0_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_2307697ae_PRODUCTION))) {
									_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1d731e852_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
									_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1d999c4a5:;
							{
								if ((_1d6320447_strct(_48225_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1d73398a0_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1d73398a0_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1d72dc699_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								};
							}
						}
						_match_end_1d999c43e:;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_1d73398a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1d5674d74_TraitSubIdentExprModel>>()) {
				_case_begin_1d999b52b:;
				{
					_1d72dc699_model(_self_, _45739_m.get()._field_expr.operator jule::Ptr<_1d5674d74_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_2307697ae_PRODUCTION))) {
						_47817_locinfo=true;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_1d73398a0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1d999b3b6:;
		};
	};
	_1d72d55e8_args(_self_, _45739_m.get()._field_args);
	if (_47817_locinfo) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1d731e852_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45739_m.get()._field_is_co) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1d72d63eb_func_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567400a_FnCallExprModel> _53633_m) {
	if (((_1d567e1e1_is_builtin(_53633_m.get()._field_func.ptr()) || (!(_53633_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53633_m.get()._field_except != nullptr) && (_53633_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1d72d6176_pure_func_call(_self_, _53633_m);
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1d72d6176_pure_func_call(_self_, _53633_m);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	if ((_53633_m.get()._field_except != nullptr)) {
		if (((_53633_m.get()._field_func.get()._field_result == nullptr) || (!(_53633_m.get()._field_assigned)))) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1d72ce6d0_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1d72de822_is_forwarded(_53633_m.get()._field_except);;
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1d72ce6d0_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			if (_55821_forwarded) {
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1d72dce19_init_expr(_self_, _53633_m.get()._field_func.get()._field_result);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1d73398a0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1d733b132_done_indent(_self_.get()._field_oc);
	} else {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1d731e852_loc_info(_self_.get()._field_oc, _53633_m.get()._field_token);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1d567ac59_is_void(_53633_m.get()._field_func.get()._field_decl.ptr())))) {
			_1d733b880_indent(_self_.get()._field_oc);
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1d733b132_done_indent(_self_.get()._field_oc);
	};
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1d72d6671_slice(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56741e7_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_elems.len() == 0LL)) {
		_1d73398a0_write(_self_.get()._field_oc, static__1d735e7d7_as_slice(_58729_m.get()._field_elem_kind));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, static__1d735e7d7_as_slice(_58729_m.get()._field_elem_kind));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1d72d55e8_args(_self_, _58729_m.get()._field_elems);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1d72d68e6_indexing(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56743d4_IndexingExprModel> _59932_m) {
	_1d72dc699_model(_self_, _59932_m.get()._field_expr.get()._field_model);
	{
		
		if (_2307697ae_PRODUCTION || (_1d631e4bd_ptr(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1d6320920_map(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d99b7206:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1d72dc91e_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1d99b7998:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1d731e852_loc_info(_self_.get()._field_oc, _59932_m.get()._field_token);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1d72dc91e_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d99b7932:;
	};
}



inline void _1d72d6b6b_unsafe_indexing(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d53dbc84_UnsafeIndexingExprModel> _61839_m) {
	_1d72dc699_model(_self_, _61839_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_2307697ae_PRODUCTION || (_1d631e4bd_ptr(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1d6320920_map(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d99ba5a0:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1d72dc91e_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1d99bbe86:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1d72dc91e_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d99bbe20:;
	};
}



inline void _1d72d6de1_anon_func(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56745c1_AnonFnExprModel> _63533_m) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d7361c18_func(_63533_m.get()._field_func));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1d7357e0c_params_ins(_self_.get()._field_oc, _63533_m.get()._field_func.get()._field_params);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1d73398a0_write(_self_.get()._field_oc, static__1d73616c9_func_ins_result(_63533_m.get()._field_func));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1d72ce955_func_scope(_self_.get()._field_oc.get()._field_sc, _63533_m.get()._field_func);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d7166_map(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567499a_MapExprModel> _64627_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_64627_m.get()._field_key_kind));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_64627_m.get()._field_val_kind));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1d99c59d9:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1d56747ad_KeyValPairExprModel> _65325_pair = *it;
				{
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1d72dc91e_expr(_self_, _65325_pair.get()._field_key);
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1d72dc91e_expr(_self_, _65325_pair.get()._field_val);
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_entries.len() - _65318_i) > 1LL)) {
						_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1d99c59d9:;
				++it;
				_65318_i++;
				goto _iter_begin_1d99c59d9;
			}
			_iter_end_1d99c59d9:;
		};
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1d72d73db_slicing(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5674b87_SlicingExprModel> _66731_m) {
	_1d72dc699_model(_self_, _66731_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_2307697ae_PRODUCTION))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1d731e852_loc_info(_self_.get()._field_oc, _66731_m.get()._field_token);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1d72dc91e_expr(_self_, _66731_m.get()._field_left);
	if ((_66731_m.get()._field_right != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d72dc91e_expr(_self_, _66731_m.get()._field_right);
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d7661_trait_sub(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5674d74_TraitSubIdentExprModel> _68333_m) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e4e32_trait_decl(_68333_m.get()._field_trt));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1d72dc699_model(_self_, _68333_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e48e3_func(_68333_m.get()._field_method));
}



inline void _1d72d78d6_structure_sub(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5675292_StructSubIdentExprModel> _69237_m) {
	_1d72dc699_model(_self_, _69237_m.get()._field_expr.get()._field_model);
	if ((_69237_m.get()._field_field != nullptr)) {
		if ((_1d631e4bd_ptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1d631e259_sptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_2307697ae_PRODUCTION))) {
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1d731e852_loc_info(_self_.get()._field_oc, _69237_m.get()._field_token);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1d73398a0_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1d73398a0_write(_self_.get()._field_oc, static__1d72e59b0_field(_69237_m.get()._field_field.get()._field_decl));
	};
}



inline void _1d72d7b5b_common_ident(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5675858_CommonIdentExprModel> _71232_m) {
	_1d73398a0_write(_self_.get()._field_oc, _71232_m.get()._field_ident);
}



inline void _1d72d7dd1_common_sub(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5675a45_CommonSubIdentExprModel> _71634_m) {
	_1d72dc699_model(_self_, _71634_m.get()._field_expr);
	{
		
		if ((_1d631e4bd_ptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1d99d4dd3:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1d631e259_sptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1d99d560e:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_2307697ae_PRODUCTION))) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1d731e852_loc_info(_self_.get()._field_oc, _71634_m.get()._field_token);
					_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1d99d5598:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1d99d5532:;
	};
	_1d73398a0_write(_self_.get()._field_oc, _71634_m.get()._field_ident);
}



inline void _1d72d8156_array(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567566b_ArrayExprModel> _73529_m) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d7360b4b_array(_73529_m.get()._field_kind));
	if ((_73529_m.get()._field_elems.len() == 0LL)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_elems.len() == 2LL) && (_73529_m.get()._field_elems[1LL] == nullptr))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1d72dc91e_expr(_self_, _73529_m.get()._field_elems[0LL]);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1d72d55e8_args(_self_, _73529_m.get()._field_elems);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1d72d83cb_func_ins_common(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567d498_FnIns> _75839_m) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d7361c18_func(_75839_m));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d72d8651_func_ins(_self_, _75839_m);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d8651_func_ins(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567d498_FnIns> _76532_m) {
	if (((_76532_m.get()._field_decl != nullptr) && _76532_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_1d5575c86_Directive> _76717_d = _1d7364820_find_directive(_76532_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1d73398a0_write(_self_.get()._field_oc, _1d735b3e9_concat_all_parts(_76717_d.get()._field_args));
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e4b8a_func_ins(_76532_m));
}



inline void _1d72d88c6_tuple(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5675c32_TupleExprModel> _77629_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1d99e2c9d:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1d62e16b0_Data> _77821_d = *it;
			{
				_1d72dc91e_expr(_self_, _77821_d.get()._field_model);
				if (((_77629_m.get()._field_datas.len() - _77814_i) > 1LL)) {
					_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1d99e2c9d:;
			++it;
			_77814_i++;
			goto _iter_begin_1d99e2c9d;
		}
		_iter_end_1d99e2c9d:;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d8b4b_new_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56764d5_BuiltinNewCallExprModel> _78732_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_78732_m.get()._field_kind));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78732_m.get()._field_init != nullptr)) {
		_1d72dc91e_expr(_self_, _78732_m.get()._field_init);
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d8dc1_out_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel> _79732_m) {
	if ((_79732_m.get()._field_debug && _2307697ae_PRODUCTION)) {
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1d72dc91e_expr(_self_, _79732_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d9146_outln_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel> _80634_m) {
	if ((_80634_m.get()._field_debug && _2307697ae_PRODUCTION)) {
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1d72dc91e_expr(_self_, _80634_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d93bb_panic_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel> _81534_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1d72dc91e_expr(_self_, _81534_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1d731e852_loc_info(_self_.get()._field_oc, _81534_m.get()._field_token);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1d72d9641_assert_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel> _82335_m) {
	if (_2307697ae_PRODUCTION) {
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1d72dc91e_expr(_self_, _82335_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1d73398a0_write(_self_.get()._field_oc, _1d72ddb1d_cstr_lit(static_cast<jule::Slice<jule::U8>>(_82335_m.get()._field_log)));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1d731e852_loc_info(_self_.get()._field_oc, _82335_m.get()._field_token);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1d72d98b6_error_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5677162_BuiltinErrorCallExprModel> _83634_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1d567ac59_is_void(_83634_m.get()._field_func.get()._field_decl.ptr())) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_83634_m.get()._field_func.get()._field_result));
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1d72dc91e_expr(_self_, _83634_m.get()._field_err);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d9b3b_copy_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5676e75_BuiltinCopyCallExprModel> _84933_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1d72dc699_model(_self_, _84933_m.get()._field_dest.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1d631dee5_prim(_84933_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1d72dc699_model(_self_, _84933_m.get()._field_src.get()._field_model);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1d631dee5_prim(_84933_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72d9db1_make_call_slice(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>& _86540_m) {
	jule::Ptr<_1d6325a9b_Slc> _86617_slice = _1d631ee6e_slc(_86540_m.get()._field_kind.ptr());;
	_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_86540_m.get()._field_kind));
	if ((_1d631e732_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86540_m.get()._field_cap != nullptr)) {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1d73398a0_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1d72dc91e_expr(_self_, _86540_m.get()._field_len);
	if ((_86540_m.get()._field_cap != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d72dc91e_expr(_self_, _86540_m.get()._field_cap);
	};
	if ((_1d631e732_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d72dce19_init_expr(_self_, _86617_slice.get()._field_elem);
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72da136_make_call_str(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>& _89138_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1d72dc91e_expr(_self_, _89138_m.get()._field_len);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72da3ab_make_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel> _89833_m) {
	if ((_1d631ee6e_slc(_89833_m.get()._field_kind.ptr()) != nullptr)) {
		_1d72d9db1_make_call_slice(_self_, _89833_m);
		return;;
	};
	_1d72da136_make_call_str(_self_, _89833_m);
}



inline void _1d72da631_push_to_slice(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d50e0636_PushToSliceExprModel> _90637_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1d72dc699_model(_self_, _90637_m.get()._field_dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_obj.slice(_90713_n);;
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1d73398a0_write(_self_.get()._field_oc, _90913_dest);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d73398a0_write(_self_.get()._field_oc, _1d61c2bbd_itoa(static_cast<jule::I64>(_90637_m.get()._field_elems.get()._field_elems.len())));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90637_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1d9a1299e:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1d73398a0_write(_self_.get()._field_oc, _90913_dest);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1d72dc699_model(_self_, _91621_e);
				_1d73398a0_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1d9a1299e:;
			++it;
			goto _iter_begin_1d9a1299e;
		}
		_iter_end_1d9a1299e:;
	};
}



inline void _1d72da8a6_append_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel> _92535_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1d72dc699_model(_self_, _92535_m.get()._field_dest);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1d72dc699_model(_self_, _92535_m.get()._field_elements);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72dab2b_clone_call(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel> _93334_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1d72dc699_model(_self_, _93334_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72dada1_sizeof(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5675061_SizeofExprModel> _93930_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1d72dc699_model(_self_, _93930_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72db126_alignof(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56777c2_AlignofExprModel> _94531_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1d72dc699_model(_self_, _94531_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1d72db434_rune_lit(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d56779ae_RuneExprModel> _95128_m) {
	if ((_95128_m.get()._field_code <= 127LL)) {
		jule::Str _95321_b = _1d72dd557_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95128_m.get()._field_code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1d72de1c3_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95128_m.get()._field_code)));
}



inline void _1d72db6a9_structure_static(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d567547e_StructStaticIdentExprModel> _96240_m) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e4b8a_func_ins(_96240_m.get()._field_method));
}



inline void _1d72db92e_integrated_to_str(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5677b9b_IntegratedToStrExprModel> _96641_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1d72dc699_model(_self_, _96641_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1d72dbba4_backend_emit(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5677d88_BackendEmitExprModel> _97236_m) {
	if ((_97236_m.get()._field_exprs.len() == 0LL)) {
		_1d73398a0_write(_self_.get()._field_oc, _97236_m.get()._field_code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97236_m.get()._field_exprs.len());;
	{
		auto &expr = _97236_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d9a206d2:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1d72dc91e_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97713_n);
			}
			_iter_next_1d9a206d2:;
			++it;
			_97914_i++;
			goto _iter_begin_1d9a206d2;
		}
		_iter_end_1d9a206d2:;
	};
	_1d73398a0_write(_self_.get()._field_oc, _1d63bc25d_format(_97236_m.get()._field_code,jule::Any(_97817_args)));
}



inline void _1d72dbe29_free(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d5678075_FreeExprModel> _98728_m) {
	_1d72dc91e_expr(_self_, _98728_m.get()._field_expr);
	if (_230769083_RC) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1d72dc19e_mut_slicing(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d53aee66_MutSlicingExprModel> _99635_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d72dc699_model(_self_, _99635_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_2307697ae_PRODUCTION))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1d731e852_loc_info(_self_.get()._field_oc, _99635_m.get()._field_token);
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1d72dc91e_expr(_self_, _99635_m.get()._field_left);
	if ((_99635_m.get()._field_right != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1d72dc91e_expr(_self_, _99635_m.get()._field_right);
	};
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1d72dc424_str_insert_begin(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d52e0715_StrInsertBeginExprModel> _101340_m) {
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1d72dc699_model(_self_, _101340_m.get()._field_dest);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1d72dc699_model(_self_, _101340_m.get()._field_expr);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1d72dc699_model(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1d631bdd3_TypeKind>>()) {
			_case_begin_1d9a29796:;
			{
				_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_102129_m.operator jule::Ptr<_1d631bdd3_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
			_case_begin_1d9a29a71:;
			{
				_1d72d39c0_constant(_self_, _102129_m.operator jule::Ptr<_1d561288e_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d9a29ad7:;
			{
				_1d72d4608_var(_self_, _102129_m.operator jule::Ptr<_1d6298ea3_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55c62d1_StructIns>>()) {
			_case_begin_1d9a29b4d:;
			{
				_1d72d487d_structure_ins(_self_, _102129_m.operator jule::Ptr<_1d55c62d1_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567d498_FnIns>>()) {
			_case_begin_1d9a29bb4:;
			{
				_1d72d83cb_func_ins_common(_self_, _102129_m.operator jule::Ptr<_1d567d498_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d50b232d_UnsafeBinopExprModel>>()) {
			_case_begin_1d9a2a6cb:;
			{
				_1d72d410d_unsafe_binary(_self_, _102129_m.operator jule::Ptr<_1d50b232d_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567337d_BinopExprModel>>()) {
			_case_begin_1d9a2a742:;
			{
				_1d72d4383_binary(_self_, _102129_m.operator jule::Ptr<_1d567337d_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567356a_UnaryExprModel>>()) {
			_case_begin_1d9a2a7a8:;
			{
				_1d72d4b03_unary(_self_, _102129_m.operator jule::Ptr<_1d567356a_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673944_StructLitExprModel>>()) {
			_case_begin_1d9a2a81e:;
			{
				_1d72d4d78_structure_lit(_self_, _102129_m.operator jule::Ptr<_1d5673944_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673b31_AllocStructLitExprModel>>()) {
			_case_begin_1d9a2a885:;
			{
				_1d72d50ed_alloc_structure(_self_, _102129_m.operator jule::Ptr<_1d5673b31_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5673d1d_CastingExprModel>>()) {
			_case_begin_1d9a2a8eb:;
			{
				_1d72d5373_casting(_self_, _102129_m.operator jule::Ptr<_1d5673d1d_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
			_case_begin_1d9a2a962:;
			{
				_1d72d63eb_func_call(_self_, _102129_m.operator jule::Ptr<_1d567400a_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56741e7_SliceExprModel>>()) {
			_case_begin_1d9a2a9c8:;
			{
				_1d72d6671_slice(_self_, _102129_m.operator jule::Ptr<_1d56741e7_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567566b_ArrayExprModel>>()) {
			_case_begin_1d9a2aa3e:;
			{
				_1d72d8156_array(_self_, _102129_m.operator jule::Ptr<_1d567566b_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d53dbc84_UnsafeIndexingExprModel>>()) {
			_case_begin_1d9a2aaa5:;
			{
				_1d72d6b6b_unsafe_indexing(_self_, _102129_m.operator jule::Ptr<_1d53dbc84_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56743d4_IndexingExprModel>>()) {
			_case_begin_1d9a2ab1b:;
			{
				_1d72d68e6_indexing(_self_, _102129_m.operator jule::Ptr<_1d56743d4_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56745c1_AnonFnExprModel>>()) {
			_case_begin_1d9a2ab82:;
			{
				_1d72d6de1_anon_func(_self_, _102129_m.operator jule::Ptr<_1d56745c1_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567499a_MapExprModel>>()) {
			_case_begin_1d9a2abe8:;
			{
				_1d72d7166_map(_self_, _102129_m.operator jule::Ptr<_1d567499a_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674b87_SlicingExprModel>>()) {
			_case_begin_1d9a2ac5e:;
			{
				_1d72d73db_slicing(_self_, _102129_m.operator jule::Ptr<_1d5674b87_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674d74_TraitSubIdentExprModel>>()) {
			_case_begin_1d9a2acc5:;
			{
				_1d72d7661_trait_sub(_self_, _102129_m.operator jule::Ptr<_1d5674d74_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
			_case_begin_1d9a2ad4c:;
			{
				_1d72d78d6_structure_sub(_self_, _102129_m.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675858_CommonIdentExprModel>>()) {
			_case_begin_1d9a2adc4:;
			{
				_1d72d7b5b_common_ident(_self_, _102129_m.operator jule::Ptr<_1d5675858_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675a45_CommonSubIdentExprModel>>()) {
			_case_begin_1d9a2ae4b:;
			{
				_1d72d7dd1_common_sub(_self_, _102129_m.operator jule::Ptr<_1d5675a45_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675c32_TupleExprModel>>()) {
			_case_begin_1d9a2aec3:;
			{
				_1d72d88c6_tuple(_self_, _102129_m.operator jule::Ptr<_1d5675c32_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>>()) {
			_case_begin_1d9a2b04a:;
			{
				_1d72d8dc1_out_call(_self_, _102129_m.operator jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1d9a2b0c2:;
			{
				_1d72d9146_outln_call(_self_, _102129_m.operator jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>>()) {
			_case_begin_1d9a2b149:;
			{
				_1d72d8b4b_new_call(_self_, _102129_m.operator jule::Ptr<_1d56764d5_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>>()) {
			_case_begin_1d9a2b1c1:;
			{
				_1d72d93bb_panic_call(_self_, _102129_m.operator jule::Ptr<_1d56766c2_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>>()) {
			_case_begin_1d9a2b248:;
			{
				_1d72d9641_assert_call(_self_, _102129_m.operator jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>()) {
			_case_begin_1d9a2b2c0:;
			{
				_1d72d98b6_error_call(_self_, _102129_m.operator jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>>()) {
			_case_begin_1d9a2b347:;
			{
				_1d72da3ab_make_call(_self_, _102129_m.operator jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>>()) {
			_case_begin_1d9a2b3be:;
			{
				_1d72da8a6_append_call(_self_, _102129_m.operator jule::Ptr<_1d5676c88_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>>()) {
			_case_begin_1d9a2b446:;
			{
				_1d72dab2b_clone_call(_self_, _102129_m.operator jule::Ptr<_1d56762e8_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5676e75_BuiltinCopyCallExprModel>>()) {
			_case_begin_1d9a2b4bd:;
			{
				_1d72d9b3b_copy_call(_self_, _102129_m.operator jule::Ptr<_1d5676e75_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675061_SizeofExprModel>>()) {
			_case_begin_1d9a2b545:;
			{
				_1d72dada1_sizeof(_self_, _102129_m.operator jule::Ptr<_1d5675061_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56777c2_AlignofExprModel>>()) {
			_case_begin_1d9a2b5bc:;
			{
				_1d72db126_alignof(_self_, _102129_m.operator jule::Ptr<_1d56777c2_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d56779ae_RuneExprModel>>()) {
			_case_begin_1d9a2b644:;
			{
				_1d73398a0_write(_self_.get()._field_oc, _1d72db434_rune_lit(_self_, _102129_m.operator jule::Ptr<_1d56779ae_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567547e_StructStaticIdentExprModel>>()) {
			_case_begin_1d9a2b6bb:;
			{
				_1d72db6a9_structure_static(_self_, _102129_m.operator jule::Ptr<_1d567547e_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>>()) {
			_case_begin_1d9a2b743:;
			{
				_1d72db92e_integrated_to_str(_self_, _102129_m.operator jule::Ptr<_1d5677b9b_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5677d88_BackendEmitExprModel>>()) {
			_case_begin_1d9a2b7ba:;
			{
				_1d72dbba4_backend_emit(_self_, _102129_m.operator jule::Ptr<_1d5677d88_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5678075_FreeExprModel>>()) {
			_case_begin_1d9a2b842:;
			{
				_1d72dbe29_free(_self_, _102129_m.operator jule::Ptr<_1d5678075_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d53aee66_MutSlicingExprModel>>()) {
			_case_begin_1d9a2b8b9:;
			{
				_1d72dc19e_mut_slicing(_self_, _102129_m.operator jule::Ptr<_1d53aee66_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d52e0715_StrInsertBeginExprModel>>()) {
			_case_begin_1d9a2b941:;
			{
				_1d72dc424_str_insert_begin(_self_, _102129_m.operator jule::Ptr<_1d52e0715_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1d9a2991c:;
			{
				_1d73398a0_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1d9a29840:;
	};
}



inline void _1d72dc91e_expr(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Any _111428_e) {
	_1d72dc699_model(_self_, _111428_e);
}



inline void _1d72dcb94_val(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d62e2738_Value> _111827_v) {
	if (_1d62e2073_is_const(_111827_v.get()._field_data.ptr())) {
		_1d72d39c0_constant(_self_, _111827_v.get()._field_data.get()._field_constant,((_111827_v.get()._field_data.get()._field_kind != nullptr) && _1d6323b65_is_f32(_1d631dee5_prim(_111827_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1d72dc91e_expr(_self_, _111827_v.get()._field_data.get()._field_model);
}



inline void _1d72dce19_init_expr(jule::Ptr<_1d72d22c6_ExprCoder> _self_, jule::Ptr<_1d631bdd3_TypeKind> _112633_t) {
	if ((_1d631e4bd_ptr(_112633_t.ptr()) != nullptr)) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1d5692820_Enum> _113117_enm = _1d631e732_enm(_112633_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1d72dcb94_val(_self_, _113117_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, static__1d7361eb0_kind(_112633_t));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1d72d22c6_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1d72e047c_clone_func_decl(jule::Ptr<_1d5599dba_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1d736060c_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1d72e0724_clone_func_def(jule::Ptr<_1d5599dba_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1d736060c_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1d72e01c4_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d72e1604_TestCoder> static__1d72e1a77_new(jule::Ptr<_1d735658c_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1d72e1604_TestCoder>(_1d72e1604_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1d62743bd_ImportInfo> _1d72e1cdb_find_testing_package(jule::Ptr<_1d72e1604_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1d9a49277:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1d9a49277:;
			++it;
			goto _iter_begin_1d9a49277;
		}
		_iter_end_1d9a49277:;
	};
	return nullptr;
}



inline void _1d72e2061_append_test(jule::Ptr<_1d72e1604_TestCoder> _self_, jule::Ptr<_1d567d498_FnIns> _4335_f) {
	_1d733b880_indent(_self_.get()._field_oc);
	_1d72e2726_call_tm_reset(_self_);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1d73398a0_write(_self_.get()._field_oc, _1d72ddb1d_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e4b8a_func_ins(_4335_f));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1d72e22d6_append_package_tests(jule::Ptr<_1d72e1604_TestCoder> _self_, jule::Ptr<_1d6277327_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9a5003b:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1d9a508cc:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _6225_f = *it;
						{
							if (_1d7364ba5_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1d72e2061_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1d9a508cc:;
						++it;
						goto _iter_begin_1d9a508cc;
					}
					_iter_end_1d9a508cc:;
				};
			}
			_iter_next_1d9a5003b:;
			++it;
			goto _iter_begin_1d9a5003b;
		}
		_iter_end_1d9a5003b:;
	};
}



inline jule::Bool _1d72e254a_ready_testing_package(jule::Ptr<_1d72e1604_TestCoder> _self_) {
	jule::Ptr<_1d62743bd_ImportInfo> _7117_p = _1d72e1cdb_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1d627580e_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1d55a0068_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1d55a0068_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1d55a0068_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1d72e2726_call_tm_reset(jule::Ptr<_1d72e1604_TestCoder> _self_) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e48e3_func(_self_.get()._field_tm_reset));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1d72e2902_call_tm_failed(jule::Ptr<_1d72e1604_TestCoder> _self_) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e48e3_func(_self_.get()._field_tm_failed));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1d72e2acd_call_tm_skipped(jule::Ptr<_1d72e1604_TestCoder> _self_) {
	_1d73398a0_write(_self_.get()._field_oc, static__1d72e48e3_func(_self_.get()._field_tm_skipped));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1d72e2ca9_serialize(jule::Ptr<_1d72e1604_TestCoder> _self_) {
	_1d735a8b0_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1d735a6d4_end(_self_.get()._field_oc);
	});;
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	if ((!(_1d72e254a_ready_testing_package(_self_)))) {
		_1d73398a0_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1d733b132_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1d73398a0_write(_self_.get()._field_oc, static__1d735d71a_as_sptr(static__1d73608a4_structure_ins(_self_.get()._field_t)));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1d73398a0_write(_self_.get()._field_oc, static__1d73608a4_structure_ins(_self_.get()._field_t));
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1d733a142_add_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1d72e2902_call_tm_failed(_self_);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1d72e2acd_call_tm_skipped(_self_);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1d72e22d6_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1d733b132_done_indent(_self_.get()._field_oc);
	_1d733b880_indent(_self_.get()._field_oc);
	_1d73398a0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1d72e1604_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1d72e4261_to_out(jule::Str& _3323_ident, jule::Uintptr _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1d61c2959_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__1d72e464b_to_local(jule::I64 _5424_row, jule::I64 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1d61c2bbd_itoa(_5424_row);
	_5517_obj+=_1d61c2bbd_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__1d72e48e3_func(jule::Ptr<_1d567a7e7_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_1d9a681b9:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1d9a68252:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1d567aebd_is_method(_6521_f.ptr())) {
			_case_begin_1d9a676c4:;
			{
				jule::Str _7221_obj = static__1d72e4261_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1d9a6762a:;
			{
				return static__1d72e4261_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1d9a67570:;
	};
}



inline jule::Str static__1d72e4b8a_func_ins(jule::Ptr<_1d567d498_FnIns>& _8425_f) {
	if (_1d567e1e1_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__1d72e48e3_func(_8425_f.get()._field_decl);
	};
	return static__1d72e4261_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8425_f)));
}



inline jule::Str static__1d72e4e32_trait_decl(jule::Ptr<_1d59c3e1a_Trait> _9526_t) {
	if (_1d570be61_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__1d72e4261_to_out(_9526_t.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9526_t)));
}



inline jule::Str static__1d72e51c9_param(jule::Ptr<_1d5678eaa_Param>& _10322_p) {
	if ((_1ee53b88c_is_anon_ident(_10322_p.get()._field_ident) || _1ee53b5e5_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1d56795d7_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__1d72e464b_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__1d72e464b_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__1d72e5471_structure(jule::Ptr<_1d5599dba_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_1d7364ba5_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__1d72e4261_to_out(_11726_s.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1d72e5718_structure_ins(jule::Ptr<_1d55c62d1_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__1d72e5471_structure(_12830_s.get()._field_decl);
	};
	return static__1d72e4261_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12830_s)));
}



inline jule::Str static__1d72e59b0_field(jule::Ptr<_1d558c385_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__1d72e5c57_var(jule::Ptr<_1d6298ea3_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_1d9a73647:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1d9a736ad:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1d9a729cb:;
			{
				if ((_1d631e259_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_1d9a72a42:;
			{
				return static__1d72e464b_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1d9a72965:;
			{
				return static__1d72e4261_to_out(_14423_v.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1d9a728aa:;
	};
}



inline jule::Str static__1d72e5eee_iter_begin(jule::Uintptr _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1d61c2959_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1d72e6296_iter_end(jule::Uintptr _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1d61c2959_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1d72e653d_iter_next(jule::Uintptr _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1d61c2959_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1d72e67d5_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1d72e6a7c_match_end(jule::Uintptr _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1d61c2959_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1d72e6d24_case_begin(jule::Uintptr _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1d61c2959_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1d72e3c55_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d73561b3_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d73563a0_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d735c3c8_to_str(_1d735c10e_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1d735c6d6_equals(jule::Ptr<_1d735c10e_CustomType> _self_, jule::Ptr<_1d631bdd3_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d735c10e_CustomType _Src) {
	_Stream << _1d735c3c8_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1d735ce34_to_type(jule::Str _6027_id) {
	if ((_6027_id != jule::Str("uintptr", 7))) {
		_6027_id=_1d6247eeb_real_kind_of(_6027_id);
	};
	if (((97LL <= _6027_id[0LL]) && (_6027_id[0LL] <= 122LLU))) {
		_6027_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6027_id);
}



inline jule::Str static__1d735d1cb_prim(jule::Ptr<_1d63218aa_Prim> _7120_p) {
	return static__1d735ce34_to_type(_1d6321c1d_to_str(_7120_p.ptr()));
}



inline jule::Str static__1d735d473_tuple(jule::Ptr<_1d6326629_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1d9b55839:;
		if (it != expr.end()) {
			jule::Ptr<_1d631bdd3_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1d7361eb0_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1d9b55839:;
			++it;
			goto _iter_begin_1d9b55839;
		}
		_iter_end_1d9b55839:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1d735d71a_as_sptr(jule::Str _8823_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8823_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1d735d9b2_as_ptr(jule::Str _9622_elem) {
	return (_9622_elem + jule::Str("*", 1));
}



inline jule::Str static__1d735dc59_sptr(jule::Ptr<_1d632513e_Sptr> _10124_sptr) {
	return static__1d735d71a_as_sptr(static__1d7361eb0_kind(_10124_sptr.get()._field_elem));
}



inline jule::Str static__1d735e001_ptr(jule::Ptr<_1d63286a3_Ptr> _10623_p) {
	;
	if (_1d6329176_is_unsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1d7361eb0_kind(_10623_p.get()._field_elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1d735e298_enum_decl(jule::Ptr<_1d5692820_Enum> _11729_e) {
	return static__1d7361eb0_kind(_11729_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1d735e540_type_enum_decl(jule::Ptr<_1d5a788b5_TypeEnum> _12234_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1d735e7d7_as_slice(jule::Ptr<_1d631bdd3_TypeKind> _12628_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1d7361eb0_kind(_12628_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1d735ea7e_slice(jule::Ptr<_1d6325a9b_Slc> _13425_s) {
	return static__1d735e7d7_as_slice(_13425_s.get()._field_elem);
}



inline jule::Str static__1d735ed26_map(jule::Ptr<_1d6327152_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1d7361eb0_kind(_13923_m.get()._field_key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1d7361eb0_kind(_13923_m.get()._field_val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1d73600bd_trait_ident(jule::Str _14827_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14827_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1d7360365_trait_decl(jule::Ptr<_1d59c3e1a_Trait> _15626_t) {
	return static__1d73600bd_trait_ident(static__1d72e4e32_trait_decl(_15626_t));
}



inline jule::Str static__1d736060c_structure(jule::Ptr<_1d5599dba_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_cpp_linked && (!(_1d7364ba5_has_directive(_16125_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1d72e5471_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1d73608a4_structure_ins(jule::Ptr<_1d55c62d1_StructIns> _17133_s) {
	if (_17133_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17321_ident = static__1d72e5718_structure_ins(_17133_s);;
		if ((_17133_s.get()._field_generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17133_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1d9b60bc9:;
				if (it != expr.end()) {
					jule::Ptr<_1d631a6a6_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1d7361eb0_kind(_17629_g.get()._field_kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1d9b60bc9:;
					++it;
					goto _iter_begin_1d9b60bc9;
				}
				_iter_end_1d9b60bc9:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1d5575c86_Directive> _18317_d = _1d7364820_find_directive(_17133_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1d735b3e9_concat_all_parts(_18317_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1d72e5718_structure_ins(_17133_s);
}



inline jule::Str static__1d7360b4b_array(jule::Ptr<_1d6327c46_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1d7361eb0_kind(_19325_a.get()._field_elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1d61c2bbd_itoa(_19325_a.get()._field_n);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1d736118a_param_ins(jule::Ptr<_1d567c5c9_ParamIns>& _21930_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21930_p.get()._field_decl.get()._field_variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1d7361eb0_kind(_21930_p.get()._field_kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1d7361eb0_kind(_21930_p.get()._field_kind);
	};
	if (_21930_p.get()._field_decl.get()._field_reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1d73616c9_func_ins_result(jule::Ptr<_1d567d498_FnIns>& _24936_f) {
	if (_1d567ac59_is_void(_24936_f.get()._field_decl.ptr())) {
		if (_24936_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24936_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1d7361eb0_kind(_24936_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1d7361eb0_kind(_24936_f.get()._field_result);
}



inline jule::Str static__1d7361971_anon_func(jule::Ptr<_1d567d498_FnIns> _26229_f) {
	jule::Str _26317_decl = static__1d73616c9_func_ins_result(_26229_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26229_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26229_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1d9b6c4dd:;
			if (it != expr.end()) {
				jule::Ptr<_1d567c5c9_ParamIns> _26625_param = *it;
				{
					if (_1d56795d7_is_self(_26625_param.get()._field_decl.ptr())) {
						goto _iter_next_1d9b6c4dd;
					};
					_26317_decl+=static__1d736118a_param_ins(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1d9b6c4dd:;
				++it;
				goto _iter_begin_1d9b6c4dd;
			}
			_iter_end_1d9b6c4dd:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1d7361c18_func(jule::Ptr<_1d567d498_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1d7361971_anon_func(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1d7361eb0_kind(jule::Ptr<_1d631bdd3_TypeKind> _29024_k) {
	{
		
		if (_1d631ca93_cpp_linked(_29024_k.ptr())) {
			_case_begin_1d9b7007e:;
			{
				return _29024_k.get()._field_cpp_ident;
			}
		}
		else if ((_1d631dee5_prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70216:;
			{
				return static__1d735d1cb_prim(_1d631dee5_prim(_29024_k.ptr()));
			}
		}
		else if ((_1d6320b84_tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b7027c:;
			{
				return static__1d735d473_tuple(_1d6320b84_tup(_29024_k.ptr()));
			}
		}
		else if ((_1d631e259_sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70304:;
			{
				return static__1d735dc59_sptr(_1d631e259_sptr(_29024_k.ptr()));
			}
		}
		else if ((_1d631e4bd_ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b7037b:;
			{
				return static__1d735e001_ptr(_1d631e4bd_ptr(_29024_k.ptr()));
			}
		}
		else if ((_1d631e732_enm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70403:;
			{
				return static__1d735e298_enum_decl(_1d631e732_enm(_29024_k.ptr()));
			}
		}
		else if ((_1d631e996_tenm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b7047a:;
			{
				return static__1d735e540_type_enum_decl(_1d631e996_tenm(_29024_k.ptr()));
			}
		}
		else if ((_1d631ee6e_slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70502:;
			{
				return static__1d735ea7e_slice(_1d631ee6e_slc(_29024_k.ptr()));
			}
		}
		else if ((_1d6320920_map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70579:;
			{
				return static__1d735ed26_map(_1d6320920_map(_29024_k.ptr()));
			}
		}
		else if ((_1d63206ab_trt(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70601:;
			{
				return static__1d7360365_trait_decl(_1d63206ab_trt(_29024_k.ptr()));
			}
		}
		else if ((_1d6320447_strct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70678:;
			{
				return static__1d73608a4_structure_ins(_1d6320447_strct(_29024_k.ptr()));
			}
		}
		else if ((_1d631ec0a_arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70700:;
			{
				return static__1d7360b4b_array(_1d631ec0a_arr(_29024_k.ptr()));
			}
		}
		else if ((_1d63201d3_fnc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1d9b70777:;
			{
				return static__1d7361c18_func(_1d63201d3_fnc(_29024_k.ptr()));
			}
		}
		_match_end_1d9b6ee91:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d735c10e_CustomType>>()) {
			_case_begin_1d9b70832:;
			{
				return _29024_k.get()._field_kind.operator jule::Ptr<_1d735c10e_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1d9b73a66:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1d9b73a11:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d735c906_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d9973437_name(_1d9b78de0_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1d9973569_what(_1d9b78de0_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1d9b792ca_reset(_1d9b78de0_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1d9b7940c_short(_1d9b78de0_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9b78de0_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9b7c5ec_name(_1d9b7caa3_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1d9b7cd6c_what(_1d9b7caa3_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1d9b7ce9e_reset(_1d9b7caa3_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1d9b7d0d1_short(_1d9b7caa3_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9b7caa3_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9b810d4_name(_1d9b8158a_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1d9b81854_what(_1d9b8158a_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1d9b81986_reset(_1d9b8158a_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1d9b81ab8_short(_1d9b8158a_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9b8158a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9b84b10_name(_1d9b850b6_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1d9b85380_what(_1d9b850b6_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1d9b854b2_reset(_1d9b850b6_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1d9b855e4_short(_1d9b850b6_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9b850b6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d9b885e7_name(_1d9b88a9d_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1d9b88d67_what(_1d9b88a9d_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1d9b88e99_reset(_1d9b88a9d_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1d9b890cb_short(_1d9b88a9d_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9b88a9d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d73986bc_FlagSet> static__1d73989a8_new(void) {
	return jule::new_ptr<_1d73986bc_FlagSet>(_1d73986bc_FlagSet{._field__flags=jule::Slice<jule::Trait<_1d7396874_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1d7396874_CommonFlag> _1d7398e3c_find_flag(_1d73986bc_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1d9b94746:;
		if (it != expr.end()) {
			jule::Trait<_1d7396874_CommonFlag> _7221_flag = *it;
			{
				if ((_1d7396874_CommonFlag_mptr_data[(_7221_flag).type_offset]._1d737a2a3_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1d9b94746:;
			++it;
			goto _iter_begin_1d9b94746;
		}
		_iter_end_1d9b94746:;
	};
	return nullptr;
}



inline jule::Trait<_1d7396874_CommonFlag> _1d739924a_find_flag_short(_1d73986bc_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1d9b94c1e:;
		if (it != expr.end()) {
			jule::Trait<_1d7396874_CommonFlag> _8221_flag = *it;
			{
				if ((_1d7396874_CommonFlag_mptr_data[(_8221_flag).type_offset]._1d7396c81_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1d9b94c1e:;
			++it;
			goto _iter_begin_1d9b94c1e;
		}
		_iter_end_1d9b94c1e:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1d7396874_CommonFlag>> _1d73994ae_flags(_1d73986bc_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1d73997bc_parse(_1d73986bc_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1d739ad95_ArgParser _11617_ap = _1d739ad95_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1d739c281_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1d7399998_reset(_1d73986bc_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1d9b98151:;
		if (it != expr.end()) {
			jule::Trait<_1d7396874_CommonFlag> _12616_f = *it;
			{
				_1d7396874_CommonFlag_mptr_data[(_12616_f).type_offset]._1d7396ee5_reset(_12616_f);
			}
			_iter_next_1d9b98151:;
			++it;
			goto _iter_begin_1d9b98151;
		}
		_iter_end_1d9b98151:;
	};
}



inline jule::Ptr<_1d9b88a9d_Flag> _1d9c0d4a2_add_flag_common(_1d73986bc_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1d9c0eddd:;
			{
				goto _match_end_1d9c0ea25;
			}
		}
		_match_end_1d9c0ea25:;
	};
	if ((_1d7398e3c_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1d739924a_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1d9b88a9d_Flag> _14817_flag = jule::new_ptr<_1d9b88a9d_Flag>(_1d9b88a9d_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1d7396874_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1d9b850b6_Flag> _1d9c170c1_add_flag_common(_1d73986bc_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1d9c18985:;
			{
				goto _match_end_1d9c188b9;
			}
		}
		_match_end_1d9c188b9:;
	};
	if ((_1d7398e3c_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1d739924a_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1d9b850b6_Flag> _14817_flag = jule::new_ptr<_1d9b850b6_Flag>(_1d9b850b6_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1d7396874_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1d9c0ae50_add_var(_1d73986bc_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1d9b88a9d_Flag> _17617_flag = _1d9c0d4a2_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1d9c14a5d_add_var(_1d73986bc_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1d9b850b6_Flag> _17617_flag = _1d9c170c1_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1d73986bc_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1d6998e55_IR>,jule::Slice<_21868a483_Log>> static__1d640110a_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1d6573689_JuleImporter> _2917_importer = static__1d65874b1_new(_1d66eab0d_build_compile_info());;
	jule::Slice<jule::Ptr<_1d5574b0e_Ast>> _3018_files;;
	jule::Slice<_21868a483_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1d65e8753_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1d6277327_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1d6338d01_analyze_package(_3018_files,jule::Trait<_1d6271ac4_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1d6998e55_IR> _4517_ir = jule::new_ptr<_1d6998e55_IR>(_1d6998e55_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1d6599d86_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_1d66e6cb3_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1d643469e_append_structs(_1d6998e55_IR* _self_, jule::Ptr<_1d6277327_Package>& _5734_p, jule::Slice<jule::Ptr<_1d5599dba_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9622bec:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1d962358d:;
					if (it != expr.end()) {
						jule::Ptr<_1d5599dba_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1d962358d:;
						++it;
						goto _iter_begin_1d962358d;
					}
					_iter_end_1d962358d:;
				};
			}
			_iter_next_1d9622bec:;
			++it;
			goto _iter_begin_1d9622bec;
		}
		_iter_end_1d9622bec:;
	};
}



inline jule::Slice<jule::Ptr<_1d5599dba_Struct>> _1d643b772_get_all_structures(_1d6998e55_IR* _self_) {
	jule::Slice<jule::Ptr<_1d5599dba_Struct>> _7017_buffer = nullptr;;
	_1d643469e_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1d962400b:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1d643469e_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1d962400b:;
			++it;
			goto _iter_begin_1d962400b;
		}
		_iter_end_1d962400b:;
	};
	return _7017_buffer;
}



inline void _1d6460785_append_globals(_1d6998e55_IR* _self_, jule::Ptr<_1d6277327_Package>& _8034_p, jule::Slice<jule::Ptr<_1d6298ea3_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9625d76:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1d9626706:;
					if (it != expr.end()) {
						jule::Ptr<_1d6298ea3_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1d9626706:;
						++it;
						goto _iter_begin_1d9626706;
					}
					_iter_end_1d9626706:;
				};
			}
			_iter_next_1d9625d76:;
			++it;
			goto _iter_begin_1d9625d76;
		}
		_iter_end_1d9625d76:;
	};
}



inline jule::Slice<jule::Ptr<_1d6298ea3_Var>> _1d646be34_get_all_globals(_1d6998e55_IR* _self_) {
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _9317_buffer = nullptr;;
	_1d6460785_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1d962821e:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1d6460785_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1d962821e:;
			++it;
			goto _iter_begin_1d962821e;
		}
		_iter_end_1d962821e:;
	};
	return _9317_buffer;
}



inline void _1d66d11cb_order(_1d6998e55_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1d643b772_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1d646be34_get_all_globals(&(*_self_));
	static__1d6776e0e_order_structures((*_self_)._field_ordered._field_structs);
	static__1d68da24d_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6998e55_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d5590388_to_str(_1d55c62d1_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1d8616153:;
			if (it != expr.end()) {
				jule::Ptr<_1d631a6a6_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_1d631c2ce_to_str(_24720_g.get()._field_kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1d8616153:;
				++it;
				goto _iter_begin_1d8616153;
			}
			_iter_end_1d8616153:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1d559ba9d_equals(jule::Ptr<_1d55c62d1_StructIns> _self_, jule::Ptr<_1d631bdd3_TypeKind> _25826_other) {
	jule::Ptr<_1d55c62d1_StructIns> _25913_s = _1d6320447_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_1d631c5dc_equals(_self_.get()._field_generics[_27217_i].get()._field_kind, _25913_s.get()._field_generics[_27217_i].get()._field_kind)))) {
				return false;
			};
		}
	_iter_next_1d86198c6:;
	}
	_iter_end_1d86198c6:;;
	return true;
}



inline jule::Bool _1d559cc14_same(_1d55c62d1_StructIns* _self_, jule::Ptr<_1d55c62d1_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1d861bd6d:;
		if (it != expr.end()) {
			jule::I64 _29113_i = it - expr.begin();
			jule::Ptr<_1d631a6a6_InsGeneric> &_29116_g = *it;
			{
				if ((!(_1d631c5dc_equals(_29116_g.get()._field_kind, _28623_s.get()._field_generics[_29113_i].get()._field_kind)))) {
					return false;
				};
			}
			_iter_next_1d861bd6d:;
			++it;
			_29113_i++;
			goto _iter_begin_1d861bd6d;
		}
		_iter_end_1d861bd6d:;
	};
	return true;
}



inline jule::Ptr<_1d567a7e7_Fn> _1d55a0068_find_method(_1d55c62d1_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1d861d853:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_1d861d853:;
			++it;
			goto _iter_begin_1d861d853;
		}
		_iter_end_1d861d853:;
	};
	return nullptr;
}



inline jule::Ptr<_1d55a2532_FieldIns> _1d55a1388_find_field(_1d55c62d1_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1d861eac9:;
		if (it != expr.end()) {
			jule::Ptr<_1d55a2532_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_1d861eac9:;
			++it;
			goto _iter_begin_1d861eac9;
		}
		_iter_end_1d861eac9:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d55c62d1_StructIns _Src) {
	_Stream << _1d5590388_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d6c196d1_ObjectDeadCode> static__1d6c19acc_new(jule::Ptr<_1d6998e55_IR>& _3424_ir) {
	return jule::new_ptr<_1d6c196d1_ObjectDeadCode>(_1d6c196d1_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1d9662d3b_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d59c3e1a_Trait>& _4031_t) {
	jule::Slice<jule::Ptr<_1d59c3e1a_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d9664d71:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1d9664a85:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d9665547:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1d9665547:;
			++it;
			_5213_i++;
			goto _iter_begin_1d9665547;
		}
		_iter_end_1d9665547:;
	};
	return false;
}

inline jule::Bool _1d966898a_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d567d498_FnIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1d567d498_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d966a3e8:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1d966a33d:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d966a99d:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1d966a99d:;
			++it;
			_5213_i++;
			goto _iter_begin_1d966a99d;
		}
		_iter_end_1d966a99d:;
	};
	return false;
}

inline jule::Bool _1d9671e8d_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d55c62d1_StructIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1d55c62d1_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d967438b:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1d9674116:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d9674468:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1d9674468:;
			++it;
			_5213_i++;
			goto _iter_begin_1d9674468;
		}
		_iter_end_1d9674468:;
	};
	return false;
}

inline jule::Bool _1d9676bc9_is_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d6298ea3_Var>& _4031_t) {
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d9678a00:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1d96788ce:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d9679407:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1d9679407:;
			++it;
			_5213_i++;
			goto _iter_begin_1d9679407;
		}
		_iter_end_1d9679407:;
	};
	return false;
}



inline void _1d9663864_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d59c3e1a_Trait> _6036_t) {
	{
		
{
			_case_begin_1d966712b:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6036_t);;
			}
		}
		_match_end_1d9666cc9:;
	};
}

inline void _1d966c1ec_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d567d498_FnIns> _6036_t) {
	{
		
{
			_case_begin_1d966ce23:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6036_t);;
			}
		}
		_match_end_1d966cb9d:;
	};
}

inline void _1d9670332_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d55c62d1_StructIns> _6036_t) {
	{
		
{
			_case_begin_1d9671c3a:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6036_t);;
			}
		}
		_match_end_1d967194e:;
	};
}

inline void _1d967a56d_push_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d6298ea3_Var> _6036_t) {
	{
		
{
			_case_begin_1d967b0eb:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6036_t);;
			}
		}
		_match_end_1d967b01e:;
	};
}



inline void _1d6c48798_set_references_as_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d5680c5e_ReferenceStack>& _7347_rs) {
	if ((_7347_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1d56813d0_len(_7347_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1d56816dd_at(_7347_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1d59c3e1a_Trait>>()) {
					_case_begin_1d9661d29:;
					{
						jule::Ptr<_1d59c3e1a_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1d59c3e1a_Trait>();;
						if (_1d9662d3b_is_live(_self_, _8225_t)) {
							goto _iter_next_1d9661169;
						};
						_1d9663864_push_live(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1d96668bc:;
							if (it != expr.end()) {
								jule::Ptr<_1d567a7e7_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1d9666dd9:;
										if (it != expr.end()) {
											jule::Ptr<_1d567d498_FnIns> _8833_mins = *it;
											{
												if (_1d966898a_is_live(_self_, _8833_mins)) {
													goto _iter_next_1d9666dd9;
												};
												_1d966c1ec_push_live(_self_, _8833_mins);
												_1d6c48798_set_references_as_live(_self_, _8833_mins.get()._field_refers);
											}
											_iter_next_1d9666dd9:;
											++it;
											goto _iter_begin_1d9666dd9;
										}
										_iter_end_1d9666dd9:;
									};
								}
								_iter_next_1d96668bc:;
								++it;
								goto _iter_begin_1d96668bc;
							}
							_iter_end_1d96668bc:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1d567d498_FnIns>>()) {
					_case_begin_1d9661d90:;
					{
						jule::Ptr<_1d567d498_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1d567d498_FnIns>();;
						if (_1d966898a_is_live(_self_, _9725_f)) {
							goto _match_end_1d9661e5b;
						};
						if (((_9725_f.get()._field_owner != nullptr) && (!(_9725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_1d9671e8d_is_live(_self_, _9725_f.get()._field_owner)))) {
								_1d9670332_push_live(_self_, _9725_f.get()._field_owner);
								_1d6c48798_set_references_as_live(_self_, _9725_f.get()._field_owner.get()._field_refers);
							};
						};
						_1d966c1ec_push_live(_self_, _9725_f);
						_1d6c48798_set_references_as_live(_self_, _9725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
					_case_begin_1d9661ed3:;
					{
						jule::Ptr<_1d6298ea3_Var> _11025_v = _7921_ref.operator jule::Ptr<_1d6298ea3_Var>();;
						if (_1d9676bc9_is_live(_self_, _11025_v)) {
							goto _match_end_1d9661e5b;
						};
						_1d967a56d_push_live(_self_, _11025_v);
						_1d6c48798_set_references_as_live(_self_, _11025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1d55c62d1_StructIns>>()) {
					_case_begin_1d9662049:;
					{
						jule::Ptr<_1d55c62d1_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1d55c62d1_StructIns>();;
						if (_1d9671e8d_is_live(_self_, _11725_s)) {
							goto _match_end_1d9661e5b;
						};
						_1d9670332_push_live(_self_, _11725_s);
						_1d6c48798_set_references_as_live(_self_, _11725_s.get()._field_refers);
						{
							auto &expr = _11725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1d967e52d:;
							if (it != expr.end()) {
								jule::Ptr<_1d567a7e7_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1d967ec7b:;
										if (it != expr.end()) {
											jule::Ptr<_1d567d498_FnIns> _12433_mins = *it;
											{
												if (_1d966898a_is_live(_self_, _12433_mins)) {
													goto _iter_next_1d967ec7b;
												};
												_1d966c1ec_push_live(_self_, _12433_mins);
												_1d6c48798_set_references_as_live(_self_, _12433_mins.get()._field_refers);
											}
											_iter_next_1d967ec7b:;
											++it;
											goto _iter_begin_1d967ec7b;
										}
										_iter_end_1d967ec7b:;
									};
								}
								_iter_next_1d967e52d:;
								++it;
								goto _iter_begin_1d967e52d;
							}
							_iter_end_1d967e52d:;
						};
					}
				}
				_match_end_1d9661e5b:;
			};
		}
	_iter_next_1d9661169:;
	}
	_iter_end_1d9661169:;;
}



inline void _1d6c48a1d_inits(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d6277327_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9661576:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1d9682531:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_1d567d498_FnIns> _14029_ins = _13825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1d6c48798_set_references_as_live(_self_, _14029_ins.get()._field_refers);
							};
						}
						_iter_next_1d9682531:;
						++it;
						goto _iter_begin_1d9682531;
					}
					_iter_end_1d9682531:;
				};
			}
			_iter_next_1d9661576:;
			++it;
			goto _iter_begin_1d9661576;
		}
		_iter_end_1d9661576:;
	};
}



inline void _1d6c48c93_collect_live_package(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d6277327_Package>& _14845_pkg) {
	_1d6c48a1d_inits(_self_, _14845_pkg);
	if (_230768c86_TEST) {
		{
			auto &expr = _14845_pkg.get()._field_files;
			auto it = expr.begin();
			_iter_begin_1d9684a1c:;
			if (it != expr.end()) {
				jule::Ptr<_1d62db952_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_funcs;
						auto it = expr.begin();
						_iter_begin_1d96853ad:;
						if (it != expr.end()) {
							jule::Ptr<_1d567a7e7_Fn> _15529_f = *it;
							{
								if (_1d6c4aca6_has_directive(_15529_f.get()._field_directives,jule::Str("test", 4))) {
									jule::Ptr<_1d567d498_FnIns> _15733_ins = _15529_f.get()._field_instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1d6c48798_set_references_as_live(_self_, _15733_ins.get()._field_refers);
								};
							}
							_iter_next_1d96853ad:;
							++it;
							goto _iter_begin_1d96853ad;
						}
						_iter_end_1d96853ad:;
					};
				}
				_iter_next_1d9684a1c:;
				++it;
				goto _iter_begin_1d9684a1c;
			}
			_iter_end_1d9684a1c:;
		};
	};
}



inline void _1d6c48e6e_collect_live(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1d9683543:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_cpp_linked))) {
					_1d6c48c93_collect_live_package(_self_, _16721_used.get()._field_package);
				};
			}
			_iter_next_1d9683543:;
			++it;
			goto _iter_begin_1d9683543;
		}
		_iter_end_1d9683543:;
	};
	_1d6c48c93_collect_live_package(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_1d567a7e7_Fn> _17517_main = _1d6278acb_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1d567d498_FnIns> _17617_ins = _17517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1d6c48798_set_references_as_live(_self_, _17617_ins.get()._field_refers);
}



inline void _1d6c491e4_remove_dead_globals(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d6298ea3_Var>>& _18144_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18144_vars.len())) {
		{
			jule::Ptr<_1d6298ea3_Var> _18417_v = _18144_vars[_18217_i];;
			if (_1d9676bc9_is_live(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1d968a281;
			};
			_18144_vars=jule::append(_18144_vars.slice(0LL,_18217_i),_18144_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1d968a281:;
	}
	_iter_end_1d968a281:;;
}



inline void _1d6c49469_remove_dead_fns(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d567a7e7_Fn>>& _19340_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19340_funcs.len())) {
		{
			jule::Ptr<_1d567a7e7_Fn> _19621_f = _19340_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1d567d498_FnIns> _19921_ins = _19621_f.get()._field_instances[_19721_j];;
					if (_1d966898a_is_live(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1d968d8b1;
					};
					_19621_f.get()._field_instances=jule::append(_19621_f.get()._field_instances.slice(0LL,_19721_j),_19621_f.get()._field_instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1d968d8b1:;
			}
			_iter_end_1d968d8b1:;;
			if ((_19621_f.get()._field_instances.len() == 0LL)) {
				_19340_funcs=jule::append(_19340_funcs.slice(0LL,_19417_i),_19340_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1d968c184;
			};
			(_19417_i)++;
		}
	_iter_next_1d968c184:;
	}
	_iter_end_1d968c184:;;
}



inline void _1d6c496de_remove_dead_structs(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d5599dba_Struct>>& _21444_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21444_structs.len())) {
		{
			jule::Ptr<_1d5599dba_Struct> _21721_s = _21444_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_1d55c62d1_StructIns> _22025_ins = _21721_s.get()._field_instances[_21821_j];;
					_1d6c49469_remove_dead_fns(_self_, _22025_ins.get()._field_methods);
					if (((_22025_ins.get()._field_methods.len() != 0LL) || _1d9671e8d_is_live(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1d9692ad5;
					};
					_21721_s.get()._field_instances=jule::append(_21721_s.get()._field_instances.slice(0LL,_21821_j),_21721_s.get()._field_instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1d9692ad5:;
			}
			_iter_end_1d9692ad5:;;
			if ((_21721_s.get()._field_instances.len() == 0LL)) {
				_21444_structs=jule::append(_21444_structs.slice(0LL,_21517_i),_21444_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1d969082a;
			};
			(_21517_i)++;
		}
	_iter_next_1d969082a:;
	}
	_iter_end_1d969082a:;;
}



inline void _1d6c49964_remove_dead_traits(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d59c3e1a_Trait>>& _23643_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23643_traits.len())) {
		{
			jule::Ptr<_1d59c3e1a_Trait> _23921_t = _23643_traits[_23717_i];;
			if ((!(_1d9662d3b_is_live(_self_, _23921_t)))) {
				_23643_traits=jule::append(_23643_traits.slice(0LL,_23717_i),_23643_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1d969a2e6;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_implemented.len())) {
				{
					jule::Ptr<_1d5599dba_Struct> _24621_s = _23921_t.get()._field_implemented[_24421_j];;
					if ((_24621_s.get()._field_instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1d969c073;
					};
					_23921_t.get()._field_implemented=jule::append(_23921_t.get()._field_implemented.slice(0LL,_24421_j),_23921_t.get()._field_implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1d969c073:;
			}
			_iter_end_1d969c073:;;
			(_23717_i)++;
		}
	_iter_next_1d969a2e6:;
	}
	_iter_end_1d969a2e6:;;
}



inline void _1d6c49bd9_remove_deads_file(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d62db952_SymbolTable>& _25742_file) {
	_1d6c49469_remove_dead_fns(_self_, _25742_file.get()._field_funcs);
	_1d6c496de_remove_dead_structs(_self_, _25742_file.get()._field_structs);
	_1d6c49964_remove_dead_traits(_self_, _25742_file.get()._field_traits);
	_1d6c491e4_remove_dead_globals(_self_, _25742_file.get()._field_vars);
}



inline void _1d6c49e5e_remove_deads_package(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_, jule::Ptr<_1d6277327_Package>& _26445_pkg) {
	{
		auto &expr = _26445_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d96a1b49:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _26521_file = *it;
			{
				_1d6c49bd9_remove_deads_file(_self_, _26521_file);
			}
			_iter_next_1d96a1b49:;
			++it;
			goto _iter_begin_1d96a1b49;
		}
		_iter_end_1d96a1b49:;
	};
}



inline void _1d6c4a13a_remove_deads(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1d96a2430:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_cpp_linked))) {
					_1d6c49e5e_remove_deads_package(_self_, _27121_used.get()._field_package);
				};
			}
			_iter_next_1d96a2430:;
			++it;
			goto _iter_begin_1d96a2430;
		}
		_iter_end_1d96a2430:;
	};
	_1d6c49e5e_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _1d6c4a316_elimanate(jule::Ptr<_1d6c196d1_ObjectDeadCode> _self_) {
	_1d6c48e6e_collect_live(_self_);
	_1d6c4a13a_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1d6c196d1_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d735658c_ObjectCoder> static__1d7339570_new(jule::Ptr<_1d6998e55_IR>& _7228_ir, _1d73561b3_SerializationInfo _7237_info) {
	jule::Ptr<_1d735658c_ObjectCoder> _7317_oc = jule::new_ptr<_1d735658c_ObjectCoder>(_1d735658c_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1d72d26c2_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1d72c9d6d_new(_7317_oc);
	return _7317_oc;
}



inline void _1d73398a0_write(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _1d733a142_add_indent(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1d733b132_done_indent(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1d733b880_indent(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1d733ccb0_find_type_offset(_1d735658c_ObjectCoder* _self_, jule::Ptr<_1d59c3e1a_Trait> _10231_t, jule::Ptr<_1d631bdd3_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1d55c62d1_StructIns> _10617_s = nullptr;;
	if ((_1d631e259_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1d631e259_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_1d6320447_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1d6320447_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1d9a88195:;
		if (it != expr.end()) {
			jule::Ptr<_1d73563a0_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1d9a88195:;
			++it;
			goto _iter_begin_1d9a88195;
		}
		_iter_end_1d9a88195:;
	};
	return -1LL;
}



inline void _1d731e852_loc_info(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1ee538d51_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_2307697ae_PRODUCTION) {
		{
			
			if (_2185eacc8_has_prefix(_12414_loc,_1ed63c6d6_PATH_STDLIB)) {
				_case_begin_1d9a8a5e8:;
				{
					_1d73398a0_write(_self_, _1d72dd7ee_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_21863367e_dir(_1ed63c6d6_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_2185eacc8_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1d9a8a2b8:;
				{
					_1d73398a0_write(_self_, _1d72dd7ee_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_21863367e_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1d9a8a252:;
				{
					_1d73398a0_write(_self_, _1d72dd7ee_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1d9a8a175:;
		};
	} else {
		_1d73398a0_write(_self_, _1d72dd7ee_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1d73398a0_write(_self_, jule::Str(":", 1));
	_1d73398a0_write(_self_, _1d61c2bbd_itoa(_12329_t.get()._field_row));
	_1d73398a0_write(_self_, jule::Str(":", 1));
	_1d73398a0_write(_self_, _1d61c2bbd_itoa(_12329_t.get()._field_column));
}



inline void _1d731c212_head(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7350d8e_Time _15013_time = static__1d7351433_now();;
	_1d73506eb_AbsTime _15113_abs = _1d7352a72_abs(&_15013_time);;
	_1d73398a0_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1d73398a0_write(_self_, jule::Str("// JuleC version: ", 18));
	_1d73398a0_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1d73398a0_write(_self_, jule::Str("\n", 1));
	_1d73398a0_write(_self_, jule::Str("// Date: ", 9));
	_1d73398a0_write(_self_, _1d61c2959_fmt_uint(_15113_abs._field_day,10LL));
	_1d73398a0_write(_self_, jule::Str("/", 1));
	_1d73398a0_write(_self_, _1d61c2959_fmt_uint(_15113_abs._field_month,10LL));
	_1d73398a0_write(_self_, jule::Str("/", 1));
	_1d73398a0_write(_self_, _1d61c2959_fmt_uint(_15113_abs._field_year,10LL));
	_1d73398a0_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1d73398a0_write(_self_, _self_.get()._field_info._field_compiler);
	_1d73398a0_write(_self_, jule::Str(" ", 1));
	_1d73398a0_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	if (_2307697ae_PRODUCTION) {
		_1d73398a0_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_230769083_RC))) {
		_1d73398a0_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2307694a1_SAFETY))) {
		_1d73398a0_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1d73398a0_write(_self_, jule::Str("\n\n#include \"", 12));
	_1d73398a0_write(_self_, _1ed63c351_PATH_API);
	_1d73398a0_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1d733a890_links(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1d9a9655a:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_1d9a97429:;
						{
							goto _iter_next_1d9a9655a;
						}
					}
					else if (_21867d9b5_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_1d9a970e9:;
						{
							_1d73398a0_write(_self_, jule::Str("#include ", 9));
							_1d73398a0_write(_self_, _18316_used.get()._field_path);
							_1d73398a0_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1d9a97083:;
						{
							_1d73398a0_write(_self_, jule::Str("#include \"", 10));
							_1d73398a0_write(_self_, _18316_used.get()._field_path);
							_1d73398a0_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1d9a96ea6:;
				};
			}
			_iter_next_1d9a9655a:;
			++it;
			goto _iter_begin_1d9a9655a;
		}
		_iter_end_1d9a9655a:;
	};
}



inline void _1d7327e98_prepare_structures(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1d9a96c64:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_1d735b152_prepare_structure(_20021_s);
				};
			}
			_iter_next_1d9a96c64:;
			++it;
			goto _iter_begin_1d9a96c64;
		}
		_iter_end_1d9a96c64:;
	};
}



inline void _1d7328dab_iter_packages(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1d9a99c23:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_1d9a99c23:;
			++it;
			goto _iter_begin_1d9a99c23;
		}
		_iter_end_1d9a99c23:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1d7329593_build_trait_map(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7328dab_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)>([=](jule::Ptr<_1d6277327_Package>& _21736_pkg) mutable -> void {
		_1d735adee_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)>([=](jule::Ptr<_1d62db952_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1d9a9db17:;
				if (it != expr.end()) {
					jule::Ptr<_1d59c3e1a_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1d73563a0_TraitHash>(_1d73563a0_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1d9a9db17;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1d9a9ee04:;
							if (it != expr.end()) {
								jule::Ptr<_1d5599dba_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1d9a9e6c8:;
										if (it != expr.end()) {
											jule::Ptr<_1d55c62d1_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1d73563a0_TraitHash>(_1d73563a0_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1d9a9e6c8:;
											++it;
											goto _iter_begin_1d9a9e6c8;
										}
										_iter_end_1d9a9e6c8:;
									};
								}
								_iter_next_1d9a9ee04:;
								++it;
								goto _iter_begin_1d9a9ee04;
							}
							_iter_end_1d9a9ee04:;
						};
					}
					_iter_next_1d9a9db17:;
					++it;
					goto _iter_begin_1d9a9db17;
				}
				_iter_end_1d9a9db17:;
			};
		}));
	}));
}



inline void _1d7329c7a_trait_decls(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7328dab_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)>([=](jule::Ptr<_1d6277327_Package>& _24836_pkg) mutable -> void {
		_1d735adee_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)>([=](jule::Ptr<_1d62db952_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1d9aa36cc:;
				if (it != expr.end()) {
					jule::Ptr<_1d59c3e1a_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1d733b880_indent(_self_);
						_1d73398a0_write(_self_, jule::Str("struct ", 7));
						_1d73398a0_write(_self_, static__1d72e4e32_trait_decl(_25029_t));
						_1d73398a0_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1d9aa36cc:;
					++it;
					goto _iter_begin_1d9aa36cc;
				}
				_iter_end_1d9aa36cc:;
			};
		}));
	}));
}



inline void _1d7326ccc_structure_plain_decl(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d5599dba_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d9aa32c0:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c62d1_StructIns> _26421_ins = *it;
			{
				_1d73398a0_write(_self_, jule::Str("struct ", 7));
				_1d73398a0_write(_self_, static__1d72e5718_structure_ins(_26421_ins));
				_1d73398a0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1d9aa32c0:;
			++it;
			goto _iter_begin_1d9aa32c0;
		}
		_iter_end_1d9aa32c0:;
	};
}



inline void _1d7320a40_structure_plain_decls(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1d9aa68bc:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_1d7326ccc_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_1d9aa68bc:;
			++it;
			goto _iter_begin_1d9aa68bc;
		}
		_iter_end_1d9aa68bc:;
	};
}



inline void _1d7327915_field_decl(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55a2532_FieldIns>& _27935_f) {
	_1d73398a0_write(_self_, static__1d7361eb0_kind(_27935_f.get()._field_kind));
	_1d73398a0_write(_self_, jule::Str(" ", 1));
	_1d73398a0_write(_self_, static__1d72e59b0_field(_27935_f.get()._field_decl));
	_1d73398a0_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_1d72dce19_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_1d72dc91e_expr(_self_.get()._field_ec, _27935_f.get()._field_default.get()._field_model);
	};
	_1d73398a0_write(_self_, jule::Str(";", 1));
}



inline void _1d7321e09_structure_destructor(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _29445_s) {
	;
	jule::Ptr<_1d567a7e7_Fn> _29613_dispose_method = _1d55a0068_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__1d629a14c_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_1d73398a0_write(_self_, jule::Str("~", 1));
	_1d73398a0_write(_self_, static__1d72e5718_structure_ins(_29445_s));
	_1d73398a0_write(_self_, jule::Str("(void) { ", 9));
	_1d73398a0_write(_self_, static__1d72e48e3_func(_29613_dispose_method));
	_1d73398a0_write(_self_, jule::Str("(this); }", 9));
}



inline void _1d732a462_structure_derive_defs_decls(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _30948_s) {
	if (_1d558ba16_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1d733b880_indent(_self_);
		_1d73398a0_write(_self_, static__1d72e047c_clone_func_decl(_30948_s.get()._field_decl));
		_1d73398a0_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1d7356b31_structure_operator_eq(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_1d55c62d1_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_1d7356d95_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1d733b880_indent(_self_);
	if (_23095be8a_INLINE) {
		_1d73398a0_write(_self_, jule::Str("inline ", 7));
	};
	_1d73398a0_write(_self_, jule::Str("bool operator==(", 16));
	_1d73398a0_write(_self_, _31742_ident);
	_1d73398a0_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_1d733a142_add_indent(_self_);
		_1d73398a0_write(_self_, jule::Str("\n", 1));
		_1d733b880_indent(_self_);
		_1d73398a0_write(_self_, jule::Str("return ", 7));
		_1d733a142_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1d9ab3e7e:;
			if (it != expr.end()) {
				jule::Ptr<_1d55a2532_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_1d55c62d1_StructIns> _34021_strct = _1d6320447_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1d9ab3e7e;
					};
					if (_33721_writed) {
						_1d73398a0_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_1d73398a0_write(_self_, jule::Str("\n", 1));
					_1d733b880_indent(_self_);
					_1d73398a0_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__1d72e59b0_field(_33825_f.get()._field_decl);;
					_1d73398a0_write(_self_, _35221_f_ident);
					_1d73398a0_write(_self_, jule::Str(" == _other.", 11));
					_1d73398a0_write(_self_, _35221_f_ident);
				}
				_iter_next_1d9ab3e7e:;
				++it;
				goto _iter_begin_1d9ab3e7e;
			}
			_iter_end_1d9ab3e7e:;
		};
		_1d733b132_done_indent(_self_);
		if ((!(_33721_writed))) {
			_1d73398a0_write(_self_, jule::Str("true", 4));
		};
		_1d73398a0_write(_self_, jule::Str(";\n", 2));
		_1d733b132_done_indent(_self_);
		_1d733b880_indent(_self_);
		_1d73398a0_write(_self_, jule::Str("}", 1));
	} else {
		_1d73398a0_write(_self_, jule::Str(" return true; }", 15));
	};
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1d7356c63_structure_operator_not_eq(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_1d55c62d1_StructIns>& _37163_s) {
	_1d733b880_indent(_self_);
	if (_23095be8a_INLINE) {
		_1d73398a0_write(_self_, jule::Str("inline ", 7));
	};
	_1d73398a0_write(_self_, jule::Str("bool operator!=(", 16));
	_1d73398a0_write(_self_, _37146_ident);
	_1d73398a0_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1d7356d95_structure_operator(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_1d567d498_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _1d567ac59_is_void(_38256_f.get()._field_decl.ptr());;
	_1d733b880_indent(_self_);
	if (_23095be8a_INLINE) {
		_1d73398a0_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_1d73398a0_write(_self_, _38239_ident);
		_1d73398a0_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1d631dee5_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_1d73398a0_write(_self_, _38239_ident);
		} else {
			_1d73398a0_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1d73398a0_write(_self_, jule::Str(" operator", 9));
	_1d73398a0_write(_self_, _38267_op);
	_1d73398a0_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_1d567c5c9_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_1d73398a0_write(_self_, static__1d736118a_param_ins(_41021_p));
		_1d73398a0_write(_self_, jule::Str(" _other", 7));
	};
	_1d73398a0_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_1d73398a0_write(_self_, jule::Str("return ", 7));
	};
	_1d73398a0_write(_self_, static__1d72e4b8a_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_1d73398a0_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_1d73398a0_write(_self_, jule::Str("return *this; ", 14));
		};
		_1d73398a0_write(_self_, jule::Str("}", 1));
	} else {
		_1d73398a0_write(_self_, jule::Str("(this); }", 9));
	};
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1d7356ec7_structure_operators(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__1d72e5718_structure_ins(_43144_s);;
	_1d7356b31_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_1d7356c63_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1d7356d95_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1d7357109_structure_ins_decl(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1d9ad6c3d:;
			if (it != expr.end()) {
				jule::Ptr<_1d567a7e7_Fn> _47225_m = *it;
				{
					_1d7357714_func_decl(_self_, _47225_m,false);
				}
				_iter_next_1d9ad6c3d:;
				++it;
				goto _iter_begin_1d9ad6c3d;
			}
			_iter_end_1d9ad6c3d:;
		};
	};
	_1d73398a0_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__1d72e5718_structure_ins(_47043_s);;
	_1d73398a0_write(_self_, _47813_out_ident);
	_1d73398a0_write(_self_, jule::Str(" {\n", 3));
	_1d733a142_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1d9ad8c51:;
		if (it != expr.end()) {
			jule::Ptr<_1d55a2532_FieldIns> _48421_f = *it;
			{
				_1d733b880_indent(_self_);
				_1d7327915_field_decl(_self_, _48421_f);
				_1d73398a0_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1d9ad8c51:;
			++it;
			goto _iter_begin_1d9ad8c51;
		}
		_iter_end_1d9ad8c51:;
	};
	_1d733b880_indent(_self_);
	_1d7321e09_structure_destructor(_self_, _47043_s);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	_1d733b880_indent(_self_);
	_1d73398a0_write(_self_, _47813_out_ident);
	_1d73398a0_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1d732a462_structure_derive_defs_decls(_self_, _47043_s);
	_1d7356ec7_structure_operators(_self_, _47043_s);
	_1d73398a0_write(_self_, jule::Str("\n", 1));
	_1d733b132_done_indent(_self_);
	_1d733b880_indent(_self_);
	_1d73398a0_write(_self_, jule::Str("};", 2));
}



inline void _1d735723b_structure_decl(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d5599dba_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d9adcd76:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c62d1_StructIns> _51021_ins = *it;
			{
				_1d7357109_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_1d9adcd76:;
			++it;
			goto _iter_begin_1d9adcd76;
		}
		_iter_end_1d9adcd76:;
	};
}



inline void _1d735736d_structure_decls(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1d9add65c:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_1d735723b_structure_decl(_self_, _51621_s);
					_1d73398a0_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1d9add65c:;
			++it;
			goto _iter_begin_1d9add65c;
		}
		_iter_end_1d9add65c:;
	};
}



inline void _1d73574a0_params_decls(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_1d73398a0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1d73398a0_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_1d9ae0dac:;
		if (it != expr.end()) {
			jule::I64 _53114_i = it - expr.begin();
			jule::Ptr<_1d567c5c9_ParamIns> _53121_p = *it;
			{
				_1d73398a0_write(_self_, static__1d736118a_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_1d73398a0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1d9ae0dac:;
			++it;
			_53114_i++;
			goto _iter_begin_1d9ae0dac;
		}
		_iter_end_1d9ae0dac:;
	};
	_1d73398a0_write(_self_, jule::Str(")", 1));
}



inline void _1d73575d2_func_head(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d567d498_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _23095be8a_INLINE) && (!(_1d567b232_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_1d73398a0_write(_self_, jule::Str("inline ", 7));
	};
	_1d73398a0_write(_self_, static__1d73616c9_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_1d73398a0_write(_self_, jule::Str("(*", 2));
		_1d73398a0_write(_self_, static__1d72e4b8a_func_ins(_54134_f));
		_1d73398a0_write(_self_, jule::Str(")", 1));
	} else {
		_1d73398a0_write(_self_, jule::Str(" ", 1));
		_1d73398a0_write(_self_, static__1d72e4b8a_func_ins(_54134_f));
	};
}



inline void _1d7357714_func_decl(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d567a7e7_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d9ae6324:;
		if (it != expr.end()) {
			jule::Ptr<_1d567d498_FnIns> _55721_c = *it;
			{
				_1d733b880_indent(_self_);
				_1d73575d2_func_head(_self_, _55721_c,_55642_ptr);
				_1d73574a0_params_decls(_self_, _55721_c.get()._field_params);
				_1d73398a0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1d9ae6324:;
			++it;
			goto _iter_begin_1d9ae6324;
		}
		_iter_end_1d9ae6324:;
	};
}



inline void _1d7357846_func_decls(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7328dab_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)>([=](jule::Ptr<_1d6277327_Package>& _56636_pkg) mutable -> void {
		_1d735adee_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)>([=](jule::Ptr<_1d62db952_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1d9ae9943:;
				if (it != expr.end()) {
					jule::Ptr<_1d567a7e7_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_1d7357714_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_1d9ae9943:;
					++it;
					goto _iter_begin_1d9ae9943;
				}
				_iter_end_1d9ae9943:;
			};
		}));
	}));
}



inline void _1d7357978_trait_data_types(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7328dab_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)>([=](jule::Ptr<_1d6277327_Package>& _57836_pkg) mutable -> void {
		_1d735adee_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)>([=](jule::Ptr<_1d62db952_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1d9aec726:;
				if (it != expr.end()) {
					jule::Ptr<_1d59c3e1a_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1d73398a0_write(_self_, jule::Str("struct ", 7));
						_1d73398a0_write(_self_, static__1d72e4e32_trait_decl(_58029_t));
						_1d73398a0_write(_self_, jule::Str("MptrData", 8));
						_1d73398a0_write(_self_, jule::Str(" {\n", 3));
						_1d733a142_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1d9aee9ae:;
							if (it != expr.end()) {
								jule::Ptr<_1d567a7e7_Fn> _58933_m = *it;
								{
									jule::Ptr<_1d567d498_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_1d567c5c9_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1d9b0194a:;
										if (it != expr.end()) {
											jule::I64 _59530_i = it - expr.begin();
											jule::Ptr<_1d567c5c9_ParamIns> _59537_ip = *it;
											{
												if (_1ee53b88c_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1d61c2bbd_itoa(_59530_i));
												};
											}
											_iter_next_1d9b0194a:;
											++it;
											_59530_i++;
											goto _iter_begin_1d9b0194a;
										}
										_iter_end_1d9b0194a:;
									};
									if ((!(_2307697ae_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d735c10e_CustomType>(_1d735c10e_CustomType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1d7357714_func_decl(_self_, _58933_m,true);
								}
								_iter_next_1d9aee9ae:;
								++it;
								goto _iter_begin_1d9aee9ae;
							}
							_iter_end_1d9aee9ae:;
						};
						_1d733b132_done_indent(_self_);
						_1d733b880_indent(_self_);
						_1d73398a0_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1d9aec726:;
					++it;
					goto _iter_begin_1d9aec726;
				}
				_iter_end_1d9aec726:;
			};
		}));
	}));
}



inline void _1d7357b87_param_ins(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d567c5c9_ParamIns>& _62234_p) {
	_1d73398a0_write(_self_, static__1d736118a_param_ins(_62234_p));
	_1d73398a0_write(_self_, jule::Str(" ", 1));
	_1d73398a0_write(_self_, static__1d72e51c9_param(_62234_p.get()._field_decl));
}



inline void _1d7357e0c_params_ins(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_1d73398a0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1d73398a0_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_1d9b0617a:;
		if (it != expr.end()) {
			jule::I64 _63414_i = it - expr.begin();
			jule::Ptr<_1d567c5c9_ParamIns> _63421_p = *it;
			{
				_1d7357b87_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_1d73398a0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1d9b0617a:;
			++it;
			_63414_i++;
			goto _iter_begin_1d9b0617a;
		}
		_iter_end_1d9b0617a:;
	};
	_1d73398a0_write(_self_, jule::Str(")", 1));
}



inline void _1d735822b_var_init_expr(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d6298ea3_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_1d73398a0_write(_self_, jule::Str("static ", 7));
	};
	_1d73398a0_write(_self_, static__1d7361eb0_kind(_64338_v.get()._field_kind.get()._field_kind));
	_1d73398a0_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_1d73398a0_write(_self_, jule::Str("&", 1));
	};
	_1d73398a0_write(_self_, static__1d72e5c57_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_1d73398a0_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_1d73398a0_write(_self_, jule::Str(";", 1));
}



inline void _1d73584a1_var(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d6298ea3_Var> _66127_v) {
	if (_1ee53b5e5_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1d735822b_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1d72dcb94_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_1d735822b_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_1d735822b_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1d72dce19_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1d7358726_func(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d567a7e7_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d9b10151:;
		if (it != expr.end()) {
			jule::Ptr<_1d567d498_FnIns> _67721_ins = *it;
			{
				_1d73575d2_func_head(_self_, _67721_ins,false);
				_1d7357e0c_params_ins(_self_, _67721_ins.get()._field_params);
				_1d73398a0_write(_self_, jule::Str(" ", 1));
				_1d72ce955_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_1d73398a0_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1d9b10151:;
			++it;
			goto _iter_begin_1d9b10151;
		}
		_iter_end_1d9b10151:;
	};
}



inline void _1d7358902_trait_wrappers(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1d9b1088d:;
		if (it != expr.end()) {
			jule::Ptr<_1d73563a0_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1d9b12be2:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _1d61c2bbd_itoa(_68921_hash.get()._field_i));
							_1d7358726_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_2307697ae_PRODUCTION) {
									_1d73398a0_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1d73398a0_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1d9b12be2;
							};
							jule::Bool _70721_ptr = (!(_1d567984b_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1d567a7e7_Fn> _70925_sm = _1d55a0068_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1d9b12be2;
							};
							_1d733a142_add_indent(_self_);
							_1d73398a0_write(_self_, jule::Str("{\n", 2));
							_1d733b880_indent(_self_);
							if ((!(_1d567ac59_is_void(_70925_sm.ptr())))) {
								_1d73398a0_write(_self_, jule::Str("return ", 7));
							};
							_1d73398a0_write(_self_, static__1d72e48e3_func(_70925_sm));
							_1d73398a0_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_1d73398a0_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1d73398a0_write(_self_, static__1d73608a4_structure_ins(_68921_hash.get()._field_s));
								_1d73398a0_write(_self_, jule::Str(">(", 2));
								if ((!(_2307697ae_PRODUCTION))) {
									_1d73398a0_write(_self_, jule::Str("_00___file", 10));
								};
								_1d73398a0_write(_self_, jule::Str(")", 1));
							} else {
								_1d73398a0_write(_self_, jule::Str("_self_.data.as<", 15));
								_1d73398a0_write(_self_, static__1d736060c_structure(_70925_sm.get()._field_owner));
								_1d73398a0_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1d9b1c05e:;
								if (it != expr.end()) {
									jule::Ptr<_1d5678eaa_Param> _73524_mp = *it;
									{
										_1d73398a0_write(_self_, jule::Str(", ", 2));
										_1d73398a0_write(_self_, static__1d72e51c9_param(_73524_mp));
									}
									_iter_next_1d9b1c05e:;
									++it;
									goto _iter_begin_1d9b1c05e;
								}
								_iter_end_1d9b1c05e:;
							};
							_1d73398a0_write(_self_, jule::Str(");\n}\n", 5));
							_1d733b132_done_indent(_self_);
						}
						_iter_next_1d9b12be2:;
						++it;
						goto _iter_begin_1d9b12be2;
					}
					_iter_end_1d9b12be2:;
				};
			}
			_iter_next_1d9b1088d:;
			++it;
			goto _iter_begin_1d9b1088d;
		}
		_iter_end_1d9b1088d:;
	};
}



inline void _1d7358acd_trait_datas(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	jule::Ptr<_1d59c3e1a_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1d9b1d8ce:;
		if (it != expr.end()) {
			jule::Ptr<_1d73563a0_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__1d72e4e32_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_1d733b132_done_indent(_self_);
						_1d733b880_indent(_self_);
						_1d73398a0_write(_self_, jule::Str("};\n", 3));
					};
					_1d73398a0_write(_self_, jule::Str("static ", 7));
					_1d73398a0_write(_self_, _74817_ident);
					_1d73398a0_write(_self_, jule::Str("MptrData ", 9));
					_1d73398a0_write(_self_, _74817_ident);
					_1d73398a0_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_1d733a142_add_indent(_self_);
				};
				_1d733b880_indent(_self_);
				_1d73398a0_write(_self_, jule::Str("{\n", 2));
				_1d733a142_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1d9b22b58:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__1d72e48e3_func(_76625_m);;
							_1d733b880_indent(_self_);
							_1d73398a0_write(_self_, jule::Str(".", 1));
							_1d73398a0_write(_self_, _76721_m_ident);
							_1d73398a0_write(_self_, jule::Str("=", 1));
							_1d73398a0_write(_self_, _76721_m_ident);
							_1d73398a0_write(_self_, jule::Str("_", 1));
							_1d73398a0_write(_self_, _1d61c2bbd_itoa(_74721_hash.get()._field_i));
							_1d73398a0_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1d9b22b58:;
						++it;
						goto _iter_begin_1d9b22b58;
					}
					_iter_end_1d9b22b58:;
				};
				_1d733b132_done_indent(_self_);
				_1d733b880_indent(_self_);
				_1d73398a0_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1d9b1d8ce:;
			++it;
			goto _iter_begin_1d9b1d8ce;
		}
		_iter_end_1d9b1d8ce:;
	};
	if ((_74617_old != nullptr)) {
		_1d733b132_done_indent(_self_);
		_1d733b880_indent(_self_);
		_1d73398a0_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1d7358ca9_globals(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1d9b26eae:;
		if (it != expr.end()) {
			jule::Ptr<_1d6298ea3_Var> _78921_v = *it;
			{
				_1d73398a0_write(_self_, static__1d7361eb0_kind(_78921_v.get()._field_kind.get()._field_kind));
				_1d73398a0_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_1d73398a0_write(_self_, jule::Str("&", 1));
				};
				_1d73398a0_write(_self_, static__1d72e5c57_var(_78921_v));
				_1d73398a0_write(_self_, jule::Str(" = ", 3));
				_1d72dcb94_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_1d73398a0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1d9b26eae:;
			++it;
			goto _iter_begin_1d9b26eae;
		}
		_iter_end_1d9b26eae:;
	};
}



inline void _1d7358e85_decls(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7329c7a_trait_decls(_self_);
	_1d7320a40_structure_plain_decls(_self_);
	_1d735736d_structure_decls(_self_);
	_1d7357846_func_decls(_self_);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	_1d7357978_trait_data_types(_self_);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	_1d7358902_trait_wrappers(_self_);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	_1d7358acd_trait_datas(_self_);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	_1d7358ca9_globals(_self_);
}



inline void _1d735920a_structure_methods(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d9b2cb1e:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _81821_f = *it;
			{
				_1d7358726_func(_self_, _81821_f);
				_1d73398a0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1d9b2cb1e:;
			++it;
			goto _iter_begin_1d9b2cb1e;
		}
		_iter_end_1d9b2cb1e:;
	};
}



inline void _1d7359480_structure_derive_defs(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _82446_s) {
	if (_1d558ba16_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1d73398a0_write(_self_, static__1d72e0724_clone_func_def(_82446_s.get()._field_decl));
		_1d73398a0_write(_self_, jule::Str("{\n", 2));
		_1d733a142_add_indent(_self_);
		_1d733b880_indent(_self_);
		_1d73398a0_write(_self_, static__1d73608a4_structure_ins(_82446_s));
		_1d73398a0_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1d9b3088b:;
			if (it != expr.end()) {
				jule::Ptr<_1d55a2532_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__1d72e59b0_field(_83220_f.get()._field_decl);;
					_1d733b880_indent(_self_);
					_1d73398a0_write(_self_, jule::Str("clone.", 6));
					_1d73398a0_write(_self_, _83321_ident);
					_1d73398a0_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1d73398a0_write(_self_, _83321_ident);
					_1d73398a0_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1d9b3088b:;
				++it;
				goto _iter_begin_1d9b3088b;
			}
			_iter_end_1d9b3088b:;
		};
		_1d733b880_indent(_self_);
		_1d73398a0_write(_self_, jule::Str("return clone;\n", 14));
		_1d733b132_done_indent(_self_);
		_1d73398a0_write(_self_, jule::Str("}", 1));
	};
}



inline void _1d7359705_structure_ostream(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _84842_s) {
	_1d733b880_indent(_self_);
	_1d73398a0_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1d73398a0_write(_self_, static__1d72e5718_structure_ins(_84842_s));
	_1d73398a0_write(_self_, jule::Str(" _Src) {\n", 9));
	_1d733a142_add_indent(_self_);
	_1d733b880_indent(_self_);
	jule::Ptr<_1d567a7e7_Fn> _85617_fts = _1d55a0068_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1d629a3e4_to_str(_85617_fts)) {
		_1d73398a0_write(_self_, jule::Str("_Stream << ", 11));
		_1d73398a0_write(_self_, static__1d72e48e3_func(_85617_fts));
		_1d73398a0_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1d73398a0_write(_self_, jule::Str("_Stream << \"", 12));
		_1d73398a0_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_1d73398a0_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1d9b3829a:;
			if (it != expr.end()) {
				jule::I64 _86618_i = it - expr.begin();
				jule::Ptr<_1d55a2532_FieldIns> _86625_f = *it;
				{
					_1d733b880_indent(_self_);
					_1d73398a0_write(_self_, jule::Str("_Stream << \"", 12));
					_1d73398a0_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_1d73398a0_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1d55c62d1_StructIns> _87321_strct = _1d6320447_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1d73398a0_write(_self_, jule::Str(" cpp.", 5));
						_1d73398a0_write(_self_, static__1d72e59b0_field(_86625_f.get()._field_decl));
						_1d73398a0_write(_self_, jule::Str("\"", 1));
					} else {
						_1d73398a0_write(_self_, jule::Str("\" << _Src.", 10));
						_1d73398a0_write(_self_, static__1d72e59b0_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_1d73398a0_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1d73398a0_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1d9b3829a:;
				++it;
				_86618_i++;
				goto _iter_begin_1d9b3829a;
			}
			_iter_end_1d9b3829a:;
		};
		_1d733b880_indent(_self_);
		_1d73398a0_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1d733b880_indent(_self_);
	_1d73398a0_write(_self_, jule::Str("return _Stream;\n", 16));
	_1d733b132_done_indent(_self_);
	_1d73398a0_write(_self_, jule::Str("}", 1));
}



inline void _1d735997a_structure_ins(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d55c62d1_StructIns>& _89938_s) {
	_1d735920a_structure_methods(_self_, _89938_s);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	_1d7359480_structure_derive_defs(_self_, _89938_s);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
	_1d7359705_structure_ostream(_self_, _89938_s);
}



inline void _1d7359c00_structure(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d5599dba_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d9b41308:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c62d1_StructIns> _90821_ins = *it;
			{
				_1d735997a_structure_ins(_self_, _90821_ins);
				_1d73398a0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1d9b41308:;
			++it;
			goto _iter_begin_1d9b41308;
		}
		_iter_end_1d9b41308:;
	};
}



inline void _1d7359dcb_structures(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1d9b42480:;
		if (it != expr.end()) {
			jule::Ptr<_1d5599dba_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_1d7359c00_structure(_self_, _91521_s);
					_1d73398a0_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1d9b42480:;
			++it;
			goto _iter_begin_1d9b42480;
		}
		_iter_end_1d9b42480:;
	};
}



inline void _1d735a0a7_funcs(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7328dab_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)>([=](jule::Ptr<_1d6277327_Package>& _92436_pkg) mutable -> void {
		_1d735adee_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)>([=](jule::Ptr<_1d62db952_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1d9b4586d:;
				if (it != expr.end()) {
					jule::Ptr<_1d567a7e7_Fn> _92629_f = *it;
					{
						if (((!(_230768c86_TEST)) && _1d7364ba5_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1d9b4586d;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_1d7358726_func(_self_, _92629_f);
							_1d73398a0_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1d9b4586d:;
					++it;
					goto _iter_begin_1d9b4586d;
				}
				_iter_end_1d9b4586d:;
			};
		}));
	}));
}



inline void _1d735a32c_push_init(jule::Ptr<_1d735658c_ObjectCoder> _self_, jule::Ptr<_1d6277327_Package>& _93934_pkg) {
	_1d735adee_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)>([=](jule::Ptr<_1d62db952_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1d9b48222:;
			if (it != expr.end()) {
				jule::Ptr<_1d567a7e7_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_1d733b880_indent(_self_);
						_1d73398a0_write(_self_, static__1d72e48e3_func(_94120_f));
						_1d73398a0_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1d9b48222:;
				++it;
				goto _iter_begin_1d9b48222;
			}
			_iter_end_1d9b48222:;
		};
	}));
}



inline void _1d735a508_init_caller(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d73398a0_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1d733a142_add_indent(_self_);
	_1d7328dab_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1d6277327_Package>&)>([=](jule::Ptr<_1d6277327_Package>& _95436_pkg) mutable -> void {
		_1d735a32c_push_init(_self_, _95436_pkg);
	}));
	_1d733b132_done_indent(_self_);
	_1d73398a0_write(_self_, jule::Str("\n}", 2));
}



inline void _1d735a6d4_end(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d73398a0_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_230768c86_TEST) {
		_1d73398a0_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1d73398a0_write(_self_, jule::Str("entry_point();", 14));
	};
	_1d73398a0_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1d735a8b0_serialize_head(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d7327e98_prepare_structures(_self_);
	_1d7329593_build_trait_map(_self_);
	_1d731c212_head(_self_);
	_1d733a890_links(_self_);
	_1d73398a0_write(_self_, jule::Str("\n", 1));
	_1d7358e85_decls(_self_);
	_1d73398a0_write(_self_, jule::Str("\n", 1));
	_1d7359dcb_structures(_self_);
	_1d735a0a7_funcs(_self_);
	_1d735a508_init_caller(_self_);
	_1d73398a0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1d735aa8b_serialize(jule::Ptr<_1d735658c_ObjectCoder> _self_) {
	_1d735a8b0_serialize_head(_self_);
	_1d735a6d4_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1d735658c_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1d9b9ccc1_parse_integer(_1d739ad95_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1d9ba23d0:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_2185eacc8_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1d9ba2358:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_2185eacc8_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1d9ba2930:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_2185eacc8_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1d9ba2996:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1d9ba2a0c:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1d9ba1eb2:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1d9ba1dd5:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1d9ba5b86_parse_integer(_1d739ad95_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1d9baa471:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_2185eacc8_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1d9baa3e9:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_2185eacc8_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1d9baa9c1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_2185eacc8_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1d9baaa37:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1d9baaa9d:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1d9baa053:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1d9ba9e76:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1d739b68c_get_data(_1d739ad95_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1d739b8ce_process_flag(_1d739ad95_ArgParser* _self_, jule::Trait<_1d7396874_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1d9b850b6_Flag>>()) {
			_case_begin_1d9b99c9b:;
			{
				jule::Ptr<_1d9b850b6_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1d9b850b6_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1d9b99c35:;
	};
	jule::Str _22513_data = _1d739b68c_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1d7396874_CommonFlag_mptr_data[(_21736_flag).type_offset]._1d737a2a3_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1d9b78de0_Flag>>()) {
			_case_begin_1d9b9b4c8:;
			{
				jule::Ptr<_1d9b78de0_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1d9b78de0_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1d9b9ccc1_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1d5de8927_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1d7396874_CommonFlag_mptr_data[(_21736_flag).type_offset]._1d737a2a3_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d9b7caa3_Flag>>()) {
			_case_begin_1d9b9bdad:;
			{
				jule::Ptr<_1d9b7caa3_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1d9b7caa3_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1d9ba5b86_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1d5dc7186_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1d7396874_CommonFlag_mptr_data[(_21736_flag).type_offset]._1d737a2a3_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d9b8158a_Flag>>()) {
			_case_begin_1d9b9be24:;
			{
				jule::Ptr<_1d9b8158a_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1d9b8158a_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1d5e23b83_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1d7396874_CommonFlag_mptr_data[(_21736_flag).type_offset]._1d737a2a3_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d9b88a9d_Flag>>()) {
			_case_begin_1d9b9be8a:;
			{
				(*(_21736_flag.operator jule::Ptr<_1d9b88a9d_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1d9b9bd47:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d739bb54_single_dash(_1d739ad95_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1d9bb0cc3:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1d7396874_CommonFlag> _26321_flag = _1d739924a_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1d739b8ce_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1d9bb0cc3:;
			++it;
			goto _iter_begin_1d9bb0cc3;
		}
		_iter_end_1d9bb0cc3:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d739bdc9_double_dash(_1d739ad95_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1d7396874_CommonFlag> _27617_flag = _1d7398e3c_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1d739b8ce_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d739c0a5_try_arg(_1d739ad95_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1d739bdc9_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1d739bb54_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d739c281_parse(_1d739ad95_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1d739c0a5_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1d9bb8e52:;
	}
	_iter_end_1d9bb8e52:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d739ad95_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _231679cc8_free(void* _4524_ptr) {
	free(_4524_ptr);
}



inline jule::Str _2316a431e_byte_ptr_to_str(jule::U8* _6931_s) {
	if ((_6931_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6931_s);
	};
}



inline jule::I64 _2316318d9_get_last_errno(void) {
	return errno;
}



inline jule::I64 _2316a4bd2_stat(jule::U8* _3920_path, struct stat* _3937_stat) {
	return static_cast<jule::I64>(stat(((char*)(_3920_path)), _3937_stat));
}



inline jule::I64 _2316a4d14_open(jule::U8* _4420_path, jule::I64 _4433_flag, jule::I64 _4444_mode) {
	return static_cast<jule::I64>(open(((char*)(_4420_path)),_4433_flag,_4444_mode));
}



inline jule::U8* _2316a4e46_getcwd(jule::U8* _5022_buff, jule::U64 _5035_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5022_buff)),_5035_bufflen)));
}



inline DIR* _2316a5078_opendir(jule::U8* _5523_path) {
	return opendir(((char*)(_5523_path)));
}



inline struct dirent* _2316a51aa_readdir(DIR* _5827_dir) {
	return readdir(_5827_dir);
}



inline jule::I64 _2316a551d_closedir(DIR* _6128_dir) {
	return static_cast<jule::I64>(closedir(_6128_dir));
}



inline jule::I64 _2316a58b4_mkdir(jule::U8* _7021_path, jule::I64 _7034_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7021_path)),_7034_mode));
}



inline jule::I64 _2316a59e6_rmdir(jule::U8* _7521_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7521_path))));
}



inline jule::I64 _2316a5b28_unlink(jule::U8* _7822_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7822_path))));
}



inline jule::I64 _2316a74dc_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _2316a78c7_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _2316a7c4b_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _2316a8136_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _2316a8345_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline jule::I64 _23086b927_get_last_os_error(void) {
	jule::I64 _309_err = _2316318d9_get_last_errno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d740b8ea:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d740b961:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d740b9c7:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d740ba3d:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d740bc80:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d740bce6:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d740bd5c:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1d740b763:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1d740b70d:;
	};
}



inline jule::Slice<jule::Str> _23086d022_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _23086d495_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _23086dd47___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _23086dd47___getwd(void) {
	jule::U8* _1113_buff = _2316a4e46_getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_23086b927_get_last_os_error());
	};
	jule::Str _159_pwd = _2316a431e_byte_ptr_to_str(_1113_buff);;
	{
		_231679cc8_free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _231a0a2e0_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _231772596_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_218102bba__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _21810b674_is_excluding_latin(_2180935d9_LETTER,_7618_r);
}



inline jule::Bool _21810aa91_is16(jule::Slice<_218108ece_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1d7965085:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_218108ece_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1d7965085:;
				++it;
				_19313_i++;
				goto _iter_begin_1d7965085;
			}
			_iter_end_1d7965085:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_218108ece_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1d7963902:;
	}
	_iter_end_1d7963902:;;
	return false;
}



inline jule::Bool _21810add2_is32(jule::Slice<_218109452_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1d796b71d:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_218109452_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1d796b71d:;
				++it;
				_23013_i++;
				goto _iter_begin_1d796b71d;
			}
			_iter_end_1d796b71d:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_218109452_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1d79683a7:;
	}
	_iter_end_1d79683a7:;;
	return false;
}



inline jule::Bool _21810b674_is_excluding_latin(jule::Ptr<_2181098c5_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_218108ece_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _21810aa91_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_218109452_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _21810add2_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline std::tuple<jule::I32,jule::I64> _2186283dd_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _218627288_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_21862780a_accept_range _1969_accept = _218627b6d_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _2186289a4_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_21862a379_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1d79b32ae;
			};
		}
	_iter_next_1d79b32ae:;
	}
	_iter_end_1d79b32ae:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _2186283dd_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::Slice<jule::U8> _218629752_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _218629a93_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _218629a93_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1d79c8a66:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1d79c7207:;
			{
				_41245_r=65533LL;
				goto _case_begin_1d79c726d;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1d79c726d:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1d79c66e0:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1d79c668a:;
	};
}



inline jule::I64 _21862a0d2_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1d79d0ead;
			};
			jule::U8 _48213_x = _218627288_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1d79d0ead;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1d79d0ead;
			};
			_21862780a_accept_range _49213_accept = _218627b6d_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1d79d0ead:;
	}
	_iter_end_1d79d0ead:;;
	return _47333_n;
}



inline jule::Bool _21862a379_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::Str _2185adecd_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(jule::MAX_I64,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_1d7a160e2:;
	}
	_iter_end_1d7a160e2:;;
	return _2213_ss;
}



inline jule::Bool _2185d9e2c__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I64 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I64 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I64>((_3413_i + 1LL)),static_cast<jule::I64>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_1d7a191b1:;
	}
	_iter_end_1d7a191b1:;;
	return true;
}



inline jule::Bool _2185eacc8_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _2185d9e2c__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _2185b0276__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I64 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I64>((_4817_s.len() - _4840_start));
	jule::I64 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1d7a1b1e6:;
	}
	_iter_end_1d7a1b1e6:;;
	return true;
}



inline jule::Bool _2185b7adb_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _2185b0276__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I64 _2185cc392_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I64 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_2185d9e2c__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_1d7a1ebab:;
	}
	_iter_end_1d7a1ebab:;;
	return -1LL;
}



inline jule::I64 _21862ae4b_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I64 _9539_i) {
	jule::I64 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I64 _10217_k = _9613_j;;
			jule::I64 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I64>((_10217_k + 1LL)),static_cast<jule::I64>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_1d7a22395;
					};
				}
			_iter_next_1d7a24375:;
			}
			_iter_end_1d7a24375:;;
			return _9613_j;
		}
	_iter_next_1d7a22395:;
	}
	_iter_end_1d7a22395:;;
	return -1LL;
}



inline jule::I64 _21862b07d_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I64>(_21862ae4b_find_last_at(_11718_s,_11726_sub,static_cast<jule::I64>((_11718_s.len() - 1LL))));
}



inline jule::I64 _21862b688__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I64 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I64 _17618_n;;
			std::tie(_17614_br,_17618_n) = _2186283dd_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_1d7a2be1b:;
	}
	_iter_end_1d7a2be1b:;;
	return -1LL;
}



inline jule::I64 _21862bb2d_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I64 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_1d7a2ee74:;
	}
	_iter_end_1d7a2ee74:;;
	return -1LL;
}



inline jule::I64 _21862c106_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _231a0a2e0_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _231a0a2e0_stobs(_24125_runes);;
	jule::I64 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I64 _24617_n;;
			std::tie(_24614_r,_24617_n) = _2186283dd_decode_rune(_2429_sb.slice(_24413_i));
			if ((_21862b688__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_1d7a348d5:;
	}
	_iter_end_1d7a348d5:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _21862c678_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I64 _27536_n) {
	jule::I64 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I64>(_27514_s.len());
	};
	jule::I64 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I64 _28913_j = _2185cc392_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_1d7a3b5bd;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I64>((_28913_j + _27522_sub.len()));
		}
	_iter_next_1d7a3b5bd:;
	}
	_iter_end_1d7a3b5bd:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _21862c9b9_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_2185cc392_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _21862d48c_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_21862c106_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::I64 _21862d7cd_count(jule::Str _32514_s, jule::Str _32522_sub) {
	if ((_32522_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32913_n = 0LL;;
	jule::I64 _33013_i = 0LL;;
	for (;;) {
		{
			jule::I64 _33213_j = _2185cc392_find_at(_32514_s,_32522_sub,_33013_i);;
			if ((_33213_j == -1LL)) {
				goto _iter_end_1d7a42030;
			};
			(_32913_n)++;
			_33013_i=static_cast<jule::I64>((_33213_j + _32522_sub.len()));
		}
	_iter_next_1d7a42030:;
	}
	_iter_end_1d7a42030:;;
	return _32913_n;
}



inline jule::Str _21862dc62_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I64 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	jule::I64 _3509_m = _21862d7cd_count(_34516_s,_34524_sub);;
	if ((_3509_m == 0LL)) {
		return _34516_s;
	};
	if (((_34548_n < 0LL) || (_3509_m < _34548_n))) {
		_34548_n=_3509_m;
	};
	jule::Str _35813_ss = jule::Str::alloc((_34516_s.len() + (_34548_n * (_34534_new.len() - _34524_sub.len()))));;
	jule::I64 _35913_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I64 _36113_j = _2185cc392_find_at(_34516_s,_34524_sub,_35913_i);;
			if ((_36113_j == -1LL)) {
				goto _iter_end_1d7a46056;
			};
			_35813_ss+=_34516_s.slice(_35913_i,_36113_j);
			_35813_ss+=_34534_new;
			_35913_i=static_cast<jule::I64>((_36113_j + _34524_sub.len()));
		}
	_iter_next_1d7a46056:;
	}
	_iter_end_1d7a46056:;;
	_35813_ss+=_34516_s.slice(_35913_i);
	return _35813_ss;
}



inline void _21862b952__trim_left(jule::Slice<jule::U8>& _40120_s, jule::Slice<jule::U8>& _40132_cutset) {
	jule::I64 _40213_i = 0LL;;
	while ((_40213_i < _40120_s.len())) {
		{
			jule::I32 _40414_r;;
			jule::I64 _40417_n;;
			std::tie(_40414_r,_40417_n) = _2186283dd_decode_rune(_40120_s.slice(_40213_i));
			if ((_21862b688__find_rune(_40132_cutset,_40414_r) == -1LL)) {
				_40120_s=_40120_s.slice(_40213_i);
				return;;
			};
			_40213_i+=_40417_n;
		}
	_iter_next_1d7a4ae5c:;
	}
	_iter_end_1d7a4ae5c:;;
	_40120_s=nullptr;
}



inline jule::Str _21862ed1d_trim_left(jule::Str _41618_s, jule::Str _41626_cutset) {
	jule::Slice<jule::U8> _41713_bytes = _231a0a2e0_stobs(_41618_s);;
	jule::Slice<jule::U8> _4189_bcutset = _231a0a2e0_stobs(_41626_cutset);;
	_21862b952__trim_left(_41713_bytes,_4189_bcutset);
	return static_cast<jule::Str>(_41713_bytes);
}



inline void _2186300c6__trim_right(jule::Slice<jule::U8>& _42321_s, jule::Slice<jule::U8>& _42333_cutset) {
	jule::I64 _42413_i = _42321_s.len();;
	while ((_42413_i > 0LL)) {
		{
			jule::I32 _42614_r;;
			jule::I64 _42617_n;;
			std::tie(_42614_r,_42617_n) = _2186289a4_decode_last_rune(_42321_s.slice(0LL,_42413_i));
			if ((_21862b688__find_rune(_42333_cutset,_42614_r) == -1LL)) {
				_42321_s=_42321_s.slice(0LL,_42413_i);
				return;;
			};
			_42413_i-=_42617_n;
		}
	_iter_next_1d7a4e3e4:;
	}
	_iter_end_1d7a4e3e4:;;
	_42321_s=nullptr;
}



inline jule::Str _218630758_trim(jule::Str _44713_s, jule::Str _44721_cutset) {
	jule::Slice<jule::U8> _44813_bytes = _231a0a2e0_stobs(_44713_s);;
	jule::Slice<jule::U8> _4499_bcutset = _231a0a2e0_stobs(_44721_cutset);;
	_21862b952__trim_left(_44813_bytes,_4499_bcutset);
	_2186300c6__trim_right(_44813_bytes,_4499_bcutset);
	return static_cast<jule::Str>(_44813_bytes);
}



inline jule::Str _218630a99_join(jule::Slice<jule::Str> _45713_parts, jule::Str _45727_sep) {
	{
		auto _match_expr{ _45713_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1d7a53816:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1d7a5388d:;
			{
				return _45713_parts[0LL];
			}
		}
		_match_end_1d7a5355d:;
	};
	jule::Str _46413_s = _45713_parts[0LL];;
	{
		auto expr = _45713_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1d7a52eca:;
		if (it != expr.end()) {
			jule::Str &_46512_part = *it;
			{
				_46413_s+=_45727_sep;
				_46413_s+=_46512_part;
			}
			_iter_next_1d7a52eca:;
			++it;
			goto _iter_begin_1d7a52eca;
		}
		_iter_end_1d7a52eca:;
	};
	return _46413_s;
}



inline jule::Str _218632172_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _218634d01_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _21863476d_is_path_sep(_1099_original_path[0LL])) && _21863476d_is_path_sep(_1099_original_path[1LL]))) {
			return _218632705_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _21863476d_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_2186313b3_LazyBuff _12713_out = _2186313b3_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_218631aab_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_21863476d_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1d7a68d48:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _21863476d_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1d7a6ba3d:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _21863476d_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1d7a6baa4:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1d7a6e9ec:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_21863476d_is_path_sep(static_cast<jule::U8>(_218631836_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1d7a6ece9:;
									}
									_iter_end_1d7a6ece9:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1d7a6ea63:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_218631aab_append(&_12713_out, 47LLU);
									};
									_218631aab_append(&_12713_out, '.');
									_218631aab_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1d7a6e645:;
						};
					}
				}
				else {
					_case_begin_1d7a671ba:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_218631aab_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_21863476d_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_218631aab_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1d7a68809:;
						}
						_iter_end_1d7a68809:;;
					}
				}
				_match_end_1d7a670dd:;
			};
		}
	_iter_next_1d7a6672a:;
	}
	_iter_end_1d7a6672a:;;
	if ((_12713_out._field_w == 0LL)) {
		_218631aab_append(&_12713_out, '.');
	};
	return _218632705_from_slash(_218631d20_string(&_12713_out));
}



inline jule::Str _218632705_from_slash(jule::Str _21119_path) {
	if ((47LL == '/')) {
		return _21119_path;
	};
	return _21862dc62_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _218632a24_join(jule::Slice<jule::Str> _22513_elem) {
	return _2186353b7___join(_22513_elem);
}



inline jule::Str _218632cbb_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_21863476d_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1d7a74a13:;
	}
	_iter_end_1d7a74a13:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _218633063_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _218635120___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _21863330a_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _21863476d_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1d7a76817:;
	}
	_iter_end_1d7a76817:;;
	(_25417_path).mut_slice(_218633926_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_21863476d_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1d7a7752c:;
	}
	_iter_end_1d7a7752c:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25417_path;
}



inline jule::Str _21863367e_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _218633926_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_21863476d_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1d7a7aa19:;
	}
	_iter_end_1d7a7aa19:;;
	jule::Str _2919_dir = _218632172_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _218633926_volume_name(jule::Str _30320_path) {
	return _218632705_from_slash(_30320_path.slice(0LL,_218634d01_volume_name_len(_30320_path)));
}



inline jule::Bool _21863476d_is_path_sep(jule::U8 _4820_c) {
	return (47LL == _4820_c);
}



inline jule::Bool _218634a59_is_abs(jule::Str _5315_path) {
	return _2185eacc8_has_prefix(_5315_path,jule::Str("/", 1));
}



inline jule::I64 _218634d01_volume_name_len(jule::Str _5920_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _218635120___abs(jule::Str _6310_path) {
	jule::Bool _6328_ok = jule::Bool();
	if (_218634a59_is_abs(_6310_path)) {
		_6328_ok = true;
		return std::make_tuple(_218632172_clean(_6310_path),_6328_ok);
	};
	jule::Str _679_wd = ({
		auto except = _23086d495_working_dir();
		(except.ok()) ? (except.result) : ({{
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
		} jule::Str();});
	});;
	_6328_ok = true;
	return std::make_tuple(_2186353b7___join(jule::Slice<jule::Str>::make({_679_wd,_6310_path})),_6328_ok);
}



inline jule::Str _2186353b7___join(jule::Slice<jule::Str> _7311_elem) {
	{
		auto &expr = _7311_elem;
		auto it = expr.begin();
		_iter_begin_1d7a85abd:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _218632172_clean(_218630a99_join(_7311_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_1d7a85abd:;
			++it;
			_749_i++;
			goto _iter_begin_1d7a85abd;
		}
		_iter_end_1d7a85abd:;
	};
	return jule::Str();
}



inline jule::I64 _2315d1db7_get_last_fs_error(void) {
	jule::I64 _729_err = _2316318d9_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d7a93a21:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d7a93009:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d7a9346b:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d7a934d2:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d7a93548:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d7a935ae:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1d7a93c30:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1d7a93c96:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1d7a93d0c:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1d7a93d73:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d7a93dd9:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1d7a93e50:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d7a93eb6:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1d7a9403d:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1d7a940b5:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1d7a9413c:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1d7a941b4:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1d7a9423b:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1d7a942b3:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1d7a9433a:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1d7a943b2:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1d7a94439:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1d7a944b1:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1d7a94538:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1d7a945b0:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1d7a94637:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1d7a946ae:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1d7a94736:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1d7a93306:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1d7a932a1:;
	};
}



inline jule::I64 _1ed64dbd1_get_last_process_error(void) {
	jule::I64 _429_err = _2316318d9_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d7abad45:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1d7abb2a7:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1d7abb31d:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d7abb384:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d7abb3ea:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d7abb64d:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1d7abb6b4:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1d7abb72a:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1d7abb791:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_1d7abb807:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1d7abb86d:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1d7abb142:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1d7abb0dc:;
	};
}



inline jule::Slice<char*> _1ed651e59_str_slice_to_cstr_slice(jule::Slice<jule::Str> _2028_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2028_s.len() + 1LL));;
	{
		auto &expr = _2028_s;
		auto it = expr.begin();
		_iter_begin_1d7ac8490:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2028_s[_229_i][0LL])))));;
			}
			_iter_next_1d7ac8490:;
			++it;
			_229_i++;
			goto _iter_begin_1d7ac8490;
		}
		_iter_end_1d7ac8490:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _1ed6523bb_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _1ed651e59_str_slice_to_cstr_slice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _1ed6527a6_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _1ed651e59_str_slice_to_cstr_slice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _1ed651e59_str_slice_to_cstr_slice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _1ed6533bc_exit(jule::I64 _1213_code) {
	_2316a8345_exit(_1213_code);
}



inline jule::Str _1ed6535ba_executable(void) {
	return jule::executable();
}



inline jule::Bool _21867d9b5_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _21867dae7_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _23185a5b3_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1d7b0c22c:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1d7b0c22c:;
			++it;
			goto _iter_begin_1d7b0c22c;
		}
		_iter_end_1d7b0c22c:;
	};
	return false;
}



inline jule::Bool _21867dd7d_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _21867c365_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1d7b0e21d:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1d7b0e21d:;
			++it;
			goto _iter_begin_1d7b0e21d;
		}
		_iter_end_1d7b0e21d:;
	};
	{
		auto &expr = _21867d8c7_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1d7b0ee66:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1d7b0ee66:;
			++it;
			goto _iter_begin_1d7b0ee66;
		}
		_iter_end_1d7b0ee66:;
	};
	return false;
}



inline jule::Str _21868a8c3_logf(jule::Str _29313_fmt, jule::Slice<jule::Any> _29326_args) {
	return _21868b2db_apply_fmt(_29313_fmt,jule::Any(_29326_args));
}



inline jule::Str _21868abae_arg_to_str(jule::Any _29715_arg) {
	{
		auto &_match_expr{ _29715_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1d7b11132:;
			{
				return _29715_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1d7b11198:;
			{
				return static_cast<jule::Str>(_29715_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1d7b1120e:;
			{
				return static_cast<jule::Str>(_29715_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1d7b103c8:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1d7b11077:;
	};
}



inline jule::I64 _21868ae56_find_next_fmt(jule::Str _31018_fmt) {
	{
		auto &expr = _31018_fmt;
		auto it = expr.begin();
		_iter_begin_1d7b11c48:;
		if (it != expr.end()) {
			jule::I64 _3119_i = it - expr.begin();
			jule::U8 &_31112_b = *it;
			{
				if ((_31112_b == '@')) {
					return _3119_i;
				};
			}
			_iter_next_1d7b11c48:;
			++it;
			_3119_i++;
			goto _iter_begin_1d7b11c48;
		}
		_iter_end_1d7b11c48:;
	};
	return -1LL;
}



inline jule::Str _21868b2db_apply_fmt(jule::Str _31918_fmt, jule::Slice<jule::Any> _31928_args) {
	jule::Str _32013_s = jule::Str();;
	{
		auto &expr = _31928_args;
		auto it = expr.begin();
		_iter_begin_1d7b13cc2:;
		if (it != expr.end()) {
			jule::Any &_32212_arg = *it;
			{
				jule::I64 _32313_i = _21868ae56_find_next_fmt(_31918_fmt);;
				if ((_32313_i == -1LL)) {
					goto _iter_end_1d7b13cc2;
				};
				_32013_s+=_31918_fmt.slice(0LL,_32313_i);
				_32013_s+=_21868abae_arg_to_str(jule::Any(_32212_arg));
				(_31918_fmt).mut_slice((_32313_i + 1LL));;
			}
			_iter_next_1d7b13cc2:;
			++it;
			goto _iter_begin_1d7b13cc2;
		}
		_iter_end_1d7b13cc2:;
	};
	_32013_s+=_31918_fmt;
	return _32013_s;
}



inline jule::Bool _21868c3a8_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _21868de7b_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _21868e267_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _21868e50e_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _21868e82d_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _21868eac5_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _21868ed6c_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _218690114_is_unix(jule::Str _6916_os) {
	return (_21868e267_is_darwin(_6916_os) || _21868e50e_is_linux(_6916_os));
}



inline jule::Bool _218690488_is_32bit(jule::Str _7217_arch) {
	return _21868e82d_is_i386(_7217_arch);
}



inline jule::Bool _218690730_is_64bit(jule::Str _7517_arch) {
	return (_21868eac5_is_amd64(_7517_arch) || _21868ed6c_is_arm64(_7517_arch));
}



inline void _21869cb16_init(void) {
	jule::Str _2513_path = _1ed6535ba_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1ed64d054_PATH_WD=({
			auto except = _23086d495_working_dir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1ed64c76d_PATH_EXEC=_21863367e_dir(_2513_path);
		_1ed63c6d6_PATH_STDLIB=_218632a24_join(jule::Slice<jule::Str>::make({_1ed64c76d_PATH_EXEC,jule::Str("..", 2),jule::Str("std", 3)}));
		_1ed63c351_PATH_API=_218632a24_join(jule::Slice<jule::Str>::make({_1ed64c76d_PATH_EXEC,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1ee53955a_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1ee48881c_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1d7b5ce70:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1d7b5ce70:;
			++it;
			goto _iter_begin_1d7b5ce70;
		}
		_iter_end_1d7b5ce70:;
	};
	return false;
}



inline jule::Bool _1ee539846_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1ee488b5d_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1d7b5d877:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1d7b5d877:;
			++it;
			goto _iter_begin_1d7b5d877;
		}
		_iter_end_1d7b5d877:;
	};
	return false;
}



inline jule::Bool _1ee539e0c_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _1ee53a1a4_is_raw_str(_34615_k)));
}



inline jule::Bool _1ee53a1a4_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _1ee53a44b_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _1ee53aa67_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _1ee53ad0e_is_float(jule::Str _36217_k) {
	if (_2185eacc8_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _21862d48c_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _21862d48c_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _1ee53b0a6_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _1ee53b5e5_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _1ee53b88c_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1ee53bdcb_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1ee4885a8_SPACES;
		auto it = expr.begin();
		_iter_begin_1d7b6784d:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1d7b6784d:;
			++it;
			goto _iter_begin_1d7b6784d;
		}
		_iter_end_1d7b6784d:;
	};
	return false;
}



inline jule::Bool _1ee53c32c_is_letter(jule::I32 _41318_r) {
	return _231772596_is_letter(_41318_r);
}



inline jule::Bool _1ee53c86b_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _1ee53cb13_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _1ee53cdaa_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _1ee53d152_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1d7b6c6ee:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1d7b6bed4:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1d7b6c04a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d7b6be6d:;
			{
				return false;
			}
		}
		_match_end_1d7b6bdb3:;
	};
}



inline jule::Bool _1ee53d3e9_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1ee53d691_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _1ee533323_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1d7b6e118:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1d7b6e118:;
			++it;
			goto _iter_begin_1d7b6e118;
		}
		_iter_end_1d7b6e118:;
	};
	return false;
}



inline jule::Bool _1ee53d938_is_assign_op(jule::Str _48121_kind) {
	if (_1ee53d691_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _1ee533664_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1d7b71a99:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1d7b71a99:;
			++it;
			goto _iter_begin_1d7b71a99;
		}
		_iter_end_1d7b71a99:;
	};
	return false;
}



inline jule::Ptr<_1ee53e1db_File> _1ee54071a_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1ee53e1db_File>(_1ee53e1db_File{._field_path=_6321_path, });
}



inline _21868a483_Log _1ee542046_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_1ee53e1db_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _21868a483_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_21868a8c3_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _1ee5423cb_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1d7b7bad7:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1d7b7bad7:;
			++it;
			_1259_i++;
			goto _iter_begin_1d7b7bad7;
		}
		_iter_end_1d7b7bad7:;
	};
	return true;
}



inline jule::Str _1ee54271c_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_1ee53c86b_is_decimal(_13913_b))))) {
				goto _iter_end_1d7b80a42;
			};
		}
	_iter_next_1d7b80a42:;
	}
	_iter_end_1d7b80a42:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1ee542aa2_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _1ee54271c_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1ee542de3_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _1ee53c86b_is_decimal(_17913_b)) {
					_case_begin_1d7b83d53:;
					{
						goto _iter_next_1d7b82934;
					}
				}
				else if (_1ee544697_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1d7b83db9:;
					{
						return _1ee542aa2_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1d7b83cdc:;
					{
						goto _iter_end_1d7b82934;
					}
				}
				_match_end_1d7b83c76:;
			};
		}
	_iter_next_1d7b82934:;
	}
	_iter_end_1d7b82934:;;
	return jule::Str();
}



inline jule::Str _1ee543234_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _1ee54271c_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _1ee543575_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _1ee54271c_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _1ee5439c6_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _1ee54271c_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_1ee53c86b_is_decimal(_21213_b))))) {
				goto _iter_end_1d7b866b3;
			};
		}
	_iter_next_1d7b866b3:;
	}
	_iter_end_1d7b866b3:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1ee543c6d_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1d7b8ae04:;
					{
						_22731_lit = _1ee5439c6_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1d7b8ae7b:;
					{
						goto _iter_next_1d7b8a189;
					}
				}
				else if (_1ee544356_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1d7b8b003:;
					{
						_22731_lit = _1ee54271c_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_1ee53c86b_is_decimal(_23113_b)))) {
					_case_begin_1d7b8b07a:;
					{
						goto _iter_end_1d7b8a189;
					}
				}
				_match_end_1d7b8ad27:;
			};
		}
	_iter_next_1d7b8a189:;
	}
	_iter_end_1d7b8a189:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _1ee544015_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_1ee5423cb_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_1ee53cb13_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1d7b8e710;
			};
		}
	_iter_next_1d7b8e710:;
	}
	_iter_end_1d7b8e710:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _1ee544356_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _1ee544697_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _1ee5449d8_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _1ee53c86b_is_decimal(_28713_b)) {
					_case_begin_1d7b940e9:;
					{
						goto _iter_next_1d7b92119;
					}
				}
				else if (_1ee544697_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1d7b94160:;
					{
						return true;
					}
				}
				else {
					_case_begin_1d7b94083:;
					{
						goto _iter_end_1d7b92119;
					}
				}
				_match_end_1d7b9401c:;
			};
		}
	_iter_next_1d7b92119:;
	}
	_iter_end_1d7b92119:;;
	return false;
}



inline jule::Bool _1ee544d29_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1d7b95ded:;
			{
				goto _case_begin_1d7b956b1;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1d7b956b1:;
			{
				goto _case_begin_1d7b95727;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1d7b95727:;
			{
				return false;
			}
		}
		else {
			_case_begin_1d7b9564a:;
			{
				return true;
			}
		}
		_match_end_1d7b9556d:;
	};
}



inline jule::Bool _1ee54516a_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1d7b9820d:;
			{
				goto _case_begin_1d7b97a48;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1d7b97a48:;
			{
				goto _case_begin_1d7b97aae;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1d7b97aae:;
			{
				goto _case_begin_1d7b97b25;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1d7b97b25:;
			{
				return false;
			}
		}
		else {
			_case_begin_1d7b97509:;
			{
				return true;
			}
		}
		_match_end_1d7b9742c:;
	};
}



inline jule::Str _1ee5455bb_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _1ee5439c6_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_1ee544356_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _1ee54271c_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_1ee53cdaa_is_octal(_35013_b))))) {
				goto _iter_end_1d7b9d037;
			};
		}
	_iter_next_1d7b9d037:;
	}
	_iter_end_1d7b9d037:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _1ee545863_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_1ee544d29_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1d7ba3ba8:;
					{
						_37128_lit = _1ee543575_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1ee54516a_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1d7ba3c30:;
					{
						_37128_lit = _1ee543234_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1ee544697_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1d7ba3ca7:;
					{
						_37128_lit = _1ee542aa2_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1ee5449d8_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1d7ba3d2e:;
					{
						_37128_lit = _1ee542de3_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1ee53d152_is_hex(_38313_b))))) {
					_case_begin_1d7ba3da6:;
					{
						goto _iter_end_1d7ba304d;
					}
				}
				_match_end_1d7ba3aba:;
			};
		}
	_iter_next_1d7ba304d:;
	}
	_iter_end_1d7ba304d:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _1ee545ba4_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_1ee53d152_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1d7ba6abd:;
	}
	_iter_end_1d7ba6abd:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _1ee545e6d_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _1ee545ba4_hex_escape(_42230_txt,10LL);
}



inline jule::Str _1ee546138_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _1ee545ba4_hex_escape(_42733_txt,6LL);
}



inline jule::Str _1ee5463e1_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _1ee545ba4_hex_escape(_43221_txt,4LL);
}



inline jule::Str _1ee546688_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_1ee53cdaa_is_octal(_43717_txt[1LL]))) || (!(_1ee53cdaa_is_octal(_43717_txt[2LL])))) || (!(_1ee53cdaa_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_21868a483_Log> _1ee54b182_lex(jule::Ptr<_1ee53e1db_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_1ee546d70_Lex _83713_lex = _1ee546d70_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1ee549911_new_line(&_83713_lex);
	_1ee54790e_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline void _1d5672e1b_lshift_unsig(_1d561288e_Const& _58722_c, _1d561288e_Const& _58733_x) {
	jule::U64 _5889_l = _1d566be6a_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1d566be6a_as_u64(&_58733_x);;
	_1d566c6c9_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1d5673218_rshift_unsig(_1d561288e_Const& _59322_c, _1d561288e_Const& _59333_x) {
	jule::U64 _5949_l = _1d566be6a_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1d566be6a_as_u64(&_59333_x);;
	_1d566c6c9_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1d618094a_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1d618815b_len64(_6124_x)));
}



inline jule::I64 _1d61819a1_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1d618263e_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1d6182397_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1d61810ee_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1d618263e_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1d618174d_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1d6187db4_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1d618815b_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1d6188d1b_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1d618a49e_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1d60a9401_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1d60a96dc_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1d60a9984_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1d60a9ca3_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1d60ac3b0_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1d7da2b21:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1d6147d74_is_inf(_4718_f,0LL) || _1d613c1dc_is_nan(_4718_f)) {
			_case_begin_1d7da2b98:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1d7da2a33:;
	};
	std::tie(_4718_f,_4739_exp) = _1d6159094_normalize(_4718_f);
	jule::U64 _5613_x = _1d60a9984_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1d6136aee_nan(void) {
	return static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1d613c1dc_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1d613e233_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1d6147d74_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1d6159094_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1d613875a_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1d615095e_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1d613c1dc_is_nan(_11112_x) || _1d6147d74_is_inf(_11112_x,1LL)) {
			_case_begin_1d7de5ed8:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1d7de6060:;
			{
				return static_cast<jule::F64>(_1d6136aee_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1d7de60d7:;
			{
				return static_cast<jule::F64>(_1d613e233_inf(-1LL));
			}
		}
		_match_end_1d7de5e1c:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1d60ac3b0_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1d613875a_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(static_cast<jule::U64>((_1d60a9984_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1d6193d48_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1d613875a_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1d7e635a5:;
		}
		_iter_end_1d7e635a5:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1d619460c_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1d60ac3b0_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1d615095e_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1d5ae8ca9_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1d5ae9826_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1d5d071d7_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1d5ae9826_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1d5c8e5e2_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1d817bc30:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1d60a9401_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1d5c8e5e2_FloatInfo>)((&(_1d5ad9508_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d817be1c:;
			{
				_8313_bits=static_cast<jule::U64>(_1d60a9984_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1d5c8e5e2_FloatInfo>)((&(_1d5ade9e7_F64_INFO))));
			}
		}
		else {
			_case_begin_1d817b603:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1d81794d0:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1d81805b3:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1d8182a9e:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1d8182c36:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1d8181a9d:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1d81819c1:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d818110d:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1d817ba10:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1d818055d:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1d5c6bd61_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1d5c90648_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1d5b95086_DecimalSlice _13213_digs = _1d5b95086_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1d5b54a3a_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d8186cd4:;
				{
					_8259_prec=static_cast<jule::I64>(_1d5d071d7_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d8186d5b:;
				{
					_8259_prec=static_cast<jule::I64>(_1d5d071d7_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d8186e05:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1d81860ad:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d8189468:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d8188cc5:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1d8188ea1:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1d8188d5d:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1d6037736_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1d609461c_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1d5b0e088_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1d5b6c624_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1d5b0e088_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1d5c8e5e2_FloatInfo& _18327_flt) {
	_1d61c0d97_Decimal _18413_d = _1d61c0d97_Decimal{};;
	_1d61c1084_assign(&_18413_d, _1835_mant);
	_1d61c11b6_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1d5b95086_DecimalSlice _18713_digs = _1d5b95086_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1d5b94717_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1d5b95086_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d818e24d:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d8191b13:;
				{
					_18234_prec=static_cast<jule::I64>(_1d5d071d7_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d8191b79:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1d819100d:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d8190b78:;
				{
					_1d61c155c_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d8190bde:;
				{
					_1d61c155c_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d8190c66:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1d61c155c_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1d8190abd:;
		};
		_18713_digs=_1d5b95086_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1d5b6c624_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1d5b6c624_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1d5b95086_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1d8196bb2:;
			{
				return _1d5ba5ccd_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d8196c28:;
			{
				return _1d5ba7461_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1d8196c8e:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1d5ba5ccd_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1d5ba7461_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1d5d071d7_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1d8196a6e:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1d5b94717_round_shortest(_1d61c0d97_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1d5c8e5e2_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1d61c0d97_Decimal _28713_upper = _1d61c0d97_Decimal{};;
	_1d61c1084_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1d61c11b6_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1d61c0d97_Decimal _30613_lower = _1d61c0d97_Decimal{};;
	_1d61c1084_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1d61c11b6_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1d81a4cd0;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1d81aa126:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1d81aa19d:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1d81aa225:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1d81aa05a:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1d81ad3c1:;
					{
						_1d61c155c_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1d81ad437:;
					{
						_1d61c12e8_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1d81ad4ae:;
					{
						_1d61c142a_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1d81ad327:;
			};
		}
	_iter_next_1d81a4cd0:;
	}
	_iter_end_1d81a4cd0:;;
}



inline jule::Slice<jule::U8> _1d5ba5ccd_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1d5b95086_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1d5c95a27_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1d81b2d98:;
		}
		_iter_end_1d81b2d98:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1d81b55a4:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1d81b71bb:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1d81b553d:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1d81b5780:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1d5ba7461_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1d5b95086_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1d5c95a27_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1d81b9c18:;
		}
		_iter_end_1d81b9c18:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1d81bb577:;
		}
		_iter_end_1d81bb577:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1d5c6bd61_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1d5c8e5e2_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1d61c3064_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1d61c3064_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1d5c90648_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1d5c8e5e2_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1d81c1846:;
	}
	_iter_end_1d81c1846:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1d81c672a:;
		}
		_iter_end_1d81c672a:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1d81c9046:;
		}
		_iter_end_1d81c9046:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1d5d274c1_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1d81cb785:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1d81cb477:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1d81cb71e:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1d81c9673:;
	};
	return _50614_dst;
}



inline jule::I64 _1d5c95a27_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1d5d071d7_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1d5d274c1_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1d5d49c85___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1d81d3957:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1d81d3803:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1d5d274c1_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1d81d56c3:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1d5d274c1_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1d81d54d6:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1d5d274c1_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1d81d555d:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1d81d5140:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1d81d5063:;
					};
				};
			}
		}
		else {
			_case_begin_1d81d2a55:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1d81d2a00:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1d81da398:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1d81d99d5:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1d81d9c9e:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1d81d9b28:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1d81d9d8c:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d81db542:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1d81db4dc:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1d81dc554:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1d81ddba4:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1d5d274c1_lower(_10912_c)) && (_1d5d274c1_lower(_10912_c) <= 'z'))) {
						_case_begin_1d81dda72:;
						{
							_11017_d=static_cast<jule::U8>(((_1d5d274c1_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1d81ddad8:;
						{
							goto _iter_next_1d81dc554;
						}
					}
					else {
						_case_begin_1d81dd5dd:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1d81dd577:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1d81dc554:;
			++it;
			goto _iter_begin_1d81dc554;
		}
		_iter_end_1d81dc554:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1d5dc7186_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1d5d49c85___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1d5de8927_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1d5d49c85___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1d5ada5d6_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1d618094a_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1d618a49e_mul64(_4123_man,_1d5b91978_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1d618a49e_mul64(_4123_man,_1d5b91978_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1d5e6729d_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1d60a96dc_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1d618094a_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1d618a49e_mul64(_11023_man,_1d5b91978_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1d618a49e_mul64(_11023_man,_1d5b91978_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1d60a96dc_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1d5d87223_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1d8216171:;
	}
	_iter_end_1d8216171:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1d5ba4c22_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1d821aa7c:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1d821ab04;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1d821ab04:;
			{
				jule::I64 _8317_case_n = _1d5d87223_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1d613e233_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1d821ab7b:;
			{
				if ((_1d5d87223_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1d6136aee_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1d821a9b1:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1d5e6cd20_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1d8221ce7:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1d8221d5d:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1d8221b1b:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1d5d274c1_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1d8228271:;
					{
						goto _iter_next_1d822766b;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1d82282e8:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1d822766b;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1d8228370:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1d822766b;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1d822766b;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1d5d274c1_lower(_13313_c))) && (_1d5d274c1_lower(_13313_c) <= 'f'))) {
					_case_begin_1d82283e7:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1d5d274c1_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1d822766b;
					}
				}
				_match_end_1d8228194:;
			};
			goto _iter_end_1d822766b;
		}
	_iter_next_1d822766b:;
	}
	_iter_end_1d822766b:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1d5d274c1_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1d8232d91;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1d8232d91:;
		}
		_iter_end_1d8232d91:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1d5b0eb27_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1d5ade9e7_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1d823d52d:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1d823d5a5:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1d5beb780_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1d5beb780_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1d823d62c:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1d5beb780_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1d823d473:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1d5b3150b_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1d5ad9508_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1d8243654:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1d82436cb:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1d5c5d69e_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1d5c5d69e_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1d8243753:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1d5c5d69e_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1d8243599:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1d5b7a984_atof_hex(jule::Str _55113_s, _1d5c8e5e2_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1d824e011:;
	}
	_iter_end_1d824e011:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1d824e4c8:;
	}
	_iter_end_1d824e4c8:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1d8251112:;
	}
	_iter_end_1d8251112:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1d5ad9508_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1d60a96dc_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1d5bcb1dd_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1d5ba4c22_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1d5e6cd20_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1d5b7a984_atof_hex(_61611_s.slice(0LL,_61629_n),_1d5ad9508_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1d5b3150b_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1d5e6729d_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1d5e6729d_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1d61c0d97_Decimal _66213_d = _1d61c0d97_Decimal{};;
	if ((!(_1d5e98400_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1d5ed6a48_float_bits(&_66213_d, _1d5ad9508_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1d60a96dc_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1d5d51550_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1d5ba4c22_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1d5e6cd20_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1d5b7a984_atof_hex(_67411_s.slice(0LL,_67429_n),_1d5ade9e7_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1d5b0eb27_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1d5ada5d6_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1d5ada5d6_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1d61c0d97_Decimal _71913_d = _1d61c0d97_Decimal{};;
	if ((!(_1d5e98400_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1d5ed6a48_float_bits(&_71913_d, _1d5ade9e7_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1d60a9ca3_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1d5dc77a2_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1d5bcb1dd_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1d5d51550_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1d5e23b83_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1d5dc77a2_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1d6037736_ryu_ftoa_fixed32(_1d5b95086_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1d6187db4_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1d5b9696c_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1d61c0083_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1d61c02e7_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1d609b0a2_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1d609461c_ryu_ftoa_fixed64(_1d5b95086_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1d618815b_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1d5b9696c_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1d61c01b5_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1d61c02e7_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1d609b0a2_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1d609b0a2_format_decimal(_1d5b95086_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1d5c9176a_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1d8288e6e:;
	}
	_iter_end_1d8288e6e:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1d828c967:;
	}
	_iter_end_1d828c967:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1d82930aa:;
	}
	_iter_end_1d82930aa:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1d5b54a3a_ryu_ftoa_shortest(_1d5b95086_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1d5c8e5e2_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1d618263e_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1d6035a20_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1d5ba6482_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1d6035a20_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1d5b9696c_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1d5ad9508_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1d61c0083_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1d61c0083_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1d61c0083_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1d61c01b5_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1d61c01b5_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1d61c01b5_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1d61c02e7_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1d61c02e7_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1d61c02e7_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1d6035a20_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1d5b9696c_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1d5ba5591_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1d5ba6482_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1d5c8e5e2_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1d6035a20_ryu_digits(_1d5b95086_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1d61c0429_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1d61c0429_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1d61c0429_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1d61bee51_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1d61bee51_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1d82b38d3:;
		}
		_iter_end_1d82b38d3:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1d61bee51_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1d82b5bc1:;
	}
	_iter_end_1d82b5bc1:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1d82b365d:;
	}
	_iter_end_1d82b365d:;;
}



inline void _1d61bee51_ryu_digits32(_1d5b95086_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1d82b9598;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1d82b9598:;
	}
	_iter_end_1d82b9598:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1d82c11c6:;
	}
	_iter_end_1d82c11c6:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1d61c0083_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1d5b91978_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1d618a49e_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1d5ba5591_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1d61c01b5_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1d5b91978_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1d5ba5591_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1d618a49e_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1d618a49e_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1d6188d1b_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1d61c02e7_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1d82d0b86:;
	}
	_iter_end_1d82d0b86:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1d61c0429_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1d61c1903_trim(_1d61c0d97_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1d82d51c9:;
	}
	_iter_end_1d82d51c9:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1d61c1a35_right_shift(_1d61c0d97_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1d82d8573:;
				}
				_iter_end_1d82d8573:;;
				goto _iter_end_1d82d7000;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1d82d7000:;
	}
	_iter_end_1d82d7000:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1d82dad4a:;
	}
	_iter_end_1d82dad4a:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1d82db9a5:;
	}
	_iter_end_1d82db9a5:;;
	_34321_a._field_nd=_34513_w;
	_1d61c1903_trim(_34321_a);
}



inline jule::Bool _1d61c1b67_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1d82e0800:;
	}
	_iter_end_1d82e0800:;;
	return false;
}



inline void _1d61c1c99_left_shift(_1d61c0d97_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1d5cb7c25_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1d61c1b67_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1d5cb7c25_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1d82e41c7:;
	}
	_iter_end_1d82e41c7:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1d82e67e5:;
	}
	_iter_end_1d82e67e5:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1d61c1903_trim(_41120_a);
}



inline jule::Bool _1d61c1dcb_should_round_up(_1d61c0d97_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1d61c2959_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1d61c2d00_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1d61c3064_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1d61c2a8b_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1d61c2d00_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1d61c3064_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1d61c2bbd_itoa(jule::I64 _8013_i) {
	return _1d61c2a8b_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1d61c2d00_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1d61c2e32_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1d61c3064_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1d8335ca7:;
		}
		_iter_end_1d8335ca7:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1d61c2e32_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1d61819a1_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1d833e8c6:;
		}
		_iter_end_1d833e8c6:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1d83426a9:;
		}
		_iter_end_1d83426a9:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline jule::Str _1d6247eeb_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1d835cce0:;
			{
				return _1d624765a_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1d835cd56:;
			{
				return _1d62478be_SYS_UINT;
			}
		}
		else {
			_case_begin_1d835d274:;
			{
				return _4521_kind;
			}
		}
		_match_end_1d835d1b9:;
	};
}



inline jule::I64 _1d6248293_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1d835e85d:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1d835e8c4:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1d835e1ba:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1d835e231:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1d835e297:;
			{
				return _1d62473e6_BIT_SIZE;
			}
		}
		else {
			_case_begin_1d835e154:;
			{
				return -1LL;
			}
		}
		_match_end_1d835ddac:;
	};
}



inline jule::Str _1d62485b2_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1d8361475:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1d83614db:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1d8361552:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d8361662:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1d8360809:;
			{
				return jule::Str();
			}
		}
		_match_end_1d8361354:;
	};
}



inline jule::Str _1d6248859_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1d83627ea:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1d8362861:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1d83628c7:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d8362bc4:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1d8361d6b:;
			{
				return jule::Str();
			}
		}
		_match_end_1d8361c28:;
	};
}



inline jule::Str _1d6248b01_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1d8363cd5:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d8363d4b:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1d83633ab:;
			{
				return jule::Str();
			}
		}
		_match_end_1d8363268:;
	};
}



inline jule::Bool _1d62496a1_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1d5e23b83_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1d6249948_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1d83678dd:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1d8368845:;
			{
				return 64LL;
			}
		}
		_match_end_1d836878a:;
	};
}



inline jule::I64 _1d6249be0_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1d8369d41:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1d8369da7:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1d8369e2e:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1d8369b10:;
			{
				return 64LL;
			}
		}
		_match_end_1d8369a33:;
	};
}



inline jule::I64 _1d6249e87_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1d836bbab:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1d836bc22:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1d836bc99:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1d836bb01:;
			{
				return 64LL;
			}
		}
		_match_end_1d836c22d:;
	};
}



inline void _1d624a0ec_update_target(void) {
	{
		{
			auto &_match_expr{ _218695988_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1d836cb24:;
				{
					_1d62473e6_BIT_SIZE=64LL;
					_1d624765a_SYS_INT=jule::Str("i64", 3);
					_1d62478be_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1d836d43d:;
				{
					_1d62473e6_BIT_SIZE=32LL;
					_1d624765a_SYS_INT=jule::Str("i32", 3);
					_1d62478be_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1d836ca47:;
		};
	};
}



inline void _1d624a262_init(void) {
	_1d624a0ec_update_target();
}



inline jule::F64 _1d624e51e_min(jule::Str _6116_k) {
	_6116_k=_1d6247eeb_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1d83712cb:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d8371342:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d8370c48:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d8370cae:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d8370d36:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d8370dad:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1d8370ad3:;
			{
				return 0LL;
			}
		}
		_match_end_1d836db47:;
	};
}



inline jule::F64 _1d624e80a_max(jule::Str _8316_k) {
	_8316_k=_1d6247eeb_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1d8371078:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d83729c5:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d8372a3b:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d8372aa2:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1d8372b18:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1d8372d7c:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1d8372de3:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1d8372e59:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d8372ed1:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d8373058:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1d837282c:;
			{
				return 0LL;
			}
		}
		_match_end_1d8371793:;
	};
}



inline jule::Bool _1d624eb7e_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1d624ee6a_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1d6250212_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1d6250531_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1d62507c8_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1d6250a70_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1d6250d17_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1d625118b_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1d6251433_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1d62516ca_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1d6251a1b_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1d837b54a:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1d837b7ae:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1d837b825:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1d837b88b:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1d837b902:;
			{
				return _1d624eb7e_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d837b968:;
			{
				return _1d624ee6a_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d837b9ce:;
			{
				return _1d6250212_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d837ba45:;
			{
				return _1d6250531_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1d837babc:;
			{
				return _1d62507c8_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1d837bb33:;
			{
				return _1d6250a70_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1d837bbaa:;
			{
				return _1d6250d17_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1d837bc32:;
			{
				return _1d625118b_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d837bca9:;
			{
				return _1d6251433_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d837bd31:;
			{
				return _1d62516ca_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1d837bda8:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1d837be30:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1d837b308:;
			{
				return false;
			}
		}
		_match_end_1d837b23c:;
	};
}



inline jule::Bool _1d6251cb3_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1d625205a_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1d6252302_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1d6252599_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1d62529ea_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1d6252c92_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1d6253039_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1d62532d1_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1d6253622_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1d8384eb0:;
			{
				return _1d6254656_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1d8385026:;
			{
				return _1d6254942_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1d8385224:;
			{
				return _1d6254942_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1d838528a:;
			{
				return _1d6251cb3_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1d8385301:;
			{
				return _1d625205a_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1d8385378:;
			{
				return _1d6252302_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1d8385400:;
			{
				return _1d6252599_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1d8385477:;
			{
				return _1d62529ea_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1d8385554:;
			{
				return _1d6252c92_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1d83855ba:;
			{
				return _1d6253039_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1d8385631:;
			{
				return _1d62532d1_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1d8385697:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d8384c6d:;
			{
				return false;
			}
		}
		_match_end_1d8384652:;
	};
}



inline jule::Bool _1d6254656_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1d6254942_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1d6254bd9_is_int(jule::Str _4615_k) {
	return (_1d6254656_is_sig_int(_4615_k) || _1d6254942_is_unsig_int(_4615_k));
}



inline jule::Bool _1d6255008_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1d62552a0_is_num(jule::Str _5615_k) {
	return (_1d6254bd9_is_int(_5615_k) || _1d6255008_is_float(_5615_k));
}



inline jule::Bool _1d6255547_is_sig_num(jule::Str _6119_k) {
	return (_1d6254656_is_sig_int(_6119_k) || _1d6255008_is_float(_6119_k));
}



inline jule::Bool _1d62b5d7c_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1d62c7b08_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1d62c9d4c_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _2186283dd_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1d62b2483_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1d62c9797_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1d62ca18d_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _2186283dd_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_218629752_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1d83933ca:;
	}
	_iter_end_1d83933ca:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1d62c9a3e_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1d8398017:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d839807d:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d83980e4:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1d839815a:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1d83981d2:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d8398259:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1d83982d1:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1d8398358:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1d83983d0:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1d8398457:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1d8397de6:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1d62c9d4c_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1d62c9a3e_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1d839db11:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1d5dc7186_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1d839e282:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1d5dc7186_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1d839e3b4:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1d5dc7186_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1d839cadd:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1d5dc7186_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1d839ca88:;
	};
}



inline jule::Slice<jule::U8> _1d62ca18d_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1d62c9d4c_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1d63bb59d_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _2186283dd_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1d83e012a:;
	}
	_iter_end_1d83e012a:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1d638ab55_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _2186283dd_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1d83e2e1e:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1d83e2e96:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1d83e2a12:;
			};
		}
	_iter_next_1d83e2061:;
	}
	_iter_end_1d83e2061:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1d638a43a_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1d83e4e65:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d5ae8ca9_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1d83e4b13:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d5ae8ca9_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1d83e332b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2a8b_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1d83e3392:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2a8b_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1d83e4805:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2a8b_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1d83e486b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2a8b_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1d83e48d2:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2959_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1d83e4948:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2959_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1d83e49ae:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2959_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1d83e4edc:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1d61c2959_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1d83e5053:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1d83e50b9:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1d83e221a:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1d83e21b5:;
	};
}



inline jule::Slice<jule::U8> _1d639a04e_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1d638a43a_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1d63a3bd4_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1d639a04e_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1d63bcea6_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1d63bb59d_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1d63bb59d_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1d638ab55_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1d8400b85;
			};
			_11213_bytes=jule::append(_11213_bytes,_1d63a3bd4_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1d8400b85;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1d8400b85:;
	}
	_iter_end_1d8400b85:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1d63bc25d_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1d63bcea6_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1d567ee8e_parameter_uses_generics(jule::Ptr<_1d5678eaa_Param>& _39329_p, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>& _39341_generics) {
	if (_1d56795d7_is_self(_39329_p.ptr())) {
		return false;
	};
	return _1d63336d0_kind_uses_generics(_39329_p.get()._field_kind.get()._field_decl.get()._field_kind,_39341_generics);
}



inline jule::Ptr<_1d632103b_TypeSymbol> _1d568247a_build_type(jule::Ptr<_1d55a968d_TypeDecl> _9419_t) {
	if ((_9419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_decl=_9419_t, });
}



inline jule::Ptr<_1d62e2738_Value> _1d5682766_build_expr(jule::Ptr<_1d55adbae_Expr> _10319_expr) {
	if ((_10319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d62e2738_Value>(_1d62e2738_Value{._field_expr=_10319_expr, });
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d5682a0d_build_type_alias(jule::Ptr<_1d55c0dad_TypeAliasDecl> _11225_decl) {
	return jule::new_ptr<_1d631b1e0_TypeAlias>(_1d631b1e0_TypeAlias{._field_scope=_11225_decl.get()._field_scope, ._field_public=_11225_decl.get()._field_public, ._field_cpp_linked=_11225_decl.get()._field_cpp_linked, ._field_token=_11225_decl.get()._field_token, ._field_ident=_11225_decl.get()._field_ident, ._field_kind=_1d568247a_build_type(_11225_decl.get()._field_kind), });
}



inline jule::Ptr<_1d558c385_Field> _1d5682d2c_build_field(jule::Ptr<_1d55c4499_FieldDecl> _12320_decl) {
	return jule::new_ptr<_1d558c385_Field>(_1d558c385_Field{._field_token=_12320_decl.get()._field_token, ._field_public=_12320_decl.get()._field_public, ._field_mutable=_12320_decl.get()._field_mutable, ._field_ident=_12320_decl.get()._field_ident, ._field_kind=_1d568247a_build_type(_12320_decl.get()._field_kind), ._field_default=_12320_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1d558c385_Field>> _1d56830c4_build_fields(jule::Slice<jule::Ptr<_1d55c4499_FieldDecl>>& _13422_decls) {
	jule::Slice<jule::Ptr<_1d558c385_Field>> _13513_fields = jule::Slice<jule::Ptr<_1d558c385_Field>>::alloc(0LL,_13422_decls.len());;
	{
		auto &expr = _13422_decls;
		auto it = expr.begin();
		_iter_begin_1d864e961:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c4499_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1d5682d2c_build_field(_13617_decl));;
			}
			_iter_next_1d864e961:;
			++it;
			goto _iter_begin_1d864e961;
		}
		_iter_end_1d864e961:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1d5599dba_Struct> _1d568336b_build_struct(jule::Ptr<_1d55c4d07_StructDecl> _14221_decl) {
	return jule::new_ptr<_1d5599dba_Struct>(_1d5599dba_Struct{._field_token=_14221_decl.get()._field_token, ._field_ident=_14221_decl.get()._field_ident, ._field_fields=_1d56830c4_build_fields(_14221_decl.get()._field_fields), ._field_public=_14221_decl.get()._field_public, ._field_cpp_linked=_14221_decl.get()._field_cpp_linked, ._field_directives=_14221_decl.get()._field_directives, ._field_generics=_14221_decl.get()._field_generics, });
}



inline jule::Ptr<_1d5678eaa_Param> _1d5683613_build_param(jule::Ptr<_1d55ba24d_ParamDecl> _15420_decl) {
	return jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_token=_15420_decl.get()._field_token, ._field_mutable=_15420_decl.get()._field_mutable, ._field_variadic=_15420_decl.get()._field_variadic, ._field_reference=_15420_decl.get()._field_reference, ._field_kind=_1d568247a_build_type(_15420_decl.get()._field_kind), ._field_ident=_15420_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1d5678eaa_Param>> _1d5683987_build_params(jule::Slice<jule::Ptr<_1d55ba24d_ParamDecl>>& _16522_decls) {
	jule::Slice<jule::Ptr<_1d5678eaa_Param>> _16613_params = jule::Slice<jule::Ptr<_1d5678eaa_Param>>::alloc(0LL,_16522_decls.len());;
	{
		auto &expr = _16522_decls;
		auto it = expr.begin();
		_iter_begin_1d8652799:;
		if (it != expr.end()) {
			jule::Ptr<_1d55ba24d_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1d5683613_build_param(_16717_decl));;
			}
			_iter_next_1d8652799:;
			++it;
			goto _iter_begin_1d8652799;
		}
		_iter_end_1d8652799:;
	};
	return _16613_params;
}



inline jule::Ptr<_1d5678817_RetType> _1d5683c2e_build_ret_type(jule::Ptr<_1d55ac7a1_RetTypeDecl> _17323_decl) {
	if (((_17323_decl.get()._field_idents == nullptr) && (_17323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1d5678817_RetType>(_1d5678817_RetType{._field_kind=_1d568247a_build_type(_17323_decl.get()._field_kind), ._field_idents=_17323_decl.get()._field_idents});
}



inline jule::Ptr<_1d567a7e7_Fn> _1d5683ec6_build_fn(jule::Ptr<_1d55bb56d_FnDecl> _18317_decl) {
	return jule::new_ptr<_1d567a7e7_Fn>(_1d567a7e7_Fn{._field_token=_18317_decl.get()._field_token, ._field_global=_18317_decl.get()._field_global, ._field_unsafety=_18317_decl.get()._field_unsafety, ._field_public=_18317_decl.get()._field_public, ._field_cpp_linked=_18317_decl.get()._field_cpp_linked, ._field_statically=_18317_decl.get()._field_statically, ._field_exceptional=_18317_decl.get()._field_exceptional, ._field_ident=_18317_decl.get()._field_ident, ._field_directives=_18317_decl.get()._field_directives, ._field_scope=_18317_decl.get()._field_scope, ._field_generics=_18317_decl.get()._field_generics, ._field_result=_1d5683c2e_build_ret_type(_18317_decl.get()._field_result), ._field_params=_1d5683987_build_params(_18317_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _1d568426d_build_methods(jule::Slice<jule::Ptr<_1d55bb56d_FnDecl>>& _20123_decls) {
	jule::Slice<jule::Ptr<_1d567a7e7_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1d567a7e7_Fn>>::alloc(0LL,_20123_decls.len());;
	{
		auto &expr = _20123_decls;
		auto it = expr.begin();
		_iter_begin_1d86562b4:;
		if (it != expr.end()) {
			jule::Ptr<_1d55bb56d_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1d5683ec6_build_fn(_20317_decl));;
			}
			_iter_next_1d86562b4:;
			++it;
			goto _iter_begin_1d86562b4;
		}
		_iter_end_1d86562b4:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d5684515_build_trait(jule::Ptr<_1d55c5412_TraitDecl> _20920_decl) {
	return jule::new_ptr<_1d59c3e1a_Trait>(_1d59c3e1a_Trait{._field_token=_20920_decl.get()._field_token, ._field_ident=_20920_decl.get()._field_ident, ._field_public=_20920_decl.get()._field_public, ._field_methods=_1d568426d_build_methods(_20920_decl.get()._field_methods), });
}



inline jule::Ptr<_1d581b2c3_EnumItem> _1d56847ac_build_enum_item(jule::Ptr<_1d55c271c_EnumItemDecl> _21824_decl) {
	return jule::new_ptr<_1d581b2c3_EnumItem>(_1d581b2c3_EnumItem{._field_token=_21824_decl.get()._field_token, ._field_ident=_21824_decl.get()._field_ident, ._field_value=_1d5682766_build_expr(_21824_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>> _1d5684a54_build_enum_items(jule::Slice<jule::Ptr<_1d55c271c_EnumItemDecl>>& _22626_decls) {
	jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1d581b2c3_EnumItem>>::alloc(0LL,_22626_decls.len());;
	{
		auto &expr = _22626_decls;
		auto it = expr.begin();
		_iter_begin_1d86588b0:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c271c_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1d56847ac_build_enum_item(_22817_decl));;
			}
			_iter_next_1d86588b0:;
			++it;
			goto _iter_begin_1d86588b0;
		}
		_iter_end_1d86588b0:;
	};
	return _22713_items;
}



inline jule::Ptr<_1d5692820_Enum> _1d5684ceb_build_enum(jule::Ptr<_1d55c3245_EnumDecl> _23419_decl) {
	return jule::new_ptr<_1d5692820_Enum>(_1d5692820_Enum{._field_token=_23419_decl.get()._field_token, ._field_public=_23419_decl.get()._field_public, ._field_ident=_23419_decl.get()._field_ident, ._field_kind=_1d568247a_build_type(_23419_decl.get()._field_kind), ._field_items=_1d5684a54_build_enum_items(_23419_decl.get()._field_items)});
}



inline jule::Ptr<_1d580d749_TypeEnumItem> _1d568524c_build_type_enum_item(jule::Ptr<_1d55c3c4b_TypeEnumItemDecl> _24429_decl) {
	return jule::new_ptr<_1d580d749_TypeEnumItem>(_1d580d749_TypeEnumItem{._field_token=_24429_decl.get()._field_token, ._field_ident=_24429_decl.get()._field_ident, ._field_kind=_1d568247a_build_type(_24429_decl.get()._field_kind)});
}



inline jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>> _1d56854e4_build_type_enum_items(jule::Slice<jule::Ptr<_1d55c3c4b_TypeEnumItemDecl>>& _25231_decls) {
	jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1d580d749_TypeEnumItem>>::alloc(0LL,_25231_decls.len());;
	{
		auto &expr = _25231_decls;
		auto it = expr.begin();
		_iter_begin_1d865b187:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c3c4b_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1d568524c_build_type_enum_item(_25417_decl));;
			}
			_iter_next_1d865b187:;
			++it;
			goto _iter_begin_1d865b187;
		}
		_iter_end_1d865b187:;
	};
	return _25313_items;
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d568578b_build_type_enum(jule::Ptr<_1d55c3e49_TypeEnumDecl> _26024_decl) {
	return jule::new_ptr<_1d5a788b5_TypeEnum>(_1d5a788b5_TypeEnum{._field_token=_26024_decl.get()._field_token, ._field_public=_26024_decl.get()._field_public, ._field_ident=_26024_decl.get()._field_ident, ._field_items=_1d56854e4_build_type_enum_items(_26024_decl.get()._field_items)});
}



inline jule::Ptr<_1d6298ea3_Var> _1d5685a33_build_var(jule::Ptr<_1d55bc54c_VarDecl> _26918_decl) {
	return jule::new_ptr<_1d6298ea3_Var>(_1d6298ea3_Var{._field_token=_26918_decl.get()._field_token, ._field_ident=_26918_decl.get()._field_ident, ._field_cpp_linked=_26918_decl.get()._field_cpp_linked, ._field_constant=_26918_decl.get()._field_constant, ._field_mutable=_26918_decl.get()._field_mutable, ._field_public=_26918_decl.get()._field_public, ._field_statically=_26918_decl.get()._field_statically, ._field_reference=_26918_decl.get()._field_reference, ._field_kind=_1d568247a_build_type(_26918_decl.get()._field_kind), ._field_value=_1d5682766_build_expr(_26918_decl.get()._field_expr), ._field_refers=static__1d568104a_new(), ._field_directives=_26918_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_1d6298ea3_Var>> _1d5685cca_build_vars(jule::Slice<jule::Ptr<_1d55bc54c_VarDecl>> _28619_decls) {
	jule::Slice<jule::Ptr<_1d6298ea3_Var>> _28713_vars = jule::Slice<jule::Ptr<_1d6298ea3_Var>>::alloc(0LL,_28619_decls.len());;
	{
		auto &expr = _28619_decls;
		auto it = expr.begin();
		_iter_begin_1d865e597:;
		if (it != expr.end()) {
			jule::Ptr<_1d55bc54c_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1d5685a33_build_var(_28817_decl));;
			}
			_iter_next_1d865e597:;
			++it;
			goto _iter_begin_1d865e597;
		}
		_iter_end_1d865e597:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1d62470d8_Impl> _1d5686072_build_impl(jule::Ptr<_1d55c5a1c_Impl> _29419_decl) {
	return jule::new_ptr<_1d62470d8_Impl>(_1d62470d8_Impl{._field_base=_29419_decl.get()._field_base, ._field_dest=_29419_decl.get()._field_dest, ._field_methods=_1d568426d_build_methods(_29419_decl.get()._field_methods), ._field_statics=_1d5685cca_build_vars(_29419_decl.get()._field_statics)});
}



inline jule::Bool _1d6223b42_match_constraint(jule::Str& _13522_c, jule::Ptr<_1d631bdd3_TypeKind>& _13535_g) {
	{
		auto &_match_expr{ _13522_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1d86c0bbe:;
			{
				jule::Ptr<_1d63218aa_Prim> _13813_prim = _1d631dee5_prim(_13535_g.ptr());;
				if ((_13813_prim == nullptr)) {
					return false;
				};
				return _1d6255547_is_sig_num(_13813_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1d86c0c35:;
			{
				jule::Ptr<_1d63218aa_Prim> _14413_prim = _1d631dee5_prim(_13535_g.ptr());;
				if ((_14413_prim == nullptr)) {
					return false;
				};
				return _1d6254942_is_unsig_int(_14413_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1d86c0d67:;
			{
				jule::Ptr<_1d63218aa_Prim> _15013_prim = _1d631dee5_prim(_13535_g.ptr());;
				if ((_15013_prim == nullptr)) {
					return false;
				};
				return _1d6255008_is_float(_15013_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1d86c0dcd:;
			{
				jule::Ptr<_1d63218aa_Prim> _15613_prim = _1d631dee5_prim(_13535_g.ptr());;
				if ((_15613_prim == nullptr)) {
					return false;
				};
				return _1d62552a0_is_num(_15613_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1d86c0e44:;
			{
				return _1d631d2d0_mutable(_13535_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1d86c0eaa:;
			{
				return (!(_1d631d2d0_mutable(_13535_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1d86c1021:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1d86c1087:;
			{
				jule::Ptr<_1d63218aa_Prim> _16813_prim = _1d631dee5_prim(_13535_g.ptr());;
				if ((_16813_prim != nullptr)) {
					return (_1d62552a0_is_num(_16813_prim.get()._field_kind) || _1d6324ade_is_str(_16813_prim.ptr()));
				};
				if ((_1d631e4bd_ptr(_13535_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1d55c62d1_StructIns> _17513_s = _1d6320447_strct(_13535_g.ptr());;
				if ((_17513_s != nullptr)) {
					return ((((_17513_s.get()._field_operators._field_gt != nullptr) && (_17513_s.get()._field_operators._field_gt_eq != nullptr)) && (_17513_s.get()._field_operators._field_lt != nullptr)) && (_17513_s.get()._field_operators._field_lt_eq != nullptr));
				};
				jule::Ptr<_1d5692820_Enum> _18213_enm = _1d631e732_enm(_13535_g.ptr());;
				if ((_18213_enm != nullptr)) {
					return _1d62552a0_is_num(_1d631c2ce_to_str(_18213_enm.get()._field_kind.get()._field_kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1d86c08e4:;
			{
				return false;
			}
		}
		_match_end_1d86c0839:;
	};
}



inline jule::Bool _1d6225737_is_builtin_constraint(jule::Str& _19227_ident) {
	{
		auto &expr = _1d61c7e6a_BUILTIN_CONSTRAINTS;
		auto it = expr.begin();
		_iter_begin_1d86c97dd:;
		if (it != expr.end()) {
			jule::Str &_19312_bc = *it;
			{
				if ((_19227_ident == _19312_bc)) {
					return true;
				};
			}
			_iter_next_1d86c97dd:;
			++it;
			goto _iter_begin_1d86c97dd;
		}
		_iter_end_1d86c97dd:;
	};
	return false;
}



inline jule::Ptr<_1d625c571_ScopeChecker> _1d62306ed_new_scope_checker_base(jule::Ptr<_1d627c519_Sema>& _5932_s, jule::Ptr<_1d567d498_FnIns> _5946_owner) {
	return jule::new_ptr<_1d625c571_ScopeChecker>(_1d625c571_ScopeChecker{._field_s=_5932_s, ._field_owner=_5946_owner, ._field_table=jule::new_ptr<_1d62db952_SymbolTable>(), });
}



inline jule::Ptr<_1d625c571_ScopeChecker> _1d62315ab_new_scope_checker(jule::Ptr<_1d627c519_Sema>& _6727_s, jule::Ptr<_1d567d498_FnIns> _6741_owner) {
	jule::Ptr<_1d625c571_ScopeChecker> _6813_base = _1d62306ed_new_scope_checker_base(_6727_s,_6741_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d625b2d9_ScopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d625b75c_ScopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1d625b2d9_ScopeLabel> _1d622558e_find_label_parent(jule::Str _7722_ident, jule::Ptr<_1d625c571_ScopeChecker> _7738_scope) {
	jule::Ptr<_1d625b2d9_ScopeLabel> _7813_label = _1d6261014_find_label_scope(_7738_scope, _7722_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7738_scope.get()._field_parent == nullptr) || (_7738_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7738_scope=_7738_scope.get()._field_parent;
			_7813_label=_1d6261014_find_label_scope(_7738_scope, _7722_ident);
		}
	_iter_next_1d86e0c11:;
	}
	_iter_end_1d86e0c11:;;
	return _7813_label;
}



inline jule::Bool _1d6232579_model_is_goto_scope(jule::Any _9124_model, jule::Ptr<_1d6255beb_Scope>& _9137_sc) {
	{
		auto &_match_expr{ _9124_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
			_case_begin_1d86e2471:;
			{
				jule::Ptr<_1d567400a_FnCallExprModel> _9413_fcem = _9124_model.operator jule::Ptr<_1d567400a_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_except == _9137_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d86e24e8:;
			{
				jule::Ptr<_1d62e16b0_Data> _9913_d = _9124_model.operator jule::Ptr<_1d62e16b0_Data>();;
				return _1d6232579_model_is_goto_scope(jule::Any(_9913_d.get()._field_model),_9137_sc);
			}
		}
		_match_end_1d86e2361:;
	};
	return false;
}



inline jule::Bool _1d6233437_stmt_is_goto_scope(jule::Any& _10524_stmt, jule::Ptr<_1d6255beb_Scope>& _10537_sc) {
	{
		auto &_match_expr{ _10524_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1d6255beb_Scope>>()) {
			_case_begin_1d86e297c:;
			{
				return (_10524_stmt.operator jule::Ptr<_1d6255beb_Scope>() == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256757_InfIter>>()) {
			_case_begin_1d86e29e3:;
			{
				return (_10524_stmt.operator jule::Ptr<_1d6256757_InfIter>().get()._field_scope == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62575b0_RangeIter>>()) {
			_case_begin_1d86e2a59:;
			{
				jule::Ptr<_1d62575b0_RangeIter> _11213_it = _10524_stmt.operator jule::Ptr<_1d62575b0_RangeIter>();;
				return ((_11213_it.get()._field_scope == _10537_sc) || _1d6232579_model_is_goto_scope(jule::Any(_11213_it.get()._field_expr.get()._field_model),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6256bca_WhileIter>>()) {
			_case_begin_1d86e482a:;
			{
				jule::Ptr<_1d6256bca_WhileIter> _11513_it = _10524_stmt.operator jule::Ptr<_1d6256bca_WhileIter>();;
				return (((_11513_it.get()._field_scope == _10537_sc) || _1d6232579_model_is_goto_scope(jule::Any(_11513_it.get()._field_expr),_10537_sc)) || _1d6232579_model_is_goto_scope(jule::Any(_11513_it.get()._field_next),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625965b_Match>>()) {
			_case_begin_1d86e48a2:;
			{
				jule::Ptr<_1d625965b_Match> _12013_m = _10524_stmt.operator jule::Ptr<_1d625965b_Match>();;
				{
					auto &expr = _12013_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1d86e8477:;
					if (it != expr.end()) {
						jule::Ptr<_1d625a1a6_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_scope == _10537_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_1d86e9445:;
								if (it != expr.end()) {
									jule::Ptr<_1d62e16b0_Data> &_12520_expr = *it;
									{
										if (_1d6232579_model_is_goto_scope(jule::Any(_12520_expr.get()._field_model),_10537_sc)) {
											return true;
										};
									}
									_iter_next_1d86e9445:;
									++it;
									goto _iter_begin_1d86e9445;
								}
								_iter_end_1d86e9445:;
							};
						}
						_iter_next_1d86e8477:;
						++it;
						goto _iter_begin_1d86e8477;
					}
					_iter_end_1d86e8477:;
				};
				return ((_12013_m.get()._field_default != nullptr) && (_12013_m.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d625646b_Conditional>>()) {
			_case_begin_1d86e4929:;
			{
				jule::Ptr<_1d625646b_Conditional> _13313_c = _10524_stmt.operator jule::Ptr<_1d625646b_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1d86eaa2e:;
					if (it != expr.end()) {
						jule::Ptr<_1d6255dd8_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_scope == _10537_sc) || _1d6232579_model_is_goto_scope(jule::Any(_13416_elif.get()._field_expr),_10537_sc))) {
								return true;
							};
						}
						_iter_next_1d86eaa2e:;
						++it;
						goto _iter_begin_1d86eaa2e;
					}
					_iter_end_1d86eaa2e:;
				};
				return ((_13313_c.get()._field_default != nullptr) && (_13313_c.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d86e49a1:;
			{
				jule::Ptr<_1d62e16b0_Data> _14113_d = _10524_stmt.operator jule::Ptr<_1d62e16b0_Data>();;
				return _1d6232579_model_is_goto_scope(jule::Any(_14113_d.get()._field_model),_10537_sc);
			}
		}
		else {
			_case_begin_1d86e287d:;
			{
				return false;
			}
		}
		_match_end_1d86dca65:;
	};
}



inline jule::I64 _1d62415ee_count_match_type(jule::Ptr<_1d625965b_Match>& _14822_m, jule::Ptr<_1d631bdd3_TypeKind>& _14834_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1d631c2ce_to_str(_14834_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14822_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1d86eda54:;
		if (it != expr.end()) {
			jule::Ptr<_1d625a1a6_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1d86eda54;
				};
				{
					auto &expr = _15212_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1d86ee3e5:;
					if (it != expr.end()) {
						jule::Ptr<_1d62e16b0_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1d86eda54;
							};
							if ((_1509_kind == _1d631c2ce_to_str(_15716_expr.get()._field_model.operator jule::Ptr<_1d631bdd3_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1d86ee3e5:;
						++it;
						goto _iter_begin_1d86ee3e5;
					}
					_iter_end_1d86ee3e5:;
				};
			}
			_iter_next_1d86eda54:;
			++it;
			goto _iter_begin_1d86eda54;
		}
		_iter_end_1d86eda54:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1d62e16b0_Data>> _1d6244547_get_datas_from_tuple_data(jule::Ptr<_1d62e16b0_Data>& _17235_d) {
	if ((_1d6320b84_tup(_17235_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17235_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1d5675c32_TupleExprModel>>()) {
				_case_begin_1d870363b:;
				{
					return _17235_d.get()._field_model.operator jule::Ptr<_1d5675c32_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1d8701040:;
				{
					jule::Ptr<_1d6326629_Tuple> _17821_t = _1d6320b84_tup(_17235_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1d62e16b0_Data>> _17921_r = jule::Slice<jule::Ptr<_1d62e16b0_Data>>::alloc(0LL,_17821_t.get()._field_types.len());;
					{
						auto &expr = _17821_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1d870255d:;
						if (it != expr.end()) {
							jule::Ptr<_1d631bdd3_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=_18025_kind, ._field_mutable=true, }));;
							}
							_iter_next_1d870255d:;
							++it;
							goto _iter_begin_1d870255d;
						}
						_iter_end_1d870255d:;
					};
					return _17921_r;
				}
			}
			_match_end_1d8700db9:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1d62e16b0_Data>>::make({_17235_d});
	};
}



inline jule::Slice<jule::Any> _1d62450c5_get_expr_models(jule::Any& _19325_m) {
	{
		auto &_match_expr{ _19325_m };
		
		if (_match_expr.type_is<jule::Ptr<_1d55ae83b_TupleExpr>>()) {
			_case_begin_1d8703a6a:;
			{
				jule::Ptr<_1d55ae83b_TupleExpr> _19617_tup = _19325_m.operator jule::Ptr<_1d55ae83b_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_expr.len());;
				{
					auto &expr = _19617_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1d87050ee:;
					if (it != expr.end()) {
						jule::Ptr<_1d55adbae_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_kind);;
						}
						_iter_next_1d87050ee:;
						++it;
						goto _iter_begin_1d87050ee;
					}
					_iter_end_1d87050ee:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1d870113e:;
			{
				return jule::Slice<jule::Any>::make({_19325_m});
			}
		}
		_match_end_1d8703905:;
	};
}



inline jule::Bool _1d6245b53_check_mut(jule::Ptr<_1d627c519_Sema>& _20719_s, jule::Ptr<_1d62e16b0_Data>& _20730_left, jule::Ptr<_1d62e16b0_Data> _20747_right, jule::Ptr<_1ee538d51_Token> _20761_op) {
	jule::Bool _20775_ok = jule::Bool();
	{
		
		if ((!(_20730_left.get()._field_mutable))) {
			_case_begin_1d8706881:;
			{
				_1d62801cb_push_err(_20719_s.ptr(), _20761_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else if ((((_20747_right != nullptr) && (!(_20747_right.get()._field_mutable))) && _1d631d2d0_mutable(_20747_right.get()._field_kind.ptr()))) {
			_case_begin_1d8706991:;
			{
				if (((_20761_op.get()._field_kind != jule::Str("=", 1)) && (_1d6320447_strct(_20747_right.get()._field_kind.ptr()) != nullptr))) {
					_20775_ok = true;
					return _20775_ok;
				};
				_1d62801cb_push_err(_20719_s.ptr(), _20761_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_20747_right.get()._field_kind.ptr()))}));
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else {
			_case_begin_1d8706254:;
			{
				_20775_ok = true;
				return _20775_ok;
			}
		}
		_match_end_1d8705819:;
	};
}



inline jule::Bool _1d624127a_check_assign(jule::Ptr<_1d627c519_Sema>& _22622_s, jule::Ptr<_1d62e16b0_Data>& _22637_left, jule::Ptr<_1d62e16b0_Data> _22654_right, jule::Ptr<_1ee538d51_Token> _22668_op) {
	jule::Bool _22682_ok = jule::Bool();
	jule::Ptr<_1d567d498_FnIns> _2279_f = _1d63201d3_fnc(_22637_left.get()._field_kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_decl != nullptr)) && _2279_f.get()._field_decl.get()._field_global)) {
		_1d62801cb_push_err(_22622_s.ptr(), _22668_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22682_ok = false;
		return _22682_ok;
	};
	{
		
		if (_1d62e2073_is_const(_22637_left.ptr())) {
			_case_begin_1d870b897:;
			{
				_1d62801cb_push_err(_22622_s.ptr(), _22668_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1d62804ea_push_suggestion(_22622_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_22637_left.get()._field_lvalue))) {
			_case_begin_1d870b974:;
			{
				_1d62801cb_push_err(_22622_s.ptr(), _22668_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_1d6245b53_check_mut(_22622_s,_22637_left,_22654_right,_22668_op)))) {
			_case_begin_1d870b9eb:;
			{
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else {
			_case_begin_1d870b248:;
			{
				_22682_ok = true;
				return _22682_ok;
			}
		}
		_match_end_1d870b0e4:;
	};
}



inline jule::Bool _1d6255855_is_valid_ast_st_for_next_st(jule::Any& _24837_n) {
	{
		auto &_match_expr{ _24837_n };
		
		if (_match_expr.type_is<jule::Ptr<_1d55b84d2_AssignSt>>()) {
			_case_begin_1d870baa6:;
			{
				return (!(_24837_n.operator jule::Ptr<_1d55b84d2_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55adbae_Expr>>()) {
			_case_begin_1d870bb1c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d870d514:;
			{
				return false;
			}
		}
		_match_end_1d870d866:;
	};
}



inline jule::Bool _1d6255987_is_valid_st_for_next_st(jule::Any& _25929_st) {
	{
		auto &_match_expr{ _25929_st };
		
		if (_match_expr.type_is<jule::Ptr<_1d62587e2_Postfix>>() || _match_expr.type_is<jule::Ptr<_1d6258c65_Assign>>() || _match_expr.type_is<jule::Ptr<_1d625911c_MultiAssign>>()) {
			_case_begin_1d870e559:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d870e5c0:;
			{
				{
					auto &_match_expr{ _25929_st.operator jule::Ptr<_1d62e16b0_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1d567400a_FnCallExprModel>>()) {
						_case_begin_1d87109ab:;
						{
							return true;
						}
					}
					else {
						_case_begin_1d8710945:;
						{
							return false;
						}
					}
					_match_end_1d87106d1:;
				};
			}
		}
		else {
			_case_begin_1d870de71:;
			{
				return false;
			}
		}
		_match_end_1d870dd83:;
	};
}



inline jule::Bool _1d6255ab9_stmt_is_def(jule::Any& _27717_st) {
	{
		auto &_match_expr{ _27717_st };
		
		if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d8711649:;
			{
				return true;
			}
		}
		else {
			_case_begin_1d87105d2:;
			{
				return false;
			}
		}
		_match_end_1d871057c:;
	};
}



inline jule::Ptr<_1d6298ea3_Var> _1d6271e59_find_var_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1d8872b84:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1d6298ea3_Var> _4817_v = _1d62dc634_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1d8872b84:;
			++it;
			goto _iter_begin_1d8872b84;
		}
		_iter_end_1d8872b84:;
	};
	return nullptr;
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d62723aa_find_type_alias_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1d887425c:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1d631b1e0_TypeAlias> _6017_ta = _1d62dc9db_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1d887425c:;
			++it;
			goto _iter_begin_1d887425c;
		}
		_iter_end_1d887425c:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5599dba_Struct> _1d62727a6_find_struct_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1d8875824:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1d5599dba_Struct> _7217_s = _1d62dcd93_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1d8875824:;
			++it;
			goto _iter_begin_1d8875824;
		}
		_iter_end_1d8875824:;
	};
	return nullptr;
}



inline jule::Ptr<_1d567a7e7_Fn> _1d6272c18_find_fn_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1d8876ddb:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1d567a7e7_Fn> _8417_f = _1d62dd24a_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1d8876ddb:;
			++it;
			goto _iter_begin_1d8876ddb;
		}
		_iter_end_1d8876ddb:;
	};
	return nullptr;
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d6273026_find_trait_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1d88774d5:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1d59c3e1a_Trait> _9617_t = _1d62dd558_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1d88774d5:;
			++it;
			goto _iter_begin_1d88774d5;
		}
		_iter_end_1d88774d5:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5692820_Enum> _1d6273367_find_enum_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1d88788b0:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1d5692820_Enum> _10817_e = _1d62dd866_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1d88788b0:;
			++it;
			goto _iter_begin_1d88788b0;
		}
		_iter_end_1d88788b0:;
	};
	return nullptr;
}



inline jule::Ptr<_1d5a788b5_TypeEnum> _1d62736ca_find_type_enum_in_package(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _11835_files, jule::Str _11858_ident) {
	{
		auto &expr = _11835_files;
		auto it = expr.begin();
		_iter_begin_1d8879c9b:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1d5a788b5_TypeEnum> _12017_e = _1d62ddb74_find_type_enum(_11917_f.ptr(), _11858_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1d8879c9b:;
			++it;
			goto _iter_begin_1d8879c9b;
		}
		_iter_end_1d8879c9b:;
	};
	return nullptr;
}



inline jule::Bool _1d6279901_is_std_package(jule::Str _35019_f, jule::Str _35027_p) {
	return _2185eacc8_has_prefix(_35019_f,_218632a24_join(jule::Slice<jule::Str>::make({_1ed63c6d6_PATH_STDLIB,_35027_p})));
}



inline jule::Bool _1d627a65a_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1d6298ea3_Var>>()) {
			_case_begin_1d888c165:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
			_case_begin_1d888c1cb:;
			{
				jule::Ptr<_1d5675292_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>();;
				return _1d627a65a_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5674d74_TraitSubIdentExprModel>>()) {
			_case_begin_1d888c242:;
			{
				jule::Ptr<_1d5674d74_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1d5674d74_TraitSubIdentExprModel>();;
				return _1d627a65a_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567356a_UnaryExprModel>>()) {
			_case_begin_1d888c3c9:;
			{
				jule::Ptr<_1d567356a_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1d567356a_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1d631e4bd_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1d631e259_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1d627a65a_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1d888b95b:;
			{
				return false;
			}
		}
		_match_end_1d888b906:;
	};
}



inline _21868a483_Log _1d627ab00_compiler_err(jule::Ptr<_1ee538d51_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_21868a483_Log _4213_log = _21868a483_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_21868a8c3_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_1ee5403b8_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1d627ae41_imp_is_lookupable(jule::Ptr<_1d62743bd_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1d6276c94_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1d627b23d_append_ret_vars(jule::Slice<jule::Ptr<_1d6298ea3_Var>>& _6825_dest, jule::Ptr<_1d567d498_FnIns>& _6844_f) {
	if ((_1d567ac59_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d631bdd3_TypeKind>> _7313_types = _1d567de7c_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1d8895844:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _7417_ident = *it;
			{
				if ((_1ee53b5e5_is_ignore_ident(_7417_ident.get()._field_kind) || _1ee53b88c_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1d8895844;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1d6298ea3_Var>(_1d6298ea3_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1d62e2738_Value>(_1d62e2738_Value{._field_data=jule::new_ptr<_1d62e16b0_Data>()}), }));;
			}
			_iter_next_1d8895844:;
			++it;
			_7410_i++;
			goto _iter_begin_1d8895844;
		}
		_iter_end_1d8895844:;
	};
}



inline void _1d627b4e6_append_param_vars(jule::Slice<jule::Ptr<_1d6298ea3_Var>>& _9427_dest, jule::Ptr<_1d567d498_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1d88972b3:;
		if (it != expr.end()) {
			jule::Ptr<_1d567c5c9_ParamIns> _9917_p = *it;
			{
				if ((_1ee53b5e5_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _1ee53b88c_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1d88972b3;
				};
				jule::Ptr<_1d6298ea3_Var> _10417_v = jule::new_ptr<_1d6298ea3_Var>(_1d6298ea3_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(), ._field_value=jule::new_ptr<_1d62e2738_Value>(_1d62e2738_Value{._field_data=jule::new_ptr<_1d62e16b0_Data>()}), });;
				{
					
					if (_1d56795d7_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1d889b031:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1d631b9a4_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1d567984b_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1d567984b_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d632513e_Sptr>(_1d632513e_Sptr{._field_elem=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 7);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1d889ac23:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d6325a9b_Slc>(_1d6325a9b_Slc{._field_elem=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 8)});
						}
					}
					else {
						_case_begin_1d8898bdd:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1d889aabe:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1d88972b3:;
			++it;
			goto _iter_begin_1d88972b3;
		}
		_iter_end_1d88972b3:;
	};
}



inline void _1d627b7c1_append_generic_type_aliases(jule::Slice<jule::Ptr<_1d631b1e0_TypeAlias>>& _15437_dest, jule::Ptr<_1d567d498_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1d88a13bb:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1d631a6a6_InsGeneric> _16417_g = *it;
			{
				jule::Ptr<_1d55b6d3d_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1d631b1e0_TypeAlias>(_1d631b1e0_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_16417_g.get()._field_kind}), }));;
			}
			_iter_next_1d88a13bb:;
			++it;
			_16410_i++;
			goto _iter_begin_1d88a13bb;
		}
		_iter_end_1d88a13bb:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1d55c62d1_StructIns> _17717_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17717_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1d88a2a71:;
			if (it != expr.end()) {
				jule::I64 _17814_i = it - expr.begin();
				jule::Ptr<_1d631a6a6_InsGeneric> _17821_g = *it;
				{
					jule::Ptr<_1d55b6d3d_GenericDecl> _17921_decl = _17717_owner.get()._field_decl.get()._field_generics[_17814_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1d631b1e0_TypeAlias>(_1d631b1e0_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_17921_decl.get()._field_token, ._field_ident=_17921_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=_17821_g.get()._field_kind}), }));;
				}
				_iter_next_1d88a2a71:;
				++it;
				_17814_i++;
				goto _iter_begin_1d88a2a71;
			}
			_iter_end_1d88a2a71:;
		};
	};
}



inline jule::Ptr<_1d62db952_SymbolTable> _1d627bb23_find_file(jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>& _19219_files, jule::Ptr<_1ee53e1db_File>& _19243_handler) {
	{
		auto &expr = _19219_files;
		auto it = expr.begin();
		_iter_begin_1d88a1a5e:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _19317_fl = *it;
			{
				if ((_19317_fl.get()._field_file == _19243_handler)) {
					return _19317_fl;
				};
			}
			_iter_next_1d88a1a5e:;
			++it;
			goto _iter_begin_1d88a1a5e;
		}
		_iter_end_1d88a1a5e:;
	};
	return nullptr;
}



inline void _1d627c085_push_suggestion(_21868a483_Log* _20131_log, jule::Str _20142_fmt, jule::Slice<jule::Any> _20155_args) {
	_20131_log->_field_suggestion=_21868a8c3_logf(_20142_fmt,jule::Any(_20155_args));
}



inline jule::Bool _1d62c00a6_trait_has_reference_receiver(jule::Ptr<_1d59c3e1a_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1d8a9d2cc:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1d8a9d2cc;
				};
				jule::Ptr<_1d5678eaa_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1d567984b_is_ref(_3313_p.ptr()) && _1d56795d7_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1d8a9d2cc:;
			++it;
			goto _iter_begin_1d8a9d2cc;
		}
		_iter_end_1d8a9d2cc:;
	};
	return false;
}



inline jule::Bool _1d62b25d7_float_assignable(jule::Str _4121_kind, jule::Ptr<_1d62e16b0_Data>& _4133_d) {
	jule::Str _429_value = _1d5ae8ca9_fmt_float(static_cast<jule::F64>(_1d566c1ce_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1d62496a1_check_bit_float(_429_value,static_cast<jule::I64>(_1d6248293_bitsize_of(_4121_kind)));
}



inline jule::Bool _1d62b2719_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1d62e16b0_Data>& _4631_d) {
	jule::F64 _479_min = _1d624e51e_min(_4619_kind);;
	jule::F64 _489_max = _1d624e80a_max(_4619_kind);;
	{
		
		if (_1d566dd3a_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1d8aa4a64:;
			{
				jule::F64 _5113_x = _1d566b992_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1d6193d48_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1d566d5ed_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1d8aa4aca:;
			{
				jule::F64 _5813_x = _1d566c1ce_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1d566d389_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1d8aa4b41:;
			{
				jule::F64 _6313_x = _1d566c1ce_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1d8aa4921:;
	};
	return false;
}



inline jule::Bool _1d62c92be_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1d62e16b0_Data>& _6933_d) {
	jule::F64 _709_max = _1d624e80a_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1d62b5d7c_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1d566aee1_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1d566dd3a_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1d8aa9c89:;
			{
				jule::F64 _7713_x = _1d566b992_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1d6193d48_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1d566d5ed_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1d8aa9d00:;
			{
				jule::F64 _8713_x = _1d566c1ce_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1d566d389_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1d8aa9d66:;
			{
				jule::F64 _9213_x = _1d566c1ce_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1d8aa9184:;
	};
	return false;
}



inline jule::Bool _1d62c9401_int_assignable(jule::Str _9819_kind, jule::Ptr<_1d62e16b0_Data>& _9831_d) {
	{
		
		if (_1d6254656_is_sig_int(_9819_kind)) {
			_case_begin_1d8aae7e9:;
			{
				return _1d62b2719_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1d6254942_is_unsig_int(_9819_kind)) {
			_case_begin_1d8aae167:;
			{
				return _1d62c92be_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1d8aaa4a4:;
			{
				return false;
			}
		}
		_match_end_1d8aaa3c7:;
	};
}



inline jule::Ptr<_1d5575c86_Directive> _1d63165b4_find_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _422524_directives, jule::Str _422555_d) {
	{
		auto &expr = _422524_directives;
		auto it = expr.begin();
		_iter_begin_1d8bc2885:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _422617_dr = *it;
			{
				if ((_422617_dr.get()._field_tag.get()._field_kind == _422555_d)) {
					return _422617_dr;
				};
			}
			_iter_next_1d8bc2885:;
			++it;
			goto _iter_begin_1d8bc2885;
		}
		_iter_end_1d8bc2885:;
	};
	return nullptr;
}



inline jule::Any _1d6316949_find_builtins_import(jule::Str _423425_ident, jule::Ptr<_1d62743bd_ImportInfo> _423437_imp) {
	return jule::Any(_1d639a604_find_package_builtin_def(_423437_imp.get()._field_link_path,_423425_ident));
}



inline void _1d6316b58_fit_bitsize(jule::Ptr<_1d62e16b0_Data>& _424121_d) {
	jule::Ptr<_1d63218aa_Prim> _424213_prim = _1d631dee5_prim(_424121_d.get()._field_kind.ptr());;
	jule::I64 _42439_z = _1d6248293_bitsize_of(_1d6321c1d_to_str(_424213_prim.ptr()));;
	if ((_42439_z == 64LL)) {
		return;;
	};
	jule::I64 _424813_k = 0LL;;
	{
		
		if (_1d566d389_is_i64(_424121_d.get()._field_constant.ptr())) {
			_case_begin_1d8bc5745:;
			{
				_424813_k=static_cast<jule::I64>(_1d6249be0_bitsize_of_int(static_cast<jule::I64>(_1d566aee1_read_i64(_424121_d.get()._field_constant.ptr()))));
				if ((_424813_k > _42439_z)) {
					_424213_prim.get()._field_kind=_1d62485b2_int_from_bits(_424813_k);
				};
			}
		}
		else if (_1d566d5ed_is_u64(_424121_d.get()._field_constant.ptr())) {
			_case_begin_1d8bc57bc:;
			{
				_424813_k=static_cast<jule::I64>(_1d6249e87_bitsize_of_uint(static_cast<jule::U64>(_1d566b255_read_u64(_424121_d.get()._field_constant.ptr()))));
				if ((_424813_k > _42439_z)) {
					_424213_prim.get()._field_kind=_1d6248859_uint_from_bits(_424813_k);
				};
			}
		}
		else if (_1d566dd3a_is_f64(_424121_d.get()._field_constant.ptr())) {
			_case_begin_1d8bc5844:;
			{
				_424813_k=static_cast<jule::I64>(_1d6249948_bitsize_of_float(static_cast<jule::F64>(_1d566b992_read_f64(_424121_d.get()._field_constant.ptr()))));
				if ((_424813_k > _42439_z)) {
					_424213_prim.get()._field_kind=_1d6248b01_float_from_bits(_424813_k);
				};
			}
		}
		_match_end_1d8bc5679:;
	};
}



inline void _1d6316e55_make_struct_lit_alloc(jule::Ptr<_1d62e16b0_Data>& _426831_d, jule::Ptr<_1d5673944_StructLitExprModel>& _426846_lit) {
	_426831_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d632513e_Sptr>(_1d632513e_Sptr{._field_elem=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_426846_lit.get()._field_strct, 0)})}), 7)});
	_426831_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5673b31_AllocStructLitExprModel>(_1d5673b31_AllocStructLitExprModel{._field_lit=_426846_lit}));
}



inline jule::Ptr<_1d6298ea3_Var> _1d6317296_build_error_var(jule::Ptr<_1d6255beb_Scope>& _427925_s, jule::Ptr<_1d55b3048_FnCallExpr>& _427941_fc) {
	return jule::new_ptr<_1d6298ea3_Var>(_1d6298ea3_Var{._field_scope=_427925_s, ._field_token=_427941_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("any", 3)), 6)})}), ._field_value=jule::new_ptr<_1d62e2738_Value>(_1d62e2738_Value{._field_data=jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{})}), });
}



inline jule::Any _1d63175d7_find_builtins_sema(jule::Str _429823_ident, jule::Ptr<_1d627c519_Sema> _429839_s) {
	{
		auto &expr = _429839_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1d8bcb174:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _429917_imp = *it;
			{
				if ((_429917_imp.get()._field_import_all || _1d6276c94_exist_ident(_429917_imp.ptr(), _429823_ident))) {
					jule::Any _430121_def = _1d6316949_find_builtins_import(_429823_ident,_429917_imp);;
					if ((_430121_def != nullptr)) {
						return jule::Any(_430121_def);
					};
				};
			}
			_iter_next_1d8bcb174:;
			++it;
			goto _iter_begin_1d8bcb174;
		}
		_iter_end_1d8bcb174:;
	};
	jule::Str _430913_ppath = _1ee53ead2_dir(_429839_s.get()._field_file.get()._field_file.ptr());;
	if (_2185eacc8_has_prefix(_430913_ppath,_1ed63c6d6_PATH_STDLIB)) {
		(_430913_ppath).mut_slice(_1ed63c6d6_PATH_STDLIB.len());;
		_430913_ppath=(jule::Str("std", 3) + _21862dc62_replace(_430913_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1d639a604_find_package_builtin_def(_430913_ppath,_429823_ident));
	};
	return nullptr;
}



inline jule::Bool _1d631787e_is_ok_for_shifting(jule::Ptr<_1d62e16b0_Data>& _432328_d) {
	if (_1d62e2073_is_const(_432328_d.ptr())) {
		{
			
			if (_1d566d389_is_i64(_432328_d.get()._field_constant.ptr())) {
				_case_begin_1d8bd0002:;
				{
					return (_1d566aee1_read_i64(_432328_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1d566d5ed_is_u64(_432328_d.get()._field_constant.ptr())) {
				_case_begin_1d8bce7b5:;
				{
					return true;
				}
			}
			else if (_1d566dd3a_is_f64(_432328_d.get()._field_constant.ptr())) {
				_case_begin_1d8bce82b:;
				{
					return (_1d566b992_read_f64(_432328_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1d8bce74e:;
				{
					return false;
				}
			}
			_match_end_1d8bce672:;
		};
	};
	jule::Ptr<_1d63218aa_Prim> _43369_prim = _1d631dee5_prim(_432328_d.get()._field_kind.ptr());;
	return ((_43369_prim != nullptr) && _1d6254bd9_is_int(_1d6321c1d_to_str(_43369_prim.ptr())));
}



inline jule::Bool _1d6317c36_is_instanced_struct(jule::Ptr<_1d55c62d1_StructIns> _434024_s) {
	return (_434024_s.get()._field_decl.get()._field_generics.len() == _434024_s.get()._field_generics.len());
}



inline jule::Bool _1d6318011_is_ptr_arithmetic_compatible_int(jule::Ptr<_1d62e16b0_Data>& _434442_d) {
	if (_1d62e2073_is_const(_434442_d.ptr())) {
		return _1d62c9401_int_assignable(jule::Str("int", 3),_434442_d);
	};
	_1d62ca545_TypeCompatibilityChecker _434813_tcc = _1d62ca545_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)}), ._field_src=_434442_d.get()._field_kind, };;
	return _1d62cbb2e_check(&_434813_tcc);
}



inline void _1d6318242_apply_cast_kind_model(jule::Ptr<_1d62e16b0_Data>& _435731_d, jule::Ptr<_1d631bdd3_TypeKind>& _435746_t) {
	_435731_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5673d1d_CastingExprModel>(_1d5673d1d_CastingExprModel{._field_expr=_435731_d.get()._field_model, ._field_kind=_435746_t, ._field_expr_kind=_435731_d.get()._field_kind}));
}



inline void _1d63184ea_apply_cast_kind(jule::Ptr<_1d62e16b0_Data>& _436525_d, jule::Ptr<_1d631bdd3_TypeKind>& _436540_t) {
	_1d6318242_apply_cast_kind_model(_436525_d,_436540_t);
	_436525_d.get()._field_kind=_436540_t;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63186e8_build_void_data(void) {
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("void", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _1d63189b2_check_data_for_integer_indexing(jule::Ptr<_1d62e16b0_Data>& _438141_d) {
	jule::Str _438153_err_fmt = jule::Str();
	if ((_438141_d == nullptr)) {
		_438153_err_fmt = jule::Str();
		return _438153_err_fmt;
	};
	{
		
		if ((_1d631dee5_prim(_438141_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1d8bd5da4:;
			{
				_438153_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _438153_err_fmt;
			}
		}
		else if ((!(_1d6254bd9_is_int(_1d6321c1d_to_str(_1d631dee5_prim(_438141_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1d8bd5e1a:;
			{
				_438153_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _438153_err_fmt;
			}
		}
		else if (_1d62e2073_is_const(_438141_d.ptr())) {
			_case_begin_1d8bd5e81:;
			{
				if ((_1d566c1ce_as_f64(_438141_d.get()._field_constant.ptr()) < 0LL)) {
					_438153_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _438153_err_fmt;
				};
			}
		}
		else if ((_1d631dee5_prim(_438141_d.get()._field_kind.ptr()) == nullptr) || _1d62e2073_is_const(_438141_d.ptr()) || (_1d6247eeb_real_kind_of(_1d6321c1d_to_str(_1d631dee5_prim(_438141_d.get()._field_kind.ptr()).ptr())) != _1d6247eeb_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1d8bd5ee7:;
			{
				jule::Ptr<_1d631bdd3_TypeKind> _439817_t = jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)});;
				_1d63184ea_apply_cast_kind(_438141_d,_439817_t);
			}
		}
		_match_end_1d8bd6239:;
	};
	_438153_err_fmt = jule::Str();
	return _438153_err_fmt;
}



inline void _1d6318c9d_apply_cast_model_by_enum(jule::Ptr<_1d62e16b0_Data>& _440734_d, jule::Ptr<_1d5692820_Enum> _440748_e) {
	if ((_440748_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1d63218aa_Prim> _44119_p = _1d631dee5_prim(_440748_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1d6324ade_is_str(_44119_p.ptr())) {
		return;;
	};
	_1d6318242_apply_cast_kind_model(_440734_d,_440748_e.get()._field_kind.get()._field_kind);
}



inline void _1d6319067_cast_const_by_type(jule::Str& _441824_t, jule::Ptr<_1d62e16b0_Data>& _441837_d) {
	{
		
		if (_1d6254656_is_sig_int(_441824_t)) {
			_case_begin_1d8bdbc89:;
			{
				{
					auto _match_expr{ _1d6248293_bitsize_of(_1d6247eeb_real_kind_of(_441824_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1d8bdc9b0:;
						{
							_1d566c454_set_i64(_441837_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1d566bc06_as_i64(_441837_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1d8bdca26:;
						{
							_1d566c454_set_i64(_441837_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1d566bc06_as_i64(_441837_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1d8bdca8c:;
						{
							_1d566c454_set_i64(_441837_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1d566bc06_as_i64(_441837_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1d8bdcb03:;
						{
							_1d566c454_set_i64(_441837_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1d566bc06_as_i64(_441837_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1d8bdc020:;
				};
			}
		}
		else if (_1d6254942_is_unsig_int(_441824_t)) {
			_case_begin_1d8bdbd11:;
			{
				{
					auto _match_expr{ _1d6248293_bitsize_of(_1d6247eeb_real_kind_of(_441824_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1d8be10e0:;
						{
							_1d566c6c9_set_u64(_441837_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1d566be6a_as_u64(_441837_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1d8be1156:;
						{
							_1d566c6c9_set_u64(_441837_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1d566be6a_as_u64(_441837_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1d8be11bc:;
						{
							_1d566c6c9_set_u64(_441837_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1d566be6a_as_u64(_441837_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1d8be1233:;
						{
							_1d566c6c9_set_u64(_441837_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1d566be6a_as_u64(_441837_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1d8be062d:;
				};
			}
		}
		else if (_1d6255008_is_float(_441824_t)) {
			_case_begin_1d8bdbd88:;
			{
				{
					auto _match_expr{ _1d6248293_bitsize_of(_1d6247eeb_real_kind_of(_441824_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1d8be4489:;
						{
							_1d566ce49_set_f64(_441837_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1d566c1ce_as_f64(_441837_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1d8be4764:;
						{
							_1d566ce49_set_f64(_441837_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1d566c1ce_as_f64(_441837_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1d8be2201:;
				};
			}
		}
		_match_end_1d8bdbb57:;
	};
}



inline void _1d6319573_update_model_to_generic_ins(jule::Ptr<_1d567400a_FnCallExprModel>& _445237_m, jule::Ptr<_1d567d498_FnIns>& _445263_f) {
	{
		auto &_match_expr{ _445237_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1d567d498_FnIns>>()) {
			_case_begin_1d8bea69e:;
			{
				_445237_m.get()._field_expr=static_cast<jule::Any>(_445263_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d5675292_StructSubIdentExprModel>>()) {
			_case_begin_1d8bea715:;
			{
				_445237_m.get()._field_expr.operator jule::Ptr<_1d5675292_StructSubIdentExprModel>().get()._field_method=_445263_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567547e_StructStaticIdentExprModel>>()) {
			_case_begin_1d8bea77b:;
			{
				_445237_m.get()._field_expr.operator jule::Ptr<_1d567547e_StructStaticIdentExprModel>().get()._field_method=_445263_f;
			}
		}
		_match_end_1d8bea649:;
	};
}



inline jule::Bool _1d63197d7_push_sub_ident_from_expr(jule::Any _446333_expr, jule::Ptr<_1d55aa3a3_SubIdentTypeDecl>& _446354_t) {
	{
		auto &_match_expr{ _446333_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1d55b0c27_IdentExpr>>()) {
			_case_begin_1d8becad0:;
			{
				jule::Ptr<_1d55b0c27_IdentExpr> _446617_e = _446333_expr.operator jule::Ptr<_1d55b0c27_IdentExpr>();;
				_446354_t.get()._field_idents = jule::alloc_for_append(_446354_t.get()._field_idents,1);_446354_t.get()._field_idents.__push(jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_446617_e.get()._field_token, ._field_ident=_446617_e.get()._field_ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d55b24ba_SubIdentExpr>>()) {
			_case_begin_1d8becb46:;
			{
				jule::Ptr<_1d55b24ba_SubIdentExpr> _447217_e = _446333_expr.operator jule::Ptr<_1d55b24ba_SubIdentExpr>();;
				if ((!(_1d63197d7_push_sub_ident_from_expr(_447217_e.get()._field_expr.get()._field_kind,_446354_t)))) {
					return false;
				};
				_446354_t.get()._field_idents = jule::alloc_for_append(_446354_t.get()._field_idents,1);_446354_t.get()._field_idents.__push(jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_447217_e.get()._field_ident, ._field_ident=_447217_e.get()._field_ident.get()._field_kind, }));;
			}
		}
		else {
			_case_begin_1d8beb67d:;
			{
				return false;
			}
		}
		_match_end_1d8beb617:;
	};
	return true;
}



inline jule::Bool _1d63336d0_kind_uses_generics(jule::Any& _155824_k, jule::Slice<jule::Ptr<_1d55b6d3d_GenericDecl>>& _155842_generics) {
	{
		auto &expr = _155842_generics;
		auto it = expr.begin();
		_iter_begin_1d9014567:;
		if (it != expr.end()) {
			jule::Ptr<_1d55b6d3d_GenericDecl> &_155912_g = *it;
			{
				if (static__1d63332d4_exist(_155912_g.get()._field_ident,_155824_k)) {
					return true;
				};
			}
			_iter_next_1d9014567:;
			++it;
			goto _iter_begin_1d9014567;
		}
		_iter_end_1d9014567:;
	};
	return false;
}



inline jule::Bool _1d6333a65_has_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _156823_directives, jule::Str _156854_tag) {
	{
		auto &expr = _156823_directives;
		auto it = expr.begin();
		_iter_begin_1d90156ab:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _156917_dr = *it;
			{
				if ((_156917_dr.get()._field_tag.get()._field_kind == _156854_tag)) {
					return true;
				};
			}
			_iter_next_1d90156ab:;
			++it;
			goto _iter_begin_1d90156ab;
		}
		_iter_end_1d90156ab:;
	};
	return false;
}



inline jule::Bool _1d6333d0c_can_get_ptr(jule::Ptr<_1d62e16b0_Data>& _157721_d) {
	if (((!(_157721_d.get()._field_lvalue)) || _1d62e2073_is_const(_157721_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1d63201d3_fnc(_157721_d.get()._field_kind.ptr()) != nullptr) || (_1d631e732_enm(_157721_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1d9017339:;
			{
				return false;
			}
		}
		else {
			_case_begin_1d9016aec:;
			{
				return true;
			}
		}
		_match_end_1d90169dc:;
	};
}



inline jule::Bool _1d633412b_is_valid_for_sptr_type(jule::Ptr<_1d631bdd3_TypeKind>& _159132_t) {
	jule::Ptr<_1d55c62d1_StructIns> _159213_s = _1d6320447_strct(_159132_t.ptr());;
	if ((((_159213_s != nullptr) && (_159213_s.get()._field_decl != nullptr)) && _159213_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1d63343c3_is_valid_for_ref(jule::Ptr<_1d631bdd3_TypeKind>& _160026_t) {
	return (_1d63201d3_fnc(_160026_t.ptr()) == nullptr);
}



inline jule::Bool _1d633468c_is_builtin_str_convertable(jule::Ptr<_1d631bdd3_TypeKind>& _160336_t) {
	return (((!(_1d631d06b_void(_160336_t.ptr()))) && (_1d63201d3_fnc(_160336_t.ptr()) == nullptr)) && (_1d6320b84_tup(_160336_t.ptr()) == nullptr));
}



inline jule::Str _1d6334934_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _160731_tokens) {
	jule::Str _160813_s = _160731_tokens[0LL].get()._field_kind;;
	{
		auto expr = _160731_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1d901b096:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> &_160912_token = *it;
			{
				_160813_s+=jule::Str("::", 2);
				_160813_s+=_160912_token.get()._field_kind;
			}
			_iter_next_1d901b096:;
			++it;
			goto _iter_begin_1d901b096;
		}
		_iter_end_1d901b096:;
	};
	return _160813_s;
}



inline jule::Ptr<_1d63218aa_Prim> _1d6334cec_build_prim_type(jule::Str _161620_kind) {
	return jule::new_ptr<_1d63218aa_Prim>(_1d63218aa_Prim{._field_kind=_161620_kind});
}



inline jule::Ptr<_1d5599dba_Struct> _1d6335094_get_struct_from_kind(jule::Ptr<_1d631bdd3_TypeKind> _162229_k) {
	{
		
		if ((_162229_k == nullptr)) {
			_case_begin_1d901c383:;
			{
				return nullptr;
			}
		}
		else if ((_1d6320447_strct(_162229_k.ptr()) != nullptr)) {
			_case_begin_1d901c3e9:;
			{
				return _1d6320447_strct(_162229_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1d631e259_sptr(_162229_k.ptr()) != nullptr)) {
			_case_begin_1d901c460:;
			{
				return _1d6335094_get_struct_from_kind(_1d631e259_sptr(_162229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1d631ee6e_slc(_162229_k.ptr()) != nullptr)) {
			_case_begin_1d901c4c6:;
			{
				return _1d6335094_get_struct_from_kind(_1d631ee6e_slc(_162229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1d631ec0a_arr(_162229_k.ptr()) != nullptr)) {
			_case_begin_1d901c77e:;
			{
				return _1d6335094_get_struct_from_kind(_1d631ec0a_arr(_162229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1d631e4bd_ptr(_162229_k.ptr()) != nullptr)) {
			_case_begin_1d901c7e5:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1d901c31c:;
			{
				return nullptr;
			}
		}
		_match_end_1d8ea534e:;
	};
}



inline jule::Bool _1d633533b_is_prim(jule::Str _164512_kind) {
	return ((((((((((((((((_164512_kind == jule::Str("i8", 2)) || (_164512_kind == jule::Str("i16", 3))) || (_164512_kind == jule::Str("i32", 3))) || (_164512_kind == jule::Str("i64", 3))) || (_164512_kind == jule::Str("u8", 2))) || (_164512_kind == jule::Str("u16", 3))) || (_164512_kind == jule::Str("u32", 3))) || (_164512_kind == jule::Str("u64", 3))) || (_164512_kind == jule::Str("f32", 3))) || (_164512_kind == jule::Str("f64", 3))) || (_164512_kind == jule::Str("int", 3))) || (_164512_kind == jule::Str("uint", 4))) || (_164512_kind == jule::Str("uintptr", 7))) || (_164512_kind == jule::Str("bool", 4))) || (_164512_kind == jule::Str("str", 3))) || (_164512_kind == jule::Str("any", 3)));
}



inline void _1d63355e4_apply_implicit_cast(jule::Ptr<_1d631bdd3_TypeKind>& _166429_dest, jule::Ptr<_1d62e16b0_Data>& _166451_d) {
	if (_1d631cd07_is_nil(_166451_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1d63218aa_Prim> _16699_dest_prim = _1d631dee5_prim(_166429_dest.ptr());;
	jule::Ptr<_1d63218aa_Prim> _16709_prim = _1d631dee5_prim(_166451_d.get()._field_kind.ptr());;
	if ((_16699_dest_prim != nullptr)) {
		if (_1d6324d53_is_any(_16699_dest_prim.ptr())) {
			_1d63184ea_apply_cast_kind(_166451_d,_166429_dest);
			return;;
		};
		if (((((((!(_1d631ca93_cpp_linked(_166451_d.get()._field_kind.ptr()))) && (!(_166451_d.get()._field_kind.get()._field_variadic))) && (!(_166451_d.get()._field_lvalue))) && (!(_1d62e2073_is_const(_166451_d.ptr())))) && (_16709_prim != nullptr)) && _1d62552a0_is_num(_16709_prim.get()._field_kind))) {
			_1d63184ea_apply_cast_kind(_166451_d,_166429_dest);
		};
		return;;
	};
	if (((_1d63206ab_trt(_166429_dest.ptr()) != nullptr) && (_1d63206ab_trt(_166451_d.get()._field_kind.ptr()) == nullptr))) {
		_1d6318242_apply_cast_kind_model(_166451_d,_166429_dest);
		return;;
	};
	if (((_1d631e996_tenm(_166429_dest.ptr()) != nullptr) && (_1d631e996_tenm(_166451_d.get()._field_kind.ptr()) == nullptr))) {
		_1d6318242_apply_cast_kind_model(_166451_d,_166429_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1d62db952_SymbolTable>,jule::Slice<_21868a483_Log>> _1d63384d7_build_symbols(jule::Ptr<_1d5574b0e_Ast>& _1523_ast, jule::Trait<_1d6271ac4_Importer>& _1539_importer, jule::Ptr<_1d56865c2_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1d56865c2_SymbolBuilder> _1613_sb = jule::new_ptr<_1d56865c2_SymbolBuilder>(_1d56865c2_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_1d568b61b_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1d6277327_Package>,jule::Slice<_21868a483_Log>> _1d6338916___analyze_package(jule::Slice<jule::Ptr<_1d5574b0e_Ast>>& _2927_files, jule::Trait<_1d6271ac4_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1d62db952_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1d62db952_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1d91210be:;
		if (it != expr.end()) {
			jule::Ptr<_1d5574b0e_Ast> _3217_f = *it;
			{
				jule::Ptr<_1d62db952_SymbolTable> _3318_table;;
				jule::Slice<_21868a483_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1d63384d7_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1d91210be:;
			++it;
			goto _iter_begin_1d91210be;
		}
		_iter_end_1d91210be:;
	};
	jule::Ptr<_1d627c519_Sema> _4013_sema = jule::new_ptr<_1d627c519_Sema>(_1d627c519_Sema{._field_flags=_2968_flags});;
	_1d6295ec2_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1d6277327_Package> _4813_pkg = jule::new_ptr<_1d6277327_Package>(_1d6277327_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1d6277327_Package>,jule::Slice<_21868a483_Log>> _1d6338d01_analyze_package(jule::Slice<jule::Ptr<_1d5574b0e_Ast>> _7228_files, jule::Trait<_1d6271ac4_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1d6277327_Package> _7714_package;;
	jule::Slice<_21868a483_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1d6338916___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1d567d498_FnIns> _1d6345a11_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1d9128c31:;
			{
				static jule::Ptr<_1d567d498_FnIns> _2420_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d639914c_builtin_caller_out), });;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1d9128c97:;
			{
				static jule::Ptr<_1d567d498_FnIns> _2720_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63414ce_builtin_caller_outln), });;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1d9128ea6:;
			{
				static jule::Ptr<_1d567d498_FnIns> _3020_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63aeabe_builtin_caller_new), });;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1d912901c:;
			{
				static jule::Ptr<_1d567d498_FnIns> _3320_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d6362b2c_builtin_caller_panic), });;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1d9129083:;
			{
				static jule::Ptr<_1d567d498_FnIns> _3620_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d6362c5e_builtin_caller_make), });;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1d91290e9:;
			{
				static jule::Ptr<_1d567d498_FnIns> _3920_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d634d783_builtin_caller_append), });;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1d9129160:;
			{
				static jule::Ptr<_1d567d498_FnIns> _4220_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d637e82a_builtin_caller_copy), });;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1d91291c6:;
			{
				static jule::Ptr<_1d567d498_FnIns> _4520_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63ca315_builtin_caller_clone), });;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1d9129292:;
			{
				static jule::Ptr<_1d567d498_FnIns> _4820_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63ca447_builtin_caller_assert), });;
				return _4820_f;
			}
		}
		else {
			_case_begin_1d9128a22:;
			{
				return nullptr;
			}
		}
		_match_end_1d912847d:;
	};
}



inline jule::Ptr<_1d631b1e0_TypeAlias> _1d634b3eb_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1d912ea06:;
			{
				static jule::Ptr<_1d631b1e0_TypeAlias> _5820_t = jule::new_ptr<_1d631b1e0_TypeAlias>(_1d631b1e0_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("u8", 2)), 6)})}), });;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1d912ea6c:;
			{
				static jule::Ptr<_1d631b1e0_TypeAlias> _6820_t = jule::new_ptr<_1d631b1e0_TypeAlias>(_1d631b1e0_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1d632103b_TypeSymbol>(_1d632103b_TypeSymbol{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("i32", 3)), 6)})}), });;
				return _6820_t;
			}
		}
		else {
			_case_begin_1d912e198:;
			{
				return nullptr;
			}
		}
		_match_end_1d9129638:;
	};
}



inline jule::Ptr<_1d59c3e1a_Trait> _1d63758a9_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1d6343c73_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1d567d498_FnIns> _8713_f = _1d6345a11_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1d631b1e0_TypeAlias> _9213_ta = _1d634b3eb_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1d59c3e1a_Trait> _9713_t = _1d63758a9_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1d6363358_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1d9134203:;
			{
				static jule::Ptr<_1d567d498_FnIns> _10820_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63cbaec_builtin_caller_std_debug_out), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1d9134269:;
			{
				static jule::Ptr<_1d567d498_FnIns> _11120_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63cbed7_builtin_caller_std_debug_outln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1d9133796:;
			{
				return nullptr;
			}
		}
		_match_end_1d9133ba3:;
	};
}



inline jule::Any _1d6399955_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1d9134544:;
			{
				static jule::Ptr<_1d567d498_FnIns> _12120_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63ca634_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1d91345aa:;
			{
				static jule::Ptr<_1d567d498_FnIns> _12420_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63ca942_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1d9134621:;
			{
				static jule::Ptr<_1d567d498_FnIns> _12720_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63cad60_builtin_caller_std_mem_free), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1d91350e4:;
			{
				return nullptr;
			}
		}
		_match_end_1d9135b61:;
	};
}



inline jule::Any _1d63a43aa_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1d913603a:;
			{
				static jule::Ptr<_1d567d498_FnIns> _13720_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63cb28e_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1d91360a1:;
			{
				static jule::Ptr<_1d567d498_FnIns> _14020_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d63cb6ac_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1d9138229:;
			{
				return nullptr;
			}
		}
		_match_end_1d91380d6:;
	};
}



inline jule::Any _1d639a604_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1d9139d74:;
			{
				return jule::Any(_1d6363358_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1d9139dda:;
			{
				return jule::Any(_1d6399955_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1d9139e51:;
			{
				return jule::Any(_1d63a43aa_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1d9138427:;
			{
				return nullptr;
			}
		}
		_match_end_1d913902c:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d6389e62_builtin_caller_common_plain(jule::Ptr<_1d62e322d_Eval>& _16037_e, jule::Ptr<_1d55b3048_FnCallExpr>& _16052_fc, jule::Ptr<_1d62e16b0_Data>& _16074_d) {
	jule::Ptr<_1d567d498_FnIns> _16113_f = _1d63201d3_fnc(_16074_d.get()._field_kind.ptr());;
	_1d62d342c_FnCallArgChecker _16313_fcac = _1d62d342c_FnCallArgChecker{._field_e=_16037_e, ._field_args=_16052_fc.get()._field_args, ._field_error_token=_16052_fc.get()._field_token, ._field_f=_16113_f, ._field_dynamic_annotation=false, };;
	if ((!(_1d62d57e7_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1d567400a_FnCallExprModel> _17413_model = jule::new_ptr<_1d567400a_FnCallExprModel>(_1d567400a_FnCallExprModel{._field_token=_16052_fc.get()._field_token, ._field_func=_16113_f, ._field_expr=_16074_d.get()._field_model, ._field_args=_16313_fcac._field_arg_models, });;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1d63186e8_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=_16113_f.get()._field_result, });
	};
	_16074_d.get()._field_model=static_cast<jule::Any>(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63b9d2c_builtin_caller_common(jule::Ptr<_1d62e322d_Eval>& _19331_e, jule::Ptr<_1d55b3048_FnCallExpr>& _19346_fc, jule::Ptr<_1d62e16b0_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1d6389e62_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1d62e16b0_Data> _1d63a2760_builtin_caller_common_mut(jule::Ptr<_1d62e322d_Eval>& _20135_e, jule::Ptr<_1d55b3048_FnCallExpr>& _20150_fc, jule::Ptr<_1d62e16b0_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1d62e3739_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1d63b9d2c_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1d62e16b0_Data> _1d639a923_builtin_caller_error(jule::Ptr<_1d62e322d_Eval>& _20830_e, jule::Ptr<_1d55b3048_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _21913_expr = _1d630d59a_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1d62e1a9a_is_nil(_21913_expr.ptr())) {
		_1d62e3739_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _22813_d = _1d63186e8_build_void_data();;
	_22813_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5677162_BuiltinErrorCallExprModel>(_1d5677162_BuiltinErrorCallExprModel{._field_err=_21913_expr.get()._field_model}));
	return _22813_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d639914c_builtin_caller_out(jule::Ptr<_1d62e322d_Eval>& _23628_e, jule::Ptr<_1d55b3048_FnCallExpr>& _23643_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _24813_expr = _1d630d59a_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1d633468c_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1d62e3739_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _25813_d = _1d63186e8_build_void_data();;
	_25813_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675e1e_BuiltinOutCallExprModel>(_1d5675e1e_BuiltinOutCallExprModel{._field_expr=_24813_expr.get()._field_model, }));
	return _25813_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63414ce_builtin_caller_outln(jule::Ptr<_1d62e322d_Eval>& _26330_e, jule::Ptr<_1d55b3048_FnCallExpr>& _26345_fc, jule::Ptr<_1d62e16b0_Data>& _26367_d) {
	_26367_d=_1d639914c_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d567610b_BuiltinOutlnCallExprModel>(_1d567610b_BuiltinOutlnCallExprModel{._field_expr=_26367_d.get()._field_model.operator jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>().get()._field_expr, }));
	return _26367_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63aeabe_builtin_caller_new(jule::Ptr<_1d62e322d_Eval>& _27528_e, jule::Ptr<_1d55b3048_FnCallExpr>& _27543_fc, jule::Ptr<_1d62e16b0_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1d62e3739_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _28713_t = _1d630ce7e_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1d62e3739_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1d633412b_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1d55c62d1_StructIns> _29817_s = _1d6320447_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1d62e3739_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d632513e_Sptr>(_1d632513e_Sptr{._field_elem=_28713_t.get()._field_kind}), 7)});
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1d631bdd3_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1d62e16b0_Data> _31517_init = _1d630d59a_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_1ee538d51_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1d6288877_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1d6285cd6_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56764d5_BuiltinNewCallExprModel>(_1d56764d5_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, ._field_init=_31517_init.get()._field_model}));
		};
	} else {
		_27565_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56764d5_BuiltinNewCallExprModel>(_1d56764d5_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, }));
	};
	return _27565_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6362b2c_builtin_caller_panic(jule::Ptr<_1d62e322d_Eval>& _34030_e, jule::Ptr<_1d55b3048_FnCallExpr>& _34045_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _35213_expr = _1d630d59a_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1d631dee5_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1d6324ade_is_str(_1d631dee5_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1d62e3739_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _36113_d = _1d63186e8_build_void_data();;
	_36113_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56766c2_BuiltinPanicCallExprModel>(_1d56766c2_BuiltinPanicCallExprModel{._field_token=_34045_fc.get()._field_token, ._field_expr=_35213_expr.get()._field_model}));
	return _36113_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d6362c5e_builtin_caller_make(jule::Ptr<_1d62e322d_Eval>& _36929_e, jule::Ptr<_1d55b3048_FnCallExpr>& _36944_fc, jule::Ptr<_1d62e16b0_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1d62e3739_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1d62e3739_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _38213_t = _1d630ce7e_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_38213_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_38213_t.get()._field_decl))) {
			_case_begin_1d9163c7c:;
			{
				goto _match_end_1d9164211;
			}
		}
		else if ((_1d631ee6e_slc(_38213_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d9163ce3:;
			{
				if ((_36944_fc.get()._field_args.len() > 3LL)) {
					_1d62e3739_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1d631dee5_prim(_38213_t.get()._field_kind.ptr()) != nullptr) && _1d6324ade_is_str(_1d631dee5_prim(_38213_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1d9163d59:;
			{
				if ((_36944_fc.get()._field_args.len() > 2LL)) {
					_1d62e3739_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1d9164211:;
	};
	_1d62e3739_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_36966_d.get()._field_kind=_38213_t.get()._field_kind;
	jule::Ptr<_1d62e16b0_Data> _40613_len = _1d630d59a_eval_expr(_1d62854cd_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_40613_len == nullptr)) {
		return nullptr;
	};
	_1d62ebd5d_check_integer_indexing_by_data(_36929_e.ptr(), _40613_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_1d5676a9b_BuiltinMakeCallExprModel> _41313_model = jule::new_ptr<_1d5676a9b_BuiltinMakeCallExprModel>(_1d5676a9b_BuiltinMakeCallExprModel{._field_kind=_38213_t.get()._field_kind, ._field_len=_40613_len.get()._field_model, });;
	_36966_d.get()._field_model=static_cast<jule::Any>(_41313_model);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1d62e16b0_Data> _41917_cap = _1d630d59a_eval_expr(_1d62854cd_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_41917_cap == nullptr)) {
			return _36966_d;
		};
		_1d62ebd5d_check_integer_indexing_by_data(_36929_e.ptr(), _41917_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_41313_model.get()._field_cap=_41917_cap.get()._field_model;
	};
	return _36966_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d634d783_builtin_caller_append(jule::Ptr<_1d62e322d_Eval>& _42931_e, jule::Ptr<_1d55b3048_FnCallExpr>& _42946_fc, jule::Ptr<_1d62e16b0_Data>& _42968_d) {
	if ((_42946_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42946_fc.get()._field_args.len() < 2LL)) {
		if ((_42946_fc.get()._field_args.len() == 1LL)) {
			_1d62e3739_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1d62e3739_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _44213_t = _1d630d59a_eval_expr(_42931_e, _42946_fc.get()._field_args[0LL]);;
	if ((_44213_t == nullptr)) {
		return nullptr;
	};
	if ((_1d631ee6e_slc(_44213_t.get()._field_kind.ptr()) == nullptr)) {
		_1d62e3739_push_err(_42931_e.ptr(), _42946_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d567d498_FnIns> _45213_f = jule::new_ptr<_1d567d498_FnIns>(_1d567d498_FnIns{._field_params=jule::Slice<jule::Ptr<_1d567c5c9_ParamIns>>::make({jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_mutable=true, }), ._field_kind=_44213_t.get()._field_kind}),jule::new_ptr<_1d567c5c9_ParamIns>(_1d567c5c9_ParamIns{._field_decl=jule::new_ptr<_1d5678eaa_Param>(_1d5678eaa_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_1d631ee6e_slc(_44213_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_44213_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1d62e16b0_Data>(jule::Ptr<_1d62e322d_Eval>&,jule::Ptr<_1d55b3048_FnCallExpr>&,jule::Ptr<_1d62e16b0_Data>&)>(_1d6389e62_builtin_caller_common_plain), });;
	_42968_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_45213_f, 1)});
	_42968_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675858_CommonIdentExprModel>(_1d5675858_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_42968_d=_1d6389e62_builtin_caller_common_plain(_42931_e,_42946_fc,_42968_d);
	if ((_42968_d != nullptr)) {
		jule::Ptr<_1d567400a_FnCallExprModel> _48017_model = _42968_d.get()._field_model.operator jule::Ptr<_1d567400a_FnCallExprModel>();;
		_42968_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5676c88_BuiltinAppendCallExprModel>(_1d5676c88_BuiltinAppendCallExprModel{._field_dest=_48017_model.get()._field_args[0LL], ._field_elements=_48017_model.get()._field_args[1LL]}));
	};
	return _42968_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d634d8b5_caller_copy_slice(jule::Ptr<_1d62e16b0_Data>& _48927_dest, jule::Ptr<_1d62e322d_Eval>& _48945_e, jule::Ptr<_1d55b3048_FnCallExpr>& _48960_fc, jule::Ptr<_1d62e16b0_Data>& _48982_d) {
	if ((!(_48927_dest.get()._field_mutable))) {
		_1d62e3739_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _49413_src = _1d630d59a_eval_expr(_48945_e, _48960_fc.get()._field_args[1LL]);;
	if ((_49413_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d6325a9b_Slc> _49813_slc = _1d631ee6e_slc(_49413_src.get()._field_kind.ptr());;
	if ((_49813_slc != nullptr)) {
		if (((!(_49413_src.get()._field_mutable)) && _1d631d2d0_mutable(_49813_slc.get()._field_elem.ptr()))) {
			_1d62e3739_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1d631c5dc_equals(_48927_dest.get()._field_kind, _49413_src.get()._field_kind)))) {
			_1d62e3739_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1d63218aa_Prim> _50813_dest_prim = _1d631dee5_prim(_1d631ee6e_slc(_48927_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1d63218aa_Prim> _50913_prim = _1d631dee5_prim(_49413_src.get()._field_kind.ptr());;
		if (((((_50813_dest_prim == nullptr) || (_50913_prim == nullptr)) || (!(_1d6324ade_is_str(_50913_prim.ptr())))) || (!(_1d63231b4_is_u8(_50813_dest_prim.ptr()))))) {
			_1d62e3739_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	};
	_48982_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)});
	_48982_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5676e75_BuiltinCopyCallExprModel>(_1d5676e75_BuiltinCopyCallExprModel{._field_dest=_48927_dest, ._field_src=_49413_src}));
	return _48982_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d637e6e8_caller_copy_str(jule::Ptr<_1d62e16b0_Data>& _52325_dest, jule::Ptr<_1d62e322d_Eval>& _52343_e, jule::Ptr<_1d55b3048_FnCallExpr>& _52358_fc, jule::Ptr<_1d62e16b0_Data>& _52380_d) {
	if ((!(_52325_dest.get()._field_mutable))) {
		_1d62e3739_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _52813_src = _1d630d59a_eval_expr(_52343_e, _52358_fc.get()._field_args[1LL]);;
	if ((_52813_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1d631dee5_prim(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d91829c1:;
			{
				if (_1d6324ade_is_str(_1d631dee5_prim(_52813_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1d631ee6e_slc(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d9182a37:;
			{
				jule::Ptr<_1d6325a9b_Slc> _53817_slc = _1d631ee6e_slc(_52813_src.get()._field_kind.ptr());;
				if (((_1d631dee5_prim(_53817_slc.get()._field_elem.ptr()) != nullptr) && _1d63231b4_is_u8(_1d631dee5_prim(_53817_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1d9182e55:;
	};
	_1d62e3739_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_52325_dest.get()._field_kind.ptr())),jule::Any(_1d631c2ce_to_str(_52813_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_52380_d.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("int", 3)), 6)});
	_52380_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5676e75_BuiltinCopyCallExprModel>(_1d5676e75_BuiltinCopyCallExprModel{._field_dest=_52325_dest, ._field_src=_52813_src}));
	return _52380_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d637e82a_builtin_caller_copy(jule::Ptr<_1d62e322d_Eval>& _55329_e, jule::Ptr<_1d55b3048_FnCallExpr>& _55344_fc, jule::Ptr<_1d62e16b0_Data>& _55366_d) {
	if ((_55344_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_55344_fc.get()._field_args.len() < 2LL)) {
		if ((_55344_fc.get()._field_args.len() == 1LL)) {
			_1d62e3739_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1d62e3739_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_55344_fc.get()._field_args.len() > 2LL)) {
		_1d62e3739_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _56913_dest = _1d630d59a_eval_expr(_55329_e, _55344_fc.get()._field_args[0LL]);;
	{
		
		if ((_56913_dest == nullptr)) {
			_case_begin_1d918cc40:;
			{
				return nullptr;
			}
		}
		else if ((_1d631ee6e_slc(_56913_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1d918cca6:;
			{
				return _1d634d8b5_caller_copy_slice(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else if (((_1d631dee5_prim(_56913_dest.get()._field_kind.ptr()) != nullptr) && _1d6324ade_is_str(_1d631dee5_prim(_56913_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1d918cd1c:;
			{
				return _1d637e6e8_caller_copy_str(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else {
			_case_begin_1d918cbc9:;
			{
				_1d62e3739_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1d918cb63:;
	};
}



inline jule::Ptr<_1d62e16b0_Data> _1d63ca315_builtin_caller_clone(jule::Ptr<_1d62e322d_Eval>& _58330_e, jule::Ptr<_1d55b3048_FnCallExpr>& _58345_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_58345_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_58345_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_58345_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _59613_d = _1d630ce7e_eval_expr_kind(_58330_e, _58345_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_59613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1d631da1c_supports_cloning(_59613_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1d631ee6e_slc(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1d6320920_map(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1d631ec0a_arr(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1d631e259_sptr(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1d91944e9:;
				{
					{
						_1d62e3739_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_59613_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1d6320447_strct(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1d9194560:;
				{
					{
						_1d62e3739_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1d9194483:;
				{
					{
						_1d62e3739_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1d631c2ce_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1d9193d01:;
		};
	};
	_59613_d.get()._field_mutable=true;
	_59613_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56762e8_BuiltinCloneCallExprModel>(_1d56762e8_BuiltinCloneCallExprModel{._field_expr=_59613_d.get()._field_model}));
	return _59613_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63ca447_builtin_caller_assert(jule::Ptr<_1d62e322d_Eval>& _62931_e, jule::Ptr<_1d55b3048_FnCallExpr>& _62946_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_62946_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_62946_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_62946_fc.get()._field_args.len() > 2LL)) {
		_1d62e3739_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _64113_expr = _1d630d59a_eval_expr(_62931_e, _62946_fc.get()._field_args[0LL]);;
	if ((_64113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1d631dee5_prim(_64113_expr.get()._field_kind.ptr()) == nullptr) || (!(_1d632487a_is_bool(_1d631dee5_prim(_64113_expr.get()._field_kind.ptr()).ptr()))))) {
		_1d62e3739_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d56768ae_BuiltinAssertCallExprModel> _65013_model = jule::new_ptr<_1d56768ae_BuiltinAssertCallExprModel>(_1d56768ae_BuiltinAssertCallExprModel{._field_token=_62946_fc.get()._field_token, ._field_expr=_64113_expr.get()._field_model, ._field_log=jule::Str("assertion failed", 16)});;
	if ((_62946_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1d62e16b0_Data> _65817_log = _1d630d59a_eval_expr(_62931_e, _62946_fc.get()._field_args[1LL]);;
		if ((_65817_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1d62e2073_is_const(_65817_log.ptr()))) || (_1d631dee5_prim(_65817_log.get()._field_kind.ptr()) == nullptr)) || (!(_1d6324ade_is_str(_1d631dee5_prim(_65817_log.get()._field_kind.ptr()).ptr()))))) {
			_1d62e3739_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1d631c2ce_to_str(_65817_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_65013_model.get()._field_log=_1d566b72d_read_str(_65817_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1d62e16b0_Data> _67113_d = _1d63186e8_build_void_data();;
	_67113_d.get()._field_model=static_cast<jule::Any>(_65013_model);
	return _67113_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63ca634_builtin_caller_std_mem_size_of(jule::Ptr<_1d62e322d_Eval>& _67640_e, jule::Ptr<_1d55b3048_FnCallExpr>& _67655_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_67655_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _68013_result = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_67655_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _68013_result;
	};
	if ((_67655_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_67640_e.ptr(), _67655_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _69213_d = _1d630ce7e_eval_expr_kind(_67640_e, _67655_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_69213_d == nullptr)) {
		return _68013_result;
	};
	_68013_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5675061_SizeofExprModel>(_1d5675061_SizeofExprModel{._field_expr=_69213_d.get()._field_model}));
	return _68013_result;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63ca942_builtin_caller_std_mem_align_of(jule::Ptr<_1d62e322d_Eval>& _70141_e, jule::Ptr<_1d55b3048_FnCallExpr>& _70156_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_70156_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _70513_result = jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_70156_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _70513_result;
	};
	if ((_70156_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_70141_e.ptr(), _70156_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _71713_d = _1d630ce7e_eval_expr_kind(_70141_e, _70156_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_71713_d == nullptr)) {
		return _70513_result;
	};
	_70513_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d56777c2_AlignofExprModel>(_1d56777c2_AlignofExprModel{._field_expr=_71713_d.get()._field_model}));
	return _70513_result;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63cad60_builtin_caller_std_mem_free(jule::Ptr<_1d62e322d_Eval>& _72637_e, jule::Ptr<_1d55b3048_FnCallExpr>& _72652_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_72652_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_72652_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_72652_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _73913_d = _1d630ce7e_eval_expr_kind(_72637_e, _72652_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_73913_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1d631d7a8_performs_rc(_73913_d.get()._field_kind.ptr())))) {
		_1d62e3739_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _74813_result = _1d63186e8_build_void_data();;
	_74813_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5678075_FreeExprModel>(_1d5678075_FreeExprModel{._field_expr=_73913_d.get()._field_model}));
	return _74813_result;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63cb28e_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1d62e322d_Eval>& _75351_e, jule::Ptr<_1d55b3048_FnCallExpr>& _75366_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((_75366_fc.get()._field_generics.len() > 0LL)) {
		_1d62e3739_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_75366_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_75366_fc.get()._field_args.len() > 1LL)) {
		_1d62e3739_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d62e16b0_Data> _76613_d = _1d630ce7e_eval_expr_kind(_75351_e, _75366_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_76613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1d633468c_is_builtin_str_convertable(_76613_d.get()._field_kind)))) {
		_1d62e3739_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d62e16b0_Data>(_1d62e16b0_Data{._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(_1d6334cec_build_prim_type(jule::Str("str", 3)), 6)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1d5677b9b_IntegratedToStrExprModel>(_1d5677b9b_IntegratedToStrExprModel{._field_expr=_76613_d.get()._field_model})), });
}



inline jule::Ptr<_1d62e16b0_Data> _1d63cb6ac_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1d62e322d_Eval>& _78449_e, jule::Ptr<_1d55b3048_FnCallExpr>& _78464_fc, jule::Ptr<_1d62e16b0_Data>& ) {
	if ((!(_1d62e4174_is_unsafe(_78449_e.ptr())))) {
		_1d62e3739_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_78464_fc.get()._field_args.len() < 1LL)) {
		_1d62e3739_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _79413_d = _1d630d59a_eval_expr(_78449_e, _78464_fc.get()._field_args[0LL]);;
	if ((_79413_d == nullptr)) {
		return nullptr;
	};
	if (((_1d631dee5_prim(_79413_d.get()._field_kind.ptr()) == nullptr) || (!(_1d6324ade_is_str(_1d631dee5_prim(_79413_d.get()._field_kind.ptr()).ptr()))))) {
		_1d62e3739_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1d631c2ce_to_str(_79413_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1d62e2073_is_const(_79413_d.ptr()))) || (!(_1d566dac6_is_str(_79413_d.get()._field_constant.ptr()))))) {
		_1d62e3739_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d62e16b0_Data> _80913_r = _1d63186e8_build_void_data();;
	if ((_78464_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1d6281573_check_generic_quantity(_78449_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_78464_fc.get()._field_generics.len()),_78464_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1d632103b_TypeSymbol> _81517_k = _1d568247a_build_type(_78464_fc.get()._field_generics[0LL]);;
		if ((!(_1d6284125_check_type(_78449_e.get()._field_s, _81517_k,_78449_e.get()._field_lookup)))) {
			return nullptr;
		};
		_80913_r.get()._field_kind=_81517_k.get()._field_kind;
	};
	jule::Ptr<_1d5677d88_BackendEmitExprModel> _82213_model = jule::new_ptr<_1d5677d88_BackendEmitExprModel>(_1d5677d88_BackendEmitExprModel{._field_code=_1d566b72d_read_str(_79413_d.get()._field_constant.ptr()), });;
	if ((_78464_fc.get()._field_args.len() > 1LL)) {
		_82213_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_78464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _78464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1d91c2b21:;
			if (it != expr.end()) {
				jule::Ptr<_1d55adbae_Expr> _82821_arg = *it;
				{
					jule::Ptr<_1d62e16b0_Data> _82921_argd = _1d630ce7e_eval_expr_kind(_78449_e, _82821_arg.get()._field_kind);;
					if ((_82921_argd == nullptr)) {
						return nullptr;
					};
					_82213_model.get()._field_exprs = jule::alloc_for_append(_82213_model.get()._field_exprs,1);_82213_model.get()._field_exprs.__push(_82921_argd.get()._field_model);;
				}
				_iter_next_1d91c2b21:;
				++it;
				goto _iter_begin_1d91c2b21;
			}
			_iter_end_1d91c2b21:;
		};
	};
	_80913_r.get()._field_model=static_cast<jule::Any>(_82213_model);
	return _80913_r;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63cbaec_builtin_caller_std_debug_out(jule::Ptr<_1d62e322d_Eval>& _84138_e, jule::Ptr<_1d55b3048_FnCallExpr>& _84153_fc, jule::Ptr<_1d62e16b0_Data>& _84175_d) {
	_84175_d=_1d639914c_builtin_caller_out(_84138_e,_84153_fc,_84175_d);
	if ((_84175_d == nullptr)) {
		return nullptr;
	};
	_84175_d.get()._field_model.operator jule::Ptr<_1d5675e1e_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _84175_d;
}



inline jule::Ptr<_1d62e16b0_Data> _1d63cbed7_builtin_caller_std_debug_outln(jule::Ptr<_1d62e322d_Eval>& _85140_e, jule::Ptr<_1d55b3048_FnCallExpr>& _85155_fc, jule::Ptr<_1d62e16b0_Data>& _85177_d) {
	_85177_d=_1d63414ce_builtin_caller_outln(_85140_e,_85155_fc,_85177_d);
	if ((_85177_d == nullptr)) {
		return nullptr;
	};
	_85177_d.get()._field_model.operator jule::Ptr<_1d567610b_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _85177_d;
}



inline jule::Bool _1d648a8d1_find_module_file(jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1d91c88c4:;
		if (it != expr.end()) {
			jule::Ptr<_2316d6a05_DirEntry> &_1312_d = *it;
			{
				if (((!(_2316d8078_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1d91c88c4:;
			++it;
			goto _iter_begin_1d91c88c4;
		}
		_iter_end_1d91c88c4:;
	};
	return false;
}



inline jule::Str _1d648aa13_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2316d6a05_DirEntry>> _2617_dirents = ({
				auto except = static__2318742be_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1d91c9793;
				} jule::Slice<jule::Ptr<_2316d6a05_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1d648a8d1_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_21863367e_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1d91c9793;
			};
		}
	_iter_next_1d91c9793:;
	}
	_iter_end_1d91c9793:;;
	return jule::Str();
}



inline jule::Slice<_21868a483_Log> _1d648ac99_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__2316d76d7_read(_218632a24_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_21868a483_Log>::make({_21868a483_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _218630758_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_21868a483_Log>::make({_21868a483_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1d6ac11e2_FileInfo> _1d6ac8ea8_parse_file(jule::Ptr<_1ee53e1db_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d6ac11e2_FileInfo> _2813_finf = jule::new_ptr<_1d6ac11e2_FileInfo>(_1d6ac11e2_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1d6b20d68_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1d5574b0e_Ast>,jule::Slice<_21868a483_Log>> _1d6b20d68_parse_fileset(jule::Ptr<_1ee53e1db_File> _6022_f) {
	jule::Ptr<_1d6b3e55c_Parser> _6113_p = jule::new_ptr<_1d6b3e55c_Parser>(_1d6b3e55c_Parser{});;
	_1d6b4e44b_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1d55b9a77_ScopeTree> _1d6b21770_new_scope(void) {
	return jule::new_ptr<_1d55b9a77_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1d6b21a7d_is_st(jule::Ptr<_1ee538d51_Token> _5010_current, jule::Ptr<_1ee538d51_Token> _5027_prev) {
	jule::Bool _5043_ok = jule::Bool();
	jule::Bool _5053_terminated = jule::Bool();
	_5043_ok=((_5010_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_5027_prev.get()._field_row < _5010_current.get()._field_row));
	_5053_terminated=(_5010_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5043_ok,_5053_terminated);
}



inline jule::Bool _1d6b21de1_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _5629_tokens, jule::I64& _5648_i) {
	if (((_5648_i > 1LL) && (_5629_tokens[(_5648_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1ee538d51_Token> _6213_prev = _5629_tokens[(_5648_i - 1LL)];;
		return ((_6213_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _1ee539846_is_bin_op(_6213_prev.get()._field_kind)) && (_6213_prev.get()._field_row < _5629_tokens[_5648_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1d6b22287_next_st_pos(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _7117_tokens, jule::I64 _7135_start) {
	jule::I64 _7213_brace_n = 0LL;;
	jule::I64 _7313_i = _7135_start;;
	for (; (_7313_i < _7117_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1ee538d51_Token> _7713_tok = _7117_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1d92603d9:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1d92620ab:;
								{
									if (((_7213_brace_n == 0LL) && (_7313_i > _7135_start))) {
										if ((!(_1d6b21de1_prev_is_incomplete_expr(_7117_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1d6b21a7d_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_brace_n)++;
								}
							}
							else {
								_case_begin_1d9260c14:;
								{
									(_7213_brace_n)--;
									if (((_7213_brace_n == 0LL) && ((_7313_i + 1LL) < _7117_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1d6b21a7d_is_st(_7117_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1d9260a49:;
						};
						goto _iter_next_1d925da25;
					}
				}
				_match_end_1d9260384:;
			};
			if ((_7213_brace_n != 0LL)) {
				goto _iter_next_1d925da25;
			};
			if ((_7313_i > _7135_start)) {
				if (_1d6b21de1_prev_is_incomplete_expr(_7117_tokens,_7313_i)) {
					goto _iter_next_1d925da25;
				};
				std::tie(_7517_ok,_7617_terminated) = _1d6b21a7d_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1d6b21a7d_is_st(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1d925da25;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1d925da25:;
	}
	_iter_end_1d925da25:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::Bool> _1d6b225c8_skip_st(jule::I64& _13317_i, jule::Slice<jule::Ptr<_1ee538d51_Token>> _13329_tokens) {
	jule::I64 _1349_start = _13317_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13317_i,_13513_terminated) = _1d6b22287_next_st_pos(_13329_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _13713_st_tokens = _13329_tokens.slice(_1349_start,_13317_i);;
	if (_13513_terminated) {
		if ((_13713_st_tokens.len() == 1LL)) {
			std::tie(_13713_st_tokens,_13513_terminated) = _1d6b225c8_skip_st(_13317_i,_13329_tokens);
			return std::make_tuple(_13713_st_tokens,_13513_terminated);
		};
		_13713_st_tokens=_13713_st_tokens.slice(0LL,(_13713_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13713_st_tokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _1d6b22c6b_split_stmts(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _15521_tokens) {
	jule::Slice<jule::Ptr<_1d6b228c5_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1d6b228c5_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15521_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1ee538d51_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1d6b225c8_skip_st(_15713_pos,_15521_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1d6b228c5_stmt>(_1d6b228c5_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1d92688cb:;
	}
	_iter_end_1d92688cb:;;
	return _15613_stmts;
}



inline jule::Ptr<_1d6b2e7c2_CallData> _1d6b2eb35_get_call_data(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _4523_tokens) {
	jule::Ptr<_1d6b2e7c2_CallData> _4613_data = jule::new_ptr<_1d6b2e7c2_CallData>();;
	std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_args_tokens) = _1d6b3c9ab_range_last(_4523_tokens);
	if ((_4613_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4613_data;
	};
	jule::Ptr<_1ee538d51_Token> _539_token = _4613_data.get()._field_expr_tokens[(_4613_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_539_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_539_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_generics_tokens) = _1d6b3c9ab_range_last(_4613_data.get()._field_expr_tokens);
	};
	return _4613_data;
}



inline jule::Slice<jule::Ptr<_1ee538d51_Token>> _1d6b2ee21_get_block_expr(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _6124_tokens) {
	jule::I64 _6213_brace_n = 0LL;;
	jule::I64 _6313_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_1d932ee37:;
		if (it != expr.end()) {
			jule::I64 _649_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _6412_tok = *it;
			{
				{
					auto &_match_expr{ _6412_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1d9330cc3:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1d9330d4a:;
						{
							{
								auto &_match_expr{ _6412_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1d9331aa4:;
									{
										if (((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL))) {
											if ((_6313_skip_to_next_brace_close > 0LL)) {
												(_6313_skip_to_next_brace_close)--;
											};
											(_6213_brace_n)++;
											goto _match_end_1d9331bd6;
										};
										return _6124_tokens.slice(0LL,_649_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1d9332258:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_1d9331ce6:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_1d9331bd6:;
							};
						}
					}
					_match_end_1d9330ae7:;
				};
			}
			_iter_next_1d932ee37:;
			++it;
			_649_i++;
			goto _iter_begin_1d932ee37;
		}
		_iter_end_1d932ee37:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b301b8_split_colon(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _9221_tokens) {
	jule::I64 _9313_range_n = 0LL;;
	{
		auto &expr = _9221_tokens;
		auto it = expr.begin();
		_iter_begin_1d93323ac:;
		if (it != expr.end()) {
			jule::I64 _949_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _9412_token = *it;
			{
				{
					auto &_match_expr{ _9412_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1d933437b:;
						{
							{
								auto &_match_expr{ _9412_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1d93349ca:;
									{
										(_9313_range_n)++;
										goto _iter_next_1d93323ac;
									}
								}
								else {
									_case_begin_1d9334c61:;
									{
										(_9313_range_n)--;
									}
								}
								_match_end_1d9334a96:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1d9334403:;
						{
							if ((_9313_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_1ee538d51_Token>> _10825_l = _9221_tokens.slice(0LL,_949_i);;
								jule::Slice<jule::Ptr<_1ee538d51_Token>> _10925_r = _9221_tokens.slice((_949_i + 1LL));;
								return std::make_tuple(_10825_l,_10925_r);
							};
						}
					}
					_match_end_1d933414a:;
				};
			}
			_iter_next_1d93323ac:;
			++it;
			_949_i++;
			goto _iter_begin_1d93323ac;
		}
		_iter_end_1d93323ac:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1d6b304d7_find_lowest_prec_op(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _11925_tokens) {
	jule::U8 _12413_prec = 255LLU;;
	jule::I64 _12513_prec_pos = -1LL;;
	jule::I64 _12713_brace_n = 0LL;;
	jule::Bool _12813_skip_to_next_brace_open = false;;
	{
		auto &expr = _11925_tokens;
		auto it = expr.begin();
		_iter_begin_1d9337ca8:;
		if (it != expr.end()) {
			jule::I64 _1299_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> &_12912_token = *it;
			{
				{
					
					if ((_12912_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1d9338b11:;
						{
							{
								auto &_match_expr{ _12912_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1d9339749:;
									{
										_12813_skip_to_next_brace_open=false;
										goto _case_begin_1d9339e86;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1d9339e86:;
									{
										(_12713_brace_n)++;
									}
								}
								else {
									_case_begin_1d93399d0:;
									{
										(_12713_brace_n)--;
									}
								}
								_match_end_1d9339815:;
							};
							goto _iter_next_1d9337ca8;
						}
					}
					else if (_12813_skip_to_next_brace_open) {
						_case_begin_1d9338b88:;
						{
							goto _iter_next_1d9337ca8;
						}
					}
					else if ((_12912_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1d9338c10:;
						{
							_12813_skip_to_next_brace_open=true;
							goto _iter_next_1d9337ca8;
						}
					}
					else if ((_1299_i == 0LL)) {
						_case_begin_1d9338c87:;
						{
							goto _iter_next_1d9337ca8;
						}
					}
					else if ((_12912_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1d9338d0e:;
						{
							goto _iter_next_1d9337ca8;
						}
					}
					else if ((_12713_brace_n > 0LL)) {
						_case_begin_1d9338d86:;
						{
							goto _iter_next_1d9337ca8;
						}
					}
					_match_end_1d933899b:;
				};
				jule::Ptr<_1ee538d51_Token> _15613_left = _11925_tokens[(_1299_i - 1LL)];;
				if (((_15613_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15613_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1d9337ca8;
				};
				if ((((_1299_i > 1LL) && (_15613_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15613_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_1ee538d51_Token> _16417_lleft = _11925_tokens[(_1299_i - 2LL)];;
					if (((_16417_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16417_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12912_token.get()._field_kind == jule::Str("&", 1)) || (_12912_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1d9337ca8;
						};
					};
				};
				jule::U8 _17313_p = _1ee539208_prec(_12912_token.ptr());;
				if (((_17313_p != 0LLU) && (_17313_p <= _12413_prec))) {
					_12413_prec=_17313_p;
					_12513_prec_pos=_1299_i;
				};
			}
			_iter_next_1d9337ca8:;
			++it;
			_1299_i++;
			goto _iter_begin_1d9337ca8;
		}
		_iter_end_1d9337ca8:;
	};
	return _12513_prec_pos;
}



inline jule::Ptr<_1d55b0c27_IdentExpr> _1d6b3077e_build_ident_expr(jule::Ptr<_1ee538d51_Token>& _18326_token) {
	return jule::new_ptr<_1d55b0c27_IdentExpr>(_1d55b0c27_IdentExpr{._field_token=_18326_token, ._field_ident=_18326_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::I64> _1d6b30a26_get_range_expr_tokens(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _19131_tokens) {
	jule::I64 _19213_range_n = 0LL;;
	jule::I64 _19313_i = (_19131_tokens.len() - 1LL);;
	for (; (_19313_i >= 0LL); (_19313_i)--) {
		{
			jule::Ptr<_1ee538d51_Token> _19513_tok = _19131_tokens[_19313_i];;
			if ((_19513_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _19513_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1d9342774:;
						{
							(_19213_range_n)++;
						}
					}
					else {
						_case_begin_1d9343137:;
						{
							(_19213_range_n)--;
						}
					}
					_match_end_1d9342e28:;
				};
			};
			if ((_19213_range_n == 0LL)) {
				return std::make_tuple(_19131_tokens.slice(0LL,_19313_i),_19213_range_n);
			};
		}
	_iter_next_1d934207b:;
	}
	_iter_end_1d934207b:;;
	return std::make_tuple(nullptr,_19213_range_n);
}



inline jule::Bool _1d6b3b37d_check_assign_tokens(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_1ee53d3e9_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1d93db785:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d93dc3ac:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1d93dc687:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1d93dc478:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1d93db785;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _1ee53d938_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1d93db785:;
			++it;
			goto _iter_begin_1d93db785;
		}
		_iter_end_1d93db785:;
	};
	return false;
}



inline _21868a483_Log _1d6b3c26e_make_err(jule::I64 _5213_row, jule::I64 _5223_col, jule::Ptr<_1ee53e1db_File>& _5234_f, jule::Str _5244_fmt, jule::Slice<jule::Any> _5257_args) {
	return _21868a483_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_5213_row, ._field_column=_5223_col, ._field_path=_5234_f.get()._field_path, ._field_text=_21868a8c3_logf(_5244_fmt,jule::Any(_5257_args)), };
}



inline jule::Slice<jule::Ptr<_1ee538d51_Token>> _1d6b3c714_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1ee538d51_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1ee538d51_Token> _769_tok = _7163_tokens[_7115_i];;
	if (((_769_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_769_tok.get()._field_kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8213_range_n = 1LL;;
	jule::I64 _839_start = _7115_i;;
	for (; ((_8213_range_n != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _8513_token = _7163_tokens[_7115_i];;
			if ((_8513_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8513_token.get()._field_kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1d93e36b0:;
						{
							(_8213_range_n)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1d93e3737:;
						{
							(_8213_range_n)--;
						}
					}
					_match_end_1d93e347e:;
				};
			};
		}
	_iter_next_1d93e1e72:;
	}
	_iter_end_1d93e1e72:;;
	return _7163_tokens.slice(_839_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::Slice<jule::Ptr<_1ee538d51_Token>>> _1d6b3c9ab_range_last(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _10620_tokens) {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _10640_cutted = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _10658_cut = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	if ((_10620_tokens.len() == 0LL)) {
		_10640_cutted = _10620_tokens;
		_10658_cut = nullptr;
		return std::make_tuple(_10640_cutted,_10658_cut);
	} else if ((_10620_tokens[(_10620_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10640_cutted = _10620_tokens;
		_10658_cut = nullptr;
		return std::make_tuple(_10640_cutted,_10658_cut);
	};
	jule::I64 _11313_brace_n = 0LL;;
	jule::I64 _11413_i = (_10620_tokens.len() - 1LL);;
	for (; (_11413_i >= 0LL); (_11413_i)--) {
		{
			jule::Ptr<_1ee538d51_Token> _11613_token = _10620_tokens[_11413_i];;
			if ((_11613_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11613_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1d93e6d67:;
						{
							(_11313_brace_n)++;
							goto _iter_next_1d93e4716;
						}
					}
					else {
						_case_begin_1d93e776e:;
						{
							(_11313_brace_n)--;
						}
					}
					_match_end_1d93e7560:;
				};
			};
			if ((_11313_brace_n == 0LL)) {
				_10640_cutted = _10620_tokens.slice(0LL,_11413_i);
				_10658_cut = _10620_tokens.slice(_11413_i);
				return std::make_tuple(_10640_cutted,_10658_cut);
			};
		}
	_iter_next_1d93e4716:;
	}
	_iter_end_1d93e4716:;;
	_10640_cutted = _10620_tokens;
	_10658_cut = nullptr;
	return std::make_tuple(_10640_cutted,_10658_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>,jule::Slice<_21868a483_Log>> _1d6b3ce1d_parts_kind(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _13820_tokens, jule::Str _13838_kind, jule::Bool _13855_expr_must) {
	if ((_13820_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _14313_parts = nullptr;;
	jule::Slice<_21868a483_Log> _14413_errors = nullptr;;
	jule::I64 _14613_range_n = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto &expr = _13820_tokens;
		auto it = expr.begin();
		_iter_begin_1d93eae59:;
		if (it != expr.end()) {
			jule::I64 _1489_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _14812_token = *it;
			{
				if ((_14812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14812_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d93ebe9e:;
							{
								(_14613_range_n)++;
								goto _iter_next_1d93eae59;
							}
						}
						else {
							_case_begin_1d93ec279:;
							{
								(_14613_range_n)--;
							}
						}
						_match_end_1d93ec06a:;
					};
				};
				if ((_14613_range_n > 0LL)) {
					goto _iter_next_1d93eae59;
				};
				if ((_14812_token.get()._field_kind == _13838_kind)) {
					if ((_13855_expr_must && ((_1489_i - _14713_last) <= 0LL))) {
						_21868a483_Log _16721_err = _1d6b3c26e_make_err(_14812_token.get()._field_row,_14812_token.get()._field_column,_14812_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14413_errors = jule::alloc_for_append(_14413_errors,1);_14413_errors.__push(_16721_err);;
					};
					_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13820_tokens.slice(_14713_last,_1489_i));;
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_1d93eae59:;
			++it;
			_1489_i++;
			goto _iter_begin_1d93eae59;
		}
		_iter_end_1d93eae59:;
	};
	if ((_14713_last < _13820_tokens.len())) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13820_tokens.slice(_14713_last));;
	} else if ((!(_13855_expr_must))) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(jule::Slice<jule::Ptr<_1ee538d51_Token>>());;
	};
	return std::make_tuple(_14313_parts,_14413_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>>,jule::Slice<_21868a483_Log>> _1d6b3d308_parts(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _19015_tokens, jule::U64 _19033_id, jule::Bool _19046_expr_must) {
	if ((_19015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ee538d51_Token>>> _19513_parts = nullptr;;
	jule::Slice<_21868a483_Log> _19613_errors = nullptr;;
	jule::I64 _19813_range_n = 0LL;;
	jule::I64 _19913_last = 0LL;;
	{
		auto &expr = _19015_tokens;
		auto it = expr.begin();
		_iter_begin_1d9402999:;
		if (it != expr.end()) {
			jule::I64 _2009_i = it - expr.begin();
			jule::Ptr<_1ee538d51_Token> _20012_token = *it;
			{
				if ((_20012_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _20012_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d94039de:;
							{
								(_19813_range_n)++;
								goto _iter_next_1d9402999;
							}
						}
						else {
							_case_begin_1d9403cb9:;
							{
								(_19813_range_n)--;
							}
						}
						_match_end_1d9403aaa:;
					};
				};
				if ((_19813_range_n > 0LL)) {
					goto _iter_next_1d9402999;
				};
				if ((_20012_token.get()._field_id == _19033_id)) {
					if ((_19046_expr_must && ((_2009_i - _19913_last) <= 0LL))) {
						_21868a483_Log _21921_err = _1d6b3c26e_make_err(_20012_token.get()._field_row,_20012_token.get()._field_column,_20012_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19613_errors = jule::alloc_for_append(_19613_errors,1);_19613_errors.__push(_21921_err);;
					};
					_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last,_2009_i));;
					_19913_last=static_cast<jule::I64>((_2009_i + 1LL));
				};
			}
			_iter_next_1d9402999:;
			++it;
			_2009_i++;
			goto _iter_begin_1d9402999;
		}
		_iter_end_1d9402999:;
	};
	if ((_19913_last < _19015_tokens.len())) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last));;
	} else if ((!(_19046_expr_must))) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(jule::Slice<jule::Ptr<_1ee538d51_Token>>());;
	};
	return std::make_tuple(_19513_parts,_19613_errors);
}



inline jule::Str _1d6b3d5c2_get_close_kind_of_brace(jule::Str _23628_left) {
	{
		auto &_match_expr{ _23628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1d9407020:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1d9407086:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1d940710d:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1d9406e65:;
			{
				return jule::Str();
			}
		}
		_match_end_1d9402a87:;
	};
}



inline _21868a483_Log _1d6b3d98a_compiler_err(jule::Ptr<_1ee538d51_Token>& _24918_token, jule::Str& _24934_fmt, jule::Slice<jule::Any> _24947_args) {
	return _21868a483_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_24918_token.get()._field_row, ._field_column=_24918_token.get()._field_column, ._field_path=_24918_token.get()._field_file.get()._field_path, ._field_text=_21868a8c3_logf(_24934_fmt,jule::Any(_24947_args)), ._field_line=_1ee5403b8_get_row(_24918_token.get()._field_file.ptr(), _24918_token.get()._field_row), };
}



inline void _1d6b3ddec_push_suggestion(_21868a483_Log* _26031_log, jule::Str _26042_fmt, jule::Slice<jule::Any> _26055_args) {
	_26031_log->_field_suggestion=_21868a8c3_logf(_26042_fmt,jule::Any(_26055_args));
}



inline jule::Str _1d6b3e194_tokstoa(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _26413_tokens) {
	jule::I64 _26513_n = 0LL;;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1d940a782:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> &_26612_token = *it;
			{
				_26513_n+=_26612_token.get()._field_kind.len();
			}
			_iter_next_1d940a782:;
			++it;
			goto _iter_begin_1d940a782;
		}
		_iter_end_1d940a782:;
	};
	jule::Str _26913_s = jule::Str::alloc(_26513_n);;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1d940b453:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> &_27012_token = *it;
			{
				_26913_s+=_27012_token.get()._field_kind;
			}
			_iter_next_1d940b453:;
			++it;
			goto _iter_begin_1d940b453;
		}
		_iter_end_1d940b453:;
	};
	return _26913_s;
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b4ed75_build_void_type(void) {
	return jule::new_ptr<_1d55a968d_TypeDecl>();
}



inline jule::Ptr<_1d55a968d_TypeDecl> _1d6b500d9_build_prim_type(jule::Ptr<_1ee538d51_Token> _2324_t) {
	return jule::new_ptr<_1d55a968d_TypeDecl>(_1d55a968d_TypeDecl{._field_token=_2324_t, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d55a9c54_IdentTypeDecl>(_1d55a9c54_IdentTypeDecl{._field_token=_2324_t, ._field_ident=_2324_t.get()._field_kind, }))});
}



inline std::tuple<jule::Slice<jule::Ptr<_1ee538d51_Token>>,jule::I64> _1d6b5042a_split_map_range(jule::Slice<jule::Ptr<_1ee538d51_Token>>& _3625_tokens, jule::I64& _3648_i) {
	jule::Slice<jule::Ptr<_1ee538d51_Token>> _3658_range_tokens = jule::Slice<jule::Ptr<_1ee538d51_Token>>();
	jule::I64 _3682_colon = jule::I64();
	_3682_colon=-1LL;
	jule::I64 _3813_range_n = 0LL;;
	jule::I64 _399_start = _3648_i;;
	for (; (_3648_i < _3625_tokens.len()); (_3648_i)++) {
		{
			jule::Ptr<_1ee538d51_Token> _4113_token = _3625_tokens[_3648_i];;
			if ((_4113_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4113_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1d9570694:;
						{
							(_3813_range_n)++;
							goto _iter_next_1d956e6d7;
						}
					}
					else {
						_case_begin_1d957109b:;
						{
							(_3813_range_n)--;
						}
					}
					_match_end_1d9570d8c:;
				};
			};
			if ((_3813_range_n == 0LL)) {
				if (((_399_start + 1LL) > _3648_i)) {
					return std::make_tuple(_3658_range_tokens,_3682_colon);
				};
				_3658_range_tokens=_3625_tokens.slice((_399_start + 1LL),_3648_i);
				goto _iter_end_1d956e6d7;
			} else if ((_3813_range_n != 1LL)) {
				goto _iter_next_1d956e6d7;
			};
			if (((_3682_colon == -1LL) && (_4113_token.get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_3682_colon=static_cast<jule::I64>(((_3648_i - _399_start) - 1LL));
			};
		}
	_iter_next_1d956e6d7:;
	}
	_iter_end_1d956e6d7:;;
	return std::make_tuple(_3658_range_tokens,_3682_colon);
}



inline std::tuple<jule::Bool,jule::Bool> _1d6464e1b_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1d95c494b:;
			{
				_925_ok=_21868de7b_is_windows(_1ed63cc7a_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1d95c4550:;
			{
				_925_ok=_21868e267_is_darwin(_1ed63cc7a_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1d95c4330:;
			{
				_925_ok=_21868e50e_is_linux(_1ed63cc7a_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1d95c4396:;
			{
				_925_ok=_218690114_is_unix(_1ed63cc7a_OS);
			}
		}
		else {
			_case_begin_1d95c3b04:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1d95c4011:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1d645eda0_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1d95c6b18:;
			{
				_3027_ok=_21868e82d_is_i386(_218695988_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1d95c68e8:;
			{
				_3027_ok=_21868eac5_is_amd64(_218695988_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1d95c695e:;
			{
				_3027_ok=_21868ed6c_is_arm64(_218695988_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1d95c69c5:;
			{
				_3027_ok=_218690730_is_64bit(_218695988_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1d95c6a3b:;
			{
				_3027_ok=_218690488_is_32bit(_218695988_ARCH);
			}
		}
		else {
			_case_begin_1d95c61bc:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1d95c65c9:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1d645eed2_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_21863330a_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _218632cbb_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _21862bb2d_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _1d6464e1b_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _1d645eda0_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_21862bb2d_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _1d6464e1b_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _1d645eda0_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _1d645eda0_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _1d6464e1b_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _1d6464e1b_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _1d647997a_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_1ed63cc7a_OS);;
	if (_218690114_is_unix(_1ed63cc7a_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1d6479bcd_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_218695988_ARCH);;
	if (_218690730_is_64bit(_218695988_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_218690488_is_32bit(_218695988_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1d6479e86_init_vars(jule::Slice<jule::Str>& _5519_vars, _1d647966c_CompileInfo& _5533_info) {
	_1d647997a_set_os_vars(_5519_vars);
	_1d6479bcd_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d95d34a4:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d95d351a:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1d95d3790:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d95d4692:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d95d43d9:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d95d4450:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1d95d463c:;
	};
}



inline jule::Slice<jule::U8> _1d65513e2_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__2316d76d7_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1ed6533bc_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _21868a483_Log _1d656ccb0_flat_compiler_err(jule::Str _4122_text) {
	return _21868a483_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text, };
}



inline void _1d66cee99_push_passes(jule::Ptr<_1d6277327_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9616d45:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1d9617829:;
					if (it != expr.end()) {
						_1d5682128_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1d9617829;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1d9618671:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1d9617829;
										};
									}
									_iter_next_1d9618671:;
									++it;
									goto _iter_begin_1d9618671;
								}
								_iter_end_1d9618671:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1d9617829:;
						++it;
						goto _iter_begin_1d9617829;
					}
					_iter_end_1d9617829:;
				};
			}
			_iter_next_1d9616d45:;
			++it;
			goto _iter_begin_1d9616d45;
		}
		_iter_end_1d9616d45:;
	};
}



inline jule::Slice<jule::Str> _1d66e6cb3_get_all_unique_passes(jule::Ptr<_1d6277327_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1d62743bd_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1d66cee99_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1d9619ac3:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1d66cee99_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1d9619ac3:;
			++it;
			goto _iter_begin_1d9619ac3;
		}
		_iter_end_1d9619ac3:;
	};
	return _13013_passes;
}



inline _1d647966c_CompileInfo _1d66eab0d_build_compile_info(void) {
	_1d647966c_CompileInfo _14313_info = _1d647966c_CompileInfo{._field_prod=_2307697ae_PRODUCTION, ._field_test=_230768c86_TEST, };;
	{
		auto &_match_expr{ _23076803d_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d961b432:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d961b498:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1d961b3aa:;
	};
	{
		auto &_match_expr{ _230768516_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d9619cc1:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d961b850:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d961b8b6:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1d961b71d:;
	};
	return _14313_info;
}



inline void _1d6c4a5d0_eliminate_defines(jule::Ptr<_1d6998e55_IR>& _28531_ir) {
	jule::Ptr<_1d6c196d1_ObjectDeadCode> _28613_ocd = static__1d6c19acc_new(_28531_ir);;
	_1d6c4a316_elimanate(_28613_ocd);
}



inline jule::Ptr<_1d5575c86_Directive> _1d6c4a965_find_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _29124_directives, jule::Str _29155_tag) {
	{
		auto &expr = _29124_directives;
		auto it = expr.begin();
		_iter_begin_1d965db7d:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_tag.get()._field_kind == _29155_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1d965db7d:;
			++it;
			goto _iter_begin_1d965db7d;
		}
		_iter_end_1d965db7d:;
	};
	return nullptr;
}



inline jule::Bool _1d6c4aca6_has_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _30119_directives, jule::Str _30150_tag) {
	return (_1d6c4a965_find_directive(_30119_directives,_30150_tag) != nullptr);
}



inline void _1d6c4e903_eliminate_dead_code_of_scope(jule::Ptr<_1d6255beb_Scope> _24137_s) {
	jule::Slice<jule::Ptr<_1d625814e_Label>> _2429_labels = jule::Slice<jule::Ptr<_1d625814e_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1d625843a_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1d625843a_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1d6c4b9ee_ScopeDeadCode> _24413_sdc = jule::new_ptr<_1d6c4b9ee_ScopeDeadCode>(_1d6c4b9ee_ScopeDeadCode{._field_s=_24137_s, ._field_stmts=(&(_24137_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1d625814e_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1d625843a_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1d6c4e617_optimize_stmts(_24413_sdc);
	};
}



inline void _1d6c4eb89_eliminate_scope_functions(jule::Slice<jule::Ptr<_1d567a7e7_Fn>>& _25435_funcs) {
	{
		auto &expr = _25435_funcs;
		auto it = expr.begin();
		_iter_begin_1d96a6ed4:;
		if (it != expr.end()) {
			jule::Ptr<_1d567a7e7_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1d96a7611:;
					if (it != expr.end()) {
						jule::Ptr<_1d567d498_FnIns> _25621_ins = *it;
						{
							_1d6c4e903_eliminate_dead_code_of_scope(_25621_ins.get()._field_scope);
						}
						_iter_next_1d96a7611:;
						++it;
						goto _iter_begin_1d96a7611;
					}
					_iter_end_1d96a7611:;
				};
			}
			_iter_next_1d96a6ed4:;
			++it;
			goto _iter_begin_1d96a6ed4;
		}
		_iter_end_1d96a6ed4:;
	};
}



inline void _1d6c4eddc_eliminate_functions_scope_package(jule::Ptr<_1d6277327_Package>& _26243_pkg) {
	{
		auto &expr = _26243_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d96a7ac8:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _26317_f = *it;
			{
				_1d6c4eb89_eliminate_scope_functions(_26317_f.get()._field_funcs);
			}
			_iter_next_1d96a7ac8:;
			++it;
			goto _iter_begin_1d96a7ac8;
		}
		_iter_end_1d96a7ac8:;
	};
}



inline void _1d6c50195_eliminate_scope_package(jule::Ptr<_1d6277327_Package>& _26833_pkg) {
	_1d6c4eddc_eliminate_functions_scope_package(_26833_pkg);
}



inline void _1d6c50382_eliminate_scopes(jule::Ptr<_1d6998e55_IR>& _27330_ir) {
	jule::I64 _27413_i = (_27330_ir.get()._field_used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1d62743bd_ImportInfo> _27617_u = _27330_ir.get()._field_used[_27413_i];;
			if ((!(_27617_u.get()._field_cpp_linked))) {
				_1d6c50195_eliminate_scope_package(_27617_u.get()._field_package);
			};
		}
	_iter_next_1d96a9712:;
	}
	_iter_end_1d96a9712:;;
	_1d6c50195_eliminate_scope_package(_27330_ir.get()._field_main);
}



inline jule::Bool _1d506526a_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _2185eacc8_has_prefix(_39919_f,_218632a24_join(jule::Slice<jule::Str>::make({_1ed63c6d6_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1d50e852e_is_constant_valid_conditional_case(jule::Ptr<_1d6255dd8_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
			_case_begin_1d972ac4a:;
			{
				jule::Ptr<_1d561288e_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1d561288e_Const>();;
				return (_1d566d862_is_bool(_40613_c.ptr()) && _1d566b4b9_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1d972aa91:;
	};
	return false;
}



inline jule::Bool _1d50e98d7_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
			_case_begin_1d972b641:;
			{
				jule::Ptr<_1d561288e_Const> _41513_c = _41225_expr.operator jule::Ptr<_1d561288e_Const>();;
				return (_1d566d862_is_bool(_41513_c.ptr()) && (!(_1d566b4b9_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d567337d_BinopExprModel>>()) {
			_case_begin_1d972b6a7:;
			{
				jule::Ptr<_1d567337d_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1d567337d_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1d50e98d7_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1d50e98d7_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1d972bb3b:;
	};
	return false;
}



inline jule::Bool _1d5108066_is_constant_valid_match_case(jule::Ptr<_1d625a1a6_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d972e688:;
		if (it != expr.end()) {
			jule::Ptr<_1d62e16b0_Data> &_42712_expr = *it;
			{
				if (((_1d62e2073_is_const(_42712_expr.ptr()) && _1d566d862_is_bool(_42712_expr.get()._field_constant.ptr())) && _1d566b4b9_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1d972e688:;
			++it;
			goto _iter_begin_1d972e688;
		}
		_iter_end_1d972e688:;
	};
	return false;
}



inline jule::Bool _1d511c0be_is_unreachable_conditional_case(jule::Ptr<_1d6255dd8_If>& _43537_i) {
	return _1d50e98d7_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1d512885b_is_unreachable_match_case(jule::Ptr<_1d625a1a6_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1d973128e:;
		if (it != expr.end()) {
			jule::Ptr<_1d62e16b0_Data> &_44012_expr = *it;
			{
				if ((!(_1d50e98d7_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1d973128e:;
			++it;
			goto _iter_begin_1d973128e;
		}
		_iter_end_1d973128e:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1d50ea90a_check_for_bit_shift_opt(jule::Ptr<_1d5654dba_OperandExprModel>& _42729_l, jule::Ptr<_1d5654dba_OperandExprModel>& _42752_r) {
	jule::Bool _42776_ok = jule::Bool();
	jule::U64 _42786_x = jule::U64();
	if (((!(_1d6254bd9_is_int(_1d631c2ce_to_str(_42729_l.get()._field_kind.ptr())))) || (!(_1d6254bd9_is_int(_1d631c2ce_to_str(_42752_r.get()._field_kind.ptr())))))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	{
		auto &_match_expr{ _42752_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d561288e_Const>>()) {
			_case_begin_1d976a372:;
			{
				goto _match_end_1d976ad34;
			}
		}
		else {
			_case_begin_1d976ae77:;
			{
				_42776_ok = false;
				_42786_x = 0LLU;
				return std::make_tuple(_42776_ok,_42786_x);
			}
		}
		_match_end_1d976ad34:;
	};
	_42786_x=static_cast<jule::U64>(_1d566be6a_as_u64(_42752_r.get()._field_model.operator jule::Ptr<_1d561288e_Const>().ptr()));
	if (((_42786_x == 0LLU) || ((_42786_x & 1LL) != 0LLU))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	jule::F64 _4419_j = _1d619460c_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42786_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	_42776_ok = true;
	_42786_x = _4429_z;
	return std::make_tuple(_42776_ok,_42786_x);
}



inline void _1d52beccc_push_opt_level(jule::I64 _3223_level) {
	_230783bc4_COPY=(_3223_level >= static_cast<jule::I64>(1LL));
	_230769902_DEADCODE=(_3223_level >= static_cast<jule::I64>(1LL));
	_23094dae7_APPEND=(_3223_level >= static_cast<jule::I64>(1LL));
	_230953c51_MATH=(_3223_level >= static_cast<jule::I64>(1LL));
	_2309616ba_ACCESS=(_3223_level >= static_cast<jule::I64>(1LL));
	_23095be8a_INLINE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1d4e1203a_PTR=(_3223_level >= static_cast<jule::I64>(1LL));
	_1d4e1d2dd_COND=(_3223_level >= static_cast<jule::I64>(1LL));
}



inline void _1d6c28613_detect_enabled(void) {
	_1d6b55e03_expr_enabled=(((_1d4e1203a_PTR || _230953c51_MATH) || _2309616ba_ACCESS) || _1d4e1d2dd_COND);
	_1d6b57058_scope_enabled=((_1d4e1d2dd_COND || _23094dae7_APPEND) || _230783bc4_COPY);
}



inline void _1d6c6d2b2_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1ed6533bc_exit(1LL);
}



inline jule::U64 _1d7355877_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1d7355bb8_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1d735604d_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1d97e8367:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d97e84bb:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1d97e8532:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d97e8598:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d97e860e:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1d97e8675:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1d97e86db:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1d97e8752:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1d97e87b8:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1d97e882e:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1d97e88a6:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1d97e8312:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1d72ceca7_is_copy_optimizable(jule::Ptr<_1d62e16b0_Data>& _74125_expr) {
	if ((!(_74125_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74125_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d5674b87_SlicingExprModel>>()) {
			_case_begin_1d987cd25:;
			{
				return false;
			}
		}
		_match_end_1d987d342:;
	};
	return true;
}



inline jule::Bool _1d72d015e_is_iter_copy_optimizable(jule::Ptr<_1d62e16b0_Data>& _75230_expr, jule::Ptr<_1d6298ea3_Var>& _75244_v) {
	if (((!(_75230_expr.get()._field_lvalue)) && (!(_1d631d2d0_mutable(_75230_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_75244_v.get()._field_mutable)) && (!(_75230_expr.get()._field_mutable)));
}



inline jule::Str _1d72dd26b_decompose_common_esq(jule::U8 _114125_b) {
	{
		auto &_match_expr{ _114125_b };
		
		if (_match_expr == '\\') {
			_case_begin_1d992e558:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d992e5be:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d992e822:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1d992e888:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1d992e8ee:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1d992e965:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1d992e9dc:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1d992ea64:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1d992eadb:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1d992eb63:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1d992e3e3:;
			{
				return jule::Str();
			}
		}
		_match_end_1d992e338:;
	};
}



inline jule::Str _1d72dd557_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1d72dd26b_decompose_common_esq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1d61c2959_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1d72dd7ee_cstr_bytes(jule::Slice<jule::U8> _118815_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118815_bytes.len());;
	{
		auto &expr = _118815_bytes;
		auto it = expr.begin();
		_iter_begin_1d9934cab:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1d72dd557_sbtoa(_119012_b);
			}
			_iter_next_1d9934cab:;
			++it;
			goto _iter_begin_1d9934cab;
		}
		_iter_end_1d9934cab:;
	};
	return _118913_lit;
}



inline jule::Str _1d72ddb1d_cstr_lit(jule::Slice<jule::U8> _119613_bytes) {
	return ((jule::Str("\"", 1) + _1d72dd7ee_cstr_bytes(_119613_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1d72dde2b_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1d72de1c3_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1d72de46a_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1d5ae8ca9_fmt_float(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_21862c9b9_contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1d72de1c3_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1d9939420:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1d99394a8:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1d99392ee:;
	};
	jule::Str _12249_fmt = _1d61c2a8b_fmt_int(_12169_x,10LL);;
	if (_218690730_is_64bit(jule::Str("arm64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1d72de46a_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1d993b246:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1d993b136:;
	};
	jule::Str _12379_fmt = _1d61c2959_fmt_uint(_12319_x,10LL);;
	if (_218690730_is_64bit(jule::Str("arm64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1d72de822_is_forwarded(jule::Ptr<_1d6255beb_Scope>& _124418_s) {
	jule::Any _12459_last = _124418_s.get()._field_stmts[(_124418_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1d62e16b0_Data>>()) {
			_case_begin_1d993d523:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1d62e16b0_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1d5677162_BuiltinErrorCallExprModel>>()) {
						_case_begin_1d993e139:;
						{
							return true;
						}
					}
					else {
						_case_begin_1d993e0c3:;
						{
							return false;
						}
					}
					_match_end_1d993dd09:;
				};
			}
		}
		else {
			_case_begin_1d993d468:;
			{
				return true;
			}
		}
		_match_end_1d993d413:;
	};
}



inline jule::Bool _1d72deadb_is_builtin_call_has_debuginf(jule::Ptr<_1d567400a_FnCallExprModel>& _125934_m) {
	if ((!(_1d567e1e1_is_builtin(_125934_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125934_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1d5675a45_CommonSubIdentExprModel>>()) {
			_case_begin_1d993edc6:;
			{
				jule::Ptr<_1d5675a45_CommonSubIdentExprModel> _126513_csie = _125934_m.get()._field_expr.operator jule::Ptr<_1d5675a45_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1d993daa6:;
			{
				return false;
			}
		}
		_match_end_1d993da51:;
	};
}



inline void _1d735adee_iter_files(jule::Ptr<_1d6277327_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_1d62db952_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1d9a7b210:;
		if (it != expr.end()) {
			jule::Ptr<_1d62db952_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_1d9a7b210:;
			++it;
			goto _iter_begin_1d9a7b210;
		}
		_iter_end_1d9a7b210:;
	};
}



inline void _1d735b152_prepare_structure(jule::Ptr<_1d5599dba_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1d9a7b919:;
		if (it != expr.end()) {
			jule::Ptr<_1d55c62d1_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1d9a7c60c:;
					if (it != expr.end()) {
						jule::Ptr<_1d567a7e7_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_1d9a7c60c;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1d9a7d3dd:;
								if (it != expr.end()) {
									jule::Ptr<_1d567d498_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_1d567c5c9_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_1d567984b_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d735c10e_CustomType>(_1d735c10e_CustomType{._field_kind=static__1d735d9b2_as_ptr(static__1d7361eb0_kind(_101425_p.get()._field_kind))}), 13)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_1d631bdd3_TypeKind>(_1d631bdd3_TypeKind{._field_kind=jule::Trait<_1d631b9a4_Kind>(jule::new_ptr<_1d735c10e_CustomType>(_1d735c10e_CustomType{._field_kind=static__1d7361eb0_kind(_101425_p.get()._field_kind)}), 13)});
										};
									}
									_iter_next_1d9a7d3dd:;
									++it;
									goto _iter_begin_1d9a7d3dd;
								}
								_iter_end_1d9a7d3dd:;
							};
						}
						_iter_next_1d9a7c60c:;
						++it;
						goto _iter_begin_1d9a7c60c;
					}
					_iter_end_1d9a7c60c:;
				};
			}
			_iter_next_1d9a7b919:;
			++it;
			goto _iter_begin_1d9a7b919;
		}
		_iter_end_1d9a7b919:;
	};
}



inline jule::Str _1d735b3e9_concat_all_parts(jule::Slice<jule::Ptr<_1ee538d51_Token>> _103421_parts) {
	jule::I64 _103513_n = 0LL;;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1d9a7c420:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> &_103612_part = *it;
			{
				_103513_n+=_103612_part.get()._field_kind.len();
			}
			_iter_next_1d9a7c420:;
			++it;
			goto _iter_begin_1d9a7c420;
		}
		_iter_end_1d9a7c420:;
	};
	if ((_103513_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104213_s = jule::Str::alloc(_103513_n);;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1d9a81dc5:;
		if (it != expr.end()) {
			jule::Ptr<_1ee538d51_Token> &_104312_p = *it;
			{
				_104213_s+=_104312_p.get()._field_kind;
			}
			_iter_next_1d9a81dc5:;
			++it;
			goto _iter_begin_1d9a81dc5;
		}
		_iter_end_1d9a81dc5:;
	};
	return _104213_s;
}



inline jule::Ptr<_1d5575c86_Directive> _1d7364820_find_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _32924_directives, jule::Str _32955_tag) {
	{
		auto &expr = _32924_directives;
		auto it = expr.begin();
		_iter_begin_1d9b51291:;
		if (it != expr.end()) {
			jule::Ptr<_1d5575c86_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_tag.get()._field_kind == _32955_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1d9b51291:;
			++it;
			goto _iter_begin_1d9b51291;
		}
		_iter_end_1d9b51291:;
	};
	return nullptr;
}



inline jule::Bool _1d7364ba5_has_directive(jule::Slice<jule::Ptr<_1d5575c86_Directive>>& _33919_directives, jule::Str _33950_tag) {
	return (_1d7364820_find_directive(_33919_directives,_33950_tag) != nullptr);
}



inline void _1ed6539e9_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _1ed653b2b_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1ed6539e9_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1ed65390b_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _1ed65390b_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1d9bc83d4:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1d9bc83d4:;
			++it;
			goto _iter_begin_1d9bc83d4;
		}
		_iter_end_1d9bc83d4:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1ed65390b_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1d9bca051:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_2185adecd_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1d9bca051:;
			++it;
			_519_i++;
			goto _iter_begin_1d9bca051;
		}
		_iter_end_1d9bca051:;
	};
	jule::outln(_4913_s);
}



inline void _1ed653c5d_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1ed6539e9_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _1ed653d90_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _21868d893_DISTOS;
		auto it = expr.begin();
		_iter_begin_1d9bcd4c7:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1d9bcd4c7:;
			++it;
			goto _iter_begin_1d9bcd4c7;
		}
		_iter_end_1d9bcd4c7:;
	};
	jule::outln(jule::Str());
}



inline void _1ed653ec2_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _21868dc28_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1d9bcdc14:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1d9bcdc14:;
			++it;
			goto _iter_begin_1d9bcdc14;
		}
		_iter_end_1d9bcdc14:;
	};
	jule::outln(jule::Str());
}



inline void _1ed654104_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_1ed6539e9_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1d9bd1e04:;
			{
				_1ed653d90_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1d9bd1ae6:;
			{
				_1ed653ec2_tool_distarch();
			}
		}
		else {
			_case_begin_1d9bd03b9:;
			{
				_1ed6539e9_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1d9bd192b:;
	};
}



inline void _1ed654236_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_1ed6539e9_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _23076803d_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _230768516_CPP_STD));
}



inline void _1ed654478_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_1ed6539e9_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1d9bd64ad:;
			{
				({
					auto except = static__2316d7819_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1ed6539e9_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1d9bd4cd6:;
			{
				_1ed6539e9_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1d9bd604b:;
	};
}



inline jule::Bool _1ed6545aa_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1d9bd7734:;
			{
				_1ed653b2b_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1d9bd779a:;
			{
				_1ed653c5d_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1d9bd7811:;
			{
				_1ed654104_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1d9bd7ee8:;
			{
				_1ed654236_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1d9bd805e:;
			{
				_1ed654478_mod(_15121_args);
			}
		}
		else {
			_case_begin_1d9bd7657:;
			{
				return false;
			}
		}
		_match_end_1d9bd758b:;
	};
	return true;
}



inline void _1ed6546dc_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _23086d022_args();;
	if ((_18713_args.len() < 2LL)) {
		_1ed6546dc_show_info();
		return;;
	};
	if (_1ed6545aa_process_command(_18713_args)) {
		return;;
	};
	_1d739d3e7_compile_command(_18713_args);
}



inline void _1d7297775_init(void) {
	_23076803d_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_2316d7286_File> _1d7368813_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _21863367e_dir(_4817_path);;
	({
		auto except = static__2315d2bdc_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__2318849d8_create(_499_dir);
				if (!except.ok()) {
					_1d6c6d2b2_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2316d75a5_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_1d6c6d2b2_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1d736a408_clear_objects(void) {
	({
		auto except = static__2315d55d5_remove(_1d7365ed6_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2318855aa_remove(_1d736aabd_OUT_DIR);
}



inline void _1d7366b63_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_1ed64e462_Cmd> _7813_cmd = static__1ed64e891_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_21862c678_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _1ed64eb05_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1d9be0440:;
					{
						static__1d6c6ab2d_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1d9be06a4:;
					{
						static__1d6c6ab2d_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1d9be071a:;
					{
						static__1d6c6ab2d_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1d9be0781:;
					{
						static__1d6c6ab2d_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1d9be0583:;
					{
						static__1d6c6ab2d_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1d9be04c8:;
			};
			_1d6c6d2b2_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _23076803d_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1d6c6ab2d_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1d6c6d2b2_throw(jule::Str());
	};
	_1d736a408_clear_objects();
}



inline jule::Bool _1d7268449_is_cpp_source_file(jule::Str _10923_path) {
	jule::I64 _1109_offset = _21862bb2d_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _21867dd7d_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _1d71abdd7_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _230768516_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d9be5599:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d9be5610:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d9be5764:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1d9be5456:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_2307697ae_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1d737250e_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _230768516_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d9be7cd8:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d9be7d4e:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d9be7ea3:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1d9be7b95:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_2307697ae_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1d7365da4_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_1d6998e55_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _2307682a2_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _23076803d_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d9bea6e2:;
			{
				_1d737250e_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d9beac42:;
			{
				_1d71abdd7_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_1d9bea9cd:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1d9beaea6:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1d9beaea6:;
			++it;
			goto _iter_begin_1d9beaea6;
		}
		_iter_end_1d9beaea6:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1d9bec4a2:;
		if (it != expr.end()) {
			jule::Ptr<_1d62743bd_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _1d7268449_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1d9bec4a2:;
			++it;
			goto _iter_begin_1d9bec4a2;
		}
		_iter_end_1d9bec4a2:;
	};
	if ((!(_1d737b56d_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_1d737b56d_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _1d7365ed6_get_compile_path(void) {
	return _218632a24_join(jule::Slice<jule::Str>::make({_1d736aabd_OUT_DIR,_1d736c608_OUT_NAME}));
}



inline void _1d739c4a1_apply_target_independent_optimizations(jule::Ptr<_1d6998e55_IR>& _21048_ir) {
	jule::Ptr<_1d6bbca80_Optimizer> _21213_opt = static__1d6b85c35_new(_21048_ir);;
	_1d6c23b3b_optimize(_21213_opt.ptr());
}



inline void _1d739c5d3_check_compiler_flag(void) {
	{
		auto &_match_expr{ _23076803d_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1d9bee493:;
			{
				_1d6c6d2b2_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d9beec24:;
			{
				if (_2307682a2_COMPILER_PATH.empty()) {
					_2307682a2_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d9beec8a:;
			{
				if (_2307682a2_COMPILER_PATH.empty()) {
					_2307682a2_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1d9beebad:;
			{
				_1d6c6d2b2_throw((jule::Str("invalid option value for --compiler: ", 37) + _23076803d_COMPILER));
			}
		}
		_match_end_1d9bee691:;
	};
}



inline void _1d739c715_check_target_arch(jule::Str _23322_arch) {
	{
		auto &expr = _21868dc28_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1d9c01990:;
		if (it != expr.end()) {
			jule::Str &_23412_distarch = *it;
			{
				if ((_23322_arch == _23412_distarch)) {
					return;;
				};
			}
			_iter_next_1d9c01990:;
			++it;
			goto _iter_begin_1d9c01990;
		}
		_iter_end_1d9c01990:;
	};
	_1d6c6d2b2_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23322_arch));
}



inline void _1d739c847_check_target_os(jule::Str _24220_os) {
	{
		auto &expr = _21868d893_DISTOS;
		auto it = expr.begin();
		_iter_begin_1d9c02be4:;
		if (it != expr.end()) {
			jule::Str &_24312_distos = *it;
			{
				if ((_24220_os == _24312_distos)) {
					return;;
				};
			}
			_iter_next_1d9c02be4:;
			++it;
			goto _iter_begin_1d9c02be4;
		}
		_iter_end_1d9c02be4:;
	};
	_1d6c6d2b2_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24220_os));
}



inline void _1d739c979_check_target_flag(jule::Str& _25123_target) {
	if (_25123_target.empty()) {
		_1d6c6d2b2_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2569_parts = _21862c678_split(_25123_target,jule::Str("-", 1),-1LL);;
	if ((_2569_parts.len() != 2LL)) {
		_1d6c6d2b2_throw((jule::Str("--target: undefined platform target format: ", 44) + _25123_target));
	};
	jule::Str _26110_os = _2569_parts[0LL];;
	jule::Str _26114_arch = _2569_parts[1LL];;
	std::tie(_26110_os,_26114_arch) = std::make_tuple(_2569_parts[0LL],_2569_parts[1LL]);
	if ((_26110_os != jule::Str("native", 6))) {
		_1d739c847_check_target_os(_26110_os);
		_1ed63cc7a_OS=_26110_os;
	};
	if ((_26114_arch != jule::Str("native", 6))) {
		_1d739c715_check_target_arch(_26114_arch);
		_218695988_ARCH=_26114_arch;
	};
	_1d624a0ec_update_target();
}



inline void _1d739caab_check_opt_flag(jule::Str& _27420_opt) {
	if (_27420_opt.empty()) {
		_1d6c6d2b2_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27420_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1d9c07446:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1d9c07996:;
			{
				_1d52beccc_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1d9c07237:;
			{
				_1d6c6d2b2_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27420_opt));
			}
		}
		_match_end_1d9c071d2:;
	};
}



inline void _1d739ce1e_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _230768516_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d9c07a0c:;
			{
				goto _match_end_1d9c08810;
			}
		}
		else {
			_case_begin_1d9c08425:;
			{
				_1d6c6d2b2_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _230768516_CPP_STD));
			}
		}
		_match_end_1d9c08810:;
	};
}



inline jule::Slice<jule::Str> _1d739d051_check_flags(jule::Slice<jule::Str>& _29917_args) {
	jule::Str _30013_opt = jule::Str("L0", 2);;
	jule::Str _30113_target = jule::Str("native-native", 13);;
	jule::Ptr<_1d73986bc_FlagSet> _30313_fs = static__1d73989a8_new();;
	_1d9c0ae50_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30013_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1d9c0ae50_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30113_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1d9c0ae50_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d737b56d_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23076877a_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2307689de_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1d9c0ae50_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23076803d_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1d9c0ae50_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2307682a2_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2307697ae_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_230769083_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2307694a1_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1d9c0ae50_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_230768516_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_230783bc4_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_230769902_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23094dae7_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_230953c51_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2309616ba_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23095be8a_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d4e1203a_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1d9c14a5d_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d4e1d2dd_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32513_content = ({
		auto except = _1d73997bc_parse(_30313_fs.ptr(), _29917_args);
		(except.ok()) ? (except.result) : ({
			_1d6c6d2b2_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1d739c5d3_check_compiler_flag();
	_1d739ce1e_check_cpp_std_flag();
	_1d739c979_check_target_flag(_30113_target);
	_1d739caab_check_opt_flag(_30013_opt);
	return _32513_content;
}



inline void _1d739d183_setup_sema_flags(jule::I64& _33826_flags) {
	if (_23076877a_SHADOWING) {
		_33826_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1d6998e55_IR> _1d739d2b5_build_ir(jule::Slice<jule::Str>& _34414_args) {
	jule::Slice<jule::Str> _3459_content = _1d739d051_check_flags(_34414_args);;
	jule::I64 _34713_sema_flags = static_cast<jule::I64>(0LL);;
	_1d739d183_setup_sema_flags(_34713_sema_flags);
	if ((_3459_content.len() == 0LL)) {
		_1d6c6d2b2_throw(_21868a8c3_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3459_content.len() > 1LL)) {
		_1d6c6d2b2_throw((jule::Str("undefined content: ", 19) + _3459_content[1LL]));
	};
	jule::Str _35514_path;;
	jule::Bool _35520_ok;;
	std::tie(_35514_path,_35520_ok) = _218633063_abs(_3459_content[0LL]);
	if ((!(_35520_ok))) {
		_1d6c6d2b2_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2316d7d8b_Status> _3619_inf = ({
		auto except = static__2315d2bdc_of(_1ed63c6d6_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1d6c6d2b2_throw(_21868a8c3_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_2316d7d8b_Status>();});
	});;
	if ((!(_2316d8078_is_dir(_3619_inf.ptr())))) {
		_1d6c6d2b2_throw(_21868a8c3_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1d6998e55_IR> _36914_ir;;
	jule::Slice<_21868a483_Log> _36918_logs;;
	std::tie(_36914_ir,_36918_logs) = static__1d640110a_build(_35514_path,_34713_sema_flags);
	if (((_36914_ir == nullptr) && (_36918_logs == nullptr))) {
		_1d6c6d2b2_throw(_21868a8c3_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35514_path)})));
	};
	if ((_36918_logs != nullptr)) {
		static__1d6c6c844_print_logs(_36918_logs);
		_1d6c6d2b2_throw(jule::Str());
	};
	return _36914_ir;
}



inline void _1d739d3e7_compile_command(jule::Slice<jule::Str>& _38425_args) {
	_38425_args=_38425_args.slice(1LL);
	if ((_38425_args[0LL] == jule::Str("test", 4))) {
		_230768c86_TEST=true;
		_38425_args=_38425_args.slice(1LL);
	};
	jule::Ptr<_1d6998e55_IR> _39013_ir = _1d739d2b5_build_ir(_38425_args);;
	;
	if ((!(_230768c86_TEST))) {
		jule::Ptr<_1d567a7e7_Fn> _39517_main = _1d6278acb_find_fn(_39013_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39517_main == nullptr)) {
			_1d6c6d2b2_throw(_21868a8c3_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1d739c4a1_apply_target_independent_optimizations(_39013_ir);
	_1d66d11cb_order(_39013_ir.ptr());
	jule::Str _40610_compiler;;
	jule::Str _40620_compiler_cmd;;
	std::tie(_40610_compiler,_40620_compiler_cmd) = _1d7365da4_gen_compile_cmd(_1d7365ed6_get_compile_path(),_39013_ir);
	jule::Ptr<_1d735658c_ObjectCoder> _40813_oc = static__1d7339570_new(_39013_ir,_1d73561b3_SerializationInfo{._field_compiler=_40610_compiler, ._field_compiler_command=_40620_compiler_cmd});;
	if (_230768c86_TEST) {
		jule::Ptr<_1d72e1604_TestCoder> _41317_tc = static__1d72e1a77_new(_40813_oc);;
		_1d72e2ca9_serialize(_41317_tc);
	} else {
		_1d735aa8b_serialize(_40813_oc);
	};
	jule::Str _4199_path = _1d7365ed6_get_compile_path();;
	jule::Ptr<_2316d7286_File> _42013_file = _1d7368813_open_output(_4199_path);;
	({
		auto except = _231612678_write(_42013_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40813_oc.get()._field_obj));
		if (!except.ok()) {
			_1d6c6d2b2_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2316d7a7d_close(_42013_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:424:5"));
	});
	if ((!(_2307689de_TRANSPILATION))) {
		_1d7366b63_compile_ir(_40610_compiler,_40620_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_21869cb16_init();
	_1d624a262_init();
	_1d7297775_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}